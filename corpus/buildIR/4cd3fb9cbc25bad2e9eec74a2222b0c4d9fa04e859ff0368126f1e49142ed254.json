{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/apple.appstore/openapi.yaml",
			"byteSize": 803918,
			"content": "openapi: 3.0.1\nx-important: 'IMPORTANT:  This OpenAPI Specification is only for use in accordance with the terms of the Apple Developer Program License Agreement and terms for the use of the App Store Connect API.  You may not use this OpenAPI Specification unless you have agreed to the Apple Developer Program License Agreement, and You acknowledge and agree that the App Store Connect API (and use of this Specification in connection therewith) is for internal development, testing and reporting purposes within your team and not to provide services to any third parties or for any other use.'\nexternalDocs:\n  description: App Store Connect API Documentation\n  url: 'https://developer.apple.com/documentation/appstoreconnectapi'\ninfo:\n  x-ballerina-display:\n    label: Apple App Store\n    iconPath: \"icon.png\"\n  description: \u003e-\n    This is a generated connector for [App Store Connect API v1.4.1](https://developer.apple.com/documentation/appstoreconnectapi) OpenAPI Specification.\n\n    The App Store Connect API enables the automation of actions you take in App Store Connect. \n  x-ballerina-init-description: \u003e-\n    The connector initialization requires setting the API credentials.\n\n    Create a [App Store Connect account](https://appstoreconnect.apple.com/) \n    and obtain tokens following [this guide](https://developer.apple.com/documentation/appstoreconnectapi/creating_api_keys_for_app_store_connect_api).\n  title: App Store Connect API\n  version: 1.4.1\n  x-platform: app_store_connect_api\nservers:\n  - url: 'https://api.appstoreconnect.apple.com/'\npaths:\n  '/v1/ageRatingDeclarations/{id}':\n    patch:\n      tags:\n        - AgeRatingDeclarations\n      operationId: ageRatingDeclarations-update_instance\n      requestBody:\n        description: AgeRatingDeclaration representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AgeRatingDeclarationUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single AgeRatingDeclaration\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AgeRatingDeclarationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/appCategories:\n    get:\n      tags:\n        - AppCategories\n      operationId: appCategories-get_collection\n      parameters:\n        - name: 'filter[platforms]'\n          in: query\n          description: filter by attribute 'platforms'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - IOS\n                - MAC_OS\n                - TV_OS\n          style: form\n          explode: false\n          required: false\n        - name: 'exists[parent]'\n          in: query\n          description: filter by existence or non-existence of related 'parent'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appCategories]'\n          in: query\n          description: the fields to include for returned resources of type appCategories\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - parent\n                - platforms\n                - subcategories\n          style: form\n          explode: false\n          required: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - parent\n                - subcategories\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[subcategories]'\n          in: query\n          description: maximum number of related subcategories returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: List of AppCategories\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppCategoriesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/appCategories/{id}':\n    get:\n      tags:\n        - AppCategories\n      operationId: appCategories-get_instance\n      parameters:\n        - name: 'fields[appCategories]'\n          in: query\n          description: the fields to include for returned resources of type appCategories\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - parent\n                - platforms\n                - subcategories\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - parent\n                - subcategories\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[subcategories]'\n          in: query\n          description: maximum number of related subcategories returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: Single AppCategory\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppCategoryResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/appEncryptionDeclarations:\n    get:\n      tags:\n        - AppEncryptionDeclarations\n      operationId: appEncryptionDeclarations-get_collection\n      parameters:\n        - name: 'filter[platform]'\n          in: query\n          description: filter by attribute 'platform'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - IOS\n                - MAC_OS\n                - TV_OS\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[app]'\n          in: query\n          description: filter by id(s) of related 'app'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[builds]'\n          in: query\n          description: filter by id(s) of related 'builds'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appEncryptionDeclarations]'\n          in: query\n          description: the fields to include for returned resources of type appEncryptionDeclarations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclarationState\n                - availableOnFrenchStore\n                - builds\n                - codeValue\n                - containsProprietaryCryptography\n                - containsThirdPartyCryptography\n                - documentName\n                - documentType\n                - documentUrl\n                - exempt\n                - platform\n                - uploadedDate\n                - usesEncryption\n          style: form\n          explode: false\n          required: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: List of AppEncryptionDeclarations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppEncryptionDeclarationsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/appEncryptionDeclarations/{id}':\n    get:\n      tags:\n        - AppEncryptionDeclarations\n      operationId: appEncryptionDeclarations-get_instance\n      parameters:\n        - name: 'fields[appEncryptionDeclarations]'\n          in: query\n          description: the fields to include for returned resources of type appEncryptionDeclarations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclarationState\n                - availableOnFrenchStore\n                - builds\n                - codeValue\n                - containsProprietaryCryptography\n                - containsThirdPartyCryptography\n                - documentName\n                - documentType\n                - documentUrl\n                - exempt\n                - platform\n                - uploadedDate\n                - usesEncryption\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: Single AppEncryptionDeclaration\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppEncryptionDeclarationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/appInfoLocalizations:\n    post:\n      tags:\n        - AppInfoLocalizations\n      operationId: appInfoLocalizations-create_instance\n      requestBody:\n        description: AppInfoLocalization representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppInfoLocalizationCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single AppInfoLocalization\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppInfoLocalizationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/appInfoLocalizations/{id}':\n    get:\n      tags:\n        - AppInfoLocalizations\n      operationId: appInfoLocalizations-get_instance\n      parameters:\n        - name: 'fields[appInfoLocalizations]'\n          in: query\n          description: the fields to include for returned resources of type appInfoLocalizations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfo\n                - locale\n                - name\n                - privacyPolicyText\n                - privacyPolicyUrl\n                - subtitle\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfo\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: Single AppInfoLocalization\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppInfoLocalizationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - AppInfoLocalizations\n      operationId: appInfoLocalizations-update_instance\n      requestBody:\n        description: AppInfoLocalization representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppInfoLocalizationUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single AppInfoLocalization\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppInfoLocalizationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - AppInfoLocalizations\n      operationId: appInfoLocalizations-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appInfos/{id}':\n    get:\n      tags:\n        - AppInfos\n      operationId: appInfos-get_instance\n      parameters:\n        - name: 'fields[appInfos]'\n          in: query\n          description: the fields to include for returned resources of type appInfos\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ageRatingDeclaration\n                - app\n                - appInfoLocalizations\n                - appStoreAgeRating\n                - appStoreState\n                - brazilAgeRating\n                - kidsAgeBand\n                - primaryCategory\n                - primarySubcategoryOne\n                - primarySubcategoryTwo\n                - secondaryCategory\n                - secondarySubcategoryOne\n                - secondarySubcategoryTwo\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ageRatingDeclaration\n                - app\n                - appInfoLocalizations\n                - primaryCategory\n                - primarySubcategoryOne\n                - primarySubcategoryTwo\n                - secondaryCategory\n                - secondarySubcategoryOne\n                - secondarySubcategoryTwo\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[ageRatingDeclarations]'\n          in: query\n          description: the fields to include for returned resources of type ageRatingDeclarations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - alcoholTobaccoOrDrugUseOrReferences\n                - contests\n                - gambling\n                - gamblingAndContests\n                - gamblingSimulated\n                - horrorOrFearThemes\n                - kidsAgeBand\n                - matureOrSuggestiveThemes\n                - medicalOrTreatmentInformation\n                - profanityOrCrudeHumor\n                - seventeenPlus\n                - sexualContentGraphicAndNudity\n                - sexualContentOrNudity\n                - unrestrictedWebAccess\n                - violenceCartoonOrFantasy\n                - violenceRealistic\n                - violenceRealisticProlongedGraphicOrSadistic\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appCategories]'\n          in: query\n          description: the fields to include for returned resources of type appCategories\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - parent\n                - platforms\n                - subcategories\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appInfoLocalizations]'\n          in: query\n          description: the fields to include for returned resources of type appInfoLocalizations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfo\n                - locale\n                - name\n                - privacyPolicyText\n                - privacyPolicyUrl\n                - subtitle\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[appInfoLocalizations]'\n          in: query\n          description: maximum number of related appInfoLocalizations returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: Single AppInfo\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppInfoResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - AppInfos\n      operationId: appInfos-update_instance\n      requestBody:\n        description: AppInfo representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppInfoUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single AppInfo\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppInfoResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/appPreOrders:\n    post:\n      tags:\n        - AppPreOrders\n      operationId: appPreOrders-create_instance\n      requestBody:\n        description: AppPreOrder representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppPreOrderCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single AppPreOrder\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppPreOrderResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/appPreOrders/{id}':\n    get:\n      tags:\n        - AppPreOrders\n      operationId: appPreOrders-get_instance\n      parameters:\n        - name: 'fields[appPreOrders]'\n          in: query\n          description: the fields to include for returned resources of type appPreOrders\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appReleaseDate\n                - preOrderAvailableDate\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: Single AppPreOrder\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppPreOrderResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - AppPreOrders\n      operationId: appPreOrders-update_instance\n      requestBody:\n        description: AppPreOrder representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppPreOrderUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single AppPreOrder\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppPreOrderResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - AppPreOrders\n      operationId: appPreOrders-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/appPreviewSets:\n    post:\n      tags:\n        - AppPreviewSets\n      operationId: appPreviewSets-create_instance\n      requestBody:\n        description: AppPreviewSet representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppPreviewSetCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single AppPreviewSet\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppPreviewSetResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/appPreviewSets/{id}':\n    get:\n      tags:\n        - AppPreviewSets\n      operationId: appPreviewSets-get_instance\n      parameters:\n        - name: 'fields[appPreviewSets]'\n          in: query\n          description: the fields to include for returned resources of type appPreviewSets\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appPreviews\n                - appStoreVersionLocalization\n                - previewType\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appPreviews\n                - appStoreVersionLocalization\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appPreviews]'\n          in: query\n          description: the fields to include for returned resources of type appPreviews\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appPreviewSet\n                - assetDeliveryState\n                - fileName\n                - fileSize\n                - mimeType\n                - previewFrameTimeCode\n                - previewImage\n                - sourceFileChecksum\n                - uploadOperations\n                - uploaded\n                - videoUrl\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[appPreviews]'\n          in: query\n          description: maximum number of related appPreviews returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: Single AppPreviewSet\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppPreviewSetResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - AppPreviewSets\n      operationId: appPreviewSets-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/appPreviews:\n    post:\n      tags:\n        - AppPreviews\n      operationId: appPreviews-create_instance\n      requestBody:\n        description: AppPreview representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppPreviewCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single AppPreview\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppPreviewResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/appPreviews/{id}':\n    get:\n      tags:\n        - AppPreviews\n      operationId: appPreviews-get_instance\n      parameters:\n        - name: 'fields[appPreviews]'\n          in: query\n          description: the fields to include for returned resources of type appPreviews\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appPreviewSet\n                - assetDeliveryState\n                - fileName\n                - fileSize\n                - mimeType\n                - previewFrameTimeCode\n                - previewImage\n                - sourceFileChecksum\n                - uploadOperations\n                - uploaded\n                - videoUrl\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appPreviewSet\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: Single AppPreview\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppPreviewResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - AppPreviews\n      operationId: appPreviews-update_instance\n      requestBody:\n        description: AppPreview representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppPreviewUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single AppPreview\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppPreviewResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - AppPreviews\n      operationId: appPreviews-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/appPricePoints:\n    get:\n      tags:\n        - AppPricePoints\n      operationId: appPricePoints-get_collection\n      parameters:\n        - name: 'filter[priceTier]'\n          in: query\n          description: filter by id(s) of related 'priceTier'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[territory]'\n          in: query\n          description: filter by id(s) of related 'territory'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appPricePoints]'\n          in: query\n          description: the fields to include for returned resources of type appPricePoints\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - customerPrice\n                - priceTier\n                - proceeds\n                - territory\n          style: form\n          explode: false\n          required: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - priceTier\n                - territory\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[territories]'\n          in: query\n          description: the fields to include for returned resources of type territories\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - currency\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: List of AppPricePoints\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppPricePointsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/appPricePoints/{id}':\n    get:\n      tags:\n        - AppPricePoints\n      operationId: appPricePoints-get_instance\n      parameters:\n        - name: 'fields[appPricePoints]'\n          in: query\n          description: the fields to include for returned resources of type appPricePoints\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - customerPrice\n                - priceTier\n                - proceeds\n                - territory\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - priceTier\n                - territory\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[territories]'\n          in: query\n          description: the fields to include for returned resources of type territories\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - currency\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: Single AppPricePoint\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppPricePointResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/appPriceTiers:\n    get:\n      tags:\n        - AppPriceTiers\n      operationId: appPriceTiers-get_collection\n      parameters:\n        - name: 'filter[id]'\n          in: query\n          description: filter by id(s)\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appPriceTiers]'\n          in: query\n          description: the fields to include for returned resources of type appPriceTiers\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - pricePoints\n          style: form\n          explode: false\n          required: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - pricePoints\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appPricePoints]'\n          in: query\n          description: the fields to include for returned resources of type appPricePoints\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - customerPrice\n                - priceTier\n                - proceeds\n                - territory\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[pricePoints]'\n          in: query\n          description: maximum number of related pricePoints returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: List of AppPriceTiers\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppPriceTiersResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/appPriceTiers/{id}':\n    get:\n      tags:\n        - AppPriceTiers\n      operationId: appPriceTiers-get_instance\n      parameters:\n        - name: 'fields[appPriceTiers]'\n          in: query\n          description: the fields to include for returned resources of type appPriceTiers\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - pricePoints\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - pricePoints\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appPricePoints]'\n          in: query\n          description: the fields to include for returned resources of type appPricePoints\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - customerPrice\n                - priceTier\n                - proceeds\n                - territory\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[pricePoints]'\n          in: query\n          description: maximum number of related pricePoints returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: Single AppPriceTier\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppPriceTierResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appPrices/{id}':\n    get:\n      tags:\n        - AppPrices\n      operationId: appPrices-get_instance\n      parameters:\n        - name: 'fields[appPrices]'\n          in: query\n          description: the fields to include for returned resources of type appPrices\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - priceTier\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - priceTier\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: Single AppPrice\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppPriceResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/appScreenshotSets:\n    post:\n      tags:\n        - AppScreenshotSets\n      operationId: appScreenshotSets-create_instance\n      requestBody:\n        description: AppScreenshotSet representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppScreenshotSetCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single AppScreenshotSet\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppScreenshotSetResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/appScreenshotSets/{id}':\n    get:\n      tags:\n        - AppScreenshotSets\n      operationId: appScreenshotSets-get_instance\n      parameters:\n        - name: 'fields[appScreenshotSets]'\n          in: query\n          description: the fields to include for returned resources of type appScreenshotSets\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appScreenshots\n                - appStoreVersionLocalization\n                - screenshotDisplayType\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appScreenshots\n                - appStoreVersionLocalization\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appScreenshots]'\n          in: query\n          description: the fields to include for returned resources of type appScreenshots\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appScreenshotSet\n                - assetDeliveryState\n                - assetToken\n                - assetType\n                - fileName\n                - fileSize\n                - imageAsset\n                - sourceFileChecksum\n                - uploadOperations\n                - uploaded\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[appScreenshots]'\n          in: query\n          description: maximum number of related appScreenshots returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: Single AppScreenshotSet\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppScreenshotSetResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - AppScreenshotSets\n      operationId: appScreenshotSets-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/appScreenshots:\n    post:\n      tags:\n        - AppScreenshots\n      operationId: appScreenshots-create_instance\n      requestBody:\n        description: AppScreenshot representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppScreenshotCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single AppScreenshot\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppScreenshotResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/appScreenshots/{id}':\n    get:\n      tags:\n        - AppScreenshots\n      operationId: appScreenshots-get_instance\n      parameters:\n        - name: 'fields[appScreenshots]'\n          in: query\n          description: the fields to include for returned resources of type appScreenshots\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appScreenshotSet\n                - assetDeliveryState\n                - assetToken\n                - assetType\n                - fileName\n                - fileSize\n                - imageAsset\n                - sourceFileChecksum\n                - uploadOperations\n                - uploaded\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appScreenshotSet\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: Single AppScreenshot\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppScreenshotResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - AppScreenshots\n      operationId: appScreenshots-update_instance\n      requestBody:\n        description: AppScreenshot representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppScreenshotUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single AppScreenshot\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppScreenshotResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - AppScreenshots\n      operationId: appScreenshots-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/appStoreReviewAttachments:\n    post:\n      tags:\n        - AppStoreReviewAttachments\n      operationId: appStoreReviewAttachments-create_instance\n      requestBody:\n        description: AppStoreReviewAttachment representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppStoreReviewAttachmentCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single AppStoreReviewAttachment\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStoreReviewAttachmentResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/appStoreReviewAttachments/{id}':\n    get:\n      tags:\n        - AppStoreReviewAttachments\n      operationId: appStoreReviewAttachments-get_instance\n      parameters:\n        - name: 'fields[appStoreReviewAttachments]'\n          in: query\n          description: the fields to include for returned resources of type appStoreReviewAttachments\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreReviewDetail\n                - assetDeliveryState\n                - fileName\n                - fileSize\n                - sourceFileChecksum\n                - uploadOperations\n                - uploaded\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreReviewDetail\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: Single AppStoreReviewAttachment\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStoreReviewAttachmentResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - AppStoreReviewAttachments\n      operationId: appStoreReviewAttachments-update_instance\n      requestBody:\n        description: AppStoreReviewAttachment representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppStoreReviewAttachmentUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single AppStoreReviewAttachment\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStoreReviewAttachmentResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - AppStoreReviewAttachments\n      operationId: appStoreReviewAttachments-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/appStoreReviewDetails:\n    post:\n      tags:\n        - AppStoreReviewDetails\n      operationId: appStoreReviewDetails-create_instance\n      requestBody:\n        description: AppStoreReviewDetail representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppStoreReviewDetailCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single AppStoreReviewDetail\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStoreReviewDetailResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/appStoreReviewDetails/{id}':\n    get:\n      tags:\n        - AppStoreReviewDetails\n      operationId: appStoreReviewDetails-get_instance\n      parameters:\n        - name: 'fields[appStoreReviewDetails]'\n          in: query\n          description: the fields to include for returned resources of type appStoreReviewDetails\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreReviewAttachments\n                - appStoreVersion\n                - contactEmail\n                - contactFirstName\n                - contactLastName\n                - contactPhone\n                - demoAccountName\n                - demoAccountPassword\n                - demoAccountRequired\n                - notes\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreReviewAttachments\n                - appStoreVersion\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appStoreReviewAttachments]'\n          in: query\n          description: the fields to include for returned resources of type appStoreReviewAttachments\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreReviewDetail\n                - assetDeliveryState\n                - fileName\n                - fileSize\n                - sourceFileChecksum\n                - uploadOperations\n                - uploaded\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[appStoreReviewAttachments]'\n          in: query\n          description: maximum number of related appStoreReviewAttachments returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: Single AppStoreReviewDetail\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStoreReviewDetailResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - AppStoreReviewDetails\n      operationId: appStoreReviewDetails-update_instance\n      requestBody:\n        description: AppStoreReviewDetail representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppStoreReviewDetailUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single AppStoreReviewDetail\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStoreReviewDetailResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/appStoreVersionLocalizations:\n    post:\n      tags:\n        - AppStoreVersionLocalizations\n      operationId: appStoreVersionLocalizations-create_instance\n      requestBody:\n        description: AppStoreVersionLocalization representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppStoreVersionLocalizationCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single AppStoreVersionLocalization\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStoreVersionLocalizationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/appStoreVersionLocalizations/{id}':\n    get:\n      tags:\n        - AppStoreVersionLocalizations\n      operationId: appStoreVersionLocalizations-get_instance\n      parameters:\n        - name: 'fields[appStoreVersionLocalizations]'\n          in: query\n          description: the fields to include for returned resources of type appStoreVersionLocalizations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appPreviewSets\n                - appScreenshotSets\n                - appStoreVersion\n                - description\n                - keywords\n                - locale\n                - marketingUrl\n                - promotionalText\n                - supportUrl\n                - whatsNew\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appPreviewSets\n                - appScreenshotSets\n                - appStoreVersion\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appScreenshotSets]'\n          in: query\n          description: the fields to include for returned resources of type appScreenshotSets\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appScreenshots\n                - appStoreVersionLocalization\n                - screenshotDisplayType\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appPreviewSets]'\n          in: query\n          description: the fields to include for returned resources of type appPreviewSets\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appPreviews\n                - appStoreVersionLocalization\n                - previewType\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[appPreviewSets]'\n          in: query\n          description: maximum number of related appPreviewSets returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[appScreenshotSets]'\n          in: query\n          description: maximum number of related appScreenshotSets returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: Single AppStoreVersionLocalization\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStoreVersionLocalizationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - AppStoreVersionLocalizations\n      operationId: appStoreVersionLocalizations-update_instance\n      requestBody:\n        description: AppStoreVersionLocalization representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppStoreVersionLocalizationUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single AppStoreVersionLocalization\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStoreVersionLocalizationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - AppStoreVersionLocalizations\n      operationId: appStoreVersionLocalizations-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/appStoreVersionPhasedReleases:\n    post:\n      tags:\n        - AppStoreVersionPhasedReleases\n      operationId: appStoreVersionPhasedReleases-create_instance\n      requestBody:\n        description: AppStoreVersionPhasedRelease representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppStoreVersionPhasedReleaseCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single AppStoreVersionPhasedRelease\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStoreVersionPhasedReleaseResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/appStoreVersionPhasedReleases/{id}':\n    patch:\n      tags:\n        - AppStoreVersionPhasedReleases\n      operationId: appStoreVersionPhasedReleases-update_instance\n      requestBody:\n        description: AppStoreVersionPhasedRelease representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppStoreVersionPhasedReleaseUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single AppStoreVersionPhasedRelease\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStoreVersionPhasedReleaseResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - AppStoreVersionPhasedReleases\n      operationId: appStoreVersionPhasedReleases-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/appStoreVersionSubmissions:\n    post:\n      tags:\n        - AppStoreVersionSubmissions\n      operationId: appStoreVersionSubmissions-create_instance\n      requestBody:\n        description: AppStoreVersionSubmission representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppStoreVersionSubmissionCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single AppStoreVersionSubmission\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStoreVersionSubmissionResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/appStoreVersionSubmissions/{id}':\n    delete:\n      tags:\n        - AppStoreVersionSubmissions\n      operationId: appStoreVersionSubmissions-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/appStoreVersions:\n    post:\n      tags:\n        - AppStoreVersions\n      operationId: appStoreVersions-create_instance\n      requestBody:\n        description: AppStoreVersion representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppStoreVersionCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single AppStoreVersion\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStoreVersionResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/appStoreVersions/{id}':\n    get:\n      tags:\n        - AppStoreVersions\n      operationId: appStoreVersions-get_instance\n      parameters:\n        - name: 'fields[appStoreVersions]'\n          in: query\n          description: the fields to include for returned resources of type appStoreVersions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ageRatingDeclaration\n                - app\n                - appStoreReviewDetail\n                - appStoreState\n                - appStoreVersionLocalizations\n                - appStoreVersionPhasedRelease\n                - appStoreVersionSubmission\n                - build\n                - copyright\n                - createdDate\n                - downloadable\n                - earliestReleaseDate\n                - idfaDeclaration\n                - platform\n                - releaseType\n                - routingAppCoverage\n                - usesIdfa\n                - versionString\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ageRatingDeclaration\n                - app\n                - appStoreReviewDetail\n                - appStoreVersionLocalizations\n                - appStoreVersionPhasedRelease\n                - appStoreVersionSubmission\n                - build\n                - idfaDeclaration\n                - routingAppCoverage\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appStoreVersionLocalizations]'\n          in: query\n          description: the fields to include for returned resources of type appStoreVersionLocalizations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appPreviewSets\n                - appScreenshotSets\n                - appStoreVersion\n                - description\n                - keywords\n                - locale\n                - marketingUrl\n                - promotionalText\n                - supportUrl\n                - whatsNew\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[idfaDeclarations]'\n          in: query\n          description: the fields to include for returned resources of type idfaDeclarations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreVersion\n                - attributesActionWithPreviousAd\n                - attributesAppInstallationToPreviousAd\n                - honorsLimitedAdTracking\n                - servesAds\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[routingAppCoverages]'\n          in: query\n          description: the fields to include for returned resources of type routingAppCoverages\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreVersion\n                - assetDeliveryState\n                - fileName\n                - fileSize\n                - sourceFileChecksum\n                - uploadOperations\n                - uploaded\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appStoreVersionPhasedReleases]'\n          in: query\n          description: the fields to include for returned resources of type appStoreVersionPhasedReleases\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreVersion\n                - currentDayNumber\n                - phasedReleaseState\n                - startDate\n                - totalPauseDuration\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[ageRatingDeclarations]'\n          in: query\n          deprecated: true\n          description: the fields to include for returned resources of type ageRatingDeclarations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - alcoholTobaccoOrDrugUseOrReferences\n                - gamblingAndContests\n                - gamblingSimulated\n                - horrorOrFearThemes\n                - kidsAgeBand\n                - matureOrSuggestiveThemes\n                - medicalOrTreatmentInformation\n                - profanityOrCrudeHumor\n                - sexualContentGraphicAndNudity\n                - sexualContentOrNudity\n                - unrestrictedWebAccess\n                - violenceCartoonOrFantasy\n                - violenceRealistic\n                - violenceRealisticProlongedGraphicOrSadistic\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appStoreReviewDetails]'\n          in: query\n          description: the fields to include for returned resources of type appStoreReviewDetails\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreReviewAttachments\n                - appStoreVersion\n                - contactEmail\n                - contactFirstName\n                - contactLastName\n                - contactPhone\n                - demoAccountName\n                - demoAccountPassword\n                - demoAccountRequired\n                - notes\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appStoreVersionSubmissions]'\n          in: query\n          description: the fields to include for returned resources of type appStoreVersionSubmissions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreVersion\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[appStoreVersionLocalizations]'\n          in: query\n          description: maximum number of related appStoreVersionLocalizations returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: Single AppStoreVersion\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStoreVersionResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - AppStoreVersions\n      operationId: appStoreVersions-update_instance\n      requestBody:\n        description: AppStoreVersion representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppStoreVersionUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single AppStoreVersion\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStoreVersionResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - AppStoreVersions\n      operationId: appStoreVersions-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/apps:\n    get:\n      tags:\n        - Apps\n      operationId: apps-get_collection\n      parameters:\n        - name: 'filter[appStoreVersions.appStoreState]'\n          in: query\n          description: filter by attribute 'appStoreVersions.appStoreState'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - DEVELOPER_REMOVED_FROM_SALE\n                - DEVELOPER_REJECTED\n                - IN_REVIEW\n                - INVALID_BINARY\n                - METADATA_REJECTED\n                - PENDING_APPLE_RELEASE\n                - PENDING_CONTRACT\n                - PENDING_DEVELOPER_RELEASE\n                - PREPARE_FOR_SUBMISSION\n                - PREORDER_READY_FOR_SALE\n                - PROCESSING_FOR_APP_STORE\n                - READY_FOR_SALE\n                - REJECTED\n                - REMOVED_FROM_SALE\n                - WAITING_FOR_EXPORT_COMPLIANCE\n                - WAITING_FOR_REVIEW\n                - REPLACED_WITH_NEW_VERSION\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[appStoreVersions.platform]'\n          in: query\n          description: filter by attribute 'appStoreVersions.platform'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - IOS\n                - MAC_OS\n                - TV_OS\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[bundleId]'\n          in: query\n          description: filter by attribute 'bundleId'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[name]'\n          in: query\n          description: filter by attribute 'name'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[sku]'\n          in: query\n          description: filter by attribute 'sku'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[appStoreVersions]'\n          in: query\n          description: filter by id(s) of related 'appStoreVersions'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[id]'\n          in: query\n          description: filter by id(s)\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'exists[gameCenterEnabledVersions]'\n          in: query\n          description: filter by existence or non-existence of related 'gameCenterEnabledVersions'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: sort\n          in: query\n          description: comma-separated list of sort expressions; resources will be sorted as specified\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - bundleId\n                - '-bundleId'\n                - name\n                - '-name'\n                - sku\n                - '-sku'\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - builds\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - preOrder\n                - preReleaseVersions\n                - prices\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[betaGroups]'\n          in: query\n          description: the fields to include for returned resources of type betaGroups\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - betaTesters\n                - builds\n                - createdDate\n                - feedbackEnabled\n                - isInternalGroup\n                - name\n                - publicLink\n                - publicLinkEnabled\n                - publicLinkId\n                - publicLinkLimit\n                - publicLinkLimitEnabled\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[perfPowerMetrics]'\n          in: query\n          description: the fields to include for returned resources of type perfPowerMetrics\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - deviceType\n                - metricType\n                - platform\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appInfos]'\n          in: query\n          description: the fields to include for returned resources of type appInfos\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ageRatingDeclaration\n                - app\n                - appInfoLocalizations\n                - appStoreAgeRating\n                - appStoreState\n                - brazilAgeRating\n                - kidsAgeBand\n                - primaryCategory\n                - primarySubcategoryOne\n                - primarySubcategoryTwo\n                - secondaryCategory\n                - secondarySubcategoryOne\n                - secondarySubcategoryTwo\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appPreOrders]'\n          in: query\n          description: the fields to include for returned resources of type appPreOrders\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appReleaseDate\n                - preOrderAvailableDate\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[preReleaseVersions]'\n          in: query\n          description: the fields to include for returned resources of type preReleaseVersions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - builds\n                - platform\n                - version\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appPrices]'\n          in: query\n          description: the fields to include for returned resources of type appPrices\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - priceTier\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[inAppPurchases]'\n          in: query\n          description: the fields to include for returned resources of type inAppPurchases\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - apps\n                - inAppPurchaseType\n                - productId\n                - referenceName\n                - state\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[betaAppReviewDetails]'\n          in: query\n          description: the fields to include for returned resources of type betaAppReviewDetails\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - contactEmail\n                - contactFirstName\n                - contactLastName\n                - contactPhone\n                - demoAccountName\n                - demoAccountPassword\n                - demoAccountRequired\n                - notes\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[territories]'\n          in: query\n          description: the fields to include for returned resources of type territories\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - currency\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[gameCenterEnabledVersions]'\n          in: query\n          description: the fields to include for returned resources of type gameCenterEnabledVersions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - compatibleVersions\n                - iconAsset\n                - platform\n                - versionString\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appStoreVersions]'\n          in: query\n          description: the fields to include for returned resources of type appStoreVersions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ageRatingDeclaration\n                - app\n                - appStoreReviewDetail\n                - appStoreState\n                - appStoreVersionLocalizations\n                - appStoreVersionPhasedRelease\n                - appStoreVersionSubmission\n                - build\n                - copyright\n                - createdDate\n                - downloadable\n                - earliestReleaseDate\n                - idfaDeclaration\n                - platform\n                - releaseType\n                - routingAppCoverage\n                - usesIdfa\n                - versionString\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[betaAppLocalizations]'\n          in: query\n          description: the fields to include for returned resources of type betaAppLocalizations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - description\n                - feedbackEmail\n                - locale\n                - marketingUrl\n                - privacyPolicyUrl\n                - tvOsPrivacyPolicy\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[betaLicenseAgreements]'\n          in: query\n          description: the fields to include for returned resources of type betaLicenseAgreements\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - agreementText\n                - app\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[endUserLicenseAgreements]'\n          in: query\n          description: the fields to include for returned resources of type endUserLicenseAgreements\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - agreementText\n                - app\n                - territories\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[appInfos]'\n          in: query\n          description: maximum number of related appInfos returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[appStoreVersions]'\n          in: query\n          description: maximum number of related appStoreVersions returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[availableTerritories]'\n          in: query\n          description: maximum number of related availableTerritories returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[betaAppLocalizations]'\n          in: query\n          description: maximum number of related betaAppLocalizations returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[betaGroups]'\n          in: query\n          description: maximum number of related betaGroups returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[builds]'\n          in: query\n          description: maximum number of related builds returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[gameCenterEnabledVersions]'\n          in: query\n          description: maximum number of related gameCenterEnabledVersions returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[inAppPurchases]'\n          in: query\n          description: maximum number of related inAppPurchases returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[preReleaseVersions]'\n          in: query\n          description: maximum number of related preReleaseVersions returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[prices]'\n          in: query\n          description: maximum number of related prices returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: List of Apps\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/apps/{id}':\n    get:\n      tags:\n        - Apps\n      operationId: apps-get_instance\n      parameters:\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - builds\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - preOrder\n                - preReleaseVersions\n                - prices\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[betaGroups]'\n          in: query\n          description: the fields to include for returned resources of type betaGroups\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - betaTesters\n                - builds\n                - createdDate\n                - feedbackEnabled\n                - isInternalGroup\n                - name\n                - publicLink\n                - publicLinkEnabled\n                - publicLinkId\n                - publicLinkLimit\n                - publicLinkLimitEnabled\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[perfPowerMetrics]'\n          in: query\n          description: the fields to include for returned resources of type perfPowerMetrics\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - deviceType\n                - metricType\n                - platform\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appInfos]'\n          in: query\n          description: the fields to include for returned resources of type appInfos\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ageRatingDeclaration\n                - app\n                - appInfoLocalizations\n                - appStoreAgeRating\n                - appStoreState\n                - brazilAgeRating\n                - kidsAgeBand\n                - primaryCategory\n                - primarySubcategoryOne\n                - primarySubcategoryTwo\n                - secondaryCategory\n                - secondarySubcategoryOne\n                - secondarySubcategoryTwo\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appPreOrders]'\n          in: query\n          description: the fields to include for returned resources of type appPreOrders\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appReleaseDate\n                - preOrderAvailableDate\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[preReleaseVersions]'\n          in: query\n          description: the fields to include for returned resources of type preReleaseVersions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - builds\n                - platform\n                - version\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appPrices]'\n          in: query\n          description: the fields to include for returned resources of type appPrices\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - priceTier\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[inAppPurchases]'\n          in: query\n          description: the fields to include for returned resources of type inAppPurchases\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - apps\n                - inAppPurchaseType\n                - productId\n                - referenceName\n                - state\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[betaAppReviewDetails]'\n          in: query\n          description: the fields to include for returned resources of type betaAppReviewDetails\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - contactEmail\n                - contactFirstName\n                - contactLastName\n                - contactPhone\n                - demoAccountName\n                - demoAccountPassword\n                - demoAccountRequired\n                - notes\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[territories]'\n          in: query\n          description: the fields to include for returned resources of type territories\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - currency\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[gameCenterEnabledVersions]'\n          in: query\n          description: the fields to include for returned resources of type gameCenterEnabledVersions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - compatibleVersions\n                - iconAsset\n                - platform\n                - versionString\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appStoreVersions]'\n          in: query\n          description: the fields to include for returned resources of type appStoreVersions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ageRatingDeclaration\n                - app\n                - appStoreReviewDetail\n                - appStoreState\n                - appStoreVersionLocalizations\n                - appStoreVersionPhasedRelease\n                - appStoreVersionSubmission\n                - build\n                - copyright\n                - createdDate\n                - downloadable\n                - earliestReleaseDate\n                - idfaDeclaration\n                - platform\n                - releaseType\n                - routingAppCoverage\n                - usesIdfa\n                - versionString\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[betaAppLocalizations]'\n          in: query\n          description: the fields to include for returned resources of type betaAppLocalizations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - description\n                - feedbackEmail\n                - locale\n                - marketingUrl\n                - privacyPolicyUrl\n                - tvOsPrivacyPolicy\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[betaLicenseAgreements]'\n          in: query\n          description: the fields to include for returned resources of type betaLicenseAgreements\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - agreementText\n                - app\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[endUserLicenseAgreements]'\n          in: query\n          description: the fields to include for returned resources of type endUserLicenseAgreements\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - agreementText\n                - app\n                - territories\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[appInfos]'\n          in: query\n          description: maximum number of related appInfos returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[appStoreVersions]'\n          in: query\n          description: maximum number of related appStoreVersions returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[availableTerritories]'\n          in: query\n          description: maximum number of related availableTerritories returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[betaAppLocalizations]'\n          in: query\n          description: maximum number of related betaAppLocalizations returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[betaGroups]'\n          in: query\n          description: maximum number of related betaGroups returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[builds]'\n          in: query\n          description: maximum number of related builds returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[gameCenterEnabledVersions]'\n          in: query\n          description: maximum number of related gameCenterEnabledVersions returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[inAppPurchases]'\n          in: query\n          description: maximum number of related inAppPurchases returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[preReleaseVersions]'\n          in: query\n          description: maximum number of related preReleaseVersions returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[prices]'\n          in: query\n          description: maximum number of related prices returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: Single App\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - Apps\n      operationId: apps-update_instance\n      requestBody:\n        description: App representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single App\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/betaAppLocalizations:\n    get:\n      tags:\n        - BetaAppLocalizations\n      operationId: betaAppLocalizations-get_collection\n      parameters:\n        - name: 'filter[locale]'\n          in: query\n          description: filter by attribute 'locale'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[app]'\n          in: query\n          description: filter by id(s) of related 'app'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[betaAppLocalizations]'\n          in: query\n          description: the fields to include for returned resources of type betaAppLocalizations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - description\n                - feedbackEmail\n                - locale\n                - marketingUrl\n                - privacyPolicyUrl\n                - tvOsPrivacyPolicy\n          style: form\n          explode: false\n          required: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: List of BetaAppLocalizations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaAppLocalizationsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - BetaAppLocalizations\n      operationId: betaAppLocalizations-create_instance\n      requestBody:\n        description: BetaAppLocalization representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaAppLocalizationCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single BetaAppLocalization\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaAppLocalizationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/betaAppLocalizations/{id}':\n    get:\n      tags:\n        - BetaAppLocalizations\n      operationId: betaAppLocalizations-get_instance\n      parameters:\n        - name: 'fields[betaAppLocalizations]'\n          in: query\n          description: the fields to include for returned resources of type betaAppLocalizations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - description\n                - feedbackEmail\n                - locale\n                - marketingUrl\n                - privacyPolicyUrl\n                - tvOsPrivacyPolicy\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: Single BetaAppLocalization\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaAppLocalizationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - BetaAppLocalizations\n      operationId: betaAppLocalizations-update_instance\n      requestBody:\n        description: BetaAppLocalization representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaAppLocalizationUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single BetaAppLocalization\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaAppLocalizationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - BetaAppLocalizations\n      operationId: betaAppLocalizations-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/betaAppReviewDetails:\n    get:\n      tags:\n        - BetaAppReviewDetails\n      operationId: betaAppReviewDetails-get_collection\n      parameters:\n        - name: 'filter[app]'\n          in: query\n          description: filter by id(s) of related 'app'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: true\n        - name: 'fields[betaAppReviewDetails]'\n          in: query\n          description: the fields to include for returned resources of type betaAppReviewDetails\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - contactEmail\n                - contactFirstName\n                - contactLastName\n                - contactPhone\n                - demoAccountName\n                - demoAccountPassword\n                - demoAccountRequired\n                - notes\n          style: form\n          explode: false\n          required: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: List of BetaAppReviewDetails\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaAppReviewDetailsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/betaAppReviewDetails/{id}':\n    get:\n      tags:\n        - BetaAppReviewDetails\n      operationId: betaAppReviewDetails-get_instance\n      parameters:\n        - name: 'fields[betaAppReviewDetails]'\n          in: query\n          description: the fields to include for returned resources of type betaAppReviewDetails\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - contactEmail\n                - contactFirstName\n                - contactLastName\n                - contactPhone\n                - demoAccountName\n                - demoAccountPassword\n                - demoAccountRequired\n                - notes\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: Single BetaAppReviewDetail\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaAppReviewDetailResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - BetaAppReviewDetails\n      operationId: betaAppReviewDetails-update_instance\n      requestBody:\n        description: BetaAppReviewDetail representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaAppReviewDetailUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single BetaAppReviewDetail\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaAppReviewDetailResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/betaAppReviewSubmissions:\n    get:\n      tags:\n        - BetaAppReviewSubmissions\n      operationId: betaAppReviewSubmissions-get_collection\n      parameters:\n        - name: 'filter[betaReviewState]'\n          in: query\n          description: filter by attribute 'betaReviewState'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - WAITING_FOR_REVIEW\n                - IN_REVIEW\n                - REJECTED\n                - APPROVED\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[build]'\n          in: query\n          description: filter by id(s) of related 'build'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: true\n        - name: 'fields[betaAppReviewSubmissions]'\n          in: query\n          description: the fields to include for returned resources of type betaAppReviewSubmissions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - betaReviewState\n                - build\n          style: form\n          explode: false\n          required: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - build\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: List of BetaAppReviewSubmissions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaAppReviewSubmissionsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - BetaAppReviewSubmissions\n      operationId: betaAppReviewSubmissions-create_instance\n      requestBody:\n        description: BetaAppReviewSubmission representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaAppReviewSubmissionCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single BetaAppReviewSubmission\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaAppReviewSubmissionResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/betaAppReviewSubmissions/{id}':\n    get:\n      tags:\n        - BetaAppReviewSubmissions\n      operationId: betaAppReviewSubmissions-get_instance\n      parameters:\n        - name: 'fields[betaAppReviewSubmissions]'\n          in: query\n          description: the fields to include for returned resources of type betaAppReviewSubmissions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - betaReviewState\n                - build\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - build\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: Single BetaAppReviewSubmission\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaAppReviewSubmissionResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/betaBuildLocalizations:\n    get:\n      tags:\n        - BetaBuildLocalizations\n      operationId: betaBuildLocalizations-get_collection\n      parameters:\n        - name: 'filter[locale]'\n          in: query\n          description: filter by attribute 'locale'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[build]'\n          in: query\n          description: filter by id(s) of related 'build'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[betaBuildLocalizations]'\n          in: query\n          description: the fields to include for returned resources of type betaBuildLocalizations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - build\n                - locale\n                - whatsNew\n          style: form\n          explode: false\n          required: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - build\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: List of BetaBuildLocalizations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaBuildLocalizationsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - BetaBuildLocalizations\n      operationId: betaBuildLocalizations-create_instance\n      requestBody:\n        description: BetaBuildLocalization representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaBuildLocalizationCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single BetaBuildLocalization\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaBuildLocalizationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/betaBuildLocalizations/{id}':\n    get:\n      tags:\n        - BetaBuildLocalizations\n      operationId: betaBuildLocalizations-get_instance\n      parameters:\n        - name: 'fields[betaBuildLocalizations]'\n          in: query\n          description: the fields to include for returned resources of type betaBuildLocalizations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - build\n                - locale\n                - whatsNew\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - build\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: Single BetaBuildLocalization\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaBuildLocalizationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - BetaBuildLocalizations\n      operationId: betaBuildLocalizations-update_instance\n      requestBody:\n        description: BetaBuildLocalization representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaBuildLocalizationUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single BetaBuildLocalization\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaBuildLocalizationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - BetaBuildLocalizations\n      operationId: betaBuildLocalizations-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/betaGroups:\n    get:\n      tags:\n        - BetaGroups\n      operationId: betaGroups-get_collection\n      parameters:\n        - name: 'filter[isInternalGroup]'\n          in: query\n          description: filter by attribute 'isInternalGroup'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[name]'\n          in: query\n          description: filter by attribute 'name'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[publicLink]'\n          in: query\n          description: filter by attribute 'publicLink'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[publicLinkEnabled]'\n          in: query\n          description: filter by attribute 'publicLinkEnabled'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[publicLinkLimitEnabled]'\n          in: query\n          description: filter by attribute 'publicLinkLimitEnabled'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[app]'\n          in: query\n          description: filter by id(s) of related 'app'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[builds]'\n          in: query\n          description: filter by id(s) of related 'builds'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[id]'\n          in: query\n          description: filter by id(s)\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: sort\n          in: query\n          description: comma-separated list of sort expressions; resources will be sorted as specified\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - createdDate\n                - '-createdDate'\n                - name\n                - '-name'\n                - publicLinkEnabled\n                - '-publicLinkEnabled'\n                - publicLinkLimit\n                - '-publicLinkLimit'\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[betaGroups]'\n          in: query\n          description: the fields to include for returned resources of type betaGroups\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - betaTesters\n                - builds\n                - createdDate\n                - feedbackEnabled\n                - isInternalGroup\n                - name\n                - publicLink\n                - publicLinkEnabled\n                - publicLinkId\n                - publicLinkLimit\n                - publicLinkLimitEnabled\n          style: form\n          explode: false\n          required: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - betaTesters\n                - builds\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[betaTesters]'\n          in: query\n          description: the fields to include for returned resources of type betaTesters\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - apps\n                - betaGroups\n                - builds\n                - email\n                - firstName\n                - inviteType\n                - lastName\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[betaTesters]'\n          in: query\n          description: maximum number of related betaTesters returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[builds]'\n          in: query\n          description: maximum number of related builds returned (when they are included)\n          schema:\n            type: integer\n            maximum: 1000\n          style: form\n          required: false\n      responses:\n        '200':\n          description: List of BetaGroups\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaGroupsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - BetaGroups\n      operationId: betaGroups-create_instance\n      requestBody:\n        description: BetaGroup representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaGroupCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single BetaGroup\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaGroupResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/betaGroups/{id}':\n    get:\n      tags:\n        - BetaGroups\n      operationId: betaGroups-get_instance\n      parameters:\n        - name: 'fields[betaGroups]'\n          in: query\n          description: the fields to include for returned resources of type betaGroups\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - betaTesters\n                - builds\n                - createdDate\n                - feedbackEnabled\n                - isInternalGroup\n                - name\n                - publicLink\n                - publicLinkEnabled\n                - publicLinkId\n                - publicLinkLimit\n                - publicLinkLimitEnabled\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - betaTesters\n                - builds\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[betaTesters]'\n          in: query\n          description: the fields to include for returned resources of type betaTesters\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - apps\n                - betaGroups\n                - builds\n                - email\n                - firstName\n                - inviteType\n                - lastName\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[betaTesters]'\n          in: query\n          description: maximum number of related betaTesters returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[builds]'\n          in: query\n          description: maximum number of related builds returned (when they are included)\n          schema:\n            type: integer\n            maximum: 1000\n          style: form\n          required: false\n      responses:\n        '200':\n          description: Single BetaGroup\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaGroupResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - BetaGroups\n      operationId: betaGroups-update_instance\n      requestBody:\n        description: BetaGroup representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaGroupUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single BetaGroup\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaGroupResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - BetaGroups\n      operationId: betaGroups-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/betaLicenseAgreements:\n    get:\n      tags:\n        - BetaLicenseAgreements\n      operationId: betaLicenseAgreements-get_collection\n      parameters:\n        - name: 'filter[app]'\n          in: query\n          description: filter by id(s) of related 'app'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[betaLicenseAgreements]'\n          in: query\n          description: the fields to include for returned resources of type betaLicenseAgreements\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - agreementText\n                - app\n          style: form\n          explode: false\n          required: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: List of BetaLicenseAgreements\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaLicenseAgreementsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/betaLicenseAgreements/{id}':\n    get:\n      tags:\n        - BetaLicenseAgreements\n      operationId: betaLicenseAgreements-get_instance\n      parameters:\n        - name: 'fields[betaLicenseAgreements]'\n          in: query\n          description: the fields to include for returned resources of type betaLicenseAgreements\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - agreementText\n                - app\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: Single BetaLicenseAgreement\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaLicenseAgreementResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - BetaLicenseAgreements\n      operationId: betaLicenseAgreements-update_instance\n      requestBody:\n        description: BetaLicenseAgreement representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaLicenseAgreementUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single BetaLicenseAgreement\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaLicenseAgreementResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/betaTesterInvitations:\n    post:\n      tags:\n        - BetaTesterInvitations\n      operationId: betaTesterInvitations-create_instance\n      requestBody:\n        description: BetaTesterInvitation representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaTesterInvitationCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single BetaTesterInvitation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaTesterInvitationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/betaTesters:\n    get:\n      tags:\n        - BetaTesters\n      operationId: betaTesters-get_collection\n      parameters:\n        - name: 'filter[email]'\n          in: query\n          description: filter by attribute 'email'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[firstName]'\n          in: query\n          description: filter by attribute 'firstName'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[inviteType]'\n          in: query\n          description: filter by attribute 'inviteType'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - EMAIL\n                - PUBLIC_LINK\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[lastName]'\n          in: query\n          description: filter by attribute 'lastName'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[apps]'\n          in: query\n          description: filter by id(s) of related 'apps'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[betaGroups]'\n          in: query\n          description: filter by id(s) of related 'betaGroups'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[builds]'\n          in: query\n          description: filter by id(s) of related 'builds'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: sort\n          in: query\n          description: comma-separated list of sort expressions; resources will be sorted as specified\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - email\n                - '-email'\n                - firstName\n                - '-firstName'\n                - inviteType\n                - '-inviteType'\n                - lastName\n                - '-lastName'\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[betaTesters]'\n          in: query\n          description: the fields to include for returned resources of type betaTesters\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - apps\n                - betaGroups\n                - builds\n                - email\n                - firstName\n                - inviteType\n                - lastName\n          style: form\n          explode: false\n          required: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - apps\n                - betaGroups\n                - builds\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[betaGroups]'\n          in: query\n          description: the fields to include for returned resources of type betaGroups\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - betaTesters\n                - builds\n                - createdDate\n                - feedbackEnabled\n                - isInternalGroup\n                - name\n                - publicLink\n                - publicLinkEnabled\n                - publicLinkId\n                - publicLinkLimit\n                - publicLinkLimitEnabled\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[apps]'\n          in: query\n          description: maximum number of related apps returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[betaGroups]'\n          in: query\n          description: maximum number of related betaGroups returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[builds]'\n          in: query\n          description: maximum number of related builds returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: List of BetaTesters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaTestersResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - BetaTesters\n      operationId: betaTesters-create_instance\n      requestBody:\n        description: BetaTester representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaTesterCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single BetaTester\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaTesterResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/betaTesters/{id}':\n    get:\n      tags:\n        - BetaTesters\n      operationId: betaTesters-get_instance\n      parameters:\n        - name: 'fields[betaTesters]'\n          in: query\n          description: the fields to include for returned resources of type betaTesters\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - apps\n                - betaGroups\n                - builds\n                - email\n                - firstName\n                - inviteType\n                - lastName\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - apps\n                - betaGroups\n                - builds\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[betaGroups]'\n          in: query\n          description: the fields to include for returned resources of type betaGroups\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - betaTesters\n                - builds\n                - createdDate\n                - feedbackEnabled\n                - isInternalGroup\n                - name\n                - publicLink\n                - publicLinkEnabled\n                - publicLinkId\n                - publicLinkLimit\n                - publicLinkLimitEnabled\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[apps]'\n          in: query\n          description: maximum number of related apps returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[betaGroups]'\n          in: query\n          description: maximum number of related betaGroups returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[builds]'\n          in: query\n          description: maximum number of related builds returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: Single BetaTester\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaTesterResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - BetaTesters\n      operationId: betaTesters-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/buildBetaDetails:\n    get:\n      tags:\n        - BuildBetaDetails\n      operationId: buildBetaDetails-get_collection\n      parameters:\n        - name: 'filter[build]'\n          in: query\n          description: filter by id(s) of related 'build'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[id]'\n          in: query\n          description: filter by id(s)\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[buildBetaDetails]'\n          in: query\n          description: the fields to include for returned resources of type buildBetaDetails\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - autoNotifyEnabled\n                - build\n                - externalBuildState\n                - internalBuildState\n          style: form\n          explode: false\n          required: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - build\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: List of BuildBetaDetails\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildBetaDetailsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/buildBetaDetails/{id}':\n    get:\n      tags:\n        - BuildBetaDetails\n      operationId: buildBetaDetails-get_instance\n      parameters:\n        - name: 'fields[buildBetaDetails]'\n          in: query\n          description: the fields to include for returned resources of type buildBetaDetails\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - autoNotifyEnabled\n                - build\n                - externalBuildState\n                - internalBuildState\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - build\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: Single BuildBetaDetail\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildBetaDetailResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - BuildBetaDetails\n      operationId: buildBetaDetails-update_instance\n      requestBody:\n        description: BuildBetaDetail representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BuildBetaDetailUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single BuildBetaDetail\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildBetaDetailResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/buildBetaNotifications:\n    post:\n      tags:\n        - BuildBetaNotifications\n      operationId: buildBetaNotifications-create_instance\n      requestBody:\n        description: BuildBetaNotification representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BuildBetaNotificationCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single BuildBetaNotification\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildBetaNotificationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/builds:\n    get:\n      tags:\n        - Builds\n      operationId: builds-get_collection\n      parameters:\n        - name: 'filter[betaAppReviewSubmission.betaReviewState]'\n          in: query\n          description: filter by attribute 'betaAppReviewSubmission.betaReviewState'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - WAITING_FOR_REVIEW\n                - IN_REVIEW\n                - REJECTED\n                - APPROVED\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[expired]'\n          in: query\n          description: filter by attribute 'expired'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[preReleaseVersion.platform]'\n          in: query\n          description: filter by attribute 'preReleaseVersion.platform'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - IOS\n                - MAC_OS\n                - TV_OS\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[preReleaseVersion.version]'\n          in: query\n          description: filter by attribute 'preReleaseVersion.version'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[processingState]'\n          in: query\n          description: filter by attribute 'processingState'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - PROCESSING\n                - FAILED\n                - INVALID\n                - VALID\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[usesNonExemptEncryption]'\n          in: query\n          description: filter by attribute 'usesNonExemptEncryption'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[version]'\n          in: query\n          description: filter by attribute 'version'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[app]'\n          in: query\n          description: filter by id(s) of related 'app'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[appStoreVersion]'\n          in: query\n          description: filter by id(s) of related 'appStoreVersion'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[betaGroups]'\n          in: query\n          description: filter by id(s) of related 'betaGroups'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[preReleaseVersion]'\n          in: query\n          description: filter by id(s) of related 'preReleaseVersion'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[id]'\n          in: query\n          description: filter by id(s)\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: sort\n          in: query\n          description: comma-separated list of sort expressions; resources will be sorted as specified\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - preReleaseVersion\n                - '-preReleaseVersion'\n                - uploadedDate\n                - '-uploadedDate'\n                - version\n                - '-version'\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n          required: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - buildBetaDetail\n                - icons\n                - individualTesters\n                - preReleaseVersion\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appEncryptionDeclarations]'\n          in: query\n          description: the fields to include for returned resources of type appEncryptionDeclarations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclarationState\n                - availableOnFrenchStore\n                - builds\n                - codeValue\n                - containsProprietaryCryptography\n                - containsThirdPartyCryptography\n                - documentName\n                - documentType\n                - documentUrl\n                - exempt\n                - platform\n                - uploadedDate\n                - usesEncryption\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[betaAppReviewSubmissions]'\n          in: query\n          description: the fields to include for returned resources of type betaAppReviewSubmissions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - betaReviewState\n                - build\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[buildBetaDetails]'\n          in: query\n          description: the fields to include for returned resources of type buildBetaDetails\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - autoNotifyEnabled\n                - build\n                - externalBuildState\n                - internalBuildState\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[buildIcons]'\n          in: query\n          description: the fields to include for returned resources of type buildIcons\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - iconAsset\n                - iconType\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[perfPowerMetrics]'\n          in: query\n          description: the fields to include for returned resources of type perfPowerMetrics\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - deviceType\n                - metricType\n                - platform\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[preReleaseVersions]'\n          in: query\n          description: the fields to include for returned resources of type preReleaseVersions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - builds\n                - platform\n                - version\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appStoreVersions]'\n          in: query\n          description: the fields to include for returned resources of type appStoreVersions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ageRatingDeclaration\n                - app\n                - appStoreReviewDetail\n                - appStoreState\n                - appStoreVersionLocalizations\n                - appStoreVersionPhasedRelease\n                - appStoreVersionSubmission\n                - build\n                - copyright\n                - createdDate\n                - downloadable\n                - earliestReleaseDate\n                - idfaDeclaration\n                - platform\n                - releaseType\n                - routingAppCoverage\n                - usesIdfa\n                - versionString\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[diagnosticSignatures]'\n          in: query\n          description: the fields to include for returned resources of type diagnosticSignatures\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - diagnosticType\n                - logs\n                - signature\n                - weight\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[betaTesters]'\n          in: query\n          description: the fields to include for returned resources of type betaTesters\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - apps\n                - betaGroups\n                - builds\n                - email\n                - firstName\n                - inviteType\n                - lastName\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[betaBuildLocalizations]'\n          in: query\n          description: the fields to include for returned resources of type betaBuildLocalizations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - build\n                - locale\n                - whatsNew\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[betaBuildLocalizations]'\n          in: query\n          description: maximum number of related betaBuildLocalizations returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[icons]'\n          in: query\n          description: maximum number of related icons returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[individualTesters]'\n          in: query\n          description: maximum number of related individualTesters returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: List of Builds\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/builds/{id}':\n    get:\n      tags:\n        - Builds\n      operationId: builds-get_instance\n      parameters:\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - buildBetaDetail\n                - icons\n                - individualTesters\n                - preReleaseVersion\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appEncryptionDeclarations]'\n          in: query\n          description: the fields to include for returned resources of type appEncryptionDeclarations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclarationState\n                - availableOnFrenchStore\n                - builds\n                - codeValue\n                - containsProprietaryCryptography\n                - containsThirdPartyCryptography\n                - documentName\n                - documentType\n                - documentUrl\n                - exempt\n                - platform\n                - uploadedDate\n                - usesEncryption\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[betaAppReviewSubmissions]'\n          in: query\n          description: the fields to include for returned resources of type betaAppReviewSubmissions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - betaReviewState\n                - build\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[buildBetaDetails]'\n          in: query\n          description: the fields to include for returned resources of type buildBetaDetails\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - autoNotifyEnabled\n                - build\n                - externalBuildState\n                - internalBuildState\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[buildIcons]'\n          in: query\n          description: the fields to include for returned resources of type buildIcons\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - iconAsset\n                - iconType\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[perfPowerMetrics]'\n          in: query\n          description: the fields to include for returned resources of type perfPowerMetrics\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - deviceType\n                - metricType\n                - platform\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[preReleaseVersions]'\n          in: query\n          description: the fields to include for returned resources of type preReleaseVersions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - builds\n                - platform\n                - version\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[appStoreVersions]'\n          in: query\n          description: the fields to include for returned resources of type appStoreVersions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ageRatingDeclaration\n                - app\n                - appStoreReviewDetail\n                - appStoreState\n                - appStoreVersionLocalizations\n                - appStoreVersionPhasedRelease\n                - appStoreVersionSubmission\n                - build\n                - copyright\n                - createdDate\n                - downloadable\n                - earliestReleaseDate\n                - idfaDeclaration\n                - platform\n                - releaseType\n                - routingAppCoverage\n                - usesIdfa\n                - versionString\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[diagnosticSignatures]'\n          in: query\n          description: the fields to include for returned resources of type diagnosticSignatures\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - diagnosticType\n                - logs\n                - signature\n                - weight\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[betaTesters]'\n          in: query\n          description: the fields to include for returned resources of type betaTesters\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - apps\n                - betaGroups\n                - builds\n                - email\n                - firstName\n                - inviteType\n                - lastName\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[betaBuildLocalizations]'\n          in: query\n          description: the fields to include for returned resources of type betaBuildLocalizations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - build\n                - locale\n                - whatsNew\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[betaBuildLocalizations]'\n          in: query\n          description: maximum number of related betaBuildLocalizations returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[icons]'\n          in: query\n          description: maximum number of related icons returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[individualTesters]'\n          in: query\n          description: maximum number of related individualTesters returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: Single Build\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - Builds\n      operationId: builds-update_instance\n      requestBody:\n        description: Build representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BuildUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single Build\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/bundleIdCapabilities:\n    post:\n      tags:\n        - BundleIdCapabilities\n      operationId: bundleIdCapabilities-create_instance\n      requestBody:\n        description: BundleIdCapability representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BundleIdCapabilityCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single BundleIdCapability\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BundleIdCapabilityResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/bundleIdCapabilities/{id}':\n    patch:\n      tags:\n        - BundleIdCapabilities\n      operationId: bundleIdCapabilities-update_instance\n      requestBody:\n        description: BundleIdCapability representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BundleIdCapabilityUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single BundleIdCapability\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BundleIdCapabilityResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - BundleIdCapabilities\n      operationId: bundleIdCapabilities-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/bundleIds:\n    get:\n      tags:\n        - BundleIds\n      operationId: bundleIds-get_collection\n      parameters:\n        - name: 'filter[identifier]'\n          in: query\n          description: filter by attribute 'identifier'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[name]'\n          in: query\n          description: filter by attribute 'name'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[platform]'\n          in: query\n          description: filter by attribute 'platform'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - IOS\n                - MAC_OS\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[seedId]'\n          in: query\n          description: filter by attribute 'seedId'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[id]'\n          in: query\n          description: filter by id(s)\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: sort\n          in: query\n          description: comma-separated list of sort expressions; resources will be sorted as specified\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - id\n                - '-id'\n                - identifier\n                - '-identifier'\n                - name\n                - '-name'\n                - platform\n                - '-platform'\n                - seedId\n                - '-seedId'\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[bundleIds]'\n          in: query\n          description: the fields to include for returned resources of type bundleIds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - bundleIdCapabilities\n                - identifier\n                - name\n                - platform\n                - profiles\n                - seedId\n          style: form\n          explode: false\n          required: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - bundleIdCapabilities\n                - profiles\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[bundleIdCapabilities]'\n          in: query\n          description: the fields to include for returned resources of type bundleIdCapabilities\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - bundleId\n                - capabilityType\n                - settings\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[profiles]'\n          in: query\n          description: the fields to include for returned resources of type profiles\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - bundleId\n                - certificates\n                - createdDate\n                - devices\n                - expirationDate\n                - name\n                - platform\n                - profileContent\n                - profileState\n                - profileType\n                - uuid\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[bundleIdCapabilities]'\n          in: query\n          description: maximum number of related bundleIdCapabilities returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[profiles]'\n          in: query\n          description: maximum number of related profiles returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: List of BundleIds\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BundleIdsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - BundleIds\n      operationId: bundleIds-create_instance\n      requestBody:\n        description: BundleId representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BundleIdCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single BundleId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BundleIdResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/bundleIds/{id}':\n    get:\n      tags:\n        - BundleIds\n      operationId: bundleIds-get_instance\n      parameters:\n        - name: 'fields[bundleIds]'\n          in: query\n          description: the fields to include for returned resources of type bundleIds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - bundleIdCapabilities\n                - identifier\n                - name\n                - platform\n                - profiles\n                - seedId\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - bundleIdCapabilities\n                - profiles\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[bundleIdCapabilities]'\n          in: query\n          description: the fields to include for returned resources of type bundleIdCapabilities\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - bundleId\n                - capabilityType\n                - settings\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[profiles]'\n          in: query\n          description: the fields to include for returned resources of type profiles\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - bundleId\n                - certificates\n                - createdDate\n                - devices\n                - expirationDate\n                - name\n                - platform\n                - profileContent\n                - profileState\n                - profileType\n                - uuid\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[bundleIdCapabilities]'\n          in: query\n          description: maximum number of related bundleIdCapabilities returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[profiles]'\n          in: query\n          description: maximum number of related profiles returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: Single BundleId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BundleIdResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - BundleIds\n      operationId: bundleIds-update_instance\n      requestBody:\n        description: BundleId representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BundleIdUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single BundleId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BundleIdResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - BundleIds\n      operationId: bundleIds-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/certificates:\n    get:\n      tags:\n        - Certificates\n      operationId: certificates-get_collection\n      parameters:\n        - name: 'filter[certificateType]'\n          in: query\n          description: filter by attribute 'certificateType'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - IOS_DEVELOPMENT\n                - IOS_DISTRIBUTION\n                - MAC_APP_DISTRIBUTION\n                - MAC_INSTALLER_DISTRIBUTION\n                - MAC_APP_DEVELOPMENT\n                - DEVELOPER_ID_KEXT\n                - DEVELOPER_ID_APPLICATION\n                - DEVELOPMENT\n                - DISTRIBUTION\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[displayName]'\n          in: query\n          description: filter by attribute 'displayName'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[serialNumber]'\n          in: query\n          description: filter by attribute 'serialNumber'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[id]'\n          in: query\n          description: filter by id(s)\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: sort\n          in: query\n          description: comma-separated list of sort expressions; resources will be sorted as specified\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - certificateType\n                - '-certificateType'\n                - displayName\n                - '-displayName'\n                - id\n                - '-id'\n                - serialNumber\n                - '-serialNumber'\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[certificates]'\n          in: query\n          description: the fields to include for returned resources of type certificates\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - certificateContent\n                - certificateType\n                - csrContent\n                - displayName\n                - expirationDate\n                - name\n                - platform\n                - serialNumber\n          style: form\n          explode: false\n          required: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of Certificates\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificatesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - Certificates\n      operationId: certificates-create_instance\n      requestBody:\n        description: Certificate representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CertificateCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single Certificate\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificateResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/certificates/{id}':\n    get:\n      tags:\n        - Certificates\n      operationId: certificates-get_instance\n      parameters:\n        - name: 'fields[certificates]'\n          in: query\n          description: the fields to include for returned resources of type certificates\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - certificateContent\n                - certificateType\n                - csrContent\n                - displayName\n                - expirationDate\n                - name\n                - platform\n                - serialNumber\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: Single Certificate\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificateResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - Certificates\n      operationId: certificates-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/devices:\n    get:\n      tags:\n        - Devices\n      operationId: devices-get_collection\n      parameters:\n        - name: 'filter[name]'\n          in: query\n          description: filter by attribute 'name'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[platform]'\n          in: query\n          description: filter by attribute 'platform'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - IOS\n                - MAC_OS\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[status]'\n          in: query\n          description: filter by attribute 'status'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ENABLED\n                - DISABLED\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[udid]'\n          in: query\n          description: filter by attribute 'udid'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[id]'\n          in: query\n          description: filter by id(s)\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: sort\n          in: query\n          description: comma-separated list of sort expressions; resources will be sorted as specified\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - id\n                - '-id'\n                - name\n                - '-name'\n                - platform\n                - '-platform'\n                - status\n                - '-status'\n                - udid\n                - '-udid'\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[devices]'\n          in: query\n          description: the fields to include for returned resources of type devices\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - addedDate\n                - deviceClass\n                - model\n                - name\n                - platform\n                - status\n                - udid\n          style: form\n          explode: false\n          required: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of Devices\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DevicesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - Devices\n      operationId: devices-create_instance\n      requestBody:\n        description: Device representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeviceCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single Device\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/devices/{id}':\n    get:\n      tags:\n        - Devices\n      operationId: devices-get_instance\n      parameters:\n        - name: 'fields[devices]'\n          in: query\n          description: the fields to include for returned resources of type devices\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - addedDate\n                - deviceClass\n                - model\n                - name\n                - platform\n                - status\n                - udid\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: Single Device\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - Devices\n      operationId: devices-update_instance\n      requestBody:\n        description: Device representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeviceUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single Device\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/endUserLicenseAgreements:\n    post:\n      tags:\n        - EndUserLicenseAgreements\n      operationId: endUserLicenseAgreements-create_instance\n      requestBody:\n        description: EndUserLicenseAgreement representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EndUserLicenseAgreementCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single EndUserLicenseAgreement\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EndUserLicenseAgreementResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/endUserLicenseAgreements/{id}':\n    get:\n      tags:\n        - EndUserLicenseAgreements\n      operationId: endUserLicenseAgreements-get_instance\n      parameters:\n        - name: 'fields[endUserLicenseAgreements]'\n          in: query\n          description: the fields to include for returned resources of type endUserLicenseAgreements\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - agreementText\n                - app\n                - territories\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - territories\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[territories]'\n          in: query\n          description: the fields to include for returned resources of type territories\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - currency\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[territories]'\n          in: query\n          description: maximum number of related territories returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: Single EndUserLicenseAgreement\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EndUserLicenseAgreementResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - EndUserLicenseAgreements\n      operationId: endUserLicenseAgreements-update_instance\n      requestBody:\n        description: EndUserLicenseAgreement representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EndUserLicenseAgreementUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single EndUserLicenseAgreement\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EndUserLicenseAgreementResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - EndUserLicenseAgreements\n      operationId: endUserLicenseAgreements-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/financeReports:\n    get:\n      tags:\n        - FinanceReports\n      operationId: financeReports-get_collection\n      parameters:\n        - name: 'filter[regionCode]'\n          in: query\n          description: filter by attribute 'regionCode'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: true\n        - name: 'filter[reportDate]'\n          in: query\n          description: filter by attribute 'reportDate'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: true\n        - name: 'filter[reportType]'\n          in: query\n          description: filter by attribute 'reportType'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - FINANCIAL\n                - FINANCE_DETAIL\n          style: form\n          explode: false\n          required: true\n        - name: 'filter[vendorNumber]'\n          in: query\n          description: filter by attribute 'vendorNumber'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: true\n      responses:\n        '200':\n          description: List of FinanceReports\n          content:\n            gzip:\n              schema:\n                type: string\n                format: binary\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/idfaDeclarations:\n    post:\n      tags:\n        - IdfaDeclarations\n      operationId: idfaDeclarations-create_instance\n      requestBody:\n        description: IdfaDeclaration representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IdfaDeclarationCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single IdfaDeclaration\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdfaDeclarationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/idfaDeclarations/{id}':\n    patch:\n      tags:\n        - IdfaDeclarations\n      operationId: idfaDeclarations-update_instance\n      requestBody:\n        description: IdfaDeclaration representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IdfaDeclarationUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single IdfaDeclaration\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdfaDeclarationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - IdfaDeclarations\n      operationId: idfaDeclarations-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/inAppPurchases/{id}':\n    get:\n      tags:\n        - InAppPurchases\n      operationId: inAppPurchases-get_instance\n      parameters:\n        - name: 'fields[inAppPurchases]'\n          in: query\n          description: the fields to include for returned resources of type inAppPurchases\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - apps\n                - inAppPurchaseType\n                - productId\n                - referenceName\n                - state\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - apps\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[apps]'\n          in: query\n          description: maximum number of related apps returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: Single InAppPurchase\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InAppPurchaseResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/preReleaseVersions:\n    get:\n      tags:\n        - PreReleaseVersions\n      operationId: preReleaseVersions-get_collection\n      parameters:\n        - name: 'filter[builds.expired]'\n          in: query\n          description: filter by attribute 'builds.expired'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[builds.processingState]'\n          in: query\n          description: filter by attribute 'builds.processingState'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - PROCESSING\n                - FAILED\n                - INVALID\n                - VALID\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[platform]'\n          in: query\n          description: filter by attribute 'platform'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - IOS\n                - MAC_OS\n                - TV_OS\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[version]'\n          in: query\n          description: filter by attribute 'version'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[app]'\n          in: query\n          description: filter by id(s) of related 'app'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[builds]'\n          in: query\n          description: filter by id(s) of related 'builds'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: sort\n          in: query\n          description: comma-separated list of sort expressions; resources will be sorted as specified\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - version\n                - '-version'\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[preReleaseVersions]'\n          in: query\n          description: the fields to include for returned resources of type preReleaseVersions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - builds\n                - platform\n                - version\n          style: form\n          explode: false\n          required: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - builds\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[builds]'\n          in: query\n          description: maximum number of related builds returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: List of PreReleaseVersions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreReleaseVersionsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/preReleaseVersions/{id}':\n    get:\n      tags:\n        - PreReleaseVersions\n      operationId: preReleaseVersions-get_instance\n      parameters:\n        - name: 'fields[preReleaseVersions]'\n          in: query\n          description: the fields to include for returned resources of type preReleaseVersions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - builds\n                - platform\n                - version\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - builds\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[builds]'\n          in: query\n          description: maximum number of related builds returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: Single PrereleaseVersion\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PrereleaseVersionResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/profiles:\n    get:\n      tags:\n        - Profiles\n      operationId: profiles-get_collection\n      parameters:\n        - name: 'filter[name]'\n          in: query\n          description: filter by attribute 'name'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[profileState]'\n          in: query\n          description: filter by attribute 'profileState'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ACTIVE\n                - INVALID\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[profileType]'\n          in: query\n          description: filter by attribute 'profileType'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - IOS_APP_DEVELOPMENT\n                - IOS_APP_STORE\n                - IOS_APP_ADHOC\n                - IOS_APP_INHOUSE\n                - MAC_APP_DEVELOPMENT\n                - MAC_APP_STORE\n                - MAC_APP_DIRECT\n                - TVOS_APP_DEVELOPMENT\n                - TVOS_APP_STORE\n                - TVOS_APP_ADHOC\n                - TVOS_APP_INHOUSE\n                - MAC_CATALYST_APP_DEVELOPMENT\n                - MAC_CATALYST_APP_STORE\n                - MAC_CATALYST_APP_DIRECT\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[id]'\n          in: query\n          description: filter by id(s)\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: sort\n          in: query\n          description: comma-separated list of sort expressions; resources will be sorted as specified\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - id\n                - '-id'\n                - name\n                - '-name'\n                - profileState\n                - '-profileState'\n                - profileType\n                - '-profileType'\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[profiles]'\n          in: query\n          description: the fields to include for returned resources of type profiles\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - bundleId\n                - certificates\n                - createdDate\n                - devices\n                - expirationDate\n                - name\n                - platform\n                - profileContent\n                - profileState\n                - profileType\n                - uuid\n          style: form\n          explode: false\n          required: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - bundleId\n                - certificates\n                - devices\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[certificates]'\n          in: query\n          description: the fields to include for returned resources of type certificates\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - certificateContent\n                - certificateType\n                - csrContent\n                - displayName\n                - expirationDate\n                - name\n                - platform\n                - serialNumber\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[devices]'\n          in: query\n          description: the fields to include for returned resources of type devices\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - addedDate\n                - deviceClass\n                - model\n                - name\n                - platform\n                - status\n                - udid\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[bundleIds]'\n          in: query\n          description: the fields to include for returned resources of type bundleIds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - bundleIdCapabilities\n                - identifier\n                - name\n                - platform\n                - profiles\n                - seedId\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[certificates]'\n          in: query\n          description: maximum number of related certificates returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[devices]'\n          in: query\n          description: maximum number of related devices returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: List of Profiles\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProfilesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - Profiles\n      operationId: profiles-create_instance\n      requestBody:\n        description: Profile representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProfileCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single Profile\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProfileResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/profiles/{id}':\n    get:\n      tags:\n        - Profiles\n      operationId: profiles-get_instance\n      parameters:\n        - name: 'fields[profiles]'\n          in: query\n          description: the fields to include for returned resources of type profiles\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - bundleId\n                - certificates\n                - createdDate\n                - devices\n                - expirationDate\n                - name\n                - platform\n                - profileContent\n                - profileState\n                - profileType\n                - uuid\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - bundleId\n                - certificates\n                - devices\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[certificates]'\n          in: query\n          description: the fields to include for returned resources of type certificates\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - certificateContent\n                - certificateType\n                - csrContent\n                - displayName\n                - expirationDate\n                - name\n                - platform\n                - serialNumber\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[devices]'\n          in: query\n          description: the fields to include for returned resources of type devices\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - addedDate\n                - deviceClass\n                - model\n                - name\n                - platform\n                - status\n                - udid\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[bundleIds]'\n          in: query\n          description: the fields to include for returned resources of type bundleIds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - bundleIdCapabilities\n                - identifier\n                - name\n                - platform\n                - profiles\n                - seedId\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[certificates]'\n          in: query\n          description: maximum number of related certificates returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n        - name: 'limit[devices]'\n          in: query\n          description: maximum number of related devices returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: Single Profile\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProfileResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - Profiles\n      operationId: profiles-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/routingAppCoverages:\n    post:\n      tags:\n        - RoutingAppCoverages\n      operationId: routingAppCoverages-create_instance\n      requestBody:\n        description: RoutingAppCoverage representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RoutingAppCoverageCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single RoutingAppCoverage\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoutingAppCoverageResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/routingAppCoverages/{id}':\n    get:\n      tags:\n        - RoutingAppCoverages\n      operationId: routingAppCoverages-get_instance\n      parameters:\n        - name: 'fields[routingAppCoverages]'\n          in: query\n          description: the fields to include for returned resources of type routingAppCoverages\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreVersion\n                - assetDeliveryState\n                - fileName\n                - fileSize\n                - sourceFileChecksum\n                - uploadOperations\n                - uploaded\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreVersion\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: Single RoutingAppCoverage\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoutingAppCoverageResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - RoutingAppCoverages\n      operationId: routingAppCoverages-update_instance\n      requestBody:\n        description: RoutingAppCoverage representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RoutingAppCoverageUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single RoutingAppCoverage\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoutingAppCoverageResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - RoutingAppCoverages\n      operationId: routingAppCoverages-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/salesReports:\n    get:\n      tags:\n        - SalesReports\n      operationId: salesReports-get_collection\n      parameters:\n        - name: 'filter[frequency]'\n          in: query\n          description: filter by attribute 'frequency'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - DAILY\n                - WEEKLY\n                - MONTHLY\n                - YEARLY\n          style: form\n          explode: false\n          required: true\n        - name: 'filter[reportDate]'\n          in: query\n          description: filter by attribute 'reportDate'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[reportSubType]'\n          in: query\n          description: filter by attribute 'reportSubType'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - SUMMARY\n                - DETAILED\n                - OPT_IN\n          style: form\n          explode: false\n          required: true\n        - name: 'filter[reportType]'\n          in: query\n          description: filter by attribute 'reportType'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - SALES\n                - PRE_ORDER\n                - NEWSSTAND\n                - SUBSCRIPTION\n                - SUBSCRIPTION_EVENT\n                - SUBSCRIBER\n          style: form\n          explode: false\n          required: true\n        - name: 'filter[vendorNumber]'\n          in: query\n          description: filter by attribute 'vendorNumber'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: true\n        - name: 'filter[version]'\n          in: query\n          description: filter by attribute 'version'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n      responses:\n        '200':\n          description: List of SalesReports\n          content:\n            gzip:\n              schema:\n                type: string\n                format: binary\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/territories:\n    get:\n      tags:\n        - Territories\n      operationId: territories-get_collection\n      parameters:\n        - name: 'fields[territories]'\n          in: query\n          description: the fields to include for returned resources of type territories\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - currency\n          style: form\n          explode: false\n          required: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of Territories\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TerritoriesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/userInvitations:\n    get:\n      tags:\n        - UserInvitations\n      operationId: userInvitations-get_collection\n      parameters:\n        - name: 'filter[email]'\n          in: query\n          description: filter by attribute 'email'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[roles]'\n          in: query\n          description: filter by attribute 'roles'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ADMIN\n                - FINANCE\n                - TECHNICAL\n                - ACCOUNT_HOLDER\n                - READ_ONLY\n                - SALES\n                - MARKETING\n                - APP_MANAGER\n                - DEVELOPER\n                - ACCESS_TO_REPORTS\n                - CUSTOMER_SUPPORT\n                - CREATE_APPS\n                - CLOUD_MANAGED_DEVELOPER_ID\n                - CLOUD_MANAGED_APP_DISTRIBUTION\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[visibleApps]'\n          in: query\n          description: filter by id(s) of related 'visibleApps'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: sort\n          in: query\n          description: comma-separated list of sort expressions; resources will be sorted as specified\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - email\n                - '-email'\n                - lastName\n                - '-lastName'\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[userInvitations]'\n          in: query\n          description: the fields to include for returned resources of type userInvitations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - allAppsVisible\n                - email\n                - expirationDate\n                - firstName\n                - lastName\n                - provisioningAllowed\n                - roles\n                - visibleApps\n          style: form\n          explode: false\n          required: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - visibleApps\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[visibleApps]'\n          in: query\n          description: maximum number of related visibleApps returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: List of UserInvitations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserInvitationsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - UserInvitations\n      operationId: userInvitations-create_instance\n      requestBody:\n        description: UserInvitation representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserInvitationCreateRequest'\n        required: true\n      responses:\n        '201':\n          description: Single UserInvitation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserInvitationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/userInvitations/{id}':\n    get:\n      tags:\n        - UserInvitations\n      operationId: userInvitations-get_instance\n      parameters:\n        - name: 'fields[userInvitations]'\n          in: query\n          description: the fields to include for returned resources of type userInvitations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - allAppsVisible\n                - email\n                - expirationDate\n                - firstName\n                - lastName\n                - provisioningAllowed\n                - roles\n                - visibleApps\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - visibleApps\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[visibleApps]'\n          in: query\n          description: maximum number of related visibleApps returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: Single UserInvitation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserInvitationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - UserInvitations\n      operationId: userInvitations-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  /v1/users:\n    get:\n      tags:\n        - Users\n      operationId: users-get_collection\n      parameters:\n        - name: 'filter[roles]'\n          in: query\n          description: filter by attribute 'roles'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ADMIN\n                - FINANCE\n                - TECHNICAL\n                - ACCOUNT_HOLDER\n                - READ_ONLY\n                - SALES\n                - MARKETING\n                - APP_MANAGER\n                - DEVELOPER\n                - ACCESS_TO_REPORTS\n                - CUSTOMER_SUPPORT\n                - CREATE_APPS\n                - CLOUD_MANAGED_DEVELOPER_ID\n                - CLOUD_MANAGED_APP_DISTRIBUTION\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[username]'\n          in: query\n          description: filter by attribute 'username'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: 'filter[visibleApps]'\n          in: query\n          description: filter by id(s) of related 'visibleApps'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n          required: false\n        - name: sort\n          in: query\n          description: comma-separated list of sort expressions; resources will be sorted as specified\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - lastName\n                - '-lastName'\n                - username\n                - '-username'\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[users]'\n          in: query\n          description: the fields to include for returned resources of type users\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - allAppsVisible\n                - firstName\n                - lastName\n                - provisioningAllowed\n                - roles\n                - username\n                - visibleApps\n          style: form\n          explode: false\n          required: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - visibleApps\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[visibleApps]'\n          in: query\n          description: maximum number of related visibleApps returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: List of Users\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UsersResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/v1/users/{id}':\n    get:\n      tags:\n        - Users\n      operationId: users-get_instance\n      parameters:\n        - name: 'fields[users]'\n          in: query\n          description: the fields to include for returned resources of type users\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - allAppsVisible\n                - firstName\n                - lastName\n                - provisioningAllowed\n                - roles\n                - username\n                - visibleApps\n          style: form\n          explode: false\n          required: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - visibleApps\n          style: form\n          explode: false\n          required: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n          required: false\n        - name: 'limit[visibleApps]'\n          in: query\n          description: maximum number of related visibleApps returned (when they are included)\n          schema:\n            type: integer\n            maximum: 50\n          style: form\n          required: false\n      responses:\n        '200':\n          description: Single User\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - Users\n      operationId: users-update_instance\n      requestBody:\n        description: User representation\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Single User\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - Users\n      operationId: users-delete_instance\n      responses:\n        '204':\n          description: Success (no content)\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appCategories/{id}/parent':\n    get:\n      tags:\n        - AppCategories\n      operationId: appCategories-parent-get_to_one_related\n      parameters:\n        - name: 'fields[appCategories]'\n          in: query\n          description: the fields to include for returned resources of type appCategories\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - parent\n                - platforms\n                - subcategories\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppCategoryResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appCategories/{id}/subcategories':\n    get:\n      tags:\n        - AppCategories\n      operationId: appCategories-subcategories-get_to_many_related\n      parameters:\n        - name: 'fields[appCategories]'\n          in: query\n          description: the fields to include for returned resources of type appCategories\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - parent\n                - platforms\n                - subcategories\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppCategoriesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appEncryptionDeclarations/{id}/app':\n    get:\n      tags:\n        - AppEncryptionDeclarations\n      operationId: appEncryptionDeclarations-app-get_to_one_related\n      parameters:\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appEncryptionDeclarations/{id}/relationships/builds':\n    post:\n      tags:\n        - AppEncryptionDeclarations\n      operationId: appEncryptionDeclarations-builds-create_to_many_relationship\n      requestBody:\n        description: List of related linkages\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppEncryptionDeclarationBuildsLinkagesRequest'\n        required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appInfos/{id}/ageRatingDeclaration':\n    get:\n      tags:\n        - AppInfos\n      operationId: appInfos-ageRatingDeclaration-get_to_one_related\n      parameters:\n        - name: 'fields[ageRatingDeclarations]'\n          in: query\n          description: the fields to include for returned resources of type ageRatingDeclarations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - alcoholTobaccoOrDrugUseOrReferences\n                - contests\n                - gambling\n                - gamblingAndContests\n                - gamblingSimulated\n                - horrorOrFearThemes\n                - kidsAgeBand\n                - matureOrSuggestiveThemes\n                - medicalOrTreatmentInformation\n                - profanityOrCrudeHumor\n                - seventeenPlus\n                - sexualContentGraphicAndNudity\n                - sexualContentOrNudity\n                - unrestrictedWebAccess\n                - violenceCartoonOrFantasy\n                - violenceRealistic\n                - violenceRealisticProlongedGraphicOrSadistic\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AgeRatingDeclarationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appInfos/{id}/appInfoLocalizations':\n    get:\n      tags:\n        - AppInfos\n      operationId: appInfos-appInfoLocalizations-get_to_many_related\n      parameters:\n        - name: 'filter[locale]'\n          in: query\n          description: filter by attribute 'locale'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n        - name: 'fields[appInfos]'\n          in: query\n          description: the fields to include for returned resources of type appInfos\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ageRatingDeclaration\n                - app\n                - appInfoLocalizations\n                - appStoreAgeRating\n                - appStoreState\n                - brazilAgeRating\n                - kidsAgeBand\n                - primaryCategory\n                - primarySubcategoryOne\n                - primarySubcategoryTwo\n                - secondaryCategory\n                - secondarySubcategoryOne\n                - secondarySubcategoryTwo\n          style: form\n          explode: false\n        - name: 'fields[appInfoLocalizations]'\n          in: query\n          description: the fields to include for returned resources of type appInfoLocalizations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfo\n                - locale\n                - name\n                - privacyPolicyText\n                - privacyPolicyUrl\n                - subtitle\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfo\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppInfoLocalizationsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appInfos/{id}/primaryCategory':\n    get:\n      tags:\n        - AppInfos\n      operationId: appInfos-primaryCategory-get_to_one_related\n      parameters:\n        - name: 'fields[appCategories]'\n          in: query\n          description: the fields to include for returned resources of type appCategories\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - parent\n                - platforms\n                - subcategories\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppCategoryResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appInfos/{id}/primarySubcategoryOne':\n    get:\n      tags:\n        - AppInfos\n      operationId: appInfos-primarySubcategoryOne-get_to_one_related\n      parameters:\n        - name: 'fields[appCategories]'\n          in: query\n          description: the fields to include for returned resources of type appCategories\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - parent\n                - platforms\n                - subcategories\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppCategoryResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appInfos/{id}/primarySubcategoryTwo':\n    get:\n      tags:\n        - AppInfos\n      operationId: appInfos-primarySubcategoryTwo-get_to_one_related\n      parameters:\n        - name: 'fields[appCategories]'\n          in: query\n          description: the fields to include for returned resources of type appCategories\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - parent\n                - platforms\n                - subcategories\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppCategoryResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appInfos/{id}/secondaryCategory':\n    get:\n      tags:\n        - AppInfos\n      operationId: appInfos-secondaryCategory-get_to_one_related\n      parameters:\n        - name: 'fields[appCategories]'\n          in: query\n          description: the fields to include for returned resources of type appCategories\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - parent\n                - platforms\n                - subcategories\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppCategoryResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appInfos/{id}/secondarySubcategoryOne':\n    get:\n      tags:\n        - AppInfos\n      operationId: appInfos-secondarySubcategoryOne-get_to_one_related\n      parameters:\n        - name: 'fields[appCategories]'\n          in: query\n          description: the fields to include for returned resources of type appCategories\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - parent\n                - platforms\n                - subcategories\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppCategoryResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appInfos/{id}/secondarySubcategoryTwo':\n    get:\n      tags:\n        - AppInfos\n      operationId: appInfos-secondarySubcategoryTwo-get_to_one_related\n      parameters:\n        - name: 'fields[appCategories]'\n          in: query\n          description: the fields to include for returned resources of type appCategories\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - parent\n                - platforms\n                - subcategories\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppCategoryResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appPreviewSets/{id}/relationships/appPreviews':\n    get:\n      tags:\n        - AppPreviewSets\n      operationId: appPreviewSets-appPreviews-get_to_many_relationship\n      parameters:\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related linkages\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppPreviewSetAppPreviewsLinkagesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - AppPreviewSets\n      operationId: appPreviewSets-appPreviews-replace_to_many_relationship\n      requestBody:\n        description: List of related linkages\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppPreviewSetAppPreviewsLinkagesRequest'\n        required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appPreviewSets/{id}/appPreviews':\n    get:\n      tags:\n        - AppPreviewSets\n      operationId: appPreviewSets-appPreviews-get_to_many_related\n      parameters:\n        - name: 'fields[appPreviews]'\n          in: query\n          description: the fields to include for returned resources of type appPreviews\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appPreviewSet\n                - assetDeliveryState\n                - fileName\n                - fileSize\n                - mimeType\n                - previewFrameTimeCode\n                - previewImage\n                - sourceFileChecksum\n                - uploadOperations\n                - uploaded\n                - videoUrl\n          style: form\n          explode: false\n        - name: 'fields[appPreviewSets]'\n          in: query\n          description: the fields to include for returned resources of type appPreviewSets\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appPreviews\n                - appStoreVersionLocalization\n                - previewType\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appPreviewSet\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppPreviewsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appPricePoints/{id}/territory':\n    get:\n      tags:\n        - AppPricePoints\n      operationId: appPricePoints-territory-get_to_one_related\n      parameters:\n        - name: 'fields[territories]'\n          in: query\n          description: the fields to include for returned resources of type territories\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - currency\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TerritoryResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appPriceTiers/{id}/pricePoints':\n    get:\n      tags:\n        - AppPriceTiers\n      operationId: appPriceTiers-pricePoints-get_to_many_related\n      parameters:\n        - name: 'fields[appPricePoints]'\n          in: query\n          description: the fields to include for returned resources of type appPricePoints\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - customerPrice\n                - priceTier\n                - proceeds\n                - territory\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppPricePointsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appScreenshotSets/{id}/relationships/appScreenshots':\n    get:\n      tags:\n        - AppScreenshotSets\n      operationId: appScreenshotSets-appScreenshots-get_to_many_relationship\n      parameters:\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related linkages\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppScreenshotSetAppScreenshotsLinkagesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - AppScreenshotSets\n      operationId: appScreenshotSets-appScreenshots-replace_to_many_relationship\n      requestBody:\n        description: List of related linkages\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppScreenshotSetAppScreenshotsLinkagesRequest'\n        required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appScreenshotSets/{id}/appScreenshots':\n    get:\n      tags:\n        - AppScreenshotSets\n      operationId: appScreenshotSets-appScreenshots-get_to_many_related\n      parameters:\n        - name: 'fields[appScreenshotSets]'\n          in: query\n          description: the fields to include for returned resources of type appScreenshotSets\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appScreenshots\n                - appStoreVersionLocalization\n                - screenshotDisplayType\n          style: form\n          explode: false\n        - name: 'fields[appScreenshots]'\n          in: query\n          description: the fields to include for returned resources of type appScreenshots\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appScreenshotSet\n                - assetDeliveryState\n                - assetToken\n                - assetType\n                - fileName\n                - fileSize\n                - imageAsset\n                - sourceFileChecksum\n                - uploadOperations\n                - uploaded\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appScreenshotSet\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppScreenshotsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appStoreReviewDetails/{id}/appStoreReviewAttachments':\n    get:\n      tags:\n        - AppStoreReviewDetails\n      operationId: appStoreReviewDetails-appStoreReviewAttachments-get_to_many_related\n      parameters:\n        - name: 'fields[appStoreReviewDetails]'\n          in: query\n          description: the fields to include for returned resources of type appStoreReviewDetails\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreReviewAttachments\n                - appStoreVersion\n                - contactEmail\n                - contactFirstName\n                - contactLastName\n                - contactPhone\n                - demoAccountName\n                - demoAccountPassword\n                - demoAccountRequired\n                - notes\n          style: form\n          explode: false\n        - name: 'fields[appStoreReviewAttachments]'\n          in: query\n          description: the fields to include for returned resources of type appStoreReviewAttachments\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreReviewDetail\n                - assetDeliveryState\n                - fileName\n                - fileSize\n                - sourceFileChecksum\n                - uploadOperations\n                - uploaded\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreReviewDetail\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStoreReviewAttachmentsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appStoreVersionLocalizations/{id}/appPreviewSets':\n    get:\n      tags:\n        - AppStoreVersionLocalizations\n      operationId: appStoreVersionLocalizations-appPreviewSets-get_to_many_related\n      parameters:\n        - name: 'filter[previewType]'\n          in: query\n          description: filter by attribute 'previewType'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - IPHONE_65\n                - IPHONE_58\n                - IPHONE_55\n                - IPHONE_47\n                - IPHONE_40\n                - IPHONE_35\n                - IPAD_PRO_3GEN_129\n                - IPAD_PRO_3GEN_11\n                - IPAD_PRO_129\n                - IPAD_105\n                - IPAD_97\n                - DESKTOP\n                - WATCH_SERIES_4\n                - WATCH_SERIES_3\n                - APPLE_TV\n          style: form\n          explode: false\n        - name: 'fields[appStoreVersionLocalizations]'\n          in: query\n          description: the fields to include for returned resources of type appStoreVersionLocalizations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appPreviewSets\n                - appScreenshotSets\n                - appStoreVersion\n                - description\n                - keywords\n                - locale\n                - marketingUrl\n                - promotionalText\n                - supportUrl\n                - whatsNew\n          style: form\n          explode: false\n        - name: 'fields[appPreviews]'\n          in: query\n          description: the fields to include for returned resources of type appPreviews\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appPreviewSet\n                - assetDeliveryState\n                - fileName\n                - fileSize\n                - mimeType\n                - previewFrameTimeCode\n                - previewImage\n                - sourceFileChecksum\n                - uploadOperations\n                - uploaded\n                - videoUrl\n          style: form\n          explode: false\n        - name: 'fields[appPreviewSets]'\n          in: query\n          description: the fields to include for returned resources of type appPreviewSets\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appPreviews\n                - appStoreVersionLocalization\n                - previewType\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appPreviews\n                - appStoreVersionLocalization\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppPreviewSetsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appStoreVersionLocalizations/{id}/appScreenshotSets':\n    get:\n      tags:\n        - AppStoreVersionLocalizations\n      operationId: appStoreVersionLocalizations-appScreenshotSets-get_to_many_related\n      parameters:\n        - name: 'filter[screenshotDisplayType]'\n          in: query\n          description: filter by attribute 'screenshotDisplayType'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - APP_IPHONE_65\n                - APP_IPHONE_58\n                - APP_IPHONE_55\n                - APP_IPHONE_47\n                - APP_IPHONE_40\n                - APP_IPHONE_35\n                - APP_IPAD_PRO_3GEN_129\n                - APP_IPAD_PRO_3GEN_11\n                - APP_IPAD_PRO_129\n                - APP_IPAD_105\n                - APP_IPAD_97\n                - APP_DESKTOP\n                - APP_WATCH_SERIES_4\n                - APP_WATCH_SERIES_3\n                - APP_APPLE_TV\n                - IMESSAGE_APP_IPHONE_65\n                - IMESSAGE_APP_IPHONE_58\n                - IMESSAGE_APP_IPHONE_55\n                - IMESSAGE_APP_IPHONE_47\n                - IMESSAGE_APP_IPHONE_40\n                - IMESSAGE_APP_IPAD_PRO_3GEN_129\n                - IMESSAGE_APP_IPAD_PRO_3GEN_11\n                - IMESSAGE_APP_IPAD_PRO_129\n                - IMESSAGE_APP_IPAD_105\n                - IMESSAGE_APP_IPAD_97\n          style: form\n          explode: false\n        - name: 'fields[appStoreVersionLocalizations]'\n          in: query\n          description: the fields to include for returned resources of type appStoreVersionLocalizations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appPreviewSets\n                - appScreenshotSets\n                - appStoreVersion\n                - description\n                - keywords\n                - locale\n                - marketingUrl\n                - promotionalText\n                - supportUrl\n                - whatsNew\n          style: form\n          explode: false\n        - name: 'fields[appScreenshotSets]'\n          in: query\n          description: the fields to include for returned resources of type appScreenshotSets\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appScreenshots\n                - appStoreVersionLocalization\n                - screenshotDisplayType\n          style: form\n          explode: false\n        - name: 'fields[appScreenshots]'\n          in: query\n          description: the fields to include for returned resources of type appScreenshots\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appScreenshotSet\n                - assetDeliveryState\n                - assetToken\n                - assetType\n                - fileName\n                - fileSize\n                - imageAsset\n                - sourceFileChecksum\n                - uploadOperations\n                - uploaded\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appScreenshots\n                - appStoreVersionLocalization\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppScreenshotSetsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appStoreVersions/{id}/ageRatingDeclaration':\n    get:\n      deprecated: true\n      tags:\n        - AppStoreVersions\n      operationId: appStoreVersions-ageRatingDeclaration-get_to_one_related\n      parameters:\n        - name: 'fields[ageRatingDeclarations]'\n          in: query\n          deprecated: true\n          description: the fields to include for returned resources of type ageRatingDeclarations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - alcoholTobaccoOrDrugUseOrReferences\n                - gamblingAndContests\n                - gamblingSimulated\n                - horrorOrFearThemes\n                - kidsAgeBand\n                - matureOrSuggestiveThemes\n                - medicalOrTreatmentInformation\n                - profanityOrCrudeHumor\n                - sexualContentGraphicAndNudity\n                - sexualContentOrNudity\n                - unrestrictedWebAccess\n                - violenceCartoonOrFantasy\n                - violenceRealistic\n                - violenceRealisticProlongedGraphicOrSadistic\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AgeRatingDeclarationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appStoreVersions/{id}/appStoreReviewDetail':\n    get:\n      tags:\n        - AppStoreVersions\n      operationId: appStoreVersions-appStoreReviewDetail-get_to_one_related\n      parameters:\n        - name: 'fields[appStoreReviewDetails]'\n          in: query\n          description: the fields to include for returned resources of type appStoreReviewDetails\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreReviewAttachments\n                - appStoreVersion\n                - contactEmail\n                - contactFirstName\n                - contactLastName\n                - contactPhone\n                - demoAccountName\n                - demoAccountPassword\n                - demoAccountRequired\n                - notes\n          style: form\n          explode: false\n        - name: 'fields[appStoreVersions]'\n          in: query\n          description: the fields to include for returned resources of type appStoreVersions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ageRatingDeclaration\n                - app\n                - appStoreReviewDetail\n                - appStoreState\n                - appStoreVersionLocalizations\n                - appStoreVersionPhasedRelease\n                - appStoreVersionSubmission\n                - build\n                - copyright\n                - createdDate\n                - downloadable\n                - earliestReleaseDate\n                - idfaDeclaration\n                - platform\n                - releaseType\n                - routingAppCoverage\n                - usesIdfa\n                - versionString\n          style: form\n          explode: false\n        - name: 'fields[appStoreReviewAttachments]'\n          in: query\n          description: the fields to include for returned resources of type appStoreReviewAttachments\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreReviewDetail\n                - assetDeliveryState\n                - fileName\n                - fileSize\n                - sourceFileChecksum\n                - uploadOperations\n                - uploaded\n          style: form\n          explode: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreReviewAttachments\n                - appStoreVersion\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStoreReviewDetailResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appStoreVersions/{id}/appStoreVersionLocalizations':\n    get:\n      tags:\n        - AppStoreVersions\n      operationId: appStoreVersions-appStoreVersionLocalizations-get_to_many_related\n      parameters:\n        - name: 'fields[appStoreVersionLocalizations]'\n          in: query\n          description: the fields to include for returned resources of type appStoreVersionLocalizations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appPreviewSets\n                - appScreenshotSets\n                - appStoreVersion\n                - description\n                - keywords\n                - locale\n                - marketingUrl\n                - promotionalText\n                - supportUrl\n                - whatsNew\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStoreVersionLocalizationsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appStoreVersions/{id}/appStoreVersionPhasedRelease':\n    get:\n      tags:\n        - AppStoreVersions\n      operationId: appStoreVersions-appStoreVersionPhasedRelease-get_to_one_related\n      parameters:\n        - name: 'fields[appStoreVersionPhasedReleases]'\n          in: query\n          description: the fields to include for returned resources of type appStoreVersionPhasedReleases\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreVersion\n                - currentDayNumber\n                - phasedReleaseState\n                - startDate\n                - totalPauseDuration\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStoreVersionPhasedReleaseResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appStoreVersions/{id}/appStoreVersionSubmission':\n    get:\n      tags:\n        - AppStoreVersions\n      operationId: appStoreVersions-appStoreVersionSubmission-get_to_one_related\n      parameters:\n        - name: 'fields[appStoreVersions]'\n          in: query\n          description: the fields to include for returned resources of type appStoreVersions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ageRatingDeclaration\n                - app\n                - appStoreReviewDetail\n                - appStoreState\n                - appStoreVersionLocalizations\n                - appStoreVersionPhasedRelease\n                - appStoreVersionSubmission\n                - build\n                - copyright\n                - createdDate\n                - downloadable\n                - earliestReleaseDate\n                - idfaDeclaration\n                - platform\n                - releaseType\n                - routingAppCoverage\n                - usesIdfa\n                - versionString\n          style: form\n          explode: false\n        - name: 'fields[appStoreVersionSubmissions]'\n          in: query\n          description: the fields to include for returned resources of type appStoreVersionSubmissions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreVersion\n          style: form\n          explode: false\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreVersion\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStoreVersionSubmissionResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appStoreVersions/{id}/relationships/build':\n    get:\n      tags:\n        - AppStoreVersions\n      operationId: appStoreVersions-build-get_to_one_relationship\n      parameters: []\n      responses:\n        '200':\n          description: Related linkage\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStoreVersionBuildLinkageResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - AppStoreVersions\n      operationId: appStoreVersions-build-update_to_one_relationship\n      requestBody:\n        description: Related linkage\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppStoreVersionBuildLinkageRequest'\n        required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appStoreVersions/{id}/build':\n    get:\n      tags:\n        - AppStoreVersions\n      operationId: appStoreVersions-build-get_to_one_related\n      parameters:\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appStoreVersions/{id}/idfaDeclaration':\n    get:\n      tags:\n        - AppStoreVersions\n      operationId: appStoreVersions-idfaDeclaration-get_to_one_related\n      parameters:\n        - name: 'fields[idfaDeclarations]'\n          in: query\n          description: the fields to include for returned resources of type idfaDeclarations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreVersion\n                - attributesActionWithPreviousAd\n                - attributesAppInstallationToPreviousAd\n                - honorsLimitedAdTracking\n                - servesAds\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdfaDeclarationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/appStoreVersions/{id}/routingAppCoverage':\n    get:\n      tags:\n        - AppStoreVersions\n      operationId: appStoreVersions-routingAppCoverage-get_to_one_related\n      parameters:\n        - name: 'fields[routingAppCoverages]'\n          in: query\n          description: the fields to include for returned resources of type routingAppCoverages\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreVersion\n                - assetDeliveryState\n                - fileName\n                - fileSize\n                - sourceFileChecksum\n                - uploadOperations\n                - uploaded\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoutingAppCoverageResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/apps/{id}/appInfos':\n    get:\n      tags:\n        - Apps\n      operationId: apps-appInfos-get_to_many_related\n      parameters:\n        - name: 'fields[ageRatingDeclarations]'\n          in: query\n          description: the fields to include for returned resources of type ageRatingDeclarations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - alcoholTobaccoOrDrugUseOrReferences\n                - contests\n                - gambling\n                - gamblingAndContests\n                - gamblingSimulated\n                - horrorOrFearThemes\n                - kidsAgeBand\n                - matureOrSuggestiveThemes\n                - medicalOrTreatmentInformation\n                - profanityOrCrudeHumor\n                - seventeenPlus\n                - sexualContentGraphicAndNudity\n                - sexualContentOrNudity\n                - unrestrictedWebAccess\n                - violenceCartoonOrFantasy\n                - violenceRealistic\n                - violenceRealisticProlongedGraphicOrSadistic\n          style: form\n          explode: false\n        - name: 'fields[appInfos]'\n          in: query\n          description: the fields to include for returned resources of type appInfos\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ageRatingDeclaration\n                - app\n                - appInfoLocalizations\n                - appStoreAgeRating\n                - appStoreState\n                - brazilAgeRating\n                - kidsAgeBand\n                - primaryCategory\n                - primarySubcategoryOne\n                - primarySubcategoryTwo\n                - secondaryCategory\n                - secondarySubcategoryOne\n                - secondarySubcategoryTwo\n          style: form\n          explode: false\n        - name: 'fields[appCategories]'\n          in: query\n          description: the fields to include for returned resources of type appCategories\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - parent\n                - platforms\n                - subcategories\n          style: form\n          explode: false\n        - name: 'fields[appInfoLocalizations]'\n          in: query\n          description: the fields to include for returned resources of type appInfoLocalizations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfo\n                - locale\n                - name\n                - privacyPolicyText\n                - privacyPolicyUrl\n                - subtitle\n          style: form\n          explode: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appInfoLocalizations\n                - primaryCategory\n                - primarySubcategoryOne\n                - primarySubcategoryTwo\n                - secondaryCategory\n                - secondarySubcategoryOne\n                - secondarySubcategoryTwo\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppInfosResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/apps/{id}/appStoreVersions':\n    get:\n      tags:\n        - Apps\n      operationId: apps-appStoreVersions-get_to_many_related\n      parameters:\n        - name: 'filter[appStoreState]'\n          in: query\n          description: filter by attribute 'appStoreState'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - DEVELOPER_REMOVED_FROM_SALE\n                - DEVELOPER_REJECTED\n                - IN_REVIEW\n                - INVALID_BINARY\n                - METADATA_REJECTED\n                - PENDING_APPLE_RELEASE\n                - PENDING_CONTRACT\n                - PENDING_DEVELOPER_RELEASE\n                - PREPARE_FOR_SUBMISSION\n                - PREORDER_READY_FOR_SALE\n                - PROCESSING_FOR_APP_STORE\n                - READY_FOR_SALE\n                - REJECTED\n                - REMOVED_FROM_SALE\n                - WAITING_FOR_EXPORT_COMPLIANCE\n                - WAITING_FOR_REVIEW\n                - REPLACED_WITH_NEW_VERSION\n          style: form\n          explode: false\n        - name: 'filter[platform]'\n          in: query\n          description: filter by attribute 'platform'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - IOS\n                - MAC_OS\n                - TV_OS\n          style: form\n          explode: false\n        - name: 'filter[versionString]'\n          in: query\n          description: filter by attribute 'versionString'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n        - name: 'filter[id]'\n          in: query\n          description: filter by id(s)\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n        - name: 'fields[idfaDeclarations]'\n          in: query\n          description: the fields to include for returned resources of type idfaDeclarations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreVersion\n                - attributesActionWithPreviousAd\n                - attributesAppInstallationToPreviousAd\n                - honorsLimitedAdTracking\n                - servesAds\n          style: form\n          explode: false\n        - name: 'fields[appStoreVersionLocalizations]'\n          in: query\n          description: the fields to include for returned resources of type appStoreVersionLocalizations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appPreviewSets\n                - appScreenshotSets\n                - appStoreVersion\n                - description\n                - keywords\n                - locale\n                - marketingUrl\n                - promotionalText\n                - supportUrl\n                - whatsNew\n          style: form\n          explode: false\n        - name: 'fields[routingAppCoverages]'\n          in: query\n          description: the fields to include for returned resources of type routingAppCoverages\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreVersion\n                - assetDeliveryState\n                - fileName\n                - fileSize\n                - sourceFileChecksum\n                - uploadOperations\n                - uploaded\n          style: form\n          explode: false\n        - name: 'fields[appStoreVersionPhasedReleases]'\n          in: query\n          description: the fields to include for returned resources of type appStoreVersionPhasedReleases\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreVersion\n                - currentDayNumber\n                - phasedReleaseState\n                - startDate\n                - totalPauseDuration\n          style: form\n          explode: false\n        - name: 'fields[ageRatingDeclarations]'\n          in: query\n          description: the fields to include for returned resources of type ageRatingDeclarations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - alcoholTobaccoOrDrugUseOrReferences\n                - gamblingAndContests\n                - gamblingSimulated\n                - horrorOrFearThemes\n                - kidsAgeBand\n                - matureOrSuggestiveThemes\n                - medicalOrTreatmentInformation\n                - profanityOrCrudeHumor\n                - sexualContentGraphicAndNudity\n                - sexualContentOrNudity\n                - unrestrictedWebAccess\n                - violenceCartoonOrFantasy\n                - violenceRealistic\n                - violenceRealisticProlongedGraphicOrSadistic\n          style: form\n          explode: false\n        - name: 'fields[appStoreReviewDetails]'\n          in: query\n          description: the fields to include for returned resources of type appStoreReviewDetails\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreReviewAttachments\n                - appStoreVersion\n                - contactEmail\n                - contactFirstName\n                - contactLastName\n                - contactPhone\n                - demoAccountName\n                - demoAccountPassword\n                - demoAccountRequired\n                - notes\n          style: form\n          explode: false\n        - name: 'fields[appStoreVersions]'\n          in: query\n          description: the fields to include for returned resources of type appStoreVersions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ageRatingDeclaration\n                - app\n                - appStoreReviewDetail\n                - appStoreState\n                - appStoreVersionLocalizations\n                - appStoreVersionPhasedRelease\n                - appStoreVersionSubmission\n                - build\n                - copyright\n                - createdDate\n                - downloadable\n                - earliestReleaseDate\n                - idfaDeclaration\n                - platform\n                - releaseType\n                - routingAppCoverage\n                - usesIdfa\n                - versionString\n          style: form\n          explode: false\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n        - name: 'fields[appStoreVersionSubmissions]'\n          in: query\n          description: the fields to include for returned resources of type appStoreVersionSubmissions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appStoreVersion\n          style: form\n          explode: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ageRatingDeclaration\n                - app\n                - appStoreReviewDetail\n                - appStoreVersionLocalizations\n                - appStoreVersionPhasedRelease\n                - appStoreVersionSubmission\n                - build\n                - idfaDeclaration\n                - routingAppCoverage\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStoreVersionsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/apps/{id}/availableTerritories':\n    get:\n      tags:\n        - Apps\n      operationId: apps-availableTerritories-get_to_many_related\n      parameters:\n        - name: 'fields[territories]'\n          in: query\n          description: the fields to include for returned resources of type territories\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - currency\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TerritoriesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/apps/{id}/betaAppLocalizations':\n    get:\n      tags:\n        - Apps\n      operationId: apps-betaAppLocalizations-get_to_many_related\n      parameters:\n        - name: 'fields[betaAppLocalizations]'\n          in: query\n          description: the fields to include for returned resources of type betaAppLocalizations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - description\n                - feedbackEmail\n                - locale\n                - marketingUrl\n                - privacyPolicyUrl\n                - tvOsPrivacyPolicy\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaAppLocalizationsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/apps/{id}/betaAppReviewDetail':\n    get:\n      tags:\n        - Apps\n      operationId: apps-betaAppReviewDetail-get_to_one_related\n      parameters:\n        - name: 'fields[betaAppReviewDetails]'\n          in: query\n          description: the fields to include for returned resources of type betaAppReviewDetails\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - contactEmail\n                - contactFirstName\n                - contactLastName\n                - contactPhone\n                - demoAccountName\n                - demoAccountPassword\n                - demoAccountRequired\n                - notes\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaAppReviewDetailResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/apps/{id}/betaGroups':\n    get:\n      tags:\n        - Apps\n      operationId: apps-betaGroups-get_to_many_related\n      parameters:\n        - name: 'fields[betaGroups]'\n          in: query\n          description: the fields to include for returned resources of type betaGroups\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - betaTesters\n                - builds\n                - createdDate\n                - feedbackEnabled\n                - isInternalGroup\n                - name\n                - publicLink\n                - publicLinkEnabled\n                - publicLinkId\n                - publicLinkLimit\n                - publicLinkLimitEnabled\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaGroupsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/apps/{id}/betaLicenseAgreement':\n    get:\n      tags:\n        - Apps\n      operationId: apps-betaLicenseAgreement-get_to_one_related\n      parameters:\n        - name: 'fields[betaLicenseAgreements]'\n          in: query\n          description: the fields to include for returned resources of type betaLicenseAgreements\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - agreementText\n                - app\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaLicenseAgreementResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/apps/{id}/relationships/betaTesters':\n    delete:\n      tags:\n        - Apps\n      operationId: apps-betaTesters-delete_to_many_relationship\n      # requestBody:\n      #   description: List of related linkages\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/AppBetaTestersLinkagesRequest'\n      #   required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/apps/{id}/builds':\n    get:\n      tags:\n        - Apps\n      operationId: apps-builds-get_to_many_related\n      parameters:\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/apps/{id}/endUserLicenseAgreement':\n    get:\n      tags:\n        - Apps\n      operationId: apps-endUserLicenseAgreement-get_to_one_related\n      parameters:\n        - name: 'fields[endUserLicenseAgreements]'\n          in: query\n          description: the fields to include for returned resources of type endUserLicenseAgreements\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - agreementText\n                - app\n                - territories\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EndUserLicenseAgreementResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/apps/{id}/gameCenterEnabledVersions':\n    get:\n      tags:\n        - Apps\n      operationId: apps-gameCenterEnabledVersions-get_to_many_related\n      parameters:\n        - name: 'filter[platform]'\n          in: query\n          description: filter by attribute 'platform'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - IOS\n                - MAC_OS\n                - TV_OS\n          style: form\n          explode: false\n        - name: 'filter[versionString]'\n          in: query\n          description: filter by attribute 'versionString'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n        - name: 'filter[id]'\n          in: query\n          description: filter by id(s)\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n        - name: sort\n          in: query\n          description: comma-separated list of sort expressions; resources will be sorted as specified\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - versionString\n                - '-versionString'\n          style: form\n          explode: false\n        - name: 'fields[gameCenterEnabledVersions]'\n          in: query\n          description: the fields to include for returned resources of type gameCenterEnabledVersions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - compatibleVersions\n                - iconAsset\n                - platform\n                - versionString\n          style: form\n          explode: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - compatibleVersions\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GameCenterEnabledVersionsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/apps/{id}/inAppPurchases':\n    get:\n      tags:\n        - Apps\n      operationId: apps-inAppPurchases-get_to_many_related\n      parameters:\n        - name: 'filter[inAppPurchaseType]'\n          in: query\n          description: filter by attribute 'inAppPurchaseType'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - AUTOMATICALLY_RENEWABLE_SUBSCRIPTION\n                - NON_CONSUMABLE\n                - CONSUMABLE\n                - NON_RENEWING_SUBSCRIPTION\n                - FREE_SUBSCRIPTION\n          style: form\n          explode: false\n        - name: 'filter[canBeSubmitted]'\n          in: query\n          description: filter by canBeSubmitted\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n        - name: sort\n          in: query\n          description: comma-separated list of sort expressions; resources will be sorted as specified\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - inAppPurchaseType\n                - '-inAppPurchaseType'\n                - productId\n                - '-productId'\n                - referenceName\n                - '-referenceName'\n          style: form\n          explode: false\n        - name: 'fields[inAppPurchases]'\n          in: query\n          description: the fields to include for returned resources of type inAppPurchases\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - apps\n                - inAppPurchaseType\n                - productId\n                - referenceName\n                - state\n          style: form\n          explode: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - apps\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InAppPurchasesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/apps/{id}/perfPowerMetrics':\n    get:\n      tags:\n        - Apps\n      operationId: apps-perfPowerMetrics-get_to_many_related\n      parameters:\n        - name: 'filter[deviceType]'\n          in: query\n          description: filter by attribute 'deviceType'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n        - name: 'filter[metricType]'\n          in: query\n          description: filter by attribute 'metricType'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - DISK\n                - HANG\n                - BATTERY\n                - LAUNCH\n                - MEMORY\n                - ANIMATION\n                - TERMINATION\n          style: form\n          explode: false\n        - name: 'filter[platform]'\n          in: query\n          description: filter by attribute 'platform'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - IOS\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PerfPowerMetricsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/apps/{id}/preOrder':\n    get:\n      tags:\n        - Apps\n      operationId: apps-preOrder-get_to_one_related\n      parameters:\n        - name: 'fields[appPreOrders]'\n          in: query\n          description: the fields to include for returned resources of type appPreOrders\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appReleaseDate\n                - preOrderAvailableDate\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppPreOrderResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/apps/{id}/preReleaseVersions':\n    get:\n      tags:\n        - Apps\n      operationId: apps-preReleaseVersions-get_to_many_related\n      parameters:\n        - name: 'fields[preReleaseVersions]'\n          in: query\n          description: the fields to include for returned resources of type preReleaseVersions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - builds\n                - platform\n                - version\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreReleaseVersionsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/apps/{id}/prices':\n    get:\n      tags:\n        - Apps\n      operationId: apps-prices-get_to_many_related\n      parameters:\n        - name: 'fields[appPrices]'\n          in: query\n          description: the fields to include for returned resources of type appPrices\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - priceTier\n          style: form\n          explode: false\n        - name: 'fields[appPriceTiers]'\n          in: query\n          description: the fields to include for returned resources of type appPriceTiers\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - pricePoints\n          style: form\n          explode: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - priceTier\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppPricesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/betaAppLocalizations/{id}/app':\n    get:\n      tags:\n        - BetaAppLocalizations\n      operationId: betaAppLocalizations-app-get_to_one_related\n      parameters:\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/betaAppReviewDetails/{id}/app':\n    get:\n      tags:\n        - BetaAppReviewDetails\n      operationId: betaAppReviewDetails-app-get_to_one_related\n      parameters:\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/betaAppReviewSubmissions/{id}/build':\n    get:\n      tags:\n        - BetaAppReviewSubmissions\n      operationId: betaAppReviewSubmissions-build-get_to_one_related\n      parameters:\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/betaBuildLocalizations/{id}/build':\n    get:\n      tags:\n        - BetaBuildLocalizations\n      operationId: betaBuildLocalizations-build-get_to_one_related\n      parameters:\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/betaGroups/{id}/app':\n    get:\n      tags:\n        - BetaGroups\n      operationId: betaGroups-app-get_to_one_related\n      parameters:\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/betaGroups/{id}/relationships/betaTesters':\n    get:\n      tags:\n        - BetaGroups\n      operationId: betaGroups-betaTesters-get_to_many_relationship\n      parameters:\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related linkages\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaGroupBetaTestersLinkagesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - BetaGroups\n      operationId: betaGroups-betaTesters-create_to_many_relationship\n      requestBody:\n        description: List of related linkages\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaGroupBetaTestersLinkagesRequest'\n        required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - BetaGroups\n      operationId: betaGroups-betaTesters-delete_to_many_relationship\n      # requestBody:\n      #   description: List of related linkages\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/BetaGroupBetaTestersLinkagesRequest'\n      #   required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/betaGroups/{id}/betaTesters':\n    get:\n      tags:\n        - BetaGroups\n      operationId: betaGroups-betaTesters-get_to_many_related\n      parameters:\n        - name: 'fields[betaTesters]'\n          in: query\n          description: the fields to include for returned resources of type betaTesters\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - apps\n                - betaGroups\n                - builds\n                - email\n                - firstName\n                - inviteType\n                - lastName\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaTestersResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/betaGroups/{id}/relationships/builds':\n    get:\n      tags:\n        - BetaGroups\n      operationId: betaGroups-builds-get_to_many_relationship\n      parameters:\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related linkages\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaGroupBuildsLinkagesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - BetaGroups\n      operationId: betaGroups-builds-create_to_many_relationship\n      requestBody:\n        description: List of related linkages\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaGroupBuildsLinkagesRequest'\n        required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - BetaGroups\n      operationId: betaGroups-builds-delete_to_many_relationship\n      # requestBody:\n      #   description: List of related linkages\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/BetaGroupBuildsLinkagesRequest'\n      #   required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/betaGroups/{id}/builds':\n    get:\n      tags:\n        - BetaGroups\n      operationId: betaGroups-builds-get_to_many_related\n      parameters:\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/betaLicenseAgreements/{id}/app':\n    get:\n      tags:\n        - BetaLicenseAgreements\n      operationId: betaLicenseAgreements-app-get_to_one_related\n      parameters:\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/betaTesters/{id}/relationships/apps':\n    get:\n      tags:\n        - BetaTesters\n      operationId: betaTesters-apps-get_to_many_relationship\n      parameters:\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related linkages\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaTesterAppsLinkagesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - BetaTesters\n      operationId: betaTesters-apps-delete_to_many_relationship\n      # requestBody:\n      #   description: List of related linkages\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/BetaTesterAppsLinkagesRequest'\n      #   required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/betaTesters/{id}/apps':\n    get:\n      tags:\n        - BetaTesters\n      operationId: betaTesters-apps-get_to_many_related\n      parameters:\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/betaTesters/{id}/relationships/betaGroups':\n    get:\n      tags:\n        - BetaTesters\n      operationId: betaTesters-betaGroups-get_to_many_relationship\n      parameters:\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related linkages\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaTesterBetaGroupsLinkagesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - BetaTesters\n      operationId: betaTesters-betaGroups-create_to_many_relationship\n      requestBody:\n        description: List of related linkages\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaTesterBetaGroupsLinkagesRequest'\n        required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - BetaTesters\n      operationId: betaTesters-betaGroups-delete_to_many_relationship\n      # requestBody:\n      #   description: List of related linkages\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/BetaTesterBetaGroupsLinkagesRequest'\n      #   required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/betaTesters/{id}/betaGroups':\n    get:\n      tags:\n        - BetaTesters\n      operationId: betaTesters-betaGroups-get_to_many_related\n      parameters:\n        - name: 'fields[betaGroups]'\n          in: query\n          description: the fields to include for returned resources of type betaGroups\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - betaTesters\n                - builds\n                - createdDate\n                - feedbackEnabled\n                - isInternalGroup\n                - name\n                - publicLink\n                - publicLinkEnabled\n                - publicLinkId\n                - publicLinkLimit\n                - publicLinkLimitEnabled\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaGroupsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/betaTesters/{id}/relationships/builds':\n    get:\n      tags:\n        - BetaTesters\n      operationId: betaTesters-builds-get_to_many_relationship\n      parameters:\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related linkages\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaTesterBuildsLinkagesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - BetaTesters\n      operationId: betaTesters-builds-create_to_many_relationship\n      requestBody:\n        description: List of related linkages\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaTesterBuildsLinkagesRequest'\n        required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - BetaTesters\n      operationId: betaTesters-builds-delete_to_many_relationship\n      # requestBody:\n      #   description: List of related linkages\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/BetaTesterBuildsLinkagesRequest'\n      #   required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/betaTesters/{id}/builds':\n    get:\n      tags:\n        - BetaTesters\n      operationId: betaTesters-builds-get_to_many_related\n      parameters:\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/buildBetaDetails/{id}/build':\n    get:\n      tags:\n        - BuildBetaDetails\n      operationId: buildBetaDetails-build-get_to_one_related\n      parameters:\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/builds/{id}/app':\n    get:\n      tags:\n        - Builds\n      operationId: builds-app-get_to_one_related\n      parameters:\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/builds/{id}/relationships/appEncryptionDeclaration':\n    get:\n      tags:\n        - Builds\n      operationId: builds-appEncryptionDeclaration-get_to_one_relationship\n      parameters: []\n      responses:\n        '200':\n          description: Related linkage\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildAppEncryptionDeclarationLinkageResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - Builds\n      operationId: builds-appEncryptionDeclaration-update_to_one_relationship\n      requestBody:\n        description: Related linkage\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BuildAppEncryptionDeclarationLinkageRequest'\n        required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/builds/{id}/appEncryptionDeclaration':\n    get:\n      tags:\n        - Builds\n      operationId: builds-appEncryptionDeclaration-get_to_one_related\n      parameters:\n        - name: 'fields[appEncryptionDeclarations]'\n          in: query\n          description: the fields to include for returned resources of type appEncryptionDeclarations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclarationState\n                - availableOnFrenchStore\n                - builds\n                - codeValue\n                - containsProprietaryCryptography\n                - containsThirdPartyCryptography\n                - documentName\n                - documentType\n                - documentUrl\n                - exempt\n                - platform\n                - uploadedDate\n                - usesEncryption\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppEncryptionDeclarationResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/builds/{id}/appStoreVersion':\n    get:\n      tags:\n        - Builds\n      operationId: builds-appStoreVersion-get_to_one_related\n      parameters:\n        - name: 'fields[appStoreVersions]'\n          in: query\n          description: the fields to include for returned resources of type appStoreVersions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ageRatingDeclaration\n                - app\n                - appStoreReviewDetail\n                - appStoreState\n                - appStoreVersionLocalizations\n                - appStoreVersionPhasedRelease\n                - appStoreVersionSubmission\n                - build\n                - copyright\n                - createdDate\n                - downloadable\n                - earliestReleaseDate\n                - idfaDeclaration\n                - platform\n                - releaseType\n                - routingAppCoverage\n                - usesIdfa\n                - versionString\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppStoreVersionResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/builds/{id}/betaAppReviewSubmission':\n    get:\n      tags:\n        - Builds\n      operationId: builds-betaAppReviewSubmission-get_to_one_related\n      parameters:\n        - name: 'fields[betaAppReviewSubmissions]'\n          in: query\n          description: the fields to include for returned resources of type betaAppReviewSubmissions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - betaReviewState\n                - build\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaAppReviewSubmissionResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/builds/{id}/betaBuildLocalizations':\n    get:\n      tags:\n        - Builds\n      operationId: builds-betaBuildLocalizations-get_to_many_related\n      parameters:\n        - name: 'fields[betaBuildLocalizations]'\n          in: query\n          description: the fields to include for returned resources of type betaBuildLocalizations\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - build\n                - locale\n                - whatsNew\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaBuildLocalizationsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/builds/{id}/relationships/betaGroups':\n    post:\n      tags:\n        - Builds\n      operationId: builds-betaGroups-create_to_many_relationship\n      requestBody:\n        description: List of related linkages\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BuildBetaGroupsLinkagesRequest'\n        required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - Builds\n      operationId: builds-betaGroups-delete_to_many_relationship\n      # requestBody:\n      #   description: List of related linkages\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/BuildBetaGroupsLinkagesRequest'\n      #   required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/builds/{id}/buildBetaDetail':\n    get:\n      tags:\n        - Builds\n      operationId: builds-buildBetaDetail-get_to_one_related\n      parameters:\n        - name: 'fields[buildBetaDetails]'\n          in: query\n          description: the fields to include for returned resources of type buildBetaDetails\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - autoNotifyEnabled\n                - build\n                - externalBuildState\n                - internalBuildState\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildBetaDetailResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/builds/{id}/diagnosticSignatures':\n    get:\n      tags:\n        - Builds\n      operationId: builds-diagnosticSignatures-get_to_many_related\n      parameters:\n        - name: 'filter[diagnosticType]'\n          in: query\n          description: filter by attribute 'diagnosticType'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - DISK_WRITES\n          style: form\n          explode: false\n        - name: 'fields[diagnosticSignatures]'\n          in: query\n          description: the fields to include for returned resources of type diagnosticSignatures\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - diagnosticType\n                - logs\n                - signature\n                - weight\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DiagnosticSignaturesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/builds/{id}/icons':\n    get:\n      tags:\n        - Builds\n      operationId: builds-icons-get_to_many_related\n      parameters:\n        - name: 'fields[buildIcons]'\n          in: query\n          description: the fields to include for returned resources of type buildIcons\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - iconAsset\n                - iconType\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildIconsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/builds/{id}/relationships/individualTesters':\n    get:\n      tags:\n        - Builds\n      operationId: builds-individualTesters-get_to_many_relationship\n      parameters:\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related linkages\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildIndividualTestersLinkagesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - Builds\n      operationId: builds-individualTesters-create_to_many_relationship\n      requestBody:\n        description: List of related linkages\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BuildIndividualTestersLinkagesRequest'\n        required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - Builds\n      operationId: builds-individualTesters-delete_to_many_relationship\n      # requestBody:\n      #   description: List of related linkages\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/BuildIndividualTestersLinkagesRequest'\n      #   required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/builds/{id}/individualTesters':\n    get:\n      tags:\n        - Builds\n      operationId: builds-individualTesters-get_to_many_related\n      parameters:\n        - name: 'fields[betaTesters]'\n          in: query\n          description: the fields to include for returned resources of type betaTesters\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - apps\n                - betaGroups\n                - builds\n                - email\n                - firstName\n                - inviteType\n                - lastName\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaTestersResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/builds/{id}/perfPowerMetrics':\n    get:\n      tags:\n        - Builds\n      operationId: builds-perfPowerMetrics-get_to_many_related\n      parameters:\n        - name: 'filter[deviceType]'\n          in: query\n          description: filter by attribute 'deviceType'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n        - name: 'filter[metricType]'\n          in: query\n          description: filter by attribute 'metricType'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - DISK\n                - HANG\n                - BATTERY\n                - LAUNCH\n                - MEMORY\n                - ANIMATION\n                - TERMINATION\n          style: form\n          explode: false\n        - name: 'filter[platform]'\n          in: query\n          description: filter by attribute 'platform'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - IOS\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PerfPowerMetricsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/builds/{id}/preReleaseVersion':\n    get:\n      tags:\n        - Builds\n      operationId: builds-preReleaseVersion-get_to_one_related\n      parameters:\n        - name: 'fields[preReleaseVersions]'\n          in: query\n          description: the fields to include for returned resources of type preReleaseVersions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - builds\n                - platform\n                - version\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PrereleaseVersionResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/bundleIds/{id}/app':\n    get:\n      tags:\n        - BundleIds\n      operationId: bundleIds-app-get_to_one_related\n      parameters:\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/bundleIds/{id}/bundleIdCapabilities':\n    get:\n      tags:\n        - BundleIds\n      operationId: bundleIds-bundleIdCapabilities-get_to_many_related\n      parameters:\n        - name: 'fields[bundleIdCapabilities]'\n          in: query\n          description: the fields to include for returned resources of type bundleIdCapabilities\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - bundleId\n                - capabilityType\n                - settings\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BundleIdCapabilitiesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/bundleIds/{id}/profiles':\n    get:\n      tags:\n        - BundleIds\n      operationId: bundleIds-profiles-get_to_many_related\n      parameters:\n        - name: 'fields[profiles]'\n          in: query\n          description: the fields to include for returned resources of type profiles\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - bundleId\n                - certificates\n                - createdDate\n                - devices\n                - expirationDate\n                - name\n                - platform\n                - profileContent\n                - profileState\n                - profileType\n                - uuid\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProfilesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/diagnosticSignatures/{id}/logs':\n    get:\n      tags:\n        - DiagnosticSignatures\n      operationId: diagnosticSignatures-logs-get_to_many_related\n      parameters:\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DiagnosticLogsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/endUserLicenseAgreements/{id}/territories':\n    get:\n      tags:\n        - EndUserLicenseAgreements\n      operationId: endUserLicenseAgreements-territories-get_to_many_related\n      parameters:\n        - name: 'fields[territories]'\n          in: query\n          description: the fields to include for returned resources of type territories\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - currency\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TerritoriesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions':\n    get:\n      tags:\n        - GameCenterEnabledVersions\n      operationId: gameCenterEnabledVersions-compatibleVersions-get_to_many_relationship\n      parameters:\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related linkages\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GameCenterEnabledVersionCompatibleVersionsLinkagesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - GameCenterEnabledVersions\n      operationId: gameCenterEnabledVersions-compatibleVersions-create_to_many_relationship\n      requestBody:\n        description: List of related linkages\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GameCenterEnabledVersionCompatibleVersionsLinkagesRequest'\n        required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - GameCenterEnabledVersions\n      operationId: gameCenterEnabledVersions-compatibleVersions-replace_to_many_relationship\n      requestBody:\n        description: List of related linkages\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GameCenterEnabledVersionCompatibleVersionsLinkagesRequest'\n        required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - GameCenterEnabledVersions\n      operationId: gameCenterEnabledVersions-compatibleVersions-delete_to_many_relationship\n      # requestBody:\n      #   description: List of related linkages\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/GameCenterEnabledVersionCompatibleVersionsLinkagesRequest'\n      #   required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/gameCenterEnabledVersions/{id}/compatibleVersions':\n    get:\n      tags:\n        - GameCenterEnabledVersions\n      operationId: gameCenterEnabledVersions-compatibleVersions-get_to_many_related\n      parameters:\n        - name: 'filter[platform]'\n          in: query\n          description: filter by attribute 'platform'\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - IOS\n                - MAC_OS\n                - TV_OS\n          style: form\n          explode: false\n        - name: 'filter[versionString]'\n          in: query\n          description: filter by attribute 'versionString'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n        - name: 'filter[app]'\n          in: query\n          description: filter by id(s) of related 'app'\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n        - name: 'filter[id]'\n          in: query\n          description: filter by id(s)\n          schema:\n            type: array\n            items:\n              type: string\n          style: form\n          explode: false\n        - name: sort\n          in: query\n          description: comma-separated list of sort expressions; resources will be sorted as specified\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - versionString\n                - '-versionString'\n          style: form\n          explode: false\n        - name: 'fields[gameCenterEnabledVersions]'\n          in: query\n          description: the fields to include for returned resources of type gameCenterEnabledVersions\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - compatibleVersions\n                - iconAsset\n                - platform\n                - versionString\n          style: form\n          explode: false\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n        - name: include\n          in: query\n          description: comma-separated list of relationships to include\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - compatibleVersions\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GameCenterEnabledVersionsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/preReleaseVersions/{id}/app':\n    get:\n      tags:\n        - PreReleaseVersions\n      operationId: preReleaseVersions-app-get_to_one_related\n      parameters:\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/preReleaseVersions/{id}/builds':\n    get:\n      tags:\n        - PreReleaseVersions\n      operationId: preReleaseVersions-builds-get_to_many_related\n      parameters:\n        - name: 'fields[builds]'\n          in: query\n          description: the fields to include for returned resources of type builds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - appStoreVersion\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - diagnosticSignatures\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - icons\n                - individualTesters\n                - minOsVersion\n                - perfPowerMetrics\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - version\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/profiles/{id}/bundleId':\n    get:\n      tags:\n        - Profiles\n      operationId: profiles-bundleId-get_to_one_related\n      parameters:\n        - name: 'fields[bundleIds]'\n          in: query\n          description: the fields to include for returned resources of type bundleIds\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - bundleIdCapabilities\n                - identifier\n                - name\n                - platform\n                - profiles\n                - seedId\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: Related resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BundleIdResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/profiles/{id}/certificates':\n    get:\n      tags:\n        - Profiles\n      operationId: profiles-certificates-get_to_many_related\n      parameters:\n        - name: 'fields[certificates]'\n          in: query\n          description: the fields to include for returned resources of type certificates\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - certificateContent\n                - certificateType\n                - csrContent\n                - displayName\n                - expirationDate\n                - name\n                - platform\n                - serialNumber\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificatesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/profiles/{id}/devices':\n    get:\n      tags:\n        - Profiles\n      operationId: profiles-devices-get_to_many_related\n      parameters:\n        - name: 'fields[devices]'\n          in: query\n          description: the fields to include for returned resources of type devices\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - addedDate\n                - deviceClass\n                - model\n                - name\n                - platform\n                - status\n                - udid\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DevicesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/userInvitations/{id}/visibleApps':\n    get:\n      tags:\n        - UserInvitations\n      operationId: userInvitations-visibleApps-get_to_many_related\n      parameters:\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/users/{id}/relationships/visibleApps':\n    get:\n      tags:\n        - Users\n      operationId: users-visibleApps-get_to_many_relationship\n      parameters:\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related linkages\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserVisibleAppsLinkagesResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - Users\n      operationId: users-visibleApps-create_to_many_relationship\n      requestBody:\n        description: List of related linkages\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserVisibleAppsLinkagesRequest'\n        required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n        - Users\n      operationId: users-visibleApps-replace_to_many_relationship\n      requestBody:\n        description: List of related linkages\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserVisibleAppsLinkagesRequest'\n        required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - Users\n      operationId: users-visibleApps-delete_to_many_relationship\n      # requestBody:\n      #   description: List of related linkages\n      #   content:\n      #     application/json:\n      #       schema:\n      #         $ref: '#/components/schemas/UserVisibleAppsLinkagesRequest'\n      #   required: true\n      responses:\n        '204':\n          description: Success (no content)\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Request entity error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\n  '/v1/users/{id}/visibleApps':\n    get:\n      tags:\n        - Users\n      operationId: users-visibleApps-get_to_many_related\n      parameters:\n        - name: 'fields[apps]'\n          in: query\n          description: the fields to include for returned resources of type apps\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - appInfos\n                - appStoreVersions\n                - availableInNewTerritories\n                - availableTerritories\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - contentRightsDeclaration\n                - endUserLicenseAgreement\n                - gameCenterEnabledVersions\n                - inAppPurchases\n                - isOrEverWasMadeForKids\n                - name\n                - perfPowerMetrics\n                - preOrder\n                - preReleaseVersions\n                - prices\n                - primaryLocale\n                - sku\n          style: form\n          explode: false\n        - name: limit\n          in: query\n          description: maximum resources per page\n          schema:\n            type: integer\n            maximum: 200\n          style: form\n      responses:\n        '200':\n          description: List of related resources\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppsResponse'\n        '400':\n          description: Parameter error(s)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Forbidden error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - name: id\n        in: path\n        description: the id of the requested resource\n        schema:\n          type: string\n        style: simple\n        required: true\ncomponents:\n  schemas:\n    AgeRatingDeclaration:\n      type: object\n      title: AgeRatingDeclaration\n      properties:\n        type:\n          type: string\n          enum:\n            - ageRatingDeclarations\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            alcoholTobaccoOrDrugUseOrReferences:\n              type: string\n              enum:\n                - NONE\n                - INFREQUENT_OR_MILD\n                - FREQUENT_OR_INTENSE\n            contests:\n              type: string\n              enum:\n                - NONE\n                - INFREQUENT_OR_MILD\n                - FREQUENT_OR_INTENSE\n            gamblingAndContests:\n              deprecated: true\n              type: boolean\n            gambling:\n              type: boolean\n            gamblingSimulated:\n              type: string\n              enum:\n                - NONE\n                - INFREQUENT_OR_MILD\n                - FREQUENT_OR_INTENSE\n            kidsAgeBand:\n              $ref: '#/components/schemas/KidsAgeBand'\n            medicalOrTreatmentInformation:\n              type: string\n              enum:\n                - NONE\n                - INFREQUENT_OR_MILD\n                - FREQUENT_OR_INTENSE\n            profanityOrCrudeHumor:\n              type: string\n              enum:\n                - NONE\n                - INFREQUENT_OR_MILD\n                - FREQUENT_OR_INTENSE\n            sexualContentGraphicAndNudity:\n              type: string\n              enum:\n                - NONE\n                - INFREQUENT_OR_MILD\n                - FREQUENT_OR_INTENSE\n            sexualContentOrNudity:\n              type: string\n              enum:\n                - NONE\n                - INFREQUENT_OR_MILD\n                - FREQUENT_OR_INTENSE\n            seventeenPlus:\n              type: boolean\n            horrorOrFearThemes:\n              type: string\n              enum:\n                - NONE\n                - INFREQUENT_OR_MILD\n                - FREQUENT_OR_INTENSE\n            matureOrSuggestiveThemes:\n              type: string\n              enum:\n                - NONE\n                - INFREQUENT_OR_MILD\n                - FREQUENT_OR_INTENSE\n            unrestrictedWebAccess:\n              type: boolean\n            violenceCartoonOrFantasy:\n              type: string\n              enum:\n                - NONE\n                - INFREQUENT_OR_MILD\n                - FREQUENT_OR_INTENSE\n            violenceRealisticProlongedGraphicOrSadistic:\n              type: string\n              enum:\n                - NONE\n                - INFREQUENT_OR_MILD\n                - FREQUENT_OR_INTENSE\n            violenceRealistic:\n              type: string\n              enum:\n                - NONE\n                - INFREQUENT_OR_MILD\n                - FREQUENT_OR_INTENSE\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    AgeRatingDeclarationResponse:\n      type: object\n      title: AgeRatingDeclarationResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/AgeRatingDeclaration'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    AgeRatingDeclarationUpdateRequest:\n      type: object\n      title: AgeRatingDeclarationUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - ageRatingDeclarations\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                alcoholTobaccoOrDrugUseOrReferences:\n                  type: string\n                  enum:\n                    - NONE\n                    - INFREQUENT_OR_MILD\n                    - FREQUENT_OR_INTENSE\n                contests:\n                  type: string\n                  enum:\n                    - NONE\n                    - INFREQUENT_OR_MILD\n                    - FREQUENT_OR_INTENSE\n                gamblingAndContests:\n                  deprecated: true\n                  type: boolean\n                gambling:\n                  type: boolean\n                gamblingSimulated:\n                  type: string\n                  enum:\n                    - NONE\n                    - INFREQUENT_OR_MILD\n                    - FREQUENT_OR_INTENSE\n                kidsAgeBand:\n                  $ref: '#/components/schemas/KidsAgeBand'\n                medicalOrTreatmentInformation:\n                  type: string\n                  enum:\n                    - NONE\n                    - INFREQUENT_OR_MILD\n                    - FREQUENT_OR_INTENSE\n                profanityOrCrudeHumor:\n                  type: string\n                  enum:\n                    - NONE\n                    - INFREQUENT_OR_MILD\n                    - FREQUENT_OR_INTENSE\n                sexualContentGraphicAndNudity:\n                  type: string\n                  enum:\n                    - NONE\n                    - INFREQUENT_OR_MILD\n                    - FREQUENT_OR_INTENSE\n                sexualContentOrNudity:\n                  type: string\n                  enum:\n                    - NONE\n                    - INFREQUENT_OR_MILD\n                    - FREQUENT_OR_INTENSE\n                seventeenPlus:\n                  type: boolean\n                horrorOrFearThemes:\n                  type: string\n                  enum:\n                    - NONE\n                    - INFREQUENT_OR_MILD\n                    - FREQUENT_OR_INTENSE\n                matureOrSuggestiveThemes:\n                  type: string\n                  enum:\n                    - NONE\n                    - INFREQUENT_OR_MILD\n                    - FREQUENT_OR_INTENSE\n                unrestrictedWebAccess:\n                  type: boolean\n                violenceCartoonOrFantasy:\n                  type: string\n                  enum:\n                    - NONE\n                    - INFREQUENT_OR_MILD\n                    - FREQUENT_OR_INTENSE\n                violenceRealisticProlongedGraphicOrSadistic:\n                  type: string\n                  enum:\n                    - NONE\n                    - INFREQUENT_OR_MILD\n                    - FREQUENT_OR_INTENSE\n                violenceRealistic:\n                  type: string\n                  enum:\n                    - NONE\n                    - INFREQUENT_OR_MILD\n                    - FREQUENT_OR_INTENSE\n          required:\n            - id\n            - type\n      required:\n        - data\n    AppCategory:\n      type: object\n      title: AppCategory\n      properties:\n        type:\n          type: string\n          enum:\n            - appCategories\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            platforms:\n              type: array\n              items:\n                $ref: '#/components/schemas/Platform'\n        relationships:\n          type: object\n          properties:\n            subcategories:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - appCategories\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n            parent:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appCategories\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    AppCategoriesResponse:\n      type: object\n      title: AppCategoriesResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppCategory'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/AppCategory'\n              - $ref: '#/components/schemas/AppCategory'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    AppCategoryResponse:\n      type: object\n      title: AppCategoryResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/AppCategory'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/AppCategory'\n              - $ref: '#/components/schemas/AppCategory'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    AppEncryptionDeclaration:\n      type: object\n      title: AppEncryptionDeclaration\n      properties:\n        type:\n          type: string\n          enum:\n            - appEncryptionDeclarations\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            usesEncryption:\n              type: boolean\n            exempt:\n              type: boolean\n            containsProprietaryCryptography:\n              type: boolean\n            containsThirdPartyCryptography:\n              type: boolean\n            availableOnFrenchStore:\n              type: boolean\n            platform:\n              $ref: '#/components/schemas/Platform'\n            uploadedDate:\n              type: string\n              format: date-time\n            documentUrl:\n              type: string\n            documentName:\n              type: string\n            documentType:\n              type: string\n            appEncryptionDeclarationState:\n              $ref: '#/components/schemas/AppEncryptionDeclarationState'\n            codeValue:\n              type: string\n        relationships:\n          type: object\n          properties:\n            app:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - apps\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    AppEncryptionDeclarationsResponse:\n      type: object\n      title: AppEncryptionDeclarationsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppEncryptionDeclaration'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/App'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    AppEncryptionDeclarationResponse:\n      type: object\n      title: AppEncryptionDeclarationResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/AppEncryptionDeclaration'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/App'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    AppInfoLocalization:\n      type: object\n      title: AppInfoLocalization\n      properties:\n        type:\n          type: string\n          enum:\n            - appInfoLocalizations\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            locale:\n              type: string\n            name:\n              type: string\n            subtitle:\n              type: string\n            privacyPolicyUrl:\n              type: string\n            privacyPolicyText:\n              type: string\n        relationships:\n          type: object\n          properties:\n            appInfo:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appInfos\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    AppInfoLocalizationsResponse:\n      type: object\n      title: AppInfoLocalizationsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppInfoLocalization'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    AppInfoLocalizationResponse:\n      type: object\n      title: AppInfoLocalizationResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/AppInfoLocalization'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    AppInfoLocalizationCreateRequest:\n      type: object\n      title: AppInfoLocalizationCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appInfoLocalizations\n            attributes:\n              type: object\n              properties:\n                locale:\n                  type: string\n                name:\n                  type: string\n                subtitle:\n                  type: string\n                privacyPolicyUrl:\n                  type: string\n                privacyPolicyText:\n                  type: string\n              required:\n                - locale\n            relationships:\n              type: object\n              properties:\n                appInfo:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - appInfos\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n              required:\n                - appInfo\n          required:\n            - relationships\n            - attributes\n            - type\n      required:\n        - data\n    AppInfoLocalizationUpdateRequest:\n      type: object\n      title: AppInfoLocalizationUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appInfoLocalizations\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                name:\n                  type: string\n                subtitle:\n                  type: string\n                privacyPolicyUrl:\n                  type: string\n                privacyPolicyText:\n                  type: string\n          required:\n            - id\n            - type\n      required:\n        - data\n    AppInfo:\n      type: object\n      title: AppInfo\n      properties:\n        type:\n          type: string\n          enum:\n            - appInfos\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            appStoreState:\n              $ref: '#/components/schemas/AppStoreVersionState'\n            appStoreAgeRating:\n              $ref: '#/components/schemas/AppStoreAgeRating'\n            brazilAgeRating:\n              $ref: '#/components/schemas/BrazilAgeRating'\n            kidsAgeBand:\n              $ref: '#/components/schemas/KidsAgeBand'\n        relationships:\n          type: object\n          properties:\n            app:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - apps\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            ageRatingDeclaration:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - ageRatingDeclarations\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            appInfoLocalizations:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - appInfoLocalizations\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n            primaryCategory:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appCategories\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            primarySubcategoryOne:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appCategories\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            primarySubcategoryTwo:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appCategories\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            secondaryCategory:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appCategories\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            secondarySubcategoryOne:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appCategories\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            secondarySubcategoryTwo:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appCategories\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    AppInfosResponse:\n      type: object\n      title: AppInfosResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppInfo'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/AppInfoLocalization'\n              - $ref: '#/components/schemas/AppCategory'\n              - $ref: '#/components/schemas/AppCategory'\n              - $ref: '#/components/schemas/AppCategory'\n              - $ref: '#/components/schemas/AppCategory'\n              - $ref: '#/components/schemas/AppCategory'\n              - $ref: '#/components/schemas/AppCategory'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    AppInfoResponse:\n      type: object\n      title: AppInfoResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/AppInfo'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/AppInfoLocalization'\n              - $ref: '#/components/schemas/AppCategory'\n              - $ref: '#/components/schemas/AppCategory'\n              - $ref: '#/components/schemas/AppCategory'\n              - $ref: '#/components/schemas/AppCategory'\n              - $ref: '#/components/schemas/AppCategory'\n              - $ref: '#/components/schemas/AppCategory'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    AppInfoUpdateRequest:\n      type: object\n      title: AppInfoUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appInfos\n            id:\n              type: string\n            relationships:\n              type: object\n              properties:\n                primaryCategory:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - appCategories\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                primarySubcategoryOne:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - appCategories\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                primarySubcategoryTwo:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - appCategories\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                secondaryCategory:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - appCategories\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                secondarySubcategoryOne:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - appCategories\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                secondarySubcategoryTwo:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - appCategories\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n          required:\n            - id\n            - type\n      required:\n        - data\n    AppPreOrder:\n      type: object\n      title: AppPreOrder\n      properties:\n        type:\n          type: string\n          enum:\n            - appPreOrders\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            preOrderAvailableDate:\n              type: string\n              format: date\n            appReleaseDate:\n              type: string\n              format: date\n        relationships:\n          type: object\n          properties:\n            app:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - apps\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    AppPreOrderResponse:\n      type: object\n      title: AppPreOrderResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/AppPreOrder'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    AppPreOrderCreateRequest:\n      type: object\n      title: AppPreOrderCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appPreOrders\n            attributes:\n              type: object\n              properties:\n                appReleaseDate:\n                  type: string\n                  format: date\n            relationships:\n              type: object\n              properties:\n                app:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - apps\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n              required:\n                - app\n          required:\n            - relationships\n            - type\n      required:\n        - data\n    AppPreOrderUpdateRequest:\n      type: object\n      title: AppPreOrderUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appPreOrders\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                appReleaseDate:\n                  type: string\n                  format: date\n          required:\n            - id\n            - type\n      required:\n        - data\n    AppPreviewSet:\n      type: object\n      title: AppPreviewSet\n      properties:\n        type:\n          type: string\n          enum:\n            - appPreviewSets\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            previewType:\n              $ref: '#/components/schemas/PreviewType'\n        relationships:\n          type: object\n          properties:\n            appStoreVersionLocalization:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appStoreVersionLocalizations\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            appPreviews:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - appPreviews\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    AppPreviewSetsResponse:\n      type: object\n      title: AppPreviewSetsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppPreviewSet'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppPreview'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    AppPreviewSetResponse:\n      type: object\n      title: AppPreviewSetResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/AppPreviewSet'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppPreview'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    AppPreviewSetCreateRequest:\n      type: object\n      title: AppPreviewSetCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appPreviewSets\n            attributes:\n              type: object\n              properties:\n                previewType:\n                  $ref: '#/components/schemas/PreviewType'\n              required:\n                - previewType\n            relationships:\n              type: object\n              properties:\n                appStoreVersionLocalization:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - appStoreVersionLocalizations\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n              required:\n                - appStoreVersionLocalization\n          required:\n            - relationships\n            - attributes\n            - type\n      required:\n        - data\n    AppPreview:\n      type: object\n      title: AppPreview\n      properties:\n        type:\n          type: string\n          enum:\n            - appPreviews\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            fileSize:\n              type: integer\n            fileName:\n              type: string\n            sourceFileChecksum:\n              type: string\n            previewFrameTimeCode:\n              type: string\n            mimeType:\n              type: string\n            videoUrl:\n              type: string\n            previewImage:\n              $ref: '#/components/schemas/ImageAsset'\n            uploadOperations:\n              type: array\n              items:\n                $ref: '#/components/schemas/UploadOperation'\n            assetDeliveryState:\n              $ref: '#/components/schemas/AppMediaAssetState'\n        relationships:\n          type: object\n          properties:\n            appPreviewSet:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appPreviewSets\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    AppPreviewsResponse:\n      type: object\n      title: AppPreviewsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppPreview'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    AppPreviewResponse:\n      type: object\n      title: AppPreviewResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/AppPreview'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    AppPreviewCreateRequest:\n      type: object\n      title: AppPreviewCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appPreviews\n            attributes:\n              type: object\n              properties:\n                fileSize:\n                  type: integer\n                fileName:\n                  type: string\n                previewFrameTimeCode:\n                  type: string\n                mimeType:\n                  type: string\n              required:\n                - fileName\n                - fileSize\n            relationships:\n              type: object\n              properties:\n                appPreviewSet:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - appPreviewSets\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n              required:\n                - appPreviewSet\n          required:\n            - relationships\n            - attributes\n            - type\n      required:\n        - data\n    AppPreviewUpdateRequest:\n      type: object\n      title: AppPreviewUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appPreviews\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                sourceFileChecksum:\n                  type: string\n                previewFrameTimeCode:\n                  type: string\n                uploaded:\n                  type: boolean\n          required:\n            - id\n            - type\n      required:\n        - data\n    AppPricePoint:\n      type: object\n      title: AppPricePoint\n      properties:\n        type:\n          type: string\n          enum:\n            - appPricePoints\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            customerPrice:\n              type: string\n            proceeds:\n              type: string\n        relationships:\n          type: object\n          properties:\n            priceTier:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appPriceTiers\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            territory:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - territories\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    AppPricePointsResponse:\n      type: object\n      title: AppPricePointsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppPricePoint'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/Territory'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    AppPricePointResponse:\n      type: object\n      title: AppPricePointResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/AppPricePoint'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/Territory'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    AppPriceTier:\n      type: object\n      title: AppPriceTier\n      properties:\n        type:\n          type: string\n          enum:\n            - appPriceTiers\n        id:\n          type: string\n        relationships:\n          type: object\n          properties:\n            pricePoints:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - appPricePoints\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    AppPriceTiersResponse:\n      type: object\n      title: AppPriceTiersResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppPriceTier'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppPricePoint'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    AppPriceTierResponse:\n      type: object\n      title: AppPriceTierResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/AppPriceTier'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppPricePoint'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    AppPrice:\n      type: object\n      title: AppPrice\n      properties:\n        type:\n          type: string\n          enum:\n            - appPrices\n        id:\n          type: string\n        relationships:\n          type: object\n          properties:\n            app:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - apps\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            priceTier:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appPriceTiers\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    AppPricesResponse:\n      type: object\n      title: AppPricesResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppPrice'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    AppPriceResponse:\n      type: object\n      title: AppPriceResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/AppPrice'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    AppScreenshotSet:\n      type: object\n      title: AppScreenshotSet\n      properties:\n        type:\n          type: string\n          enum:\n            - appScreenshotSets\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            screenshotDisplayType:\n              $ref: '#/components/schemas/ScreenshotDisplayType'\n        relationships:\n          type: object\n          properties:\n            appStoreVersionLocalization:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appStoreVersionLocalizations\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            appScreenshots:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - appScreenshots\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    AppScreenshotSetsResponse:\n      type: object\n      title: AppScreenshotSetsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppScreenshotSet'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppScreenshot'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    AppScreenshotSetResponse:\n      type: object\n      title: AppScreenshotSetResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/AppScreenshotSet'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppScreenshot'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    AppScreenshotSetCreateRequest:\n      type: object\n      title: AppScreenshotSetCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appScreenshotSets\n            attributes:\n              type: object\n              properties:\n                screenshotDisplayType:\n                  $ref: '#/components/schemas/ScreenshotDisplayType'\n              required:\n                - screenshotDisplayType\n            relationships:\n              type: object\n              properties:\n                appStoreVersionLocalization:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - appStoreVersionLocalizations\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n              required:\n                - appStoreVersionLocalization\n          required:\n            - relationships\n            - attributes\n            - type\n      required:\n        - data\n    AppScreenshot:\n      type: object\n      title: AppScreenshot\n      properties:\n        type:\n          type: string\n          enum:\n            - appScreenshots\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            fileSize:\n              type: integer\n            fileName:\n              type: string\n            sourceFileChecksum:\n              type: string\n            imageAsset:\n              $ref: '#/components/schemas/ImageAsset'\n            assetToken:\n              type: string\n            assetType:\n              type: string\n            uploadOperations:\n              type: array\n              items:\n                $ref: '#/components/schemas/UploadOperation'\n            assetDeliveryState:\n              $ref: '#/components/schemas/AppMediaAssetState'\n        relationships:\n          type: object\n          properties:\n            appScreenshotSet:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appScreenshotSets\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    AppScreenshotsResponse:\n      type: object\n      title: AppScreenshotsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppScreenshot'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    AppScreenshotResponse:\n      type: object\n      title: AppScreenshotResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/AppScreenshot'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    AppScreenshotCreateRequest:\n      type: object\n      title: AppScreenshotCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appScreenshots\n            attributes:\n              type: object\n              properties:\n                fileSize:\n                  type: integer\n                fileName:\n                  type: string\n              required:\n                - fileName\n                - fileSize\n            relationships:\n              type: object\n              properties:\n                appScreenshotSet:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - appScreenshotSets\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n              required:\n                - appScreenshotSet\n          required:\n            - relationships\n            - attributes\n            - type\n      required:\n        - data\n    AppScreenshotUpdateRequest:\n      type: object\n      title: AppScreenshotUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appScreenshots\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                sourceFileChecksum:\n                  type: string\n                uploaded:\n                  type: boolean\n          required:\n            - id\n            - type\n      required:\n        - data\n    AppStoreReviewAttachment:\n      type: object\n      title: AppStoreReviewAttachment\n      properties:\n        type:\n          type: string\n          enum:\n            - appStoreReviewAttachments\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            fileSize:\n              type: integer\n            fileName:\n              type: string\n            sourceFileChecksum:\n              type: string\n            uploadOperations:\n              type: array\n              items:\n                $ref: '#/components/schemas/UploadOperation'\n            assetDeliveryState:\n              $ref: '#/components/schemas/AppMediaAssetState'\n        relationships:\n          type: object\n          properties:\n            appStoreReviewDetail:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appStoreReviewDetails\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    AppStoreReviewAttachmentsResponse:\n      type: object\n      title: AppStoreReviewAttachmentsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppStoreReviewAttachment'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    AppStoreReviewAttachmentResponse:\n      type: object\n      title: AppStoreReviewAttachmentResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/AppStoreReviewAttachment'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    AppStoreReviewAttachmentCreateRequest:\n      type: object\n      title: AppStoreReviewAttachmentCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appStoreReviewAttachments\n            attributes:\n              type: object\n              properties:\n                fileSize:\n                  type: integer\n                fileName:\n                  type: string\n              required:\n                - fileName\n                - fileSize\n            relationships:\n              type: object\n              properties:\n                appStoreReviewDetail:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - appStoreReviewDetails\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n              required:\n                - appStoreReviewDetail\n          required:\n            - relationships\n            - attributes\n            - type\n      required:\n        - data\n    AppStoreReviewAttachmentUpdateRequest:\n      type: object\n      title: AppStoreReviewAttachmentUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appStoreReviewAttachments\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                sourceFileChecksum:\n                  type: string\n                uploaded:\n                  type: boolean\n          required:\n            - id\n            - type\n      required:\n        - data\n    AppStoreReviewDetail:\n      type: object\n      title: AppStoreReviewDetail\n      properties:\n        type:\n          type: string\n          enum:\n            - appStoreReviewDetails\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            contactFirstName:\n              type: string\n            contactLastName:\n              type: string\n            contactPhone:\n              type: string\n            contactEmail:\n              type: string\n            demoAccountName:\n              type: string\n            demoAccountPassword:\n              type: string\n            demoAccountRequired:\n              type: boolean\n            notes:\n              type: string\n        relationships:\n          type: object\n          properties:\n            appStoreVersion:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appStoreVersions\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            appStoreReviewAttachments:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - appStoreReviewAttachments\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    AppStoreReviewDetailResponse:\n      type: object\n      title: AppStoreReviewDetailResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/AppStoreReviewDetail'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppStoreReviewAttachment'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    AppStoreReviewDetailCreateRequest:\n      type: object\n      title: AppStoreReviewDetailCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appStoreReviewDetails\n            attributes:\n              type: object\n              properties:\n                contactFirstName:\n                  type: string\n                contactLastName:\n                  type: string\n                contactPhone:\n                  type: string\n                contactEmail:\n                  type: string\n                demoAccountName:\n                  type: string\n                demoAccountPassword:\n                  type: string\n                demoAccountRequired:\n                  type: boolean\n                notes:\n                  type: string\n            relationships:\n              type: object\n              properties:\n                appStoreVersion:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - appStoreVersions\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n              required:\n                - appStoreVersion\n          required:\n            - relationships\n            - type\n      required:\n        - data\n    AppStoreReviewDetailUpdateRequest:\n      type: object\n      title: AppStoreReviewDetailUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appStoreReviewDetails\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                contactFirstName:\n                  type: string\n                contactLastName:\n                  type: string\n                contactPhone:\n                  type: string\n                contactEmail:\n                  type: string\n                demoAccountName:\n                  type: string\n                demoAccountPassword:\n                  type: string\n                demoAccountRequired:\n                  type: boolean\n                notes:\n                  type: string\n          required:\n            - id\n            - type\n      required:\n        - data\n    AppStoreVersionLocalization:\n      type: object\n      title: AppStoreVersionLocalization\n      properties:\n        type:\n          type: string\n          enum:\n            - appStoreVersionLocalizations\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            description:\n              type: string\n            locale:\n              type: string\n            keywords:\n              type: string\n            marketingUrl:\n              type: string\n              format: uri\n            promotionalText:\n              type: string\n            supportUrl:\n              type: string\n              format: uri\n            whatsNew:\n              type: string\n        relationships:\n          type: object\n          properties:\n            appStoreVersion:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appStoreVersions\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            appScreenshotSets:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - appScreenshotSets\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n            appPreviewSets:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - appPreviewSets\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    AppStoreVersionLocalizationsResponse:\n      type: object\n      title: AppStoreVersionLocalizationsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppStoreVersionLocalization'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/AppScreenshotSet'\n              - $ref: '#/components/schemas/AppPreviewSet'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    AppStoreVersionLocalizationResponse:\n      type: object\n      title: AppStoreVersionLocalizationResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/AppStoreVersionLocalization'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/AppScreenshotSet'\n              - $ref: '#/components/schemas/AppPreviewSet'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    AppStoreVersionLocalizationCreateRequest:\n      type: object\n      title: AppStoreVersionLocalizationCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appStoreVersionLocalizations\n            attributes:\n              type: object\n              properties:\n                description:\n                  type: string\n                locale:\n                  type: string\n                keywords:\n                  type: string\n                marketingUrl:\n                  type: string\n                  format: uri\n                promotionalText:\n                  type: string\n                supportUrl:\n                  type: string\n                  format: uri\n                whatsNew:\n                  type: string\n              required:\n                - locale\n            relationships:\n              type: object\n              properties:\n                appStoreVersion:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - appStoreVersions\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n              required:\n                - appStoreVersion\n          required:\n            - relationships\n            - attributes\n            - type\n      required:\n        - data\n    AppStoreVersionLocalizationUpdateRequest:\n      type: object\n      title: AppStoreVersionLocalizationUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appStoreVersionLocalizations\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                description:\n                  type: string\n                keywords:\n                  type: string\n                marketingUrl:\n                  type: string\n                  format: uri\n                promotionalText:\n                  type: string\n                supportUrl:\n                  type: string\n                  format: uri\n                whatsNew:\n                  type: string\n          required:\n            - id\n            - type\n      required:\n        - data\n    AppStoreVersionPhasedRelease:\n      type: object\n      title: AppStoreVersionPhasedRelease\n      properties:\n        type:\n          type: string\n          enum:\n            - appStoreVersionPhasedReleases\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            phasedReleaseState:\n              $ref: '#/components/schemas/PhasedReleaseState'\n            startDate:\n              type: string\n              format: date-time\n            totalPauseDuration:\n              type: integer\n            currentDayNumber:\n              type: integer\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    AppStoreVersionPhasedReleaseResponse:\n      type: object\n      title: AppStoreVersionPhasedReleaseResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/AppStoreVersionPhasedRelease'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    AppStoreVersionPhasedReleaseCreateRequest:\n      type: object\n      title: AppStoreVersionPhasedReleaseCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appStoreVersionPhasedReleases\n            attributes:\n              type: object\n              properties:\n                phasedReleaseState:\n                  $ref: '#/components/schemas/PhasedReleaseState'\n            relationships:\n              type: object\n              properties:\n                appStoreVersion:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - appStoreVersions\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n              required:\n                - appStoreVersion\n          required:\n            - relationships\n            - type\n      required:\n        - data\n    AppStoreVersionPhasedReleaseUpdateRequest:\n      type: object\n      title: AppStoreVersionPhasedReleaseUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appStoreVersionPhasedReleases\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                phasedReleaseState:\n                  $ref: '#/components/schemas/PhasedReleaseState'\n          required:\n            - id\n            - type\n      required:\n        - data\n    AppStoreVersionSubmission:\n      type: object\n      title: AppStoreVersionSubmission\n      properties:\n        type:\n          type: string\n          enum:\n            - appStoreVersionSubmissions\n        id:\n          type: string\n        relationships:\n          type: object\n          properties:\n            appStoreVersion:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appStoreVersions\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    AppStoreVersionSubmissionResponse:\n      type: object\n      title: AppStoreVersionSubmissionResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/AppStoreVersionSubmission'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    AppStoreVersionSubmissionCreateRequest:\n      type: object\n      title: AppStoreVersionSubmissionCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appStoreVersionSubmissions\n            relationships:\n              type: object\n              properties:\n                appStoreVersion:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - appStoreVersions\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n              required:\n                - appStoreVersion\n          required:\n            - relationships\n            - type\n      required:\n        - data\n    AppStoreVersion:\n      type: object\n      title: AppStoreVersion\n      properties:\n        type:\n          type: string\n          enum:\n            - appStoreVersions\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            platform:\n              $ref: '#/components/schemas/Platform'\n            versionString:\n              type: string\n            appStoreState:\n              $ref: '#/components/schemas/AppStoreVersionState'\n            copyright:\n              type: string\n            releaseType:\n              type: string\n              enum:\n                - MANUAL\n                - AFTER_APPROVAL\n                - SCHEDULED\n            earliestReleaseDate:\n              type: string\n              format: date-time\n            usesIdfa:\n              type: boolean\n            downloadable:\n              type: boolean\n            createdDate:\n              type: string\n              format: date-time\n        relationships:\n          type: object\n          properties:\n            app:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - apps\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            ageRatingDeclaration:\n              deprecated: true\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - ageRatingDeclarations\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            appStoreVersionLocalizations:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - appStoreVersionLocalizations\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n            build:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - builds\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            appStoreVersionPhasedRelease:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appStoreVersionPhasedReleases\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            routingAppCoverage:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - routingAppCoverages\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            appStoreReviewDetail:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appStoreReviewDetails\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            appStoreVersionSubmission:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appStoreVersionSubmissions\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            idfaDeclaration:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - idfaDeclarations\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    AppStoreVersionsResponse:\n      type: object\n      title: AppStoreVersionsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppStoreVersion'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/AgeRatingDeclaration'\n              - $ref: '#/components/schemas/AppStoreVersionLocalization'\n              - $ref: '#/components/schemas/Build'\n              - $ref: '#/components/schemas/AppStoreVersionPhasedRelease'\n              - $ref: '#/components/schemas/RoutingAppCoverage'\n              - $ref: '#/components/schemas/AppStoreReviewDetail'\n              - $ref: '#/components/schemas/AppStoreVersionSubmission'\n              - $ref: '#/components/schemas/IdfaDeclaration'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    AppStoreVersionResponse:\n      type: object\n      title: AppStoreVersionResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/AppStoreVersion'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/AgeRatingDeclaration'\n              - $ref: '#/components/schemas/AppStoreVersionLocalization'\n              - $ref: '#/components/schemas/Build'\n              - $ref: '#/components/schemas/AppStoreVersionPhasedRelease'\n              - $ref: '#/components/schemas/RoutingAppCoverage'\n              - $ref: '#/components/schemas/AppStoreReviewDetail'\n              - $ref: '#/components/schemas/AppStoreVersionSubmission'\n              - $ref: '#/components/schemas/IdfaDeclaration'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    AppStoreVersionCreateRequest:\n      type: object\n      title: AppStoreVersionCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appStoreVersions\n            attributes:\n              type: object\n              properties:\n                platform:\n                  $ref: '#/components/schemas/Platform'\n                versionString:\n                  type: string\n                copyright:\n                  type: string\n                releaseType:\n                  type: string\n                  enum:\n                    - MANUAL\n                    - AFTER_APPROVAL\n                    - SCHEDULED\n                earliestReleaseDate:\n                  type: string\n                  format: date-time\n                usesIdfa:\n                  type: boolean\n              required:\n                - versionString\n                - platform\n            relationships:\n              type: object\n              properties:\n                app:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - apps\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n                build:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - builds\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n              required:\n                - app\n          required:\n            - relationships\n            - attributes\n            - type\n      required:\n        - data\n    AppStoreVersionUpdateRequest:\n      type: object\n      title: AppStoreVersionUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appStoreVersions\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                versionString:\n                  type: string\n                copyright:\n                  type: string\n                releaseType:\n                  type: string\n                  enum:\n                    - MANUAL\n                    - AFTER_APPROVAL\n                    - SCHEDULED\n                earliestReleaseDate:\n                  type: string\n                  format: date-time\n                usesIdfa:\n                  type: boolean\n                downloadable:\n                  type: boolean\n            relationships:\n              type: object\n              properties:\n                build:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - builds\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n          required:\n            - id\n            - type\n      required:\n        - data\n    App:\n      type: object\n      title: App\n      properties:\n        type:\n          type: string\n          enum:\n            - apps\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            name:\n              type: string\n            bundleId:\n              type: string\n            sku:\n              type: string\n            primaryLocale:\n              type: string\n            isOrEverWasMadeForKids:\n              type: boolean\n            availableInNewTerritories:\n              type: boolean\n            contentRightsDeclaration:\n              type: string\n              enum:\n                - DOES_NOT_USE_THIRD_PARTY_CONTENT\n                - USES_THIRD_PARTY_CONTENT\n        relationships:\n          type: object\n          properties:\n            betaGroups:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - betaGroups\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n            appStoreVersions:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - appStoreVersions\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n            preReleaseVersions:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - preReleaseVersions\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n            betaAppLocalizations:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - betaAppLocalizations\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n            builds:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - builds\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n            betaLicenseAgreement:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - betaLicenseAgreements\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            betaAppReviewDetail:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - betaAppReviewDetails\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            appInfos:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - appInfos\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n            endUserLicenseAgreement:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - endUserLicenseAgreements\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            preOrder:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appPreOrders\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            prices:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - appPrices\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n            availableTerritories:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - territories\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n            inAppPurchases:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - inAppPurchases\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n            gameCenterEnabledVersions:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - gameCenterEnabledVersions\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    AppsResponse:\n      type: object\n      title: AppsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/App'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/BetaGroup'\n              - $ref: '#/components/schemas/AppStoreVersion'\n              - $ref: '#/components/schemas/PrereleaseVersion'\n              - $ref: '#/components/schemas/BetaAppLocalization'\n              - $ref: '#/components/schemas/Build'\n              - $ref: '#/components/schemas/BetaLicenseAgreement'\n              - $ref: '#/components/schemas/BetaAppReviewDetail'\n              - $ref: '#/components/schemas/AppInfo'\n              - $ref: '#/components/schemas/EndUserLicenseAgreement'\n              - $ref: '#/components/schemas/AppPreOrder'\n              - $ref: '#/components/schemas/AppPrice'\n              - $ref: '#/components/schemas/Territory'\n              - $ref: '#/components/schemas/InAppPurchase'\n              - $ref: '#/components/schemas/GameCenterEnabledVersion'\n              - $ref: '#/components/schemas/PerfPowerMetric'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    AppResponse:\n      type: object\n      title: AppResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/App'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/BetaGroup'\n              - $ref: '#/components/schemas/AppStoreVersion'\n              - $ref: '#/components/schemas/PrereleaseVersion'\n              - $ref: '#/components/schemas/BetaAppLocalization'\n              - $ref: '#/components/schemas/Build'\n              - $ref: '#/components/schemas/BetaLicenseAgreement'\n              - $ref: '#/components/schemas/BetaAppReviewDetail'\n              - $ref: '#/components/schemas/AppInfo'\n              - $ref: '#/components/schemas/EndUserLicenseAgreement'\n              - $ref: '#/components/schemas/AppPreOrder'\n              - $ref: '#/components/schemas/AppPrice'\n              - $ref: '#/components/schemas/Territory'\n              - $ref: '#/components/schemas/InAppPurchase'\n              - $ref: '#/components/schemas/GameCenterEnabledVersion'\n              - $ref: '#/components/schemas/PerfPowerMetric'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    AppUpdateRequest:\n      type: object\n      title: AppUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - apps\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                bundleId:\n                  type: string\n                primaryLocale:\n                  type: string\n                availableInNewTerritories:\n                  type: boolean\n                contentRightsDeclaration:\n                  type: string\n                  enum:\n                    - DOES_NOT_USE_THIRD_PARTY_CONTENT\n                    - USES_THIRD_PARTY_CONTENT\n            relationships:\n              type: object\n              properties:\n                prices:\n                  type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          type:\n                            type: string\n                            enum:\n                              - appPrices\n                          id:\n                            type: string\n                        required:\n                          - id\n                          - type\n                availableTerritories:\n                  type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          type:\n                            type: string\n                            enum:\n                              - territories\n                          id:\n                            type: string\n                        required:\n                          - id\n                          - type\n          required:\n            - id\n            - type\n      required:\n        - data\n    BetaAppLocalization:\n      type: object\n      title: BetaAppLocalization\n      properties:\n        type:\n          type: string\n          enum:\n            - betaAppLocalizations\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            feedbackEmail:\n              type: string\n            marketingUrl:\n              type: string\n            privacyPolicyUrl:\n              type: string\n            tvOsPrivacyPolicy:\n              type: string\n            description:\n              type: string\n            locale:\n              type: string\n        relationships:\n          type: object\n          properties:\n            app:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - apps\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    BetaAppLocalizationsResponse:\n      type: object\n      title: BetaAppLocalizationsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/BetaAppLocalization'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/App'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    BetaAppLocalizationResponse:\n      type: object\n      title: BetaAppLocalizationResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/BetaAppLocalization'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/App'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    BetaAppLocalizationCreateRequest:\n      type: object\n      title: BetaAppLocalizationCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - betaAppLocalizations\n            attributes:\n              type: object\n              properties:\n                feedbackEmail:\n                  type: string\n                marketingUrl:\n                  type: string\n                privacyPolicyUrl:\n                  type: string\n                tvOsPrivacyPolicy:\n                  type: string\n                description:\n                  type: string\n                locale:\n                  type: string\n              required:\n                - locale\n            relationships:\n              type: object\n              properties:\n                app:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - apps\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n              required:\n                - app\n          required:\n            - relationships\n            - attributes\n            - type\n      required:\n        - data\n    BetaAppLocalizationUpdateRequest:\n      type: object\n      title: BetaAppLocalizationUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - betaAppLocalizations\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                feedbackEmail:\n                  type: string\n                marketingUrl:\n                  type: string\n                privacyPolicyUrl:\n                  type: string\n                tvOsPrivacyPolicy:\n                  type: string\n                description:\n                  type: string\n          required:\n            - id\n            - type\n      required:\n        - data\n    BetaAppReviewDetail:\n      type: object\n      title: BetaAppReviewDetail\n      properties:\n        type:\n          type: string\n          enum:\n            - betaAppReviewDetails\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            contactFirstName:\n              type: string\n            contactLastName:\n              type: string\n            contactPhone:\n              type: string\n            contactEmail:\n              type: string\n            demoAccountName:\n              type: string\n            demoAccountPassword:\n              type: string\n            demoAccountRequired:\n              type: boolean\n            notes:\n              type: string\n        relationships:\n          type: object\n          properties:\n            app:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - apps\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    BetaAppReviewDetailsResponse:\n      type: object\n      title: BetaAppReviewDetailsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/BetaAppReviewDetail'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/App'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    BetaAppReviewDetailResponse:\n      type: object\n      title: BetaAppReviewDetailResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/BetaAppReviewDetail'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/App'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    BetaAppReviewDetailUpdateRequest:\n      type: object\n      title: BetaAppReviewDetailUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - betaAppReviewDetails\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                contactFirstName:\n                  type: string\n                contactLastName:\n                  type: string\n                contactPhone:\n                  type: string\n                contactEmail:\n                  type: string\n                demoAccountName:\n                  type: string\n                demoAccountPassword:\n                  type: string\n                demoAccountRequired:\n                  type: boolean\n                notes:\n                  type: string\n          required:\n            - id\n            - type\n      required:\n        - data\n    BetaAppReviewSubmission:\n      type: object\n      title: BetaAppReviewSubmission\n      properties:\n        type:\n          type: string\n          enum:\n            - betaAppReviewSubmissions\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            betaReviewState:\n              $ref: '#/components/schemas/BetaReviewState'\n        relationships:\n          type: object\n          properties:\n            build:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - builds\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    BetaAppReviewSubmissionsResponse:\n      type: object\n      title: BetaAppReviewSubmissionsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/BetaAppReviewSubmission'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/Build'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    BetaAppReviewSubmissionResponse:\n      type: object\n      title: BetaAppReviewSubmissionResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/BetaAppReviewSubmission'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/Build'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    BetaAppReviewSubmissionCreateRequest:\n      type: object\n      title: BetaAppReviewSubmissionCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - betaAppReviewSubmissions\n            relationships:\n              type: object\n              properties:\n                build:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - builds\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n              required:\n                - build\n          required:\n            - relationships\n            - type\n      required:\n        - data\n    BetaBuildLocalization:\n      type: object\n      title: BetaBuildLocalization\n      properties:\n        type:\n          type: string\n          enum:\n            - betaBuildLocalizations\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            whatsNew:\n              type: string\n            locale:\n              type: string\n        relationships:\n          type: object\n          properties:\n            build:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - builds\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    BetaBuildLocalizationsResponse:\n      type: object\n      title: BetaBuildLocalizationsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/BetaBuildLocalization'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/Build'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    BetaBuildLocalizationResponse:\n      type: object\n      title: BetaBuildLocalizationResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/BetaBuildLocalization'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/Build'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    BetaBuildLocalizationCreateRequest:\n      type: object\n      title: BetaBuildLocalizationCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - betaBuildLocalizations\n            attributes:\n              type: object\n              properties:\n                whatsNew:\n                  type: string\n                locale:\n                  type: string\n              required:\n                - locale\n            relationships:\n              type: object\n              properties:\n                build:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - builds\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n              required:\n                - build\n          required:\n            - relationships\n            - attributes\n            - type\n      required:\n        - data\n    BetaBuildLocalizationUpdateRequest:\n      type: object\n      title: BetaBuildLocalizationUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - betaBuildLocalizations\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                whatsNew:\n                  type: string\n          required:\n            - id\n            - type\n      required:\n        - data\n    BetaGroup:\n      type: object\n      title: BetaGroup\n      properties:\n        type:\n          type: string\n          enum:\n            - betaGroups\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            name:\n              type: string\n            createdDate:\n              type: string\n              format: date-time\n            isInternalGroup:\n              type: boolean\n            publicLinkEnabled:\n              type: boolean\n            publicLinkId:\n              type: string\n            publicLinkLimitEnabled:\n              type: boolean\n            publicLinkLimit:\n              type: integer\n            publicLink:\n              type: string\n            feedbackEnabled:\n              type: boolean\n        relationships:\n          type: object\n          properties:\n            app:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - apps\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            builds:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - builds\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n            betaTesters:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - betaTesters\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    BetaGroupsResponse:\n      type: object\n      title: BetaGroupsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/BetaGroup'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/App'\n              - $ref: '#/components/schemas/Build'\n              - $ref: '#/components/schemas/BetaTester'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    BetaGroupResponse:\n      type: object\n      title: BetaGroupResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/BetaGroup'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/App'\n              - $ref: '#/components/schemas/Build'\n              - $ref: '#/components/schemas/BetaTester'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    BetaGroupCreateRequest:\n      type: object\n      title: BetaGroupCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - betaGroups\n            attributes:\n              type: object\n              properties:\n                name:\n                  type: string\n                publicLinkEnabled:\n                  type: boolean\n                publicLinkLimitEnabled:\n                  type: boolean\n                publicLinkLimit:\n                  type: integer\n                feedbackEnabled:\n                  type: boolean\n              required:\n                - name\n            relationships:\n              type: object\n              properties:\n                app:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - apps\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n                builds:\n                  type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          type:\n                            type: string\n                            enum:\n                              - builds\n                          id:\n                            type: string\n                        required:\n                          - id\n                          - type\n                betaTesters:\n                  type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          type:\n                            type: string\n                            enum:\n                              - betaTesters\n                          id:\n                            type: string\n                        required:\n                          - id\n                          - type\n              required:\n                - app\n          required:\n            - relationships\n            - attributes\n            - type\n      required:\n        - data\n    BetaGroupUpdateRequest:\n      type: object\n      title: BetaGroupUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - betaGroups\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                name:\n                  type: string\n                publicLinkEnabled:\n                  type: boolean\n                publicLinkLimitEnabled:\n                  type: boolean\n                publicLinkLimit:\n                  type: integer\n                feedbackEnabled:\n                  type: boolean\n          required:\n            - id\n            - type\n      required:\n        - data\n    BetaLicenseAgreement:\n      type: object\n      title: BetaLicenseAgreement\n      properties:\n        type:\n          type: string\n          enum:\n            - betaLicenseAgreements\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            agreementText:\n              type: string\n        relationships:\n          type: object\n          properties:\n            app:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - apps\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    BetaLicenseAgreementsResponse:\n      type: object\n      title: BetaLicenseAgreementsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/BetaLicenseAgreement'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/App'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    BetaLicenseAgreementResponse:\n      type: object\n      title: BetaLicenseAgreementResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/BetaLicenseAgreement'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/App'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    BetaLicenseAgreementUpdateRequest:\n      type: object\n      title: BetaLicenseAgreementUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - betaLicenseAgreements\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                agreementText:\n                  type: string\n          required:\n            - id\n            - type\n      required:\n        - data\n    BetaTesterInvitation:\n      type: object\n      title: BetaTesterInvitation\n      properties:\n        type:\n          type: string\n          enum:\n            - betaTesterInvitations\n        id:\n          type: string\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    BetaTesterInvitationResponse:\n      type: object\n      title: BetaTesterInvitationResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/BetaTesterInvitation'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    BetaTesterInvitationCreateRequest:\n      type: object\n      title: BetaTesterInvitationCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - betaTesterInvitations\n            relationships:\n              type: object\n              properties:\n                betaTester:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - betaTesters\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n                app:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - apps\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n              required:\n                - app\n                - betaTester\n          required:\n            - relationships\n            - type\n      required:\n        - data\n    BetaTester:\n      type: object\n      title: BetaTester\n      properties:\n        type:\n          type: string\n          enum:\n            - betaTesters\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            firstName:\n              type: string\n            lastName:\n              type: string\n            email:\n              type: string\n              format: email\n            inviteType:\n              $ref: '#/components/schemas/BetaInviteType'\n        relationships:\n          type: object\n          properties:\n            apps:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - apps\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n            betaGroups:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - betaGroups\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n            builds:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - builds\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    BetaTestersResponse:\n      type: object\n      title: BetaTestersResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/BetaTester'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/App'\n              - $ref: '#/components/schemas/BetaGroup'\n              - $ref: '#/components/schemas/Build'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    BetaTesterResponse:\n      type: object\n      title: BetaTesterResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/BetaTester'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/App'\n              - $ref: '#/components/schemas/BetaGroup'\n              - $ref: '#/components/schemas/Build'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    BetaTesterCreateRequest:\n      type: object\n      title: BetaTesterCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - betaTesters\n            attributes:\n              type: object\n              properties:\n                firstName:\n                  type: string\n                lastName:\n                  type: string\n                email:\n                  type: string\n                  format: email\n              required:\n                - email\n            relationships:\n              type: object\n              properties:\n                betaGroups:\n                  type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          type:\n                            type: string\n                            enum:\n                              - betaGroups\n                          id:\n                            type: string\n                        required:\n                          - id\n                          - type\n                builds:\n                  type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          type:\n                            type: string\n                            enum:\n                              - builds\n                          id:\n                            type: string\n                        required:\n                          - id\n                          - type\n          required:\n            - attributes\n            - type\n      required:\n        - data\n    BuildBetaDetail:\n      type: object\n      title: BuildBetaDetail\n      properties:\n        type:\n          type: string\n          enum:\n            - buildBetaDetails\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            autoNotifyEnabled:\n              type: boolean\n            internalBuildState:\n              $ref: '#/components/schemas/InternalBetaState'\n            externalBuildState:\n              $ref: '#/components/schemas/ExternalBetaState'\n        relationships:\n          type: object\n          properties:\n            build:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - builds\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    BuildBetaDetailsResponse:\n      type: object\n      title: BuildBetaDetailsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/BuildBetaDetail'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/Build'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    BuildBetaDetailResponse:\n      type: object\n      title: BuildBetaDetailResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/BuildBetaDetail'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/Build'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    BuildBetaDetailUpdateRequest:\n      type: object\n      title: BuildBetaDetailUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - buildBetaDetails\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                autoNotifyEnabled:\n                  type: boolean\n          required:\n            - id\n            - type\n      required:\n        - data\n    BuildBetaNotification:\n      type: object\n      title: BuildBetaNotification\n      properties:\n        type:\n          type: string\n          enum:\n            - buildBetaNotifications\n        id:\n          type: string\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    BuildBetaNotificationResponse:\n      type: object\n      title: BuildBetaNotificationResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/BuildBetaNotification'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    BuildBetaNotificationCreateRequest:\n      type: object\n      title: BuildBetaNotificationCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - buildBetaNotifications\n            relationships:\n              type: object\n              properties:\n                build:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - builds\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n              required:\n                - build\n          required:\n            - relationships\n            - type\n      required:\n        - data\n    BuildIcon:\n      type: object\n      title: BuildIcon\n      properties:\n        type:\n          type: string\n          enum:\n            - buildIcons\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            iconAsset:\n              $ref: '#/components/schemas/ImageAsset'\n            iconType:\n              $ref: '#/components/schemas/IconAssetType'\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    BuildIconsResponse:\n      type: object\n      title: BuildIconsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/BuildIcon'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    Build:\n      type: object\n      title: Build\n      properties:\n        type:\n          type: string\n          enum:\n            - builds\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            version:\n              type: string\n            uploadedDate:\n              type: string\n              format: date-time\n            expirationDate:\n              type: string\n              format: date-time\n            expired:\n              type: boolean\n            minOsVersion:\n              type: string\n            iconAssetToken:\n              $ref: '#/components/schemas/ImageAsset'\n            processingState:\n              type: string\n              enum:\n                - PROCESSING\n                - FAILED\n                - INVALID\n                - VALID\n            usesNonExemptEncryption:\n              type: boolean\n        relationships:\n          type: object\n          properties:\n            preReleaseVersion:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - preReleaseVersions\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            individualTesters:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - betaTesters\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n            betaBuildLocalizations:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - betaBuildLocalizations\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n            appEncryptionDeclaration:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appEncryptionDeclarations\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            betaAppReviewSubmission:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - betaAppReviewSubmissions\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            app:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - apps\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            buildBetaDetail:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - buildBetaDetails\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            appStoreVersion:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appStoreVersions\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            icons:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - buildIcons\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    BuildsResponse:\n      type: object\n      title: BuildsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Build'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/PrereleaseVersion'\n              - $ref: '#/components/schemas/BetaTester'\n              - $ref: '#/components/schemas/BetaBuildLocalization'\n              - $ref: '#/components/schemas/AppEncryptionDeclaration'\n              - $ref: '#/components/schemas/BetaAppReviewSubmission'\n              - $ref: '#/components/schemas/App'\n              - $ref: '#/components/schemas/BuildBetaDetail'\n              - $ref: '#/components/schemas/AppStoreVersion'\n              - $ref: '#/components/schemas/BuildIcon'\n              - $ref: '#/components/schemas/PerfPowerMetric'\n              - $ref: '#/components/schemas/DiagnosticSignature'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    BuildResponse:\n      type: object\n      title: BuildResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/Build'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/PrereleaseVersion'\n              - $ref: '#/components/schemas/BetaTester'\n              - $ref: '#/components/schemas/BetaBuildLocalization'\n              - $ref: '#/components/schemas/AppEncryptionDeclaration'\n              - $ref: '#/components/schemas/BetaAppReviewSubmission'\n              - $ref: '#/components/schemas/App'\n              - $ref: '#/components/schemas/BuildBetaDetail'\n              - $ref: '#/components/schemas/AppStoreVersion'\n              - $ref: '#/components/schemas/BuildIcon'\n              - $ref: '#/components/schemas/PerfPowerMetric'\n              - $ref: '#/components/schemas/DiagnosticSignature'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    BuildUpdateRequest:\n      type: object\n      title: BuildUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - builds\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                expired:\n                  type: boolean\n                usesNonExemptEncryption:\n                  type: boolean\n            relationships:\n              type: object\n              properties:\n                appEncryptionDeclaration:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - appEncryptionDeclarations\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n          required:\n            - id\n            - type\n      required:\n        - data\n    BundleIdCapability:\n      type: object\n      title: BundleIdCapability\n      properties:\n        type:\n          type: string\n          enum:\n            - bundleIdCapabilities\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            capabilityType:\n              $ref: '#/components/schemas/CapabilityType'\n            settings:\n              type: array\n              items:\n                $ref: '#/components/schemas/CapabilitySetting'\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    BundleIdCapabilitiesResponse:\n      type: object\n      title: BundleIdCapabilitiesResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/BundleIdCapability'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    BundleIdCapabilityResponse:\n      type: object\n      title: BundleIdCapabilityResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/BundleIdCapability'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    BundleIdCapabilityCreateRequest:\n      type: object\n      title: BundleIdCapabilityCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - bundleIdCapabilities\n            attributes:\n              type: object\n              properties:\n                capabilityType:\n                  $ref: '#/components/schemas/CapabilityType'\n                settings:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/CapabilitySetting'\n              required:\n                - capabilityType\n            relationships:\n              type: object\n              properties:\n                bundleId:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - bundleIds\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n              required:\n                - bundleId\n          required:\n            - relationships\n            - attributes\n            - type\n      required:\n        - data\n    BundleIdCapabilityUpdateRequest:\n      type: object\n      title: BundleIdCapabilityUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - bundleIdCapabilities\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                capabilityType:\n                  $ref: '#/components/schemas/CapabilityType'\n                settings:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/CapabilitySetting'\n          required:\n            - id\n            - type\n      required:\n        - data\n    BundleId:\n      type: object\n      title: BundleId\n      properties:\n        type:\n          type: string\n          enum:\n            - bundleIds\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            name:\n              type: string\n            platform:\n              $ref: '#/components/schemas/BundleIdPlatform'\n            identifier:\n              type: string\n            seedId:\n              type: string\n        relationships:\n          type: object\n          properties:\n            profiles:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - profiles\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n            bundleIdCapabilities:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - bundleIdCapabilities\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n            app:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - apps\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    BundleIdsResponse:\n      type: object\n      title: BundleIdsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/BundleId'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/Profile'\n              - $ref: '#/components/schemas/BundleIdCapability'\n              - $ref: '#/components/schemas/App'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    BundleIdResponse:\n      type: object\n      title: BundleIdResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/BundleId'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/Profile'\n              - $ref: '#/components/schemas/BundleIdCapability'\n              - $ref: '#/components/schemas/App'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    BundleIdCreateRequest:\n      type: object\n      title: BundleIdCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - bundleIds\n            attributes:\n              type: object\n              properties:\n                name:\n                  type: string\n                platform:\n                  $ref: '#/components/schemas/BundleIdPlatform'\n                identifier:\n                  type: string\n                seedId:\n                  type: string\n              required:\n                - identifier\n                - name\n                - platform\n          required:\n            - attributes\n            - type\n      required:\n        - data\n    BundleIdUpdateRequest:\n      type: object\n      title: BundleIdUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - bundleIds\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                name:\n                  type: string\n          required:\n            - id\n            - type\n      required:\n        - data\n    Certificate:\n      type: object\n      title: Certificate\n      properties:\n        type:\n          type: string\n          enum:\n            - certificates\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            name:\n              type: string\n            certificateType:\n              $ref: '#/components/schemas/CertificateType'\n            displayName:\n              type: string\n            serialNumber:\n              type: string\n            platform:\n              $ref: '#/components/schemas/BundleIdPlatform'\n            expirationDate:\n              type: string\n              format: date-time\n            certificateContent:\n              type: string\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    CertificatesResponse:\n      type: object\n      title: CertificatesResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Certificate'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    CertificateResponse:\n      type: object\n      title: CertificateResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/Certificate'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    CertificateCreateRequest:\n      type: object\n      title: CertificateCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - certificates\n            attributes:\n              type: object\n              properties:\n                csrContent:\n                  type: string\n                certificateType:\n                  $ref: '#/components/schemas/CertificateType'\n              required:\n                - csrContent\n                - certificateType\n          required:\n            - attributes\n            - type\n      required:\n        - data\n    Device:\n      type: object\n      title: Device\n      properties:\n        type:\n          type: string\n          enum:\n            - devices\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            name:\n              type: string\n            platform:\n              $ref: '#/components/schemas/BundleIdPlatform'\n            udid:\n              type: string\n            deviceClass:\n              type: string\n              enum:\n                - APPLE_WATCH\n                - IPAD\n                - IPHONE\n                - IPOD\n                - APPLE_TV\n                - MAC\n            status:\n              type: string\n              enum:\n                - ENABLED\n                - DISABLED\n            model:\n              type: string\n            addedDate:\n              type: string\n              format: date-time\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    DevicesResponse:\n      type: object\n      title: DevicesResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Device'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    DeviceResponse:\n      type: object\n      title: DeviceResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/Device'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    DeviceCreateRequest:\n      type: object\n      title: DeviceCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - devices\n            attributes:\n              type: object\n              properties:\n                name:\n                  type: string\n                platform:\n                  $ref: '#/components/schemas/BundleIdPlatform'\n                udid:\n                  type: string\n              required:\n                - name\n                - udid\n                - platform\n          required:\n            - attributes\n            - type\n      required:\n        - data\n    DeviceUpdateRequest:\n      type: object\n      title: DeviceUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - devices\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                name:\n                  type: string\n                status:\n                  type: string\n                  enum:\n                    - ENABLED\n                    - DISABLED\n          required:\n            - id\n            - type\n      required:\n        - data\n    DiagnosticLog:\n      type: object\n      title: DiagnosticLog\n      properties:\n        type:\n          type: string\n          enum:\n            - diagnosticLogs\n        id:\n          type: string\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    DiagnosticLogsResponse:\n      type: object\n      title: DiagnosticLogsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/DiagnosticLog'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    DiagnosticSignature:\n      type: object\n      title: DiagnosticSignature\n      properties:\n        type:\n          type: string\n          enum:\n            - diagnosticSignatures\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            diagnosticType:\n              type: string\n              enum:\n                - DISK_WRITES\n            signature:\n              type: string\n            weight:\n              type: number\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    DiagnosticSignaturesResponse:\n      type: object\n      title: DiagnosticSignaturesResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/DiagnosticSignature'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/DiagnosticLog'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    EndUserLicenseAgreement:\n      type: object\n      title: EndUserLicenseAgreement\n      properties:\n        type:\n          type: string\n          enum:\n            - endUserLicenseAgreements\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            agreementText:\n              type: string\n        relationships:\n          type: object\n          properties:\n            app:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - apps\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            territories:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - territories\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    EndUserLicenseAgreementResponse:\n      type: object\n      title: EndUserLicenseAgreementResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/EndUserLicenseAgreement'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/Territory'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    EndUserLicenseAgreementCreateRequest:\n      type: object\n      title: EndUserLicenseAgreementCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - endUserLicenseAgreements\n            attributes:\n              type: object\n              properties:\n                agreementText:\n                  type: string\n              required:\n                - agreementText\n            relationships:\n              type: object\n              properties:\n                app:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - apps\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n                territories:\n                  type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          type:\n                            type: string\n                            enum:\n                              - territories\n                          id:\n                            type: string\n                        required:\n                          - id\n                          - type\n                  required:\n                    - data\n              required:\n                - app\n                - territories\n          required:\n            - relationships\n            - attributes\n            - type\n      required:\n        - data\n    EndUserLicenseAgreementUpdateRequest:\n      type: object\n      title: EndUserLicenseAgreementUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - endUserLicenseAgreements\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                agreementText:\n                  type: string\n            relationships:\n              type: object\n              properties:\n                territories:\n                  type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          type:\n                            type: string\n                            enum:\n                              - territories\n                          id:\n                            type: string\n                        required:\n                          - id\n                          - type\n          required:\n            - id\n            - type\n      required:\n        - data\n    GameCenterEnabledVersion:\n      type: object\n      title: GameCenterEnabledVersion\n      properties:\n        type:\n          type: string\n          enum:\n            - gameCenterEnabledVersions\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            platform:\n              $ref: '#/components/schemas/Platform'\n            versionString:\n              type: string\n            iconAsset:\n              $ref: '#/components/schemas/ImageAsset'\n        relationships:\n          type: object\n          properties:\n            compatibleVersions:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - gameCenterEnabledVersions\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n            app:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - apps\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    GameCenterEnabledVersionsResponse:\n      type: object\n      title: GameCenterEnabledVersionsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/GameCenterEnabledVersion'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/GameCenterEnabledVersion'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    IdfaDeclaration:\n      type: object\n      title: IdfaDeclaration\n      properties:\n        type:\n          type: string\n          enum:\n            - idfaDeclarations\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            servesAds:\n              type: boolean\n            attributesAppInstallationToPreviousAd:\n              type: boolean\n            attributesActionWithPreviousAd:\n              type: boolean\n            honorsLimitedAdTracking:\n              type: boolean\n        relationships:\n          type: object\n          properties:\n            appStoreVersion:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appStoreVersions\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    IdfaDeclarationResponse:\n      type: object\n      title: IdfaDeclarationResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/IdfaDeclaration'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    IdfaDeclarationCreateRequest:\n      type: object\n      title: IdfaDeclarationCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - idfaDeclarations\n            attributes:\n              type: object\n              properties:\n                servesAds:\n                  type: boolean\n                attributesAppInstallationToPreviousAd:\n                  type: boolean\n                attributesActionWithPreviousAd:\n                  type: boolean\n                honorsLimitedAdTracking:\n                  type: boolean\n              required:\n                - attributesAppInstallationToPreviousAd\n                - servesAds\n                - attributesActionWithPreviousAd\n                - honorsLimitedAdTracking\n            relationships:\n              type: object\n              properties:\n                appStoreVersion:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - appStoreVersions\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n              required:\n                - appStoreVersion\n          required:\n            - relationships\n            - attributes\n            - type\n      required:\n        - data\n    IdfaDeclarationUpdateRequest:\n      type: object\n      title: IdfaDeclarationUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - idfaDeclarations\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                servesAds:\n                  type: boolean\n                attributesAppInstallationToPreviousAd:\n                  type: boolean\n                attributesActionWithPreviousAd:\n                  type: boolean\n                honorsLimitedAdTracking:\n                  type: boolean\n          required:\n            - id\n            - type\n      required:\n        - data\n    InAppPurchase:\n      type: object\n      title: InAppPurchase\n      properties:\n        type:\n          type: string\n          enum:\n            - inAppPurchases\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            referenceName:\n              type: string\n            productId:\n              type: string\n            inAppPurchaseType:\n              type: string\n              enum:\n                - AUTOMATICALLY_RENEWABLE_SUBSCRIPTION\n                - NON_CONSUMABLE\n                - CONSUMABLE\n                - NON_RENEWING_SUBSCRIPTION\n                - FREE_SUBSCRIPTION\n            state:\n              type: string\n              enum:\n                - CREATED\n                - DEVELOPER_SIGNED_OFF\n                - DEVELOPER_ACTION_NEEDED\n                - DELETION_IN_PROGRESS\n                - APPROVED\n                - DELETED\n                - REMOVED_FROM_SALE\n                - DEVELOPER_REMOVED_FROM_SALE\n                - WAITING_FOR_UPLOAD\n                - PROCESSING_CONTENT\n                - REPLACED\n                - REJECTED\n                - WAITING_FOR_SCREENSHOT\n                - PREPARE_FOR_SUBMISSION\n                - MISSING_METADATA\n                - READY_TO_SUBMIT\n                - WAITING_FOR_REVIEW\n                - IN_REVIEW\n                - PENDING_DEVELOPER_RELEASE\n        relationships:\n          type: object\n          properties:\n            apps:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - apps\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    InAppPurchasesResponse:\n      type: object\n      title: InAppPurchasesResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/InAppPurchase'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    InAppPurchaseResponse:\n      type: object\n      title: InAppPurchaseResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/InAppPurchase'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    PerfPowerMetric:\n      type: object\n      title: PerfPowerMetric\n      properties:\n        type:\n          type: string\n          enum:\n            - perfPowerMetrics\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            platform:\n              type: string\n              enum:\n                - IOS\n            metricType:\n              type: string\n              enum:\n                - DISK\n                - HANG\n                - BATTERY\n                - LAUNCH\n                - MEMORY\n                - ANIMATION\n                - TERMINATION\n            deviceType:\n              type: string\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    PerfPowerMetricsResponse:\n      type: object\n      title: PerfPowerMetricsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/PerfPowerMetric'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    PrereleaseVersion:\n      type: object\n      title: PrereleaseVersion\n      properties:\n        type:\n          type: string\n          enum:\n            - preReleaseVersions\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            version:\n              type: string\n            platform:\n              $ref: '#/components/schemas/Platform'\n        relationships:\n          type: object\n          properties:\n            builds:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - builds\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n            app:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - apps\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    PreReleaseVersionsResponse:\n      type: object\n      title: PreReleaseVersionsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/PrereleaseVersion'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/Build'\n              - $ref: '#/components/schemas/App'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    PrereleaseVersionResponse:\n      type: object\n      title: PrereleaseVersionResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/PrereleaseVersion'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/Build'\n              - $ref: '#/components/schemas/App'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    Profile:\n      type: object\n      title: Profile\n      properties:\n        type:\n          type: string\n          enum:\n            - profiles\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            name:\n              type: string\n            platform:\n              $ref: '#/components/schemas/BundleIdPlatform'\n            profileType:\n              type: string\n              enum:\n                - IOS_APP_DEVELOPMENT\n                - IOS_APP_STORE\n                - IOS_APP_ADHOC\n                - IOS_APP_INHOUSE\n                - MAC_APP_DEVELOPMENT\n                - MAC_APP_STORE\n                - MAC_APP_DIRECT\n                - TVOS_APP_DEVELOPMENT\n                - TVOS_APP_STORE\n                - TVOS_APP_ADHOC\n                - TVOS_APP_INHOUSE\n                - MAC_CATALYST_APP_DEVELOPMENT\n                - MAC_CATALYST_APP_STORE\n                - MAC_CATALYST_APP_DIRECT\n            profileState:\n              type: string\n              enum:\n                - ACTIVE\n                - INVALID\n            profileContent:\n              type: string\n            uuid:\n              type: string\n            createdDate:\n              type: string\n              format: date-time\n            expirationDate:\n              type: string\n              format: date-time\n        relationships:\n          type: object\n          properties:\n            bundleId:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - bundleIds\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n            devices:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - devices\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n            certificates:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - certificates\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    ProfilesResponse:\n      type: object\n      title: ProfilesResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Profile'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/BundleId'\n              - $ref: '#/components/schemas/Device'\n              - $ref: '#/components/schemas/Certificate'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    ProfileResponse:\n      type: object\n      title: ProfileResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/Profile'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/BundleId'\n              - $ref: '#/components/schemas/Device'\n              - $ref: '#/components/schemas/Certificate'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    ProfileCreateRequest:\n      type: object\n      title: ProfileCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - profiles\n            attributes:\n              type: object\n              properties:\n                name:\n                  type: string\n                profileType:\n                  type: string\n                  enum:\n                    - IOS_APP_DEVELOPMENT\n                    - IOS_APP_STORE\n                    - IOS_APP_ADHOC\n                    - IOS_APP_INHOUSE\n                    - MAC_APP_DEVELOPMENT\n                    - MAC_APP_STORE\n                    - MAC_APP_DIRECT\n                    - TVOS_APP_DEVELOPMENT\n                    - TVOS_APP_STORE\n                    - TVOS_APP_ADHOC\n                    - TVOS_APP_INHOUSE\n                    - MAC_CATALYST_APP_DEVELOPMENT\n                    - MAC_CATALYST_APP_STORE\n                    - MAC_CATALYST_APP_DIRECT\n              required:\n                - profileType\n                - name\n            relationships:\n              type: object\n              properties:\n                bundleId:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - bundleIds\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n                devices:\n                  type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          type:\n                            type: string\n                            enum:\n                              - devices\n                          id:\n                            type: string\n                        required:\n                          - id\n                          - type\n                certificates:\n                  type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          type:\n                            type: string\n                            enum:\n                              - certificates\n                          id:\n                            type: string\n                        required:\n                          - id\n                          - type\n                  required:\n                    - data\n              required:\n                - certificates\n                - bundleId\n          required:\n            - relationships\n            - attributes\n            - type\n      required:\n        - data\n    RoutingAppCoverage:\n      type: object\n      title: RoutingAppCoverage\n      properties:\n        type:\n          type: string\n          enum:\n            - routingAppCoverages\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            fileSize:\n              type: integer\n            fileName:\n              type: string\n            sourceFileChecksum:\n              type: string\n            uploadOperations:\n              type: array\n              items:\n                $ref: '#/components/schemas/UploadOperation'\n            assetDeliveryState:\n              $ref: '#/components/schemas/AppMediaAssetState'\n        relationships:\n          type: object\n          properties:\n            appStoreVersion:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                data:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      enum:\n                        - appStoreVersions\n                    id:\n                      type: string\n                  required:\n                    - id\n                    - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    RoutingAppCoverageResponse:\n      type: object\n      title: RoutingAppCoverageResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/RoutingAppCoverage'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    RoutingAppCoverageCreateRequest:\n      type: object\n      title: RoutingAppCoverageCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - routingAppCoverages\n            attributes:\n              type: object\n              properties:\n                fileSize:\n                  type: integer\n                fileName:\n                  type: string\n              required:\n                - fileName\n                - fileSize\n            relationships:\n              type: object\n              properties:\n                appStoreVersion:\n                  type: object\n                  properties:\n                    data:\n                      type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - appStoreVersions\n                        id:\n                          type: string\n                      required:\n                        - id\n                        - type\n                  required:\n                    - data\n              required:\n                - appStoreVersion\n          required:\n            - relationships\n            - attributes\n            - type\n      required:\n        - data\n    RoutingAppCoverageUpdateRequest:\n      type: object\n      title: RoutingAppCoverageUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - routingAppCoverages\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                sourceFileChecksum:\n                  type: string\n                uploaded:\n                  type: boolean\n          required:\n            - id\n            - type\n      required:\n        - data\n    Territory:\n      type: object\n      title: Territory\n      properties:\n        type:\n          type: string\n          enum:\n            - territories\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            currency:\n              type: string\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    TerritoriesResponse:\n      type: object\n      title: TerritoriesResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Territory'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    TerritoryResponse:\n      type: object\n      title: TerritoryResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/Territory'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    UserInvitation:\n      type: object\n      title: UserInvitation\n      properties:\n        type:\n          type: string\n          enum:\n            - userInvitations\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            email:\n              type: string\n              format: email\n            firstName:\n              type: string\n            lastName:\n              type: string\n            expirationDate:\n              type: string\n              format: date-time\n            roles:\n              type: array\n              items:\n                $ref: '#/components/schemas/UserRole'\n            allAppsVisible:\n              type: boolean\n            provisioningAllowed:\n              type: boolean\n        relationships:\n          type: object\n          properties:\n            visibleApps:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - apps\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    UserInvitationsResponse:\n      type: object\n      title: UserInvitationsResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserInvitation'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/App'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    UserInvitationResponse:\n      type: object\n      title: UserInvitationResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/UserInvitation'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/App'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    UserInvitationCreateRequest:\n      type: object\n      title: UserInvitationCreateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - userInvitations\n            attributes:\n              type: object\n              properties:\n                email:\n                  type: string\n                  format: email\n                firstName:\n                  type: string\n                lastName:\n                  type: string\n                roles:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/UserRole'\n                allAppsVisible:\n                  type: boolean\n                provisioningAllowed:\n                  type: boolean\n              required:\n                - firstName\n                - lastName\n                - roles\n                - email\n            relationships:\n              type: object\n              properties:\n                visibleApps:\n                  type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          type:\n                            type: string\n                            enum:\n                              - apps\n                          id:\n                            type: string\n                        required:\n                          - id\n                          - type\n          required:\n            - attributes\n            - type\n      required:\n        - data\n    User:\n      type: object\n      title: User\n      properties:\n        type:\n          type: string\n          enum:\n            - users\n        id:\n          type: string\n        attributes:\n          type: object\n          properties:\n            username:\n              type: string\n            firstName:\n              type: string\n            lastName:\n              type: string\n            roles:\n              type: array\n              items:\n                $ref: '#/components/schemas/UserRole'\n            allAppsVisible:\n              type: boolean\n            provisioningAllowed:\n              type: boolean\n        relationships:\n          type: object\n          properties:\n            visibleApps:\n              type: object\n              properties:\n                links:\n                  type: object\n                  properties:\n                    self:\n                      type: string\n                      format: uri-reference\n                    related:\n                      type: string\n                      format: uri-reference\n                meta:\n                  $ref: '#/components/schemas/PagingInformation'\n                data:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - apps\n                      id:\n                        type: string\n                    required:\n                      - id\n                      - type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n      required:\n        - links\n        - id\n        - type\n    UsersResponse:\n      type: object\n      title: UsersResponse\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/User'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/App'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    UserResponse:\n      type: object\n      title: UserResponse\n      properties:\n        data:\n          $ref: '#/components/schemas/User'\n        included:\n          type: array\n          items:\n            $ref: '#/components/schemas/App'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    UserUpdateRequest:\n      type: object\n      title: UserUpdateRequest\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - users\n            id:\n              type: string\n            attributes:\n              type: object\n              properties:\n                roles:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/UserRole'\n                allAppsVisible:\n                  type: boolean\n                provisioningAllowed:\n                  type: boolean\n            relationships:\n              type: object\n              properties:\n                visibleApps:\n                  type: object\n                  properties:\n                    data:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          type:\n                            type: string\n                            enum:\n                              - apps\n                          id:\n                            type: string\n                        required:\n                          - id\n                          - type\n          required:\n            - id\n            - type\n      required:\n        - data\n    AppEncryptionDeclarationBuildsLinkagesRequest:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - builds\n              id:\n                type: string\n            required:\n              - id\n              - type\n      required:\n        - data\n    AppPreviewSetAppPreviewsLinkagesResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - appPreviews\n              id:\n                type: string\n            required:\n              - id\n              - type\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    AppPreviewSetAppPreviewsLinkagesRequest:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - appPreviews\n              id:\n                type: string\n            required:\n              - id\n              - type\n      required:\n        - data\n    AppScreenshotSetAppScreenshotsLinkagesResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - appScreenshots\n              id:\n                type: string\n            required:\n              - id\n              - type\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    AppScreenshotSetAppScreenshotsLinkagesRequest:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - appScreenshots\n              id:\n                type: string\n            required:\n              - id\n              - type\n      required:\n        - data\n    AppStoreVersionBuildLinkageResponse:\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - builds\n            id:\n              type: string\n          required:\n            - id\n            - type\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    AppStoreVersionBuildLinkageRequest:\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - builds\n            id:\n              type: string\n          required:\n            - id\n            - type\n      required:\n        - data\n    AppBetaTestersLinkagesRequest:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - betaTesters\n              id:\n                type: string\n            required:\n              - id\n              - type\n      required:\n        - data\n    BetaGroupBetaTestersLinkagesResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - betaTesters\n              id:\n                type: string\n            required:\n              - id\n              - type\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    BetaGroupBetaTestersLinkagesRequest:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - betaTesters\n              id:\n                type: string\n            required:\n              - id\n              - type\n      required:\n        - data\n    BetaGroupBuildsLinkagesResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - builds\n              id:\n                type: string\n            required:\n              - id\n              - type\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    BetaGroupBuildsLinkagesRequest:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - builds\n              id:\n                type: string\n            required:\n              - id\n              - type\n      required:\n        - data\n    BetaTesterAppsLinkagesResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - apps\n              id:\n                type: string\n            required:\n              - id\n              - type\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    BetaTesterAppsLinkagesRequest:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - apps\n              id:\n                type: string\n            required:\n              - id\n              - type\n      required:\n        - data\n    BetaTesterBetaGroupsLinkagesResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - betaGroups\n              id:\n                type: string\n            required:\n              - id\n              - type\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    BetaTesterBetaGroupsLinkagesRequest:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - betaGroups\n              id:\n                type: string\n            required:\n              - id\n              - type\n      required:\n        - data\n    BetaTesterBuildsLinkagesResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - builds\n              id:\n                type: string\n            required:\n              - id\n              - type\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    BetaTesterBuildsLinkagesRequest:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - builds\n              id:\n                type: string\n            required:\n              - id\n              - type\n      required:\n        - data\n    BuildAppEncryptionDeclarationLinkageResponse:\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appEncryptionDeclarations\n            id:\n              type: string\n          required:\n            - id\n            - type\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n      required:\n        - data\n        - links\n    BuildAppEncryptionDeclarationLinkageRequest:\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - appEncryptionDeclarations\n            id:\n              type: string\n          required:\n            - id\n            - type\n      required:\n        - data\n    BuildBetaGroupsLinkagesRequest:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - betaGroups\n              id:\n                type: string\n            required:\n              - id\n              - type\n      required:\n        - data\n    BuildIndividualTestersLinkagesResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - betaTesters\n              id:\n                type: string\n            required:\n              - id\n              - type\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    BuildIndividualTestersLinkagesRequest:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - betaTesters\n              id:\n                type: string\n            required:\n              - id\n              - type\n      required:\n        - data\n    GameCenterEnabledVersionCompatibleVersionsLinkagesResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - gameCenterEnabledVersions\n              id:\n                type: string\n            required:\n              - id\n              - type\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    GameCenterEnabledVersionCompatibleVersionsLinkagesRequest:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - gameCenterEnabledVersions\n              id:\n                type: string\n            required:\n              - id\n              - type\n      required:\n        - data\n    UserVisibleAppsLinkagesResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - apps\n              id:\n                type: string\n            required:\n              - id\n              - type\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n      required:\n        - data\n        - links\n    UserVisibleAppsLinkagesRequest:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - apps\n              id:\n                type: string\n            required:\n              - id\n              - type\n      required:\n        - data\n    ErrorResponse:\n      type: object\n      properties:\n        errors:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n              status:\n                type: string\n              code:\n                type: string\n              title:\n                type: string\n              detail:\n                type: string\n              source:\n                oneOf:\n                  - type: object\n                    title: JsonPointer\n                    properties:\n                      pointer:\n                        type: string\n                  - type: object\n                    title: Parameter\n                    properties:\n                      parameter:\n                        type: string\n            required:\n              - code\n              - detail\n              - title\n              - status\n    PagedDocumentLinks:\n      type: object\n      properties:\n        self:\n          type: string\n          format: uri-reference\n        first:\n          type: string\n          format: uri-reference\n        next:\n          type: string\n          format: uri-reference\n      required:\n        - self\n    PagingInformation:\n      type: object\n      properties:\n        paging:\n          type: object\n          properties:\n            total:\n              type: integer\n            limit:\n              type: integer\n          required:\n            - total\n            - limit\n      required:\n        - paging\n    DocumentLinks:\n      type: object\n      properties:\n        self:\n          type: string\n          format: uri-reference\n      required:\n        - self\n    ResourceLinks:\n      type: object\n      properties:\n        self:\n          type: string\n          format: uri-reference\n      required:\n        - self\n    AppEncryptionDeclarationState:\n      type: string\n      enum:\n        - IN_REVIEW\n        - APPROVED\n        - REJECTED\n        - INVALID\n        - EXPIRED\n    AppMediaAssetState:\n      type: object\n      properties:\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppMediaStateError'\n        warnings:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppMediaStateError'\n        state:\n          type: string\n          enum:\n            - AWAITING_UPLOAD\n            - UPLOAD_COMPLETE\n            - COMPLETE\n            - FAILED\n    AppMediaStateError:\n      type: object\n      properties:\n        code:\n          type: string\n        description:\n          type: string\n    AppStoreAgeRating:\n      type: string\n      enum:\n        - FOUR_PLUS\n        - NINE_PLUS\n        - TWELVE_PLUS\n        - SEVENTEEN_PLUS\n    AppStoreVersionState:\n      type: string\n      enum:\n        - DEVELOPER_REMOVED_FROM_SALE\n        - DEVELOPER_REJECTED\n        - IN_REVIEW\n        - INVALID_BINARY\n        - METADATA_REJECTED\n        - PENDING_APPLE_RELEASE\n        - PENDING_CONTRACT\n        - PENDING_DEVELOPER_RELEASE\n        - PREPARE_FOR_SUBMISSION\n        - PREORDER_READY_FOR_SALE\n        - PROCESSING_FOR_APP_STORE\n        - READY_FOR_SALE\n        - REJECTED\n        - REMOVED_FROM_SALE\n        - WAITING_FOR_EXPORT_COMPLIANCE\n        - WAITING_FOR_REVIEW\n        - REPLACED_WITH_NEW_VERSION\n    BetaInviteType:\n      type: string\n      enum:\n        - EMAIL\n        - PUBLIC_LINK\n    BetaReviewState:\n      type: string\n      enum:\n        - WAITING_FOR_REVIEW\n        - IN_REVIEW\n        - REJECTED\n        - APPROVED\n    BrazilAgeRating:\n      type: string\n      enum:\n        - L\n        - TEN\n        - TWELVE\n        - FOURTEEN\n        - SIXTEEN\n        - EIGHTEEN\n    BundleIdPlatform:\n      type: string\n      enum:\n        - IOS\n        - MAC_OS\n    CapabilityOption:\n      type: object\n      properties:\n        key:\n          type: string\n          enum:\n            - XCODE_5\n            - XCODE_6\n            - COMPLETE_PROTECTION\n            - PROTECTED_UNLESS_OPEN\n            - PROTECTED_UNTIL_FIRST_USER_AUTH\n            - PRIMARY_APP_CONSENT\n        name:\n          type: string\n        description:\n          type: string\n        enabledByDefault:\n          type: boolean\n        enabled:\n          type: boolean\n        supportsWildcard:\n          type: boolean\n    CapabilitySetting:\n      type: object\n      properties:\n        key:\n          type: string\n          enum:\n            - ICLOUD_VERSION\n            - DATA_PROTECTION_PERMISSION_LEVEL\n            - APPLE_ID_AUTH_APP_CONSENT\n        name:\n          type: string\n        description:\n          type: string\n        enabledByDefault:\n          type: boolean\n        visible:\n          type: boolean\n        allowedInstances:\n          type: string\n          enum:\n            - ENTRY\n            - SINGLE\n            - MULTIPLE\n        minInstances:\n          type: integer\n        options:\n          type: array\n          items:\n            $ref: '#/components/schemas/CapabilityOption'\n    CapabilityType:\n      type: string\n      enum:\n        - ICLOUD\n        - IN_APP_PURCHASE\n        - GAME_CENTER\n        - PUSH_NOTIFICATIONS\n        - WALLET\n        - INTER_APP_AUDIO\n        - MAPS\n        - ASSOCIATED_DOMAINS\n        - PERSONAL_VPN\n        - APP_GROUPS\n        - HEALTHKIT\n        - HOMEKIT\n        - WIRELESS_ACCESSORY_CONFIGURATION\n        - APPLE_PAY\n        - DATA_PROTECTION\n        - SIRIKIT\n        - NETWORK_EXTENSIONS\n        - MULTIPATH\n        - HOT_SPOT\n        - NFC_TAG_READING\n        - CLASSKIT\n        - AUTOFILL_CREDENTIAL_PROVIDER\n        - ACCESS_WIFI_INFORMATION\n        - NETWORK_CUSTOM_PROTOCOL\n        - COREMEDIA_HLS_LOW_LATENCY\n        - SYSTEM_EXTENSION_INSTALL\n        - USER_MANAGEMENT\n        - APPLE_ID_AUTH\n    CertificateType:\n      type: string\n      enum:\n        - IOS_DEVELOPMENT\n        - IOS_DISTRIBUTION\n        - MAC_APP_DISTRIBUTION\n        - MAC_INSTALLER_DISTRIBUTION\n        - MAC_APP_DEVELOPMENT\n        - DEVELOPER_ID_KEXT\n        - DEVELOPER_ID_APPLICATION\n        - DEVELOPMENT\n        - DISTRIBUTION\n    ExternalBetaState:\n      type: string\n      enum:\n        - PROCESSING\n        - PROCESSING_EXCEPTION\n        - MISSING_EXPORT_COMPLIANCE\n        - READY_FOR_BETA_TESTING\n        - IN_BETA_TESTING\n        - EXPIRED\n        - READY_FOR_BETA_SUBMISSION\n        - IN_EXPORT_COMPLIANCE_REVIEW\n        - WAITING_FOR_BETA_REVIEW\n        - IN_BETA_REVIEW\n        - BETA_REJECTED\n        - BETA_APPROVED\n    IconAssetType:\n      type: string\n      enum:\n        - APP_STORE\n        - MESSAGES_APP_STORE\n        - WATCH_APP_STORE\n        - TV_OS_HOME_SCREEN\n        - TV_OS_TOP_SHELF\n    ImageAsset:\n      type: object\n      properties:\n        templateUrl:\n          type: string\n        width:\n          type: integer\n        height:\n          type: integer\n    InternalBetaState:\n      type: string\n      enum:\n        - PROCESSING\n        - PROCESSING_EXCEPTION\n        - MISSING_EXPORT_COMPLIANCE\n        - READY_FOR_BETA_TESTING\n        - IN_BETA_TESTING\n        - EXPIRED\n        - IN_EXPORT_COMPLIANCE_REVIEW\n    KidsAgeBand:\n      type: string\n      enum:\n        - FIVE_AND_UNDER\n        - SIX_TO_EIGHT\n        - NINE_TO_ELEVEN\n    PhasedReleaseState:\n      type: string\n      enum:\n        - INACTIVE\n        - ACTIVE\n        - PAUSED\n        - COMPLETE\n    Platform:\n      type: string\n      enum:\n        - IOS\n        - MAC_OS\n        - TV_OS\n    PreviewType:\n      type: string\n      enum:\n        - IPHONE_65\n        - IPHONE_58\n        - IPHONE_55\n        - IPHONE_47\n        - IPHONE_40\n        - IPHONE_35\n        - IPAD_PRO_3GEN_129\n        - IPAD_PRO_3GEN_11\n        - IPAD_PRO_129\n        - IPAD_105\n        - IPAD_97\n        - DESKTOP\n        - WATCH_SERIES_4\n        - WATCH_SERIES_3\n        - APPLE_TV\n    ScreenshotDisplayType:\n      type: string\n      enum:\n        - APP_IPHONE_65\n        - APP_IPHONE_58\n        - APP_IPHONE_55\n        - APP_IPHONE_47\n        - APP_IPHONE_40\n        - APP_IPHONE_35\n        - APP_IPAD_PRO_3GEN_129\n        - APP_IPAD_PRO_3GEN_11\n        - APP_IPAD_PRO_129\n        - APP_IPAD_105\n        - APP_IPAD_97\n        - APP_DESKTOP\n        - APP_WATCH_SERIES_4\n        - APP_WATCH_SERIES_3\n        - APP_APPLE_TV\n        - IMESSAGE_APP_IPHONE_65\n        - IMESSAGE_APP_IPHONE_58\n        - IMESSAGE_APP_IPHONE_55\n        - IMESSAGE_APP_IPHONE_47\n        - IMESSAGE_APP_IPHONE_40\n        - IMESSAGE_APP_IPAD_PRO_3GEN_129\n        - IMESSAGE_APP_IPAD_PRO_3GEN_11\n        - IMESSAGE_APP_IPAD_PRO_129\n        - IMESSAGE_APP_IPAD_105\n        - IMESSAGE_APP_IPAD_97\n    UploadOperation:\n      type: object\n      properties:\n        method:\n          type: string\n        url:\n          type: string\n        length:\n          type: integer\n        offset:\n          type: integer\n        requestHeaders:\n          type: array\n          items:\n            $ref: '#/components/schemas/UploadOperationHeader'\n    UploadOperationHeader:\n      type: object\n      properties:\n        name:\n          type: string\n        value:\n          type: string\n    UserRole:\n      type: string\n      enum:\n        - ADMIN\n        - FINANCE\n        - TECHNICAL\n        - ACCOUNT_HOLDER\n        - READ_ONLY\n        - SALES\n        - MARKETING\n        - APP_MANAGER\n        - DEVELOPER\n        - ACCESS_TO_REPORTS\n        - CUSTOMER_SUPPORT\n        - CREATE_APPS\n        - CLOUD_MANAGED_DEVELOPER_ID\n        - CLOUD_MANAGED_APP_DISTRIBUTION\n  securitySchemes:\n    itc-bearer-token:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\nsecurity:\n  - itc-bearer-token: []\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@331a656907cc680fb04372bd0b24a65c54b07c80/-/blob/openapi/apple.appstore/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/331a656907cc680fb04372bd0b24a65c54b07c80/openapi/apple.appstore/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/v1/certificates\": get: responses: code 200: contents: media: \"application/json\": generate schema: save schema types: save referenced type: reference \"https://raw.githubusercontent.com/ballerina-platform/openapi-connectors/331a656907cc680fb04372bd0b24a65c54b07c80/openapi/apple.appstore/openapi.yaml#/components/schemas/CertificateType\" type name conflict: \"CertificateType\"",
	"NotImplemented": [
		"discriminator inference",
		"sum types with same names"
	]
}