{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mrin9/RapiDoc"
		},
		"file": {
			"name": "oauth.yaml",
			"size": 0,
			"path": "docs/specs/oauth.yaml",
			"byteSize": 4986,
			"content": "openapi: 3.0.1\ninfo:\n  title: Bitbucket API\n  description: Code against the Bitbucket API to automate simple tasks, embed Bitbucket\n    data into your own site, build mobile or desktop apps, or even add custom UI add-ons\n    into Bitbucket itself using the Connect framework.\n  version: \"2.0\"\nservers:\n- url: https://api.bitbucket.org/2.0\npaths:\n  /users/{username}/repositories:\n    get:\n      tags:\n      - Repo\n      description: |-\n        All repositories owned by a user/team. This includes private\n        repositories, but filtered down to the ones that the calling user has\n        access to.\n      parameters:\n      - name: username\n        in: path\n        description: |\n          This can either be the username or the UUID of the account,\n          surrounded by curly-braces, for example: `{account UUID}`. An account\n          is either a team or user.\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: Unexpected error.\n      security:\n      - BitBucketsOAuthFlows:\n        - repository\n        - repository:admin\n      - basic: []\n      - api_key1: []\n\n  /users/{username}/repositories-2:\n    get:\n      tags:\n      - Repo\n      description: |-\n        All repositories owned by a user/team. This includes private\n        repositories, but filtered down to the ones that the calling user has\n        access to.\n      parameters:\n      - name: username\n        in: path\n        description: |\n          This can either be the username or the UUID of the account,\n          surrounded by curly-braces, for example: `{account UUID}`. An account\n          is either a team or user.\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: Unexpected error.\n      security:\n      - BitBucketsOAuthFlows:\n        - repository\n        - repository:admin\n      - api_key1: []\n        api_key2: []\n\n  /users/{username}/repositories-3:\n    get:\n      tags:\n      - Repo\n      description: |-\n        All repositories owned by a user/team. This includes private\n        repositories, but filtered down to the ones that the calling user has\n        access to.\n      parameters:\n      - name: username\n        in: path\n        description: |\n          This can either be the username or the UUID of the account,\n          surrounded by curly-braces, for example: `{account UUID}`. An account\n          is either a team or user.\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: Unexpected error.\n      security:\n      - BitBucketsOAuthFlows:\n        - repository\n        - repository:admin\n        api_key1: []\n      - api_key2: []\n\n  /users/{username}/repositories-4:\n    get:\n      tags:\n      - Repo\n      description: |-\n        All repositories owned by a user/team. This includes private\n        repositories, but filtered down to the ones that the calling user has\n        access to.\n      parameters:\n      - name: username\n        in: path\n        description: |\n          This can either be the username or the UUID of the account,\n          surrounded by curly-braces, for example: `{account UUID}`. An account\n          is either a team or user.\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: Unexpected error.\n      security:\n      - BitBucketsOAuthFlows:\n        - repository\n        - repository:admin\n    \ncomponents:\n  securitySchemes:\n    basic:\n      type: http\n      scheme: basic\n    api_key1:\n      type: apiKey\n      name: Authorization\n      in: header\n    api_key2:\n      type: apiKey\n      name: specialKey\n      in: header\n    BitBucketsOAuthFlows:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://bitbucket.org/site/oauth2/authorize\n          tokenUrl: https://bitbucket.org/site/oauth2/access_token\n          scopes:\n            repository:admin: Administer your repositories\n            repository: Read your repositories\n            repository:delete: Delete your repositories\n            repository:write: Read and modify your repositories\n        clientCredentials:\n          tokenUrl: https://bitbucket.org/site/oauth2/access_token\n        implicit:\n          authorizationUrl: https://bitbucket.org/site/oauth2/authorize?audience=abcd\n          scopes:        \n            repository:admin: Administer your repositories\n            repository: Read your repositories\n            repository:delete: Delete your repositories\n            repository:write: Read and modify your repositories\n        password:\n          tokenUrl: https://bitbucket.org/site/oauth2/access_token\n          scopes:        \n            repository:admin: Administer your repositories\n            repository: Read your repositories\n            repository:delete: Delete your repositories\n            repository:write: Read and modify your repositories\n    "
		}
	},
	"Error": "buildIR: make ir: path \"/users/{username}/repositories\": get: security: security \"BitBucketsOAuthFlows\" (index 0): flow \"clientCredentials\": unknown scope \"repository\""
}