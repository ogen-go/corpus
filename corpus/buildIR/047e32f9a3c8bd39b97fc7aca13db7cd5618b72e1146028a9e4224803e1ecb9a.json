{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/splunk/splunk-cloud-sdk-python"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "splunk_sdk/ml/v2beta1/openapi.yaml",
			"byteSize": 53869,
			"content": "components:\n  parameters:\n    Count:\n      description: The number of results to return.\n      in: query\n      name: count\n      required: false\n      schema:\n        default: 50\n        type: integer\n    Offset:\n      description: The offset to use when requesting results.\n      in: query\n      name: offset\n      required: false\n      schema:\n        type: string\n    Tenant:\n      description: The tenant issuing the request.\n      in: path\n      name: tenant\n      required: true\n      schema:\n        maxLength: 36\n        minLength: 4\n        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?([a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\n        type: string\n  responses:\n    Error400:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The request isn't valid.\n    Error401:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The user isn't authenticated.\n    Error403:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The operation isn't authorized.\n    Error404:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: The resource wasn't found.\n    Error429:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Too many requests were sent.\n    Error500:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: An internal service error occurred.\n  schemas:\n    ClassificationReport:\n      type: object\n    ClusteringReport:\n      type: object\n    CreatModelRequest:\n      description: Create model, initiate model upload request definition\n      properties:\n        inputFields:\n          description: model input fields\n          items:\n            $ref: '#/components/schemas/FieldInfo'\n          type: array\n        modelName:\n          description: name of the model to be uploaded, must be unique per tenant\n          type: string\n        modelType:\n          description: model type\n          type: string\n        outputFields:\n          description: model output fields\n          items:\n            $ref: '#/components/schemas/FieldInfo'\n          type: array\n        projectId:\n          description: which project this model belongs to\n          type: string\n      required:\n      - modelName\n      - inputFields\n      - outputFields\n      type: object\n    CreateModelResponse:\n      properties:\n        created:\n          description: the timestamp of the model creation.\n          format: int64\n          type: integer\n        createdBy:\n          description: the user who created and uploaded this model\n          type: string\n        inputFields:\n          description: model input fields\n          items:\n            $ref: '#/components/schemas/FieldInfo'\n          type: array\n        modelId:\n          description: the unique id of a model\n          format: uuid\n          type: string\n        modelName:\n          description: the name of the model\n          type: string\n        modelType:\n          description: model type\n          type: string\n        outputFields:\n          description: model output fields\n          items:\n            $ref: '#/components/schemas/FieldInfo'\n          type: array\n        owner:\n          description: owner of the model\n          type: string\n        sessionId:\n          description: the upload session id corresponding for this upload.\n          format: uuid\n          type: string\n        tenant:\n          description: tenant of the model\n          type: string\n        version:\n          description: version of the model\n          minimum: 1\n          type: integer\n      type: object\n    CrossValidation:\n      properties:\n        kFold:\n          default: 5\n          description: Number of folds in the K-fold cross validation.\n          minimum: 2\n          type: integer\n        randomSeed:\n          default: 0\n          description: Random state to shuffle and partition data.\n          type: integer\n        stratified:\n          default: false\n          description: Determine whether stratification is used in partitioning the\n            data.\n          type: boolean\n      type: object\n    CrossValidationScore:\n      items:\n        properties:\n          foldId:\n            description: Fold ID in k-fold cross-validation.\n            type: integer\n          testScore:\n            $ref: '#/components/schemas/Score'\n          trainingScore:\n            $ref: '#/components/schemas/Score'\n        type: object\n      type: array\n    DeploymentSpec:\n      properties:\n        cpuLimit:\n          default: \"1\"\n          description: CPU Resource limit for each container in a deployment.\n          type: string\n        cpuRequest:\n          default: 125m\n          description: CPU Resource limit for serving requests.\n          pattern: ^([0-9])+([a-z]){1}$\n          type: string\n        memoryLimit:\n          default: 1G\n          description: Memory Resource limit for each container in a deployment.\n          pattern: ^([0-9])+([A-Z]){1}$\n          type: string\n        memoryRequest:\n          default: 128M\n          description: Memory Resource limit for serving requests.\n          pattern: ^([0-9])+([a-z]){1}$\n          type: string\n        replicas:\n          default: 1\n          description: Create replicated pods in a deployment.\n          minimum: 1\n          type: integer\n      type: object\n    Error:\n      properties:\n        code:\n          type: string\n        details:\n          items:\n            type: object\n          type: array\n        message:\n          type: string\n      required:\n      - code\n      - message\n    ErrorResponse:\n      properties:\n        code:\n          type: string\n        details:\n          items:\n            type: object\n          type: array\n        message:\n          type: string\n      required:\n      - code\n      - message\n    Events:\n      description: Output events to the Ingest /events endpoint.\n      properties:\n        attributes:\n          description: Specifies a JSON object that contains explicit custom fields\n            to be defined at index time.\n          type: object\n        host:\n          description: Splunk host field.\n          type: string\n        source:\n          description: Splunk source field.\n          type: string\n        sourcetype:\n          description: Splunk sourcetype field.\n          type: string\n    ExecutorErrors:\n      description: Executor errors.\n      properties:\n        message:\n          type: string\n      type: object\n    ExecutorLogs:\n      description: Executor logs.\n      properties:\n        level:\n          type: string\n        message:\n          type: string\n      type: object\n    FieldInfo:\n      properties:\n        name:\n          description: name of the field\n          type: string\n        size:\n          description: size of the tensor field. Scalar fields must have size 1.\n          minimum: 1\n          type: integer\n        type:\n          description: type of the field\n          enum:\n          - long\n          - float\n          - double\n          - string\n          - longTensor\n          - floatTensor\n          - doubleTensor\n          - stringTensor\n          type: string\n      required:\n      - name\n      - type\n      - size\n      type: object\n    Fields:\n      properties:\n        created:\n          description: Fields produced by task.\n          items:\n            type: string\n          type: array\n        features:\n          description: Fields necessary for task.\n          items:\n            type: string\n          type: array\n        target:\n          description: Target field necessary for task.\n          type: string\n      required:\n      - features\n      type: object\n    FitTask:\n      allOf:\n      - $ref: '#/components/schemas/TaskCommon'\n      - properties:\n          algorithm:\n            type: string\n          fields:\n            $ref: '#/components/schemas/Fields'\n          outputTransformer:\n            type: string\n          parameters:\n            $ref: '#/components/schemas/TrainingParameters'\n        required:\n        - algorithm\n        - fields\n        type: object\n      description: Fit task does an estimation/training/fitting, fit task outputs\n        a transformer.\n    ForecastingReport:\n      type: object\n    Health:\n      properties:\n        healthy:\n          type: boolean\n        version:\n          type: string\n      required:\n      - healthy\n      - version\n    InputData:\n      properties:\n        kind:\n          enum:\n          - SPL\n          - RawData\n        source:\n          $ref: '#/components/schemas/InputDataSource'\n      required:\n      - kind\n      - source\n      type: object\n    InputDataSource:\n      oneOf:\n        - $ref: '#/components/schemas/SPL'\n        - $ref: '#/components/schemas/RawData'\n      type: object\n    InputStream:\n      properties:\n        kind:\n          enum:\n          - Kafka\n        source:\n          $ref: '#/components/schemas/InputStreamSource'\n      required:\n      - kind\n      - source\n      type: object\n    InputStreamSource:\n      oneOf:\n      - $ref: '#/components/schemas/KafkaInput'\n      type: object\n    KafkaInput:\n      properties:\n        offsetReset:\n          default: latest\n          enum:\n          - earliest\n          - latest\n          type: string\n        topic:\n          type: string\n      required:\n      - topic\n      type: object\n    KafkaOutput:\n      properties:\n        topic:\n          type: string\n      required:\n      - topic\n      type: object\n    ListModelResponse:\n      description: response definition for get a list of models for the user\n      items:\n        $ref: '#/components/schemas/ModelInfo'\n      type: array\n    ModelInfo:\n      properties:\n        created:\n          description: the timestamp of the model definition creation.\n          format: int64\n          type: integer\n        createdBy:\n          description: the user who created and uploaded this model\n          type: string\n        inputFields:\n          description: model input fields\n          items:\n            $ref: '#/components/schemas/FieldInfo'\n          type: array\n        modelId:\n          description: the unique id of a model\n          format: uuid\n          type: string\n        modelName:\n          description: the name of the model\n          type: string\n        modelType:\n          description: model type\n          type: string\n        outputFields:\n          description: model output fields\n          items:\n            $ref: '#/components/schemas/FieldInfo'\n          type: array\n        owner:\n          description: owner of the model\n          type: string\n        projectId:\n          description: project id\n          type: string\n        tenant:\n          description: tenant of the model\n          type: string\n        version:\n          description: version of the model\n          minimum: 1\n          type: integer\n      type: object\n    OutputData:\n      properties:\n        destination:\n          $ref: '#/components/schemas/OutputDataDestination'\n        kind:\n          enum:\n          - Events\n      type: object\n    OutputDataDestination:\n      oneOf:\n        - $ref: '#/components/schemas/Events'\n      type: object\n    OutputStream:\n      properties:\n        destination:\n          $ref: '#/components/schemas/OutputStreamDestination'\n        kind:\n          enum:\n          - Kafka\n      required:\n      - kind\n      - destination\n      type: object\n    OutputStreamDestination:\n      oneOf:\n      - $ref: '#/components/schemas/KafkaOutput'\n      type: object\n    RawData:\n      description: Send data directly via the reqest body as a base-64 encoded CSV\n        string.\n      properties:\n        data:\n          description: A base-64 encoded CSV string.\n          type: string\n    RegressionReport:\n      type: object\n    SPL:\n      properties:\n        extractAllFields:\n          description: Determine whether the Search service extracts all available\n            fields in the data, including fields not mentioned in the SPL for the\n            search job. Set to 'false' for better search performance.\n          type: boolean\n        maxTime:\n          description: The number of seconds to run this search before finalizing.\n          type: integer\n        module:\n          description: The module to run the search in. The default module is used\n            if a module is not specified.\n          type: string\n        query:\n          type: string\n        queryParameters:\n          description: Represents parameters on the search job such as 'earliest'\n            and 'latest'.\n          type: object\n      required:\n      - query\n      type: object\n    Score:\n      properties:\n        kind:\n          enum:\n          - regression\n          - classification\n          - clustering\n          - forecasting\n        report:\n         $ref: '#/components/schemas/ScoreReport'\n      required:\n      - kind\n      - report\n      type: object\n    ScoreReport:\n      oneOf:\n      - $ref: '#/components/schemas/RegressionReport'\n      - $ref: '#/components/schemas/ClassificationReport'\n      - $ref: '#/components/schemas/ClusteringReport'\n      - $ref: '#/components/schemas/ForecastingReport'\n      type: object\n    Task:\n      discriminator:\n        mapping:\n          fit: '#/components/schemas/FitTask'\n        propertyName: kind\n      oneOf:\n      - $ref: '#/components/schemas/FitTask'\n      required:\n      - kind\n      type: object\n    TaskCommon:\n      properties:\n        kind:\n          enum:\n          - fit\n          type: string\n        name:\n          description: The name has to be unique in the same workflow, it is optional,\n            can be used to identify that task artifact.\n          pattern: ^[A-Za-z][A-Za-z0-9_]*\n          type: string\n      type: object\n    TaskSummary:\n      properties:\n        algorithm:\n          type: string\n        name:\n          type: string\n        summary:\n          description: Summary of the task, including but not limited to learned parameters\n            and statistics.\n      type: object\n    TrainTestScore:\n      properties:\n        testScore:\n          $ref: '#/components/schemas/Score'\n        trainingScore:\n          $ref: '#/components/schemas/Score'\n      type: object\n    TrainTestSplit:\n      properties:\n        randomSeed:\n          default: 0\n          description: Random state to shuffle and partition data.\n          type: integer\n        ratio:\n          default: 0.8\n          description: Ratio to split out training set and test set. For example,\n            0.8 means 80% of data for the training set and 20% for the test set.\n          format: float\n          maximum: 1\n          minimum: 0\n          type: number\n        stratified:\n          default: false\n          description: Determine whether stratification is used in partitioning the\n            data.\n          type: boolean\n      type: object\n    TrainingParameters:\n      type: object\n    UploadBinaryRequest:\n      description: Binary upload request definition\n      properties:\n        binary:\n          format: binary\n          type: string\n      type: object\n    Workflow:\n      properties:\n        creationTime:\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          readOnly: true\n          type: string\n        name:\n          pattern: ^[A-Za-z][A-Za-z0-9_]*\n          type: string\n        tasks:\n          items:\n            $ref: '#/components/schemas/Task'\n          type: array\n      required:\n      - tasks\n      type: object\n    WorkflowBuild:\n      properties:\n        creationTime:\n          format: date-time\n          readOnly: true\n          type: string\n        endTime:\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          readOnly: true\n          type: string\n        input:\n          $ref: '#/components/schemas/InputData'\n        name:\n          pattern: ^[A-Za-z][A-Za-z0-9_]*\n          type: string\n        output:\n          $ref: '#/components/schemas/OutputData'\n        pipelineSummary:\n          items:\n            $ref: '#/components/schemas/TaskSummary'\n          readOnly: true\n          type: array\n        startTime:\n          format: date-time\n          readOnly: true\n          type: string\n        status:\n          enum:\n          - running\n          - failed\n          - success\n          - scheduled\n          readOnly: true\n        timeoutSecs:\n          default: 86400\n          description: Number of seconds before a workflow build times out.\n          minimum: 1\n          type: integer\n        trainingScore:\n          $ref: '#/components/schemas/Score'\n          description: The final training score produced from model training.\n          readOnly: true\n        validationOption:\n          description: Represents which type of validation to use in the workflow\n            along with any parameters if specified. If this is not included, no validation\n            is done (all data is used for training). Default parameter values are\n            used if no `option` is specified.\n          properties:\n            kind:\n              enum:\n              - TrainTest\n              - CrossValidation\n            option:\n             $ref: '#/components/schemas/WorkflowValidationOption'\n          required:\n          - kind\n          type: object\n        validationScore:\n          description: The validation score whose type is specified by the user in\n            `validationOption`.\n          properties:\n            kind:\n              enum:\n              - TrainTest\n              - CrossValidation\n            score:\n              $ref: '#/components/schemas/WorkflowValidationScore'\n          readOnly: true\n          required:\n          - kind\n          - score\n          type: object\n        workflow:\n          $ref: '#/components/schemas/Workflow'\n          readOnly: true\n      required:\n      - input\n      type: object\n    WorkflowValidationOption:\n      oneOf:\n      - $ref: '#/components/schemas/TrainTestSplit'\n      - $ref: '#/components/schemas/CrossValidation'\n      type: object\n    WorkflowValidationScore:\n      oneOf:\n      - $ref: '#/components/schemas/TrainTestScore'\n      - $ref: '#/components/schemas/CrossValidationScore'\n      type: object\n    WorkflowBuildError:\n      properties:\n        executorErrors:\n          items:\n            $ref: '#/components/schemas/ExecutorErrors'\n          type: array\n        id:\n          readOnly: true\n          type: string\n        requestId:\n          readOnly: true\n          type: string\n        workflowId:\n          readOnly: true\n          type: string\n        workflowManagerErrors:\n          items:\n            $ref: '#/components/schemas/WorkflowManagerErrors'\n          type: array\n      required:\n      - id\n      - workflowId\n      type: object\n    WorkflowBuildLog:\n      properties:\n        executorLogs:\n          items:\n            $ref: '#/components/schemas/ExecutorLogs'\n          type: array\n        id:\n          readOnly: true\n          type: string\n        requestId:\n          readOnly: true\n          type: string\n        workflowId:\n          readOnly: true\n          type: string\n        workflowManagerLogs:\n          items:\n            $ref: '#/components/schemas/WorkflowManagerLogs'\n          type: array\n      required:\n      - id\n      - workflowId\n      type: object\n    WorkflowDeployment:\n      properties:\n        creationTime:\n          format: date-time\n          readOnly: true\n          type: string\n        endTime:\n          format: date-time\n          type: string\n        id:\n          readOnly: true\n          type: string\n        name:\n          pattern: ^[A-Za-z][A-Za-z0-9_]*$\n          type: string\n        spec:\n          $ref: '#/components/schemas/DeploymentSpec'\n        startTime:\n          format: date-time\n          type: string\n        status:\n          enum:\n          - running\n          - failed\n          - success\n          - scheduled\n          - initializing\n          readOnly: true\n        workflowBuild:\n          $ref: '#/components/schemas/WorkflowBuild'\n          readOnly: true\n      required:\n      - spec\n      type: object\n    WorkflowDeploymentError:\n      properties:\n        buildId:\n          readOnly: true\n          type: string\n        executorErrors:\n          items:\n            $ref: '#/components/schemas/ExecutorErrors'\n          type: array\n        id:\n          readOnly: true\n          type: string\n        requestId:\n          readOnly: true\n          type: string\n        workflowId:\n          readOnly: true\n          type: string\n        workflowManagerErrors:\n          items:\n            $ref: '#/components/schemas/WorkflowManagerErrors'\n          type: array\n      required:\n      - id\n      - workflowId\n      - buildId\n      type: object\n    WorkflowDeploymentLog:\n      properties:\n        buildId:\n          readOnly: true\n          type: string\n        executorLogs:\n          items:\n            $ref: '#/components/schemas/ExecutorLogs'\n          type: array\n        id:\n          readOnly: true\n          type: string\n        requestId:\n          readOnly: true\n          type: string\n        workflowId:\n          readOnly: true\n          type: string\n        workflowManagerLogs:\n          items:\n            $ref: '#/components/schemas/WorkflowManagerLogs'\n          type: array\n      required:\n      - id\n      - workflowId\n      - buildId\n      type: object\n    WorkflowInference:\n      properties:\n        input:\n          type: string\n        output:\n          readOnly: true\n          type: string\n      required:\n      - input\n      type: object\n    WorkflowManagerErrors:\n      description: Workflow manager errors.\n      properties:\n        message:\n          type: string\n      type: object\n    WorkflowManagerLogs:\n      description: Workflow manager logs.\n      properties:\n        level:\n          type: string\n        message:\n          type: string\n      type: object\n    WorkflowRun:\n      properties:\n        creationTime:\n          format: date-time\n          readOnly: true\n          type: string\n        endTime:\n          format: date-time\n          readOnly: true\n          type: string\n        evaluate:\n          default: true\n          description: Determine whether to evaluate the prediction.\n          type: boolean\n        id:\n          readOnly: true\n          type: string\n        input:\n          $ref: '#/components/schemas/InputData'\n        name:\n          pattern: ^[A-Za-z][A-Za-z0-9_]*\n          type: string\n        output:\n          $ref: '#/components/schemas/OutputData'\n        predictionScore:\n          $ref: '#/components/schemas/Score'\n          readOnly: true\n        startTime:\n          format: date-time\n          readOnly: true\n          type: string\n        status:\n          enum:\n          - running\n          - failed\n          - success\n          - scheduled\n          readOnly: true\n        timeoutSecs:\n          default: 86400\n          description: Number of seconds before a workflow run times out.\n          minimum: 1\n          type: integer\n        workflowBuild:\n          $ref: '#/components/schemas/WorkflowBuild'\n          readOnly: true\n      required:\n      - input\n      - output\n      type: object\n    WorkflowRunError:\n      properties:\n        buildId:\n          readOnly: true\n          type: string\n        executorErrors:\n          items:\n            $ref: '#/components/schemas/ExecutorErrors'\n          type: array\n        id:\n          readOnly: true\n          type: string\n        requestId:\n          readOnly: true\n          type: string\n        workflowId:\n          readOnly: true\n          type: string\n        workflowManagerErrors:\n          items:\n            $ref: '#/components/schemas/WorkflowManagerErrors'\n          type: array\n      required:\n      - id\n      - workflowId\n      - buildId\n      type: object\n    WorkflowRunLog:\n      properties:\n        buildId:\n          readOnly: true\n          type: string\n        executorLogs:\n          items:\n            $ref: '#/components/schemas/ExecutorLogs'\n          type: array\n        id:\n          readOnly: true\n          type: string\n        requestId:\n          readOnly: true\n          type: string\n        workflowId:\n          readOnly: true\n          type: string\n        workflowManagerLogs:\n          items:\n            $ref: '#/components/schemas/WorkflowManagerLogs'\n          type: array\n      required:\n      - id\n      - workflowId\n      - buildId\n      type: object\n    WorkflowStreamDeployment:\n      properties:\n        creationTime:\n          format: date-time\n          readOnly: true\n          type: string\n        endTime:\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          readOnly: true\n          type: string\n        input:\n          $ref: '#/components/schemas/InputStream'\n        name:\n          pattern: ^[A-Za-z][A-Za-z0-9_]*$\n          type: string\n        output:\n          $ref: '#/components/schemas/OutputStream'\n        spec:\n          $ref: '#/components/schemas/DeploymentSpec'\n        startTime:\n          format: date-time\n          readOnly: true\n          type: string\n        status:\n          enum:\n          - running\n          - failed\n          - success\n          - scheduled\n          - initializing\n          readOnly: true\n        workflowBuild:\n          $ref: '#/components/schemas/WorkflowBuild'\n          readOnly: true\n      required:\n      - input\n      - output\n      type: object\n    WorkflowsGetResponse:\n      properties:\n        creationTime:\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          readOnly: true\n          type: string\n        name:\n          pattern: ^[A-Za-z][A-Za-z0-9_]*\n          type: string\n      type: object\ninfo:\n  description: Use the Machine Learning service in Splunk Cloud Services to deliver\n    resource intensive machine learning workloads. The Machine Learning service covers\n    model experimentation, training, inference, validation, scoring, and serving.\n  title: Machine Learning\n  version: v2beta1.1\nopenapi: 3.0.0\npaths:\n  /{tenant}/ml/v2beta1/workflows:\n    get:\n      operationId: listWorkflows\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/WorkflowsGetResponse'\n                type: array\n          description: The workflow configurations were returned successfully.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Returns a list of workflow configurations.\n      tags:\n      - Workflow\n      x-authz-scope: ml.workflows.read\n    parameters:\n    - $ref: '#/components/parameters/Tenant'\n    post:\n      operationId: createWorkflow\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Workflow'\n        description: Workflow configuration to be created.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Workflow'\n          description: The workflow configuration was created successfully.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Creates a workflow configuration.\n      tags:\n      - Workflow\n      x-authz-scope: ml.workflows.create\n  /{tenant}/ml/v2beta1/workflows/{id}:\n    delete:\n      operationId: deleteWorkflow\n      responses:\n        \"204\":\n          description: The workflow configuration was removed successfully.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"404\":\n          $ref: '#/components/responses/Error404'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Removes a workflow configuration.\n      tags:\n      - Workflow\n      x-authz-scope: ml.workflows.delete\n    get:\n      operationId: getWorkflow\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Workflow'\n          description: The workflow configuration was returned successfully.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Returns a workflow configuration.\n      tags:\n      - Workflow\n      x-authz-scope: ml.workflows.read\n    parameters:\n    - $ref: '#/components/parameters/Tenant'\n    - description: The workflow ID.\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n  /{tenant}/ml/v2beta1/workflows/{id}/builds:\n    get:\n      operationId: listWorkflowBuilds\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/WorkflowBuild'\n                type: array\n          description: Returns a list of workflow builds.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Returns a list of workflow builds.\n      tags:\n      - Workflow\n      x-authz-scope: ml.workflowbuilds.read\n    parameters:\n    - $ref: '#/components/parameters/Tenant'\n    - description: The workflow ID.\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n    post:\n      operationId: createWorkflowBuild\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WorkflowBuild'\n        description: Input data used to build the workflow.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowBuild'\n          description: The workflow build was created successfully.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Creates a workflow build.\n      tags:\n      - Workflow\n      x-authz-scope: ml.workflowbuilds.create\n  /{tenant}/ml/v2beta1/workflows/{id}/builds/{buildId}:\n    delete:\n      operationId: deleteWorkflowBuild\n      responses:\n        \"204\":\n          description: The workflow build was removed successfully.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"404\":\n          $ref: '#/components/responses/Error404'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Removes a workflow build.\n      tags:\n      - Workflow\n      x-authz-scope: ml.workflowbuilds.delete\n    get:\n      operationId: getWorkflowBuild\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowBuild'\n          description: Returns the status of a workflow build.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Returns the status of a workflow build.\n      tags:\n      - Workflow\n      x-authz-scope: ml.workflowbuilds.read\n    parameters:\n    - $ref: '#/components/parameters/Tenant'\n    - description: The workflow ID.\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n    - description: The workflow build ID.\n      in: path\n      name: buildId\n      required: true\n      schema:\n        type: string\n  /{tenant}/ml/v2beta1/workflows/{id}/builds/{buildId}/deployments:\n    get:\n      operationId: listWorkflowDeployments\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/WorkflowDeployment'\n                type: array\n          description: Returns a list of workflow deployments.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Returns a list of workflow deployments.\n      tags:\n      - Workflow\n      x-authz-scope: ml.deployments.read\n    parameters:\n    - $ref: '#/components/parameters/Tenant'\n    - description: The workflow ID.\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n    - description: The workflow build ID.\n      in: path\n      name: buildId\n      required: true\n      schema:\n        type: string\n    post:\n      operationId: createWorkflowDeployment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WorkflowDeployment'\n        description: Input data used to build the workflow deployment.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowDeployment'\n          description: The workflow deployment was created successfully.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Creates a workflow deployment.\n      tags:\n      - Workflow\n      x-authz-scope: ml.deployments.create\n  /{tenant}/ml/v2beta1/workflows/{id}/builds/{buildId}/deployments/{deploymentId}:\n    delete:\n      operationId: deleteWorkflowDeployment\n      responses:\n        \"204\":\n          description: The workflow deployment was removed successfully.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"404\":\n          $ref: '#/components/responses/Error404'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Removes a workflow deployment.\n      tags:\n      - Workflow\n      x-authz-scope: ml.deployments.delete\n    get:\n      operationId: getWorkflowDeployment\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowDeployment'\n          description: Returns the status of a workflow deployment.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Returns the status of a workflow deployment.\n      tags:\n      - Workflow\n      x-authz-scope: ml.deployments.read\n    parameters:\n    - $ref: '#/components/parameters/Tenant'\n    - description: The workflow ID.\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n    - description: The workflow build ID.\n      in: path\n      name: buildId\n      required: true\n      schema:\n        type: string\n    - description: The workflow deployment ID.\n      in: path\n      name: deploymentId\n      required: true\n      schema:\n        type: string\n  /{tenant}/ml/v2beta1/workflows/{id}/builds/{buildId}/deployments/{deploymentId}/errors:\n    get:\n      operationId: getWorkflowDeploymentError\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowDeploymentError'\n          description: Returns a list of workflow deployment errors.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Returns a list of workflow deployment errors.\n      tags:\n      - Workflow\n      x-authz-scope: ml.deployments.read\n    parameters:\n    - $ref: '#/components/parameters/Tenant'\n    - description: The workflow ID.\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n    - description: The workflow build ID.\n      in: path\n      name: buildId\n      required: true\n      schema:\n        type: string\n    - description: The workflow deployment ID.\n      in: path\n      name: deploymentId\n      required: true\n      schema:\n        type: string\n  /{tenant}/ml/v2beta1/workflows/{id}/builds/{buildId}/deployments/{deploymentId}/inference:\n    parameters:\n    - $ref: '#/components/parameters/Tenant'\n    - description: The workflow ID.\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n    - description: The workflow build ID.\n      in: path\n      name: buildId\n      required: true\n      schema:\n        type: string\n    - description: The workflow deployment ID.\n      in: path\n      name: deploymentId\n      required: true\n      schema:\n        type: string\n    post:\n      operationId: createWorkflowInference\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WorkflowInference'\n        description: Input data to the inference request.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowInference'\n          description: The workflow inference request was created successfully.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Creates a workflow inference request.\n      tags:\n      - Workflow\n      x-authz-scope: ml.inference.infer\n  /{tenant}/ml/v2beta1/workflows/{id}/builds/{buildId}/deployments/{deploymentId}/logs:\n    get:\n      operationId: getWorkflowDeploymentLog\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowDeploymentLog'\n          description: Returns the logs from a workflow deployment.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Returns the logs from a workflow deployment.\n      tags:\n      - Workflow\n      x-authz-scope: ml.deployments.read\n    parameters:\n    - $ref: '#/components/parameters/Tenant'\n    - description: The workflow ID.\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n    - description: The workflow build ID.\n      in: path\n      name: buildId\n      required: true\n      schema:\n        type: string\n    - description: The workflow deployment ID.\n      in: path\n      name: deploymentId\n      required: true\n      schema:\n        type: string\n  /{tenant}/ml/v2beta1/workflows/{id}/builds/{buildId}/errors:\n    get:\n      operationId: getWorkflowBuildError\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowBuildError'\n          description: Returns the list of workflow errors.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Returns a list of workflow errors.\n      tags:\n      - Workflow\n      x-authz-scope: ml.workflowbuilds.read\n    parameters:\n    - $ref: '#/components/parameters/Tenant'\n    - description: The workflow ID.\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n    - description: The workflow build ID.\n      in: path\n      name: buildId\n      required: true\n      schema:\n        type: string\n  /{tenant}/ml/v2beta1/workflows/{id}/builds/{buildId}/logs:\n    get:\n      operationId: getWorkflowBuildLog\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowBuildLog'\n          description: Returns the logs from a workflow build.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Returns the logs from a workflow build.\n      tags:\n      - Workflow\n      x-authz-scope: ml.workflowbuilds.read\n    parameters:\n    - $ref: '#/components/parameters/Tenant'\n    - description: The workflow ID.\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n    - description: The workflow build ID.\n      in: path\n      name: buildId\n      required: true\n      schema:\n        type: string\n  /{tenant}/ml/v2beta1/workflows/{id}/builds/{buildId}/runs:\n    get:\n      operationId: listWorkflowRuns\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/WorkflowRun'\n                type: array\n          description: Returns a list of workflow runs.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Returns a list of workflow runs.\n      tags:\n      - Workflow\n      x-authz-scope: ml.workflowruns.read\n    parameters:\n    - $ref: '#/components/parameters/Tenant'\n    - description: The workflow ID.\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n    - description: The workflow build ID.\n      in: path\n      name: buildId\n      required: true\n      schema:\n        type: string\n    post:\n      operationId: createWorkflowRun\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WorkflowRun'\n        description: Input data used to build the workflow.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowRun'\n          description: The workflow run was created successfully.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Creates a workflow run.\n      tags:\n      - Workflow\n      x-authz-scope: ml.workflowruns.create\n  /{tenant}/ml/v2beta1/workflows/{id}/builds/{buildId}/runs/{runId}:\n    delete:\n      operationId: deleteWorkflowRun\n      responses:\n        \"204\":\n          description: The workflow run was removed successfully.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"404\":\n          $ref: '#/components/responses/Error404'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Removes a workflow run.\n      tags:\n      - Workflow\n      x-authz-scope: ml.workflowruns.delete\n    get:\n      operationId: getWorkflowRun\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowRun'\n          description: Returns the status of a workflow run.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Returns the status of a workflow run.\n      tags:\n      - Workflow\n      x-authz-scope: ml.workflowruns.read\n    parameters:\n    - $ref: '#/components/parameters/Tenant'\n    - description: The workflow ID.\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n    - description: The workflow build ID.\n      in: path\n      name: buildId\n      required: true\n      schema:\n        type: string\n    - description: The workflow run ID.\n      in: path\n      name: runId\n      required: true\n      schema:\n        type: string\n  /{tenant}/ml/v2beta1/workflows/{id}/builds/{buildId}/runs/{runId}/errors:\n    get:\n      operationId: getWorkflowRunError\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowRunError'\n          description: Returns the errors for a workflow run.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Returns the errors for a workflow run.\n      tags:\n      - Workflow\n      x-authz-scope: ml.workflowruns.read\n    parameters:\n    - $ref: '#/components/parameters/Tenant'\n    - description: The workflow ID.\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n    - description: The workflow build ID.\n      in: path\n      name: buildId\n      required: true\n      schema:\n        type: string\n    - description: The workflow run ID.\n      in: path\n      name: runId\n      required: true\n      schema:\n        type: string\n  /{tenant}/ml/v2beta1/workflows/{id}/builds/{buildId}/runs/{runId}/logs:\n    get:\n      operationId: getWorkflowRunLog\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowRunLog'\n          description: Returns the logs for a workflow run.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Returns the logs for a workflow run.\n      tags:\n      - Workflow\n      x-authz-scope: ml.workflowruns.read\n    parameters:\n    - $ref: '#/components/parameters/Tenant'\n    - description: The workflow ID.\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n    - description: The workflow build ID.\n      in: path\n      name: buildId\n      required: true\n      schema:\n        type: string\n    - description: The workflow run ID.\n      in: path\n      name: runId\n      required: true\n      schema:\n        type: string\n  /{tenant}/ml/v2beta1/workflows/{id}/builds/{buildId}/stream-deployments:\n    parameters:\n    - $ref: '#/components/parameters/Tenant'\n    - description: The workflow ID.\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n    - description: The workflow build ID.\n      in: path\n      name: buildId\n      required: true\n      schema:\n        type: string\n    post:\n      operationId: createWorkflowStreamDeployment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WorkflowStreamDeployment'\n        description: Configuration for the workflow streaming deployment.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowStreamDeployment'\n          description: The workflow streaming deployment was created successfully.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Creates a workflow streaming deployment.\n      tags:\n      - Workflow\n      x-authz-scope: ml.deployments.create\n  /{tenant}/ml/v2beta1/workflows/{id}/builds/{buildId}/stream-deployments/{streamDeploymentId}:\n    delete:\n      operationId: deleteWorkflowStreamDeployment\n      responses:\n        \"204\":\n          description: The workflow streaming deployment was removed successfully.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"404\":\n          $ref: '#/components/responses/Error404'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Removes a workflow streaming deployment.\n      tags:\n      - Workflow\n      x-authz-scope: ml.deployments.delete\n    get:\n      operationId: getWorkflowStreamDeployment\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowStreamDeployment'\n          description: Returns the status of a workflow streaming deployment.\n        \"400\":\n          $ref: '#/components/responses/Error400'\n        \"401\":\n          $ref: '#/components/responses/Error401'\n        \"403\":\n          $ref: '#/components/responses/Error403'\n        \"429\":\n          $ref: '#/components/responses/Error429'\n        \"500\":\n          $ref: '#/components/responses/Error500'\n      summary: Returns the status of a workflow streaming deployment.\n      tags:\n      - Workflow\n      x-authz-scope: ml.deployments.read\n    parameters:\n    - $ref: '#/components/parameters/Tenant'\n    - description: The workflow ID.\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n    - description: The workflow build ID.\n      in: path\n      name: buildId\n      required: true\n      schema:\n        type: string\n    - description: The workflow streaming deployment ID.\n      in: path\n      name: streamDeploymentId\n      required: true\n      schema:\n        type: string\ntags:\n- name: mlTag\n\n# Retrieved from scp-openapi commit 0946f4bc226a17b28c46e9494b83fff7a8f8720c path: ml/v2beta1/openapi.yaml",
			"canonicalURL": "/github.com/splunk/splunk-cloud-sdk-python@d8b72e17c2fcefd7e82716dfb61f9eb60799a74f/-/blob/splunk_sdk/ml/v2beta1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/splunk/splunk-cloud-sdk-python/blob/d8b72e17c2fcefd7e82716dfb61f9eb60799a74f/splunk_sdk/ml/v2beta1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: path \"/{tenant}/ml/v2beta1/workflows\": post: requestBody: contents: media: \"application/json\": generate schema: field tasks: item: oneOf: discriminator: unable to map \"fit\" to \"https://raw.githubusercontent.com/splunk/splunk-cloud-sdk-python/d8b72e17c2fcefd7e82716dfb61f9eb60799a74f/splunk_sdk/ml/v2beta1/openapi.yaml#/components/schemas/FitTask\""
}