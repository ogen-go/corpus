{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/snyk/vervet"
		},
		"file": {
			"name": "spec.yaml",
			"size": 0,
			"path": "testdata/output/2021-06-04~experimental/spec.yaml",
			"byteSize": 20185,
			"content": "# OpenAPI spec generated by vervet, DO NOT EDIT\ncomponents:\n  headers:\n    DeprecationHeader:\n      description: |\n        A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:\n        https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html\n      example: \"2021-07-01T00:00:00Z\"\n      schema:\n        format: date-time\n        type: string\n    RequestIdResponseHeader:\n      description: |\n        A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.\n      example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef\n      schema:\n        format: uuid\n        type: string\n    SunsetHeader:\n      description: |\n        A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:\n        https://datatracker.ietf.org/doc/html/rfc8594\n      example: \"2021-08-02T00:00:00Z\"\n      schema:\n        format: date-time\n        type: string\n    VersionRequestedResponseHeader:\n      description: A header containing the version of the endpoint requested by the\n        caller.\n      example: \"2021-06-04\"\n      schema:\n        $ref: '#/components/schemas/QueryVersion'\n    VersionServedResponseHeader:\n      description: A header containing the version of the endpoint that was served\n        by the API.\n      example: \"2021-06-04\"\n      schema:\n        $ref: '#/components/schemas/ActualVersion'\n    VersionStageResponseHeader:\n      description: |\n        A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.\n      schema:\n        enum:\n        - wip\n        - experimental\n        - beta\n        - ga\n        - deprecated\n        - sunset\n        example: ga\n        type: string\n  parameters:\n    EndingBefore:\n      description: Return the page of results immediately before this cursor\n      example: v1.eyJpZCI6IjExMDAifQo=\n      in: query\n      name: ending_before\n      schema:\n        type: string\n    Limit:\n      description: Number of results to return per page\n      example: 10\n      in: query\n      name: limit\n      schema:\n        default: 10\n        format: int32\n        maximum: 100\n        minimum: 10\n        multipleOf: 10\n        type: integer\n    Pagination:\n      description: The parameters used to paginate through a list of results from\n        the API.\n      in: query\n      name: page\n      schema:\n        additionalProperties: false\n        properties:\n          after:\n            type: string\n          before:\n            type: string\n          size:\n            format: int32\n            type: integer\n        type: object\n    StartingAfter:\n      description: Return the page of results immediately after this cursor\n      example: v1.eyJpZCI6IjEwMDAifQo=\n      in: query\n      name: starting_after\n      schema:\n        type: string\n    Version:\n      description: The requested version of the endpoint to process the request\n      example: \"2021-06-04\"\n      in: query\n      name: version\n      required: true\n      schema:\n        $ref: '#/components/schemas/QueryVersion'\n  responses:\n    \"400\":\n      content:\n        application/vnd.api+json:\n          schema:\n            $ref: '#/components/schemas/ErrorDocument'\n      description: 'Bad Request: A parameter provided as a part of the request was\n        invalid.'\n      headers:\n        deprecation:\n          $ref: '#/components/headers/DeprecationHeader'\n        snyk-request-id:\n          $ref: '#/components/headers/RequestIdResponseHeader'\n        snyk-version-lifecycle-stage:\n          $ref: '#/components/headers/VersionStageResponseHeader'\n        snyk-version-requested:\n          $ref: '#/components/headers/VersionRequestedResponseHeader'\n        snyk-version-served:\n          $ref: '#/components/headers/VersionServedResponseHeader'\n        sunset:\n          $ref: '#/components/headers/SunsetHeader'\n    \"401\":\n      content:\n        application/vnd.api+json:\n          schema:\n            $ref: '#/components/schemas/ErrorDocument'\n      description: 'Unauthorized: the request requires an authentication token or\n        a token with more permissions.'\n      headers:\n        deprecation:\n          $ref: '#/components/headers/DeprecationHeader'\n        snyk-request-id:\n          $ref: '#/components/headers/RequestIdResponseHeader'\n        snyk-version-lifecycle-stage:\n          $ref: '#/components/headers/VersionStageResponseHeader'\n        snyk-version-requested:\n          $ref: '#/components/headers/VersionRequestedResponseHeader'\n        snyk-version-served:\n          $ref: '#/components/headers/VersionServedResponseHeader'\n        sunset:\n          $ref: '#/components/headers/SunsetHeader'\n    \"404\":\n      content:\n        application/vnd.api+json:\n          schema:\n            $ref: '#/components/schemas/ErrorDocument'\n      description: 'Not Found: The resource being operated on could not be found.'\n      headers:\n        deprecation:\n          $ref: '#/components/headers/DeprecationHeader'\n        snyk-request-id:\n          $ref: '#/components/headers/RequestIdResponseHeader'\n        snyk-version-lifecycle-stage:\n          $ref: '#/components/headers/VersionStageResponseHeader'\n        snyk-version-requested:\n          $ref: '#/components/headers/VersionRequestedResponseHeader'\n        snyk-version-served:\n          $ref: '#/components/headers/VersionServedResponseHeader'\n        sunset:\n          $ref: '#/components/headers/SunsetHeader'\n    \"500\":\n      content:\n        application/vnd.api+json:\n          schema:\n            $ref: '#/components/schemas/ErrorDocument'\n      description: 'Internal Server Error: An error was encountered while attempting\n        to process the request.'\n      headers:\n        deprecation:\n          $ref: '#/components/headers/DeprecationHeader'\n        snyk-request-id:\n          $ref: '#/components/headers/RequestIdResponseHeader'\n        snyk-version-lifecycle-stage:\n          $ref: '#/components/headers/VersionStageResponseHeader'\n        snyk-version-requested:\n          $ref: '#/components/headers/VersionRequestedResponseHeader'\n        snyk-version-served:\n          $ref: '#/components/headers/VersionServedResponseHeader'\n        sunset:\n          $ref: '#/components/headers/SunsetHeader'\n  schemas:\n    ActualVersion:\n      description: Resolved API version\n      pattern: ^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$\n      type: string\n    Error:\n      additionalProperties: false\n      example:\n        detail: Not Found\n        status: \"404\"\n      properties:\n        detail:\n          description: A human-readable explanation specific to this occurrence of\n            the problem.\n          example: 'The request was missing these required fields: ...'\n          type: string\n        id:\n          description: A unique identifier for this particular occurrence of the problem.\n          example: f16c31b5-6129-4571-add8-d589da9be524\n          format: uuid\n          type: string\n        meta:\n          additionalProperties: true\n          example:\n            key: value\n          type: object\n        source:\n          additionalProperties: false\n          example:\n            pointer: /data/attributes\n          properties:\n            parameter:\n              description: A string indicating which URI query parameter caused the\n                error.\n              example: param1\n              type: string\n            pointer:\n              description: A JSON Pointer [RFC6901] to the associated entity in the\n                request document.\n              example: /data/attributes\n              type: string\n          type: object\n        status:\n          description: The HTTP status code applicable to this problem, expressed\n            as a string value.\n          example: \"400\"\n          pattern: ^[45]\\d\\d$\n          type: string\n      required:\n      - status\n      - detail\n      type: object\n    ErrorDocument:\n      additionalProperties: false\n      example:\n        errors:\n        - detail: Permission denied for this resource\n          status: \"403\"\n        jsonapi:\n          version: \"1.0\"\n      properties:\n        errors:\n          example:\n          - detail: Permission denied for this resource\n            status: \"403\"\n          items:\n            $ref: '#/components/schemas/Error'\n          minItems: 1\n          type: array\n        jsonapi:\n          $ref: '#/components/schemas/JsonApi'\n      required:\n      - jsonapi\n      - errors\n      type: object\n    HelloWorld:\n      additionalProperties: false\n      properties:\n        attributes:\n          additionalProperties: false\n          properties:\n            message:\n              type: string\n            requestSubject:\n              additionalProperties: false\n              properties:\n                clientId:\n                  format: uuid\n                  type: string\n                publicId:\n                  format: uuid\n                  type: string\n                type:\n                  type: string\n              required:\n              - publicId\n              - type\n              type: object\n          required:\n          - message\n          - requestSubject\n          type: object\n        id:\n          format: uuid\n          type: string\n        type:\n          type: string\n      required:\n      - type\n      - id\n      - attributes\n      type: object\n    JsonApi:\n      additionalProperties: false\n      example:\n        version: \"1.0\"\n      properties:\n        version:\n          description: Version of the JSON API specification this server supports.\n          example: \"1.0\"\n          pattern: ^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)$\n          type: string\n      required:\n      - version\n      type: object\n    LinkProperty:\n      example: https://example.com/api/resource\n      oneOf:\n      - description: A string containing the link’s URL.\n        example: https://example.com/api/resource\n        type: string\n      - additionalProperties: false\n        example:\n          href: https://example.com/api/resource\n        properties:\n          href:\n            description: A string containing the link’s URL.\n            example: https://example.com/api/resource\n            type: string\n          meta:\n            $ref: '#/components/schemas/Meta'\n        required:\n        - href\n        type: object\n    Links:\n      additionalProperties: false\n      properties:\n        first:\n          $ref: '#/components/schemas/LinkProperty'\n        last:\n          $ref: '#/components/schemas/LinkProperty'\n        next:\n          $ref: '#/components/schemas/LinkProperty'\n        prev:\n          $ref: '#/components/schemas/LinkProperty'\n        related:\n          $ref: '#/components/schemas/LinkProperty'\n        self:\n          $ref: '#/components/schemas/LinkProperty'\n      type: object\n    Meta:\n      additionalProperties: true\n      description: Free-form object that may contain non-standard information.\n      example:\n        key1: value1\n        key2:\n          sub_key: sub_value\n        key3:\n        - array_value1\n        - array_value2\n      type: object\n    Project:\n      additionalProperties: false\n      properties:\n        attributes:\n          additionalProperties: false\n          properties:\n            created:\n              description: The date that the project was created on\n              example: \"2021-05-29T09:50:54.014Z\"\n              type: string\n            hostname:\n              description: The hostname for a CLI project, null if not set\n              nullable: true\n              type: string\n            name:\n              type: string\n            origin:\n              description: The origin the project was added from\n              example: github\n              type: string\n            status:\n              description: Describes if a project is currently monitored or it is\n                de-activated\n              example: active\n              type: string\n            type:\n              description: The package manager of the project\n              example: maven\n              type: string\n          required:\n          - name\n          - created\n          - origin\n          - type\n          - status\n          type: object\n        id:\n          description: The ID.\n          example: 331ede0a-de94-456f-b788-166caeca58bf\n          type: string\n        type:\n          description: Content type.\n          example: projects\n          type: string\n      required:\n      - type\n      - id\n      - attributes\n      type: object\n    QueryVersion:\n      description: Requested API version\n      pattern: ^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$\n      type: string\ninfo:\n  title: Registry\n  version: 3.0.0\nopenapi: 3.0.3\npaths:\n  /examples/hello-world/{id}:\n    get:\n      description: Get a single result from the hello-world example\n      operationId: helloWorldGetOne\n      parameters:\n      - $ref: '#/components/parameters/Version'\n      - $ref: '#/components/parameters/Pagination'\n      - description: The id of the hello-world example entity to be retrieved.\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/vnd.api+json:\n              schema:\n                additionalProperties: false\n                properties:\n                  data:\n                    $ref: '#/components/schemas/HelloWorld'\n                  jsonapi:\n                    $ref: '#/components/schemas/JsonApi'\n                  links:\n                    $ref: '#/components/schemas/Links'\n                required:\n                - jsonapi\n                - data\n                - links\n                type: object\n          description: A hello world entity being requested is returned\n          headers:\n            snyk-request-id:\n              $ref: '#/components/headers/RequestIdResponseHeader'\n            snyk-version-requested:\n              $ref: '#/components/headers/VersionRequestedResponseHeader'\n            snyk-version-served:\n              $ref: '#/components/headers/VersionServedResponseHeader'\n        \"400\":\n          $ref: '#/components/responses/400'\n        \"401\":\n          $ref: '#/components/responses/401'\n        \"404\":\n          $ref: '#/components/responses/404'\n        \"500\":\n          $ref: '#/components/responses/500'\n      x-snyk-api-releases:\n      - 2021-06-01~experimental\n      - 2021-06-07~experimental\n      - 2021-06-13~beta\n      x-snyk-api-version: 2021-06-01~experimental\n      x-snyk-deprecated-by: 2021-06-07~experimental\n      x-snyk-sunset-eligible: \"2021-06-08\"\n    x-snyk-api-resource: hello-world\n  /openapi:\n    get:\n      description: List available versions of OpenAPI specification\n      operationId: listAPIVersions\n      responses:\n        \"200\":\n          content:\n            application/vnd.api+json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: List of available versions is returned\n          headers:\n            snyk-request-id:\n              $ref: '#/components/headers/RequestIdResponseHeader'\n            snyk-version-requested:\n              $ref: '#/components/headers/VersionRequestedResponseHeader'\n            snyk-version-served:\n              $ref: '#/components/headers/VersionServedResponseHeader'\n        \"400\":\n          $ref: '#/components/responses/400'\n        \"401\":\n          $ref: '#/components/responses/401'\n        \"404\":\n          $ref: '#/components/responses/404'\n        \"500\":\n          $ref: '#/components/responses/500'\n  /openapi/{version}:\n    get:\n      description: Get OpenAPI specification effective at version.\n      operationId: getAPIVersion\n      parameters:\n      - description: The requested version of the API\n        in: path\n        name: version\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n            application/x-yaml:\n              schema:\n                type: object\n          description: OpenAPI specification matching requested version is returned\n          headers:\n            snyk-request-id:\n              $ref: '#/components/headers/RequestIdResponseHeader'\n            snyk-version-requested:\n              $ref: '#/components/headers/VersionRequestedResponseHeader'\n            snyk-version-served:\n              $ref: '#/components/headers/VersionServedResponseHeader'\n        \"400\":\n          $ref: '#/components/responses/400'\n        \"401\":\n          $ref: '#/components/responses/401'\n        \"404\":\n          $ref: '#/components/responses/404'\n        \"500\":\n          $ref: '#/components/responses/500'\n  /orgs/{orgId}/projects:\n    get:\n      description: Get a list of an organization's projects.\n      operationId: getOrgsProjects\n      parameters:\n      - $ref: '#/components/parameters/Version'\n      - $ref: '#/components/parameters/StartingAfter'\n      - $ref: '#/components/parameters/EndingBefore'\n      - $ref: '#/components/parameters/Limit'\n      - description: The id of the org to return a list of projects\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: string\n      - description: The options for filtering the result set\n        in: query\n        name: filters\n        schema:\n          additionalProperties: false\n          properties:\n            attributes.criticality:\n              items:\n                type: string\n              type: array\n            attributes.environment:\n              items:\n                type: string\n              type: array\n            attributes.lifecycle:\n              items:\n                type: string\n              type: array\n            name:\n              type: string\n            origin:\n              type: string\n            status:\n              enum:\n              - active\n              - inactive\n              type: string\n            tags.includes:\n              items:\n                type: string\n              type: array\n            type:\n              type: string\n          type: object\n      responses:\n        \"200\":\n          content:\n            application/vnd.api+json:\n              schema:\n                additionalProperties: false\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/Project'\n                    type: array\n                  jsonapi:\n                    $ref: '#/components/schemas/JsonApi'\n                  links:\n                    $ref: '#/components/schemas/Links'\n                required:\n                - jsonapi\n                - data\n                - links\n                type: object\n          description: A list of projects is returned for the targeted org\n          headers:\n            snyk-request-id:\n              $ref: '#/components/headers/RequestIdResponseHeader'\n            snyk-version-requested:\n              $ref: '#/components/headers/VersionRequestedResponseHeader'\n            snyk-version-served:\n              $ref: '#/components/headers/VersionServedResponseHeader'\n        \"400\":\n          $ref: '#/components/responses/400'\n        \"401\":\n          $ref: '#/components/responses/401'\n        \"404\":\n          $ref: '#/components/responses/404'\n        \"500\":\n          $ref: '#/components/responses/500'\n      tags:\n      - Projects\n      x-snyk-api-releases:\n      - 2021-06-04~experimental\n      x-snyk-api-version: 2021-06-04~experimental\n    x-snyk-api-resource: projects\nservers:\n- description: Test REST API\n  url: https://example.com/api/rest\ntags:\n- description: Projects\n  name: Projects\n- description: Something\n  name: Something\nx-snyk-api-lifecycle: sunset\nx-snyk-api-version: 2021-06-04~experimental\n"
		}
	},
	"Error": "buildIR: make ir: path \"/orgs/{orgId}/projects\": get: parameters: field \"AttributesDotCriticality\": nested arrays not allowed",
	"NotImplemented": [
		"object with additionalProperties",
		"unsupported content types"
	]
}