{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wso2/product-apim"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "modules/integration/tests-common/clients/publisher/api/openapi.yaml",
			"byteSize": 683261,
			"content": "openapi: 3.0.1\ninfo:\n  contact:\n    email: architecture@wso2.com\n    name: WSO2\n    url: http://wso2.com/products/api-manager/\n  description: |\n    This document specifies a **RESTful API** for WSO2 **API Manager** - **Publisher**.\n\n    # Authentication\n    The Publisher REST API is protected using OAuth2 and access control is achieved through scopes. Before you start invoking\n    the the API you need to obtain an access token with the required scopes. This guide will walk you through the steps\n    that you will need to follow to obtain an access token.\n    First you need to obtain the consumer key/secret key pair by calling the dynamic client registration (DCR) endpoint. You can add your preferred grant types\n    in the payload. A Sample payload is shown below.\n    ```\n      {\n      \"callbackUrl\":\"www.google.lk\",\n      \"clientName\":\"rest_api_publisher\",\n      \"owner\":\"admin\",\n      \"grantType\":\"client_credentials password refresh_token\",\n      \"saasApp\":true\n      }\n    ```\n    Create a file (payload.json) with the above sample payload, and use the cURL shown bellow to invoke the DCR endpoint. Authorization header of this should contain the\n    base64 encoded admin username and password.\n    **Format of the request**\n    ```\n      curl -X POST -H \"Authorization: Basic Base64(admin_username:admin_password)\" -H \"Content-Type: application/json\"\n      \\ -d @payload.json https://\u003chost\u003e:\u003cservlet_port\u003e/client-registration/v0.17/register\n    ```\n    **Sample request**\n    ```\n      curl -X POST -H \"Authorization: Basic YWRtaW46YWRtaW4=\" -H \"Content-Type: application/json\"\n      \\ -d @payload.json https://localhost:9443/client-registration/v0.17/register\n    ```\n    Following is a sample response after invoking the above curl.\n    ```\n    {\n    \"clientId\": \"fOCi4vNJ59PpHucC2CAYfYuADdMa\",\n    \"clientName\": \"rest_api_publisher\",\n    \"callBackURL\": \"www.google.lk\",\n    \"clientSecret\": \"a4FwHlq0iCIKVs2MPIIDnepZnYMa\",\n    \"isSaasApplication\": true,\n    \"appOwner\": \"admin\",\n    \"jsonString\": \"{\\\"grant_types\\\":\\\"client_credentials password refresh_token\\\",\\\"redirect_uris\\\":\\\"www.google.lk\\\",\\\"client_name\\\":\\\"rest_api123\\\"}\",\n    \"jsonAppAttribute\": \"{}\",\n    \"tokenType\": null\n    }\n    ```\n    Next you must use the above client id and secret to obtain the access token.\n    We will be using the password grant type for this, you can use any grant type you desire.\n    You also need to add the proper **scope** when getting the access token. All possible scopes for publisher REST API can be viewed in **OAuth2 Security** section\n    of this document and scope for each resource is given in **authorization** section of resource documentation.\n    Following is the format of the request if you are using the password grant type.\n    ```\n    curl -k -d \"grant_type=password\u0026username=\u003cadmin_username\u003e\u0026password=\u003cadmin_passowrd\u0026scope=\u003cscopes seperated by space\u003e\"\n    \\ -H \"Authorization: Basic base64(cliet_id:client_secret)\"\n    \\ https://\u003chost\u003e:\u003cservlet_port\u003e/oauth2/token\n    ```\n    **Sample request**\n    ```\n    curl https://localhost:9443/oauth2/token -k \\\n    -H \"Authorization: Basic Zk9DaTR2Tko1OVBwSHVjQzJDQVlmWXVBRGRNYTphNEZ3SGxxMGlDSUtWczJNUElJRG5lcFpuWU1h\" \\\n    -d \"grant_type=password\u0026username=admin\u0026password=admin\u0026scope=apim:api_view apim:api_create\"\n    ```\n    Shown below is a sample response to the above request.\n    ```\n    {\n    \"access_token\": \"e79bda48-3406-3178-acce-f6e4dbdcbb12\",\n    \"refresh_token\": \"a757795d-e69f-38b8-bd85-9aded677a97c\",\n    \"scope\": \"apim:api_create apim:api_view\",\n    \"token_type\": \"Bearer\",\n    \"expires_in\": 3600\n    }\n    ```\n    Now you have a valid access token, which you can use to invoke an API.\n    Navigate through the API descriptions to find the required API, obtain an access token as described above and invoke the API with the authentication header.\n    If you use a different authentication mechanism, this process may change.\n\n    # Try out in Postman\n    If you want to try-out the embedded postman collection with \"Run in Postman\" option, please follow the guidelines listed below.\n    * All of the OAuth2 secured endpoints have been configured with an Authorization Bearer header with a parameterized access token. Before invoking any REST API resource make sure you run the `Register DCR Application` and `Generate Access Token` requests to fetch an access token with all required scopes.\n    * Make sure you have an API Manager instance up and running.\n    * Update the `basepath` parameter to match the hostname and port of the APIM instance.\n\n    [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/a09044034b5c3c1b01a9)\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  title: WSO2 API Manager - Publisher API\n  version: v4\nservers:\n- url: https://apis.wso2.com/api/am/publisher/v4\nsecurity:\n- OAuth2Security:\n  - apim:api_view\npaths:\n  /apis:\n    get:\n      description: |\n        This operation provides you a list of available APIs qualifying under a given search condition.\n\n        Each retrieved API is represented with a minimal amount of attributes. If you want to get complete details of an API, you need to use **Get details of an API** operation.\n      operationId: getAllAPIs\n      parameters:\n      - description: |\n          Maximum size of resource array to return.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 25\n          type: integer\n        style: form\n      - description: |\n          Starting point within the complete list of items qualified.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      - description: |\n          Criteria for sorting.\n        explode: true\n        in: query\n        name: sortBy\n        required: false\n        schema:\n          default: createdTime\n          enum:\n          - apiName\n          - version\n          - createdTime\n          - status\n          type: string\n        style: form\n      - description: |\n          Order of sorting(ascending/descending).\n        explode: true\n        in: query\n        name: sortOrder\n        required: false\n        schema:\n          default: desc\n          enum:\n          - asc\n          - desc\n          type: string\n        style: form\n      - description: |\n          For cross-tenant invocations, this is used to specify the tenant domain, where the resource need to be\n            retirieved from.\n        explode: false\n        in: header\n        name: X-WSO2-Tenant\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          **Search condition**.\n\n          You can search in attributes by using an **\"\u003cattribute\u003e:\"** modifier.\n\n          Eg.\n          \"provider:wso2\" will match an API if the provider of the API contains \"wso2\".\n          \"provider:\"wso2\"\" will match an API if the provider of the API is exactly \"wso2\".\n          \"status:PUBLISHED\" will match an API if the API is in PUBLISHED state.\n\n          Also you can use combined modifiers\n          Eg.\n          name:pizzashack version:v1 will match an API if the name of the API is pizzashack and version is v1.\n\n          Supported attribute modifiers are [**version, context, name, status,\n          description, doc, provider**]\n\n          If no advanced attribute modifier has been specified,  the API names containing\n          the search term will be returned as a result.\n\n          Please note that you need to use encoded URL (URL encoding) if you are using a client which does not support URL encoding (such as curl)\n        explode: true\n        in: query\n        name: query\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Media types acceptable for the response. Default is application/json.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIList'\n          description: |\n            OK.\n            List of qualifying APIs is returned.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n        - apim:api_import_export\n        - apim:api_list_view\n      summary: |\n        Retrieve/Search APIs\n      tags:\n      - APIs\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis\"'\n      x-examples:\n        $ref: docs/examples/apis/apis_get.yaml\n      x-accepts: application/json\n    post:\n      description: |\n        This operation can be used to create a new API specifying the details of the API in the payload. The new API will be in `CREATED` state.\n\n        There is a special capability for a user who has `APIM Admin` permission such that he can create APIs on behalf of other users. For that he can to specify `\"provider\" : \"some_other_user\"` in the payload so that the API's creator will be shown as `some_other_user` in the UI.\n      operationId: createAPI\n      parameters:\n      - description: Open api version\n        explode: true\n        in: query\n        name: openAPIVersion\n        required: false\n        schema:\n          default: v3\n          enum:\n          - v2\n          - v3\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/API'\n        description: API object that needs to be added\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/API'\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n            Location header contains URL of newly created entity.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"415\":\n          content:\n            application/json:\n              example:\n                code: 415\n                message: Unsupported media type\n                description: The entity of the request was not in a supported format\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsupported Media Type. The entity of the request was not in\n            a supported format.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: Create a New API\n      tags:\n      - APIs\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/publisher/v4/apis\"'\n      x-examples:\n        $ref: docs/examples/apis/apis_post.yaml\n      x-contentType: application/json\n      x-accepts: application/json\n  /apis/{apiId}:\n    delete:\n      description: |\n        This operation can be used to delete an existing API proving the Id of the API.\n      operationId: deleteAPI\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Resource successfully deleted.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"409\":\n          content:\n            application/json:\n              example:\n                code: 409\n                message: Conflict\n                description: Specified resource already exists\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Conflict. Specified resource already exists.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:api_delete\n        - apim:api_manage\n        - apim:api_import_export\n      summary: Delete an API\n      tags:\n      - APIs\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/7a2298c4-c905-403f-8fac-38c73301631f\"'\n      x-accepts: application/json\n    get:\n      description: |\n        Using this operation, you can retrieve complete details of a single API. You need to provide the Id of the API to retrive it.\n      operationId: getAPI\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          For cross-tenant invocations, this is used to specify the tenant domain, where the resource need to be\n            retirieved from.\n        explode: false\n        in: header\n        name: X-WSO2-Tenant\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/API'\n          description: |\n            OK.\n            Requested API is returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n        - apim:api_import_export\n        - apim:api_product_import_export\n      summary: Get Details of an API\n      tags:\n      - APIs\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/7a2298c4-c905-403f-8fac-38c73301631f\"'\n      x-examples:\n        $ref: docs/examples/apis/apis_id_get.yaml\n      x-accepts: application/json\n    put:\n      description: |\n        This operation can be used to update an existing API.\n        But the properties `name`, `version`, `context`, `provider`, `state` will not be changed by this operation.\n      operationId: updateAPI\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/API'\n        description: API object that needs to be added\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/API'\n          description: |\n            OK.\n            Successful response with updated API object\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"409\":\n          content:\n            application/json:\n              example:\n                code: 409\n                message: Conflict\n                description: Specified resource already exists\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Conflict. Specified resource already exists.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n        - apim:api_publish\n      summary: Update an API\n      tags:\n      - APIs\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/publisher/v4/apis/7a2298c4-c905-403f-8fac-38c73301631f\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /apis/{apiId}/topics:\n    put:\n      description: This operation can be used to update topics of an existing API.\n      operationId: updateTopics\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TopicList'\n        description: API object that needs to be added\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/API'\n          description: |\n            OK.\n            Successful response with updated API object\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n        - apim:api_import_export\n      summary: Update Topics\n      tags:\n      - APIs\n      x-contentType: application/json\n      x-accepts: application/json\n  /apis/{apiId}/reimport-service:\n    put:\n      description: This operation can be used to re-import the Service used to create\n        the API\n      operationId: reimportServiceFromCatalog\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/API'\n          description: |\n            OK.\n            Successful response with updated API object\n          headers:\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: Update the Service that is used to create the API\n      tags:\n      - APIs\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/ecb5b300-422d-4ee8-88d2-364a0a122238/reimport-service\"'\n      x-accepts: application/json\n  /apis/{apiId}/swagger:\n    get:\n      description: |\n        This operation can be used to retrieve the swagger definition of an API.\n      operationId: getAPISwagger\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: |\n            OK.\n            Requested swagger document of the API is returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n        - apim:api_definition_view\n      summary: Get Swagger Definition\n      tags:\n      - APIs\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/7a2298c4-c905-403f-8fac-38c73301631f/swagger\"'\n      x-accepts: application/json\n    put:\n      description: |\n        This operation can be used to update the swagger definition of an existing API. Swagger definition to be updated is passed as a form data parameter `apiDefinition`.\n      operationId: updateAPISwagger\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                apiDefinition:\n                  description: Swagger definition of the API\n                  type: string\n                url:\n                  description: Swagger definition URL of the API\n                  type: string\n                file:\n                  description: Swagger definitio as a file\n                  format: binary\n                  type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: |\n            OK.\n            Successful response with updated Swagger definition\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: Update Swagger Definition\n      tags:\n      - APIs\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F apiDefinition=@swagger.json \"https://127.0.0.1:9443/api/am/publisher/v4/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/swagger\"'\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /apis/{apiId}/generate-mock-scripts:\n    post:\n      description: |\n        This operation can be used to generate mock responses from examples of swagger definition of an API.\n      operationId: generateMockScripts\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: |\n            OK.\n            Requested swagger document of the API is returned with example responses\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: Generate Mock Response Payloads\n      tags:\n      - APIs\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/7a2298c4-c905-403f-8fac-38c73301631f/generate-mock-scripts\"'\n      x-accepts: application/json\n  /apis/{apiId}/generated-mock-scripts:\n    get:\n      description: |\n        This operation can be used to get generated mock responses from examples of swagger definition of an API.\n      operationId: getGeneratedMockScriptsOfAPI\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MockResponsePayloadList'\n          description: |\n            OK.\n            Requested swagger document of the API is returned with example responses\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: Get Generated Mock Response Payloads\n      tags:\n      - APIs\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/7a2298c4-c905-403f-8fac-38c73301631f/generated-mock-scripts\"'\n      x-accepts: application/json\n  /apis/{apiId}/resource-policies:\n    get:\n      description: |\n        This operation can be used to retrieve conversion policy resource definitions of an API.\n      operationId: getAPIResourcePolicies\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Resource path of the resource policy definition\n        explode: true\n        in: query\n        name: resourcePath\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: HTTP verb of the resource path of the resource policy definition\n        explode: true\n        in: query\n        name: verb\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: sequence type of the resource policy resource definition\n        explode: true\n        in: query\n        name: sequenceType\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourcePolicyList'\n          description: |\n            OK.\n            List of resource policy definitions of the API is returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n      summary: Get the Resource Policy(inflow/outflow) Definitions\n      tags:\n      - API Resource Policies\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/2fd14eb8-b828-4013-b448-0739d2e76bf7/resource-policies?resourcePath=checkPhoneNumber\u0026verb=post\u0026sequenceType=in\"'\n      x-accepts: application/json\n  /apis/{apiId}/resource-policies/{resourcePolicyId}:\n    get:\n      description: |\n        This operation can be used to retrieve conversion policy resource definitions of an API given the resource identifier.\n      operationId: getAPIResourcePoliciesByPolicyId\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          registry resource Id\n        explode: false\n        in: path\n        name: resourcePolicyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourcePolicyInfo'\n          description: |\n            OK.\n            Requested resource policy definition of the API is returned for the given resource identifier.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n      summary: Get the Resource Policy(inflow/outflow) Definition for a Given Resource\n        Identifier.\n      tags:\n      - API Resource Policies\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/2fd14eb8-b828-4013-b448-0739d2e76bf7/resource-policies/8efc32a4-c7f1-4bee-b860-b7566e2bc0d5\"'\n      x-accepts: application/json\n    put:\n      description: |\n        This operation can be used to update the resource policy(inflow/outflow) definition for the given resource identifier of an existing API. resource policy definition to be updated is passed as a body parameter `content`.\n      operationId: updateAPIResourcePoliciesByPolicyId\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          registry resource Id\n        explode: false\n        in: path\n        name: resourcePolicyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourcePolicyInfo'\n        description: Content of the resource policy definition that needs to be updated\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourcePolicyInfo'\n          description: |\n            OK.\n            Successful response with updated the resource policy definition\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: Update the Resource Policy(inflow/outflow) Definition for the Given\n        Resource Identifier\n      tags:\n      - API Resource Policies\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/publisher/v4/apis/2fd14eb8-b828-4013-b448-0739d2e76bf7/resource-policies/8efc32a4-c7f1-4bee-b860-b7566e2bc0d5\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /apis/{apiId}/thumbnail:\n    get:\n      description: |\n        This operation can be used to download a thumbnail image of an API.\n      operationId: getAPIThumbnail\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Thumbnail image returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n      summary: Get Thumbnail Image\n      tags:\n      - APIs\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/2fd14eb8-b828-4013-b448-0739d2e76bf7/thumbnail\"'\n      x-accepts: application/json\n    put:\n      description: |\n        This operation can be used to upload a thumbnail image of an API. The thumbnail to be uploaded should be given as a form data parameter `file`.\n      operationId: updateAPIThumbnail\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: Image to upload\n                  format: binary\n                  type: string\n              required:\n              - file\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileInfo'\n          description: |\n            OK.\n            Image updated\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the uploaded thumbnail image of the API.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n        - apim:api_publish\n      summary: Upload a Thumbnail Image\n      tags:\n      - APIs\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F file=image.jpeg \"https://127.0.0.1:9443/api/am/publisher/v4/apis/2fd14eb8-b828-4013-b448-0739d2e76bf7/thumbnail\"'\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /apis/{apiId}/subscription-policies:\n    get:\n      description: |\n        This operation can be used to retrieve details of the subscription throttling policy of an API by specifying the API Id.\n\n        `X-WSO2-Tenant` header can be used to retrive API subscription throttling policies that belongs to a different tenant domain. If not specified super tenant will be used. If Authorization header is present in the request, the user's tenant associated with the access token will be used.\n      operationId: getAPISubscriptionPolicies\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          For cross-tenant invocations, this is used to specify the tenant domain, where the resource need to be\n            retirieved from.\n        explode: false\n        in: header\n        name: X-WSO2-Tenant\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingPolicy'\n          description: |\n            OK.\n            Throttling Policy returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n      summary: |\n        Get Details of the Subscription Throttling Policies of an API\n      tags:\n      - APIs\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/2fd14eb8-b828-4013-b448-0739d2e76bf7/subscription-policies\"'\n      x-accepts: application/json\n  /apis/copy-api:\n    post:\n      description: |\n        This operation can be used to create a new version of an existing API. The new version is specified as `newVersion` query parameter. New API will be in `CREATED` state.\n      operationId: createNewAPIVersion\n      parameters:\n      - description: Version of the new API.\n        explode: true\n        in: query\n        name: newVersion\n        required: true\n        schema:\n          maxLength: 30\n          type: string\n        style: form\n      - description: Specifies whether new API should be added as default version.\n        explode: true\n        in: query\n        name: defaultVersion\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      - description: Version of the Service that will used in creating new version\n        explode: true\n        in: query\n        name: serviceVersion\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n          The combination of the provider of the API, name of the API and the version is also accepted as a valid API I.\n          Should be formatted as **provider-name-version**.\n        explode: true\n        in: query\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/API'\n          description: |\n            Created.\n            Successful response with the newly created API as entity in the body. Location header contains URL of newly created API.\n          headers:\n            Location:\n              description: |\n                The URL of the newly created API.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: Create a New API Version\n      tags:\n      - APIs\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/copy-api?newVersion=2.0\u0026defaultVersion=false\u0026apiId=2fd14eb8-b828-4013-b448-0739d2e76bf7\"'\n      x-examples:\n        $ref: docs/examples/apis/apis_copyapi.yaml#/post\n      x-accepts: application/json\n  /apis/change-lifecycle:\n    post:\n      description: |\n        This operation is used to change the lifecycle of an API. Eg: Publish an API which is in `CREATED` state. In order to change the lifecycle, we need to provide the lifecycle `action` as a query parameter.\n\n        For example, to Publish an API, `action` should be `Publish`. Note that the `Re-publish` action is available only after calling `Block`.\n\n        Some actions supports providing additional paramters which should be provided as `lifecycleChecklist` parameter. Please see parameters table for more information.\n      operationId: changeAPILifecycle\n      parameters:\n      - description: |\n          The action to demote or promote the state of the API.\n\n          Supported actions are [ **Publish**, **Deploy as a Prototype**, **Demote to Created**, **Block**, **Deprecate**, **Re-Publish**, **Retire** ]\n        explode: true\n        in: query\n        name: action\n        required: true\n        schema:\n          enum:\n          - Publish\n          - Deploy as a Prototype\n          - Demote to Created\n          - Block\n          - Deprecate\n          - Re-Publish\n          - Retire\n          type: string\n        style: form\n      - description: |2\n\n          Supported checklist items are as follows.\n          1. **Deprecate old versions after publishing the API**: Setting this to true will deprecate older versions of a particular API when it is promoted to Published state from Created state.\n          2. **Requires re-subscription when publishing the API**: If you set this to true, users need to re subscribe to the API although they may have subscribed to an older version.\n          You can specify additional checklist items by using an **\"attribute:\"** modifier.\n          Eg: \"Deprecate old versions after publishing the API:true\" will deprecate older versions of a particular API when it is promoted to Published state from Created state. Multiple checklist items can be given in \"attribute1:true, attribute2:false\" format.\n          **Sample CURL :**  curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" -X POST \"https://localhost:9443/api/am/publisher/v4/apis/change-lifecycle?apiId=890a4f4d-09eb-4877-a323-57f6ce2ed79b\u0026action=Publish\u0026lifecycleChecklist=Deprecate%20old%20versions%20after%20publishing%20the%20API%3Atrue,Requires%20re-subscription%20when%20publishing%20the%20API%3Afalse\"\n        explode: true\n        in: query\n        name: lifecycleChecklist\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n          The combination of the provider of the API, name of the API and the version is also accepted as a valid API I.\n          Should be formatted as **provider-name-version**.\n        explode: true\n        in: query\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowResponse'\n          description: |\n            OK.\n            Lifecycle changed successfully.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the changed API. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the API lifecycle has been modified the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowResponse'\n          description: |\n            Accepted.\n            The request has been accepted.\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"409\":\n          content:\n            application/json:\n              example:\n                code: 409\n                message: Conflict\n                description: Specified resource already exists\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Conflict. Specified resource already exists.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:api_publish\n        - apim:api_manage\n        - apim:api_import_export\n      summary: Change API Status\n      tags:\n      - API Lifecycle\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/change-lifecycle?apiId=890a4f4d-09eb-4877-a323-57f6ce2ed79b\u0026action=Publish\"'\n      x-accepts: application/json\n  /apis/{apiId}/lifecycle-history:\n    get:\n      description: |\n        This operation can be used to retrieve Lifecycle state change history of the API.\n      operationId: getAPILifecycleHistory\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LifecycleHistory'\n          description: |\n            OK.\n            Lifecycle state change history returned successfully.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_publish\n        - apim:api_manage\n      summary: Get Lifecycle State Change History of the API.\n      tags:\n      - API Lifecycle\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/890a4f4d-09eb-4877-a323-57f6ce2ed79b/lifecycle-history\"'\n      x-accepts: application/json\n  /apis/{apiId}/lifecycle-state:\n    get:\n      description: |\n        This operation can be used to retrieve Lifecycle state data of the API.\n      operationId: getAPILifecycleState\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LifecycleState'\n          description: |\n            OK.\n            Lifecycle state data returned successfully.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_publish\n        - apim:api_create\n        - apim:api_manage\n      summary: Get Lifecycle State Data of the API.\n      tags:\n      - API Lifecycle\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/890a4f4d-09eb-4877-a323-57f6ce2ed79b/lifecycle-state\"'\n      x-accepts: application/json\n  /apis/{apiId}/lifecycle-state/pending-tasks:\n    delete:\n      description: |\n        This operation can be used to remove pending lifecycle state change requests that are in pending state\n      operationId: deleteAPILifecycleStatePendingTasks\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Lifecycle state change pending task removed successfully.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:api_publish\n        - apim:api_manage\n      summary: Delete Pending Lifecycle State Change Tasks\n      tags:\n      - API Lifecycle\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/890a4f4d-09eb-4877-a323-57f6ce2ed79b/lifecycle-state/pending-tasks\"'\n      x-accepts: application/json\n  /apis/{apiId}/revisions:\n    get:\n      description: |\n        List available revisions of an API\n      operationId: getAPIRevisions\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: true\n        in: query\n        name: query\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIRevisionList'\n          description: |\n            OK.\n            List of API revisions are returned.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_create\n        - apim:api_manage\n        - apim:api_publish\n        - apim:api_import_export\n      summary: List Revisions\n      tags:\n      - API Revisions\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/890a4f4d-09eb-4877-a323-57f6ce2ed79b/revisions?query=deployed:true\"'\n      x-accepts: application/json\n    post:\n      description: |\n        Create a new API revision\n      operationId: createAPIRevision\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/APIRevision'\n        description: API object that needs to be added\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIRevision'\n          description: |\n            Created.\n            Successful response with the newly created APIRevision object as the entity in the body.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n        - apim:api_publish\n        - apim:api_import_export\n      summary: Create API Revision\n      tags:\n      - API Revisions\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/publisher/v4/apis/890a4f4d-09eb-4877-a323-57f6ce2ed79b/revisions\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /apis/{apiId}/revisions/{revisionId}:\n    delete:\n      description: |\n        Delete a revision of an API\n      operationId: deleteAPIRevision\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Revision ID of an API\n        explode: false\n        in: path\n        name: revisionId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIRevisionList'\n          description: |\n            OK.\n            List of remaining API revisions are returned.\n        \"204\":\n          description: |\n            No Content.\n            Successfully deleted the revision\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n        - apim:api_publish\n        - apim:api_import_export\n      summary: Delete Revision\n      tags:\n      - API Revisions\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/890a4f4d-09eb-4877-a323-57f6ce2ed79b/revisions/e0824883-3e86-403a-aec1-22bbc454eb7c\"'\n      x-accepts: application/json\n    get:\n      description: |\n        Retrieve a revision of an API\n      operationId: getAPIRevision\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Revision ID of an API\n        explode: false\n        in: path\n        name: revisionId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIRevision'\n          description: |\n            OK.\n            An API revision is returned.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_create\n        - apim:api_manage\n        - apim:api_publish\n      summary: Retrieve Revision\n      tags:\n      - API Revisions\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/890a4f4d-09eb-4877-a323-57f6ce2ed79b/revisions/e0824883-3e86-403a-aec1-22bbc454eb7c\"'\n      x-accepts: application/json\n  /apis/{apiId}/deployments:\n    get:\n      description: |\n        List available deployed revision deployment details of an API\n      operationId: getAPIRevisionDeployments\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIRevisionDeploymentList'\n          description: |\n            OK.\n            List of deployed revision deployment details are returned.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_create\n        - apim:api_manage\n        - apim:api_publish\n      summary: List Deployments\n      tags:\n      - API Revisions\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/890a4f4d-09eb-4877-a323-57f6ce2ed79b/deployments\"'\n      x-accepts: application/json\n  /apis/{apiId}/deployments/{deploymentId}:\n    put:\n      description: |\n        Update deployment devportal visibility\n      operationId: updateAPIDeployment\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Base64 URL encoded value of the name of an environment\n        explode: false\n        in: path\n        name: deploymentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/APIRevisionDeployment'\n        description: Deployment object that needs to be updated\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIRevisionDeployment'\n          description: |\n            Created.\n            Successful response with the newly updated APIRevisionDeployment List object as the entity in the body.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n        - apim:api_publish\n      summary: Update Deployment\n      tags:\n      - API Revisions\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -d @data.json \"https://127.0.0.1:9443/api/am/publisher/v4/apis/890a4f4d-09eb-4877-a323-57f6ce2ed79b/deployments/UHJvZHVjdGlvbiBhbmQgU2FuZGJveA\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /apis/{apiId}/deploy-revision:\n    post:\n      description: |\n        Deploy a revision\n      operationId: deployAPIRevision\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Revision ID of an API\n        explode: true\n        in: query\n        name: revisionId\n        required: false\n        schema:\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/APIRevisionDeployment'\n              type: array\n        description: Deployment object that needs to be added\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/APIRevisionDeployment'\n                type: array\n          description: |\n            Created.\n            Successful response with the newly deployed APIRevisionDeployment List object as the entity in the body.\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n        - apim:api_publish\n      summary: Deploy Revision\n      tags:\n      - API Revisions\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/890a4f4d-09eb-4877-a323-57f6ce2ed79b/deploy-revision?revisionId=e0824883-3e86-403a-aec1-22bbc454eb7c\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /apis/{apiId}/undeploy-revision:\n    post:\n      description: |\n        UnDeploy a revision\n      operationId: undeployAPIRevision\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Revision ID of an API\n        explode: true\n        in: query\n        name: revisionId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Revision Number of an API\n        explode: true\n        in: query\n        name: revisionNumber\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: allEnvironments\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/APIRevisionDeployment'\n              type: array\n        description: Deployment object that needs to be added\n      responses:\n        \"200\":\n          description: |\n            OK.\n        \"201\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/APIRevisionDeployment'\n                type: array\n          description: |\n            Created.\n            Successful response with the newly undeployed APIRevisionDeploymentList object as the entity in the body.\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n        - apim:api_publish\n        - apim:api_import_export\n      summary: UnDeploy Revision\n      tags:\n      - API Revisions\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/890a4f4d-09eb-4877-a323-57f6ce2ed79b/undeploy-revision?revisionId=e0824883-3e86-403a-aec1-22bbc454eb7c\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /apis/{apiId}/restore-revision:\n    post:\n      description: |\n        Restore a revision to the current API of the API\n      operationId: restoreAPIRevision\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Revision ID of an API\n        explode: true\n        in: query\n        name: revisionId\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/API'\n          description: |\n            Restored.\n            Successful response with the newly restored API object as the entity in the body.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n        - apim:api_publish\n      summary: Restore API Revision\n      tags:\n      - API Revisions\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/890a4f4d-09eb-4877-a323-57f6ce2ed79b/restore-revision?revisionId=e0824883-3e86-403a-aec1-22bbc454eb7c\"'\n      x-accepts: application/json\n  /apis/import-service:\n    post:\n      description: This operation can be used to create an API from a Service from\n        Service Catalog\n      operationId: importServiceFromCatalog\n      parameters:\n      - description: ID of service that should be imported from Service Catalog\n        example: Pizzashack-1.0.0\n        explode: true\n        in: query\n        name: serviceKey\n        required: true\n        schema:\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/API'\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/API'\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n            Location header contains the URL of the newly created entity.\n          headers:\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: Import a Service from Service Catalog\n      tags:\n      - APIs\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/publisher/v4/apis/import-service?serviceKey=Pizzashack-1.0.0\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /apis/{apiId}/comments:\n    get:\n      description: |\n        Get a list of Comments that are already added to APIs\n      operationId: getAllCommentsOfAPI\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          For cross-tenant invocations, this is used to specify the tenant domain, where the resource need to be\n            retirieved from.\n        explode: false\n        in: header\n        name: X-WSO2-Tenant\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Maximum size of resource array to return.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 25\n          type: integer\n        style: form\n      - description: |\n          Starting point within the complete list of items qualified.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      - description: |\n          Whether we need to display commentor details.\n        explode: true\n        in: query\n        name: includeCommenterInfo\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommentList'\n          description: |\n            OK.\n            Comments list is returned.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:comment_view\n        - apim:comment_manage\n      summary: Retrieve API Comments\n      tags:\n      - Comments\n      x-code-samples:\n      - lang: Curl\n        source: curl -k \"https://localhost:9443/api/am/publisher/v1/apis/e93fb282-b456-48fc-8981-003fb89086ae/comments\"\n      x-accepts: application/json\n    post:\n      operationId: addCommentToAPI\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          ID of the perent comment.\n        explode: true\n        in: query\n        name: replyTo\n        required: false\n        schema:\n          type: string\n        style: form\n      requestBody:\n        $ref: '#/components/requestBodies/Post_request_body'\n        content:\n          application/json:\n            schema:\n              properties:\n                content:\n                  description: |\n                    Content of the comment\n                  example: This is a comment\n                  maxLength: 512\n                  type: string\n                category:\n                  description: |\n                    Category of the comment\n                  example: general\n                  type: string\n              required:\n              - content\n              title: Post request body\n              type: object\n        description: |\n          Comment object that should to be added\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Comment'\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n            Location header contains URL of newly created entity.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional request.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                Location to the newly created Comment.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"401\":\n          content:\n            application/json:\n              example:\n                code: 401\n                message: Unauthorized\n                description: The user is not authorized\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized. The user is not authorized.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"415\":\n          content:\n            application/json:\n              example:\n                code: 415\n                message: Unsupported media type\n                description: The entity of the request was not in a supported format\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsupported Media Type. The entity of the request was not in\n            a supported format.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:comment_write\n        - apim:comment_manage\n      summary: Add an API Comment\n      tags:\n      - Comments\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization:Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://localhost:9443/api/am/publisher/v1/apis/e93fb282-b456-48fc-8981-003fb89086ae/comments\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /apis/{apiId}/comments/{commentId}:\n    delete:\n      description: |\n        Remove a Comment\n      operationId: deleteComment\n      parameters:\n      - description: |\n          Comment Id\n        explode: false\n        in: path\n        name: commentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Resource successfully deleted.\n        \"401\":\n          content:\n            application/json:\n              example:\n                code: 401\n                message: Unauthorized\n                description: The user is not authorized\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized. The user is not authorized.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"405\":\n          content: {}\n          description: |\n            MethodNotAllowed.\n            Request method is known by the server but is not supported by the target resource.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:comment_write\n        - apim:comment_manage\n        - apim:admin\n      summary: Delete an API Comment\n      tags:\n      - Comments\n      x-code-samples:\n      - lang: Curl\n        source: curl -k -X DELETE -H \"Authorization:Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://localhost:9443/api/am/publisher/v1/apis/e93fb282-b456-48fc-8981-003fb89086ae/comments/d4cf1704-5d09-491c-bc48-4d19ce6ea9b4\"\n      x-accepts: application/json\n    get:\n      description: |\n        Get the individual comment given by a username for a certain API.\n      operationId: getCommentOfAPI\n      parameters:\n      - description: |\n          Comment Id\n        explode: false\n        in: path\n        name: commentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          For cross-tenant invocations, this is used to specify the tenant domain, where the resource need to be\n            retirieved from.\n        explode: false\n        in: header\n        name: X-WSO2-Tenant\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Whether we need to display commentor details.\n        explode: true\n        in: query\n        name: includeCommenterInfo\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      - description: |\n          Maximum size of replies array to return.\n        explode: true\n        in: query\n        name: replyLimit\n        required: false\n        schema:\n          default: 25\n          type: integer\n        style: form\n      - description: |\n          Starting point within the complete list of replies.\n        explode: true\n        in: query\n        name: replyOffset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Comment'\n          description: |\n            OK.\n            Comment returned.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"401\":\n          content:\n            application/json:\n              example:\n                code: 401\n                message: Unauthorized\n                description: The user is not authorized\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized. The user is not authorized.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:comment_view\n        - apim:comment_manage\n      summary: Get Details of an API Comment\n      tags:\n      - Comments\n      x-code-samples:\n      - lang: Curl\n        source: curl -k \"https://localhost:9443/api/am/publisher/v1/apis/e93fb282-b456-48fc-8981-003fb89086ae/comments/d4cf1704-5d09-491c-bc48-4d19ce6ea9b4\"\n      x-accepts: application/json\n    patch:\n      description: |\n        Edit the individual comment\n      operationId: editCommentOfAPI\n      parameters:\n      - description: |\n          Comment Id\n        explode: false\n        in: path\n        name: commentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        $ref: '#/components/requestBodies/Patch_request_body'\n        content:\n          application/json:\n            schema:\n              properties:\n                content:\n                  description: |\n                    Content of the comment\n                  example: This is a comment\n                  maxLength: 512\n                  type: string\n                category:\n                  description: |\n                    Category of the comment\n                  example: general\n                  type: string\n              title: Patch request body\n              type: object\n        description: |\n          Comment object that should to be updated\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Comment'\n          description: |\n            OK.\n            Comment updated.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional request.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                Location to the newly created Comment.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"401\":\n          content:\n            application/json:\n              example:\n                code: 401\n                message: Unauthorized\n                description: The user is not authorized\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized. The user is not authorized.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"415\":\n          content:\n            application/json:\n              example:\n                code: 415\n                message: Unsupported media type\n                description: The entity of the request was not in a supported format\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsupported Media Type. The entity of the request was not in\n            a supported format.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:comment_write\n        - apim:comment_manage\n      summary: Edit a comment\n      tags:\n      - Comments\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X PATCH -H \"Authorization:Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://localhost:9443/api/am/publisher/v1/apis/e93fb282-b456-48fc-8981-003fb89086ae/comments/d4cf1704-5d09-491c-bc48-4d19ce6ea9b4\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /apis/{apiId}/comments/{commentId}/replies:\n    get:\n      description: |\n        Get replies of a comment\n      operationId: getRepliesOfComment\n      parameters:\n      - description: |\n          Comment Id\n        explode: false\n        in: path\n        name: commentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          For cross-tenant invocations, this is used to specify the tenant domain, where the resource need to be\n            retirieved from.\n        explode: false\n        in: header\n        name: X-WSO2-Tenant\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Maximum size of resource array to return.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 25\n          type: integer\n        style: form\n      - description: |\n          Starting point within the complete list of items qualified.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Whether we need to display commentor details.\n        explode: true\n        in: query\n        name: includeCommenterInfo\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommentList'\n          description: |\n            OK.\n            Comment returned.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"401\":\n          content:\n            application/json:\n              example:\n                code: 401\n                message: Unauthorized\n                description: The user is not authorized\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized. The user is not authorized.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:comment_view\n        - apim:comment_manage\n      summary: Get replies of a comment\n      tags:\n      - Comments\n      x-code-samples:\n      - lang: Curl\n        source: curl -k \"https://localhost:9443/api/am/publisher/v1/apis/e93fb282-b456-48fc-8981-003fb89086ae/comments/d4cf1704-5d09-491c-bc48-4d19ce6ea9b4/replies\"\n      x-accepts: application/json\n  /apis/import-openapi:\n    post:\n      description: |\n        This operation can be used to create an API from an OpenAPI definition. Provide either `url` or `file`\n        to specify the definition.\n\n        Specify additionalProperties with **at least** API's name, version, context and endpointConfig.\n      operationId: importOpenAPIDefinition\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: Definition to upload as a file\n                  format: binary\n                  type: string\n                url:\n                  description: Definition url\n                  type: string\n                additionalProperties:\n                  description: Additional attributes specified as a stringified JSON\n                    with API's schema\n                  type: string\n                inlineAPIDefinition:\n                  description: Inline content of the OpenAPI definition\n                  type: string\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/API'\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n            Location header contains URL of newly created entity.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"415\":\n          content:\n            application/json:\n              example:\n                code: 415\n                message: Unsupported media type\n                description: The entity of the request was not in a supported format\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsupported Media Type. The entity of the request was not in\n            a supported format.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: Import an OpenAPI Definition\n      tags:\n      - APIs\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F file=@openapi.json -F additionalProperties=@data.json \"https://127.0.0.1:9443/api/am/publisher/v4/apis/import-openapi\"'\n      x-examples:\n        $ref: docs/examples/apis/import_openapi_post.yaml\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /apis/import-wsdl:\n    post:\n      description: |\n        This operation can be used to create an API using a WSDL definition. Provide either `url` or `file`\n        to specify the definition.\n\n        WSDL can be speficied as a single file or a ZIP archive with WSDLs and reference XSDs etc.\n        Specify additionalProperties with **at least** API's name, version, context and endpointConfig.\n      operationId: importWSDLDefinition\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: |\n                    WSDL definition as a file or archive\n\n                    **Sample cURL to Upload WSDL File**\n\n                    curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" -F file=@api.wsdl -F additionalProperties=@data.json \"https://127.0.0.1:9443/api/am/publisher/v4/apis/import-wsdl\"\n\n                    **Sample cURL to Upload WSDL Archive**\n\n                    curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" -F file=\"@wsdl.zip;type=application/zip\" -F additionalProperties=@data.json \"https://127.0.0.1:9443/api/am/publisher/v4/apis/import-wsdl\"\n                  format: binary\n                  type: string\n                url:\n                  description: WSDL Definition url\n                  type: string\n                additionalProperties:\n                  description: Additional attributes specified as a stringified JSON\n                    with API's schema\n                  type: string\n                implementationType:\n                  default: SOAP\n                  description: |\n                    If 'SOAP' is specified, the API will be created with only one resource 'POST /*' which is to be used for SOAP\n                    operations.\n\n                    If 'HTTP_BINDING' is specified, the API will be created with resources using HTTP binding operations\n                    which are extracted from the WSDL.\n                  enum:\n                  - SOAPTOREST\n                  - SOAP\n                  type: string\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/API'\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n            Location header contains URL of newly created entity.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"415\":\n          content:\n            application/json:\n              example:\n                code: 415\n                message: Unsupported media type\n                description: The entity of the request was not in a supported format\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsupported Media Type. The entity of the request was not in\n            a supported format.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: Import a WSDL Definition\n      tags:\n      - APIs\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F file=@api.wsdl -F additionalProperties=@data.json \"https://127.0.0.1:9443/api/am/publisher/v4/apis/import-wsdl\"'\n      x-examples:\n        $ref: docs/examples/apis/wsdl/import_wsdl_post.yaml\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /apis/import-graphql-schema:\n    post:\n      description: |\n        This operation can be used to create api from api definition.APIMgtDAOTest\n\n        API definition is GraphQL Schema\n      operationId: importGraphQLSchema\n      parameters:\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                type:\n                  description: Definition type to upload\n                  type: string\n                file:\n                  description: Definition to uploads a file\n                  format: binary\n                  type: string\n                additionalProperties:\n                  description: Additional attributes specified as a stringified JSON\n                    with API's schema\n                  type: string\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/API'\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n            Location header contains URL of newly created entity.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"415\":\n          content:\n            application/json:\n              example:\n                code: 415\n                message: Unsupported media type\n                description: The entity of the request was not in a supported format\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsupported Media Type. The entity of the request was not in\n            a supported format.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: Import a GraphQL SDL\n      tags:\n      - APIs\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F file=@schema.graphql -F additionalProperties=@data.json \"https://127.0.0.1:9443/api/am/publisher/v4/apis/import-graphql-schema\"'\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /apis/validate-openapi:\n    post:\n      description: |\n        This operation can be used to validate an OpenAPI definition and retrieve a summary. Provide either `url`\n        or `file` to specify the definition.\n      operationId: validateOpenAPIDefinition\n      parameters:\n      - description: |\n          Specify whether to return the full content of the OpenAPI definition in the response. This is only\n          applicable when using url based validation\n        explode: true\n        in: query\n        name: returnContent\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                url:\n                  description: OpenAPI definition url\n                  type: string\n                file:\n                  description: OpenAPI definition as a file\n                  format: binary\n                  type: string\n                inlineAPIDefinition:\n                  description: Inline content of the OpenAPI definition\n                  type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OpenAPIDefinitionValidationResponse'\n          description: |\n            OK.\n            API definition validation information is returned\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: Validate an OpenAPI Definition\n      tags:\n      - Validation\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F file=@openapi.json \"https://127.0.0.1:9443/api/am/publisher/v4/apis/validate-openapi\"'\n      x-examples:\n        $ref: docs/examples/apis/validate_openapi_post.yaml\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /apis/validate-endpoint:\n    post:\n      description: |\n        Using this operation, it is possible check whether the given API endpoint url is a valid url\n      operationId: validateEndpoint\n      parameters:\n      - description: API endpoint url\n        explode: true\n        in: query\n        name: endpointUrl\n        required: true\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: apiId\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiEndpointValidationResponse'\n          description: |\n            OK.\n            API definition validation information is returned\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: Check Whether Given Endpoint URL is Valid\n      tags:\n      - Validation\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/validate-endpoint?apiId=e0824883-3e86-403a-aec1-22bbc454eb7c\u0026endpointUrl=https%3A%2F%2Flocalhost%3A9443%2Fam%2Fsample%2Fpizzashack%2Fv1%2Fapi%2F\"'\n      x-accepts: application/json\n  /apis/validate:\n    post:\n      description: |\n        Using this operation, you can check a given API context is already used. You need to provide the context name you want to check.\n      operationId: validateAPI\n      parameters:\n      - description: |\n          **Search condition**.\n\n          You can search in attributes by using an **\"\u003cattribute\u003e:\"** modifier.\n\n          Eg.\n          \"name:wso2\" will match an API if the provider of the API is exactly \"wso2\".\n\n          Supported attribute modifiers are [** version, context, name **]\n\n          If no advanced attribute modifier has been specified, search will match the\n          given query string against API Name.\n        explode: true\n        in: query\n        name: query\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            API definition validation information is returned\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: Check Given API Context Name already Exists\n      tags:\n      - Validation\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/validate?query=name%3Awso2\"'\n      x-examples:\n        $ref: docs/examples/apis/apis_validate.yaml\n      x-accepts: application/json\n  /apis/validate-wsdl:\n    post:\n      description: |\n        This operation can be used to validate a WSDL definition and retrieve a summary. Provide either `url`\n        or `file` to specify the definition.\n      operationId: validateWSDLDefinition\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                url:\n                  description: Definition url\n                  type: string\n                file:\n                  description: Definition to upload as a file\n                  format: binary\n                  type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WSDLValidationResponse'\n          description: |\n            OK.\n            API definition validation information is returned\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: Validate a WSDL Definition\n      tags:\n      - Validation\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F file=@api.wsdl \"https://127.0.0.1:9443/api/am/publisher/v4/apis/validate-wsdl\"'\n      x-examples:\n        $ref: docs/examples/apis/wsdl/validate_wsdl_post.yaml\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /apis/validate-graphql-schema:\n    post:\n      description: |\n        This operation can be used to validate a graphQL definition and retrieve a summary.\n      operationId: validateGraphQLSchema\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: Definition to upload as a file\n                  format: binary\n                  type: string\n              required:\n              - file\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GraphQLValidationResponse'\n          description: |\n            OK.\n            API definition validation information is returned\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: Validate a GraphQL SDL\n      tags:\n      - Validation\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F file=@schema.graphql \"https://127.0.0.1:9443/api/am/publisher/v4/apis/validate-graphql-schema\"'\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /apis/{apiId}/graphql-schema:\n    get:\n      description: |\n        This operation can be used to retrieve the Schema definition of a GraphQL API.\n      operationId: getAPIGraphQLSchema\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Media types acceptable for the response. Default is application/json.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GraphQLSchema'\n          description: |\n            OK.\n            Requested GraphQL Schema DTO object belongs to the API\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n      summary: Get the Schema of a GraphQL API\n      tags:\n      - GraphQL Schema (Individual)\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/e0824883-3e86-403a-aec1-22bbc454eb7c/graphql-schema\"'\n      x-accepts: application/json\n    put:\n      description: |\n        This operation can be used to add a GraphQL Schema definition to an existing GraphQL API.\n      operationId: updateAPIGraphQLSchema\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                schemaDefinition:\n                  description: schema definition of the GraphQL API\n                  type: string\n              required:\n              - schemaDefinition\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Successful response with updated schema definition\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by cache, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: Add a Schema to a GraphQL API\n      tags:\n      - GraphQL Schema\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F schemaDefinition=@schema.graphql \"https://127.0.0.1:9443/api/am/publisher/v4/apis/e0824883-3e86-403a-aec1-22bbc454eb7c/graphql-schema\"'\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /apis/{apiId}/amznResourceNames:\n    get:\n      description: |\n        This operation can be use to retrieve ARNs of AWS Lambda function for a given AWS credentials.\n      operationId: getAmazonResourceNamesOfAPI\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                example: |-\n                  {\n                     \"count\": \"2\",\n                     \"list\": [\n                        \"arn:aws:lambda:us-west-2:123456789012:function:my-function1\",\n                        \"arn:aws:lambda:us-west-2:123456789012:function:my-function2\"\n                     ]\n                  }\n                type: string\n          description: |\n            OK.\n            Requested ARN List of the API is returned\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n      summary: Retrieve the ARNs of AWS Lambda Functions\n      tags:\n      - AWS Lambda (Individual)\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/e0824883-3e86-403a-aec1-22bbc454eb7c/amznResourceNames\"'\n      x-examples:\n        $ref: docs/examples/apis/apis_id_amznresourcenames_get.yaml\n      x-accepts: application/json\n  /apis/{apiId}/monetize:\n    post:\n      description: |\n        This operation can be used to configure monetization for a given API.\n      operationId: addAPIMonetization\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/APIMonetizationInfo'\n        description: Monetization data object\n        required: true\n      responses:\n        \"201\":\n          content: {}\n          description: |\n            OK.\n            Monetization status changed successfully.\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_publish\n        - apim:api_manage\n      summary: Configure Monetization for a Given API\n      tags:\n      - API Monetization\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json https://127.0.0.1:9443/api/am/publisher/v4/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/monetize'\n      x-contentType: application/json\n      x-accepts: application/json\n  /apis/{apiId}/monetization:\n    get:\n      description: |\n        This operation can be used to get monetization status for each tier in a given API\n      operationId: getAPIMonetization\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Monetization status for each tier returned successfully.\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_publish\n        - apim:api_manage\n      summary: Get Monetization Status for each Tier in a Given API\n      tags:\n      - API Monetization\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/monetize\"'\n      x-accepts: application/json\n  /apis/{apiId}/revenue:\n    get:\n      description: |\n        This operation can be used to get details of total revenue details of a given monetized API with meterd billing.\n      operationId: getAPIRevenue\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIRevenue'\n          description: |\n            OK.\n            Details of a total revenue returned.\n          headers:\n            ETag:\n              description: Entity Tag of the response resource. Used by caches, or\n                in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: Date and time the resource has been modified the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_publish\n        - apim:api_manage\n      summary: Get Total Revenue Details of a Given Monetized API with Meterd Billing\n      tags:\n      - API Monetization\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/revenue\"'\n      x-accepts: application/json\n  /apis/{apiId}/documents:\n    get:\n      description: |\n        This operation can be used to retrieve a list of documents belonging to an API by providing the id of the API.\n      operationId: getAPIDocuments\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Maximum size of resource array to return.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 25\n          type: integer\n        style: form\n      - description: |\n          Starting point within the complete list of items qualified.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentList'\n          description: |\n            OK.\n            Document list is returned.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n        - apim:document_manage\n      summary: Get a List of Documents of an API\n      tags:\n      - API Documents\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/e0824883-3e86-403a-aec1-22bbc454eb7c/documents\"'\n      x-accepts: application/json\n    post:\n      description: |\n        This operation can be used to add a new documentation to an API. This operation only adds the metadata of a document. To add the actual content we need to use **Upload the content of an API document ** API once we obtain a document Id by this operation.\n      operationId: addAPIDocument\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Document'\n        description: Document object that needs to be added\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n          description: |\n            Created.\n            Successful response with the newly created Document object as entity in the body.\n            Location header contains URL of newly added document.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                Location to the newly created Document.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"415\":\n          content:\n            application/json:\n              example:\n                code: 415\n                message: Unsupported media type\n                description: The entity of the request was not in a supported format\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsupported Media Type. The entity of the request was not in\n            a supported format.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n        - apim:document_create\n        - apim:document_manage\n      summary: Add a New Document to an API\n      tags:\n      - API Documents\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/publisher/v4/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/documents\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /apis/{apiId}/documents/{documentId}:\n    delete:\n      description: |\n        This operation can be used to delete a document associated with an API.\n      operationId: deleteAPIDocument\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Document Identifier\n        explode: false\n        in: path\n        name: documentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Resource successfully deleted.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n        - apim:document_manage\n      summary: Delete a Document of an API\n      tags:\n      - API Documents\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/documents/0bcb7f05-599d-4e1a-adce-5cb89bfe58d5\"'\n      x-accepts: application/json\n    get:\n      description: |\n        This operation can be used to retrieve a particular document's metadata associated with an API.\n      operationId: getAPIDocumentByDocumentId\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Document Identifier\n        explode: false\n        in: path\n        name: documentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n          description: |\n            OK.\n            Document returned.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n        - apim:document_manage\n      summary: Get a Document of an API\n      tags:\n      - API Documents\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/documents/0bcb7f05-599d-4e1a-adce-5cb89bfe58d5\"'\n      x-accepts: application/json\n    put:\n      description: |\n        This operation can be used to update metadata of an API's document.\n      operationId: updateAPIDocument\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Document Identifier\n        explode: false\n        in: path\n        name: documentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Document'\n        description: Document object that needs to be added\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n          description: |\n            OK.\n            Document updated\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the updated document.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n        - apim:document_manage\n      summary: Update a Document of an API\n      tags:\n      - API Documents\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @doc.json \"https://127.0.0.1:9443/api/am/publisher/v4/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/documents/0bcb7f05-599d-4e1a-adce-5cb89bfe58d5\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /apis/{apiId}/documents/{documentId}/content:\n    get:\n      description: |\n        This operation can be used to retrive the content of an API's document.\n\n        The document can be of 3 types. In each cases responses are different.\n\n        1. **Inline type**:\n           The content of the document will be retrieved in `text/plain` content type\n\n           _Sample cURL_ : `curl -k -H \"Authorization:Bearer 579f0af4-37be-35c7-81a4-f1f1e9ee7c51\" -F inlineContent=@\"docs.txt\" -X POST \"https://localhost:9443/api/am/publisher/v4/apis/995a4972-3178-4b17-a374-756e0e19127c/documents/43c2bcce-60e7-405f-bc36-e39c0c5e189e/content`\n        2. **FILE type**:\n           The file will be downloaded with the related content type (eg. `application/pdf`)\n        3. **URL type**:\n            The client will recieve the URL of the document as the Location header with the response with - `303 See Other`\n      operationId: getAPIDocumentContentByDocumentId\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Document Identifier\n        explode: false\n        in: path\n        name: documentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n          description: |\n            OK.\n            File or inline content returned.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"303\":\n          content: {}\n          description: |\n            See Other.\n            Source can be retrived from the URL specified at the Location header.\n          headers:\n            Location:\n              description: |\n                The Source URL of the document.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n        - apim:document_manage\n      summary: Get the Content of an API Document\n      tags:\n      - API Documents\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/documents/0bcb7f05-599d-4e1a-adce-5cb89bfe58d5/content\"'\n      x-accepts: application/json\n    post:\n      description: |\n        Thid operation can be used to upload a file or add inline content to an API document.\n\n        **IMPORTANT:**\n        * Either **file** or **inlineContent** form data parameters should be specified at one time.\n        * Document's source type should be **FILE** in order to upload a file to the document using **file** parameter.\n        * Document's source type should be **INLINE** in order to add inline content to the document using **inlineContent** parameter.\n      operationId: addAPIDocumentContent\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Document Identifier\n        explode: false\n        in: path\n        name: documentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: Document to upload\n                  format: binary\n                  type: string\n                inlineContent:\n                  description: Inline content of the document\n                  type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n          description: |\n            OK.\n            Document updated\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the updated content of the document.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n        - apim:document_create\n        - apim:document_manage\n      summary: Upload the Content of an API Document\n      tags:\n      - API Documents\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F file=@sample.pdf \"https://127.0.0.1:9443/api/am/publisher/v4/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/documents/0bcb7f05-599d-4e1a-adce-5cb89bfe58d5/content\"'\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /apis/{apiId}/documents/validate:\n    post:\n      description: |\n        This operation can be used to verify the document name exists or not.\n      operationId: validateDocument\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          The name of the document which needs to be checked for the existance.\n        explode: true\n        in: query\n        name: name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          description: |\n            OK.\n            Successful response if the document name exists.\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          description: |\n            Not Found.\n            The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n        - apim:document_manage\n        - apim:document_create\n      summary: Check Whether a Document with the Provided Name Exist\n      tags:\n      - API Documents\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/documents/validate?name=CalculatorDoc\"'\n      x-examples:\n        $ref: docs/examples/apis/apis_id_document_validate.yaml\n      x-accepts: application/json\n  /apis/{apiId}/wsdl-info:\n    get:\n      description: |\n        This operation can be used to retrieve the WSDL meta information of an API. It states whether the API is a SOAP\n        API. If the API is a SOAP API, it states whether it has a single WSDL or a WSDL archive.\n      operationId: getWSDLInfoOfAPI\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WSDLInfo'\n          description: |\n            OK.\n            Requested WSDL meta information of the API is returned\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n      summary: Get WSDL Meta Information\n      tags:\n      - APIs\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/wsdl-info\"'\n      x-examples:\n        $ref: docs/examples/apis/wsdl/apiId_wsdl_info_get.yaml\n      x-accepts: application/json\n  /apis/{apiId}/wsdl:\n    get:\n      description: |\n        This operation can be used to retrieve the WSDL definition of an API. It can be either a single WSDL file or a WSDL archive.\n\n        The type of the WSDL of the API is indicated at the \"wsdlInfo\" element of the API payload definition.\n      operationId: getWSDLOfAPI\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Requested WSDL document of the API is returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n      summary: Get WSDL definition\n      tags:\n      - APIs\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/wsdl\"'\n      x-examples:\n        $ref: docs/examples/apis/wsdl/apiId_wsdl_get.yaml\n      x-accepts: application/json\n    put:\n      description: |\n        This operation can be used to update the WSDL definition of an existing API. WSDL to be updated can be passed as either \"url\" or \"file\".\n        Only one of \"url\" or \"file\" can be used at the same time. \"file\" can be specified as a single WSDL file or as a zip file which has a WSDL\n        and its dependencies (eg: XSDs)\n      operationId: updateWSDLOfAPI\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: WSDL file or archive to upload\n                  format: binary\n                  type: string\n                url:\n                  description: WSDL Definition url\n                  type: string\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Successful response with updated WSDL definition\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: Update WSDL Definition\n      tags:\n      - APIs\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F file=@api.wsdl \"https://127.0.0.1:9443/api/am/publisher/v4/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/wsdl\"'\n      x-examples:\n        $ref: docs/examples/apis/wsdl/apiId_wsdl_put.yaml\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /apis/{apiId}/graphql-policies/complexity:\n    get:\n      description: |\n        This operation can be used to retrieve complexity related details belonging to an API by providing the API id.\n      operationId: getGraphQLPolicyComplexityOfAPI\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GraphQLQueryComplexityInfo'\n          description: |\n            OK.\n            Requested complexity details returned.\n          headers:\n            Content-Type:\n              description: |\n                The content of the body.\n              explode: false\n              schema:\n                default: application/json\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_create\n        - apim:api_manage\n        - apim:api_publish\n      summary: Get the Complexity Related Details of an API\n      tags:\n      - GraphQL Policies\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/graphql-policies/complexity\"'\n      x-accepts: application/json\n    put:\n      description: |\n        This operation can be used to update complexity details belonging to an API by providing the id of the API.\n      operationId: updateGraphQLPolicyComplexityOfAPI\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GraphQLQueryComplexityInfo'\n        description: Role-depth mapping that needs to be added\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            Created.\n            Complexity details created successfully.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: Update Complexity Related Details of an API\n      tags:\n      - GraphQL Policies\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/publisher/v4/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/graphql-policies/complexity\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /apis/{apiId}/graphql-policies/complexity/types:\n    get:\n      description: |\n        This operation can be used to retrieve all types and fields of the GraphQL Schema by providing the API id.\n      operationId: getGraphQLPolicyComplexityTypesOfAPI\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GraphQLSchemaTypeList'\n          description: |\n            OK.\n            Types and fields returned successfully.\n          headers:\n            Content-Type:\n              description: |\n                The content of the body.\n              explode: false\n              schema:\n                default: application/json\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_create\n        - apim:api_manage\n        - apim:api_publish\n      summary: Retrieve Types and Fields of a GraphQL Schema\n      tags:\n      - GraphQL Policies\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/graphql-policies/complexity/types\"'\n      x-accepts: application/json\n  /apis/{apiId}/resource-paths:\n    get:\n      description: |\n        This operation can be used to retrieve resource paths defined for a specific api.\n      operationId: getAPIResourcePaths\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Maximum size of resource array to return.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 25\n          type: integer\n        style: form\n      - description: |\n          Starting point within the complete list of items qualified.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourcePathList'\n          description: |\n            OK.\n            ResourcePaths returned.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modified the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n      summary: Get Resource Paths of an API\n      tags:\n      - APIs\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/resource-paths\"'\n      x-accepts: application/json\n  /apis/{apiId}/auditapi:\n    get:\n      description: |\n        Retrieve the Security Audit Report of the Audit API\n      operationId: getAuditReportOfAPI\n      parameters:\n      - description: |\n          Media types acceptable for the response. Default is application/json.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuditReport'\n          description: |\n            OK.\n            The Security Audit Report has been returned.\n          headers:\n            Content-Type:\n              description: |\n                The content of the body.\n              explode: false\n              schema:\n                default: application/json\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n      summary: Retrieve the Security Audit Report of the Audit API\n      tags:\n      - API Audit\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/auditapi\"'\n      x-examples:\n        $ref: docs/examples/apis/apis_id_auditapi_get.yaml\n      x-accepts: application/json\n  /apis/{apiId}/external-stores:\n    get:\n      description: |\n        This operation can be used to retrieve a list of external stores which an API is published to by providing the id of the API.\n      operationId: getAllPublishedExternalStoresByAPI\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIExternalStoreList'\n          description: |\n            OK.\n            External Store list is returned.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n      summary: Get the List of External Stores to which an API is Published\n      tags:\n      - External Stores\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/external-stores\"'\n      x-examples:\n        $ref: docs/examples/external-stores/external_stores.yaml#/getPublishedExternalStoresByAPI\n      x-accepts: application/json\n  /apis/{apiId}/publish-to-external-stores:\n    post:\n      description: |\n        This operation can be used to publish an API to a list of external stores.\n      operationId: publishAPIToExternalStores\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: External Store Ids of stores which the API needs to be published\n          or updated.\n        explode: true\n        in: query\n        name: externalStoreIds\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIExternalStoreList'\n          description: |\n            OK.\n            API was successfully published to all the selected external stores.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the blocked subscription.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the subscription has been blocked.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_publish\n        - apim:api_manage\n      summary: Publish an API to External Stores\n      tags:\n      - External Stores\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/publish-to-external-stores?externalStoreId=Store123#\"'\n      x-examples:\n        $ref: docs/examples/external-stores/external_stores.yaml#/publishToExternalStore\n      x-accepts: application/json\n  /apis/{apiId}/generate-key:\n    post:\n      description: |\n        This operation can be used to generate internal api key which used to invoke API.\n      operationId: generateInternalAPIKey\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIKey'\n          description: |\n            OK.\n            apikey generated.\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_generate_key\n        - apim:api_manage\n      summary: Generate internal API Key to invoke APIS.\n      tags:\n      - APIs\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/7a2298c4-c905-403f-8fac-38c73301631f/generate-key\"'\n      x-accepts: application/json\n  /apis/export:\n    get:\n      description: |\n        This operation can be used to export the details of a particular API as a zip file.\n      operationId: exportAPI\n      parameters:\n      - description: UUID of the API\n        explode: true\n        in: query\n        name: apiId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          API Name\n        explode: true\n        in: query\n        name: name\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Version of the API\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Revision number of the API artifact\n        explode: true\n        in: query\n        name: revisionNumber\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Provider name of the API\n        explode: true\n        in: query\n        name: providerName\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Format of output documents. Can be YAML or JSON.\n        explode: true\n        in: query\n        name: format\n        required: false\n        schema:\n          enum:\n          - JSON\n          - YAML\n          type: string\n        style: form\n      - description: |\n          Preserve API Status on export\n        explode: true\n        in: query\n        name: preserveStatus\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: |\n          Export the latest revision of the API\n        explode: true\n        in: query\n        name: latestRevision\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/zip:\n              schema:\n                format: binary\n                type: string\n          description: |\n            OK.\n            Export Successful.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_publish\n        - apim:api_create\n        - apim:api_import_export\n        - apim:api_manage\n      summary: Export an API\n      tags:\n      - Import Export\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/export?apiId=96077508-fd01-4fae-bc64-5de0e2baf43c\u0026name=PizzaShackAPI\u0026version=1.0\u0026provider=admin\u0026format=YAML\"\n          \u003e exportAPI.zip'\n      x-accepts: application/json\n  /apis/import:\n    post:\n      description: |\n        This operation can be used to import an API.\n      operationId: importAPI\n      parameters:\n      - description: |\n          Preserve Original Provider of the API. This is the user choice to keep or replace the API provider\n        explode: true\n        in: query\n        name: preserveProvider\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: |\n          Once the revision max limit reached, undeploy and delete the earliest revision and create a new revision\n        explode: true\n        in: query\n        name: rotateRevision\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: |\n          Whether to update the API or not. This is used when updating already existing APIs\n        explode: true\n        in: query\n        name: overwrite\n        required: false\n        schema:\n          type: boolean\n        style: form\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: Zip archive consisting on exported api configuration\n                  format: binary\n                  type: string\n              required:\n              - file\n      responses:\n        \"200\":\n          description: |\n            Created.\n            API Imported Successfully.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"409\":\n          content:\n            application/json:\n              example:\n                code: 409\n                message: Conflict\n                description: Specified resource already exists\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Conflict. Specified resource already exists.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_import_export\n        - apim:admin\n      summary: Import an API\n      tags:\n      - Import Export\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F file=@admin-PizzaShackAPI-1.0.0.zip \"https://127.0.0.1:9443/api/am/publisher/v4/apis/import?preserveProvider=false\u0026overwrite=false\"'\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /subscriptions:\n    get:\n      description: |\n        This operation can be used to retrieve a list of subscriptions of the user associated with the provided access token. This operation is capable of\n\n        1. Retrieving all subscriptions for the user's APIs.\n        `GET https://127.0.0.1:9443/api/am/publisher/v4/subscriptions`\n\n        2. Retrieving subscriptions for a specific API.\n        `GET https://127.0.0.1:9443/api/am/publisher/v4/subscriptions?apiId=c43a325c-260b-4302-81cb-768eafaa3aed`\n      operationId: getSubscriptions\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n          The combination of the provider of the API, name of the API and the version is also accepted as a valid API I.\n          Should be formatted as **provider-name-version**.\n        explode: true\n        in: query\n        name: apiId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Maximum size of resource array to return.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 25\n          type: integer\n        style: form\n      - description: |\n          Starting point within the complete list of items qualified.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Keywords to filter subscriptions\n        explode: true\n        in: query\n        name: query\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionList'\n          description: |\n            OK.\n            Subscription list returned.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:subscription_view\n        - apim:subscription_manage\n      summary: Get all Subscriptions\n      tags:\n      - Subscriptions\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/subscriptions?apiId=96077508-fd01-4fae-bc64-5de0e2baf43c\"'\n      x-accepts: application/json\n  /subscriptions/{subscriptionId}/usage:\n    get:\n      description: |\n        This operation can be used to get details of a pending invoice for a monetized subscription with meterd billing.\n      operationId: getSubscriptionUsage\n      parameters:\n      - description: |\n          Subscription Id\n        explode: false\n        in: path\n        name: subscriptionId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIMonetizationUsage'\n          description: |\n            OK.\n            Details of a pending invoice returned.\n          headers:\n            ETag:\n              description: Entity Tag of the response resource. Used by caches, or\n                in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: Date and time the resource has been modified the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Not Found.\n            Requested Subscription does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:subscription_view\n        - apim:subscription_manage\n      summary: Get Details of a Pending Invoice for a Monetized Subscription with\n        Metered Billing.\n      tags:\n      - API Monetization\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/subscriptions/64eca60b-2e55-4c38-8603-e9e6bad7d809/usage\"'\n      x-accepts: application/json\n  /subscriptions/{subscriptionId}/subscriber-info:\n    get:\n      description: |\n        This operation can be used to get details of a user who subscribed to the API.\n      operationId: getSubscriberInfoBySubscriptionId\n      parameters:\n      - description: |\n          Subscription Id\n        explode: false\n        in: path\n        name: subscriptionId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriberInfo'\n          description: |\n            OK.\n             Details of the subscriber are returned.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:subscription_view\n        - apim:subscription_manage\n      summary: Get Details of a Subscriber\n      tags:\n      - Subscriber\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/subscriptions/64eca60b-2e55-4c38-8603-e9e6bad7d809/subscriber-info\"'\n      x-accepts: application/json\n  /subscriptions/block-subscription:\n    post:\n      description: |\n        This operation can be used to block a subscription. Along with the request, `blockState` must be specified as a query parameter.\n\n        1. `BLOCKED` : Subscription is completely blocked for both Production and Sandbox environments.\n        2. `PROD_ONLY_BLOCKED` : Subscription is blocked for Production environment only.\n      operationId: blockSubscription\n      parameters:\n      - description: |\n          Subscription Id\n        explode: true\n        in: query\n        name: subscriptionId\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: |\n          Subscription block state.\n        explode: true\n        in: query\n        name: blockState\n        required: true\n        schema:\n          enum:\n          - BLOCKED\n          - PROD_ONLY_BLOCKED\n          type: string\n        style: form\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Subscription was blocked successfully.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the blocked subscription.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the subscription has been blocked.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:subscription_block\n        - apim:subscription_manage\n      summary: Block a Subscription\n      tags:\n      - Subscriptions\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/subscriptions/block-subscription?subscriptionId=64eca60b-2e55-4c38-8603-e9e6bad7d809\u0026blockState=PROD_ONLY_BLOCKED\"'\n      x-accepts: application/json\n  /subscriptions/unblock-subscription:\n    post:\n      description: |\n        This operation can be used to unblock a subscription specifying the subscription Id. The subscription will be fully unblocked after performing this operation.\n      operationId: unBlockSubscription\n      parameters:\n      - description: |\n          Subscription Id\n        explode: true\n        in: query\n        name: subscriptionId\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Subscription was unblocked successfully.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the unblocked subscription.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the subscription has been unblocked.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:subscription_block\n        - apim:subscription_manage\n      summary: Unblock a Subscription\n      tags:\n      - Subscriptions\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/subscriptions/unblock-subscription?subscriptionId=64eca60b-2e55-4c38-8603-e9e6bad7d809\"'\n      x-accepts: application/json\n  /throttling-policies/{policyLevel}:\n    get:\n      description: |\n        This operation can be used to list the available policies for a given policy level. Tier level should be specified as a path parameter and should be one of `subscription` and `api`.\n        `subscription` is for Subscription Level policies and `api` is for Resource Level policies\n      operationId: getAllThrottlingPolicies\n      parameters:\n      - description: |\n          Maximum size of resource array to return.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 25\n          type: integer\n        style: form\n      - description: |\n          Starting point within the complete list of items qualified.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      - description: |\n          List API or Application or Resource type policies.\n        explode: false\n        in: path\n        name: policyLevel\n        required: true\n        schema:\n          enum:\n          - api\n          - subcription\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingPolicyList'\n          description: |\n            OK.\n            List of policies returned.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:tier_view\n        - apim:tier_manage\n      summary: Get All Throttling Policies for the Given Type\n      tags:\n      - Throttling Policies\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/throttling-policies/api\"'\n      x-accepts: application/json\n  /throttling-policies/streaming/subscription:\n    get:\n      description: |\n        This operation can be used to list the available streaming subscription policies\n      operationId: getSubscriptionThrottlingPolicies\n      parameters:\n      - description: |\n          Maximum size of resource array to return.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 25\n          type: integer\n        style: form\n      - description: |\n          Starting point within the complete list of items qualified.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionPolicyList'\n          description: |\n            OK.\n            List of subscription policies returned.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:tier_view\n        - apim:tier_manage\n      summary: Get streaming throttling policies\n      tags:\n      - Throttling Policies\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/throttling-policies/subscription?tierQuotaType=RequestCountLimit\"'\n      x-accepts: application/json\n  /throttling-policies/{policyLevel}/{policyName}:\n    get:\n      description: |\n        This operation can be used to retrieve details of a single policy by specifying the policy level and policy name.\n      operationId: getThrottlingPolicyByName\n      parameters:\n      - description: |\n          Tier name\n        explode: false\n        in: path\n        name: policyName\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          List API or Application or Resource type policies.\n        explode: false\n        in: path\n        name: policyLevel\n        required: true\n        schema:\n          enum:\n          - api\n          - subcription\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingPolicy'\n          description: |\n            OK.\n            Tier returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:tier_view\n        - apim:tier_manage\n      summary: Get Details of a Policy\n      tags:\n      - Throttling Policies\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/throttling-policies/api/Platinum\"'\n      x-accepts: application/json\n  /apis/{apiId}/client-certificates:\n    get:\n      description: |\n        This operation can be used to retrieve and search the uploaded client certificates.\n      operationId: getAPIClientCertificates\n      parameters:\n      - description: |\n          Maximum size of resource array to return.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 25\n          type: integer\n        style: form\n      - description: |\n          Starting point within the complete list of items qualified.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      - description: Alias for the client certificate\n        explode: true\n        in: query\n        name: alias\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientCertificates'\n          description: |\n            OK. Successful response with the list of matching certificate information in the body.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n        - apim:client_certificates_view\n        - apim:client_certificates_manage\n      summary: Retrieve/ Search Uploaded Client Certificates\n      tags:\n      - Client Certificates\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/d48a3412-1b85-49be-99f4-b81a3722ae73/client-certificates?alias=wso2carbon\"'\n      x-accepts: application/json\n    post:\n      description: |\n        This operation can be used to upload a new certificate for an endpoint.\n      operationId: addAPIClientCertificate\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                certificate:\n                  description: The certificate that needs to be uploaded.\n                  format: binary\n                  type: string\n                alias:\n                  description: Alias for the certificate\n                  maxLength: 30\n                  minLength: 1\n                  type: string\n                tier:\n                  description: api tier to which the certificate should be applied.\n                  type: string\n              required:\n              - alias\n              - certificate\n              - tier\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientCertMetadata'\n          description: |\n            OK.\n            The Certificate added successfully.\n          headers:\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n        - apim:client_certificates_add\n        - apim:client_certificates_manage\n      summary: Upload a New Certificate\n      tags:\n      - Client Certificates\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: multipart/form-data\" -F certificate=@test.crt -F alias=wso2carbon\n          -F apiId=fea749dd-d548-4a8b-b308-34903b39a34b -F tier=Gold \"https://127.0.0.1:9443/api/am/publisher/v4/apis/d48a3412-1b85-49be-99f4-b81a3722ae73/client-certificates\"'\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /apis/{apiId}/client-certificates/{alias}:\n    delete:\n      description: |\n        This operation can be used to delete an uploaded certificate.\n      operationId: deleteAPIClientCertificateByAlias\n      parameters:\n      - description: |\n          The alias of the certificate that should be deleted.\n        explode: false\n        in: path\n        name: alias\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            The Certificate deleted successfully.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n        - apim:client_certificates_update\n      summary: Delete a Certificate\n      tags:\n      - Client Certificates\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/d48a3412-1b85-49be-99f4-b81a3722ae73/client-certificates/wso2carbon\"'\n      x-accepts: application/json\n    get:\n      description: |\n        This operation can be used to get the information about a certificate.\n      operationId: getAPIClientCertificateByAlias\n      parameters:\n      - explode: false\n        in: path\n        name: alias\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificateInfo'\n          description: |\n            OK.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n        - apim:client_certificates_view\n        - apim:client_certificates_manage\n      summary: Get the Certificate Information\n      tags:\n      - Client Certificates\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/d48a3412-1b85-49be-99f4-b81a3722ae73/client-certificates/wso2carbon\"'\n      x-accepts: application/json\n    put:\n      description: |\n        This operation can be used to update an uploaded certificate.\n      operationId: updateAPIClientCertificateByAlias\n      parameters:\n      - description: Alias for the certificate\n        explode: false\n        in: path\n        name: alias\n        required: true\n        schema:\n          maxLength: 30\n          minLength: 1\n          type: string\n        style: simple\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                certificate:\n                  description: The certificate that needs to be uploaded.\n                  format: binary\n                  type: string\n                tier:\n                  description: The tier of the certificate\n                  type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientCertMetadata'\n          description: |\n            OK.\n            The Certificate updated successfully.\n          headers:\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n        - apim:client_certificates_update\n        - apim:client_certificates_manage\n      summary: Update a Certificate\n      tags:\n      - Client Certificates\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: multipart/form-data\" -F certificate=@test.crt -F alias=wso2carbon\n          -F apiId=fea749dd-d548-4a8b-b308-34903b39a34b -F tier=Gold \"https://127.0.0.1:9443/api/am/publisher/v4/apis/d48a3412-1b85-49be-99f4-b81a3722ae73/client-certificates/wso2carbon\"'\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /apis/{apiId}/client-certificates/{alias}/content:\n    get:\n      description: |\n        This operation can be used to download a certificate which matches the given alias.\n      operationId: getAPIClientCertificateContentByAlias\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: alias\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n        - apim:client_certificates_view\n        - apim:client_certificates_manage\n      summary: Download a Certificate\n      tags:\n      - Client Certificates\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/apis/d48a3412-1b85-49be-99f4-b81a3722ae73/client-certificates/wso2carbon/content\"'\n      x-accepts: application/json\n  /endpoint-certificates:\n    get:\n      description: |\n        This operation can be used to retrieve and search the uploaded certificates.\n      operationId: getEndpointCertificates\n      parameters:\n      - description: |\n          Maximum size of resource array to return.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 25\n          type: integer\n        style: form\n      - description: |\n          Starting point within the complete list of items qualified.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      - description: Alias for the certificate\n        explode: true\n        in: query\n        name: alias\n        required: false\n        schema:\n          maxLength: 30\n          type: string\n        style: form\n      - description: Endpoint of which the certificate is uploaded\n        explode: true\n        in: query\n        name: endpoint\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Certificates'\n          description: |\n            OK. Successful response with the list of matching certificate information in the body.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n        - apim:ep_certificates_view\n        - apim:ep_certificates_manage\n      summary: Retrieve/Search Uploaded Certificates\n      tags:\n      - Endpoint Certificates\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/endpoint-certificates?alias=wso2carbon\u0026endpoint=www.abc.com\"'\n      x-accepts: application/json\n    post:\n      description: |\n        This operation can be used to upload a new certificate for an endpoint.\n      operationId: addEndpointCertificate\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                certificate:\n                  description: The certificate that needs to be uploaded.\n                  format: binary\n                  type: string\n                alias:\n                  description: Alias for the certificate\n                  maxLength: 30\n                  minLength: 1\n                  type: string\n                endpoint:\n                  description: Endpoint to which the certificate should be applied.\n                  type: string\n              required:\n              - alias\n              - certificate\n              - endpoint\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertMetadata'\n          description: |\n            OK.\n            The Certificate added successfully.\n          headers:\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n        - apim:ep_certificates_add\n        - apim:ep_certificates_manage\n      summary: Upload a new Certificate.\n      tags:\n      - Endpoint Certificates\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: multipart/form-data\" -F certificate=@test.crt -F alias=alias\n          -F \"endpoint=endpoint=https://www.abc.com\" \"https://127.0.0.1:9443/api/am/publisher/v4/apis/d48a3412-1b85-49be-99f4-b81a3722ae73/endpoint-certificates\"'\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /endpoint-certificates/{alias}:\n    delete:\n      description: |\n        This operation can be used to delete an uploaded certificate.\n      operationId: deleteEndpointCertificateByAlias\n      parameters:\n      - description: |\n          The alias of the certificate that should be deleted.\n        explode: false\n        in: path\n        name: alias\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            The Certificate deleted successfully.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n        - apim:ep_certificates_update\n        - apim:ep_certificates_manage\n      summary: Delete a certificate.\n      tags:\n      - Endpoint Certificates\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/endpoint-certificates/wso2carbon\"'\n      x-accepts: application/json\n    get:\n      description: |\n        This operation can be used to get the information about a certificate.\n      operationId: getEndpointCertificateByAlias\n      parameters:\n      - explode: false\n        in: path\n        name: alias\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificateInfo'\n          description: |\n            OK.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n        - apim:ep_certificates_view\n        - apim:ep_certificates_manage\n      summary: Get the Certificate Information\n      tags:\n      - Endpoint Certificates\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/endpoint-certificates/wso2carbon\"'\n      x-accepts: application/json\n    put:\n      description: |\n        This operation can be used to update an uploaded certificate.\n      operationId: updateEndpointCertificateByAlias\n      parameters:\n      - description: Alias for the certificate\n        explode: false\n        in: path\n        name: alias\n        required: true\n        schema:\n          maxLength: 30\n          minLength: 1\n          type: string\n        style: simple\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                certificate:\n                  description: The certificate that needs to be uploaded.\n                  format: binary\n                  type: string\n              required:\n              - certificate\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertMetadata'\n          description: |\n            OK.\n            The Certificate updated successfully.\n          headers:\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n        - apim:ep_certificates_update\n        - apim:ep_certificates_manage\n      summary: Update a certificate.\n      tags:\n      - Endpoint Certificates\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: multipart/form-data\" -F certificate=@test.crt \"https://127.0.0.1:9443/api/am/publisher/v4/apis/d48a3412-1b85-49be-99f4-b81a3722ae73/endpoint-certificates/wso2carbon\"'\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /endpoint-certificates/{alias}/content:\n    get:\n      description: |\n        This operation can be used to download a certificate which matches the given alias.\n      operationId: getEndpointCertificateContentByAlias\n      parameters:\n      - explode: false\n        in: path\n        name: alias\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n        - apim:ep_certificates_view\n        - apim:ep_certificates_manage\n      summary: Download a Certificate\n      tags:\n      - Endpoint Certificates\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/endpoint-certificates/wso2carbon/content\"'\n      x-accepts: application/json\n  /endpoint-certificates/{alias}/usage:\n    get:\n      description: |\n        This operation can be used to retrieve/identify apis that use a known certificate.\n      operationId: getCertificateUsageByAlias\n      parameters:\n      - description: |\n          Maximum size of resource array to return.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 25\n          type: integer\n        style: form\n      - description: |\n          Starting point within the complete list of items qualified.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      - explode: false\n        in: path\n        name: alias\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIMetadataList'\n          description: |\n            OK.\n            List of qualifying APIs is returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n        - apim:ep_certificates_view\n        - apim:ep_certificates_manage\n      summary: Retrieve all the APIs that use a given certificate by the alias\n      tags:\n      - Endpoint Certificates\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/endpoint-certificates/wso2cert/usage\"'\n      x-accepts: application/json\n  /search:\n    get:\n      description: |\n        This operation provides you a list of available APIs and API Documents qualifying the given keyword match.\n      operationId: search\n      parameters:\n      - description: |\n          Maximum size of resource array to return.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 25\n          type: integer\n        style: form\n      - description: |\n          Starting point within the complete list of items qualified.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      - description: |\n          **Search**.\n\n          You can search by proving a keyword.\n        explode: true\n        in: query\n        name: query\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchResultList'\n          description: |\n            OK.\n            List of qualifying APIs and API documents is returned.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n        - apim:api_import_export\n        - apim:api_product_import_export\n      summary: |\n        Retrieve/Search APIs and API Documents by Content\n      tags:\n      - Unified Search\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/search?query=pizza\"'\n      x-examples:\n        $ref: docs/examples/apis/search_get.yaml\n      x-accepts: application/json\n  /api-products:\n    get:\n      description: |\n        This operation provides you a list of available API Products qualifying under a given search condition.\n\n        Each retrieved API Product is represented with a minimal amount of attributes. If you want to get complete details of an API Product, you need to use **Get details of an API Product** operation.\n      operationId: getAllAPIProducts\n      parameters:\n      - description: |\n          Maximum size of resource array to return.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 25\n          type: integer\n        style: form\n      - description: |\n          Starting point within the complete list of items qualified.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: query\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Media types acceptable for the response. Default is application/json.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIProductList'\n          description: |\n            OK.\n            List of qualifying API Products is returned.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n      summary: |\n        Retrieve/Search API Products\n      tags:\n      - API Products\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/api-products?query=PizzaAPIProduct\"'\n      x-accepts: application/json\n    post:\n      description: |\n        This operation can be used to create a new API Product specifying the details of the API Product in the payload.\n      operationId: createAPIProduct\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/APIProduct'\n        description: API object that needs to be added\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIProduct'\n          description: |\n            'Created.\n            Successful response with the newly created object as entity in the body.\n            Location header contains URL of newly created entity.'\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"415\":\n          content:\n            application/json:\n              example:\n                code: 415\n                message: Unsupported media type\n                description: The entity of the request was not in a supported format\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsupported Media Type. The entity of the request was not in\n            a supported format.\n      security:\n      - OAuth2Security:\n        - apim:api_publish\n        - apim:api_manage\n      summary: Create a New API Product\n      tags:\n      - API Products\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/publisher/v4/api-products\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /api-products/{apiProductId}:\n    delete:\n      description: |\n        This operation can be used to delete an existing API Product proving the Id of the API Product.\n      operationId: deleteAPIProduct\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Resource successfully deleted.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:api_publish\n        - apim:api_manage\n        - apim:api_product_import_export\n      summary: Delete an API Product\n      tags:\n      - API Products\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/5bca47e1-8233-46a5-9295-525dca337f33\"'\n      x-accepts: application/json\n    get:\n      description: |\n        Using this operation, you can retrieve complete details of a single API Product. You need to provide the Id of the API to retrive it.\n      operationId: getAPIProduct\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      - description: |\n          Media types acceptable for the response. Default is application/json.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIProduct'\n          description: |\n            OK.\n            Requested API Product is returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_publish\n        - apim:api_manage\n      summary: Get Details of an API Product\n      tags:\n      - API Products\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/5bca47e1-8233-46a5-9295-525dca337f33\"'\n      x-accepts: application/json\n    put:\n      description: |\n        This operation can be used to update an existing API product.\n        But the properties `name`, `provider` and `version` cannot be changed.\n      operationId: updateAPIProduct\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/APIProduct'\n        description: API object that needs to be added\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIProduct'\n          description: |\n            OK.\n            Successful response with updated API product object\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:api_publish\n        - apim:api_manage\n      summary: Update an API Product\n      tags:\n      - API Products\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/5bca47e1-8233-46a5-9295-525dca337f33\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /api-products/{apiProductId}/thumbnail:\n    get:\n      description: |\n        This operation can be used to download a thumbnail image of an API product.\n      operationId: getAPIProductThumbnail\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      - description: |\n          Media types acceptable for the response. Default is application/json.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Thumbnail image returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_publish\n        - apim:api_manage\n      summary: Get Thumbnail Image\n      tags:\n      - API Products\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/5bca47e1-8233-46a5-9295-525dca337f33/thumbnail\"\n          \u003e image.jpeg'\n      x-accepts: application/json\n    put:\n      description: |\n        This operation can be used to upload a thumbnail image of an API Product. The thumbnail to be uploaded should be given as a form data parameter `file`.\n      operationId: updateAPIProductThumbnail\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: Image to upload\n                  format: binary\n                  type: string\n              required:\n              - file\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileInfo'\n          description: |\n            OK.\n            Image updated\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the uploaded thumbnail image of the API Product.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:api_publish\n        - apim:api_manage\n      summary: Upload a Thumbnail Image\n      tags:\n      - API Products\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: multipart/form-data\" -F file=@image.jpeg \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/d48a3412-1b85-49be-99f4-b81a3722ae73/thumbnail\"'\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /api-products/{apiProductId}/swagger:\n    get:\n      description: |\n        This operation can be used to retrieve the swagger definition of an API.\n      operationId: getAPIProductSwagger\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      - description: |\n          Media types acceptable for the response. Default is application/json.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Requested swagger document of the API is returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_publish\n        - apim:api_manage\n      summary: Get Swagger Definition\n      tags:\n      - API Products\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/5bca47e1-8233-46a5-9295-525dca337f33/swagger\"'\n      x-accepts: application/json\n  /api-products/{apiProductId}/is-outdated:\n    get:\n      description: |\n        This operation can be used to retrieve the status indicating if an API Product is outdated due to updating of dependent APIs (This resource is not supported at the moment)\n      operationId: getIsAPIProductOutdated\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      - description: |\n          Media types acceptable for the response. Default is application/json.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIProductOutdatedStatus'\n          description: |\n            OK.\n            Requested swagger document of the API is returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_publish\n        - apim:api_manage\n      summary: Check Whether API Product is Outdated\n      tags:\n      - API Products\n      x-accepts: application/json\n  /api-products/{apiProductId}/documents:\n    get:\n      description: |\n        This operation can be used to retrive a list of documents belonging to an API Product by providing the id of the API Product.\n      operationId: getAPIProductDocuments\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      - description: |\n          Maximum size of resource array to return.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 25\n          type: integer\n        style: form\n      - description: |\n          Starting point within the complete list of items qualified.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      - description: |\n          Media types acceptable for the response. Default is application/json.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentList'\n          description: |\n            OK.\n            Document list is returned.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_publish\n        - apim:api_manage\n      summary: Get a List of Documents of an API Product\n      tags:\n      - API Product Documents\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/5bca47e1-8233-46a5-9295-525dca337f33/documents\"'\n      x-accepts: application/json\n    post:\n      description: |\n        This operation can be used to add a new documentation to an API Product. This operation only adds the metadata of a document. To add the actual content we need to use **Upload the content of an API Product document ** API once we obtain a document Id by this operation.\n      operationId: addAPIProductDocument\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Document'\n        description: Document object that needs to be added\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n          description: |\n            Created.\n            Successful response with the newly created Document object as entity in the body.\n            Location header contains URL of newly added document.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                Location to the newly created Document.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"415\":\n          content:\n            application/json:\n              example:\n                code: 415\n                message: Unsupported media type\n                description: The entity of the request was not in a supported format\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsupported Media Type. The entity of the request was not in\n            a supported format.\n      security:\n      - OAuth2Security:\n        - apim:api_publish\n        - apim:api_manage\n      summary: Add a New Document to an API Product\n      tags:\n      - API Product Documents\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/5bca47e1-8233-46a5-9295-525dca337f33/documents\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /api-products/{apiProductId}/documents/{documentId}:\n    delete:\n      description: |\n        This operation can be used to delete a document associated with an API Product.\n      operationId: deleteAPIProductDocument\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      - description: |\n          Document Identifier\n        explode: false\n        in: path\n        name: documentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Resource successfully deleted.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:api_publish\n        - apim:api_manage\n      summary: Delete a Document of an API Product\n      tags:\n      - API Product Documents\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/5bca47e1-8233-46a5-9295-525dca337f33/documents/83312daf-0d8a-427b-8f72-12755b7901d3\"'\n      x-accepts: application/json\n    get:\n      description: |\n        This operation can be used to retrieve a particular document's metadata associated with an API.\n      operationId: getAPIProductDocument\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      - description: |\n          Document Identifier\n        explode: false\n        in: path\n        name: documentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Media types acceptable for the response. Default is application/json.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n          description: |\n            OK.\n            Document returned.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_publish\n        - apim:api_manage\n      summary: Get a Document of an API Product\n      tags:\n      - API Product Documents\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/5bca47e1-8233-46a5-9295-525dca337f33/documents/83312daf-0d8a-427b-8f72-12755b7901d3\"'\n      x-accepts: application/json\n    put:\n      description: |\n        This operation can be used to update metadata of an API's document.\n      operationId: updateAPIProductDocument\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      - description: |\n          Document Identifier\n        explode: false\n        in: path\n        name: documentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Document'\n        description: Document object that needs to be added\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n          description: |\n            OK.\n            Document updated\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the updated document.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:api_publish\n        - apim:api_manage\n      summary: Update a Document of an API Product\n      tags:\n      - API Product Documents\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/5bca47e1-8233-46a5-9295-525dca337f33/documents/83312daf-0d8a-427b-8f72-12755b7901d3\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /api-products/{apiProductId}/documents/{documentId}/content:\n    get:\n      description: |\n        This operation can be used to retrive the content of an API's document.\n\n        The document can be of 3 types. In each cases responses are different.\n\n        1. **Inline type**:\n           The content of the document will be retrieved in `text/plain` content type\n\n           _Sample cURL_ : `curl -k -H \"Authorization:Bearer 579f0af4-37be-35c7-81a4-f1f1e9ee7c51\" -F inlineContent=@\"docs.txt\" -X POST \"https://localhost:9443/api/am/publisher/v4/apis/995a4972-3178-4b17-a374-756e0e19127c/documents/43c2bcce-60e7-405f-bc36-e39c0c5e189e/content`\n        2. **FILE type**:\n           The file will be downloaded with the related content type (eg. `application/pdf`)\n        3. **URL type**:\n            The client will recieve the URL of the document as the Location header with the response with - `303 See Other`\n      operationId: getAPIProductDocumentContent\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      - description: |\n          Document Identifier\n        explode: false\n        in: path\n        name: documentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Media types acceptable for the response. Default is application/json.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            File or inline content returned.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"303\":\n          content: {}\n          description: |\n            See Other.\n            Source can be retrived from the URL specified at the Location header.\n          headers:\n            Location:\n              description: |\n                The Source URL of the document.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_publish\n        - apim:api_manage\n      summary: Get the Content of an API Product Document\n      tags:\n      - API Product Documents\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/5bca47e1-8233-46a5-9295-525dca337f33/documents/83312daf-0d8a-427b-8f72-12755b7901d3/content\"'\n      x-accepts: application/json\n    post:\n      description: |\n        Thid operation can be used to upload a file or add inline content to an API Product document.\n\n        **IMPORTANT:**\n        * Either **file** or **inlineContent** form data parameters should be specified at one time.\n        * Document's source type should be **FILE** in order to upload a file to the document using **file** parameter.\n        * Document's source type should be **INLINE** in order to add inline content to the document using **inlineContent** parameter.\n      operationId: addAPIProductDocumentContent\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      - description: |\n          Document Identifier\n        explode: false\n        in: path\n        name: documentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: Document to upload\n                  format: binary\n                  type: string\n                inlineContent:\n                  description: Inline content of the document\n                  type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n          description: |\n            OK.\n            Document updated\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the updated content of the document.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:api_publish\n        - apim:api_manage\n      summary: Upload the Content of an API Product Document\n      tags:\n      - API Product Documents\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: multipart/form-data\" -F file=@sample.pdf \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/5bca47e1-8233-46a5-9295-525dca337f33/documents/83312daf-0d8a-427b-8f72-12755b7901d3/content\"'\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /api-products/{apiProductId}/revisions:\n    get:\n      description: |\n        List available revisions of an API Product\n      operationId: getAPIProductRevisions\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      - explode: true\n        in: query\n        name: query\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIRevisionList'\n          description: |\n            OK.\n            List of API Product revisions are returned.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_create\n        - apim:api_publish\n        - apim:api_manage\n        - apim:api_product_import_export\n      summary: List Revisions\n      tags:\n      - API Product Revisions\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/890a4f4d-09eb-4877-a323-57f6ce2ed79b/revisions?query=deployed:true\"'\n      x-accepts: application/json\n    post:\n      description: |\n        Create a new API Product revision\n      operationId: createAPIProductRevision\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/APIRevision'\n        description: API Product object that needs to be added\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIRevision'\n          description: |\n            Created.\n            Successful response with the newly created APIRevision object as the entity in the body.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_publish\n        - apim:api_manage\n      summary: Create a new API Product revision\n      tags:\n      - API Product Revisions\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/890a4f4d-09eb-4877-a323-57f6ce2ed79b/revisions\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /api-products/{apiProductId}/revisions/{revisionId}:\n    delete:\n      description: |\n        Delete a revision of an API Product\n      operationId: deleteAPIProductRevision\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      - description: |\n          Revision ID of an API\n        explode: false\n        in: path\n        name: revisionId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIRevisionList'\n          description: |\n            OK.\n            List of remaining API revisions are returned.\n        \"204\":\n          description: |\n            No Content.\n            Successfully deleted the revision\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_publish\n        - apim:api_manage\n      summary: Delete Revision\n      tags:\n      - API Product Revisions\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/890a4f4d-09eb-4877-a323-57f6ce2ed79b/revisions/e0824883-3e86-403a-aec1-22bbc454eb7c\"'\n      x-accepts: application/json\n    get:\n      description: |\n        Retrieve a revision of an API Product\n      operationId: getAPIProductRevision\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      - description: |\n          Revision ID of an API\n        explode: false\n        in: path\n        name: revisionId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIRevision'\n          description: |\n            OK.\n            An API revision is returned.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_create\n        - apim:api_publish\n        - apim:api_manage\n      summary: Retrieve Revision\n      tags:\n      - API Product Revisions\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/890a4f4d-09eb-4877-a323-57f6ce2ed79b/revisions/e0824883-3e86-403a-aec1-22bbc454eb7c\"'\n      x-accepts: application/json\n  /api-products/{apiProductId}/deployments:\n    get:\n      description: |\n        List available deployed revision deployment details of an API Product\n      operationId: getAPIProductRevisionDeployments\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIRevisionDeploymentList'\n          description: |\n            OK.\n            List of deployed revision deployment details are returned.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_create\n        - apim:api_publish\n        - apim:api_manage\n      summary: List Deployments\n      tags:\n      - API Product Revisions\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/890a4f4d-09eb-4877-a323-57f6ce2ed79b/deployments\"'\n      x-accepts: application/json\n  /api-products/{apiProductId}/deployments/{deploymentId}:\n    put:\n      description: |\n        Update deployment devportal visibility\n      operationId: updateAPIProductDeployment\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      - description: |\n          Base64 URL encoded value of the name of an environment\n        explode: false\n        in: path\n        name: deploymentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/APIRevisionDeployment'\n        description: Deployment object that needs to be updated\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIRevisionDeployment'\n          description: |\n            Created.\n            Successful response with the newly updated APIRevisionDeployment List object as the entity in the body.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_publish\n        - apim:api_manage\n      summary: Update Deployment\n      tags:\n      - API Product Revisions\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -d @data.json \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/890a4f4d-09eb-4877-a323-57f6ce2ed79b/deployments/UHJvZHVjdGlvbiBhbmQgU2FuZGJveA\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /api-products/{apiProductId}/deploy-revision:\n    post:\n      description: |\n        Deploy an API Product Revision\n      operationId: deployAPIProductRevision\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      - description: |\n          Revision ID of an API\n        explode: true\n        in: query\n        name: revisionId\n        required: false\n        schema:\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/APIRevisionDeployment'\n              type: array\n        description: Deployment object that needs to be added\n      responses:\n        \"200\":\n          description: |\n            OK.\n        \"201\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/APIRevisionDeployment'\n                type: array\n          description: |\n            Created.\n            Successful response with the newly deployed APIRevisionDeployment List object as the entity in the body.\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_publish\n        - apim:api_manage\n      summary: Deploy Revision\n      tags:\n      - API Product Revisions\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/890a4f4d-09eb-4877-a323-57f6ce2ed79b/deploy-revision?revisionId=e0824883-3e86-403a-aec1-22bbc454eb7c\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /api-products/{apiProductId}/undeploy-revision:\n    post:\n      description: |\n        UnDeploy an API Product Revision\n      operationId: undeployAPIProductRevision\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      - description: |\n          Revision ID of an API\n        explode: true\n        in: query\n        name: revisionId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Revision Number of an API\n        explode: true\n        in: query\n        name: revisionNumber\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: allEnvironments\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/APIRevisionDeployment'\n              type: array\n        description: Deployment object that needs to be added\n      responses:\n        \"200\":\n          description: |\n            OK.\n        \"201\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/APIRevisionDeployment'\n                type: array\n          description: |\n            Created.\n            Successful response with the newly undeployed APIRevisionDeploymentList object as the entity in the body.\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_publish\n        - apim:api_manage\n        - apim:api_product_import_export\n      summary: UnDeploy Revision\n      tags:\n      - API Product Revisions\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/890a4f4d-09eb-4877-a323-57f6ce2ed79b/undeploy-revision?revisionId=e0824883-3e86-403a-aec1-22bbc454eb7c\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /api-products/{apiProductId}/restore-revision:\n    post:\n      description: |\n        Restore a revision to the Current API of the API Product\n      operationId: restoreAPIProductRevision\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      - description: |\n          Revision ID of an API\n        explode: true\n        in: query\n        name: revisionId\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIProduct'\n          description: |\n            Restored.\n            Successful response with the newly restored API Product object as the entity in the body.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_publish\n        - apim:api_manage\n      summary: Restore Revision\n      tags:\n      - API Product Revisions\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/890a4f4d-09eb-4877-a323-57f6ce2ed79b/restore-revision?revisionId=e0824883-3e86-403a-aec1-22bbc454eb7c\"'\n      x-accepts: application/json\n  /api-products/export:\n    get:\n      description: |\n        This operation can be used to export the details of a particular API Product as a zip file.\n      operationId: exportAPIProduct\n      parameters:\n      - description: |\n          API Product Name\n        explode: true\n        in: query\n        name: name\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Version of the API Product\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Provider name of the API Product\n        explode: true\n        in: query\n        name: providerName\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Revision number of the API Product\n        explode: true\n        in: query\n        name: revisionNumber\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Format of output documents. Can be YAML or JSON.\n        explode: true\n        in: query\n        name: format\n        required: false\n        schema:\n          enum:\n          - JSON\n          - YAML\n          type: string\n        style: form\n      - description: |\n          Preserve API Product Status on export\n        explode: true\n        in: query\n        name: preserveStatus\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: |\n          Export the latest revision of the API Product\n        explode: true\n        in: query\n        name: latestRevision\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/zip:\n              schema:\n                format: binary\n                type: string\n          description: |\n            OK.\n            Export Successful.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_product_import_export\n      summary: Export an API Product\n      tags:\n      - Import Export\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/export?name=LeasingAPIProduct\u0026version=1.0.0\u0026revisionNumber=2\u0026provider=admin\u0026format=YAML\"\n          \u003e exportAPIProduct.zip'\n      x-accepts: application/json\n  /api-products/import:\n    post:\n      description: |\n        This operation can be used to import an API Product.\n      operationId: importAPIProduct\n      parameters:\n      - description: |\n          Preserve Original Provider of the API Product. This is the user choice to keep or replace the API Product provider\n        explode: true\n        in: query\n        name: preserveProvider\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: |\n          Once the revision max limit reached, undeploy and delete the earliest revision and create a new revision\n        explode: true\n        in: query\n        name: rotateRevision\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: |\n          Whether to import the dependent APIs or not.\n        explode: true\n        in: query\n        name: importAPIs\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: |\n          Whether to update the API Product or not. This is used when updating already existing API Products.\n        explode: true\n        in: query\n        name: overwriteAPIProduct\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: |\n          Whether to update the dependent APIs or not. This is used when updating already existing dependent APIs of an API Product.\n        explode: true\n        in: query\n        name: overwriteAPIs\n        required: false\n        schema:\n          type: boolean\n        style: form\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: |\n                    Zip archive consisting on exported API Product configuration\n                  format: binary\n                  type: string\n              required:\n              - file\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            Created.\n            API Product Imported Successfully.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"409\":\n          content:\n            application/json:\n              example:\n                code: 409\n                message: Conflict\n                description: Specified resource already exists\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Conflict. Specified resource already exists.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_product_import_export\n      summary: Import an API Product\n      tags:\n      - Import Export\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F file=@admin-PizzaShackAPIProduct.zip \"https://127.0.0.1:9443/api/am/admin/v4/api-products/importt?preserveProvider=false\u0026overwriteAPIProduct=false\u0026overwriteAPIs=false\u0026importAPIs=false\"'\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /roles/{roleId}:\n    head:\n      description: |\n        Using this operation, user can check a given role name exists or not.\n      operationId: validateSystemRole\n      parameters:\n      - description: |\n          The Base 64 URL encoded role name with domain. If the given role is in secondary user-store, role ID should be\n          derived as Base64URLEncode({user-store-name}/{role-name}). If the given role is in PRIMARY user-store, role ID\n          can be derived as Base64URLEncode(role-name)\n        explode: false\n        in: path\n        name: roleId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: OK. Requested role name exists.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_publish\n        - apim:api_manage\n      summary: Check Whether Given Role Name already Exist\n      tags:\n      - Roles\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -I -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/roles/SW50ZXJuYWwvcHVibGlzaGVyCQ\"'\n      x-accepts: application/json\n  /me/roles/{roleId}:\n    head:\n      description: |\n        Using this operation, logged-in user can check whether he has given role.\n      operationId: validateUserRole\n      parameters:\n      - description: |\n          The Base 64 URL encoded role name with domain. If the given role is in secondary user-store, role ID should be\n          derived as Base64URLEncode({user-store-name}/{role-name}). If the given role is in PRIMARY user-store, role ID\n          can be derived as Base64URLEncode(role-name)\n        explode: false\n        in: path\n        name: roleId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: OK. Requested user has the role.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: Validate Whether the Logged-in User has the Given Role\n      tags:\n      - Roles\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -I -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/me/roles/SW50ZXJuYWwvcHVibGlzaGVyCQ\"'\n      x-accepts: application/json\n  /external-stores:\n    get:\n      description: |\n        Retrieve external stores list configured to publish an API\n      operationId: getAllExternalStores\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExternalStore'\n          description: |\n            OK.\n            External Stores list returned\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n      summary: Retrieve External Stores List to Publish an API\n      tags:\n      - External Stores\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/external-stores\"'\n      x-accepts: application/json\n  /settings:\n    get:\n      description: |\n        Retreive publisher settings\n      operationId: getSettings\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Settings'\n          description: |\n            OK.\n            Settings returned\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:publisher_settings\n      summary: Retreive Publisher Settings\n      tags:\n      - Settings\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/settings\"'\n      x-accepts: application/json\n  /linter-custom-rules:\n    get:\n      description: |\n        This operation can be used to get linter custom rules from tenant-config.\n      operationId: getLinterCustomRules\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: |\n            OK.\n            Linter Custom Rules Retrieved Successfully.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n      summary: Get linter custom rules.\n      tags:\n      - Linter Custom Rules\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/linter-custom-rules\"'\n      x-accepts: application/json\n  /tenants:\n    get:\n      description: |\n        This operation is to get tenants by state\n      operationId: getTenantsByState\n      parameters:\n      - description: |\n          The state represents the current state of the tenant\n\n          Supported states are [active, inactive]\n        explode: true\n        in: query\n        name: state\n        required: false\n        schema:\n          default: active\n          enum:\n          - active\n          - inactive\n          type: string\n        style: form\n      - description: |\n          Maximum size of resource array to return.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 25\n          type: integer\n        style: form\n      - description: |\n          Starting point within the complete list of items qualified.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TenantList'\n          description: |\n            OK.\n            Tenant names returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n      summary: |\n        Get Tenants by State\n      tags:\n      - Tenants\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/tenants?state=active\"'\n      x-accepts: application/json\n  /tenants/{tenantDomain}:\n    head:\n      description: |\n        Using this operation, user can check whether a given tenant exists or not.\n      operationId: getTenantExistence\n      parameters:\n      - description: |\n          The domain of a specific tenant\n        explode: false\n        in: path\n        name: tenantDomain\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: OK. Requested tenant exists.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n      summary: Check Whether the Given Tenant already Exists\n      tags:\n      - Tenants\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -I -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/tenants/wso2.com\"'\n      x-examples:\n        $ref: docs/examples/tenants/tenants.yaml\n      x-accepts: application/json\n  /api-categories:\n    get:\n      description: |\n        Get all API categories\n      operationId: getAllAPICategories\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APICategoryList'\n          description: |\n            OK.\n            Categories returned\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n      summary: Get all API categories\n      tags:\n      - API Category (Collection)\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/api-categories\"'\n      x-accepts: application/json\n  /scopes:\n    get:\n      description: |\n        This operation can be used to get all the available Shared Scopes.\n      operationId: getSharedScopes\n      parameters:\n      - description: |\n          Maximum size of resource array to return.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 25\n          type: integer\n        style: form\n      - description: |\n          Starting point within the complete list of items qualified.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScopeList'\n          description: |\n            OK.\n            Shared Scope list is returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:shared_scope_manage\n      summary: Get All Available Shared Scopes\n      tags:\n      - Scopes\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/scopes\"'\n      x-accepts: application/json\n    post:\n      description: |\n        This operation can be used to add a new Shared Scope.\n      operationId: addSharedScope\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Scope'\n        description: Scope object that needs to be added\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Scope'\n          description: |\n            Created.\n            Successful response with the newly created Scope object as an entity in the body.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"415\":\n          content:\n            application/json:\n              example:\n                code: 415\n                message: Unsupported media type\n                description: The entity of the request was not in a supported format\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsupported Media Type. The entity of the request was not in\n            a supported format.\n      security:\n      - OAuth2Security:\n        - apim:shared_scope_manage\n      summary: Add a New Shared Scope\n      tags:\n      - Scopes\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/publisher/v4/scopes\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /scopes/{scopeId}:\n    delete:\n      description: |\n        This operation can be used to delete a Shared Scope proving the Id of the scope.\n      operationId: deleteSharedScope\n      parameters:\n      - description: |\n          Scope Id consisting the UUID of the shared scope\n        explode: false\n        in: path\n        name: scopeId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Resource successfully deleted.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:shared_scope_manage\n      summary: Delete a Shared Scope\n      tags:\n      - Scopes\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/scopes/01234567-0123-0123-0123-012345678901\"'\n      x-accepts: application/json\n    get:\n      description: |\n        This operation can be used to retrieve details of a Shared Scope by a given scope Id.\n      operationId: getSharedScope\n      parameters:\n      - description: |\n          Scope Id consisting the UUID of the shared scope\n        explode: false\n        in: path\n        name: scopeId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Scope'\n          description: |\n            OK.\n            Requested Shared Scope is returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:shared_scope_manage\n      summary: Get a Shared Scope by Scope Id\n      tags:\n      - Scopes\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/scopes/01234567-0123-0123-0123-012345678901\"'\n      x-accepts: application/json\n    head:\n      description: |\n        Using this operation, user can check a given scope name exists or not.\n      operationId: validateScope\n      parameters:\n      - description: |\n          Scope name\n        explode: false\n        in: path\n        name: scopeId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: OK. Requested scope name exists.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_publish\n        - apim:api_manage\n        - apim:shared_scope_manage\n      summary: Check Given Scope Name already Exists\n      tags:\n      - Scopes\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -I -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/scopes/YXBpbTphcGlfdmlldw\"'\n      x-accepts: application/json\n    put:\n      description: |\n        This operation can be used to update a Shared Scope by a given scope Id.\n      operationId: updateSharedScope\n      parameters:\n      - description: |\n          Scope Id consisting the UUID of the shared scope\n        explode: false\n        in: path\n        name: scopeId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Scope'\n        description: Scope object that needs to be updated\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Scope'\n          description: |\n            OK.\n            Successful response with updated Scope object\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:shared_scope_manage\n      summary: Update a Shared Scope\n      tags:\n      - Scopes\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/publisher/v4/scopes/01234567-0123-0123-0123-012345678901\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /scopes/{scopeId}/usage:\n    get:\n      description: |\n        This operation can be used to retrieve usages of a Shared Scope by a given scope Id.\n      operationId: getSharedScopeUsages\n      parameters:\n      - description: |\n          Scope Id consisting the UUID of the shared scope\n        explode: false\n        in: path\n        name: scopeId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SharedScopeUsage'\n          description: |\n            OK.\n            Usages of the shared scope is returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n        - apim:shared_scope_manage\n      summary: Get usages of a Shared Scope by Scope Id\n      tags:\n      - Scopes\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/scopes/01234567-0123-0123-0123-012345678901/usage\"'\n      x-accepts: application/json\n  /key-managers:\n    get:\n      description: |\n        Get all Key managers\n      operationId: getAllKeyManagers\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeyManagerList'\n          description: |\n            OK.\n            Categories returned\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_create\n        - apim:api_manage\n      summary: Get All Key Managers\n      tags:\n      - Key Managers (Collection)\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/key-managers\"'\n      x-accepts: application/json\n  /apis/validate-asyncapi:\n    post:\n      description: This operation can be used to validate and AsyncAPI Specification\n        and retrieve a summary. Provide either 'url' or 'file' to specify the definition.\n      operationId: validateAsyncAPISpecification\n      parameters:\n      - description: Specify whether to return the full content of the AsyncAPI specification\n          in the response. This is only applicable when using url based validation\n        explode: true\n        in: query\n        name: returnContent\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                url:\n                  description: AsyncAPI definition url\n                  type: string\n                file:\n                  description: AsyncAPI definition as a file\n                  format: binary\n                  type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsyncAPISpecificationValidationResponse'\n          description: OK. API definition validation information is returned\n          headers:\n            Content-Type:\n              description: The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: Validate an AsyncAPI Specification\n      tags:\n      - Validation\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /apis/import-asyncapi:\n    post:\n      description: |-\n        This operation can be used to create and API from the AsyncAPI Specification. Provide either 'url' or 'file' to specify the definition.\n        Specify additionalProperties with **at least** API's name, version, context and endpointConfig.\n      operationId: importAsyncAPISpecification\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: Definition to upload as a file\n                  format: binary\n                  type: string\n                url:\n                  description: Definition url\n                  type: string\n                additionalProperties:\n                  description: Additional attributes specified as a stringified JSON\n                    with API's schema\n                  type: string\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/API'\n          description: Created. Successful response with the newly created object\n            as entity in the body. Location header contains URL of newly created entity.\n          headers:\n            Etag:\n              description: Entity Tag of the respons resource. Used by caches, or\n                in conditional requests (Will be supported in the future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-type:\n              description: The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"415\":\n          content:\n            application/json:\n              example:\n                code: 415\n                message: Unsupported media type\n                description: The entity of the request was not in a supported format\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsupported Media Type. The entity of the request was not in\n            a supported format.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: import an AsyncAPI Specification\n      tags:\n      - APIs\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /apis/{apiId}/asyncapi:\n    get:\n      description: |\n        This operation can be used to retrieve the AsyncAPI definition of an API.\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: |\n            OK.\n            Requested AsyncAPI definition of the API is returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Willl= be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has beed modified the last time.\n                Used by caches, or in conditional request (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n        - apim:api_definition_view\n      summary: Get AsyncAPI definition\n      tags:\n      - APIs\n      x-accepts: application/json\n    put:\n      description: |\n        This operation can be used to update the AsyncAPI definition of an existing API. AsyncAPI definition to be updated is passed as a form data parameter 'apiDefinition'.\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                apiDefinition:\n                  description: AsyncAPI definition of the API\n                  type: string\n                url:\n                  description: AsyncAPI definition URL of the API\n                  type: string\n                file:\n                  description: AsyncAPI definition as a file\n                  format: binary\n                  type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: |\n            OK.\n            Successful response with updated AsyncAPI definition\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has beed modified the last time.\n                Use =d by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: Update AsyncAPI definition\n      tags:\n      - APIs\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /apis/{apiId}/environments/{envId}/keys:\n    get:\n      description: |\n        This operation can be used to retrieve environment specific API properties from an existing API.\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          **Env ID** consisting of the **UUID** of the gateway environment.\n        explode: false\n        in: path\n        name: envId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnvironmentProperties'\n          description: |\n            OK.\n            Successful response with environment specific API properties\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: get environment specific API properties\n      tags:\n      - APIs\n      x-accepts: application/json\n    put:\n      description: |\n        This operation can be used to update the environment specific API properties of an existing API.\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          **Env ID** consisting of the **UUID** of the gateway environment.\n        explode: false\n        in: path\n        name: envId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EnvironmentProperties'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnvironmentProperties'\n          description: |\n            OK.\n            Successful response with environment specific API properties\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:api_create\n        - apim:api_manage\n      summary: Update environment specific API properties\n      tags:\n      - APIs\n      x-contentType: application/json\n      x-accepts: application/json\n  /apis/{apiId}/operation-policies:\n    get:\n      description: |\n        This operation provides you a list of all applicabale operation policies for an API\n      operationId: getAllAPISpecificOperationPolicies\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Maximum size of resource array to return.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 25\n          type: integer\n        style: form\n      - description: |\n          Starting point within the complete list of items qualified.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      - description: -Not supported yet-\n        explode: true\n        in: query\n        name: query\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationPolicyDataList'\n          description: |\n            OK.\n            List of qualifying policies is returned.\n          headers:\n            Content-Type:\n              description: The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n        - apim:mediation_policy_view\n        - apim:mediation_policy_manage\n        - apim:api_mediation_policy_manage\n      summary: |\n        Get all API specific operation policies for an API\n      tags:\n      - API Operation Policies\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v2/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/operation-policies\"'\n      x-accepts: application/json\n    post:\n      description: |\n        This operation can be used to add an API specifc operation policy. This policy cannot be used in other APIs.\n      operationId: addAPISpecificOperationPolicy\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                policySpecFile:\n                  description: Policy specification to upload\n                  format: binary\n                  type: string\n                synapsePolicyDefinitionFile:\n                  description: Operation policy definition of synapse gateway to upload\n                  format: binary\n                  type: string\n                ccPolicyDefinitionFile:\n                  description: Operation policy definition of choreo connect to upload\n                  format: binary\n                  type: string\n              required:\n              - type\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationPolicyData'\n          description: |\n            OK.\n            Operation policy uploaded\n          headers:\n            Location:\n              description: |\n                The URL of the uploaded operation policy of the API.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_manage\n        - apim:mediation_policy_create\n        - apim:mediation_policy_manage\n        - apim:api_mediation_policy_manage\n      summary: Add an API specific operation policy\n      tags:\n      - API Operation Policies\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: multipart/form-data\" -F policySpecFile=@setHeader.yaml\n          -F policyDefinitionFile=@setHeader.j2 \"https://127.0.0.1:9443/api/am/publisher/v2/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/operation-policies\"'\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /apis/{apiId}/operation-policies/{operationPolicyId}:\n    delete:\n      description: |\n        This operation can be used to delete an existing API specific opreation policy by providing the Id of the API and the Id of the policy.\n      operationId: deleteAPISpecificOperationPolicyByPolicyId\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Operation policy Id\n        explode: false\n        in: path\n        name: operationPolicyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Resource successfully deleted.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_manage\n        - apim:mediation_policy_create\n        - apim:mediation_policy_manage\n        - apim:api_mediation_policy_manage\n      summary: Delete an API Specific Operation Policy\n      tags:\n      - API Operation Policies\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v2/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/operation-policies/f56eb8b4-128c-45aa-ad35-9c87a546261a\"'\n      x-accepts: application/json\n    get:\n      description: |\n        This operation can be used to retrieve a particular API specific operation policy.\n      operationId: getOperationPolicyForAPIByPolicyId\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Operation policy Id\n        explode: false\n        in: path\n        name: operationPolicyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationPolicyData'\n          description: |\n            OK.\n            Operation policy returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n        - apim:mediation_policy_view\n        - apim:mediation_policy_manage\n        - apim:api_mediation_policy_manage\n      summary: Get policy details of an API specific policy\n      tags:\n      - API Operation Policies\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v2/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/operation-policies/f56eb8b4-128c-45aa-ad35-9c87a546261a\"'\n      x-accepts: application/json\n  /apis/{apiId}/operation-policies/{operationPolicyId}/content:\n    get:\n      description: |\n        This operation can be used to download a particular API specific operation policy.\n      operationId: getAPISpecificOperationPolicyContentByPolicyId\n      parameters:\n      - description: |\n          **API ID** consisting of the **UUID** of the API.\n        explode: false\n        in: path\n        name: apiId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Operation policy Id\n        explode: false\n        in: path\n        name: operationPolicyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/zip:\n              schema:\n                format: binary\n                type: string\n          description: |\n            OK.\n            Operation policy returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_view\n        - apim:api_manage\n        - apim:mediation_policy_view\n        - apim:mediation_policy_manage\n        - apim:api_mediation_policy_manage\n      summary: Download an API Specific Operation Policy\n      tags:\n      - API Operation Policies\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v2/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/operation-policies/f56eb8b4-128c-45aa-ad35-9c87a546261a/content\"'\n      x-accepts: application/json\n  /operation-policies:\n    get:\n      description: |\n        This operation provides you a list of all common operation policies that can be used by any API\n      operationId: getAllCommonOperationPolicies\n      parameters:\n      - description: |\n          Maximum size of policy array to return.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: |\n          Starting point within the complete list of items qualified.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      - description: |\n          **Search condition**.\n\n          You can search in attributes by using an **\"\u003cattribute\u003e:\"** modifier.\n\n          Eg.\n          \"name:addHeader\" will match an API Policy if the provider of the API Policy contains \"addHeader\".\n          \"version:\"v1\"\" will match an API Policy if the provider of the API Policy contains \"v1\".\n\n          Also you can use combined modifiers\n          Eg.\n          name:addHeader\u0026version:v1 will match an API Policy if the name of the API Policy is addHeader and version is v1.\n\n          Supported attribute modifiers are [**version, name**]\n\n          If query attributes are provided, this returns all API policies available under the given limit.\n\n          Please note that you need to use encoded URL (URL encoding) if you are using a client which does not support URL encoding (such as curl)\n        explode: true\n        in: query\n        name: query\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationPolicyDataList'\n          description: |\n            OK.\n            List of qualifying policies is returned.\n          headers:\n            Content-Type:\n              description: The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:common_operation_policy_view\n        - apim:common_operation_policy_manage\n        - apim:policies_import_export\n      summary: |\n        Get all common operation policies to all the APIs\n      tags:\n      - Operation Policies\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v2/operation-policies\"'\n      x-accepts: application/json\n    post:\n      description: |\n        This operation can be used to add a new common operation policy.\n      operationId: addCommonOperationPolicy\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                policySpecFile:\n                  description: Operation policy specification to upload\n                  format: binary\n                  type: string\n                synapsePolicyDefinitionFile:\n                  description: Operation policy definition of synapse gateway to upload\n                  format: binary\n                  type: string\n                ccPolicyDefinitionFile:\n                  description: Operation policy definition of choreo connect to upload\n                  format: binary\n                  type: string\n              required:\n              - type\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationPolicyData'\n          description: |\n            OK.\n            Shared operation policy uploaded\n          headers:\n            Location:\n              description: |\n                The URL of the uploaded common operation policy of the API.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:common_operation_policy_manage\n      summary: Add a new common operation policy\n      tags:\n      - Operation Policies\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: multipart/form-data\" -F policySpecFile=@setHeader.yaml\n          -F policyDefinitionFile=@setHeader.j2 \"https://127.0.0.1:9443/api/am/publisher/v2/operation-policies\"'\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /operation-policies/{operationPolicyId}:\n    delete:\n      description: |\n        This operation can be used to delete an existing common opreation policy by providing the Id of the policy.\n      operationId: deleteCommonOperationPolicyByPolicyId\n      parameters:\n      - description: |\n          Operation policy Id\n        explode: false\n        in: path\n        name: operationPolicyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Resource successfully deleted.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:common_operation_policy_manage\n        - apim:policies_import_export\n      summary: Delete a common operation policy\n      tags:\n      - Operation Policies\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v2/operation-policies/f56eb8b4-128c-45aa-ad35-9c87a546261a\"'\n      x-accepts: application/json\n    get:\n      description: |\n        This operation can be used to retrieve a particular common operation policy.\n      operationId: getCommonOperationPolicyByPolicyId\n      parameters:\n      - description: |\n          Operation policy Id\n        explode: false\n        in: path\n        name: operationPolicyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationPolicyData'\n          description: |\n            OK.\n            Operation policy returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:common_operation_policy_view\n        - apim:common_operation_policy_manage\n        - apim:policies_import_export\n      summary: Get the details of a common operation policy by providing policy ID\n      tags:\n      - Operation Policies\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v2/operation-policies/f56eb8b4-128c-45aa-ad35-9c87a546261a\"'\n      x-accepts: application/json\n  /operation-policies/export:\n    get:\n      description: |\n        This operation provides you to export a preferred common API policy\n      operationId: exportOperationPolicy\n      parameters:\n      - description: Policy name\n        explode: true\n        in: query\n        name: name\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Version of the policy\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Format of the policy definition file\n        explode: true\n        in: query\n        name: format\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/zip:\n              schema:\n                format: binary\n                type: string\n          description: |\n            OK.\n            Export Successful.\n          headers:\n            Content-Type:\n              description: The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:policies_import_export\n      summary: |\n        Export an API Policy by its name and version\n      tags:\n      - Import Export\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/operation-policies/export?name=addHeader\u0026version=v1\"\n          \u003e addHeader_v1.zip'\n      x-accepts: application/json\n  /operation-policies/import:\n    post:\n      description: |\n        This operation can be used to import an API Policy.\n      operationId: importOperationPolicy\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: Zip archive consisting on exported policy configuration\n                  format: binary\n                  type: string\n              required:\n              - file\n      responses:\n        \"200\":\n          description: |\n            Created.\n            Policy Imported Successfully.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"409\":\n          content:\n            application/json:\n              example:\n                code: 409\n                message: Conflict\n                description: Specified resource already exists\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Conflict. Specified resource already exists.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:policies_import_export\n      summary: Import an API Policy\n      tags:\n      - Import Export\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F file=add_header_v1.zip \"https://127.0.0.1:9443/api/am/publisher/v4/operation-policies/import\"'\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /operation-policies/{operationPolicyId}/content:\n    get:\n      description: |\n        This operation can be used to download a selected common operation policy.\n      operationId: getCommonOperationPolicyContentByPolicyId\n      parameters:\n      - description: |\n          Operation policy Id\n        explode: false\n        in: path\n        name: operationPolicyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/zip:\n              schema:\n                format: binary\n                type: string\n          description: |\n            OK.\n            Operation policy returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:common_operation_policy_view\n        - apim:common_operation_policy_manage\n      summary: Download a common operation policy\n      tags:\n      - Operation Policies\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v2/operation-policies/f56eb8b4-128c-45aa-ad35-9c87a546261a/content\"'\n      x-accepts: application/json\n  /api-products/change-lifecycle:\n    post:\n      description: |\n        This operation is used to change the lifecycle of an API Product.\n        Eg: Publish an API Product which is in `CREATED` state. In order to change the lifecycle, we need to provide the\n        lifecycle `action` as a query parameter.\n\n        For example, to Publish an API Product, `action` should be `Publish`. Note that the `Re-publish` action is\n        available only after calling `Block`.\n\n        Some actions supports providing additional paramters which should be provided as `lifecycleChecklist` parameter.\n        Please see parameters table for more information.\n      operationId: changeAPIProductLifecycle\n      parameters:\n      - description: |\n          The action to demote or promote the state of the API Product.\n\n          Supported actions are [ **Publish**, **Deploy as a Prototype**, **Demote to Created**, **Block**, **Deprecate**, **Re-Publish**, **Retire** ]\n        explode: true\n        in: query\n        name: action\n        required: true\n        schema:\n          enum:\n          - Publish\n          - Deploy as a Prototype\n          - Demote to Created\n          - Block\n          - Deprecate\n          - Re-Publish\n          - Retire\n          type: string\n        style: form\n      - description: |\n          Supported checklist items are as follows.\n          1. **Deprecate old versions after publishing the API**: Setting this to true will deprecate older versions of a particular API Product when it is promoted to Published state from Created state.\n          2. **Requires re-subscription when publishing the API**: If you set this to true, users need to re subscribe to the API Products although they may have subscribed to an older version.\n          You can specify additional checklist items by using an **\"attribute:\"** modifier.\n          Eg: \"Deprecate old versions after publishing the API:true\" will deprecate older versions of a particular API Product when it is promoted to Published state from Created state. Multiple checklist items can be given in \"attribute1:true, attribute2:false\" format.\n          **Sample CURL :**  curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" -X POST \"https://localhost:9443/api/am/publisher/v4/api-products/change-lifecycle?apiId=890a4f4d-09eb-4877-a323-57f6ce2ed79b\u0026action=Publish\u0026lifecycleChecklist=Deprecate%20old%20versions%20after%20publishing%20the%20API%3Atrue,Requires%20re-subscription%20when%20publishing%20the%20API%3Afalse\"\n        explode: true\n        in: query\n        name: lifecycleChecklist\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product.\n          The combination of the provider, name and the version of the API Product is also accepted as a valid API Product ID.\n          Should be formatted as **provider-name-version**.\n        explode: true\n        in: query\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: |\n          Validator for conditional requests; based on ETag.\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowResponse'\n          description: |\n            OK.\n            Lifecycle changed successfully.\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"401\":\n          content:\n            application/json:\n              example:\n                code: 401\n                message: Unauthorized\n                description: The user is not authorized\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized. The user is not authorized.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"409\":\n          content:\n            application/json:\n              example:\n                code: 409\n                message: Conflict\n                description: Specified resource already exists\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Conflict. Specified resource already exists.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_publish\n        - apim:api_manage\n        - apim:api_product_import_export\n      summary: Change API Product LC Status\n      tags:\n      - API Product Lifecycle\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/change-lifecycle?apiId=890a4f4d-09eb-4877-a323-57f6ce2ed79b\u0026action=Publish\"'\n      x-accepts: application/json\n  /api-products/{apiProductId}/lifecycle-history:\n    get:\n      description: |\n        This operation can be used to retrieve Lifecycle state change history of the API Products.\n      operationId: getAPIProductLifecycleHistory\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LifecycleHistory'\n          description: |\n            OK.\n            Lifecycle state change history returned successfully.\n        \"401\":\n          content:\n            application/json:\n              example:\n                code: 401\n                message: Unauthorized\n                description: The user is not authorized\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized. The user is not authorized.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_publish\n        - apim:api_manage\n      summary: Get Lifecycle State Change History of the API Products.\n      tags:\n      - API Product Lifecycle\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/890a4f4d-09eb-4877-a323-57f6ce2ed79b/lifecycle-history\"'\n      x-accepts: application/json\n  /api-products/{apiProductId}/lifecycle-state:\n    get:\n      description: |\n        This operation can be used to retrieve Lifecycle state data of the API Product.\n      operationId: getAPIProductLifecycleState\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource.\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LifecycleState'\n          description: |\n            OK.\n            Lifecycle state data returned successfully.\n        \"401\":\n          content:\n            application/json:\n              example:\n                code: 401\n                message: Unauthorized\n                description: The user is not authorized\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized. The user is not authorized.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_publish\n        - apim:api_create\n        - apim:api_manage\n      summary: Get Lifecycle State Data of the API Product.\n      tags:\n      - API Product Lifecycle\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/890a4f4d-09eb-4877-a323-57f6ce2ed79b/lifecycle-state\"'\n      x-accepts: application/json\n  /api-products/{apiProductId}/lifecycle-state/pending-tasks:\n    delete:\n      description: |\n        This operation can be used to remove pending lifecycle state change requests that are in pending state\n      operationId: deleteAPIProductLifecycleStatePendingTasks\n      parameters:\n      - description: |\n          **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n        explode: false\n        in: path\n        name: apiProductId\n        required: true\n        schema:\n          type: string\n          x-encoded: true\n        style: simple\n        x-encoded: true\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Lifecycle state change pending task removed successfully.\n        \"401\":\n          content:\n            application/json:\n              example:\n                code: 401\n                message: Unauthorized\n                description: The user is not authorized\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized. The user is not authorized.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:api_publish\n        - apim:api_manage\n      summary: Delete Pending Lifecycle State Change Tasks\n      tags:\n      - API Product Lifecycle\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/publisher/v4/api-products/890a4f4d-09eb-4877-a323-57f6ce2ed79b/lifecycle-state/pending-tasks\"'\n      x-accepts: application/json\ncomponents:\n  parameters:\n    replyLimit:\n      description: |\n        Maximum size of replies array to return.\n      explode: true\n      in: query\n      name: replyLimit\n      required: false\n      schema:\n        default: 25\n        type: integer\n      style: form\n    replyOffset:\n      description: |\n        Starting point within the complete list of replies.\n      explode: true\n      in: query\n      name: replyOffset\n      required: false\n      schema:\n        default: 0\n        type: integer\n      style: form\n    commentId:\n      description: |\n        Comment Id\n      explode: false\n      in: path\n      name: commentId\n      required: true\n      schema:\n        type: string\n      style: simple\n    parentCommentID:\n      description: |\n        ID of the perent comment.\n      explode: true\n      in: query\n      name: replyTo\n      required: false\n      schema:\n        type: string\n      style: form\n    includeCommenterInfo:\n      description: |\n        Whether we need to display commentor details.\n      explode: true\n      in: query\n      name: includeCommenterInfo\n      required: false\n      schema:\n        default: false\n        type: boolean\n      style: form\n    apiId:\n      description: |\n        **API ID** consisting of the **UUID** of the API.\n      explode: false\n      in: path\n      name: apiId\n      required: true\n      schema:\n        type: string\n      style: simple\n    endpointId:\n      description: |\n        **Endpoint ID** consisting of the **UUID** of the Endpoint**.\n      explode: false\n      in: path\n      name: endpointId\n      required: true\n      schema:\n        type: string\n      style: simple\n    apiId-Q:\n      description: |\n        **API ID** consisting of the **UUID** of the API.\n        The combination of the provider of the API, name of the API and the version is also accepted as a valid API I.\n        Should be formatted as **provider-name-version**.\n      explode: true\n      in: query\n      name: apiId\n      required: true\n      schema:\n        type: string\n      style: form\n    apiId-Q-Opt:\n      description: |\n        **API ID** consisting of the **UUID** of the API.\n        The combination of the provider of the API, name of the API and the version is also accepted as a valid API I.\n        Should be formatted as **provider-name-version**.\n      explode: true\n      in: query\n      name: apiId\n      required: false\n      schema:\n        type: string\n      style: form\n    labelType-Q:\n      description: |\n        **API ID** consisting of the **UUID** of the API.\n        The combination of the provider of the API, name of the API and the version is also accepted as a valid API I.\n        Should be formatted as **provider-name-version**.\n      explode: true\n      in: query\n      name: labelType\n      required: false\n      schema:\n        type: string\n      style: form\n    name:\n      description: |\n        Name of the API\n      explode: false\n      in: path\n      name: name\n      required: true\n      schema:\n        type: string\n      style: simple\n    version:\n      description: |\n        Version of the API\n      explode: false\n      in: path\n      name: version\n      required: true\n      schema:\n        type: string\n      style: simple\n    apiName-Q:\n      description: |\n        Name of the API\n      explode: true\n      in: query\n      name: name\n      required: false\n      schema:\n        type: string\n      style: form\n    apiVersion-Q:\n      description: |\n        Version of the API\n      explode: true\n      in: query\n      name: version\n      required: false\n      schema:\n        type: string\n      style: form\n    apiProvider-Q:\n      description: |\n        Provider name of the API\n      explode: true\n      in: query\n      name: providerName\n      required: false\n      schema:\n        type: string\n      style: form\n    documentId:\n      description: |\n        Document Identifier\n      explode: false\n      in: path\n      name: documentId\n      required: true\n      schema:\n        type: string\n      style: simple\n    applicationId:\n      description: |\n        **Application Identifier** consisting of the UUID of the Application.\n      explode: false\n      in: path\n      name: applicationId\n      required: true\n      schema:\n        type: string\n      style: simple\n    subscriptionId:\n      description: |\n        Subscription Id\n      explode: false\n      in: path\n      name: subscriptionId\n      required: true\n      schema:\n        type: string\n      style: simple\n    resourcePolicyId:\n      description: |\n        registry resource Id\n      explode: false\n      in: path\n      name: resourcePolicyId\n      required: true\n      schema:\n        type: string\n      style: simple\n    subscriptionId-Q:\n      description: |\n        Subscription Id\n      explode: true\n      in: query\n      name: subscriptionId\n      required: true\n      schema:\n        type: string\n      style: form\n    operationPolicyId:\n      description: |\n        Operation policy Id\n      explode: false\n      in: path\n      name: operationPolicyId\n      required: true\n      schema:\n        type: string\n      style: simple\n    revisionId:\n      description: |\n        Revision ID of an API\n      explode: false\n      in: path\n      name: revisionId\n      required: true\n      schema:\n        type: string\n      style: simple\n    revisionId-Q:\n      description: |\n        Revision ID of an API\n      explode: true\n      in: query\n      name: revisionId\n      required: false\n      schema:\n        type: string\n      style: form\n    revisionNum-Q:\n      description: |\n        Revision Number of an API\n      explode: true\n      in: query\n      name: revisionNumber\n      required: false\n      schema:\n        type: string\n      style: form\n    deploymentId:\n      description: |\n        Base64 URL encoded value of the name of an environment\n      explode: false\n      in: path\n      name: deploymentId\n      required: true\n      schema:\n        type: string\n      style: simple\n    policyName:\n      description: |\n        Tier name\n      explode: false\n      in: path\n      name: policyName\n      required: true\n      schema:\n        type: string\n      style: simple\n    policyName-Q:\n      description: |\n        Name of the policy\n      explode: true\n      in: query\n      name: policyName\n      required: true\n      schema:\n        type: string\n      style: form\n    policyLevel:\n      description: |\n        List API or Application or Resource type policies.\n      explode: false\n      in: path\n      name: policyLevel\n      required: true\n      schema:\n        enum:\n        - api\n        - subcription\n        type: string\n      style: simple\n    policyLevel-Q:\n      description: |\n        List API or Application or Resource type policies.\n      explode: true\n      in: query\n      name: policyLevel\n      required: true\n      schema:\n        enum:\n        - api\n        - subcription\n        type: string\n      style: form\n    limit:\n      description: |\n        Maximum size of resource array to return.\n      explode: true\n      in: query\n      name: limit\n      required: false\n      schema:\n        default: 25\n        type: integer\n      style: form\n    policyLimit:\n      description: |\n        Maximum size of policy array to return.\n      explode: true\n      in: query\n      name: limit\n      required: false\n      schema:\n        type: integer\n      style: form\n    Accept:\n      description: |\n        Media types acceptable for the response. Default is application/json.\n      explode: false\n      in: header\n      name: Accept\n      required: false\n      schema:\n        default: application/json\n        type: string\n      style: simple\n    offset:\n      description: |\n        Starting point within the complete list of items qualified.\n      explode: true\n      in: query\n      name: offset\n      required: false\n      schema:\n        default: 0\n        type: integer\n      style: form\n    sortBy:\n      description: |\n        Criteria for sorting.\n      explode: true\n      in: query\n      name: sortBy\n      required: false\n      schema:\n        default: createdTime\n        enum:\n        - apiName\n        - version\n        - createdTime\n        - status\n        type: string\n      style: form\n    sortOrder:\n      description: |\n        Order of sorting(ascending/descending).\n      explode: true\n      in: query\n      name: sortOrder\n      required: false\n      schema:\n        default: desc\n        enum:\n        - asc\n        - desc\n        type: string\n      style: form\n    If-None-Match:\n      description: |\n        Validator for conditional requests; based on the ETag of the formerly retrieved\n        variant of the resource.\n      explode: false\n      in: header\n      name: If-None-Match\n      required: false\n      schema:\n        type: string\n      style: simple\n    If-Match:\n      description: |\n        Validator for conditional requests; based on ETag.\n      explode: false\n      in: header\n      name: If-Match\n      required: false\n      schema:\n        type: string\n      style: simple\n    scopeName:\n      description: |\n        Scope name\n      explode: false\n      in: path\n      name: scopeId\n      required: true\n      schema:\n        type: string\n      style: simple\n    scopeId:\n      description: |\n        Scope Id consisting the UUID of the shared scope\n      explode: false\n      in: path\n      name: scopeId\n      required: true\n      schema:\n        type: string\n      style: simple\n    threatProtectionPolicyId:\n      description: |\n        The UUID of a Policy\n      explode: false\n      in: path\n      name: policyId\n      required: true\n      schema:\n        type: string\n      style: simple\n    roleId:\n      description: |\n        The Base 64 URL encoded role name with domain. If the given role is in secondary user-store, role ID should be\n        derived as Base64URLEncode({user-store-name}/{role-name}). If the given role is in PRIMARY user-store, role ID\n        can be derived as Base64URLEncode(role-name)\n      explode: false\n      in: path\n      name: roleId\n      required: true\n      schema:\n        type: string\n      style: simple\n    requestedTenant:\n      description: |\n        For cross-tenant invocations, this is used to specify the tenant domain, where the resource need to be\n          retirieved from.\n      explode: false\n      in: header\n      name: X-WSO2-Tenant\n      required: false\n      schema:\n        type: string\n      style: simple\n    apiProductId:\n      description: |\n        **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.\n      explode: false\n      in: path\n      name: apiProductId\n      required: true\n      schema:\n        type: string\n        x-encoded: true\n      style: simple\n      x-encoded: true\n    tenantDomain:\n      description: |\n        The domain of a specific tenant\n      explode: false\n      in: path\n      name: tenantDomain\n      required: true\n      schema:\n        type: string\n      style: simple\n    alertType:\n      description: The alert type.\n      explode: false\n      in: path\n      name: alertType\n      required: true\n      schema:\n        type: string\n      style: simple\n    configurationId:\n      description: The alert configuration id.\n      explode: false\n      in: path\n      name: configurationId\n      required: true\n      schema:\n        type: string\n      style: simple\n    tierQuotaType:\n      description: Filter the subscription base on tier quota type\n      explode: true\n      in: query\n      name: tierQuotaType\n      required: false\n      schema:\n        type: string\n      style: form\n    envId:\n      description: |\n        **Env ID** consisting of the **UUID** of the gateway environment.\n      explode: false\n      in: path\n      name: envId\n      required: true\n      schema:\n        type: string\n      style: simple\n    apiProductId-Q:\n      description: |\n        **API Product ID** consisting of the **UUID** of the API Product.\n        The combination of the provider, name and the version of the API Product is also accepted as a valid API Product ID.\n        Should be formatted as **provider-name-version**.\n      explode: true\n      in: query\n      name: apiProductId\n      required: true\n      schema:\n        type: string\n      style: form\n  requestBodies:\n    threatProtectionPolicy:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ThreatProtectionPolicy'\n      description: |\n        Threat protection policy request parameter\n      required: true\n    Post_request_body:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Post_request_body'\n      required: true\n    Patch_request_body:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Patch_request_body'\n      required: true\n  responses:\n    BadRequest:\n      content:\n        application/json:\n          example:\n            code: 400\n            message: Bad Request\n            description: Invalid request or validation error\n            moreInfo: \"\"\n            error: []\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Bad Request. Invalid request or validation error.\n    Conflict:\n      content:\n        application/json:\n          example:\n            code: 409\n            message: Conflict\n            description: Specified resource already exists\n            moreInfo: \"\"\n            error: []\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Conflict. Specified resource already exists.\n    Forbidden:\n      content:\n        application/json:\n          example:\n            code: 403\n            message: Forbidden\n            description: The request must be conditional but no condition has been\n              specified\n            moreInfo: \"\"\n            error: []\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Forbidden. The request must be conditional but no condition has\n        been specified.\n    InternalServerError:\n      content:\n        application/json:\n          example:\n            code: 500\n            message: Internal Server Error\n            description: The server encountered an internal error. Please contact\n              administrator.\n            moreInfo: \"\"\n            error: []\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Internal Server Error.\n    NotAcceptable:\n      content:\n        application/json:\n          example:\n            code: 406\n            message: Not Acceptable\n            description: The requested media type is not supported\n            moreInfo: \"\"\n            error: []\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Not Acceptable. The requested media type is not supported.\n    NotFound:\n      content:\n        application/json:\n          example:\n            code: 404\n            message: Not Found\n            description: The specified resource does not exist\n            moreInfo: \"\"\n            error: []\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Not Found. The specified resource does not exist.\n    PreconditionFailed:\n      content:\n        application/json:\n          example:\n            code: 412\n            message: Precondition Failed\n            description: The request has not been performed because one of the preconditions\n              is not met\n            moreInfo: \"\"\n            error: []\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Precondition Failed. The request has not been performed because\n        one of the preconditions is not met.\n    Unauthorized:\n      content:\n        application/json:\n          example:\n            code: 401\n            message: Unauthorized\n            description: The user is not authorized\n            moreInfo: \"\"\n            error: []\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Unauthorized. The user is not authorized.\n    UnsupportedMediaType:\n      content:\n        application/json:\n          example:\n            code: 415\n            message: Unsupported media type\n            description: The entity of the request was not in a supported format\n            moreInfo: \"\"\n            error: []\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Unsupported Media Type. The entity of the request was not in a\n        supported format.\n  schemas:\n    Comment:\n      example:\n        updatedTime: 2021-02-12-19:57:25\n        commenterInfo:\n          firstName: John\n          lastName: David\n          fullName: John David\n        createdBy: admin\n        createdTime: 2021-02-11-09:57:25\n        parentCommentId: 6f38aea2-f41e-4ac9-b3f2-a9493d00ba97\n        id: 943d3002-000c-42d3-a1b9-d6559f8a4d49\n        entryPoint: devPortal\n        category: general\n        content: This is a comment\n      properties:\n        id:\n          example: 943d3002-000c-42d3-a1b9-d6559f8a4d49\n          readOnly: true\n          type: string\n        content:\n          example: This is a comment\n          maxLength: 512\n          type: string\n        createdTime:\n          example: 2021-02-11-09:57:25\n          readOnly: true\n          type: string\n        createdBy:\n          example: admin\n          readOnly: true\n          type: string\n        updatedTime:\n          example: 2021-02-12-19:57:25\n          readOnly: true\n          type: string\n        category:\n          default: general\n          example: general\n          readOnly: true\n          type: string\n        parentCommentId:\n          example: 6f38aea2-f41e-4ac9-b3f2-a9493d00ba97\n          readOnly: true\n          type: string\n        entryPoint:\n          enum:\n          - devPortal\n          - publisher\n          readOnly: true\n          type: string\n        commenterInfo:\n          $ref: '#/components/schemas/CommenterInfo'\n        replies:\n          $ref: '#/components/schemas/CommentList'\n      required:\n      - content\n      title: Comment\n      type: object\n    CommentList:\n      example:\n        pagination:\n          next: next\n          total: 10\n          offset: 0\n          previous: previous\n          limit: 1\n        count: 1\n        list:\n        - updatedTime: 2021-02-12-19:57:25\n          commenterInfo:\n            firstName: John\n            lastName: David\n            fullName: John David\n          createdBy: admin\n          createdTime: 2021-02-11-09:57:25\n          parentCommentId: 6f38aea2-f41e-4ac9-b3f2-a9493d00ba97\n          id: 943d3002-000c-42d3-a1b9-d6559f8a4d49\n          entryPoint: devPortal\n          category: general\n          content: This is a comment\n        - updatedTime: 2021-02-12-19:57:25\n          commenterInfo:\n            firstName: John\n            lastName: David\n            fullName: John David\n          createdBy: admin\n          createdTime: 2021-02-11-09:57:25\n          parentCommentId: 6f38aea2-f41e-4ac9-b3f2-a9493d00ba97\n          id: 943d3002-000c-42d3-a1b9-d6559f8a4d49\n          entryPoint: devPortal\n          category: general\n          content: This is a comment\n      properties:\n        count:\n          description: |\n            Number of Comments returned.\n          example: 1\n          readOnly: true\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/Comment'\n          readOnly: true\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      title: Comments List\n      type: object\n    CommenterInfo:\n      example:\n        firstName: John\n        lastName: David\n        fullName: John David\n      properties:\n        firstName:\n          example: John\n          type: string\n        lastName:\n          example: David\n          type: string\n        fullName:\n          example: John David\n          type: string\n      type: object\n    APIList:\n      example:\n        pagination:\n          next: next\n          total: 10\n          offset: 0\n          previous: previous\n          limit: 1\n        count: 1\n        list:\n        - updatedTime: 2021-02-11 09:57:25\n          audience: PUBLIC\n          hasThumbnail: true\n          advertiseOnly: true\n          workflowStatus: APPROVED\n          description: A calculator API that supports basic operations\n          type: HTTP\n          version: 1.0.0\n          provider: admin\n          gatewayVendor: wso2\n          securityScheme:\n          - securityScheme\n          - securityScheme\n          name: CalculatorAPI\n          context: CalculatorAPI\n          createdTime: 2021-02-11 09:57:25\n          id: 01234567-0123-0123-0123-012345678901\n          additionalProperties:\n          - display: true\n            name: name\n            value: value\n          - display: true\n            name: name\n            value: value\n          additionalPropertiesMap:\n            key:\n              display: false\n              name: name\n              value: value\n          lifeCycleStatus: CREATED\n        - updatedTime: 2021-02-11 09:57:25\n          audience: PUBLIC\n          hasThumbnail: true\n          advertiseOnly: true\n          workflowStatus: APPROVED\n          description: A calculator API that supports basic operations\n          type: HTTP\n          version: 1.0.0\n          provider: admin\n          gatewayVendor: wso2\n          securityScheme:\n          - securityScheme\n          - securityScheme\n          name: CalculatorAPI\n          context: CalculatorAPI\n          createdTime: 2021-02-11 09:57:25\n          id: 01234567-0123-0123-0123-012345678901\n          additionalProperties:\n          - display: true\n            name: name\n            value: value\n          - display: true\n            name: name\n            value: value\n          additionalPropertiesMap:\n            key:\n              display: false\n              name: name\n              value: value\n          lifeCycleStatus: CREATED\n      properties:\n        count:\n          description: |\n            Number of APIs returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/APIInfo'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      title: API List\n      type: object\n    APIMetadataList:\n      example:\n        pagination:\n          next: next\n          total: 10\n          offset: 0\n          previous: previous\n          limit: 1\n        count: 1\n        list:\n        - provider: admin\n          name: CalculatorAPI\n          context: CalculatorAPI\n          id: 01234567-0123-0123-0123-012345678901\n          version: 1.0.0\n        - provider: admin\n          name: CalculatorAPI\n          context: CalculatorAPI\n          id: 01234567-0123-0123-0123-012345678901\n          version: 1.0.0\n      properties:\n        count:\n          description: |\n            Number of APIs returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/APIMetadata'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      title: API metadata List\n      type: object\n    APIInfo:\n      example:\n        updatedTime: 2021-02-11 09:57:25\n        audience: PUBLIC\n        hasThumbnail: true\n        advertiseOnly: true\n        workflowStatus: APPROVED\n        description: A calculator API that supports basic operations\n        type: HTTP\n        version: 1.0.0\n        provider: admin\n        gatewayVendor: wso2\n        securityScheme:\n        - securityScheme\n        - securityScheme\n        name: CalculatorAPI\n        context: CalculatorAPI\n        createdTime: 2021-02-11 09:57:25\n        id: 01234567-0123-0123-0123-012345678901\n        additionalProperties:\n        - display: true\n          name: name\n          value: value\n        - display: true\n          name: name\n          value: value\n        additionalPropertiesMap:\n          key:\n            display: false\n            name: name\n            value: value\n        lifeCycleStatus: CREATED\n      properties:\n        id:\n          example: 01234567-0123-0123-0123-012345678901\n          type: string\n        name:\n          example: CalculatorAPI\n          type: string\n        description:\n          example: A calculator API that supports basic operations\n          type: string\n        context:\n          example: CalculatorAPI\n          type: string\n        additionalProperties:\n          description: Map of custom properties of API\n          items:\n            $ref: '#/components/schemas/APIInfo_additionalProperties'\n          type: array\n        additionalPropertiesMap:\n          additionalProperties:\n            $ref: '#/components/schemas/APIInfo_additionalPropertiesMap'\n          type: object\n        version:\n          example: 1.0.0\n          type: string\n        provider:\n          description: |\n            If the provider value is not given, the user invoking the API will be used as the provider.\n          example: admin\n          type: string\n        type:\n          example: HTTP\n          type: string\n        audience:\n          description: The audience of the API. Accepted values are PUBLIC, SINGLE\n          enum:\n          - PUBLIC\n          - SINGLE\n          example: PUBLIC\n          type: string\n        lifeCycleStatus:\n          example: CREATED\n          type: string\n        workflowStatus:\n          example: APPROVED\n          type: string\n        hasThumbnail:\n          example: true\n          type: boolean\n        securityScheme:\n          items:\n            type: string\n          type: array\n        createdTime:\n          example: 2021-02-11 09:57:25\n          type: string\n        updatedTime:\n          example: 2021-02-11 09:57:25\n          type: string\n        gatewayVendor:\n          example: wso2\n          type: string\n        advertiseOnly:\n          example: true\n          type: boolean\n      title: API Info object with basic API details.\n      type: object\n    APIMetadata:\n      example:\n        provider: admin\n        name: CalculatorAPI\n        context: CalculatorAPI\n        id: 01234567-0123-0123-0123-012345678901\n        version: 1.0.0\n      properties:\n        id:\n          example: 01234567-0123-0123-0123-012345678901\n          type: string\n        name:\n          example: CalculatorAPI\n          type: string\n        context:\n          example: CalculatorAPI\n          type: string\n        version:\n          example: 1.0.0\n          type: string\n        provider:\n          description: |\n            If the provider value is not given, the user invoking the API will be used as the provider.\n          example: admin\n          type: string\n      title: API Info object with basic minimal API details.\n      type: object\n    Topic:\n      properties:\n        id:\n          description: id\n          example: \"1222344\"\n          readOnly: true\n          type: string\n        name:\n          example: PizzaShackAPI\n          maxLength: 50\n          minLength: 1\n          pattern: (^[^~!@#;:%^*()+={}|\\\\\u003c\u003e\"',\u0026$\\s+\\[\\]\\/]*$)\n          type: string\n        mode:\n          example: This is a simple API for Pizza Shack online pizza delivery store.\n          maxLength: 32766\n          type: string\n        description:\n          example: This is a simple API for Pizza Shack online pizza delivery store.\n          maxLength: 32766\n          type: string\n      required:\n      - description\n      - mode\n      - name\n      title: Topic object\n      type: object\n    TopicList:\n      properties:\n        count:\n          description: |\n            Number of Topics returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/Topic'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      title: Topic List\n      type: object\n    API:\n      example:\n        endpointImplementationType: INLINE\n        workflowStatus: APPROVED\n        isRevision: false\n        serviceInfo:\n          outdated: false\n          name: PetStore\n          version: 1.0.0\n          key: PetStore-1.0.0\n        authorizationHeader: Authorization\n        responseCachingEnabled: true\n        type: HTTP\n        enableSchemaValidation: false\n        context: pizza\n        createdTime: createdTime\n        id: 01234567-0123-0123-0123-012345678901\n        wsdlUrl: /apimgt/applicationdata/wsdls/admin--soap1.wsdl\n        accessControlRoles: []\n        audience: PUBLIC\n        visibility: PUBLIC\n        version: 1.0.0\n        enableSubscriberVerification: false\n        tags:\n        - pizza\n        - food\n        visibleTenants: []\n        cacheTimeout: 300\n        isDefaultVersion: false\n        gatewayVendor: wso2\n        asyncTransportProtocols:\n        - http\n        - https\n        apiThrottlingPolicy: Unlimited\n        websubSubscriptionConfiguration:\n          signingAlgorithm: signingAlgorithm\n          enable: false\n          signatureHeader: signatureHeader\n          secret: secret\n        name: PizzaShackAPI\n        revisionedApiId: 01234567-0123-0123-0123-012345678901\n        advertiseInfo:\n          apiOwner: admin\n          apiExternalProductionEndpoint: https://localhost:9443/devportal\n          apiExternalSandboxEndpoint: https://localhost:9443/devportal\n          advertised: true\n          vendor: WSO2\n          originalDevPortalUrl: https://localhost:9443/devportal\n        additionalProperties:\n        - display: true\n          name: name\n          value: value\n        - display: true\n          name: name\n          value: value\n        lifeCycleStatus: CREATED\n        accessControl: NONE\n        monetization:\n          enabled: true\n          properties:\n            key: properties\n        policies:\n        - Unlimited\n        description: This is a simple API for Pizza Shack online pizza delivery store.\n        visibleRoles: []\n        corsConfiguration:\n          accessControlAllowOrigins:\n          - accessControlAllowOrigins\n          - accessControlAllowOrigins\n          accessControlAllowCredentials: false\n          corsConfigurationEnabled: false\n          accessControlAllowHeaders:\n          - accessControlAllowHeaders\n          - accessControlAllowHeaders\n          accessControlAllowMethods:\n          - accessControlAllowMethods\n          - accessControlAllowMethods\n        subscriptionAvailability: CURRENT_TENANT\n        operations:\n        - target: /order/{orderId}\n          verb: POST\n          authType: Application \u0026 Application User\n          throttlingPolicy: Unlimited\n        - target: /menu\n          verb: GET\n          authType: Application \u0026 Application User\n          throttlingPolicy: Unlimited\n        provider: admin\n        endpointConfig:\n          endpoint_type: http\n          sandbox_endpoints:\n            url: https://localhost:9443/am/sample/pizzashack/v1/api/\n          production_endpoints:\n            url: https://localhost:9443/am/sample/pizzashack/v1/api/\n        mediationPolicies:\n        - name: json_to_xml_in_message\n          type: in\n        - name: xml_to_json_out_message\n          type: out\n        - name: json_fault\n          type: fault\n        lastUpdatedTime: lastUpdatedTime\n        threatProtectionPolicies:\n          list:\n          - policyId: policyId\n            priority: 0\n          - policyId: policyId\n            priority: 0\n        categories:\n        - categories\n        - categories\n        additionalPropertiesMap:\n          key:\n            display: false\n            name: name\n            value: value\n        wsdlInfo:\n          type: WSDL\n        hasThumbnail: false\n        transport:\n        - http\n        - https\n        revisionId: 1\n        businessInformation: \"\"\n        securityScheme:\n        - oauth2\n        keyManagers: '{}'\n        scopes:\n        - shared: true\n          scope:\n            displayName: api_view\n            bindings:\n            - admin\n            - Internal/creator\n            - Internal/publisher\n            name: apim:api_view\n            description: This Scope can used to view Apis\n            id: 01234567-0123-0123-0123-012345678901\n            usageCount: 3\n        - shared: true\n          scope:\n            displayName: api_view\n            bindings:\n            - admin\n            - Internal/creator\n            - Internal/publisher\n            name: apim:api_view\n            description: This Scope can used to view Apis\n            id: 01234567-0123-0123-0123-012345678901\n            usageCount: 3\n        maxTps:\n          production: 1000\n          sandbox: 1000\n        subscriptionAvailableTenants: []\n      properties:\n        id:\n          description: |\n            UUID of the api registry artifact\n          example: 01234567-0123-0123-0123-012345678901\n          readOnly: true\n          type: string\n        name:\n          example: PizzaShackAPI\n          maxLength: 60\n          minLength: 1\n          pattern: (^[^~!@#;:%^*()+={}|\\\\\u003c\u003e\"',\u0026$\\[\\]\\/]*$)\n          type: string\n        description:\n          example: This is a simple API for Pizza Shack online pizza delivery store.\n          maxLength: 32766\n          type: string\n        context:\n          example: pizza\n          maxLength: 232\n          minLength: 1\n          type: string\n        version:\n          example: 1.0.0\n          maxLength: 30\n          minLength: 1\n          pattern: ^[^~!@#;:%^*()+={}|\\\\\u003c\u003e\"',\u0026/$\\[\\]\\s+\\/]+$\n          type: string\n        provider:\n          description: |\n            If the provider value is not given user invoking the api will be used as the provider.\n          example: admin\n          maxLength: 50\n          type: string\n        lifeCycleStatus:\n          example: CREATED\n          type: string\n          x-otherScopes:\n          - apim:api_publish\n          - apim:api_manage\n        wsdlInfo:\n          $ref: '#/components/schemas/WSDLInfo'\n        wsdlUrl:\n          example: /apimgt/applicationdata/wsdls/admin--soap1.wsdl\n          readOnly: true\n          type: string\n        responseCachingEnabled:\n          example: true\n          type: boolean\n        cacheTimeout:\n          example: 300\n          type: integer\n        hasThumbnail:\n          example: false\n          type: boolean\n        isDefaultVersion:\n          example: false\n          type: boolean\n        isRevision:\n          example: false\n          type: boolean\n        revisionedApiId:\n          description: |\n            UUID of the api registry artifact\n          example: 01234567-0123-0123-0123-012345678901\n          readOnly: true\n          type: string\n        revisionId:\n          example: 1\n          type: integer\n        enableSchemaValidation:\n          example: false\n          type: boolean\n        enableSubscriberVerification:\n          example: false\n          type: boolean\n        type:\n          default: HTTP\n          description: The api creation type to be used. Accepted values are HTTP,\n            WS, SOAPTOREST, GRAPHQL, WEBSUB, SSE, WEBHOOK, ASYNC\n          enum:\n          - HTTP\n          - WS\n          - SOAPTOREST\n          - SOAP\n          - GRAPHQL\n          - WEBSUB\n          - SSE\n          - WEBHOOK\n          - ASYNC\n          example: HTTP\n          type: string\n        audience:\n          description: The audience of the API. Accepted values are PUBLIC, SINGLE\n          enum:\n          - PUBLIC\n          - SINGLE\n          example: PUBLIC\n          type: string\n        transport:\n          description: |\n            Supported transports for the API (http and/or https).\n          example:\n          - http\n          - https\n          items:\n            type: string\n          type: array\n        tags:\n          example:\n          - pizza\n          - food\n          items:\n            type: string\n          type: array\n          x-otherScopes:\n          - apim:api_publish\n          - apim:api_manage\n        policies:\n          example:\n          - Unlimited\n          items:\n            type: string\n          type: array\n          x-otherScopes:\n          - apim:api_publish\n          - apim:api_manage\n        apiThrottlingPolicy:\n          description: The API level throttling policy selected for the particular\n            API\n          example: Unlimited\n          type: string\n          x-otherScopes:\n          - apim:api_publish\n          - apim:api_manage\n        authorizationHeader:\n          description: |\n            Name of the Authorization header used for invoking the API. If it is not set, Authorization header name specified\n            in tenant or system level will be used.\n          example: Authorization\n          pattern: (^[^~!@#;:%^*()+={}|\\\\\u003c\u003e\"',\u0026$\\s+]*$)\n          type: string\n        securityScheme:\n          description: |\n            Types of API security, the current API secured with. It can be either OAuth2 or mutual SSL or both. If\n            it is not set OAuth2 will be set as the security for the current API.\n          example:\n          - oauth2\n          items:\n            type: string\n          type: array\n        maxTps:\n          $ref: '#/components/schemas/APIMaxTps'\n        visibility:\n          default: PUBLIC\n          description: The visibility level of the API. Accepts one of the following.\n            PUBLIC, PRIVATE, RESTRICTED.\n          enum:\n          - PUBLIC\n          - PRIVATE\n          - RESTRICTED\n          example: PUBLIC\n          type: string\n          x-otherScopes:\n          - apim:api_publish\n          - apim:api_manage\n        visibleRoles:\n          description: The user roles that are able to access the API in Developer\n            Portal\n          example: []\n          items:\n            type: string\n          type: array\n          x-otherScopes:\n          - apim:api_publish\n          - apim:api_manage\n        visibleTenants:\n          example: []\n          items:\n            type: string\n          type: array\n        mediationPolicies:\n          example:\n          - name: json_to_xml_in_message\n            type: in\n          - name: xml_to_json_out_message\n            type: out\n          - name: json_fault\n            type: fault\n          items:\n            $ref: '#/components/schemas/MediationPolicy'\n          type: array\n        subscriptionAvailability:\n          default: CURRENT_TENANT\n          description: The subscription availability. Accepts one of the following.\n            CURRENT_TENANT, ALL_TENANTS or SPECIFIC_TENANTS.\n          enum:\n          - CURRENT_TENANT\n          - ALL_TENANTS\n          - SPECIFIC_TENANTS\n          example: CURRENT_TENANT\n          type: string\n          x-otherScopes:\n          - apim:api_publish\n          - apim:api_manage\n        subscriptionAvailableTenants:\n          example: []\n          items:\n            type: string\n          type: array\n        additionalProperties:\n          description: Map of custom properties of API\n          items:\n            $ref: '#/components/schemas/APIInfo_additionalProperties'\n          type: array\n          x-otherScopes:\n          - apim:api_publish\n          - apim:api_manage\n        additionalPropertiesMap:\n          additionalProperties:\n            $ref: '#/components/schemas/APIInfo_additionalPropertiesMap'\n          type: object\n          x-otherScopes:\n          - apim:api_publish\n          - apim:api_manage\n        monetization:\n          $ref: '#/components/schemas/APIMonetizationInfo'\n        accessControl:\n          default: NONE\n          description: |\n            Is the API is restricted to certain set of publishers or creators or is it visible to all the\n            publishers and creators. If the accessControl restriction is none, this API can be modified by all the\n            publishers and creators, if not it can only be viewable/modifiable by certain set of publishers and creators,\n             based on the restriction.\n          enum:\n          - NONE\n          - RESTRICTED\n          type: string\n        accessControlRoles:\n          description: The user roles that are able to view/modify as API publisher\n            or creator.\n          example: []\n          items:\n            type: string\n          type: array\n        businessInformation:\n          allOf:\n          - $ref: '#/components/schemas/APIBusinessInformation'\n          x-otherScopes:\n          - apim:api_publish\n          - apim:api_manage\n        corsConfiguration:\n          $ref: '#/components/schemas/APICorsConfiguration'\n        websubSubscriptionConfiguration:\n          $ref: '#/components/schemas/WebsubSubscriptionConfiguration'\n        workflowStatus:\n          example: APPROVED\n          type: string\n        createdTime:\n          type: string\n        lastUpdatedTime:\n          type: string\n          x-otherScopes:\n          - apim:api_publish\n          - apim:api_manage\n        endpointConfig:\n          description: |\n            Endpoint configuration of the API. This can be used to provide different types of endpoints including Simple REST Endpoints, Loadbalanced and Failover.\n\n            `Simple REST Endpoint`\n              {\n                \"endpoint_type\": \"http\",\n                \"sandbox_endpoints\":       {\n                   \"url\": \"https://localhost:9443/am/sample/pizzashack/v1/api/\"\n                },\n                \"production_endpoints\":       {\n                   \"url\": \"https://localhost:9443/am/sample/pizzashack/v1/api/\"\n                }\n              }\n\n            `Loadbalanced Endpoint`\n\n              {\n                \"endpoint_type\": \"load_balance\",\n                \"algoCombo\": \"org.apache.synapse.endpoints.algorithms.RoundRobin\",\n                \"sessionManagement\": \"\",\n                \"sandbox_endpoints\":       [\n                            {\n                      \"url\": \"https://localhost:9443/am/sample/pizzashack/v1/api/1\"\n                   },\n                            {\n                      \"endpoint_type\": \"http\",\n                      \"template_not_supported\": false,\n                      \"url\": \"https://localhost:9443/am/sample/pizzashack/v1/api/2\"\n                   }\n                ],\n                \"production_endpoints\":       [\n                            {\n                      \"url\": \"https://localhost:9443/am/sample/pizzashack/v1/api/3\"\n                   },\n                            {\n                      \"endpoint_type\": \"http\",\n                      \"template_not_supported\": false,\n                      \"url\": \"https://localhost:9443/am/sample/pizzashack/v1/api/4\"\n                   }\n                ],\n                \"sessionTimeOut\": \"\",\n                \"algoClassName\": \"org.apache.synapse.endpoints.algorithms.RoundRobin\"\n              }\n\n            `Failover Endpoint`\n\n              {\n                \"production_failovers\":[\n                   {\n                      \"endpoint_type\":\"http\",\n                      \"template_not_supported\":false,\n                      \"url\":\"https://localhost:9443/am/sample/pizzashack/v1/api/1\"\n                   }\n                ],\n                \"endpoint_type\":\"failover\",\n                \"sandbox_endpoints\":{\n                   \"url\":\"https://localhost:9443/am/sample/pizzashack/v1/api/2\"\n                },\n                \"production_endpoints\":{\n                   \"url\":\"https://localhost:9443/am/sample/pizzashack/v1/api/3\"\n                },\n                \"sandbox_failovers\":[\n                   {\n                      \"endpoint_type\":\"http\",\n                      \"template_not_supported\":false,\n                      \"url\":\"https://localhost:9443/am/sample/pizzashack/v1/api/4\"\n                   }\n                ]\n              }\n\n            `Default Endpoint`\n\n              {\n                \"endpoint_type\":\"default\",\n                \"sandbox_endpoints\":{\n                   \"url\":\"default\"\n                },\n                \"production_endpoints\":{\n                   \"url\":\"default\"\n                }\n              }\n\n            `Endpoint from Endpoint Registry`\n              {\n                \"endpoint_type\": \"Registry\",\n                \"endpoint_id\": \"{registry-name:entry-name:version}\",\n              }\n          example:\n            endpoint_type: http\n            sandbox_endpoints:\n              url: https://localhost:9443/am/sample/pizzashack/v1/api/\n            production_endpoints:\n              url: https://localhost:9443/am/sample/pizzashack/v1/api/\n          properties: {}\n          type: object\n        endpointImplementationType:\n          default: ENDPOINT\n          enum:\n          - INLINE\n          - ENDPOINT\n          - MOCKED_OAS\n          example: INLINE\n          type: string\n        scopes:\n          items:\n            $ref: '#/components/schemas/APIScope'\n          type: array\n        operations:\n          example:\n          - target: /order/{orderId}\n            verb: POST\n            authType: Application \u0026 Application User\n            throttlingPolicy: Unlimited\n          - target: /menu\n            verb: GET\n            authType: Application \u0026 Application User\n            throttlingPolicy: Unlimited\n          items:\n            $ref: '#/components/schemas/APIOperations'\n          type: array\n        threatProtectionPolicies:\n          $ref: '#/components/schemas/API_threatProtectionPolicies'\n        categories:\n          description: |\n            API categories\n          items:\n            type: string\n          type: array\n          x-otherScopes:\n          - apim:api_publish\n        keyManagers:\n          description: |\n            API Key Managers\n          properties: {}\n          readOnly: true\n          type: object\n        serviceInfo:\n          $ref: '#/components/schemas/API_serviceInfo'\n        advertiseInfo:\n          $ref: '#/components/schemas/AdvertiseInfo'\n        gatewayVendor:\n          example: wso2\n          title: field to identify gateway vendor\n          type: string\n        asyncTransportProtocols:\n          description: |\n            Supported transports for the async API (http and/or https).\n          example:\n          - http\n          - https\n          items:\n            type: string\n          type: array\n      required:\n      - context\n      - name\n      - version\n      title: API object\n      type: object\n      x-scopes:\n      - apim:api_create\n      - apim:api_import_export\n      - apim:api_manage\n    APIRevision:\n      example:\n        displayName: REVISION 1\n        description: removed a post resource\n        createdTime: createdTime\n        id: c26b2b9b-4632-4ca4-b6f3-521c8863990c\n        deploymentInfo:\n        - revisionUuid: c26b2b9b-4632-4ca4-b6f3-521c8863990c\n          vhost: mg.wso2.com\n          displayOnDevportal: true\n          deployedTime: deployedTime\n          name: default\n          successDeployedTime: successDeployedTime\n        - revisionUuid: c26b2b9b-4632-4ca4-b6f3-521c8863990c\n          vhost: mg.wso2.com\n          displayOnDevportal: true\n          deployedTime: deployedTime\n          name: default\n          successDeployedTime: successDeployedTime\n        apiInfo:\n          id: 01234567-0123-0123-0123-012345678901\n      properties:\n        displayName:\n          example: REVISION 1\n          readOnly: true\n          type: string\n        id:\n          example: c26b2b9b-4632-4ca4-b6f3-521c8863990c\n          readOnly: true\n          type: string\n        description:\n          example: removed a post resource\n          maxLength: 255\n          minLength: 0\n          type: string\n        createdTime:\n          readOnly: true\n          type: string\n        apiInfo:\n          $ref: '#/components/schemas/APIRevisionAPIInfo'\n        deploymentInfo:\n          items:\n            $ref: '#/components/schemas/APIRevisionDeployment'\n          readOnly: true\n          type: array\n      title: API Info object with basic API details\n    APIRevisionAPIInfo:\n      example:\n        id: 01234567-0123-0123-0123-012345678901\n      properties:\n        id:\n          example: 01234567-0123-0123-0123-012345678901\n          type: string\n      readOnly: true\n      title: API Info object with basic Revisioned API details\n    APIRevisionList:\n      example:\n        count: 1\n        list:\n        - displayName: REVISION 1\n          description: removed a post resource\n          createdTime: createdTime\n          id: c26b2b9b-4632-4ca4-b6f3-521c8863990c\n          deploymentInfo:\n          - revisionUuid: c26b2b9b-4632-4ca4-b6f3-521c8863990c\n            vhost: mg.wso2.com\n            displayOnDevportal: true\n            deployedTime: deployedTime\n            name: default\n            successDeployedTime: successDeployedTime\n          - revisionUuid: c26b2b9b-4632-4ca4-b6f3-521c8863990c\n            vhost: mg.wso2.com\n            displayOnDevportal: true\n            deployedTime: deployedTime\n            name: default\n            successDeployedTime: successDeployedTime\n          apiInfo:\n            id: 01234567-0123-0123-0123-012345678901\n        - displayName: REVISION 1\n          description: removed a post resource\n          createdTime: createdTime\n          id: c26b2b9b-4632-4ca4-b6f3-521c8863990c\n          deploymentInfo:\n          - revisionUuid: c26b2b9b-4632-4ca4-b6f3-521c8863990c\n            vhost: mg.wso2.com\n            displayOnDevportal: true\n            deployedTime: deployedTime\n            name: default\n            successDeployedTime: successDeployedTime\n          - revisionUuid: c26b2b9b-4632-4ca4-b6f3-521c8863990c\n            vhost: mg.wso2.com\n            displayOnDevportal: true\n            deployedTime: deployedTime\n            name: default\n            successDeployedTime: successDeployedTime\n          apiInfo:\n            id: 01234567-0123-0123-0123-012345678901\n      properties:\n        count:\n          description: |\n            Number of API revisions returned\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/APIRevision'\n          type: array\n      title: API Revisions List\n    APIRevisionDeploymentList:\n      example:\n        list:\n        - revisionUuid: c26b2b9b-4632-4ca4-b6f3-521c8863990c\n          vhost: mg.wso2.com\n          displayOnDevportal: true\n          deployedTime: deployedTime\n          name: default\n          successDeployedTime: successDeployedTime\n        - revisionUuid: c26b2b9b-4632-4ca4-b6f3-521c8863990c\n          vhost: mg.wso2.com\n          displayOnDevportal: true\n          deployedTime: deployedTime\n          name: default\n          successDeployedTime: successDeployedTime\n      properties:\n        list:\n          items:\n            $ref: '#/components/schemas/APIRevisionDeployment'\n          type: array\n      title: API Revision to Deployment mapped object with basic API deployment details\n    APIRevisionDeployment:\n      example:\n        revisionUuid: c26b2b9b-4632-4ca4-b6f3-521c8863990c\n        vhost: mg.wso2.com\n        displayOnDevportal: true\n        deployedTime: deployedTime\n        name: default\n        successDeployedTime: successDeployedTime\n      properties:\n        revisionUuid:\n          example: c26b2b9b-4632-4ca4-b6f3-521c8863990c\n          maxLength: 255\n          minLength: 0\n          type: string\n        name:\n          example: default\n          maxLength: 255\n          minLength: 1\n          type: string\n        vhost:\n          example: mg.wso2.com\n          maxLength: 255\n          minLength: 1\n          pattern: ^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$\n          type: string\n        displayOnDevportal:\n          example: true\n          type: boolean\n        deployedTime:\n          readOnly: true\n          type: string\n        successDeployedTime:\n          readOnly: true\n          type: string\n      title: APIRevisionDeployment Info object with basic API deployment details\n    AuditReport:\n      example:\n        numErrors: 20\n        externalApiId: fd21f9f7-3674-49cf-8a83-dca401f635de\n        grade: \"27.95\"\n        report: report\n      properties:\n        report:\n          description: |\n            The API Security Audit Report\n          type: string\n        grade:\n          description: |\n            The overall grade of the Security Audit\n          example: \"27.95\"\n          type: string\n        numErrors:\n          description: |\n            The number of errors in the API Definition\n          example: 20\n          type: integer\n        externalApiId:\n          description: |\n            The External API ID\n          example: fd21f9f7-3674-49cf-8a83-dca401f635de\n          type: string\n      title: Resource for Audit Report\n      type: object\n    APIProductList:\n      example:\n        pagination:\n          next: next\n          total: 10\n          offset: 0\n          previous: previous\n          limit: 1\n        count: 1\n        list:\n        - hasThumbnail: true\n          provider: admin\n          gatewayVendor: wso2\n          securityScheme:\n          - oauth2\n          name: PizzaShackAPIProduct\n          context: pizzaproduct\n          description: This is a simple API for Pizza Shack online pizza delivery\n            store\n          id: 01234567-0123-0123-0123-012345678901\n          state: CREATED\n        - hasThumbnail: true\n          provider: admin\n          gatewayVendor: wso2\n          securityScheme:\n          - oauth2\n          name: PizzaShackAPIProduct\n          context: pizzaproduct\n          description: This is a simple API for Pizza Shack online pizza delivery\n            store\n          id: 01234567-0123-0123-0123-012345678901\n          state: CREATED\n      properties:\n        count:\n          description: |\n            Number of API Products returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/APIProductInfo'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      title: API Product List\n      type: object\n    APIProductInfo:\n      example:\n        hasThumbnail: true\n        provider: admin\n        gatewayVendor: wso2\n        securityScheme:\n        - oauth2\n        name: PizzaShackAPIProduct\n        context: pizzaproduct\n        description: This is a simple API for Pizza Shack online pizza delivery store\n        id: 01234567-0123-0123-0123-012345678901\n        state: CREATED\n      properties:\n        id:\n          description: |\n            UUID of the api product\n          example: 01234567-0123-0123-0123-012345678901\n          readOnly: true\n          type: string\n        name:\n          description: Name of the API Product\n          example: PizzaShackAPIProduct\n          type: string\n        context:\n          example: pizzaproduct\n          type: string\n        description:\n          description: A brief description about the API\n          example: This is a simple API for Pizza Shack online pizza delivery store\n          type: string\n        provider:\n          description: |\n            If the provider value is not given, the user invoking the API will be used as the provider.\n          example: admin\n          type: string\n        hasThumbnail:\n          example: true\n          type: boolean\n        state:\n          description: |\n            State of the API product. Only published api products are visible on the Developer Portal\n          enum:\n          - CREATED\n          - PUBLISHED\n          - DEPRECATED\n          - RETIRED\n          - BLOCKED\n          - PROTOTYPED\n          type: string\n        securityScheme:\n          description: |\n            Types of API security, the current API secured with. It can be either OAuth2 or mutual SSL or both. If\n            it is not set OAuth2 will be set as the security for the current API.\n          example:\n          - oauth2\n          items:\n            type: string\n          type: array\n        gatewayVendor:\n          example: wso2\n          type: string\n      title: API Info object with basic API details.\n      type: object\n    APIProduct:\n      example:\n        accessControl: NONE\n        workflowStatus: APPROVED\n        monetization:\n          enabled: true\n          properties:\n            key: properties\n        policies:\n        - Unlimited\n        description: This is a simple API for Pizza Shack online pizza delivery store\n        isRevision: false\n        authorizationHeader: Authorization\n        responseCachingEnabled: true\n        visibleRoles: []\n        corsConfiguration:\n          accessControlAllowOrigins:\n          - accessControlAllowOrigins\n          - accessControlAllowOrigins\n          accessControlAllowCredentials: false\n          corsConfigurationEnabled: false\n          accessControlAllowHeaders:\n          - accessControlAllowHeaders\n          - accessControlAllowHeaders\n          accessControlAllowMethods:\n          - accessControlAllowMethods\n          - accessControlAllowMethods\n        enableSchemaValidation: false\n        subscriptionAvailability: CURRENT_TENANT\n        provider: admin\n        context: pizzaproduct\n        createdTime: createdTime\n        lastUpdatedTime: lastUpdatedTime\n        id: 01234567-0123-0123-0123-012345678901\n        state: CREATED\n        categories: []\n        additionalPropertiesMap:\n          key:\n            display: false\n            name: name\n            value: value\n        revisionedApiProductId: 01234567-0123-0123-0123-012345678901\n        accessControlRoles: []\n        hasThumbnail: false\n        visibility: PUBLIC\n        transport:\n        - http\n        - https\n        tags:\n        - pizza\n        - food\n        revisionId: 1\n        visibleTenants: []\n        cacheTimeout: 300\n        apis:\n        - name: PizzaShackAPI\n          apiId: 01234567-0123-0123-0123-012345678901\n          version: \"1.0\"\n          operations:\n          - target: /order/{orderId}\n            verb: POST\n            authType: Application \u0026 Application User\n            throttlingPolicy: Unlimited\n          - target: /menu\n            verb: GET\n            authType: Application \u0026 Application User\n            throttlingPolicy: Unlimited\n        gatewayVendor: wso2\n        businessInformation:\n          technicalOwnerEmail: technicalowner@wso2.com\n          businessOwnerEmail: businessowner@wso2.com\n          businessOwner: businessowner\n          technicalOwner: technicalowner\n        apiThrottlingPolicy: Unlimited\n        securityScheme:\n        - oauth2\n        name: PizzaShackAPIProduct\n        additionalProperties:\n        - display: true\n          name: name\n          value: value\n        - display: true\n          name: name\n          value: value\n        scopes: []\n        apiType: APIPRODUCT\n        subscriptionAvailableTenants: []\n      properties:\n        id:\n          description: |\n            UUID of the api product\n          example: 01234567-0123-0123-0123-012345678901\n          readOnly: true\n          type: string\n        name:\n          description: Name of the API Product\n          example: PizzaShackAPIProduct\n          maxLength: 50\n          minLength: 1\n          type: string\n        context:\n          example: pizzaproduct\n          maxLength: 60\n          minLength: 1\n          type: string\n        description:\n          description: A brief description about the API\n          example: This is a simple API for Pizza Shack online pizza delivery store\n          type: string\n        provider:\n          description: |\n            If the provider value is not given, the user invoking the API will be used as the provider.\n          example: admin\n          maxLength: 50\n          type: string\n        hasThumbnail:\n          example: false\n          type: boolean\n        state:\n          default: CREATED\n          description: |\n            State of the API product. Only published api products are visible on the Developer Portal\n          enum:\n          - CREATED\n          - PUBLISHED\n          - DEPRECATED\n          - RETIRED\n          - BLOCKED\n          - PROTOTYPED\n          type: string\n        enableSchemaValidation:\n          example: false\n          type: boolean\n        isRevision:\n          example: false\n          type: boolean\n        revisionedApiProductId:\n          description: |\n            UUID of the api product registry artifact\n          example: 01234567-0123-0123-0123-012345678901\n          readOnly: true\n          type: string\n        revisionId:\n          example: 1\n          type: integer\n        responseCachingEnabled:\n          example: true\n          type: boolean\n        cacheTimeout:\n          example: 300\n          type: integer\n        visibility:\n          default: PUBLIC\n          description: The visibility level of the API. Accepts one of the following.\n            PUBLIC, PRIVATE, RESTRICTED.\n          enum:\n          - PUBLIC\n          - PRIVATE\n          - RESTRICTED\n          example: PUBLIC\n          type: string\n        visibleRoles:\n          description: The user roles that are able to access the API\n          example: []\n          items:\n            type: string\n          type: array\n        visibleTenants:\n          example: []\n          items:\n            type: string\n          type: array\n        accessControl:\n          default: NONE\n          description: |\n            Defines whether the API Product is restricted to certain set of publishers or creators or is it visible to all the\n            publishers and creators. If the accessControl restriction is none, this API Product can be modified by all the\n            publishers and creators, if not it can only be viewable/modifiable by certain set of publishers and creators,\n            based on the restriction.\n          enum:\n          - NONE\n          - RESTRICTED\n          type: string\n        accessControlRoles:\n          description: The user roles that are able to view/modify as API Product\n            publisher or creator.\n          example: []\n          items:\n            type: string\n          type: array\n        apiType:\n          description: The API type to be used. Accepted values are API, APIPRODUCT\n          enum:\n          - API\n          - APIPRODUCT\n          example: APIPRODUCT\n          type: string\n        transport:\n          description: |\n            Supported transports for the API (http and/or https).\n          example:\n          - http\n          - https\n          items:\n            type: string\n          type: array\n        tags:\n          example:\n          - pizza\n          - food\n          items:\n            type: string\n          type: array\n        policies:\n          example:\n          - Unlimited\n          items:\n            type: string\n          type: array\n        apiThrottlingPolicy:\n          description: The API level throttling policy selected for the particular\n            API Product\n          example: Unlimited\n          type: string\n        authorizationHeader:\n          description: |\n            Name of the Authorization header used for invoking the API. If it is not set, Authorization header name specified\n            in tenant or system level will be used.\n          example: Authorization\n          type: string\n        securityScheme:\n          description: |\n            Types of API security, the current API secured with. It can be either OAuth2 or mutual SSL or both. If\n            it is not set OAuth2 will be set as the security for the current API.\n          example:\n          - oauth2\n          items:\n            type: string\n          type: array\n        subscriptionAvailability:\n          default: ALL_TENANTS\n          description: The subscription availability. Accepts one of the following.\n            CURRENT_TENANT, ALL_TENANTS or SPECIFIC_TENANTS.\n          enum:\n          - CURRENT_TENANT\n          - ALL_TENANTS\n          - SPECIFIC_TENANTS\n          example: CURRENT_TENANT\n          type: string\n        subscriptionAvailableTenants:\n          example: []\n          items:\n            type: string\n          type: array\n          x-otherScopes:\n          - apim:api_publish\n          - apim:api_manage\n        additionalProperties:\n          description: Map of custom properties of API\n          items:\n            $ref: '#/components/schemas/APIInfo_additionalProperties'\n          type: array\n        additionalPropertiesMap:\n          additionalProperties:\n            $ref: '#/components/schemas/APIInfo_additionalPropertiesMap'\n          type: object\n        monetization:\n          $ref: '#/components/schemas/APIMonetizationInfo'\n        businessInformation:\n          $ref: '#/components/schemas/APIProductBusinessInformation'\n        corsConfiguration:\n          $ref: '#/components/schemas/APICorsConfiguration'\n        createdTime:\n          type: string\n        lastUpdatedTime:\n          type: string\n        gatewayVendor:\n          example: wso2\n          title: field to identify gateway vendor\n          type: string\n        apis:\n          description: |\n            APIs and resources in the API Product.\n          example:\n          - name: PizzaShackAPI\n            apiId: 01234567-0123-0123-0123-012345678901\n            version: \"1.0\"\n            operations:\n            - target: /order/{orderId}\n              verb: POST\n              authType: Application \u0026 Application User\n              throttlingPolicy: Unlimited\n            - target: /menu\n              verb: GET\n              authType: Application \u0026 Application User\n              throttlingPolicy: Unlimited\n          items:\n            $ref: '#/components/schemas/ProductAPI'\n          type: array\n        scopes:\n          example: []\n          items:\n            $ref: '#/components/schemas/APIScope'\n          type: array\n        categories:\n          description: |\n            API categories\n          example: []\n          items:\n            type: string\n          type: array\n        workflowStatus:\n          example: APPROVED\n          type: string\n      required:\n      - name\n      title: API Product object\n      type: object\n    ProductAPI:\n      properties:\n        name:\n          example: PizzaShackAPI\n          type: string\n        apiId:\n          example: 01234567-0123-0123-0123-012345678901\n          type: string\n        version:\n          example: \"1.0\"\n          type: string\n        operations:\n          items:\n            $ref: '#/components/schemas/APIOperations'\n          type: array\n      required:\n      - apiId\n      title: ProductAPI\n      type: object\n    ResourcePath:\n      example:\n        httpVerb: GET\n        resourcePath: /menu\n        id: 1\n      properties:\n        id:\n          example: 1\n          type: integer\n        resourcePath:\n          example: /menu\n          type: string\n        httpVerb:\n          example: GET\n          type: string\n      required:\n      - id\n      title: ResourcePath\n      type: object\n    ResourcePathList:\n      example:\n        pagination:\n          next: next\n          total: 10\n          offset: 0\n          previous: previous\n          limit: 1\n        count: 1\n        list:\n        - httpVerb: GET\n          resourcePath: /menu\n          id: 1\n        - httpVerb: GET\n          resourcePath: /menu\n          id: 1\n      properties:\n        count:\n          description: |\n            Number of API Resource Paths returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/ResourcePath'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      title: ResourcePath List\n      type: object\n    APIProductOutdatedStatus:\n      example:\n        isOutdated: true\n      properties:\n        isOutdated:\n          description: |\n            Indicates if an API Product is outdated\n          example: true\n          type: boolean\n      title: APIProduct is outdated status\n      type: object\n    APIProductBusinessInformation:\n      example:\n        technicalOwnerEmail: technicalowner@wso2.com\n        businessOwnerEmail: businessowner@wso2.com\n        businessOwner: businessowner\n        technicalOwner: technicalowner\n      properties:\n        businessOwner:\n          example: businessowner\n          maxLength: 120\n          type: string\n        businessOwnerEmail:\n          example: businessowner@wso2.com\n          type: string\n        technicalOwner:\n          example: technicalowner\n          maxLength: 120\n          type: string\n        technicalOwnerEmail:\n          example: technicalowner@wso2.com\n          type: string\n      type: object\n    Claim:\n      example:\n        name: email\n        URI: http://wso2.org/claims/emailaddress\n        value: admin@wso2.com\n      properties:\n        name:\n          example: email\n          type: string\n        URI:\n          example: http://wso2.org/claims/emailaddress\n          type: string\n        value:\n          example: admin@wso2.com\n          type: string\n      title: Claim\n      type: object\n    SubscriberInfo:\n      example:\n        name: admin\n        claims:\n        - name: email\n          URI: http://wso2.org/claims/emailaddress\n          value: admin@wso2.com\n        - name: email\n          URI: http://wso2.org/claims/emailaddress\n          value: admin@wso2.com\n      properties:\n        name:\n          example: admin\n          type: string\n        claims:\n          items:\n            $ref: '#/components/schemas/Claim'\n          type: array\n      title: SubscriberInfo\n      type: object\n    Application:\n      properties:\n        applicationId:\n          example: 01234567-0123-0123-0123-012345678901\n          type: string\n        name:\n          example: CalculatorApp\n          type: string\n        subscriber:\n          example: admin\n          type: string\n        throttlingTier:\n          example: Unlimited\n          type: string\n        description:\n          example: Sample calculator application\n          type: string\n        groupId:\n          type: string\n      required:\n      - name\n      - throttlingTier\n      title: Application\n      type: object\n    ApplicationInfo:\n      example:\n        subscriber: admin\n        name: CalculatorApp\n        subscriptionCount: 0\n        description: Sample calculator application\n        applicationId: 01234567-0123-0123-0123-012345678901\n      properties:\n        applicationId:\n          example: 01234567-0123-0123-0123-012345678901\n          type: string\n        name:\n          example: CalculatorApp\n          type: string\n        subscriber:\n          example: admin\n          type: string\n        description:\n          example: Sample calculator application\n          type: string\n        subscriptionCount:\n          type: integer\n      title: Application info object with basic application details\n      type: object\n    DocumentList:\n      example:\n        pagination:\n          next: next\n          total: 10\n          offset: 0\n          previous: previous\n          limit: 1\n        count: 1\n        list:\n        - summary: Summary of PizzaShackAPI Documentation\n          lastUpdatedBy: admin\n          fileName: fileName\n          visibility: API_LEVEL\n          otherTypeName: otherTypeName\n          type: HOWTO\n          sourceUrl: sourceUrl\n          sourceType: INLINE\n          createdBy: admin\n          name: PizzaShackDoc\n          createdTime: createdTime\n          documentId: 01234567-0123-0123-0123-012345678901\n          lastUpdatedTime: lastUpdatedTime\n          inlineContent: This is doc content. This can have many lines.\n        - summary: Summary of PizzaShackAPI Documentation\n          lastUpdatedBy: admin\n          fileName: fileName\n          visibility: API_LEVEL\n          otherTypeName: otherTypeName\n          type: HOWTO\n          sourceUrl: sourceUrl\n          sourceType: INLINE\n          createdBy: admin\n          name: PizzaShackDoc\n          createdTime: createdTime\n          documentId: 01234567-0123-0123-0123-012345678901\n          lastUpdatedTime: lastUpdatedTime\n          inlineContent: This is doc content. This can have many lines.\n      properties:\n        count:\n          description: |\n            Number of Documents returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/Document'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      title: Document List\n      type: object\n    Document:\n      example:\n        summary: Summary of PizzaShackAPI Documentation\n        lastUpdatedBy: admin\n        fileName: fileName\n        visibility: API_LEVEL\n        otherTypeName: otherTypeName\n        type: HOWTO\n        sourceUrl: sourceUrl\n        sourceType: INLINE\n        createdBy: admin\n        name: PizzaShackDoc\n        createdTime: createdTime\n        documentId: 01234567-0123-0123-0123-012345678901\n        lastUpdatedTime: lastUpdatedTime\n        inlineContent: This is doc content. This can have many lines.\n      properties:\n        documentId:\n          example: 01234567-0123-0123-0123-012345678901\n          readOnly: true\n          type: string\n        name:\n          example: PizzaShackDoc\n          maxLength: 60\n          minLength: 1\n          type: string\n        type:\n          enum:\n          - HOWTO\n          - SAMPLES\n          - PUBLIC_FORUM\n          - SUPPORT_FORUM\n          - API_MESSAGE_FORMAT\n          - SWAGGER_DOC\n          - OTHER\n          example: HOWTO\n          type: string\n        summary:\n          example: Summary of PizzaShackAPI Documentation\n          maxLength: 32766\n          minLength: 1\n          type: string\n        sourceType:\n          enum:\n          - INLINE\n          - MARKDOWN\n          - URL\n          - FILE\n          example: INLINE\n          type: string\n        sourceUrl:\n          readOnly: true\n          type: string\n        fileName:\n          readOnly: true\n          type: string\n        inlineContent:\n          example: This is doc content. This can have many lines.\n          type: string\n        otherTypeName:\n          readOnly: true\n          type: string\n        visibility:\n          enum:\n          - OWNER_ONLY\n          - PRIVATE\n          - API_LEVEL\n          example: API_LEVEL\n          type: string\n        createdTime:\n          readOnly: true\n          type: string\n        createdBy:\n          example: admin\n          type: string\n        lastUpdatedTime:\n          readOnly: true\n          type: string\n        lastUpdatedBy:\n          example: admin\n          readOnly: true\n          type: string\n      required:\n      - name\n      - sourceType\n      - type\n      - visibility\n      title: Document\n      type: object\n    GraphQLSchema:\n      example:\n        schemaDefinition: schemaDefinition\n        name: admin--HackerNewsAPI.graphql\n      properties:\n        name:\n          example: admin--HackerNewsAPI.graphql\n          type: string\n        schemaDefinition:\n          type: string\n      required:\n      - name\n      title: GraphQL Schema\n      type: object\n    GraphQLQueryComplexityInfo:\n      example:\n        list:\n        - complexityValue: 1\n          field: name\n          type: Country\n        - complexityValue: 1\n          field: name\n          type: Country\n      properties:\n        list:\n          items:\n            $ref: '#/components/schemas/GraphQLCustomComplexityInfo'\n          type: array\n      title: GraphQL Query Complexity Info\n      type: object\n    GraphQLCustomComplexityInfo:\n      example:\n        complexityValue: 1\n        field: name\n        type: Country\n      properties:\n        type:\n          description: |\n            The type found within the schema of the API\n          example: Country\n          type: string\n        field:\n          description: |\n            The field which is found under the type within the schema of the API\n          example: name\n          type: string\n        complexityValue:\n          description: |\n            The complexity value allocated for the associated field under the specified type\n          example: 1\n          type: integer\n      required:\n      - complexityValue\n      - field\n      - type\n      title: GraphQL Custom Complexity Info\n      type: object\n    GraphQLSchemaTypeList:\n      example:\n        typeList:\n        - type: Country\n          fieldList:\n          - code\n          - name\n        - type: Country\n          fieldList:\n          - code\n          - name\n      properties:\n        typeList:\n          items:\n            $ref: '#/components/schemas/GraphQLSchemaType'\n          type: array\n      title: List of types and corresponding fields of the GraphQL Schema\n      type: object\n    GraphQLSchemaType:\n      example:\n        type: Country\n        fieldList:\n        - code\n        - name\n      properties:\n        type:\n          description: |\n            Type found within the GraphQL Schema\n          example: Country\n          type: string\n        fieldList:\n          description: |\n            Array of fields under current type\n          example:\n          - code\n          - name\n          items:\n            type: string\n          type: array\n      title: Single type and corresponding fields found within the GraphQL Schema\n      type: object\n    ThrottlingPolicyList:\n      example:\n        pagination:\n          next: next\n          total: 10\n          offset: 0\n          previous: previous\n          limit: 1\n        count: 1\n        list:\n        - requestCount: 50\n          stopOnQuotaReach: true\n          displayName: Platinum\n          monetizationProperties: {}\n          rateLimitTimeUnit: min\n          description: Allows 50 request(s) per minute.\n          dataUnit: KB\n          policyLevel: api\n          rateLimitCount: 10\n          tierPlan: FREE\n          name: Platinum\n          attributes: {}\n          unitTime: 60000\n          timeUnit: min\n          quotaPolicyType: REQUESTCOUNT\n        - requestCount: 50\n          stopOnQuotaReach: true\n          displayName: Platinum\n          monetizationProperties: {}\n          rateLimitTimeUnit: min\n          description: Allows 50 request(s) per minute.\n          dataUnit: KB\n          policyLevel: api\n          rateLimitCount: 10\n          tierPlan: FREE\n          name: Platinum\n          attributes: {}\n          unitTime: 60000\n          timeUnit: min\n          quotaPolicyType: REQUESTCOUNT\n      properties:\n        count:\n          description: |\n            Number of Tiers returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/ThrottlingPolicy'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      title: Throttling policy list\n      type: object\n    ThrottlingPolicy:\n      example:\n        requestCount: 50\n        stopOnQuotaReach: true\n        displayName: Platinum\n        monetizationProperties: {}\n        rateLimitTimeUnit: min\n        description: Allows 50 request(s) per minute.\n        dataUnit: KB\n        policyLevel: api\n        rateLimitCount: 10\n        tierPlan: FREE\n        name: Platinum\n        attributes: {}\n        unitTime: 60000\n        timeUnit: min\n        quotaPolicyType: REQUESTCOUNT\n      properties:\n        name:\n          example: Platinum\n          type: string\n        description:\n          example: Allows 50 request(s) per minute.\n          type: string\n        policyLevel:\n          enum:\n          - subscription\n          - api\n          example: api\n          type: string\n        displayName:\n          example: Platinum\n          type: string\n        attributes:\n          additionalProperties:\n            type: string\n          description: |\n            Custom attributes added to the policy policy\n          example: {}\n          type: object\n        requestCount:\n          description: |\n            Maximum number of requests which can be sent within a provided unit time\n          example: 50\n          format: int64\n          type: integer\n        dataUnit:\n          description: |\n            Unit of data allowed to be transfered. Allowed values are \"KB\", \"MB\" and \"GB\"\n          example: KB\n          type: string\n        unitTime:\n          example: 60000\n          format: int64\n          type: integer\n        timeUnit:\n          example: min\n          type: string\n        rateLimitCount:\n          default: 0\n          description: Burst control request count\n          example: 10\n          type: integer\n        rateLimitTimeUnit:\n          description: Burst control time unit\n          example: min\n          type: string\n        quotaPolicyType:\n          description: Default quota limit type\n          enum:\n          - REQUESTCOUNT\n          - BANDWIDTHVOLUME\n          example: REQUESTCOUNT\n          type: string\n        tierPlan:\n          description: |\n            This attribute declares whether this policy is available under commercial or free\n          enum:\n          - FREE\n          - COMMERCIAL\n          example: FREE\n          type: string\n        stopOnQuotaReach:\n          description: |\n            By making this attribute to false, you are capabale of sending requests\n            even if the request count exceeded within a unit time\n          example: true\n          type: boolean\n        monetizationProperties:\n          additionalProperties:\n            type: string\n          description: Properties of a tier plan which are related to monetization\n          example: {}\n          type: object\n      required:\n      - name\n      - requestCount\n      - stopOnQuotaReach\n      - tierPlan\n      - unitTime\n      title: Tier\n      type: object\n    SubscriptionPolicyList:\n      example:\n        pagination:\n          next: next\n          total: 10\n          offset: 0\n          previous: previous\n          limit: 1\n        count: 1\n        list:\n        - null\n        - null\n      properties:\n        count:\n          description: |\n            Number of Tiers returned.\n          example: 1\n          type: integer\n        list:\n          description: |\n            Array of SubscriptionPolicies\n          items:\n            $ref: '#/components/schemas/SubscriptionPolicy'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      title: Subscription policy list\n      type: object\n    SubscriptionList:\n      example:\n        pagination:\n          next: next\n          total: 10\n          offset: 0\n          previous: previous\n          limit: 1\n        count: 1\n        list:\n        - subscriptionStatus: BLOCKED\n          throttlingPolicy: Unlimited\n          subscriptionId: 01234567-0123-0123-0123-012345678901\n          applicationInfo:\n            subscriber: admin\n            name: CalculatorApp\n            subscriptionCount: 0\n            description: Sample calculator application\n            applicationId: 01234567-0123-0123-0123-012345678901\n        - subscriptionStatus: BLOCKED\n          throttlingPolicy: Unlimited\n          subscriptionId: 01234567-0123-0123-0123-012345678901\n          applicationInfo:\n            subscriber: admin\n            name: CalculatorApp\n            subscriptionCount: 0\n            description: Sample calculator application\n            applicationId: 01234567-0123-0123-0123-012345678901\n      properties:\n        count:\n          description: |\n            Number of Subscriptions returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/Subscription'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      title: Subscription List\n      type: object\n    Subscription:\n      example:\n        subscriptionStatus: BLOCKED\n        throttlingPolicy: Unlimited\n        subscriptionId: 01234567-0123-0123-0123-012345678901\n        applicationInfo:\n          subscriber: admin\n          name: CalculatorApp\n          subscriptionCount: 0\n          description: Sample calculator application\n          applicationId: 01234567-0123-0123-0123-012345678901\n      properties:\n        subscriptionId:\n          example: 01234567-0123-0123-0123-012345678901\n          type: string\n        applicationInfo:\n          $ref: '#/components/schemas/ApplicationInfo'\n        throttlingPolicy:\n          example: Unlimited\n          type: string\n        subscriptionStatus:\n          enum:\n          - BLOCKED\n          - PROD_ONLY_BLOCKED\n          - UNBLOCKED\n          - ON_HOLD\n          - REJECTED\n          - TIER_UPDATE_PENDING\n          - DELETE_PENDING\n          example: BLOCKED\n          type: string\n      required:\n      - applicationInfo\n      - subscriptionId\n      - subscriptionStatus\n      - throttlingPolicy\n      title: Subscription\n      type: object\n    ThrottlePolicy:\n      discriminator:\n        propertyName: type\n      properties:\n        policyId:\n          description: Id of policy\n          example: 0c6439fd-9b16-3c2e-be6e-1086e0b9aa93\n          readOnly: true\n          type: string\n        policyName:\n          description: Name of policy\n          example: 30PerMin\n          maxLength: 60\n          minLength: 1\n          type: string\n        displayName:\n          description: Display name of the policy\n          example: 30PerMin\n          maxLength: 512\n          type: string\n        description:\n          description: Description of the policy\n          example: Allows 30 request per minute\n          maxLength: 1024\n          type: string\n        isDeployed:\n          default: false\n          description: Indicates whether the policy is deployed successfully or not.\n          type: boolean\n        type:\n          description: Indicates the type of throttle policy\n          type: string\n      required:\n      - policyName\n      title: Generic Throttling Policy\n      type: object\n    GraphQLQuery:\n      properties:\n        graphQLMaxComplexity:\n          description: Maximum Complexity of the GraphQL query\n          example: 400\n          type: integer\n        graphQLMaxDepth:\n          description: Maximum Depth of the GraphQL query\n          example: 10\n          type: integer\n      title: GraphQL Query\n      type: object\n    ThrottleLimitBase:\n      properties:\n        timeUnit:\n          description: Unit of the time. Allowed values are \"sec\", \"min\", \"hour\",\n            \"day\"\n          example: min\n          type: string\n        unitTime:\n          description: Time limit that the throttling limit applies.\n          example: 10\n          type: integer\n      required:\n      - timeUnit\n      - unitTime\n      title: Throttle Limit Base\n      type: object\n    ThrottleLimit:\n      properties:\n        type:\n          description: |\n            Type of the throttling limit. Allowed values are \"REQUESTCOUNTLIMIT\" and \"BANDWIDTHLIMIT\".\n            Please see schemas of \"RequestCountLimit\" and \"BandwidthLimit\" throttling limit types in\n            Definitions section.\n          enum:\n          - REQUESTCOUNTLIMIT\n          - BANDWIDTHLIMIT\n          - EVENTCOUNTLIMIT\n          example: REQUESTCOUNTLIMIT\n          type: string\n        requestCount:\n          $ref: '#/components/schemas/RequestCountLimit'\n        bandwidth:\n          $ref: '#/components/schemas/BandwidthLimit'\n        eventCount:\n          $ref: '#/components/schemas/EventCountLimit'\n      required:\n      - type\n      title: Throttle Limit\n      type: object\n    MonetizationInfo:\n      properties:\n        monetizationPlan:\n          description: Flag to indicate the monetization plan\n          enum:\n          - FIXEDRATE\n          - DYNAMICRATE\n          example: FixedRate\n          type: string\n        properties:\n          additionalProperties:\n            type: string\n          description: Map of custom properties related to each monetization plan\n          type: object\n      required:\n      - monetizationPlan\n      - properties\n      title: API monetization details object\n      type: object\n    BandwidthLimit:\n      allOf:\n      - $ref: '#/components/schemas/ThrottleLimitBase'\n      - $ref: '#/components/schemas/BandwidthLimit_allOf'\n      title: Bandwidth Limit object\n    RequestCountLimit:\n      allOf:\n      - $ref: '#/components/schemas/ThrottleLimitBase'\n      - $ref: '#/components/schemas/RequestCountLimit_allOf'\n      title: Request Count Limit object\n    EventCountLimit:\n      allOf:\n      - $ref: '#/components/schemas/ThrottleLimitBase'\n      - $ref: '#/components/schemas/EventCountLimit_allOf'\n      title: Event Count Limit object\n    SubscriptionPolicy:\n      allOf:\n      - $ref: '#/components/schemas/SubscriptionPolicy_allOf'\n      title: Subscription Throttling Policy\n    CustomAttribute:\n      properties:\n        name:\n          description: Name of the custom attribute\n          example: customAttr1\n          type: string\n        value:\n          description: Value of the custom attribute\n          example: value1\n          type: string\n      required:\n      - name\n      - value\n      title: Name-Value pair\n      type: object\n    SubscriptionThrottlePolicyPermission:\n      properties:\n        permissionType:\n          enum:\n          - ALLOW\n          - DENY\n          example: deny\n          type: string\n        roles:\n          example:\n          - Internal/everyone\n          items:\n            type: string\n          type: array\n      required:\n      - permissionType\n      - roles\n      title: SubscriptionThrottlePolicyPermission\n      type: object\n    APIMonetizationUsage:\n      example:\n        properties:\n          key: properties\n      properties:\n        properties:\n          additionalProperties:\n            type: string\n          description: Map of custom properties related to monetization usage\n          type: object\n      title: API monetization usage object\n      type: object\n    APIRevenue:\n      example:\n        properties:\n          key: properties\n      properties:\n        properties:\n          additionalProperties:\n            type: string\n          description: Map of custom properties related to API revenue\n          type: object\n      title: API revenue data object\n      type: object\n    MediationPolicy:\n      properties:\n        id:\n          example: 69ea3fa6-55c6-472e-896d-e449dd34a824\n          type: string\n        name:\n          example: log_in_message\n          type: string\n        type:\n          example: in\n          type: string\n        shared:\n          example: true\n          type: boolean\n      required:\n      - name\n      title: Mediation Policy\n      type: object\n    Error:\n      properties:\n        code:\n          format: int64\n          type: integer\n        message:\n          description: Error message.\n          type: string\n        description:\n          description: |\n            A detail description about the error message.\n          type: string\n        moreInfo:\n          description: |\n            Preferably an url with more details about the error.\n          type: string\n        error:\n          description: |\n            If there are more than one error list them out.\n            For example, list out validation errors by each field.\n          items:\n            $ref: '#/components/schemas/ErrorListItem'\n          type: array\n      required:\n      - code\n      - message\n      title: Error object returned with 4XX HTTP Status\n      type: object\n    ErrorListItem:\n      example:\n        code: code\n        description: description\n        message: message\n      properties:\n        code:\n          type: string\n        message:\n          description: |\n            Description about individual errors occurred\n          type: string\n        description:\n          description: |\n            A detail description about the error message.\n          type: string\n      required:\n      - code\n      - message\n      title: Description of individual errors that may have occurred during a request.\n      type: object\n    Environment:\n      example:\n        endpointURIs:\n        - protocol: default\n          endpointURI: default\n        - protocol: default\n          endpointURI: default\n        provider: wso2\n        showInApiConsole: true\n        displayName: Default\n        serverUrl: https://localhost:9443/services/\n        name: default\n        id: id\n        additionalProperties:\n        - value: wso2\n          key: Organization\n        - value: wso2\n          key: Organization\n        type: hybrid\n        vhosts:\n        - websubHttpPort: 9021\n          httpContext: pets\n          wssPort: 8099\n          httpPort: 80\n          wsPort: 9099\n          host: mg.wso2.com\n          websubHttpsPort: 8021\n          httpsPort: 443\n        - websubHttpPort: 9021\n          httpContext: pets\n          wssPort: 8099\n          httpPort: 80\n          wsPort: 9099\n          host: mg.wso2.com\n          websubHttpsPort: 8021\n          httpsPort: 443\n      properties:\n        id:\n          type: string\n        name:\n          example: default\n          type: string\n        displayName:\n          example: Default\n          type: string\n        type:\n          example: hybrid\n          type: string\n        serverUrl:\n          example: https://localhost:9443/services/\n          type: string\n        provider:\n          example: wso2\n          type: string\n        showInApiConsole:\n          example: true\n          type: boolean\n        vhosts:\n          items:\n            $ref: '#/components/schemas/VHost'\n          type: array\n        endpointURIs:\n          items:\n            $ref: '#/components/schemas/GatewayEnvironmentProtocolURI'\n          type: array\n        additionalProperties:\n          items:\n            $ref: '#/components/schemas/AdditionalProperty'\n          type: array\n      required:\n      - id\n      - name\n      - serverUrl\n      - showInApiConsole\n      - type\n      title: Environment\n      type: object\n    EnvironmentList:\n      properties:\n        count:\n          description: |\n            Number of Environments returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/Environment'\n          type: array\n      title: Environment List\n      type: object\n    AdditionalProperty:\n      example:\n        value: wso2\n        key: Organization\n      properties:\n        key:\n          example: Organization\n          type: string\n        value:\n          example: wso2\n          type: string\n      title: Additional Gateway Properties\n      type: object\n    VHost:\n      example:\n        websubHttpPort: 9021\n        httpContext: pets\n        wssPort: 8099\n        httpPort: 80\n        wsPort: 9099\n        host: mg.wso2.com\n        websubHttpsPort: 8021\n        httpsPort: 443\n      properties:\n        host:\n          example: mg.wso2.com\n          type: string\n        httpContext:\n          example: pets\n          type: string\n        httpPort:\n          example: 80\n          type: integer\n        httpsPort:\n          example: 443\n          type: integer\n        wsPort:\n          example: 9099\n          type: integer\n        wssPort:\n          example: 8099\n          type: integer\n        websubHttpPort:\n          example: 9021\n          type: integer\n        websubHttpsPort:\n          example: 8021\n          type: integer\n      title: Virtual Host\n      type: object\n    FileInfo:\n      example:\n        relativePath: apis/01234567-0123-0123-0123-012345678901/thumbnail\n        mediaType: image/jpeg\n      properties:\n        relativePath:\n          description: relative location of the file (excluding the base context and\n            host of the Publisher API)\n          example: apis/01234567-0123-0123-0123-012345678901/thumbnail\n          type: string\n        mediaType:\n          description: media-type of the file\n          example: image/jpeg\n          type: string\n      title: File Information including meta data\n      type: object\n    APIMaxTps:\n      example:\n        production: 1000\n        sandbox: 1000\n      properties:\n        production:\n          example: 1000\n          format: int64\n          type: integer\n        sandbox:\n          example: 1000\n          format: int64\n          type: integer\n      type: object\n    APIBusinessInformation:\n      properties:\n        businessOwner:\n          example: businessowner\n          maxLength: 120\n          type: string\n        businessOwnerEmail:\n          example: businessowner@wso2.com\n          type: string\n        technicalOwner:\n          example: technicalowner\n          maxLength: 120\n          type: string\n        technicalOwnerEmail:\n          example: technicalowner@wso2.com\n          type: string\n      type: object\n    WebsubSubscriptionConfiguration:\n      example:\n        signingAlgorithm: signingAlgorithm\n        enable: false\n        signatureHeader: signatureHeader\n        secret: secret\n      properties:\n        enable:\n          default: false\n          description: Toggle enable WebSub subscription configuration\n          type: boolean\n        secret:\n          description: Secret key to be used for subscription\n          type: string\n        signingAlgorithm:\n          description: The algorithm used for signing\n          type: string\n        signatureHeader:\n          description: The header uses to send the signature\n          type: string\n      type: object\n    APICorsConfiguration:\n      description: |\n        CORS configuration for the API\n      example:\n        accessControlAllowOrigins:\n        - accessControlAllowOrigins\n        - accessControlAllowOrigins\n        accessControlAllowCredentials: false\n        corsConfigurationEnabled: false\n        accessControlAllowHeaders:\n        - accessControlAllowHeaders\n        - accessControlAllowHeaders\n        accessControlAllowMethods:\n        - accessControlAllowMethods\n        - accessControlAllowMethods\n      properties:\n        corsConfigurationEnabled:\n          default: false\n          type: boolean\n        accessControlAllowOrigins:\n          items:\n            type: string\n          type: array\n        accessControlAllowCredentials:\n          default: false\n          type: boolean\n        accessControlAllowHeaders:\n          items:\n            type: string\n          type: array\n        accessControlAllowMethods:\n          items:\n            type: string\n          type: array\n      type: object\n    Endpoint:\n      properties:\n        id:\n          description: |\n            UUID of the Endpoint entry\n          example: 01234567-0123-0123-0123-012345678901\n          type: string\n        name:\n          description: |\n            name of the Endpoint entry\n          example: Endpoint 1\n          type: string\n        endpointConfig:\n          $ref: '#/components/schemas/Endpoint_endpointConfig'\n        endpointSecurity:\n          $ref: '#/components/schemas/Endpoint_endpointSecurity'\n        maxTps:\n          description: Endpoint max tps\n          example: 1000\n          format: int64\n          type: integer\n        type:\n          example: http\n          type: string\n      title: Endpoints\n      type: object\n    EndpointConfig:\n      properties:\n        url:\n          description: |\n            Service url of the endpoint\n          example: http://localhost:8280\n          type: string\n        timeout:\n          description: |\n            Time out of the endpoint\n          example: \"1000\"\n          type: string\n        attributes:\n          items:\n            $ref: '#/components/schemas/EndpointConfig_attributes'\n          type: array\n      title: Endpoint Configuration\n      type: object\n    EndpointList:\n      properties:\n        count:\n          description: |\n            Number of Endpoints returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/Endpoint'\n          type: array\n      title: Endpoint List\n      type: object\n    Scope:\n      example:\n        displayName: api_view\n        bindings:\n        - admin\n        - Internal/creator\n        - Internal/publisher\n        name: apim:api_view\n        description: This Scope can used to view Apis\n        id: 01234567-0123-0123-0123-012345678901\n        usageCount: 3\n      properties:\n        id:\n          description: |\n            UUID of the Scope. Valid only for shared scopes.\n          example: 01234567-0123-0123-0123-012345678901\n          readOnly: true\n          type: string\n        name:\n          description: |\n            name of Scope\n          example: apim:api_view\n          maxLength: 255\n          minLength: 1\n          type: string\n        displayName:\n          description: |\n            display name of Scope\n          example: api_view\n          maxLength: 255\n          type: string\n        description:\n          description: |\n            description of Scope\n          example: This Scope can used to view Apis\n          maxLength: 512\n          type: string\n        bindings:\n          description: |\n            role bindings list of the Scope\n          example:\n          - admin\n          - Internal/creator\n          - Internal/publisher\n          items:\n            type: string\n          type: array\n        usageCount:\n          description: |\n            usage count of Scope\n          example: 3\n          readOnly: true\n          type: integer\n      required:\n      - name\n      title: Scope\n      type: object\n    SharedScopeUsage:\n      example:\n        usedApiList:\n        - usedResourceList:\n          - verb: POST\n            target: /add\n          - verb: POST\n            target: /add\n          provider: admin\n          name: CalculatorAPI\n          context: CalculatorAPI\n          version: 1.0.0\n        - usedResourceList:\n          - verb: POST\n            target: /add\n          - verb: POST\n            target: /add\n          provider: admin\n          name: CalculatorAPI\n          context: CalculatorAPI\n          version: 1.0.0\n        name: apim:api_view\n        id: 01234567-0123-0123-0123-012345678901\n      properties:\n        id:\n          description: |\n            UUID of the Scope. Valid only for shared scopes.\n          example: 01234567-0123-0123-0123-012345678901\n          type: string\n        name:\n          description: |\n            name of Scope\n          example: apim:api_view\n          type: string\n        usedApiList:\n          description: |\n            API list which have used the shared scope\n          items:\n            $ref: '#/components/schemas/SharedScopeUsedAPIInfo'\n          type: array\n      required:\n      - id\n      - name\n      title: SharedScopeUsage\n      type: object\n    SharedScopeUsedAPIInfo:\n      example:\n        usedResourceList:\n        - verb: POST\n          target: /add\n        - verb: POST\n          target: /add\n        provider: admin\n        name: CalculatorAPI\n        context: CalculatorAPI\n        version: 1.0.0\n      properties:\n        name:\n          example: CalculatorAPI\n          type: string\n        context:\n          example: CalculatorAPI\n          type: string\n        version:\n          example: 1.0.0\n          type: string\n        provider:\n          description: |\n            If the provider value is not given user invoking the api will be used as the provider.\n          example: admin\n          type: string\n        usedResourceList:\n          description: |\n            Resource list which have used the shared scope within this API\n          items:\n            $ref: '#/components/schemas/SharedScopeUsedAPIResourceInfo'\n          type: array\n      required:\n      - context\n      - name\n      - version\n      title: API object using shared scope\n      type: object\n    SharedScopeUsedAPIResourceInfo:\n      example:\n        verb: POST\n        target: /add\n      properties:\n        target:\n          example: /add\n          type: string\n        verb:\n          example: POST\n          type: string\n      title: API resource object using shared scope\n      type: object\n    APIScope:\n      example:\n        shared: true\n        scope:\n          displayName: api_view\n          bindings:\n          - admin\n          - Internal/creator\n          - Internal/publisher\n          name: apim:api_view\n          description: This Scope can used to view Apis\n          id: 01234567-0123-0123-0123-012345678901\n          usageCount: 3\n      properties:\n        scope:\n          $ref: '#/components/schemas/Scope'\n        shared:\n          description: |\n            States whether scope is shared. This will not be honored when updating/adding scopes to APIs or when\n            adding/updating Shared Scopes.\n          example: true\n          type: boolean\n      required:\n      - scope\n      title: APIScope\n      type: object\n    APIOperations:\n      example:\n        usedProductIds: []\n        payloadSchema: payloadSchema\n        amznResourceName: amznResourceName\n        operationPolicies:\n          request:\n          - policyVersion: v1\n            policyId: policyId\n            policyName: policyName\n            parameters:\n              key: '{}'\n          - policyVersion: v1\n            policyId: policyId\n            policyName: policyName\n            parameters:\n              key: '{}'\n          response:\n          - policyVersion: v1\n            policyId: policyId\n            policyName: policyName\n            parameters:\n              key: '{}'\n          - policyVersion: v1\n            policyId: policyId\n            policyName: policyName\n            parameters:\n              key: '{}'\n          fault:\n          - policyVersion: v1\n            policyId: policyId\n            policyName: policyName\n            parameters:\n              key: '{}'\n          - policyVersion: v1\n            policyId: policyId\n            policyName: policyName\n            parameters:\n              key: '{}'\n        verb: POST\n        uriMapping: uriMapping\n        id: postapiresource\n        throttlingPolicy: Unlimited\n        scopes: []\n        amznResourceTimeout: 0\n        authType: Application \u0026 Application User\n        target: /order/{orderId}\n      properties:\n        id:\n          example: postapiresource\n          type: string\n        target:\n          example: /order/{orderId}\n          type: string\n        verb:\n          example: POST\n          type: string\n        authType:\n          default: Any\n          example: Application \u0026 Application User\n          type: string\n        throttlingPolicy:\n          example: Unlimited\n          type: string\n        scopes:\n          example: []\n          items:\n            type: string\n          type: array\n        usedProductIds:\n          example: []\n          items:\n            type: string\n          type: array\n        amznResourceName:\n          type: string\n        amznResourceTimeout:\n          type: integer\n        payloadSchema:\n          type: string\n        uriMapping:\n          type: string\n        operationPolicies:\n          $ref: '#/components/schemas/APIOperationPolicies'\n      title: Operation\n      type: object\n    ScopeList:\n      example:\n        pagination:\n          next: next\n          total: 10\n          offset: 0\n          previous: previous\n          limit: 1\n        count: 1\n        list:\n        - displayName: api_view\n          bindings:\n          - admin\n          - Internal/creator\n          - Internal/publisher\n          name: apim:api_view\n          description: This Scope can used to view Apis\n          id: 01234567-0123-0123-0123-012345678901\n          usageCount: 3\n        - displayName: api_view\n          bindings:\n          - admin\n          - Internal/creator\n          - Internal/publisher\n          name: apim:api_view\n          description: This Scope can used to view Apis\n          id: 01234567-0123-0123-0123-012345678901\n          usageCount: 3\n      properties:\n        count:\n          description: |\n            Number of Scopes returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/Scope'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      title: Scope List\n      type: object\n    ExternalStore:\n      example:\n        endpoint: http://localhost:9764/store\n        displayName: UKStore\n        id: Store123#\n        type: wso2\n      properties:\n        id:\n          description: |\n            The external store identifier, which is a unique value.\n          example: Store123#\n          type: string\n        displayName:\n          description: |\n            The name of the external API Store that is displayed in the Publisher UI.\n          example: UKStore\n          type: string\n        type:\n          description: |\n            The type of the Store. This can be a WSO2-specific API Store or an external one.\n          example: wso2\n          type: string\n        endpoint:\n          description: |\n            The endpoint URL of the external store\n          example: http://localhost:9764/store\n          type: string\n      title: External Store\n      type: object\n    APIExternalStore:\n      example:\n        lastUpdatedTime: 2019-09-09T13:57:16.229\n        id: Store123#\n      properties:\n        id:\n          description: |\n            The external store identifier, which is a unique value.\n          example: Store123#\n          type: string\n        lastUpdatedTime:\n          description: |\n            The recent timestamp which a given API is updated in the external store.\n          example: 2019-09-09T13:57:16.229\n          type: string\n      title: API External Store\n      type: object\n    APIExternalStoreList:\n      example:\n        count: 1\n        list:\n        - lastUpdatedTime: 2019-09-09T13:57:16.229\n          id: Store123#\n        - lastUpdatedTime: 2019-09-09T13:57:16.229\n          id: Store123#\n      properties:\n        count:\n          description: |\n            Number of external stores returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/APIExternalStore'\n          type: array\n      title: API External Store List\n      type: object\n    ExternalStoreList:\n      properties:\n        count:\n          description: |\n            Number of external stores returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/ExternalStore'\n          type: array\n      title: External Store List\n      type: object\n    Certificates:\n      description: Representation of a list of certificates\n      example:\n        pagination:\n          next: next\n          total: 10\n          offset: 0\n          previous: previous\n          limit: 1\n        certificates:\n        - endpoint: www.abc.com\n          alias: wso2carbon\n        - endpoint: www.abc.com\n          alias: wso2carbon\n        count: 1\n      properties:\n        count:\n          example: 1\n          type: integer\n        certificates:\n          items:\n            $ref: '#/components/schemas/CertMetadata'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      title: Certificates\n      type: object\n    CertMetadata:\n      description: Representation of the details of a certificate\n      example:\n        endpoint: www.abc.com\n        alias: wso2carbon\n      properties:\n        alias:\n          example: wso2carbon\n          type: string\n        endpoint:\n          example: www.abc.com\n          type: string\n      title: Certificate\n      type: object\n    CertificateInfo:\n      example:\n        subject: CN=wso2.com, OU=wso2, O=wso2, L=Colombo, ST=Western, C=LK\n        validity:\n          from: 12-12-2017\n          to: 01-01-2019\n        version: V3\n        status: Active\n      properties:\n        status:\n          example: Active\n          type: string\n        validity:\n          $ref: '#/components/schemas/CertificateValidity'\n        version:\n          example: V3\n          type: string\n        subject:\n          example: CN=wso2.com, OU=wso2, O=wso2, L=Colombo, ST=Western, C=LK\n          type: string\n      title: Certificate information\n      type: object\n    CertificateValidity:\n      example:\n        from: 12-12-2017\n        to: 01-01-2019\n      properties:\n        from:\n          example: 12-12-2017\n          type: string\n        to:\n          example: 01-01-2019\n          type: string\n      title: Certificate Valid period\n      type: object\n    ClientCertificates:\n      description: Representation of a list of client certificates\n      example:\n        pagination:\n          next: next\n          total: 10\n          offset: 0\n          previous: previous\n          limit: 1\n        certificates:\n        - tier: Gold\n          alias: wso2carbon\n          apiId: 64eca60b-2e55-4c38-8603-e9e6bad7d809\n        - tier: Gold\n          alias: wso2carbon\n          apiId: 64eca60b-2e55-4c38-8603-e9e6bad7d809\n        count: 1\n      properties:\n        count:\n          example: 1\n          type: integer\n        certificates:\n          items:\n            $ref: '#/components/schemas/ClientCertMetadata'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      title: Client Certificates\n      type: object\n    ClientCertMetadata:\n      description: Meta data of certificate\n      example:\n        tier: Gold\n        alias: wso2carbon\n        apiId: 64eca60b-2e55-4c38-8603-e9e6bad7d809\n      properties:\n        alias:\n          example: wso2carbon\n          type: string\n        apiId:\n          example: 64eca60b-2e55-4c38-8603-e9e6bad7d809\n          type: string\n        tier:\n          example: Gold\n          type: string\n      title: Client certificate meta data\n      type: object\n    LifecycleState:\n      example:\n        state: Created\n        checkItems:\n        - requiredStates: []\n          name: Deprecate old versions after publishing the API\n          value: false\n        - requiredStates: []\n          name: Deprecate old versions after publishing the API\n          value: false\n        availableTransitions:\n        - targetState: Published\n          event: Publish\n        - targetState: Published\n          event: Publish\n      properties:\n        state:\n          example: Created\n          type: string\n        checkItems:\n          items:\n            $ref: '#/components/schemas/LifecycleState_checkItems'\n          type: array\n        availableTransitions:\n          items:\n            $ref: '#/components/schemas/LifecycleState_availableTransitions'\n          type: array\n      title: Lifecycle State\n      type: object\n    LifecycleHistory:\n      example:\n        count: 1\n        list:\n        - updatedTime: 2019-02-31T23:59:60Z\n          postState: Published\n          user: admin\n          previousState: Created\n        - updatedTime: 2019-02-31T23:59:60Z\n          postState: Published\n          user: admin\n          previousState: Created\n      properties:\n        count:\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/LifecycleHistoryItem'\n          type: array\n      title: Lifecycle history item list\n      type: object\n    LifecycleHistoryItem:\n      example:\n        updatedTime: 2019-02-31T23:59:60Z\n        postState: Published\n        user: admin\n        previousState: Created\n      properties:\n        previousState:\n          example: Created\n          type: string\n        postState:\n          example: Published\n          type: string\n        user:\n          example: admin\n          type: string\n        updatedTime:\n          example: 2019-02-31T23:59:60Z\n          format: dateTime\n          type: string\n      title: Lifecycle history item\n      type: object\n    WorkflowResponse:\n      example:\n        lifecycleState:\n          state: Created\n          checkItems:\n          - requiredStates: []\n            name: Deprecate old versions after publishing the API\n            value: false\n          - requiredStates: []\n            name: Deprecate old versions after publishing the API\n            value: false\n          availableTransitions:\n          - targetState: Published\n            event: Publish\n          - targetState: Published\n            event: Publish\n        workflowStatus: APPROVED\n        jsonPayload: jsonPayload\n      properties:\n        workflowStatus:\n          description: |\n            This attribute declares whether this workflow task is approved or rejected.\n          enum:\n          - CREATED\n          - APPROVED\n          - REJECTED\n          - REGISTERED\n          example: APPROVED\n          type: string\n        jsonPayload:\n          description: |\n            Attributes that returned after the workflow execution\n          type: string\n        lifecycleState:\n          $ref: '#/components/schemas/LifecycleState'\n      required:\n      - workflowStatus\n      title: workflow Response\n      type: object\n    OpenAPIDefinitionValidationResponse:\n      example:\n        isValid: true\n        content: content\n        errors:\n        - code: code\n          description: description\n          message: message\n        - code: code\n          description: description\n          message: message\n        info:\n          endpoints:\n          - https://localhost:9443/am/sample/pizzashack/v1/api/\n          - https://localhost:9443/am/sample/pizzashack/v1/api/\n          name: PetStore\n          context: /petstore\n          description: A sample API that uses a petstore as an example to demonstrate\n            swagger-2.0 specification\n          openAPIVersion: 3.0.0\n          version: 1.0.0\n      properties:\n        isValid:\n          description: |\n            This attribute declares whether this definition is valid or not.\n          example: true\n          type: boolean\n        content:\n          description: |\n            OpenAPI definition content.\n          type: string\n        info:\n          $ref: '#/components/schemas/OpenAPIDefinitionValidationResponse_info'\n        errors:\n          description: |\n            If there are more than one error list them out.\n            For example, list out validation errors by each field.\n          items:\n            $ref: '#/components/schemas/ErrorListItem'\n          type: array\n      required:\n      - isValid\n      title: OpenAPI Definition Validation Response\n      type: object\n    WSDLValidationResponse:\n      example:\n        wsdlInfo:\n          endpoints:\n          - name: StockQuoteSoap\n            location: http://www.webservicex.net/stockquote.asmx\n          - name: StockQuoteSoap\n            location: http://www.webservicex.net/stockquote.asmx\n          version: \"1.1\"\n        isValid: true\n        errors:\n        - code: code\n          description: description\n          message: message\n        - code: code\n          description: description\n          message: message\n      properties:\n        isValid:\n          description: |\n            This attribute declares whether this definition is valid or not.\n          example: true\n          type: boolean\n        errors:\n          description: |\n            If there are more than one error list them out.\n            For example, list out validation errors by each field.\n          items:\n            $ref: '#/components/schemas/ErrorListItem'\n          type: array\n        wsdlInfo:\n          $ref: '#/components/schemas/WSDLValidationResponse_wsdlInfo'\n      required:\n      - isValid\n      title: WSDL Definition Validation Response\n      type: object\n    GraphQLValidationResponse:\n      example:\n        isValid: true\n        errorMessage: errorMessage\n        graphQLInfo:\n          graphQLSchema:\n            schemaDefinition: schemaDefinition\n            name: admin--HackerNewsAPI.graphql\n          operations:\n          - usedProductIds: []\n            payloadSchema: payloadSchema\n            amznResourceName: amznResourceName\n            operationPolicies:\n              request:\n              - policyVersion: v1\n                policyId: policyId\n                policyName: policyName\n                parameters:\n                  key: '{}'\n              - policyVersion: v1\n                policyId: policyId\n                policyName: policyName\n                parameters:\n                  key: '{}'\n              response:\n              - policyVersion: v1\n                policyId: policyId\n                policyName: policyName\n                parameters:\n                  key: '{}'\n              - policyVersion: v1\n                policyId: policyId\n                policyName: policyName\n                parameters:\n                  key: '{}'\n              fault:\n              - policyVersion: v1\n                policyId: policyId\n                policyName: policyName\n                parameters:\n                  key: '{}'\n              - policyVersion: v1\n                policyId: policyId\n                policyName: policyName\n                parameters:\n                  key: '{}'\n            verb: POST\n            uriMapping: uriMapping\n            id: postapiresource\n            throttlingPolicy: Unlimited\n            scopes: []\n            amznResourceTimeout: 0\n            authType: Application \u0026 Application User\n            target: /order/{orderId}\n          - usedProductIds: []\n            payloadSchema: payloadSchema\n            amznResourceName: amznResourceName\n            operationPolicies:\n              request:\n              - policyVersion: v1\n                policyId: policyId\n                policyName: policyName\n                parameters:\n                  key: '{}'\n              - policyVersion: v1\n                policyId: policyId\n                policyName: policyName\n                parameters:\n                  key: '{}'\n              response:\n              - policyVersion: v1\n                policyId: policyId\n                policyName: policyName\n                parameters:\n                  key: '{}'\n              - policyVersion: v1\n                policyId: policyId\n                policyName: policyName\n                parameters:\n                  key: '{}'\n              fault:\n              - policyVersion: v1\n                policyId: policyId\n                policyName: policyName\n                parameters:\n                  key: '{}'\n              - policyVersion: v1\n                policyId: policyId\n                policyName: policyName\n                parameters:\n                  key: '{}'\n            verb: POST\n            uriMapping: uriMapping\n            id: postapiresource\n            throttlingPolicy: Unlimited\n            scopes: []\n            amznResourceTimeout: 0\n            authType: Application \u0026 Application User\n            target: /order/{orderId}\n      properties:\n        isValid:\n          description: |\n            This attribute declares whether this definition is valid or not.\n          example: true\n          type: boolean\n        errorMessage:\n          description: |\n            This attribute declares the validation error message\n          type: string\n        graphQLInfo:\n          $ref: '#/components/schemas/GraphQLValidationResponse_graphQLInfo'\n      required:\n      - errorMessage\n      - isValid\n      title: GraphQL API definition validation Response\n      type: object\n    ApiEndpointValidationResponse:\n      example:\n        error: error\n        statusMessage: OK\n        statusCode: 200\n      properties:\n        statusCode:\n          description: HTTP status code\n          example: 200\n          type: integer\n        statusMessage:\n          description: string\n          example: OK\n          type: string\n        error:\n          description: |\n            If an error occurs, the error message will be set to this property.\n            If not, this will remain null.\n          type: string\n      required:\n      - statusCode\n      - statusMessage\n      title: API Endpoint url validation response\n      type: object\n    ThreatProtectionPolicyList:\n      properties:\n        list:\n          items:\n            $ref: '#/components/schemas/ThreatProtectionPolicy'\n          type: array\n      title: Threat Protection Policy List\n      type: object\n    ThreatProtectionPolicy:\n      properties:\n        uuid:\n          description: Policy ID\n          type: string\n        name:\n          description: Name of the policy\n          type: string\n        type:\n          description: Type of the policy\n          type: string\n        policy:\n          description: policy as a json string\n          type: string\n      required:\n      - name\n      - policy\n      - type\n      title: Threat Protection Policy Schema\n      type: object\n    SearchResultList:\n      example:\n        pagination:\n          next: next\n          total: 10\n          offset: 0\n          previous: previous\n          limit: 1\n        count: 1\n        list:\n        - '{}'\n        - '{}'\n      properties:\n        count:\n          description: |\n            Number of results returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            type: object\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      title: Unified Search Result List\n      type: object\n    SearchResult:\n      discriminator:\n        propertyName: name\n      properties:\n        id:\n          example: 01234567-0123-0123-0123-012345678901\n          type: string\n        name:\n          example: TestAPI\n          type: string\n        type:\n          enum:\n          - DOC\n          - API\n          - APIProduct\n          example: API\n          type: string\n        transportType:\n          description: Accepted values are HTTP, WS, SOAPTOREST, GRAPHQL\n          type: string\n      required:\n      - name\n      title: Search Result\n      type: object\n    APISearchResult:\n      allOf:\n      - $ref: '#/components/schemas/SearchResult'\n      - $ref: '#/components/schemas/APISearchResult_allOf'\n      title: API Result\n    APIProductSearchResult:\n      allOf:\n      - $ref: '#/components/schemas/SearchResult'\n      - $ref: '#/components/schemas/APIProductSearchResult_allOf'\n      title: API Result\n    APIMonetizationInfo:\n      example:\n        enabled: true\n        properties:\n          key: properties\n      properties:\n        enabled:\n          description: Flag to indicate the monetization status\n          example: true\n          type: boolean\n        properties:\n          additionalProperties:\n            type: string\n          description: Map of custom properties related to monetization\n          type: object\n      required:\n      - enabled\n      title: API monetization object\n      type: object\n    DocumentSearchResult:\n      allOf:\n      - $ref: '#/components/schemas/SearchResult'\n      - $ref: '#/components/schemas/DocumentSearchResult_allOf'\n      title: Document Result\n    MockResponsePayloadList:\n      example:\n        list:\n        - path: /menu\n          verb: POST\n          content: \"var accept = \\\"\\\\\\\"\\\"+mc.getProperty('AcceptHeader')+\\\"\\\\\\\"\\\"\\\n            ;\\nvar responseCode = mc.getProperty('query.param.responseCode');\\nvar\\\n            \\ responseCodeStr = \\\"\\\\\\\"\\\"+responseCode+\\\"\\\\\\\"\\\";\\nvar responses = [];\\n\\\n            \\nif (!responses[200]) {\\n responses [200] = [];\\n}\\nresponses[200][\\\"\\\n            application/json\\\"] = \\n[ {\\n  \\\"price\\\" : \\\"string\\\",\\n  \\\"description\\\"\\\n            \\ : \\\"string\\\",\\n  \\\"name\\\" : \\\"string\\\",\\n  \\\"image\\\" : \\\"string\\\"\\n\\\n            } ]\\n\\n/*if (!responses[304]) {\\n  responses[304] = [];\\n}\\nresponses[304][\\\"\\\n            application/(json or xml)\\\"] = {}/\u003c\u003e*/\\n\\nif (!responses[406]) {\\n responses\\\n            \\ [406] = [];\\n}\\nresponses[406][\\\"application/json\\\"] = \\n{\\n  \\\"message\\\"\\\n            \\ : \\\"string\\\",\\n  \\\"error\\\" : [ {\\n    \\\"message\\\" : \\\"string\\\",\\n  \\\n            \\  \\\"code\\\" : 0\\n  } ],\\n  \\\"description\\\" : \\\"string\\\",\\n  \\\"code\\\" :\\\n            \\ 0,\\n  \\\"moreInfo\\\" : \\\"string\\\"\\n}\\n\\nresponses[501] = [];\\nresponses[501][\\\"\\\n            application/json\\\"] = {\\n\\\"code\\\" : 501,\\n\\\"description\\\" : \\\"Not Implemented\\\"\\\n            }\\nresponses[501][\\\"application/xml\\\"] = \u003cresponse\u003e\u003ccode\u003e501\u003c/code\u003e\u003cdescription\u003eNot\\\n            \\ Implemented\u003c/description\u003e\u003c/response\u003e;\\n\\nif (!responses[responseCode])\\\n            \\ {\\n responseCode = 501;\\n}\\n\\nif (responseCode == null) {\\n responseCode\\\n            \\ = 200;\\n responseCodeStr = \\\"200\\\";\\n}\\n\\nif (accept == null || !responses[responseCode][accept])\\\n            \\ {\\n accept = \\\"application/json\\\";\\n}\\n\\nif (accept === \\\"application/json\\\"\\\n            ) {\\n mc.setProperty('CONTENT_TYPE', 'application/json');\\n mc.setProperty('HTTP_SC',\\\n            \\ responseCodeStr);\\n mc.setPayloadJSON(responses[responseCode][\\\"application/json\\\"\\\n            ]);\\n} else if (accept === \\\"application/xml\\\") {\\n mc.setProperty('CONTENT_TYPE',\\\n            \\ 'application/xml');\\n mc.setProperty('HTTP_SC', responseCodeStr);\\n\\\n            \\ mc.setPayloadXML(responses[responseCode][\\\"application/xml\\\"]);\\n}\"\n        - path: /menu\n          verb: POST\n          content: \"var accept = \\\"\\\\\\\"\\\"+mc.getProperty('AcceptHeader')+\\\"\\\\\\\"\\\"\\\n            ;\\nvar responseCode = mc.getProperty('query.param.responseCode');\\nvar\\\n            \\ responseCodeStr = \\\"\\\\\\\"\\\"+responseCode+\\\"\\\\\\\"\\\";\\nvar responses = [];\\n\\\n            \\nif (!responses[200]) {\\n responses [200] = [];\\n}\\nresponses[200][\\\"\\\n            application/json\\\"] = \\n[ {\\n  \\\"price\\\" : \\\"string\\\",\\n  \\\"description\\\"\\\n            \\ : \\\"string\\\",\\n  \\\"name\\\" : \\\"string\\\",\\n  \\\"image\\\" : \\\"string\\\"\\n\\\n            } ]\\n\\n/*if (!responses[304]) {\\n  responses[304] = [];\\n}\\nresponses[304][\\\"\\\n            application/(json or xml)\\\"] = {}/\u003c\u003e*/\\n\\nif (!responses[406]) {\\n responses\\\n            \\ [406] = [];\\n}\\nresponses[406][\\\"application/json\\\"] = \\n{\\n  \\\"message\\\"\\\n            \\ : \\\"string\\\",\\n  \\\"error\\\" : [ {\\n    \\\"message\\\" : \\\"string\\\",\\n  \\\n            \\  \\\"code\\\" : 0\\n  } ],\\n  \\\"description\\\" : \\\"string\\\",\\n  \\\"code\\\" :\\\n            \\ 0,\\n  \\\"moreInfo\\\" : \\\"string\\\"\\n}\\n\\nresponses[501] = [];\\nresponses[501][\\\"\\\n            application/json\\\"] = {\\n\\\"code\\\" : 501,\\n\\\"description\\\" : \\\"Not Implemented\\\"\\\n            }\\nresponses[501][\\\"application/xml\\\"] = \u003cresponse\u003e\u003ccode\u003e501\u003c/code\u003e\u003cdescription\u003eNot\\\n            \\ Implemented\u003c/description\u003e\u003c/response\u003e;\\n\\nif (!responses[responseCode])\\\n            \\ {\\n responseCode = 501;\\n}\\n\\nif (responseCode == null) {\\n responseCode\\\n            \\ = 200;\\n responseCodeStr = \\\"200\\\";\\n}\\n\\nif (accept == null || !responses[responseCode][accept])\\\n            \\ {\\n accept = \\\"application/json\\\";\\n}\\n\\nif (accept === \\\"application/json\\\"\\\n            ) {\\n mc.setProperty('CONTENT_TYPE', 'application/json');\\n mc.setProperty('HTTP_SC',\\\n            \\ responseCodeStr);\\n mc.setPayloadJSON(responses[responseCode][\\\"application/json\\\"\\\n            ]);\\n} else if (accept === \\\"application/xml\\\") {\\n mc.setProperty('CONTENT_TYPE',\\\n            \\ 'application/xml');\\n mc.setProperty('HTTP_SC', responseCodeStr);\\n\\\n            \\ mc.setPayloadXML(responses[responseCode][\\\"application/xml\\\"]);\\n}\"\n      properties:\n        list:\n          items:\n            $ref: '#/components/schemas/MockResponsePayloadInfo'\n          type: array\n      title: Mock Response Payload list\n      type: object\n    MockResponsePayloadInfo:\n      example:\n        path: /menu\n        verb: POST\n        content: \"var accept = \\\"\\\\\\\"\\\"+mc.getProperty('AcceptHeader')+\\\"\\\\\\\"\\\";\\n\\\n          var responseCode = mc.getProperty('query.param.responseCode');\\nvar responseCodeStr\\\n          \\ = \\\"\\\\\\\"\\\"+responseCode+\\\"\\\\\\\"\\\";\\nvar responses = [];\\n\\nif (!responses[200])\\\n          \\ {\\n responses [200] = [];\\n}\\nresponses[200][\\\"application/json\\\"] = \\n\\\n          [ {\\n  \\\"price\\\" : \\\"string\\\",\\n  \\\"description\\\" : \\\"string\\\",\\n  \\\"name\\\"\\\n          \\ : \\\"string\\\",\\n  \\\"image\\\" : \\\"string\\\"\\n} ]\\n\\n/*if (!responses[304])\\\n          \\ {\\n  responses[304] = [];\\n}\\nresponses[304][\\\"application/(json or xml)\\\"\\\n          ] = {}/\u003c\u003e*/\\n\\nif (!responses[406]) {\\n responses [406] = [];\\n}\\nresponses[406][\\\"\\\n          application/json\\\"] = \\n{\\n  \\\"message\\\" : \\\"string\\\",\\n  \\\"error\\\" : [\\\n          \\ {\\n    \\\"message\\\" : \\\"string\\\",\\n    \\\"code\\\" : 0\\n  } ],\\n  \\\"description\\\"\\\n          \\ : \\\"string\\\",\\n  \\\"code\\\" : 0,\\n  \\\"moreInfo\\\" : \\\"string\\\"\\n}\\n\\nresponses[501]\\\n          \\ = [];\\nresponses[501][\\\"application/json\\\"] = {\\n\\\"code\\\" : 501,\\n\\\"description\\\"\\\n          \\ : \\\"Not Implemented\\\"}\\nresponses[501][\\\"application/xml\\\"] = \u003cresponse\u003e\u003ccode\u003e501\u003c/code\u003e\u003cdescription\u003eNot\\\n          \\ Implemented\u003c/description\u003e\u003c/response\u003e;\\n\\nif (!responses[responseCode])\\\n          \\ {\\n responseCode = 501;\\n}\\n\\nif (responseCode == null) {\\n responseCode\\\n          \\ = 200;\\n responseCodeStr = \\\"200\\\";\\n}\\n\\nif (accept == null || !responses[responseCode][accept])\\\n          \\ {\\n accept = \\\"application/json\\\";\\n}\\n\\nif (accept === \\\"application/json\\\"\\\n          ) {\\n mc.setProperty('CONTENT_TYPE', 'application/json');\\n mc.setProperty('HTTP_SC',\\\n          \\ responseCodeStr);\\n mc.setPayloadJSON(responses[responseCode][\\\"application/json\\\"\\\n          ]);\\n} else if (accept === \\\"application/xml\\\") {\\n mc.setProperty('CONTENT_TYPE',\\\n          \\ 'application/xml');\\n mc.setProperty('HTTP_SC', responseCodeStr);\\n mc.setPayloadXML(responses[responseCode][\\\"\\\n          application/xml\\\"]);\\n}\"\n      properties:\n        path:\n          description: path of the resource\n          example: /menu\n          type: string\n        content:\n          description: new modified code\n          example: \"var accept = \\\"\\\\\\\"\\\"+mc.getProperty('AcceptHeader')+\\\"\\\\\\\"\\\"\\\n            ;\\nvar responseCode = mc.getProperty('query.param.responseCode');\\nvar\\\n            \\ responseCodeStr = \\\"\\\\\\\"\\\"+responseCode+\\\"\\\\\\\"\\\";\\nvar responses = [];\\n\\\n            \\nif (!responses[200]) {\\n responses [200] = [];\\n}\\nresponses[200][\\\"\\\n            application/json\\\"] = \\n[ {\\n  \\\"price\\\" : \\\"string\\\",\\n  \\\"description\\\"\\\n            \\ : \\\"string\\\",\\n  \\\"name\\\" : \\\"string\\\",\\n  \\\"image\\\" : \\\"string\\\"\\n\\\n            } ]\\n\\n/*if (!responses[304]) {\\n  responses[304] = [];\\n}\\nresponses[304][\\\"\\\n            application/(json or xml)\\\"] = {}/\u003c\u003e*/\\n\\nif (!responses[406]) {\\n responses\\\n            \\ [406] = [];\\n}\\nresponses[406][\\\"application/json\\\"] = \\n{\\n  \\\"message\\\"\\\n            \\ : \\\"string\\\",\\n  \\\"error\\\" : [ {\\n    \\\"message\\\" : \\\"string\\\",\\n  \\\n            \\  \\\"code\\\" : 0\\n  } ],\\n  \\\"description\\\" : \\\"string\\\",\\n  \\\"code\\\" :\\\n            \\ 0,\\n  \\\"moreInfo\\\" : \\\"string\\\"\\n}\\n\\nresponses[501] = [];\\nresponses[501][\\\"\\\n            application/json\\\"] = {\\n\\\"code\\\" : 501,\\n\\\"description\\\" : \\\"Not Implemented\\\"\\\n            }\\nresponses[501][\\\"application/xml\\\"] = \u003cresponse\u003e\u003ccode\u003e501\u003c/code\u003e\u003cdescription\u003eNot\\\n            \\ Implemented\u003c/description\u003e\u003c/response\u003e;\\n\\nif (!responses[responseCode])\\\n            \\ {\\n responseCode = 501;\\n}\\n\\nif (responseCode == null) {\\n responseCode\\\n            \\ = 200;\\n responseCodeStr = \\\"200\\\";\\n}\\n\\nif (accept == null || !responses[responseCode][accept])\\\n            \\ {\\n accept = \\\"application/json\\\";\\n}\\n\\nif (accept === \\\"application/json\\\"\\\n            ) {\\n mc.setProperty('CONTENT_TYPE', 'application/json');\\n mc.setProperty('HTTP_SC',\\\n            \\ responseCodeStr);\\n mc.setPayloadJSON(responses[responseCode][\\\"application/json\\\"\\\n            ]);\\n} else if (accept === \\\"application/xml\\\") {\\n mc.setProperty('CONTENT_TYPE',\\\n            \\ 'application/xml');\\n mc.setProperty('HTTP_SC', responseCodeStr);\\n\\\n            \\ mc.setPayloadXML(responses[responseCode][\\\"application/xml\\\"]);\\n}\"\n          type: string\n        verb:\n          example: POST\n          type: string\n      title: Mock Response Payload info object\n      type: object\n    ResourcePolicyList:\n      example:\n        count: 1\n        list:\n        - httpVerb: get\n          resourcePath: checkPhoneNumber\n          id: 01234567-0123-0123-0123-012345678901\n          content: \u003cheader description=\"SOAPAction\" name=\"SOAPAction\" scope=\"transport\"\n            value=\"http://ws.cdyne.com/PhoneVerify/query/CheckPhoneNumber\"/\u003e\n        - httpVerb: get\n          resourcePath: checkPhoneNumber\n          id: 01234567-0123-0123-0123-012345678901\n          content: \u003cheader description=\"SOAPAction\" name=\"SOAPAction\" scope=\"transport\"\n            value=\"http://ws.cdyne.com/PhoneVerify/query/CheckPhoneNumber\"/\u003e\n      properties:\n        list:\n          items:\n            $ref: '#/components/schemas/ResourcePolicyInfo'\n          type: array\n        count:\n          description: |\n            Number of policy resources returned.\n          example: 1\n          type: integer\n      title: Resource policy List\n      type: object\n    ResourcePolicyInfo:\n      example:\n        httpVerb: get\n        resourcePath: checkPhoneNumber\n        id: 01234567-0123-0123-0123-012345678901\n        content: \u003cheader description=\"SOAPAction\" name=\"SOAPAction\" scope=\"transport\"\n          value=\"http://ws.cdyne.com/PhoneVerify/query/CheckPhoneNumber\"/\u003e\n      properties:\n        id:\n          description: |\n            UUID of the resource policy registry artifact\n          example: 01234567-0123-0123-0123-012345678901\n          readOnly: true\n          type: string\n        httpVerb:\n          description: HTTP verb used for the resource path\n          example: get\n          type: string\n        resourcePath:\n          description: A string that represents the resource path of the api for the\n            related resource policy\n          example: checkPhoneNumber\n          type: string\n        content:\n          description: The resource policy content\n          example: \u003cheader description=\"SOAPAction\" name=\"SOAPAction\" scope=\"transport\"\n            value=\"http://ws.cdyne.com/PhoneVerify/query/CheckPhoneNumber\"/\u003e\n          type: string\n      title: Resource policy Info object with conversion policy resource details.\n      type: object\n    Settings:\n      example:\n        devportalUrl: https://localhost:9443/devportal\n        externalStoresEnabled: true\n        environment:\n        - endpointURIs:\n          - protocol: default\n            endpointURI: default\n          - protocol: default\n            endpointURI: default\n          provider: wso2\n          showInApiConsole: true\n          displayName: Default\n          serverUrl: https://localhost:9443/services/\n          name: default\n          id: id\n          additionalProperties:\n          - value: wso2\n            key: Organization\n          - value: wso2\n            key: Organization\n          type: hybrid\n          vhosts:\n          - websubHttpPort: 9021\n            httpContext: pets\n            wssPort: 8099\n            httpPort: 80\n            wsPort: 9099\n            host: mg.wso2.com\n            websubHttpsPort: 8021\n            httpsPort: 443\n          - websubHttpPort: 9021\n            httpContext: pets\n            wssPort: 8099\n            httpPort: 80\n            wsPort: 9099\n            host: mg.wso2.com\n            websubHttpsPort: 8021\n            httpsPort: 443\n        - endpointURIs:\n          - protocol: default\n            endpointURI: default\n          - protocol: default\n            endpointURI: default\n          provider: wso2\n          showInApiConsole: true\n          displayName: Default\n          serverUrl: https://localhost:9443/services/\n          name: default\n          id: id\n          additionalProperties:\n          - value: wso2\n            key: Organization\n          - value: wso2\n            key: Organization\n          type: hybrid\n          vhosts:\n          - websubHttpPort: 9021\n            httpContext: pets\n            wssPort: 8099\n            httpPort: 80\n            wsPort: 9099\n            host: mg.wso2.com\n            websubHttpsPort: 8021\n            httpsPort: 443\n          - websubHttpPort: 9021\n            httpContext: pets\n            wssPort: 8099\n            httpPort: 80\n            wsPort: 9099\n            host: mg.wso2.com\n            websubHttpsPort: 8021\n            httpsPort: 443\n        crossTenantSubscriptionEnabled: false\n        securityAuditProperties: '{}'\n        scopes:\n        - apim:api_create\n        - apim:api_manage\n        - apim:api_publish\n        monetizationAttributes: []\n        authorizationHeader: authorization\n        docVisibilityEnabled: false\n      properties:\n        devportalUrl:\n          description: The Developer Portal URL\n          example: https://localhost:9443/devportal\n          type: string\n        environment:\n          items:\n            $ref: '#/components/schemas/Environment'\n          type: array\n        scopes:\n          example:\n          - apim:api_create\n          - apim:api_manage\n          - apim:api_publish\n          items:\n            type: string\n          type: array\n        monetizationAttributes:\n          example: []\n          items:\n            $ref: '#/components/schemas/MonetizationAttribute'\n          type: array\n        securityAuditProperties:\n          properties: {}\n          type: object\n        externalStoresEnabled:\n          description: |\n            Is External Stores configuration enabled\n          example: true\n          type: boolean\n        docVisibilityEnabled:\n          description: |\n            Is Document Visibility configuration enabled\n          example: false\n          type: boolean\n        crossTenantSubscriptionEnabled:\n          default: false\n          description: |\n            Is Cross Tenant Subscriptions Enabled\n          example: false\n          type: boolean\n        authorizationHeader:\n          description: Authorization Header\n          example: authorization\n          type: string\n      title: SettingsDTO\n      type: object\n    SecurityAuditAttribute:\n      properties:\n        isGlobal:\n          example: false\n          type: boolean\n        overrideGlobal:\n          example: false\n          type: boolean\n        apiToken:\n          example: b1267ytf-b7gc-4aee-924d-ece81241efec\n          type: string\n        collectionId:\n          example: 456ef957-5a79-449f-83y3-9027945d3c60\n          type: string\n        baseUrl:\n          type: string\n      title: SecurityAuditAttributeDTO\n      type: object\n    WSDLInfo:\n      example:\n        type: WSDL\n      properties:\n        type:\n          description: Indicates whether the WSDL is a single WSDL or an archive in\n            ZIP format\n          enum:\n          - WSDL\n          - ZIP\n          type: string\n      title: WSDL information of the API. This is only available if the API is a SOAP\n        API.\n      type: object\n    Pagination:\n      example:\n        next: next\n        total: 10\n        offset: 0\n        previous: previous\n        limit: 1\n      properties:\n        offset:\n          example: 0\n          type: integer\n        limit:\n          example: 1\n          type: integer\n        total:\n          example: 10\n          type: integer\n        next:\n          description: |\n            Link to the next subset of resources qualified.\n            Empty if no more resources are to be returned.\n          type: string\n        previous:\n          description: |\n            Link to the previous subset of resources qualified.\n            Empty if current subset is the first subset returned.\n          type: string\n      title: Pagination\n      type: object\n    MonetizationAttribute:\n      properties:\n        required:\n          description: |\n            Is attribute required\n          example: true\n          type: boolean\n        name:\n          description: |\n            Name of the attribute\n          type: string\n        displayName:\n          description: |\n            Display name of the attribute\n          type: string\n        description:\n          description: |\n            Description of the attribute\n          type: string\n        hidden:\n          description: |\n            Is attribute hidden\n          type: boolean\n        default:\n          description: |\n            Default value of the attribute\n          type: string\n      title: Monetization attribute object\n      type: object\n    Tenant:\n      example:\n        domain: wso2.com\n        status: active\n      properties:\n        domain:\n          description: tenant domain\n          example: wso2.com\n          type: string\n        status:\n          description: current status of the tenant active/inactive\n          example: active\n          type: string\n      title: Tenant\n      type: object\n    TenantList:\n      example:\n        pagination:\n          next: next\n          total: 10\n          offset: 0\n          previous: previous\n          limit: 1\n        count: 1\n        list:\n        - domain: wso2.com\n          status: active\n        - domain: wso2.com\n          status: active\n      properties:\n        count:\n          description: |\n            Number of tenants returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/Tenant'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      title: Tenant list\n      type: object\n    AdvertiseInfo:\n      example:\n        apiOwner: admin\n        apiExternalProductionEndpoint: https://localhost:9443/devportal\n        apiExternalSandboxEndpoint: https://localhost:9443/devportal\n        advertised: true\n        vendor: WSO2\n        originalDevPortalUrl: https://localhost:9443/devportal\n      properties:\n        advertised:\n          example: true\n          type: boolean\n        apiExternalProductionEndpoint:\n          example: https://localhost:9443/devportal\n          type: string\n        apiExternalSandboxEndpoint:\n          example: https://localhost:9443/devportal\n          type: string\n        originalDevPortalUrl:\n          example: https://localhost:9443/devportal\n          type: string\n        apiOwner:\n          example: admin\n          type: string\n        vendor:\n          default: WSO2\n          enum:\n          - WSO2\n          - AWS\n          type: string\n      title: API Advertise info object with advertise details\n      type: object\n    APICategory:\n      example:\n        name: Finance\n        description: Finance related APIs\n        id: 01234567-0123-0123-0123-012345678901\n      properties:\n        id:\n          example: 01234567-0123-0123-0123-012345678901\n          type: string\n        name:\n          example: Finance\n          type: string\n        description:\n          example: Finance related APIs\n          type: string\n      required:\n      - name\n      title: API Category\n      type: object\n    APICategoryList:\n      example:\n        count: 1\n        list:\n        - name: Finance\n          description: Finance related APIs\n          id: 01234567-0123-0123-0123-012345678901\n        - name: Finance\n          description: Finance related APIs\n          id: 01234567-0123-0123-0123-012345678901\n      properties:\n        count:\n          description: |\n            Number of API categories returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/APICategory'\n          type: array\n      title: API Category List\n      type: object\n    KeyManagerInfo:\n      example:\n        displayName: Keymanager1\n        name: WSO2 IS\n        description: This is a key manager for Developers\n        id: 01234567-0123-0123-0123-012345678901\n        additionalProperties:\n        - '{}'\n        - '{}'\n        type: IS\n        enabled: true\n      properties:\n        id:\n          example: 01234567-0123-0123-0123-012345678901\n          type: string\n        name:\n          example: WSO2 IS\n          type: string\n        displayName:\n          description: |\n            display name of Keymanager\n          example: Keymanager1\n          type: string\n        type:\n          example: IS\n          type: string\n        description:\n          example: This is a key manager for Developers\n          type: string\n        enabled:\n          example: true\n          type: boolean\n        additionalProperties:\n          items:\n            properties: {}\n            type: object\n          type: array\n      required:\n      - name\n      - type\n      title: Key Manager Info\n      type: object\n    KeyManagerList:\n      example:\n        count: 1\n        list:\n        - displayName: Keymanager1\n          name: WSO2 IS\n          description: This is a key manager for Developers\n          id: 01234567-0123-0123-0123-012345678901\n          additionalProperties:\n          - '{}'\n          - '{}'\n          type: IS\n          enabled: true\n        - displayName: Keymanager1\n          name: WSO2 IS\n          description: This is a key manager for Developers\n          id: 01234567-0123-0123-0123-012345678901\n          additionalProperties:\n          - '{}'\n          - '{}'\n          type: IS\n          enabled: true\n      properties:\n        count:\n          description: |\n            Number of Key managers returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/KeyManagerInfo'\n          type: array\n      title: Key Manager List\n      type: object\n    APIKey:\n      example:\n        validityTime: 3600\n        apikey: eyJoZWxsbyI6IndvcmxkIn0=.eyJ3c28yIjoiYXBpbSJ9.eyJ3c28yIjoic2lnbmF0dXJlIn0=\n      properties:\n        apikey:\n          description: API Key\n          example: eyJoZWxsbyI6IndvcmxkIn0=.eyJ3c28yIjoiYXBpbSJ9.eyJ3c28yIjoic2lnbmF0dXJlIn0=\n          type: string\n        validityTime:\n          example: 3600\n          format: int32\n          type: integer\n      title: API Key details to invoke APIs\n      type: object\n    EnvironmentProperties:\n      additionalProperties:\n        type: string\n      example:\n        productionEndpoint: https://localhost:9443/pizzashack/v1/api/\n        sandboxEndpoint: https://localhost:9443/pizzashack/v1/api/\n      title: Envionment specific API properties request body\n      type: object\n    AsyncAPISpecificationValidationResponse:\n      example:\n        isValid: true\n        content: content\n        errors:\n        - code: code\n          description: description\n          message: message\n        - code: code\n          description: description\n          message: message\n        info:\n          protocol: WEBSUB\n          endpoints:\n          - https://localhost:9443/am/sample/pizzashack/v1/api/\n          - https://localhost:9443/am/sample/pizzashack/v1/api/\n          gatewayVendor: wso2\n          asyncTransportProtocols:\n          - http\n          - http\n          name: Streetlights\n          context: /streetlights\n          description: A sample API that uses a streetlights as an example to demonstrate\n            AsyncAPI specifications\n          version: 1.0.0\n          asyncAPIVersion: \"2.0\"\n      properties:\n        isValid:\n          description: This attribute declares whether this definition is valid or\n            not.\n          example: true\n          type: boolean\n        content:\n          description: AsyncAPI specification content\n          type: string\n        info:\n          $ref: '#/components/schemas/AsyncAPISpecificationValidationResponse_info'\n        errors:\n          description: If there are more than one error list them out. For example,\n            list out validation error by each field.\n          items:\n            $ref: '#/components/schemas/ErrorListItem'\n          type: array\n      required:\n      - isValid\n      title: AsyncAPI Specification Validation Response\n      type: object\n    OperationPolicy:\n      example:\n        policyVersion: v1\n        policyId: policyId\n        policyName: policyName\n        parameters:\n          key: '{}'\n      properties:\n        policyName:\n          type: string\n        policyVersion:\n          default: v1\n          type: string\n        policyId:\n          type: string\n        parameters:\n          additionalProperties:\n            type: object\n          type: object\n      required:\n      - policyName\n      title: API Operation Policy\n      type: object\n    APIOperationPolicies:\n      example:\n        request:\n        - policyVersion: v1\n          policyId: policyId\n          policyName: policyName\n          parameters:\n            key: '{}'\n        - policyVersion: v1\n          policyId: policyId\n          policyName: policyName\n          parameters:\n            key: '{}'\n        response:\n        - policyVersion: v1\n          policyId: policyId\n          policyName: policyName\n          parameters:\n            key: '{}'\n        - policyVersion: v1\n          policyId: policyId\n          policyName: policyName\n          parameters:\n            key: '{}'\n        fault:\n        - policyVersion: v1\n          policyId: policyId\n          policyName: policyName\n          parameters:\n            key: '{}'\n        - policyVersion: v1\n          policyId: policyId\n          policyName: policyName\n          parameters:\n            key: '{}'\n      properties:\n        request:\n          items:\n            $ref: '#/components/schemas/OperationPolicy'\n          type: array\n        response:\n          items:\n            $ref: '#/components/schemas/OperationPolicy'\n          type: array\n        fault:\n          items:\n            $ref: '#/components/schemas/OperationPolicy'\n          type: array\n      title: API Operation Level Policies\n    GatewayEnvironmentProtocolURI:\n      example:\n        protocol: default\n        endpointURI: default\n      properties:\n        protocol:\n          example: default\n          type: string\n        endpointURI:\n          example: default\n          type: string\n      required:\n      - endpointURI\n      - protocol\n      title: Gateway Environment protocols and URIs\n      type: object\n    OperationPolicyDataList:\n      example:\n        pagination:\n          next: next\n          total: 10\n          offset: 0\n          previous: previous\n          limit: 1\n        count: 1\n        list:\n        - supportedApiTypes:\n          - REST\n          - REST\n          policyAttributes:\n          - allowedValues:\n            - '[\"GET\",\"POST\",\"PUT\"]'\n            - '[\"GET\",\"POST\",\"PUT\"]'\n            displayName: Header Name\n            defaultValue: \"true\"\n            name: headerName\n            description: Name of the header to be removed\n            type: string\n            validationRegex: /^[a-z\\s]{0,255}$/i\n            required: true\n          - allowedValues:\n            - '[\"GET\",\"POST\",\"PUT\"]'\n            - '[\"GET\",\"POST\",\"PUT\"]'\n            displayName: Header Name\n            defaultValue: \"true\"\n            name: headerName\n            description: Name of the header to be removed\n            type: string\n            validationRegex: /^[a-z\\s]{0,255}$/i\n            required: true\n          displayName: Remove Header Policy\n          supportedGateways:\n          - Synapse\n          - Synapse\n          name: removeHeaderPolicy\n          description: With this policy, user can add a new header to the request\n          id: 121223q41-24141-124124124-12414\n          applicableFlows:\n          - in\n          - in\n          category: Mediation\n          version: v1\n          isAPISpecific: true\n          md5: 121223q41-24141-124124124-12414\n        - supportedApiTypes:\n          - REST\n          - REST\n          policyAttributes:\n          - allowedValues:\n            - '[\"GET\",\"POST\",\"PUT\"]'\n            - '[\"GET\",\"POST\",\"PUT\"]'\n            displayName: Header Name\n            defaultValue: \"true\"\n            name: headerName\n            description: Name of the header to be removed\n            type: string\n            validationRegex: /^[a-z\\s]{0,255}$/i\n            required: true\n          - allowedValues:\n            - '[\"GET\",\"POST\",\"PUT\"]'\n            - '[\"GET\",\"POST\",\"PUT\"]'\n            displayName: Header Name\n            defaultValue: \"true\"\n            name: headerName\n            description: Name of the header to be removed\n            type: string\n            validationRegex: /^[a-z\\s]{0,255}$/i\n            required: true\n          displayName: Remove Header Policy\n          supportedGateways:\n          - Synapse\n          - Synapse\n          name: removeHeaderPolicy\n          description: With this policy, user can add a new header to the request\n          id: 121223q41-24141-124124124-12414\n          applicableFlows:\n          - in\n          - in\n          category: Mediation\n          version: v1\n          isAPISpecific: true\n          md5: 121223q41-24141-124124124-12414\n      properties:\n        count:\n          description: |\n            Number of operation policies returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/OperationPolicyData'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      title: Operation policy List\n      type: object\n    OperationPolicyImportExportData:\n      properties:\n        type:\n          example: operation_policy_specification\n          type: string\n        version:\n          example: v4.1.0\n          type: string\n        data:\n          $ref: '#/components/schemas/OperationPolicyData'\n      title: Operation Policy Import Export Data\n      type: object\n    OperationPolicyData:\n      example:\n        supportedApiTypes:\n        - REST\n        - REST\n        policyAttributes:\n        - allowedValues:\n          - '[\"GET\",\"POST\",\"PUT\"]'\n          - '[\"GET\",\"POST\",\"PUT\"]'\n          displayName: Header Name\n          defaultValue: \"true\"\n          name: headerName\n          description: Name of the header to be removed\n          type: string\n          validationRegex: /^[a-z\\s]{0,255}$/i\n          required: true\n        - allowedValues:\n          - '[\"GET\",\"POST\",\"PUT\"]'\n          - '[\"GET\",\"POST\",\"PUT\"]'\n          displayName: Header Name\n          defaultValue: \"true\"\n          name: headerName\n          description: Name of the header to be removed\n          type: string\n          validationRegex: /^[a-z\\s]{0,255}$/i\n          required: true\n        displayName: Remove Header Policy\n        supportedGateways:\n        - Synapse\n        - Synapse\n        name: removeHeaderPolicy\n        description: With this policy, user can add a new header to the request\n        id: 121223q41-24141-124124124-12414\n        applicableFlows:\n        - in\n        - in\n        category: Mediation\n        version: v1\n        isAPISpecific: true\n        md5: 121223q41-24141-124124124-12414\n      properties:\n        category:\n          example: Mediation\n          type: string\n        id:\n          example: 121223q41-24141-124124124-12414\n          type: string\n        name:\n          example: removeHeaderPolicy\n          type: string\n        version:\n          example: v1\n          type: string\n        displayName:\n          example: Remove Header Policy\n          type: string\n        description:\n          example: With this policy, user can add a new header to the request\n          type: string\n        applicableFlows:\n          items:\n            example: in\n            type: string\n          type: array\n        supportedGateways:\n          items:\n            example: Synapse\n            type: string\n          type: array\n        supportedApiTypes:\n          items:\n            example: REST\n            type: string\n          type: array\n        isAPISpecific:\n          example: true\n          type: boolean\n        md5:\n          example: 121223q41-24141-124124124-12414\n          type: string\n        policyAttributes:\n          items:\n            $ref: '#/components/schemas/OperationPolicySpecAttribute'\n          type: array\n      title: Operation Policy Data\n      type: object\n    OperationPolicySpecAttribute:\n      example:\n        allowedValues:\n        - '[\"GET\",\"POST\",\"PUT\"]'\n        - '[\"GET\",\"POST\",\"PUT\"]'\n        displayName: Header Name\n        defaultValue: \"true\"\n        name: headerName\n        description: Name of the header to be removed\n        type: string\n        validationRegex: /^[a-z\\s]{0,255}$/i\n        required: true\n      properties:\n        name:\n          description: Name of the attibute\n          example: headerName\n          type: string\n        displayName:\n          description: Display name of the attibute\n          example: Header Name\n          type: string\n        description:\n          description: Description of the attibute\n          example: Name of the header to be removed\n          type: string\n        validationRegex:\n          description: UI validation regex for the attibute\n          example: /^[a-z\\s]{0,255}$/i\n          type: string\n        type:\n          description: Type of the attibute\n          example: string\n          type: string\n        required:\n          description: Is this attibute mandetory for the policy\n          example: true\n          type: boolean\n        defaultValue:\n          description: Default value for the attribute\n          example: \"true\"\n          type: string\n        allowedValues:\n          description: If the attribute type is enum, this array should contain all\n            the possible values for the enum.\n          items:\n            example: '[\"GET\",\"POST\",\"PUT\"]'\n            type: string\n          type: array\n      title: OperationPolicySpecAttribute\n      type: object\n    Post_request_body:\n      properties:\n        content:\n          description: |\n            Content of the comment\n          example: This is a comment\n          maxLength: 512\n          type: string\n        category:\n          description: |\n            Category of the comment\n          example: general\n          type: string\n      required:\n      - content\n      title: Post request body\n      type: object\n    Patch_request_body:\n      properties:\n        content:\n          description: |\n            Content of the comment\n          example: This is a comment\n          maxLength: 512\n          type: string\n        category:\n          description: |\n            Category of the comment\n          example: general\n          type: string\n      title: Patch request body\n      type: object\n    APIInfo_additionalProperties:\n      example:\n        display: true\n        name: name\n        value: value\n      properties:\n        name:\n          type: string\n        value:\n          type: string\n        display:\n          type: boolean\n    APIInfo_additionalPropertiesMap:\n      example:\n        display: false\n        name: name\n        value: value\n      properties:\n        name:\n          type: string\n        value:\n          type: string\n        display:\n          default: false\n          type: boolean\n    API_threatProtectionPolicies_list:\n      example:\n        policyId: policyId\n        priority: 0\n      properties:\n        policyId:\n          type: string\n        priority:\n          type: integer\n    API_threatProtectionPolicies:\n      example:\n        list:\n        - policyId: policyId\n          priority: 0\n        - policyId: policyId\n          priority: 0\n      properties:\n        list:\n          items:\n            $ref: '#/components/schemas/API_threatProtectionPolicies_list'\n          type: array\n    API_serviceInfo:\n      example:\n        outdated: false\n        name: PetStore\n        version: 1.0.0\n        key: PetStore-1.0.0\n      properties:\n        key:\n          example: PetStore-1.0.0\n          type: string\n        name:\n          example: PetStore\n          type: string\n        version:\n          example: 1.0.0\n          type: string\n        outdated:\n          example: false\n          type: boolean\n    BandwidthLimit_allOf:\n      properties:\n        dataAmount:\n          description: Amount of data allowed to be transfered\n          example: 1000\n          format: int64\n          type: integer\n        dataUnit:\n          description: Unit of data allowed to be transfered. Allowed values are \"KB\",\n            \"MB\" and \"GB\"\n          example: KB\n          type: string\n      required:\n      - dataAmount\n      - dataUnit\n    RequestCountLimit_allOf:\n      properties:\n        requestCount:\n          description: Maximum number of requests allowed\n          example: 30\n          format: int64\n          type: integer\n      required:\n      - requestCount\n    EventCountLimit_allOf:\n      properties:\n        eventCount:\n          description: Maximum number of events allowed\n          example: 3000\n          format: int64\n          type: integer\n      required:\n      - eventCount\n    SubscriptionPolicy_allOf:\n      properties:\n        policyId:\n          description: Id of policy\n          example: 1\n          type: integer\n        uuid:\n          description: policy uuid\n          example: 0c6439fd-9b16-3c2e-be6e-1086e0b9aa93\n          type: string\n        policyName:\n          description: Name of policy\n          example: 30PerMin\n          maxLength: 60\n          minLength: 1\n          type: string\n        displayName:\n          description: Display name of the policy\n          example: 30PerMin\n          maxLength: 512\n          type: string\n        description:\n          description: Description of the policy\n          example: Allows 30 request per minute\n          maxLength: 1024\n          type: string\n        isDeployed:\n          default: false\n          description: Indicates whether the policy is deployed successfully or not.\n          type: boolean\n        tenantId:\n          description: Throttling policy tenant domain id\n          example: -1234\n          type: integer\n        tenantDomain:\n          description: Throttling policy tenant domain\n          example: carbon.super\n          type: string\n        defaultLimit:\n          $ref: '#/components/schemas/ThrottleLimit'\n        rateLimitCount:\n          description: Burst control request count\n          example: 10\n          type: integer\n        rateLimitTimeUnit:\n          description: Burst control time unit\n          example: min\n          type: string\n        subscriberCount:\n          description: Number of subscriptions allowed\n          example: 10\n          type: integer\n        customAttributes:\n          description: |\n            Custom attributes added to the Subscription Throttling Policy\n          example: []\n          items:\n            $ref: '#/components/schemas/CustomAttribute'\n          type: array\n        stopOnQuotaReach:\n          default: false\n          description: |\n            This indicates the action to be taken when a user goes beyond the allocated quota. If checked, the user's requests will be dropped. If unchecked, the requests will be allowed to pass through.\n          type: boolean\n        billingPlan:\n          description: |\n            define whether this is Paid or a Free plan. Allowed values are FREE or COMMERCIAL.\n          example: FREE\n          type: string\n        permissions:\n          $ref: '#/components/schemas/SubscriptionThrottlePolicyPermission'\n      required:\n      - defaultLimit\n    Endpoint_endpointConfig:\n      properties:\n        endpointType:\n          enum:\n          - SINGLE\n          - LOAD_BALANCED\n          - FAIL_OVER\n          example: FAIL_OVER\n          type: string\n        list:\n          items:\n            $ref: '#/components/schemas/EndpointConfig'\n          type: array\n    Endpoint_endpointSecurity:\n      properties:\n        enabled:\n          example: false\n          type: boolean\n        type:\n          example: basic\n          type: string\n        username:\n          example: basic\n          type: string\n        password:\n          example: basic\n          type: string\n    EndpointConfig_attributes:\n      properties:\n        name:\n          example: Suspension time\n          type: string\n        value:\n          example: 2s\n          type: string\n    LifecycleState_checkItems:\n      example:\n        requiredStates: []\n        name: Deprecate old versions after publishing the API\n        value: false\n      properties:\n        name:\n          example: Deprecate old versions after publishing the API\n          type: string\n        value:\n          example: false\n          type: boolean\n        requiredStates:\n          example: []\n          items:\n            type: string\n          type: array\n    LifecycleState_availableTransitions:\n      example:\n        targetState: Published\n        event: Publish\n      properties:\n        event:\n          example: Publish\n          type: string\n        targetState:\n          example: Published\n          type: string\n    OpenAPIDefinitionValidationResponse_info:\n      description: |\n        API definition information\n      example:\n        endpoints:\n        - https://localhost:9443/am/sample/pizzashack/v1/api/\n        - https://localhost:9443/am/sample/pizzashack/v1/api/\n        name: PetStore\n        context: /petstore\n        description: A sample API that uses a petstore as an example to demonstrate\n          swagger-2.0 specification\n        openAPIVersion: 3.0.0\n        version: 1.0.0\n      properties:\n        name:\n          example: PetStore\n          type: string\n        version:\n          example: 1.0.0\n          type: string\n        context:\n          example: /petstore\n          type: string\n        description:\n          example: A sample API that uses a petstore as an example to demonstrate\n            swagger-2.0 specification\n          type: string\n        openAPIVersion:\n          example: 3.0.0\n          type: string\n        endpoints:\n          description: |\n            contains host/servers specified in the OpenAPI file/URL\n          items:\n            example: https://localhost:9443/am/sample/pizzashack/v1/api/\n            type: string\n          type: array\n    WSDLValidationResponse_wsdlInfo_endpoints:\n      example:\n        name: StockQuoteSoap\n        location: http://www.webservicex.net/stockquote.asmx\n      properties:\n        name:\n          description: Name of the endpoint\n          example: StockQuoteSoap\n          type: string\n        location:\n          description: Endpoint URL\n          example: http://www.webservicex.net/stockquote.asmx\n          type: string\n    WSDLValidationResponse_wsdlInfo:\n      description: Summary of the WSDL including the basic information\n      example:\n        endpoints:\n        - name: StockQuoteSoap\n          location: http://www.webservicex.net/stockquote.asmx\n        - name: StockQuoteSoap\n          location: http://www.webservicex.net/stockquote.asmx\n        version: \"1.1\"\n      properties:\n        version:\n          description: |\n            WSDL version\n          example: \"1.1\"\n          type: string\n        endpoints:\n          description: |\n            A list of endpoints the service exposes\n          items:\n            $ref: '#/components/schemas/WSDLValidationResponse_wsdlInfo_endpoints'\n          type: array\n    GraphQLValidationResponse_graphQLInfo:\n      description: Summary of the GraphQL including the basic information\n      example:\n        graphQLSchema:\n          schemaDefinition: schemaDefinition\n          name: admin--HackerNewsAPI.graphql\n        operations:\n        - usedProductIds: []\n          payloadSchema: payloadSchema\n          amznResourceName: amznResourceName\n          operationPolicies:\n            request:\n            - policyVersion: v1\n              policyId: policyId\n              policyName: policyName\n              parameters:\n                key: '{}'\n            - policyVersion: v1\n              policyId: policyId\n              policyName: policyName\n              parameters:\n                key: '{}'\n            response:\n            - policyVersion: v1\n              policyId: policyId\n              policyName: policyName\n              parameters:\n                key: '{}'\n            - policyVersion: v1\n              policyId: policyId\n              policyName: policyName\n              parameters:\n                key: '{}'\n            fault:\n            - policyVersion: v1\n              policyId: policyId\n              policyName: policyName\n              parameters:\n                key: '{}'\n            - policyVersion: v1\n              policyId: policyId\n              policyName: policyName\n              parameters:\n                key: '{}'\n          verb: POST\n          uriMapping: uriMapping\n          id: postapiresource\n          throttlingPolicy: Unlimited\n          scopes: []\n          amznResourceTimeout: 0\n          authType: Application \u0026 Application User\n          target: /order/{orderId}\n        - usedProductIds: []\n          payloadSchema: payloadSchema\n          amznResourceName: amznResourceName\n          operationPolicies:\n            request:\n            - policyVersion: v1\n              policyId: policyId\n              policyName: policyName\n              parameters:\n                key: '{}'\n            - policyVersion: v1\n              policyId: policyId\n              policyName: policyName\n              parameters:\n                key: '{}'\n            response:\n            - policyVersion: v1\n              policyId: policyId\n              policyName: policyName\n              parameters:\n                key: '{}'\n            - policyVersion: v1\n              policyId: policyId\n              policyName: policyName\n              parameters:\n                key: '{}'\n            fault:\n            - policyVersion: v1\n              policyId: policyId\n              policyName: policyName\n              parameters:\n                key: '{}'\n            - policyVersion: v1\n              policyId: policyId\n              policyName: policyName\n              parameters:\n                key: '{}'\n          verb: POST\n          uriMapping: uriMapping\n          id: postapiresource\n          throttlingPolicy: Unlimited\n          scopes: []\n          amznResourceTimeout: 0\n          authType: Application \u0026 Application User\n          target: /order/{orderId}\n      properties:\n        operations:\n          items:\n            $ref: '#/components/schemas/APIOperations'\n          type: array\n        graphQLSchema:\n          $ref: '#/components/schemas/GraphQLSchema'\n    APISearchResult_allOf:\n      properties:\n        description:\n          description: A brief description about the API\n          example: A calculator API that supports basic operations\n          type: string\n        context:\n          description: A string that represents the context of the user's request\n          example: CalculatorAPI\n          type: string\n        contextTemplate:\n          description: The templated context of the API\n          example: CalculatorAPI/{version}\n          type: string\n        version:\n          description: The version of the API\n          example: 1.0.0\n          type: string\n        provider:\n          description: |\n            If the provider value is not given, the user invoking the API will be used as the provider.\n          example: admin\n          type: string\n        status:\n          description: This describes in which status of the lifecycle the API is\n          example: CREATED\n          type: string\n        thumbnailUri:\n          example: /apis/01234567-0123-0123-0123-012345678901/thumbnail\n          type: string\n        advertiseOnly:\n          example: true\n          type: boolean\n    APIProductSearchResult_allOf:\n      properties:\n        description:\n          description: A brief description about the API\n          example: A calculator API that supports basic operations\n          type: string\n        context:\n          description: A string that represents the context of the user's request\n          example: CalculatorAPI\n          type: string\n        version:\n          description: The version of the API Product\n          example: 1.0.0\n          type: string\n        provider:\n          description: |\n            If the provider value is not given, the user invoking the API will be used as the provider.\n          example: admin\n          type: string\n        status:\n          description: This describes in which status of the lifecycle the APIPRODUCT\n            is\n          example: PUBLISHED\n          type: string\n        thumbnailUri:\n          example: /apis/01234567-0123-0123-0123-012345678901/thumbnail\n          type: string\n    DocumentSearchResult_allOf:\n      properties:\n        docType:\n          enum:\n          - HOWTO\n          - SAMPLES\n          - PUBLIC_FORUM\n          - SUPPORT_FORUM\n          - API_MESSAGE_FORMAT\n          - SWAGGER_DOC\n          - OTHER\n          example: HOWTO\n          type: string\n        summary:\n          example: Summary of Calculator Documentation\n          type: string\n        sourceType:\n          enum:\n          - INLINE\n          - URL\n          - FILE\n          - MARKDOWN\n          example: INLINE\n          type: string\n        sourceUrl:\n          type: string\n        otherTypeName:\n          type: string\n        visibility:\n          enum:\n          - OWNER_ONLY\n          - PRIVATE\n          - API_LEVEL\n          example: API_LEVEL\n          type: string\n        apiName:\n          description: The name of the associated API\n          example: TestAPI\n          type: string\n        apiVersion:\n          description: The version of the associated API\n          example: 1.0.0\n          type: string\n        apiProvider:\n          example: admin\n          type: string\n        apiUUID:\n          type: string\n        associatedType:\n          type: string\n    AsyncAPISpecificationValidationResponse_info:\n      description: API definition information\n      example:\n        protocol: WEBSUB\n        endpoints:\n        - https://localhost:9443/am/sample/pizzashack/v1/api/\n        - https://localhost:9443/am/sample/pizzashack/v1/api/\n        gatewayVendor: wso2\n        asyncTransportProtocols:\n        - http\n        - http\n        name: Streetlights\n        context: /streetlights\n        description: A sample API that uses a streetlights as an example to demonstrate\n          AsyncAPI specifications\n        version: 1.0.0\n        asyncAPIVersion: \"2.0\"\n      properties:\n        name:\n          example: Streetlights\n          type: string\n        version:\n          example: 1.0.0\n          type: string\n        context:\n          example: /streetlights\n          type: string\n        description:\n          example: A sample API that uses a streetlights as an example to demonstrate\n            AsyncAPI specifications\n          type: string\n        asyncAPIVersion:\n          example: \"2.0\"\n          type: string\n        protocol:\n          example: WEBSUB\n          type: string\n        endpoints:\n          description: contains host/servers specified in the AsyncAPI file/URL\n          items:\n            example: https://localhost:9443/am/sample/pizzashack/v1/api/\n            type: string\n          type: array\n        gatewayVendor:\n          example: wso2\n          type: string\n        asyncTransportProtocols:\n          description: contains available transports for an async API\n          items:\n            example: http\n            type: string\n          type: array\n  securitySchemes:\n    OAuth2Security:\n      flows:\n        password:\n          scopes:\n            openid: Authorize access to user details\n            apim:api_view: View API\n            apim:api_create: Create API\n            apim:api_delete: Delete API\n            apim:api_publish: Publish API\n            apim:api_manage: Manage all API related operations\n            apim:subscription_view: View Subscription\n            apim:subscription_block: Block Subscription\n            apim:subscription_manage: Manage all Subscription related operations\n            apim:threat_protection_policy_create: Create threat protection policies\n            apim:threat_protection_policy_manage: Update and delete threat protection\n              policies\n            apim:document_create: Create API documents\n            apim:document_manage: Create, update and delete API documents\n            apim:api_mediation_policy_manage: View, create, update and remove API\n              specific mediation policies\n            apim:mediation_policy_view: View mediation policies\n            apim:mediation_policy_create: Create mediation policies\n            apim:mediation_policy_manage: Update and delete mediation policies\n            apim:common_operation_policy_view: View common operation policies\n            apim:common_operation_policy_manage: Add, Update and Delete common operation\n              policies\n            apim:client_certificates_view: View client certificates\n            apim:client_certificates_add: Add client certificates\n            apim:client_certificates_update: Update and delete client certificates\n            apim:client_certificates_manage: View, create, update and remove client\n              certificates\n            apim:ep_certificates_view: View backend endpoint certificates\n            apim:ep_certificates_add: Add backend endpoint certificates\n            apim:ep_certificates_update: Update and delete backend endpoint certificates\n            apim:ep_certificates_manage: View, create, update and remove endpoint\n              certificates\n            apim:publisher_settings: Retrieve store settings\n            apim:pub_alert_manage: Get/ subscribe/ configure publisher alerts\n            apim:shared_scope_manage: Manage shared scopes\n            apim:app_import_export: Import and export applications related operations\n            apim:api_import_export: Import and export APIs related operations\n            apim:api_product_import_export: Import and export API Products related\n              operations\n            apim:api_generate_key: Generate Internal Key\n            apim:admin: Manage all admin operations\n            apim:comment_view: Read permission to comments\n            apim:comment_write: Write permission to comments\n            apim:comment_manage: Read and Write comments\n            apim:tier_view: View throttling policies\n            apim:tier_manage: View, update and delete throttling policies\n            apim:api_list_view: View, Retrieve API list\n            apim:api_definition_view: View, Retrieve API definition\n            apim:policies_import_export: Export and import policies related operations\n          tokenUrl: https://localhost:9443/oauth2/token\n      type: oauth2\n\n",
			"canonicalURL": "/github.com/wso2/product-apim@f5d066f31ab676a47e31e05ee6e7ceb2d4498b98/-/blob/modules/integration/tests-common/clients/publisher/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wso2/product-apim/blob/f5d066f31ab676a47e31e05ee6e7ceb2d4498b98/modules/integration/tests-common/clients/publisher/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "buildIR: make ir: operations: anonymous type name conflict: \"APIInfoAdditionalPropertiesMap\"",
	"NotImplemented": [
		"oauth2 security"
	]
}