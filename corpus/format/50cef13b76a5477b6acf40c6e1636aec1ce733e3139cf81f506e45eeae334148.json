{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/interzoid.statedata/openapi.yml",
			"byteSize": 3404,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://api.interzoid.com\ninfo:\n  x-ballerina-display:\n      label: Interzoid State Data\n      iconPath: \"icon.png\"\n  contact:\n    email: support@interzoid.com\n    name: API Support\n    url: https://www.interzoid.com\n    x-twitter: interzoid\n  description: \u003e\n    This is a generated connector for [Interzoid State Data API v1.0.0]\n    (https://www.interzoid.com/services/getstateabbreviation) OpenAPI specification.\n\n    This API provides the two-letter state abbreviation \n    (or the province abbreviation for Canada) for the purposes of standardizing state name data, \n    improving query results, analytics, and data merging.\n\n    For additional help getting started with the API, \n    visit [Interzoid State Data API](https://www.interzoid.com/services/getstateabbreviation).\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n\n    Create an [Interzoid Account](https://www.interzoid.com/register) \n    and obtain tokens by log into [Interzoid Account](https://www.interzoid.com/account).\n  license:\n    name: Interzoid license\n    url: https://www.interzoid.com/license\n  termsOfService: https://www.interzoid.com/terms\n  title: Interzoid State Data Standardization API\n  version: 1.0.0\n  x-apisguru-categories:\n    - developer_tools\n  x-logo:\n    url: https://twitter.com/interzoid/profile_image?size=original\n  x-origin:\n    - format: openapi\n      url: https://oas.interzoid.com/api/getstateabbreviation.json\n      version: \"3.0\"\n  x-providerName: interzoid.com\n  x-serviceName: getstateabbreviation\nexternalDocs:\n  description: API home page and documentation\n  url: https://www.interzoid.com/services/getstateabbreviation\nsecurity:\n  - ApiKeyAuth : []\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      description: All requests on the State Data API needs to include an API key. The API key can be provided as part of the query string or as a request header. The name of the API key needs to be `license`.\n      type: apiKey\n      in: query\n      name: license\n  schemas: \n    StateData:\n      description: State data\n      properties:\n        Abbreviation:\n          type: string\n        Code:\n          type: string\n        Credits:\n          type: string\n        State:\n          type: string\npaths:\n  /getstateabbreviation:\n    get:\n      description: Gets a two-letter abbreviation for a state or province given a permutation of state or province data.\n      operationId: getstateabbreviation\n      parameters:\n        - description: State (or province) name from which to retrieve the two letter abbreviation.\n          in: query\n          name: state\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StateData'\n          description: State (or province) standardized two-letter abbreviation\n        \"400\":\n          description: bad request - insufficient parameters\n        \"402\":\n          description: credits exhausted\n        \"403\":\n          description: invalid license API key\n        \"405\":\n          description: method not allowed\n        \"500\":\n          description: internal server error\n      summary: Gets a two-letter abbreviation for a state or province name data\n      tags:\n        - State Data Standardization"
		}
	},
	"Error": "security: failed to write file oas_security_gen.go: format: 107:3: expected 1 expression"
}