{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/ipgeolocation/openapi.yaml",
			"byteSize": 6311,
			"content": "openapi: 3.0.1\ninfo:\n  x-ballerina-display:\n      label: Abstract IP Geolocation\n      iconPath: \"icon.png\"\n  title: IP geolocation API\n  description: This is a generated connector for [Abstract IP geolocation API version 1](https://www.abstractapi.com/ip-geolocation-api#docs) OpenAPI Specification.\n  \n              Abstract IP geolocation API allows developers to retrieve the region, country and city behind any IP worldwide.\n\n               The API covers the geolocation of IPv4 and IPv6 addresses in 180+ countries worldwide.\n               \n               Extra information can be retrieved like the currency, flag or language associated to an IP.\n  version: 1.0.0\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n\n    Create an [Abstract API account for IP Geolocation API](https://www.abstractapi.com/ip-geolocation-api)and obtain\n    \n    tokens by following [this guide](https://app.abstractapi.com/api/ip-geolocation/documentation).\nexternalDocs:\n  description: API Documentation\n  url: 'https://www.abstractapi.com/ip-geolocation-api#docs'\nservers:\n  - url: 'https://ipgeolocation.abstractapi.com'\nsecurity:\n  - ApiKeyAuth: []\n\npaths:\n  /v1/:\n    get:\n      summary: Retrieve the location of an IP address\n      operationId: getGeolocation\n      parameters:\n        - name: ip_address\n          in: query\n          description: The IP address to geolocate. Both IPv4 and IPv6 addresses are supported. Note that if this \n                       parameter is left blank, the service will geolocate the IP address from which the request was made.\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: string\n            example: 195.154.25.40\n        - name: fields\n          in: query\n          description: Comma separated fields to only receive a few fields from the JSON response.\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: string\n            example: 'country,city,timezone'\n      responses:\n        '200':\n          description: Location of geolocated IP\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/geolocation'\n              examples:\n                '0':\n                  value: '{\"ip_address\":\"195.154.25.40\",\"city\":\"Paris\",\"city_geoname_id\":2988507,\"region\":\"Île-de-France\",\"region_iso_code\":\"IDF\",\"region_geoname_id\":3012874,\"postal_code\":\"75008\",\"country\":\"France\",\"country_code\":\"FR\",\"country_geoname_id\":3017382,\"country_is_eu\":true,\"continent\":\"Europe\",\"continent_code\":\"EU\",\"continent_geoname_id\":6255148,\"longitude\":2.4075,\"latitude\":48.8323,\"security\":{\"is_vpn\":false},\"timezone\":{\"name\":\"Europe/Paris\",\"abbreviation\":\"CEST\",\"gmt_offset\":2,\"current_time\":\"15:42:18\",\"is_dst\":true},\"flag\":{\"emoji\":\"\u003cë\u003c÷\",\"unicode\":\"U+1F1EB U+1F1F7\",\"png\":\"https://static.abstractapi.com/country-flags/FR_flag.png\",\"svg\":\"https://static.abstractapi.com/country-flags/FR_flag.svg\"},\"currency\":{\"currency_name\":\"Euros\",\"currency_code\":\"EUR\"},\"connection\":{\"autonomous_system_number\":12876,\"autonomous_system_organization\":\"Online S.a.s.\",\"connection_type\":\"Corporate\",\"isp_name\":\"Online S.A.S.\",\"organization_name\":\"ONLINE\"}}'\n      servers:\n        - url: 'https://ipgeolocation.abstractapi.com'\n    servers:\n      - url: 'https://ipgeolocation.abstractapi.com'\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: query\n      name: api_key\n      description: Represents API Key `api_key`\n  schemas:\n    geolocation:\n      type: object\n      properties:\n        continent:\n          type: string\n          nullable: true\n        country:\n          type: string\n          nullable: true\n        flag:\n          type: object\n          properties:\n            emoji:\n              type: string\n              nullable: true\n            svg:\n              type: string\n              nullable: true\n            png:\n              type: string\n              nullable: true\n            unicode:\n              type: string\n              nullable: true\n        country_geoname_id:\n          type: integer\n          nullable: true\n        city:\n          type: string\n          nullable: true\n        city_geoname_id:\n          type: integer\n          nullable: true\n        country_is_eu:\n          type: boolean\n        timezone:\n          type: object\n          properties:\n            name:\n              type: string\n              nullable: true\n            gmt_offset:\n              type: integer\n              nullable: true\n            abbreviation:\n              type: string\n              nullable: true\n            current_time:\n              type: string\n              nullable: true\n            is_dst:\n              type: boolean\n        latitude:\n          type: number\n          nullable: true\n        continent_code:\n          type: string\n          nullable: true\n        ip_address:\n          type: string\n          nullable: true\n        region_geoname_id:\n          type: integer\n          nullable: true\n        region_iso_code:\n          type: string\n          nullable: true\n        country_code:\n          type: string\n          nullable: true\n        security:\n          type: object\n          properties:\n            is_vpn:\n              type: boolean\n        currency:\n          type: object\n          properties:\n            currency_name:\n              type: string\n            currency_code:\n              type: string\n        connection:\n          type: object\n          properties:\n            isp_name:\n              type: string\n              nullable: true\n            connection_type:\n              type: string\n              nullable: true\n            organization_name:\n              type: string\n              nullable: true\n            autonomous_system_organization:\n              type: string\n              nullable: true\n            autonomous_system_number:\n              type: integer\n              nullable: true\n        region:\n          type: string\n          nullable: true\n        postal_code:\n          type: string\n          nullable: true\n        continent_geoname_id:\n          type: integer\n          nullable: true\n        longitude:\n          type: number\n          nullable: true\n"
		}
	},
	"Error": "security: failed to write file oas_security_gen.go: format: 105:3: expected 1 expression"
}