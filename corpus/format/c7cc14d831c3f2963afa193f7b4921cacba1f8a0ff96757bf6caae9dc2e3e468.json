{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/zaproxy/zap-api-docs"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 252277,
			"content": "openapi: \"3.0.2\"\ninfo:\n  title: ZAP API\n  description: The HTTP API for controlling and accessing ZAP.\n  contact:\n    name: OWASP ZAP User Group\n    url: https://groups.google.com/group/zaproxy-users\n    email: zaproxy-users@googlegroups.com\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  version: Dev Build\nservers:\n  - url: http://zap\n    description: The URL while proxying through ZAP.\n  - url: http://{address}:{port}\n    description: The URL of a Local Proxy of ZAP.\n    variables:\n      address:\n        default: 127.0.0.1\n        description: The address ZAP is listening on.\n      port:\n        default: '8080'\n        description: The port ZAP is bound to.\ncomponents:\n  securitySchemes:\n    apiKeyHeader:\n      type: apiKey\n      name: X-ZAP-API-Key\n      in: header\n    apiKeyQuery:\n      type: apiKey\n      name: apikey\n      in: query\n  schemas:\n    Error:\n      type: object\n      required:\n      - message\n      - code\n      properties:\n        message:\n          type: string\n        code:\n          type: integer\n          minimum: 100\n          maximum: 600\nsecurity:\n  - apiKeyHeader: []\n  - apiKeyQuery: []\npaths:\n  /JSON/alert/view/alert/:\n    get:\n      description: \u003e-\n        Gets the alert with the given ID, the corresponding HTTP message can be obtained with the 'messageId' field and 'message' API method\n      operationId: alertViewAlert\n      tags:\n        - alert\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: id\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/alert/view/alerts/:\n    get:\n      description: \u003e-\n        Gets the alerts raised by ZAP, optionally filtering by URL or riskId, and paginating with 'start' position and 'count' of alerts\n      operationId: alertViewAlerts\n      tags:\n        - alert\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: baseurl\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: start\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: count\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: riskId\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/alert/view/alertsSummary/:\n    get:\n      description: \u003e-\n        Gets number of alerts grouped by each risk level, optionally filtering by URL\n      operationId: alertViewAlertsSummary\n      tags:\n        - alert\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: baseurl\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/alert/view/numberOfAlerts/:\n    get:\n      description: \u003e-\n        Gets the number of alerts, optionally filtering by URL or riskId\n      operationId: alertViewNumberOfAlerts\n      tags:\n        - alert\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: baseurl\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: riskId\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/alert/view/alertsByRisk/:\n    get:\n      description: \u003e-\n        Gets a summary of the alerts, optionally filtered by a 'url'. If 'recurse' is true then all alerts that apply to urls that start with the specified 'url' will be returned, otherwise only those on exactly the same 'url' (ignoring url parameters)\n      operationId: alertViewAlertsByRisk\n      tags:\n        - alert\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: url\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: recurse\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n  /JSON/alert/view/alertCountsByRisk/:\n    get:\n      description: \u003e-\n        Gets a count of the alerts, optionally filtered as per alertsPerRisk\n      operationId: alertViewAlertCountsByRisk\n      tags:\n        - alert\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: url\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: recurse\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n  /JSON/alert/action/deleteAllAlerts/:\n    get:\n      description: \u003e-\n        Deletes all alerts of the current session.\n      operationId: alertActionDeleteAllAlerts\n      tags:\n        - alert\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/alert/action/deleteAlert/:\n    get:\n      description: \u003e-\n        Deletes the alert with the given ID. \n      operationId: alertActionDeleteAlert\n      tags:\n        - alert\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: id\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/acsrf/view/optionTokensNames/:\n    get:\n      description: \u003e-\n        Lists the names of all anti-CSRF tokens\n      operationId: acsrfViewOptionTokensNames\n      tags:\n        - acsrf\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/acsrf/action/addOptionToken/:\n    get:\n      description: \u003e-\n        Adds an anti-CSRF token with the given name, enabled by default\n      operationId: acsrfActionAddOptionToken\n      tags:\n        - acsrf\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: String\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/acsrf/action/removeOptionToken/:\n    get:\n      description: \u003e-\n        Removes the anti-CSRF token with the given name\n      operationId: acsrfActionRemoveOptionToken\n      tags:\n        - acsrf\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: String\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /OTHER/acsrf/other/genForm/:\n    get:\n      description: \u003e-\n        Generate a form for testing lack of anti-CSRF tokens - typically invoked via ZAP\n      operationId: acsrfOtherGenForm\n      tags:\n        - acsrf\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: hrefId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/pscan/view/scanOnlyInScope/:\n    get:\n      description: \u003e-\n        Tells whether or not the passive scan should be performed only on messages that are in scope.\n      operationId: pscanViewScanOnlyInScope\n      tags:\n        - pscan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/pscan/view/recordsToScan/:\n    get:\n      description: \u003e-\n        The number of records the passive scanner still has to scan\n      operationId: pscanViewRecordsToScan\n      tags:\n        - pscan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/pscan/view/scanners/:\n    get:\n      description: \u003e-\n        Lists all passive scanners with its ID, name, enabled state and alert threshold.\n      operationId: pscanViewScanners\n      tags:\n        - pscan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/pscan/view/currentRule/:\n    get:\n      description: \u003e-\n        Show information about the passive scan rule currently being run (if any).\n      operationId: pscanViewCurrentRule\n      tags:\n        - pscan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/pscan/view/maxAlertsPerRule/:\n    get:\n      description: \u003e-\n        Gets the maximum number of alerts a passive scan rule should raise.\n      operationId: pscanViewMaxAlertsPerRule\n      tags:\n        - pscan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/pscan/action/setEnabled/:\n    get:\n      description: \u003e-\n        Sets whether or not the passive scanning is enabled (Note: the enabled state is not persisted).\n      operationId: pscanActionSetEnabled\n      tags:\n        - pscan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: enabled\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n  /JSON/pscan/action/setScanOnlyInScope/:\n    get:\n      description: \u003e-\n        Sets whether or not the passive scan should be performed only on messages that are in scope.\n      operationId: pscanActionSetScanOnlyInScope\n      tags:\n        - pscan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: onlyInScope\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n  /JSON/pscan/action/enableAllScanners/:\n    get:\n      description: \u003e-\n        Enables all passive scanners\n      operationId: pscanActionEnableAllScanners\n      tags:\n        - pscan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/pscan/action/disableAllScanners/:\n    get:\n      description: \u003e-\n        Disables all passive scanners\n      operationId: pscanActionDisableAllScanners\n      tags:\n        - pscan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/pscan/action/enableScanners/:\n    get:\n      description: \u003e-\n        Enables all passive scanners with the given IDs (comma separated list of IDs)\n      operationId: pscanActionEnableScanners\n      tags:\n        - pscan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: ids\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/pscan/action/disableScanners/:\n    get:\n      description: \u003e-\n        Disables all passive scanners with the given IDs (comma separated list of IDs)\n      operationId: pscanActionDisableScanners\n      tags:\n        - pscan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: ids\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/pscan/action/setScannerAlertThreshold/:\n    get:\n      description: \u003e-\n        Sets the alert threshold of the passive scanner with the given ID, accepted values for alert threshold: OFF, DEFAULT, LOW, MEDIUM and HIGH\n      operationId: pscanActionSetScannerAlertThreshold\n      tags:\n        - pscan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: id\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: alertThreshold\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/pscan/action/setMaxAlertsPerRule/:\n    get:\n      description: \u003e-\n        Sets the maximum number of alerts a passive scan rule should raise.\n      operationId: pscanActionSetMaxAlertsPerRule\n      tags:\n        - pscan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: maxAlerts\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/search/view/urlsByUrlRegex/:\n    get:\n      description: \u003e-\n        Returns the URLs of the HTTP messages that match the given regular expression in the URL optionally filtered by URL and paginated with 'start' position and 'count' of messages.\n      operationId: searchViewUrlsByUrlRegex\n      tags:\n        - search\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: regex\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: baseurl\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: start\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: count\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/search/view/urlsByRequestRegex/:\n    get:\n      description: \u003e-\n        Returns the URLs of the HTTP messages that match the given regular expression in the request optionally filtered by URL and paginated with 'start' position and 'count' of messages.\n      operationId: searchViewUrlsByRequestRegex\n      tags:\n        - search\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: regex\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: baseurl\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: start\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: count\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/search/view/urlsByResponseRegex/:\n    get:\n      description: \u003e-\n        Returns the URLs of the HTTP messages that match the given regular expression in the response optionally filtered by URL and paginated with 'start' position and 'count' of messages.\n      operationId: searchViewUrlsByResponseRegex\n      tags:\n        - search\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: regex\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: baseurl\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: start\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: count\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/search/view/urlsByHeaderRegex/:\n    get:\n      description: \u003e-\n        Returns the URLs of the HTTP messages that match the given regular expression in the header(s) optionally filtered by URL and paginated with 'start' position and 'count' of messages.\n      operationId: searchViewUrlsByHeaderRegex\n      tags:\n        - search\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: regex\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: baseurl\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: start\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: count\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/search/view/messagesByUrlRegex/:\n    get:\n      description: \u003e-\n        Returns the HTTP messages that match the given regular expression in the URL optionally filtered by URL and paginated with 'start' position and 'count' of messages.\n      operationId: searchViewMessagesByUrlRegex\n      tags:\n        - search\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: regex\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: baseurl\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: start\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: count\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/search/view/messagesByRequestRegex/:\n    get:\n      description: \u003e-\n        Returns the HTTP messages that match the given regular expression in the request optionally filtered by URL and paginated with 'start' position and 'count' of messages.\n      operationId: searchViewMessagesByRequestRegex\n      tags:\n        - search\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: regex\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: baseurl\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: start\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: count\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/search/view/messagesByResponseRegex/:\n    get:\n      description: \u003e-\n        Returns the HTTP messages that match the given regular expression in the response optionally filtered by URL and paginated with 'start' position and 'count' of messages.\n      operationId: searchViewMessagesByResponseRegex\n      tags:\n        - search\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: regex\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: baseurl\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: start\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: count\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/search/view/messagesByHeaderRegex/:\n    get:\n      description: \u003e-\n        Returns the HTTP messages that match the given regular expression in the header(s) optionally filtered by URL and paginated with 'start' position and 'count' of messages.\n      operationId: searchViewMessagesByHeaderRegex\n      tags:\n        - search\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: regex\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: baseurl\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: start\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: count\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /OTHER/search/other/harByUrlRegex/:\n    get:\n      description: \u003e-\n        Returns the HTTP messages, in HAR format, that match the given regular expression in the URL optionally filtered by URL and paginated with 'start' position and 'count' of messages.\n      operationId: searchOtherHarByUrlRegex\n      tags:\n        - search\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: regex\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: baseurl\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: start\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: count\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /OTHER/search/other/harByRequestRegex/:\n    get:\n      description: \u003e-\n        Returns the HTTP messages, in HAR format, that match the given regular expression in the request optionally filtered by URL and paginated with 'start' position and 'count' of messages.\n      operationId: searchOtherHarByRequestRegex\n      tags:\n        - search\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: regex\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: baseurl\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: start\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: count\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /OTHER/search/other/harByResponseRegex/:\n    get:\n      description: \u003e-\n        Returns the HTTP messages, in HAR format, that match the given regular expression in the response optionally filtered by URL and paginated with 'start' position and 'count' of messages.\n      operationId: searchOtherHarByResponseRegex\n      tags:\n        - search\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: regex\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: baseurl\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: start\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: count\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /OTHER/search/other/harByHeaderRegex/:\n    get:\n      description: \u003e-\n        Returns the HTTP messages, in HAR format, that match the given regular expression in the header(s) optionally filtered by URL and paginated with 'start' position and 'count' of messages.\n      operationId: searchOtherHarByHeaderRegex\n      tags:\n        - search\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: regex\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: baseurl\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: start\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: count\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/autoupdate/view/latestVersionNumber/:\n    get:\n      description: \u003e-\n        Returns the latest version number\n      operationId: autoupdateViewLatestVersionNumber\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/autoupdate/view/isLatestVersion/:\n    get:\n      description: \u003e-\n        Returns 'true' if ZAP is on the latest version\n      operationId: autoupdateViewIsLatestVersion\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/autoupdate/view/installedAddons/:\n    get:\n      description: \u003e-\n        Return a list of all of the installed add-ons\n      operationId: autoupdateViewInstalledAddons\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/autoupdate/view/localAddons/:\n    get:\n      description: \u003e-\n        Returns a list with all local add-ons, installed or not.\n      operationId: autoupdateViewLocalAddons\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/autoupdate/view/newAddons/:\n    get:\n      description: \u003e-\n        Return a list of any add-ons that have been added to the Marketplace since the last check for updates\n      operationId: autoupdateViewNewAddons\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/autoupdate/view/updatedAddons/:\n    get:\n      description: \u003e-\n        Return a list of any add-ons that have been changed in the Marketplace since the last check for updates\n      operationId: autoupdateViewUpdatedAddons\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/autoupdate/view/marketplaceAddons/:\n    get:\n      description: \u003e-\n        Return a list of all of the add-ons on the ZAP Marketplace (this information is read once and then cached)\n      operationId: autoupdateViewMarketplaceAddons\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/autoupdate/view/optionAddonDirectories/:\n    get:\n      description: \u003e-\n        \n      operationId: autoupdateViewOptionAddonDirectories\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/autoupdate/view/optionDayLastChecked/:\n    get:\n      description: \u003e-\n        \n      operationId: autoupdateViewOptionDayLastChecked\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/autoupdate/view/optionDayLastInstallWarned/:\n    get:\n      description: \u003e-\n        \n      operationId: autoupdateViewOptionDayLastInstallWarned\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/autoupdate/view/optionDayLastUpdateWarned/:\n    get:\n      description: \u003e-\n        \n      operationId: autoupdateViewOptionDayLastUpdateWarned\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/autoupdate/view/optionDownloadDirectory/:\n    get:\n      description: \u003e-\n        \n      operationId: autoupdateViewOptionDownloadDirectory\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/autoupdate/view/optionCheckAddonUpdates/:\n    get:\n      description: \u003e-\n        \n      operationId: autoupdateViewOptionCheckAddonUpdates\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/autoupdate/view/optionCheckOnStart/:\n    get:\n      description: \u003e-\n        \n      operationId: autoupdateViewOptionCheckOnStart\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/autoupdate/view/optionDownloadNewRelease/:\n    get:\n      description: \u003e-\n        \n      operationId: autoupdateViewOptionDownloadNewRelease\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/autoupdate/view/optionInstallAddonUpdates/:\n    get:\n      description: \u003e-\n        \n      operationId: autoupdateViewOptionInstallAddonUpdates\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/autoupdate/view/optionInstallScannerRules/:\n    get:\n      description: \u003e-\n        \n      operationId: autoupdateViewOptionInstallScannerRules\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/autoupdate/view/optionReportAlphaAddons/:\n    get:\n      description: \u003e-\n        \n      operationId: autoupdateViewOptionReportAlphaAddons\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/autoupdate/view/optionReportBetaAddons/:\n    get:\n      description: \u003e-\n        \n      operationId: autoupdateViewOptionReportBetaAddons\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/autoupdate/view/optionReportReleaseAddons/:\n    get:\n      description: \u003e-\n        \n      operationId: autoupdateViewOptionReportReleaseAddons\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/autoupdate/action/downloadLatestRelease/:\n    get:\n      description: \u003e-\n        Downloads the latest release, if any \n      operationId: autoupdateActionDownloadLatestRelease\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/autoupdate/action/installAddon/:\n    get:\n      description: \u003e-\n        Installs or updates the specified add-on, returning when complete (ie not asynchronously)\n      operationId: autoupdateActionInstallAddon\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: id\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/autoupdate/action/installLocalAddon/:\n    get:\n      description: \u003e-\n        \n      operationId: autoupdateActionInstallLocalAddon\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: file\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/autoupdate/action/uninstallAddon/:\n    get:\n      description: \u003e-\n        Uninstalls the specified add-on \n      operationId: autoupdateActionUninstallAddon\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: id\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/autoupdate/action/setOptionCheckAddonUpdates/:\n    get:\n      description: \u003e-\n        \n      operationId: autoupdateActionSetOptionCheckAddonUpdates\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/autoupdate/action/setOptionCheckOnStart/:\n    get:\n      description: \u003e-\n        \n      operationId: autoupdateActionSetOptionCheckOnStart\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/autoupdate/action/setOptionDownloadNewRelease/:\n    get:\n      description: \u003e-\n        \n      operationId: autoupdateActionSetOptionDownloadNewRelease\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/autoupdate/action/setOptionInstallAddonUpdates/:\n    get:\n      description: \u003e-\n        \n      operationId: autoupdateActionSetOptionInstallAddonUpdates\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/autoupdate/action/setOptionInstallScannerRules/:\n    get:\n      description: \u003e-\n        \n      operationId: autoupdateActionSetOptionInstallScannerRules\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/autoupdate/action/setOptionReportAlphaAddons/:\n    get:\n      description: \u003e-\n        \n      operationId: autoupdateActionSetOptionReportAlphaAddons\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/autoupdate/action/setOptionReportBetaAddons/:\n    get:\n      description: \u003e-\n        \n      operationId: autoupdateActionSetOptionReportBetaAddons\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/autoupdate/action/setOptionReportReleaseAddons/:\n    get:\n      description: \u003e-\n        \n      operationId: autoupdateActionSetOptionReportReleaseAddons\n      tags:\n        - autoupdate\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/spider/view/status/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderViewStatus\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanId\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/spider/view/results/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderViewResults\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanId\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/spider/view/fullResults/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderViewFullResults\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/spider/view/scans/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderViewScans\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/excludedFromScan/:\n    get:\n      description: \u003e-\n        Gets the regexes of URLs excluded from the spider scans.\n      operationId: spiderViewExcludedFromScan\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/allUrls/:\n    get:\n      description: \u003e-\n        Returns a list of unique URLs from the history table based on HTTP messages added by the Spider.\n      operationId: spiderViewAllUrls\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/addedNodes/:\n    get:\n      description: \u003e-\n        Returns a list of the names of the nodes added to the Sites tree by the specified scan.\n      operationId: spiderViewAddedNodes\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanId\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/spider/view/domainsAlwaysInScope/:\n    get:\n      description: \u003e-\n        Gets all the domains that are always in scope. For each domain the following are shown: the index, the value (domain), if enabled, and if specified as a regex.\n      operationId: spiderViewDomainsAlwaysInScope\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionDomainsAlwaysInScope/:\n    get:\n      description: \u003e-\n        Use view domainsAlwaysInScope instead.\n      deprecated: true\n      operationId: spiderViewOptionDomainsAlwaysInScope\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionDomainsAlwaysInScopeEnabled/:\n    get:\n      description: \u003e-\n        Use view domainsAlwaysInScope instead.\n      deprecated: true\n      operationId: spiderViewOptionDomainsAlwaysInScopeEnabled\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionHandleParameters/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderViewOptionHandleParameters\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionMaxChildren/:\n    get:\n      description: \u003e-\n        Gets the maximum number of child nodes (per node) that can be crawled, 0 means no limit.\n      operationId: spiderViewOptionMaxChildren\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionMaxDepth/:\n    get:\n      description: \u003e-\n        Gets the maximum depth the spider can crawl, 0 if unlimited.\n      operationId: spiderViewOptionMaxDepth\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionMaxDuration/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderViewOptionMaxDuration\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionMaxParseSizeBytes/:\n    get:\n      description: \u003e-\n        Gets the maximum size, in bytes, that a response might have to be parsed.\n      operationId: spiderViewOptionMaxParseSizeBytes\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionMaxScansInUI/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderViewOptionMaxScansInUI\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionRequestWaitTime/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderViewOptionRequestWaitTime\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionScope/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderViewOptionScope\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionScopeText/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderViewOptionScopeText\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionSkipURLString/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderViewOptionSkipURLString\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionThreadCount/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderViewOptionThreadCount\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionUserAgent/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderViewOptionUserAgent\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionAcceptCookies/:\n    get:\n      description: \u003e-\n        Gets whether or not a spider process should accept cookies while spidering.\n      operationId: spiderViewOptionAcceptCookies\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionHandleODataParametersVisited/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderViewOptionHandleODataParametersVisited\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionParseComments/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderViewOptionParseComments\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionParseGit/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderViewOptionParseGit\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionParseRobotsTxt/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderViewOptionParseRobotsTxt\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionParseSVNEntries/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderViewOptionParseSVNEntries\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionParseSitemapXml/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderViewOptionParseSitemapXml\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionPostForm/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderViewOptionPostForm\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionProcessForm/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderViewOptionProcessForm\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionSendRefererHeader/:\n    get:\n      description: \u003e-\n        Gets whether or not the 'Referer' header should be sent while spidering.\n      operationId: spiderViewOptionSendRefererHeader\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/view/optionShowAdvancedDialog/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderViewOptionShowAdvancedDialog\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/action/scan/:\n    get:\n      description: \u003e-\n        Runs the spider against the given URL (or context). Optionally, the 'maxChildren' parameter can be set to limit the number of children scanned, the 'recurse' parameter can be used to prevent the spider from seeding recursively, the parameter 'contextName' can be used to constrain the scan to a Context and the parameter 'subtreeOnly' allows to restrict the spider under a site's subtree (using the specified 'url').\n      operationId: spiderActionScan\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: url\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: maxChildren\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: recurse\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n      - name: contextName\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: subtreeOnly\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n  /JSON/spider/action/scanAsUser/:\n    get:\n      description: \u003e-\n        Runs the spider from the perspective of a User, obtained using the given Context ID and User ID. See 'scan' action for more details.\n      operationId: spiderActionScanAsUser\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: userId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: url\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: maxChildren\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: recurse\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n      - name: subtreeOnly\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n  /JSON/spider/action/pause/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionPause\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/spider/action/resume/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionResume\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/spider/action/stop/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionStop\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanId\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/spider/action/removeScan/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionRemoveScan\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/spider/action/pauseAllScans/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionPauseAllScans\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/action/resumeAllScans/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionResumeAllScans\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/action/stopAllScans/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionStopAllScans\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/action/removeAllScans/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionRemoveAllScans\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/action/clearExcludedFromScan/:\n    get:\n      description: \u003e-\n        Clears the regexes of URLs excluded from the spider scans.\n      operationId: spiderActionClearExcludedFromScan\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/action/excludeFromScan/:\n    get:\n      description: \u003e-\n        Adds a regex of URLs that should be excluded from the spider scans.\n      operationId: spiderActionExcludeFromScan\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: regex\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/spider/action/addDomainAlwaysInScope/:\n    get:\n      description: \u003e-\n        Adds a new domain that's always in scope, using the specified value. Optionally sets if the new entry is enabled (default, true) and whether or not the new value is specified as a regex (default, false).\n      operationId: spiderActionAddDomainAlwaysInScope\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: value\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: isRegex\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n      - name: isEnabled\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n  /JSON/spider/action/modifyDomainAlwaysInScope/:\n    get:\n      description: \u003e-\n        Modifies a domain that's always in scope. Allows to modify the value, if enabled or if a regex. The domain is selected with its index, which can be obtained with the view domainsAlwaysInScope.\n      operationId: spiderActionModifyDomainAlwaysInScope\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: idx\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: value\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: isRegex\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n      - name: isEnabled\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n  /JSON/spider/action/removeDomainAlwaysInScope/:\n    get:\n      description: \u003e-\n        Removes a domain that's always in scope, with the given index. The index can be obtained with the view domainsAlwaysInScope.\n      operationId: spiderActionRemoveDomainAlwaysInScope\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: idx\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/spider/action/enableAllDomainsAlwaysInScope/:\n    get:\n      description: \u003e-\n        Enables all domains that are always in scope.\n      operationId: spiderActionEnableAllDomainsAlwaysInScope\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/action/disableAllDomainsAlwaysInScope/:\n    get:\n      description: \u003e-\n        Disables all domains that are always in scope.\n      operationId: spiderActionDisableAllDomainsAlwaysInScope\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/spider/action/setOptionHandleParameters/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionSetOptionHandleParameters\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: String\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/spider/action/setOptionScopeString/:\n    get:\n      description: \u003e-\n        Use actions [add|modify|remove]DomainAlwaysInScope instead.\n      operationId: spiderActionSetOptionScopeString\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: String\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/spider/action/setOptionSkipURLString/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionSetOptionSkipURLString\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: String\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/spider/action/setOptionUserAgent/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionSetOptionUserAgent\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: String\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/spider/action/setOptionAcceptCookies/:\n    get:\n      description: \u003e-\n        Sets whether or not a spider process should accept cookies while spidering.\n      operationId: spiderActionSetOptionAcceptCookies\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/spider/action/setOptionHandleODataParametersVisited/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionSetOptionHandleODataParametersVisited\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/spider/action/setOptionMaxChildren/:\n    get:\n      description: \u003e-\n        Sets the maximum number of child nodes (per node) that can be crawled, 0 means no limit.\n      operationId: spiderActionSetOptionMaxChildren\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Integer\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/spider/action/setOptionMaxDepth/:\n    get:\n      description: \u003e-\n        Sets the maximum depth the spider can crawl, 0 for unlimited depth.\n      operationId: spiderActionSetOptionMaxDepth\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Integer\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/spider/action/setOptionMaxDuration/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionSetOptionMaxDuration\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Integer\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/spider/action/setOptionMaxParseSizeBytes/:\n    get:\n      description: \u003e-\n        Sets the maximum size, in bytes, that a response might have to be parsed. This allows the spider to skip big responses/files.\n      operationId: spiderActionSetOptionMaxParseSizeBytes\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Integer\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/spider/action/setOptionMaxScansInUI/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionSetOptionMaxScansInUI\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Integer\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/spider/action/setOptionParseComments/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionSetOptionParseComments\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/spider/action/setOptionParseGit/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionSetOptionParseGit\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/spider/action/setOptionParseRobotsTxt/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionSetOptionParseRobotsTxt\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/spider/action/setOptionParseSVNEntries/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionSetOptionParseSVNEntries\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/spider/action/setOptionParseSitemapXml/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionSetOptionParseSitemapXml\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/spider/action/setOptionPostForm/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionSetOptionPostForm\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/spider/action/setOptionProcessForm/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionSetOptionProcessForm\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/spider/action/setOptionRequestWaitTime/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionSetOptionRequestWaitTime\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Integer\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/spider/action/setOptionSendRefererHeader/:\n    get:\n      description: \u003e-\n        Sets whether or not the 'Referer' header should be sent while spidering.\n      operationId: spiderActionSetOptionSendRefererHeader\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/spider/action/setOptionShowAdvancedDialog/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionSetOptionShowAdvancedDialog\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/spider/action/setOptionThreadCount/:\n    get:\n      description: \u003e-\n        \n      operationId: spiderActionSetOptionThreadCount\n      tags:\n        - spider\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Integer\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/core/view/hosts/:\n    get:\n      description: \u003e-\n        Gets the name of the hosts accessed through/by ZAP\n      operationId: coreViewHosts\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/sites/:\n    get:\n      description: \u003e-\n        Gets the sites accessed through/by ZAP (scheme and domain)\n      operationId: coreViewSites\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/urls/:\n    get:\n      description: \u003e-\n        Gets the URLs accessed through/by ZAP, optionally filtering by (base) URL.\n      operationId: coreViewUrls\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: baseurl\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/view/childNodes/:\n    get:\n      description: \u003e-\n        Gets the child nodes underneath the specified URL in the Sites tree\n      operationId: coreViewChildNodes\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: url\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/view/message/:\n    get:\n      description: \u003e-\n        Gets the HTTP message with the given ID. Returns the ID, request/response headers and bodies, cookies, note, type, RTT, and timestamp.\n      operationId: coreViewMessage\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: id\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/core/view/messages/:\n    get:\n      description: \u003e-\n        Gets the HTTP messages sent by ZAP, request and response, optionally filtered by URL and paginated with 'start' position and 'count' of messages\n      operationId: coreViewMessages\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: baseurl\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: start\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: count\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/core/view/messagesById/:\n    get:\n      description: \u003e-\n        Gets the HTTP messages with the given IDs.\n      operationId: coreViewMessagesById\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: ids\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/view/numberOfMessages/:\n    get:\n      description: \u003e-\n        Gets the number of messages, optionally filtering by URL\n      operationId: coreViewNumberOfMessages\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: baseurl\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/view/mode/:\n    get:\n      description: \u003e-\n        Gets the mode\n      operationId: coreViewMode\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/version/:\n    get:\n      description: \u003e-\n        Gets ZAP version\n      operationId: coreViewVersion\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/excludedFromProxy/:\n    get:\n      description: \u003e-\n        Gets the regular expressions, applied to URLs, to exclude from the local proxies.\n      operationId: coreViewExcludedFromProxy\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/homeDirectory/:\n    get:\n      description: \u003e-\n        \n      operationId: coreViewHomeDirectory\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/sessionLocation/:\n    get:\n      description: \u003e-\n        Gets the location of the current session file\n      operationId: coreViewSessionLocation\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/proxyChainExcludedDomains/:\n    get:\n      description: \u003e-\n        Gets all the domains that are excluded from the outgoing proxy. For each domain the following are shown: the index, the value (domain), if enabled, and if specified as a regex.\n      operationId: coreViewProxyChainExcludedDomains\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/optionProxyChainSkipName/:\n    get:\n      description: \u003e-\n        Use view proxyChainExcludedDomains instead.\n      deprecated: true\n      operationId: coreViewOptionProxyChainSkipName\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/optionProxyExcludedDomains/:\n    get:\n      description: \u003e-\n        Use view proxyChainExcludedDomains instead.\n      deprecated: true\n      operationId: coreViewOptionProxyExcludedDomains\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/optionProxyExcludedDomainsEnabled/:\n    get:\n      description: \u003e-\n        Use view proxyChainExcludedDomains instead.\n      deprecated: true\n      operationId: coreViewOptionProxyExcludedDomainsEnabled\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/zapHomePath/:\n    get:\n      description: \u003e-\n        Gets the path to ZAP's home directory.\n      operationId: coreViewZapHomePath\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/optionMaximumAlertInstances/:\n    get:\n      description: \u003e-\n        Gets the maximum number of alert instances to include in a report.\n      operationId: coreViewOptionMaximumAlertInstances\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/optionMergeRelatedAlerts/:\n    get:\n      description: \u003e-\n        Gets whether or not related alerts will be merged in any reports generated.\n      operationId: coreViewOptionMergeRelatedAlerts\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/optionAlertOverridesFilePath/:\n    get:\n      description: \u003e-\n        Gets the path to the file with alert overrides.\n      operationId: coreViewOptionAlertOverridesFilePath\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/alert/:\n    get:\n      description: \u003e-\n        Gets the alert with the given ID, the corresponding HTTP message can be obtained with the 'messageId' field and 'message' API method\n      deprecated: true\n      operationId: coreViewAlert\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: id\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/core/view/alerts/:\n    get:\n      description: \u003e-\n        Gets the alerts raised by ZAP, optionally filtering by URL or riskId, and paginating with 'start' position and 'count' of alerts\n      deprecated: true\n      operationId: coreViewAlerts\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: baseurl\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: start\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: count\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: riskId\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/view/alertsSummary/:\n    get:\n      description: \u003e-\n        Gets number of alerts grouped by each risk level, optionally filtering by URL\n      deprecated: true\n      operationId: coreViewAlertsSummary\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: baseurl\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/view/numberOfAlerts/:\n    get:\n      description: \u003e-\n        Gets the number of alerts, optionally filtering by URL or riskId\n      deprecated: true\n      operationId: coreViewNumberOfAlerts\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: baseurl\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: riskId\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/view/optionDefaultUserAgent/:\n    get:\n      description: \u003e-\n        Gets the user agent that ZAP should use when creating HTTP messages (for example, spider messages or CONNECT requests to outgoing proxy).\n      operationId: coreViewOptionDefaultUserAgent\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/optionDnsTtlSuccessfulQueries/:\n    get:\n      description: \u003e-\n        Gets the TTL (in seconds) of successful DNS queries.\n      operationId: coreViewOptionDnsTtlSuccessfulQueries\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/optionHttpState/:\n    get:\n      description: \u003e-\n        \n      operationId: coreViewOptionHttpState\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/optionProxyChainName/:\n    get:\n      description: \u003e-\n        \n      operationId: coreViewOptionProxyChainName\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/optionProxyChainPassword/:\n    get:\n      description: \u003e-\n        \n      operationId: coreViewOptionProxyChainPassword\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/optionProxyChainPort/:\n    get:\n      description: \u003e-\n        \n      operationId: coreViewOptionProxyChainPort\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/optionProxyChainRealm/:\n    get:\n      description: \u003e-\n        \n      operationId: coreViewOptionProxyChainRealm\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/optionProxyChainUserName/:\n    get:\n      description: \u003e-\n        \n      operationId: coreViewOptionProxyChainUserName\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/optionTimeoutInSecs/:\n    get:\n      description: \u003e-\n        Gets the connection time out, in seconds.\n      operationId: coreViewOptionTimeoutInSecs\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/optionHttpStateEnabled/:\n    get:\n      description: \u003e-\n        \n      operationId: coreViewOptionHttpStateEnabled\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/optionProxyChainPrompt/:\n    get:\n      description: \u003e-\n        \n      operationId: coreViewOptionProxyChainPrompt\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/optionSingleCookieRequestHeader/:\n    get:\n      description: \u003e-\n        \n      operationId: coreViewOptionSingleCookieRequestHeader\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/optionUseProxyChain/:\n    get:\n      description: \u003e-\n        \n      operationId: coreViewOptionUseProxyChain\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/view/optionUseProxyChainAuth/:\n    get:\n      description: \u003e-\n        \n      operationId: coreViewOptionUseProxyChainAuth\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/action/accessUrl/:\n    get:\n      description: \u003e-\n        Convenient and simple action to access a URL, optionally following redirections. Returns the request sent and response received and followed redirections, if any. Other actions are available which offer more control on what is sent, like, 'sendRequest' or 'sendHarRequest'.\n      operationId: coreActionAccessUrl\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: url\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: followRedirects\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n  /JSON/core/action/shutdown/:\n    get:\n      description: \u003e-\n        Shuts down ZAP\n      operationId: coreActionShutdown\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/action/newSession/:\n    get:\n      description: \u003e-\n        Creates a new session, optionally overwriting existing files. If a relative path is specified it will be resolved against the \"session\" directory in ZAP \"home\" dir.\n      operationId: coreActionNewSession\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: name\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: overwrite\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n  /JSON/core/action/loadSession/:\n    get:\n      description: \u003e-\n        Loads the session with the given name. If a relative path is specified it will be resolved against the \"session\" directory in ZAP \"home\" dir.\n      operationId: coreActionLoadSession\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: name\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/action/saveSession/:\n    get:\n      description: \u003e-\n        Saves the session with the name supplied, optionally overwriting existing files. If a relative path is specified it will be resolved against the \"session\" directory in ZAP \"home\" dir.\n      operationId: coreActionSaveSession\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: name\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: overwrite\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n  /JSON/core/action/snapshotSession/:\n    get:\n      description: \u003e-\n        Snapshots the session, optionally with the given name, and overwriting existing files. If no name is specified the name of the current session with a timestamp appended is used. If a relative path is specified it will be resolved against the \"session\" directory in ZAP \"home\" dir.\n      operationId: coreActionSnapshotSession\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: name\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: overwrite\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n  /JSON/core/action/clearExcludedFromProxy/:\n    get:\n      description: \u003e-\n        Clears the regexes of URLs excluded from the local proxies.\n      operationId: coreActionClearExcludedFromProxy\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/action/excludeFromProxy/:\n    get:\n      description: \u003e-\n        Adds a regex of URLs that should be excluded from the local proxies.\n      operationId: coreActionExcludeFromProxy\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: regex\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/action/setHomeDirectory/:\n    get:\n      description: \u003e-\n        \n      operationId: coreActionSetHomeDirectory\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: dir\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/action/setMode/:\n    get:\n      description: \u003e-\n        Sets the mode, which may be one of [safe, protect, standard, attack]\n      operationId: coreActionSetMode\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: mode\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/action/generateRootCA/:\n    get:\n      description: \u003e-\n        Generates a new Root CA certificate for the local proxies.\n      operationId: coreActionGenerateRootCA\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/action/sendRequest/:\n    get:\n      description: \u003e-\n        Sends the HTTP request, optionally following redirections. Returns the request sent and response received and followed redirections, if any. The Mode is enforced when sending the request (and following redirections), custom manual requests are not allowed in 'Safe' mode nor in 'Protected' mode if out of scope.\n      operationId: coreActionSendRequest\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: request\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: followRedirects\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n  /JSON/core/action/runGarbageCollection/:\n    get:\n      description: \u003e-\n        \n      operationId: coreActionRunGarbageCollection\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/action/deleteSiteNode/:\n    get:\n      description: \u003e-\n        Deletes the site node found in the Sites Tree on the basis of the URL, HTTP method, and post data (if applicable and specified). \n      operationId: coreActionDeleteSiteNode\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: url\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: method\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: postData\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/action/addProxyChainExcludedDomain/:\n    get:\n      description: \u003e-\n        Adds a domain to be excluded from the outgoing proxy, using the specified value. Optionally sets if the new entry is enabled (default, true) and whether or not the new value is specified as a regex (default, false).\n      operationId: coreActionAddProxyChainExcludedDomain\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: value\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: isRegex\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n      - name: isEnabled\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n  /JSON/core/action/modifyProxyChainExcludedDomain/:\n    get:\n      description: \u003e-\n        Modifies a domain excluded from the outgoing proxy. Allows to modify the value, if enabled or if a regex. The domain is selected with its index, which can be obtained with the view proxyChainExcludedDomains.\n      operationId: coreActionModifyProxyChainExcludedDomain\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: idx\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: value\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: isRegex\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n      - name: isEnabled\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n  /JSON/core/action/removeProxyChainExcludedDomain/:\n    get:\n      description: \u003e-\n        Removes a domain excluded from the outgoing proxy, with the given index. The index can be obtained with the view proxyChainExcludedDomains.\n      operationId: coreActionRemoveProxyChainExcludedDomain\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: idx\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/core/action/enableAllProxyChainExcludedDomains/:\n    get:\n      description: \u003e-\n        Enables all domains excluded from the outgoing proxy.\n      operationId: coreActionEnableAllProxyChainExcludedDomains\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/action/disableAllProxyChainExcludedDomains/:\n    get:\n      description: \u003e-\n        Disables all domains excluded from the outgoing proxy.\n      operationId: coreActionDisableAllProxyChainExcludedDomains\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/action/setOptionMaximumAlertInstances/:\n    get:\n      description: \u003e-\n        Sets the maximum number of alert instances to include in a report. A value of zero is treated as unlimited.\n      operationId: coreActionSetOptionMaximumAlertInstances\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: numberOfInstances\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/core/action/setOptionMergeRelatedAlerts/:\n    get:\n      description: \u003e-\n        Sets whether or not related alerts will be merged in any reports generated.\n      operationId: coreActionSetOptionMergeRelatedAlerts\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: enabled\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n  /JSON/core/action/setOptionAlertOverridesFilePath/:\n    get:\n      description: \u003e-\n        Sets (or clears, if empty) the path to the file with alert overrides.\n      operationId: coreActionSetOptionAlertOverridesFilePath\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: filePath\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/action/enablePKCS12ClientCertificate/:\n    get:\n      description: \u003e-\n        Enables use of a PKCS12 client certificate for the certificate with the given file system path, password, and optional index.\n      operationId: coreActionEnablePKCS12ClientCertificate\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: filePath\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: password\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: index\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/action/disableClientCertificate/:\n    get:\n      description: \u003e-\n        Disables the option for use of client certificates.\n      operationId: coreActionDisableClientCertificate\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/action/deleteAllAlerts/:\n    get:\n      description: \u003e-\n        Deletes all alerts of the current session.\n      deprecated: true\n      operationId: coreActionDeleteAllAlerts\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/core/action/deleteAlert/:\n    get:\n      description: \u003e-\n        Deletes the alert with the given ID. \n      deprecated: true\n      operationId: coreActionDeleteAlert\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: id\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/core/action/setOptionDefaultUserAgent/:\n    get:\n      description: \u003e-\n        Sets the user agent that ZAP should use when creating HTTP messages (for example, spider messages or CONNECT requests to outgoing proxy).\n      operationId: coreActionSetOptionDefaultUserAgent\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: String\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/action/setOptionProxyChainName/:\n    get:\n      description: \u003e-\n        \n      operationId: coreActionSetOptionProxyChainName\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: String\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/action/setOptionProxyChainPassword/:\n    get:\n      description: \u003e-\n        \n      operationId: coreActionSetOptionProxyChainPassword\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: String\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/action/setOptionProxyChainRealm/:\n    get:\n      description: \u003e-\n        \n      operationId: coreActionSetOptionProxyChainRealm\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: String\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/action/setOptionProxyChainSkipName/:\n    get:\n      description: \u003e-\n        Use actions [add|modify|remove]ProxyChainExcludedDomain instead.\n      operationId: coreActionSetOptionProxyChainSkipName\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: String\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/action/setOptionProxyChainUserName/:\n    get:\n      description: \u003e-\n        \n      operationId: coreActionSetOptionProxyChainUserName\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: String\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/action/setOptionDnsTtlSuccessfulQueries/:\n    get:\n      description: \u003e-\n        Sets the TTL (in seconds) of successful DNS queries (applies after ZAP restart).\n      operationId: coreActionSetOptionDnsTtlSuccessfulQueries\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Integer\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/core/action/setOptionHttpStateEnabled/:\n    get:\n      description: \u003e-\n        \n      operationId: coreActionSetOptionHttpStateEnabled\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/action/setOptionProxyChainPort/:\n    get:\n      description: \u003e-\n        \n      operationId: coreActionSetOptionProxyChainPort\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Integer\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/core/action/setOptionProxyChainPrompt/:\n    get:\n      description: \u003e-\n        \n      operationId: coreActionSetOptionProxyChainPrompt\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/action/setOptionSingleCookieRequestHeader/:\n    get:\n      description: \u003e-\n        \n      operationId: coreActionSetOptionSingleCookieRequestHeader\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/action/setOptionTimeoutInSecs/:\n    get:\n      description: \u003e-\n        Sets the connection time out, in seconds.\n      operationId: coreActionSetOptionTimeoutInSecs\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Integer\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/core/action/setOptionUseProxyChain/:\n    get:\n      description: \u003e-\n        Sets whether or not the outgoing proxy should be used. The address/hostname of the outgoing proxy must be set to enable this option.\n      operationId: coreActionSetOptionUseProxyChain\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/core/action/setOptionUseProxyChainAuth/:\n    get:\n      description: \u003e-\n        \n      operationId: coreActionSetOptionUseProxyChainAuth\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /OTHER/core/other/proxy.pac/:\n    get:\n      description: \u003e-\n        \n      operationId: coreOtherProxy.pac\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /OTHER/core/other/rootcert/:\n    get:\n      description: \u003e-\n        Gets the Root CA certificate used by the local proxies.\n      operationId: coreOtherRootcert\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /OTHER/core/other/setproxy/:\n    get:\n      description: \u003e-\n        \n      operationId: coreOtherSetproxy\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: proxy\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /OTHER/core/other/xmlreport/:\n    get:\n      description: \u003e-\n        Generates a report in XML format\n      operationId: coreOtherXmlreport\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /OTHER/core/other/htmlreport/:\n    get:\n      description: \u003e-\n        Generates a report in HTML format\n      operationId: coreOtherHtmlreport\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /OTHER/core/other/jsonreport/:\n    get:\n      description: \u003e-\n        Generates a report in JSON format\n      operationId: coreOtherJsonreport\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /OTHER/core/other/mdreport/:\n    get:\n      description: \u003e-\n        Generates a report in Markdown format\n      operationId: coreOtherMdreport\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /OTHER/core/other/messageHar/:\n    get:\n      description: \u003e-\n        Gets the message with the given ID in HAR format\n      operationId: coreOtherMessageHar\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: id\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /OTHER/core/other/messagesHar/:\n    get:\n      description: \u003e-\n        Gets the HTTP messages sent through/by ZAP, in HAR format, optionally filtered by URL and paginated with 'start' position and 'count' of messages\n      operationId: coreOtherMessagesHar\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: baseurl\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: start\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: count\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /OTHER/core/other/messagesHarById/:\n    get:\n      description: \u003e-\n        Gets the HTTP messages with the given IDs, in HAR format.\n      operationId: coreOtherMessagesHarById\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: ids\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /OTHER/core/other/sendHarRequest/:\n    get:\n      description: \u003e-\n        Sends the first HAR request entry, optionally following redirections. Returns, in HAR format, the request sent and response received and followed redirections, if any. The Mode is enforced when sending the request (and following redirections), custom manual requests are not allowed in 'Safe' mode nor in 'Protected' mode if out of scope.\n      operationId: coreOtherSendHarRequest\n      tags:\n        - core\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: request\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: followRedirects\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n  /JSON/params/view/params/:\n    get:\n      description: \u003e-\n        Shows the parameters for the specified site, or for all sites if the site is not specified\n      operationId: paramsViewParams\n      tags:\n        - params\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: site\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/view/status/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewStatus\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanId\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/ascan/view/scanProgress/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewScanProgress\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanId\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/ascan/view/messagesIds/:\n    get:\n      description: \u003e-\n        Gets the IDs of the messages sent during the scan with the given ID. A message can be obtained with 'message' core view.\n      operationId: ascanViewMessagesIds\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/ascan/view/alertsIds/:\n    get:\n      description: \u003e-\n        Gets the IDs of the alerts raised during the scan with the given ID. An alert can be obtained with 'alert' core view.\n      operationId: ascanViewAlertsIds\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/ascan/view/scans/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewScans\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/scanPolicyNames/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewScanPolicyNames\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/excludedFromScan/:\n    get:\n      description: \u003e-\n        Gets the regexes of URLs excluded from the active scans.\n      operationId: ascanViewExcludedFromScan\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/scanners/:\n    get:\n      description: \u003e-\n        Gets the scanners, optionally, of the given scan policy and/or scanner policy/category ID.\n      operationId: ascanViewScanners\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanPolicyName\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: policyId\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/ascan/view/policies/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewPolicies\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanPolicyName\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: policyId\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/ascan/view/attackModeQueue/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewAttackModeQueue\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/excludedParams/:\n    get:\n      description: \u003e-\n        Gets all the parameters that are excluded. For each parameter the following are shown: the name, the URL, and the parameter type.\n      operationId: ascanViewExcludedParams\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/optionExcludedParamList/:\n    get:\n      description: \u003e-\n        Use view excludedParams instead.\n      deprecated: true\n      operationId: ascanViewOptionExcludedParamList\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/excludedParamTypes/:\n    get:\n      description: \u003e-\n        Gets all the types of excluded parameters. For each type the following are shown: the ID and the name.\n      operationId: ascanViewExcludedParamTypes\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/optionAttackPolicy/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewOptionAttackPolicy\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/optionDefaultPolicy/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewOptionDefaultPolicy\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/optionDelayInMs/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewOptionDelayInMs\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/optionHandleAntiCSRFTokens/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewOptionHandleAntiCSRFTokens\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/optionHostPerScan/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewOptionHostPerScan\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/optionMaxChartTimeInMins/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewOptionMaxChartTimeInMins\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/optionMaxResultsToList/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewOptionMaxResultsToList\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/optionMaxRuleDurationInMins/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewOptionMaxRuleDurationInMins\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/optionMaxScanDurationInMins/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewOptionMaxScanDurationInMins\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/optionMaxScansInUI/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewOptionMaxScansInUI\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/optionTargetParamsEnabledRPC/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewOptionTargetParamsEnabledRPC\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/optionTargetParamsInjectable/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewOptionTargetParamsInjectable\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/optionThreadPerHost/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewOptionThreadPerHost\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/optionAddQueryParam/:\n    get:\n      description: \u003e-\n        Tells whether or not the active scanner should add a query parameter to GET request that don't have parameters to start with.\n      operationId: ascanViewOptionAddQueryParam\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/optionAllowAttackOnStart/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewOptionAllowAttackOnStart\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/optionInjectPluginIdInHeader/:\n    get:\n      description: \u003e-\n        Tells whether or not the active scanner should inject the HTTP request header X-ZAP-Scan-ID, with the ID of the scanner that's sending the requests.\n      operationId: ascanViewOptionInjectPluginIdInHeader\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/optionPromptInAttackMode/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewOptionPromptInAttackMode\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/optionPromptToClearFinishedScans/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewOptionPromptToClearFinishedScans\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/optionRescanInAttackMode/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewOptionRescanInAttackMode\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/optionScanHeadersAllRequests/:\n    get:\n      description: \u003e-\n        Tells whether or not the HTTP Headers of all requests should be scanned. Not just requests that send parameters, through the query or request body.\n      operationId: ascanViewOptionScanHeadersAllRequests\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/view/optionShowAdvancedDialog/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanViewOptionShowAdvancedDialog\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/action/scan/:\n    get:\n      description: \u003e-\n        Runs the active scanner against the given URL and/or Context. Optionally, the 'recurse' parameter can be used to scan URLs under the given URL, the parameter 'inScopeOnly' can be used to constrain the scan to URLs that are in scope (ignored if a Context is specified), the parameter 'scanPolicyName' allows to specify the scan policy (if none is given it uses the default scan policy), the parameters 'method' and 'postData' allow to select a given request in conjunction with the given URL.\n      operationId: ascanActionScan\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: url\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: recurse\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n      - name: inScopeOnly\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n      - name: scanPolicyName\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: method\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: postData\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: contextId\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/ascan/action/scanAsUser/:\n    get:\n      description: \u003e-\n        Active Scans from the perspective of a User, obtained using the given Context ID and User ID. See 'scan' action for more details.\n      operationId: ascanActionScanAsUser\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: url\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: contextId\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: userId\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: recurse\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n      - name: scanPolicyName\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: method\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: postData\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/pause/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionPause\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/ascan/action/resume/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionResume\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/ascan/action/stop/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionStop\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/ascan/action/removeScan/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionRemoveScan\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/ascan/action/pauseAllScans/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionPauseAllScans\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/action/resumeAllScans/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionResumeAllScans\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/action/stopAllScans/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionStopAllScans\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/action/removeAllScans/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionRemoveAllScans\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/action/clearExcludedFromScan/:\n    get:\n      description: \u003e-\n        Clears the regexes of URLs excluded from the active scans.\n      operationId: ascanActionClearExcludedFromScan\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ascan/action/excludeFromScan/:\n    get:\n      description: \u003e-\n        Adds a regex of URLs that should be excluded from the active scans.\n      operationId: ascanActionExcludeFromScan\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: regex\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/enableAllScanners/:\n    get:\n      description: \u003e-\n        Enables all scanners of the scan policy with the given name, or the default if none given.\n      operationId: ascanActionEnableAllScanners\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanPolicyName\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/disableAllScanners/:\n    get:\n      description: \u003e-\n        Disables all scanners of the scan policy with the given name, or the default if none given.\n      operationId: ascanActionDisableAllScanners\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanPolicyName\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/enableScanners/:\n    get:\n      description: \u003e-\n        Enables the scanners with the given IDs (comma separated list of IDs) of the scan policy with the given name, or the default if none given.\n      operationId: ascanActionEnableScanners\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: ids\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: scanPolicyName\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/disableScanners/:\n    get:\n      description: \u003e-\n        Disables the scanners with the given IDs (comma separated list of IDs) of the scan policy with the given name, or the default if none given.\n      operationId: ascanActionDisableScanners\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: ids\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: scanPolicyName\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/setEnabledPolicies/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionSetEnabledPolicies\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: ids\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: scanPolicyName\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/setPolicyAttackStrength/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionSetPolicyAttackStrength\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: id\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: attackStrength\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: scanPolicyName\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/setPolicyAlertThreshold/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionSetPolicyAlertThreshold\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: id\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: alertThreshold\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: scanPolicyName\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/setScannerAttackStrength/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionSetScannerAttackStrength\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: id\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: attackStrength\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: scanPolicyName\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/setScannerAlertThreshold/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionSetScannerAlertThreshold\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: id\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: alertThreshold\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: scanPolicyName\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/addScanPolicy/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionAddScanPolicy\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanPolicyName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: alertThreshold\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: attackStrength\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/removeScanPolicy/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionRemoveScanPolicy\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanPolicyName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/updateScanPolicy/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionUpdateScanPolicy\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanPolicyName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: alertThreshold\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: attackStrength\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/importScanPolicy/:\n    get:\n      description: \u003e-\n        Imports a Scan Policy using the given file system path.\n      operationId: ascanActionImportScanPolicy\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: path\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/addExcludedParam/:\n    get:\n      description: \u003e-\n        Adds a new parameter excluded from the scan, using the specified name. Optionally sets if the new entry applies to a specific URL (default, all URLs) and sets the ID of the type of the parameter (default, ID of any type). The type IDs can be obtained with the view excludedParamTypes. \n      operationId: ascanActionAddExcludedParam\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: name\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: type\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: url\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/modifyExcludedParam/:\n    get:\n      description: \u003e-\n        Modifies a parameter excluded from the scan. Allows to modify the name, the URL and the type of parameter. The parameter is selected with its index, which can be obtained with the view excludedParams.\n      operationId: ascanActionModifyExcludedParam\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: idx\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: name\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: type\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: url\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/removeExcludedParam/:\n    get:\n      description: \u003e-\n        Removes a parameter excluded from the scan, with the given index. The index can be obtained with the view excludedParams.\n      operationId: ascanActionRemoveExcludedParam\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: idx\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/ascan/action/skipScanner/:\n    get:\n      description: \u003e-\n        Skips the scanner using the given IDs of the scan and the scanner.\n      operationId: ascanActionSkipScanner\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scanId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: scannerId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/ascan/action/setOptionAttackPolicy/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionSetOptionAttackPolicy\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: String\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/setOptionDefaultPolicy/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionSetOptionDefaultPolicy\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: String\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/setOptionAddQueryParam/:\n    get:\n      description: \u003e-\n        Sets whether or not the active scanner should add a query param to GET requests which do not have parameters to start with.\n      operationId: ascanActionSetOptionAddQueryParam\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/setOptionAllowAttackOnStart/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionSetOptionAllowAttackOnStart\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/setOptionDelayInMs/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionSetOptionDelayInMs\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Integer\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/ascan/action/setOptionHandleAntiCSRFTokens/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionSetOptionHandleAntiCSRFTokens\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/setOptionHostPerScan/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionSetOptionHostPerScan\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Integer\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/ascan/action/setOptionInjectPluginIdInHeader/:\n    get:\n      description: \u003e-\n        Sets whether or not the active scanner should inject the HTTP request header X-ZAP-Scan-ID, with the ID of the scanner that's sending the requests.\n      operationId: ascanActionSetOptionInjectPluginIdInHeader\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/setOptionMaxChartTimeInMins/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionSetOptionMaxChartTimeInMins\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Integer\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/ascan/action/setOptionMaxResultsToList/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionSetOptionMaxResultsToList\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Integer\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/ascan/action/setOptionMaxRuleDurationInMins/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionSetOptionMaxRuleDurationInMins\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Integer\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/ascan/action/setOptionMaxScanDurationInMins/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionSetOptionMaxScanDurationInMins\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Integer\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/ascan/action/setOptionMaxScansInUI/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionSetOptionMaxScansInUI\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Integer\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/ascan/action/setOptionPromptInAttackMode/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionSetOptionPromptInAttackMode\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/setOptionPromptToClearFinishedScans/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionSetOptionPromptToClearFinishedScans\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/setOptionRescanInAttackMode/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionSetOptionRescanInAttackMode\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/setOptionScanHeadersAllRequests/:\n    get:\n      description: \u003e-\n        Sets whether or not the HTTP Headers of all requests should be scanned. Not just requests that send parameters, through the query or request body.\n      operationId: ascanActionSetOptionScanHeadersAllRequests\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/setOptionShowAdvancedDialog/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionSetOptionShowAdvancedDialog\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ascan/action/setOptionTargetParamsEnabledRPC/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionSetOptionTargetParamsEnabledRPC\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Integer\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/ascan/action/setOptionTargetParamsInjectable/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionSetOptionTargetParamsInjectable\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Integer\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/ascan/action/setOptionThreadPerHost/:\n    get:\n      description: \u003e-\n        \n      operationId: ascanActionSetOptionThreadPerHost\n      tags:\n        - ascan\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Integer\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/context/view/contextList/:\n    get:\n      description: \u003e-\n        List context names of current session\n      operationId: contextViewContextList\n      tags:\n        - context\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/context/view/excludeRegexs/:\n    get:\n      description: \u003e-\n        List excluded regexs for context\n      operationId: contextViewExcludeRegexs\n      tags:\n        - context\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/context/view/includeRegexs/:\n    get:\n      description: \u003e-\n        List included regexs for context\n      operationId: contextViewIncludeRegexs\n      tags:\n        - context\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/context/view/context/:\n    get:\n      description: \u003e-\n        List the information about the named context\n      operationId: contextViewContext\n      tags:\n        - context\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/context/view/technologyList/:\n    get:\n      description: \u003e-\n        Lists the names of all built in technologies\n      operationId: contextViewTechnologyList\n      tags:\n        - context\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/context/view/includedTechnologyList/:\n    get:\n      description: \u003e-\n        Lists the names of all technologies included in a context\n      operationId: contextViewIncludedTechnologyList\n      tags:\n        - context\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/context/view/excludedTechnologyList/:\n    get:\n      description: \u003e-\n        Lists the names of all technologies excluded from a context\n      operationId: contextViewExcludedTechnologyList\n      tags:\n        - context\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/context/view/urls/:\n    get:\n      description: \u003e-\n        Lists the URLs accessed through/by ZAP, that belong to the context with the given name.\n      operationId: contextViewUrls\n      tags:\n        - context\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/context/action/excludeFromContext/:\n    get:\n      description: \u003e-\n        Add exclude regex to context\n      operationId: contextActionExcludeFromContext\n      tags:\n        - context\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: regex\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/context/action/includeInContext/:\n    get:\n      description: \u003e-\n        Add include regex to context\n      operationId: contextActionIncludeInContext\n      tags:\n        - context\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: regex\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/context/action/setContextRegexs/:\n    get:\n      description: \u003e-\n        Set the regexs to include and exclude for a context, both supplied as JSON string arrays\n      operationId: contextActionSetContextRegexs\n      tags:\n        - context\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: incRegexs\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: excRegexs\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/context/action/newContext/:\n    get:\n      description: \u003e-\n        Creates a new context with the given name in the current session\n      operationId: contextActionNewContext\n      tags:\n        - context\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/context/action/removeContext/:\n    get:\n      description: \u003e-\n        Removes a context in the current session\n      operationId: contextActionRemoveContext\n      tags:\n        - context\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/context/action/exportContext/:\n    get:\n      description: \u003e-\n        Exports the context with the given name to a file. If a relative file path is specified it will be resolved against the \"contexts\" directory in ZAP \"home\" dir.\n      operationId: contextActionExportContext\n      tags:\n        - context\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: contextFile\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/context/action/importContext/:\n    get:\n      description: \u003e-\n        Imports a context from a file. If a relative file path is specified it will be resolved against the \"contexts\" directory in ZAP \"home\" dir.\n      operationId: contextActionImportContext\n      tags:\n        - context\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextFile\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/context/action/includeContextTechnologies/:\n    get:\n      description: \u003e-\n        Includes technologies with the given names, separated by a comma, to a context\n      operationId: contextActionIncludeContextTechnologies\n      tags:\n        - context\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: technologyNames\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/context/action/includeAllContextTechnologies/:\n    get:\n      description: \u003e-\n        Includes all built in technologies in to a context\n      operationId: contextActionIncludeAllContextTechnologies\n      tags:\n        - context\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/context/action/excludeContextTechnologies/:\n    get:\n      description: \u003e-\n        Excludes technologies with the given names, separated by a comma, from a context\n      operationId: contextActionExcludeContextTechnologies\n      tags:\n        - context\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: technologyNames\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/context/action/excludeAllContextTechnologies/:\n    get:\n      description: \u003e-\n        Excludes all built in technologies from a context\n      operationId: contextActionExcludeAllContextTechnologies\n      tags:\n        - context\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/context/action/setContextInScope/:\n    get:\n      description: \u003e-\n        Sets a context to in scope (contexts are in scope by default)\n      operationId: contextActionSetContextInScope\n      tags:\n        - context\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: booleanInScope\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n  /JSON/httpSessions/view/sites/:\n    get:\n      description: \u003e-\n        Gets all of the sites that have sessions.\n      operationId: httpSessionsViewSites\n      tags:\n        - httpSessions\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/httpSessions/view/sessions/:\n    get:\n      description: \u003e-\n        Gets the sessions for the given site. Optionally returning just the session with the given name.\n      operationId: httpSessionsViewSessions\n      tags:\n        - httpSessions\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: site\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: session\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/httpSessions/view/activeSession/:\n    get:\n      description: \u003e-\n        Gets the name of the active session for the given site.\n      operationId: httpSessionsViewActiveSession\n      tags:\n        - httpSessions\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: site\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/httpSessions/view/sessionTokens/:\n    get:\n      description: \u003e-\n        Gets the names of the session tokens for the given site.\n      operationId: httpSessionsViewSessionTokens\n      tags:\n        - httpSessions\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: site\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/httpSessions/view/defaultSessionTokens/:\n    get:\n      description: \u003e-\n        Gets the default session tokens.\n      operationId: httpSessionsViewDefaultSessionTokens\n      tags:\n        - httpSessions\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/httpSessions/action/createEmptySession/:\n    get:\n      description: \u003e-\n        Creates an empty session for the given site. Optionally with the given name.\n      operationId: httpSessionsActionCreateEmptySession\n      tags:\n        - httpSessions\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: site\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: session\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/httpSessions/action/removeSession/:\n    get:\n      description: \u003e-\n        Removes the session from the given site.\n      operationId: httpSessionsActionRemoveSession\n      tags:\n        - httpSessions\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: site\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: session\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/httpSessions/action/setActiveSession/:\n    get:\n      description: \u003e-\n        Sets the given session as active for the given site.\n      operationId: httpSessionsActionSetActiveSession\n      tags:\n        - httpSessions\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: site\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: session\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/httpSessions/action/unsetActiveSession/:\n    get:\n      description: \u003e-\n        Unsets the active session of the given site.\n      operationId: httpSessionsActionUnsetActiveSession\n      tags:\n        - httpSessions\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: site\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/httpSessions/action/addSessionToken/:\n    get:\n      description: \u003e-\n        Adds the session token to the given site.\n      operationId: httpSessionsActionAddSessionToken\n      tags:\n        - httpSessions\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: site\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: sessionToken\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/httpSessions/action/removeSessionToken/:\n    get:\n      description: \u003e-\n        Removes the session token from the given site.\n      operationId: httpSessionsActionRemoveSessionToken\n      tags:\n        - httpSessions\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: site\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: sessionToken\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/httpSessions/action/setSessionTokenValue/:\n    get:\n      description: \u003e-\n        Sets the value of the session token of the given session for the given site.\n      operationId: httpSessionsActionSetSessionTokenValue\n      tags:\n        - httpSessions\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: site\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: session\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: sessionToken\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: tokenValue\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/httpSessions/action/renameSession/:\n    get:\n      description: \u003e-\n        Renames the session of the given site.\n      operationId: httpSessionsActionRenameSession\n      tags:\n        - httpSessions\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: site\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: oldSessionName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: newSessionName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/httpSessions/action/addDefaultSessionToken/:\n    get:\n      description: \u003e-\n        Adds a default session token with the given name and enabled state.\n      operationId: httpSessionsActionAddDefaultSessionToken\n      tags:\n        - httpSessions\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: sessionToken\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: tokenEnabled\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/httpSessions/action/setDefaultSessionTokenEnabled/:\n    get:\n      description: \u003e-\n        Sets whether or not the default session token with the given name is enabled.\n      operationId: httpSessionsActionSetDefaultSessionTokenEnabled\n      tags:\n        - httpSessions\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: sessionToken\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: tokenEnabled\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/httpSessions/action/removeDefaultSessionToken/:\n    get:\n      description: \u003e-\n        Removes the default session token with the given name.\n      operationId: httpSessionsActionRemoveDefaultSessionToken\n      tags:\n        - httpSessions\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: sessionToken\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/break/view/isBreakAll/:\n    get:\n      description: \u003e-\n        Returns True if ZAP will break on both requests and responses\n      operationId: breakViewIsBreakAll\n      tags:\n        - break\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/break/view/isBreakRequest/:\n    get:\n      description: \u003e-\n        Returns True if ZAP will break on requests\n      operationId: breakViewIsBreakRequest\n      tags:\n        - break\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/break/view/isBreakResponse/:\n    get:\n      description: \u003e-\n        Returns True if ZAP will break on responses\n      operationId: breakViewIsBreakResponse\n      tags:\n        - break\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/break/view/httpMessage/:\n    get:\n      description: \u003e-\n        Returns the HTTP message currently intercepted (if any)\n      operationId: breakViewHttpMessage\n      tags:\n        - break\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/break/action/break/:\n    get:\n      description: \u003e-\n        Controls the global break functionality. The type may be one of: http-all, http-request or http-response. The state may be true (for turning break on for the specified type) or false (for turning break off). Scope is not currently used.\n      operationId: breakActionBreak\n      tags:\n        - break\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: type\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: state\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: scope\n        in: query\n        required: false\n        deprecated: true\n        description: \"\"\n        schema:\n          type: string\n  /JSON/break/action/setHttpMessage/:\n    get:\n      description: \u003e-\n        Overwrites the currently intercepted message with the data provided\n      operationId: breakActionSetHttpMessage\n      tags:\n        - break\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: httpHeader\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: httpBody\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/break/action/continue/:\n    get:\n      description: \u003e-\n        Submits the currently intercepted message and unsets the global request/response break points\n      operationId: breakActionContinue\n      tags:\n        - break\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/break/action/step/:\n    get:\n      description: \u003e-\n        Submits the currently intercepted message, the next request or response will automatically be intercepted\n      operationId: breakActionStep\n      tags:\n        - break\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/break/action/drop/:\n    get:\n      description: \u003e-\n        Drops the currently intercepted message\n      operationId: breakActionDrop\n      tags:\n        - break\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/break/action/addHttpBreakpoint/:\n    get:\n      description: \u003e-\n        Adds a custom HTTP breakpoint. The string is the string to match. Location may be one of: url, request_header, request_body, response_header or response_body. Match may be: contains or regex. Inverse (match) may be true or false. Lastly, ignorecase (when matching the string) may be true or false.  \n      operationId: breakActionAddHttpBreakpoint\n      tags:\n        - break\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: string\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: location\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: match\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: inverse\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n      - name: ignorecase\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n  /JSON/break/action/removeHttpBreakpoint/:\n    get:\n      description: \u003e-\n        Removes the specified break point\n      operationId: breakActionRemoveHttpBreakpoint\n      tags:\n        - break\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: string\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: location\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: match\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: inverse\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n      - name: ignorecase\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n  /JSON/authentication/view/getSupportedAuthenticationMethods/:\n    get:\n      description: \u003e-\n        Gets the name of the authentication methods.\n      operationId: authenticationViewGetSupportedAuthenticationMethods\n      tags:\n        - authentication\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/authentication/view/getAuthenticationMethodConfigParams/:\n    get:\n      description: \u003e-\n        Gets the configuration parameters for the authentication method with the given name.\n      operationId: authenticationViewGetAuthenticationMethodConfigParams\n      tags:\n        - authentication\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: authMethodName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/authentication/view/getAuthenticationMethod/:\n    get:\n      description: \u003e-\n        Gets the name of the authentication method for the context with the given ID.\n      operationId: authenticationViewGetAuthenticationMethod\n      tags:\n        - authentication\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/authentication/view/getLoggedInIndicator/:\n    get:\n      description: \u003e-\n        Gets the logged in indicator for the context with the given ID.\n      operationId: authenticationViewGetLoggedInIndicator\n      tags:\n        - authentication\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/authentication/view/getLoggedOutIndicator/:\n    get:\n      description: \u003e-\n        Gets the logged out indicator for the context with the given ID.\n      operationId: authenticationViewGetLoggedOutIndicator\n      tags:\n        - authentication\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/authentication/action/setAuthenticationMethod/:\n    get:\n      description: \u003e-\n        Sets the authentication method for the context with the given ID.\n      operationId: authenticationActionSetAuthenticationMethod\n      tags:\n        - authentication\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: authMethodName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: authMethodConfigParams\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/authentication/action/setLoggedInIndicator/:\n    get:\n      description: \u003e-\n        Sets the logged in indicator for the context with the given ID.\n      operationId: authenticationActionSetLoggedInIndicator\n      tags:\n        - authentication\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: loggedInIndicatorRegex\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/authentication/action/setLoggedOutIndicator/:\n    get:\n      description: \u003e-\n        Sets the logged out indicator for the context with the given ID.\n      operationId: authenticationActionSetLoggedOutIndicator\n      tags:\n        - authentication\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: loggedOutIndicatorRegex\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/authorization/view/getAuthorizationDetectionMethod/:\n    get:\n      description: \u003e-\n        Obtains all the configuration of the authorization detection method that is currently set for a context.\n      operationId: authorizationViewGetAuthorizationDetectionMethod\n      tags:\n        - authorization\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/authorization/action/setBasicAuthorizationDetectionMethod/:\n    get:\n      description: \u003e-\n        Sets the authorization detection method for a context as one that identifies un-authorized messages based on: the message's status code or a regex pattern in the response's header or body. Also, whether all conditions must match or just some can be specified via the logicalOperator parameter, which accepts two values: \"AND\" (default), \"OR\".  \n      operationId: authorizationActionSetBasicAuthorizationDetectionMethod\n      tags:\n        - authorization\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: headerRegex\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: bodyRegex\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: statusCode\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: logicalOperator\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/localProxies/view/additionalProxies/:\n    get:\n      description: \u003e-\n        Gets all of the additional proxies that have been configured.\n      operationId: localProxiesViewAdditionalProxies\n      tags:\n        - localProxies\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/localProxies/action/addAdditionalProxy/:\n    get:\n      description: \u003e-\n        Adds an new proxy using the details supplied.\n      operationId: localProxiesActionAddAdditionalProxy\n      tags:\n        - localProxies\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: address\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: port\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: behindNat\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n      - name: alwaysDecodeZip\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n      - name: removeUnsupportedEncodings\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n  /JSON/localProxies/action/removeAdditionalProxy/:\n    get:\n      description: \u003e-\n        Removes the additional proxy with the specified address and port.\n      operationId: localProxiesActionRemoveAdditionalProxy\n      tags:\n        - localProxies\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: address\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: port\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/ruleConfig/view/ruleConfigValue/:\n    get:\n      description: \u003e-\n        Show the specified rule configuration\n      operationId: ruleConfigViewRuleConfigValue\n      tags:\n        - ruleConfig\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: key\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ruleConfig/view/allRuleConfigs/:\n    get:\n      description: \u003e-\n        Show all of the rule configurations\n      operationId: ruleConfigViewAllRuleConfigs\n      tags:\n        - ruleConfig\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ruleConfig/action/resetRuleConfigValue/:\n    get:\n      description: \u003e-\n        Reset the specified rule configuration, which must already exist\n      operationId: ruleConfigActionResetRuleConfigValue\n      tags:\n        - ruleConfig\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: key\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/ruleConfig/action/resetAllRuleConfigValues/:\n    get:\n      description: \u003e-\n        Reset all of the rule configurations\n      operationId: ruleConfigActionResetAllRuleConfigValues\n      tags:\n        - ruleConfig\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/ruleConfig/action/setRuleConfigValue/:\n    get:\n      description: \u003e-\n        Set the specified rule configuration, which must already exist\n      operationId: ruleConfigActionSetRuleConfigValue\n      tags:\n        - ruleConfig\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: key\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: value\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/sessionManagement/view/getSupportedSessionManagementMethods/:\n    get:\n      description: \u003e-\n        Gets the name of the session management methods.\n      operationId: sessionManagementViewGetSupportedSessionManagementMethods\n      tags:\n        - sessionManagement\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/sessionManagement/view/getSessionManagementMethodConfigParams/:\n    get:\n      description: \u003e-\n        Gets the configuration parameters for the session management method with the given name.\n      operationId: sessionManagementViewGetSessionManagementMethodConfigParams\n      tags:\n        - sessionManagement\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: methodName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/sessionManagement/view/getSessionManagementMethod/:\n    get:\n      description: \u003e-\n        Gets the name of the session management method for the context with the given ID.\n      operationId: sessionManagementViewGetSessionManagementMethod\n      tags:\n        - sessionManagement\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/sessionManagement/action/setSessionManagementMethod/:\n    get:\n      description: \u003e-\n        Sets the session management method for the context with the given ID.\n      operationId: sessionManagementActionSetSessionManagementMethod\n      tags:\n        - sessionManagement\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: methodName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: methodConfigParams\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/users/view/usersList/:\n    get:\n      description: \u003e-\n        Gets a list of users that belong to the context with the given ID, or all users if none provided.\n      operationId: usersViewUsersList\n      tags:\n        - users\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextId\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/users/view/getUserById/:\n    get:\n      description: \u003e-\n        Gets the data of the user with the given ID that belongs to the context with the given ID.\n      operationId: usersViewGetUserById\n      tags:\n        - users\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: userId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/users/view/getAuthenticationCredentialsConfigParams/:\n    get:\n      description: \u003e-\n        Gets the configuration parameters for the credentials of the context with the given ID.\n      operationId: usersViewGetAuthenticationCredentialsConfigParams\n      tags:\n        - users\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/users/view/getAuthenticationCredentials/:\n    get:\n      description: \u003e-\n        Gets the authentication credentials of the user with given ID that belongs to the context with the given ID.\n      operationId: usersViewGetAuthenticationCredentials\n      tags:\n        - users\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: userId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/users/action/newUser/:\n    get:\n      description: \u003e-\n        Creates a new user with the given name for the context with the given ID.\n      operationId: usersActionNewUser\n      tags:\n        - users\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: name\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/users/action/removeUser/:\n    get:\n      description: \u003e-\n        Removes the user with the given ID that belongs to the context with the given ID.\n      operationId: usersActionRemoveUser\n      tags:\n        - users\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: userId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/users/action/setUserEnabled/:\n    get:\n      description: \u003e-\n        Sets whether or not the user, with the given ID that belongs to the context with the given ID, should be enabled.\n      operationId: usersActionSetUserEnabled\n      tags:\n        - users\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: userId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: enabled\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n  /JSON/users/action/setUserName/:\n    get:\n      description: \u003e-\n        Renames the user with the given ID that belongs to the context with the given ID.\n      operationId: usersActionSetUserName\n      tags:\n        - users\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: userId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: name\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/users/action/setAuthenticationCredentials/:\n    get:\n      description: \u003e-\n        Sets the authentication credentials for the user with the given ID that belongs to the context with the given ID.\n      operationId: usersActionSetAuthenticationCredentials\n      tags:\n        - users\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: userId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: authCredentialsConfigParams\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/forcedUser/view/isForcedUserModeEnabled/:\n    get:\n      description: \u003e-\n        Returns 'true' if 'forced user' mode is enabled, 'false' otherwise\n      operationId: forcedUserViewIsForcedUserModeEnabled\n      tags:\n        - forcedUser\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/forcedUser/view/getForcedUser/:\n    get:\n      description: \u003e-\n        Gets the user (ID) set as 'forced user' for the given context (ID)\n      operationId: forcedUserViewGetForcedUser\n      tags:\n        - forcedUser\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/forcedUser/action/setForcedUser/:\n    get:\n      description: \u003e-\n        Sets the user (ID) that should be used in 'forced user' mode for the given context (ID)\n      operationId: forcedUserActionSetForcedUser\n      tags:\n        - forcedUser\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: contextId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n      - name: userId\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n  /JSON/forcedUser/action/setForcedUserModeEnabled/:\n    get:\n      description: \u003e-\n        Sets if 'forced user' mode should be enabled or not\n      operationId: forcedUserActionSetForcedUserModeEnabled\n      tags:\n        - forcedUser\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: boolean\n  /JSON/script/view/listEngines/:\n    get:\n      description: \u003e-\n        Lists the script engines available\n      operationId: scriptViewListEngines\n      tags:\n        - script\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/script/view/listTypes/:\n    get:\n      description: \u003e-\n        Lists the script types available.\n      operationId: scriptViewListTypes\n      tags:\n        - script\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/script/view/listScripts/:\n    get:\n      description: \u003e-\n        Lists the scripts available, with its engine, name, description, type and error state.\n      operationId: scriptViewListScripts\n      tags:\n        - script\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/script/view/globalVar/:\n    get:\n      description: \u003e-\n        Gets the value of the global variable with the given key. Returns an API error (DOES_NOT_EXIST) if no value was previously set.\n      operationId: scriptViewGlobalVar\n      tags:\n        - script\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: varKey\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/script/view/globalVars/:\n    get:\n      description: \u003e-\n        Gets all the global variables (key/value pairs).\n      operationId: scriptViewGlobalVars\n      tags:\n        - script\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/script/view/scriptVar/:\n    get:\n      description: \u003e-\n        Gets the value of the variable with the given key for the given script. Returns an API error (DOES_NOT_EXIST) if no script with the given name exists or if no value was previously set.\n      operationId: scriptViewScriptVar\n      tags:\n        - script\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scriptName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: varKey\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/script/view/scriptVars/:\n    get:\n      description: \u003e-\n        Gets all the variables (key/value pairs) of the given script. Returns an API error (DOES_NOT_EXIST) if no script with the given name exists.\n      operationId: scriptViewScriptVars\n      tags:\n        - script\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scriptName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/script/action/enable/:\n    get:\n      description: \u003e-\n        Enables the script with the given name\n      operationId: scriptActionEnable\n      tags:\n        - script\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scriptName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/script/action/disable/:\n    get:\n      description: \u003e-\n        Disables the script with the given name\n      operationId: scriptActionDisable\n      tags:\n        - script\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scriptName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/script/action/load/:\n    get:\n      description: \u003e-\n        Loads a script into ZAP from the given local file, with the given name, type and engine, optionally with a description, and a charset name to read the script (the charset name is required if the script is not in UTF-8, for example, in ISO-8859-1).\n      operationId: scriptActionLoad\n      tags:\n        - script\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scriptName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: scriptType\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: scriptEngine\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: fileName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: scriptDescription\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: charset\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n          default: \"UTF-8\"\n  /JSON/script/action/remove/:\n    get:\n      description: \u003e-\n        Removes the script with the given name\n      operationId: scriptActionRemove\n      tags:\n        - script\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scriptName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/script/action/runStandAloneScript/:\n    get:\n      description: \u003e-\n        Runs the stand alone script with the given name\n      operationId: scriptActionRunStandAloneScript\n      tags:\n        - script\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scriptName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/script/action/clearGlobalVar/:\n    get:\n      description: \u003e-\n        Clears the global variable with the given key.\n      operationId: scriptActionClearGlobalVar\n      tags:\n        - script\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: varKey\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/script/action/clearGlobalVars/:\n    get:\n      description: \u003e-\n        Clears the global variables.\n      operationId: scriptActionClearGlobalVars\n      tags:\n        - script\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/script/action/clearScriptVar/:\n    get:\n      description: \u003e-\n        Clears the variable with the given key of the given script. Returns an API error (DOES_NOT_EXIST) if no script with the given name exists.\n      operationId: scriptActionClearScriptVar\n      tags:\n        - script\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scriptName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: varKey\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/script/action/clearScriptVars/:\n    get:\n      description: \u003e-\n        Clears the variables of the given script. Returns an API error (DOES_NOT_EXIST) if no script with the given name exists.\n      operationId: scriptActionClearScriptVars\n      tags:\n        - script\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scriptName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/script/action/setScriptVar/:\n    get:\n      description: \u003e-\n        Sets the value of the variable with the given key of the given script. Returns an API error (DOES_NOT_EXIST) if no script with the given name exists.\n      operationId: scriptActionSetScriptVar\n      tags:\n        - script\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: scriptName\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: varKey\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: varValue\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/script/action/setGlobalVar/:\n    get:\n      description: \u003e-\n        Sets the value of the global variable with the given key.\n      operationId: scriptActionSetGlobalVar\n      tags:\n        - script\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: varKey\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: varValue\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/stats/view/stats/:\n    get:\n      description: \u003e-\n        Statistics\n      operationId: statsViewStats\n      tags:\n        - stats\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: keyPrefix\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/stats/view/allSitesStats/:\n    get:\n      description: \u003e-\n        Gets all of the site based statistics, optionally filtered by a key prefix\n      operationId: statsViewAllSitesStats\n      tags:\n        - stats\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: keyPrefix\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/stats/view/siteStats/:\n    get:\n      description: \u003e-\n        Gets all of the global statistics, optionally filtered by a key prefix\n      operationId: statsViewSiteStats\n      tags:\n        - stats\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: site\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n      - name: keyPrefix\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/stats/view/optionStatsdHost/:\n    get:\n      description: \u003e-\n        Gets the Statsd service hostname\n      operationId: statsViewOptionStatsdHost\n      tags:\n        - stats\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/stats/view/optionStatsdPort/:\n    get:\n      description: \u003e-\n        Gets the Statsd service port\n      operationId: statsViewOptionStatsdPort\n      tags:\n        - stats\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/stats/view/optionStatsdPrefix/:\n    get:\n      description: \u003e-\n        Gets the prefix to be applied to all stats sent to the configured Statsd service\n      operationId: statsViewOptionStatsdPrefix\n      tags:\n        - stats\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/stats/view/optionInMemoryEnabled/:\n    get:\n      description: \u003e-\n        Returns 'true' if in memory statistics are enabled, otherwise returns 'false'\n      operationId: statsViewOptionInMemoryEnabled\n      tags:\n        - stats\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/stats/view/optionStatsdEnabled/:\n    get:\n      description: \u003e-\n        Returns 'true' if a Statsd server has been correctly configured, otherwise returns 'false'\n      operationId: statsViewOptionStatsdEnabled\n      tags:\n        - stats\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /JSON/stats/action/clearStats/:\n    get:\n      description: \u003e-\n        Clears all of the statistics\n      operationId: statsActionClearStats\n      tags:\n        - stats\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: keyPrefix\n        in: query\n        required: false\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/stats/action/setOptionStatsdHost/:\n    get:\n      description: \u003e-\n        Sets the Statsd service hostname, supply an empty string to stop using a Statsd service\n      operationId: statsActionSetOptionStatsdHost\n      tags:\n        - stats\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: String\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/stats/action/setOptionStatsdPrefix/:\n    get:\n      description: \u003e-\n        Sets the prefix to be applied to all stats sent to the configured Statsd service\n      operationId: statsActionSetOptionStatsdPrefix\n      tags:\n        - stats\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: String\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/stats/action/setOptionInMemoryEnabled/:\n    get:\n      description: \u003e-\n        Sets whether in memory statistics are enabled\n      operationId: statsActionSetOptionInMemoryEnabled\n      tags:\n        - stats\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Boolean\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: string\n  /JSON/stats/action/setOptionStatsdPort/:\n    get:\n      description: \u003e-\n        Sets the Statsd service port\n      operationId: statsActionSetOptionStatsdPort\n      tags:\n        - stats\n      responses:\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    parameters:\n      - name: Integer\n        in: query\n        required: true\n        deprecated: false\n        description: \"\"\n        schema:\n          type: integer\n"
		}
	},
	"Error": "security: failed to write file oas_security_gen.go: format: 121:3: expected 1 expression"
}