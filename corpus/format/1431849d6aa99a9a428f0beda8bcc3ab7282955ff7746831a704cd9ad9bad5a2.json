{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-tools"
		},
		"file": {
			"name": "combination_of_apikey_and_http_oauth.yaml",
			"size": 0,
			"path": "openapi-cli/src/test/resources/generators/test_cases/sample_yamls/combination_of_apikey_and_http_oauth.yaml",
			"byteSize": 3883,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: OpenApi Petstore\n  license:\n    name: MIT\nservers:\n  - url: http://petstore.{host}.io/v1\n    description: The production API server\n    variables:\n      host:\n        default: openapi\n        description: this value is assigned by the service provider\n  - url: https://{subdomain}.swagger.io:{port}/{basePath}\n    description: The production API server\n    variables:\n      subdomain:\n        default: petstore\n        description: this value is assigned by the service provider\n      port:\n        enum:\n          - '8443'\n          - '443'\n        default: '443'\n      basePath:\n        default: v2\ntags:\n  - name: pets\n    description: Pets Tag\n  - name: list\n    description: List Tag\n\npaths:\n  /pets/management:\n    get:\n      operationId: getPetInfo\n      summary: Info for a specific pet\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: query\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: string\n        - name: headerX\n          in: header\n          required: true\n          description: Header X\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n      security:\n        - api_key: []\n        - api_key_2: []\n    delete:\n      operationId: deletePetInfo\n      summary: Delete a pet\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: query\n          required: true\n          description: The id of the pet to delete\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n      security:\n        - api_key: []\n        - api_key_2: []\n    post:\n      operationId: votePet\n      summary: Vote for a pet\n      tags:\n        - pets\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n      security:\n        - api_key: []\n        - api_key_2: []\n  /pets/management2:\n    delete:\n      operationId: deletePetInfo2\n      summary: Delete a pet 2\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: header\n          required: true\n          description: The id of the pet to delete\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n      security:\n        - api_key: []\n        - api_key_2: []\ncomponents:\n  schemas:\n    Pet:\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        tag:\n          type: string\n        type:\n          type: string\n  securitySchemes:\n    api_key:\n      in: header\n      name: api-key\n      description: Represents API Key `api-key`\n      type: apiKey\n    api_key_2:\n      in: query\n      name: api-key-2\n      description: Represents API Key `api-key-2`\n      type: apiKey\n    oauth2:\n      flows:\n        authorizationCode:\n          authorizationUrl: https://dev.to/oauth/authorize\n          refreshUrl: https://dev.to/oauth/token\n          scopes: {}\n          tokenUrl: https://dev.to/oauth/token\n        clientCredentials:\n          refreshUrl: https://dev.to/oauth/token\n          scopes: {}\n          tokenUrl: https://dev.to/oauth/token\n      type: oauth2\n"
		}
	},
	"Error": "security: failed to write file oas_security_gen.go: format: 125:3: expected 1 expression"
}