{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/webscraping.ai/2.0.4/openapi.yaml",
			"byteSize": 10905,
			"content": "openapi: 3.0.2\nservers:\n  - url: https://api.webscraping.ai\ninfo:\n  contact:\n    email: support@webscraping.ai\n    name: WebScraping.AI Support\n    url: https://webscraping.ai\n  description: A client for https://webscraping.ai API. It provides a web scaping automation API with Chrome JS rendering, rotating proxies and builtin HTML parsing.\n  title: WebScraping.AI\n  version: 2.0.4\n  x-apisguru-categories:\n    - developer_tools\n  x-origin:\n    - format: openapi\n      url: https://webscraping.ai/openapi.yml\n      version: \"3.0\"\n  x-providerName: webscraping.ai\nsecurity:\n  - api_key: []\ntags:\n  - description: Get full HTML content of pages with proxies and Chrome JS rendering\n    name: HTML\n  - description: Get HTML content of selected page areas (like price, search results, page title, etc.)\n    name: Selected HTML\n  - description: Information about your account calls quota\n    name: Account\npaths:\n  /account:\n    get:\n      description: Always returns JSON\n      operationId: account\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                remaining_api_calls: 200000\n                remaining_concurrency: 100\n                resets_at: 1617073667\n              schema:\n                $ref: \"#/components/schemas/Account\"\n          description: Success\n        \"403\":\n          $ref: \"#/components/responses/403\"\n      summary: Information about your account calls quota\n      tags:\n        - Account\n  /html:\n    get:\n      description: Returns just HTML on success, JSON on error\n      operationId: getHTML\n      parameters:\n        - $ref: \"#/components/parameters/url\"\n        - $ref: \"#/components/parameters/headers\"\n        - $ref: \"#/components/parameters/timeout\"\n        - $ref: \"#/components/parameters/js\"\n        - $ref: \"#/components/parameters/proxy\"\n      responses:\n        \"200\":\n          content:\n            text/html:\n              example: |-\n                \u003chtml\u003e\u003chead\u003e\n                    \u003ctitle\u003eExample Domain\u003c/title\u003e\n                \u003c/head\u003e\n\n                \u003cbody\u003e\n                \u003cdiv\u003e\n                    \u003ch1\u003eExample Domain\u003c/h1\u003e\n                \u003c/body\u003e\u003c/html\u003e\n              schema:\n                type: string\n          description: Success\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"402\":\n          $ref: \"#/components/responses/402\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"429\":\n          $ref: \"#/components/responses/429\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n        \"502\":\n          $ref: \"#/components/responses/502\"\n        \"504\":\n          $ref: \"#/components/responses/504\"\n      summary: Page HTML by URL\n      tags:\n        - HTML\n  /selected:\n    get:\n      description: Returns just HTML on success, JSON on error\n      operationId: getSelected\n      parameters:\n        - description: CSS selector (null by default, returns whole page HTML)\n          example: h1\n          in: query\n          name: selector\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/url\"\n        - $ref: \"#/components/parameters/headers\"\n        - $ref: \"#/components/parameters/timeout\"\n        - $ref: \"#/components/parameters/js\"\n        - $ref: \"#/components/parameters/proxy\"\n      responses:\n        \"200\":\n          content:\n            text/html:\n              example: \u003ca href=\"https://www.iana.org/domains/example\"\u003eMore information...\u003c/a\u003e\n              schema:\n                type: string\n          description: Success\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"402\":\n          $ref: \"#/components/responses/402\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"429\":\n          $ref: \"#/components/responses/429\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n        \"502\":\n          $ref: \"#/components/responses/502\"\n        \"504\":\n          $ref: \"#/components/responses/504\"\n      summary: HTML of a selected page area by URL and CSS selector\n      tags:\n        - Selected HTML\n  /selected-multiple:\n    get:\n      description: Always returns JSON\n      operationId: getSelectedMultiple\n      parameters:\n        - description: Multiple CSS selectors (null by default, returns whole page HTML)\n          example:\n            - h1\n          in: query\n          name: selectors\n          schema:\n            items:\n              type: string\n            type: array\n        - $ref: \"#/components/parameters/url\"\n        - $ref: \"#/components/parameters/headers\"\n        - $ref: \"#/components/parameters/timeout\"\n        - $ref: \"#/components/parameters/js\"\n        - $ref: \"#/components/parameters/proxy\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                - \u003ca href='/test'\u003esome link\u003c/a\u003e\n                - Hello\n              schema:\n                $ref: \"#/components/schemas/SelectedAreas\"\n          description: Success\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"402\":\n          $ref: \"#/components/responses/402\"\n        \"403\":\n          $ref: \"#/components/responses/403\"\n        \"429\":\n          $ref: \"#/components/responses/429\"\n        \"500\":\n          $ref: \"#/components/responses/500\"\n        \"502\":\n          $ref: \"#/components/responses/502\"\n        \"504\":\n          $ref: \"#/components/responses/504\"\n      summary: HTML of multiple page areas by URL and CSS selectors\n      tags:\n        - Selected HTML\ncomponents:\n  parameters:\n    headers:\n      description: 'HTTP headers to pass to the target page. Can be specified either via a nested query parameter (...\u0026headers[One]=value1\u0026headers=[Another]=value2) or as a JSON encoded object (...\u0026headers={\"One\": \"value1\", \"Another\": \"value2\"})'\n      example:\n        Cookie: session=some_id\n      in: query\n      name: headers\n      schema:\n        additionalProperties:\n          type: string\n        type: object\n    js:\n      description: Execute on-page JavaScript using a headless browser (true by default)\n      example: true\n      in: query\n      name: js\n      schema:\n        default: true\n        type: boolean\n    js_timeout:\n      description: Maximum JavaScript rendering time in ms. Increase it in case if you see a loading indicator instead of data on the target page.\n      example: 5000\n      in: query\n      name: timeout\n      schema:\n        default: 2000\n        maximum: 20000\n        minimum: 1\n        type: integer\n    postUrl:\n      description: URL of the target page\n      example: https://httpbin.org/post\n      in: query\n      name: url\n      required: true\n      schema:\n        type: string\n    proxy:\n      description: Type of proxy, use residential proxies if your site restricts traffic from datacenters (datacenter by default). Note that residential proxy requests are more expensive than datacenter, see the pricing page for details.\n      example: datacenter\n      in: query\n      name: proxy\n      schema:\n        default: datacenter\n        enum:\n          - datacenter\n          - residential\n        type: string\n    timeout:\n      description: Maximum processing time in ms. Increase it in case of timeout errors (5000 by default, maximum is 30000)\n      example: 5000\n      in: query\n      name: timeout\n      schema:\n        default: 5000\n        maximum: 30000\n        minimum: 1\n        type: integer\n    url:\n      description: URL of the target page\n      example: https://example.com\n      in: query\n      name: url\n      required: true\n      schema:\n        type: string\n  requestBodies:\n    Body:\n      content:\n        application/json:\n          schema:\n            additionalProperties: true\n            type: object\n        application/x-www-form-urlencoded:\n          schema:\n            additionalProperties: true\n            type: object\n        application/xml:\n          schema:\n            additionalProperties: true\n            type: object\n        text/plain:\n          schema:\n            type: string\n      description: Request body to pass to the target page\n  responses:\n    \"400\":\n      content:\n        application/json:\n          example:\n            message: Invalid CSS selector\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Parameters validation error\n    \"402\":\n      content:\n        application/json:\n          example:\n            message: Some error\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Billing issue, probably you've ran out of credits\n    \"403\":\n      content:\n        application/json:\n          example:\n            message: Some error\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Wrong API key\n    \"429\":\n      content:\n        application/json:\n          example:\n            message: Some error\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Too many concurrent requests\n    \"500\":\n      content:\n        application/json:\n          example:\n            message: Some error\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Unexpected error, try again or contact support@webscraping.ai\n    \"502\":\n      content:\n        application/json:\n          example:\n            status_code: 500\n            status_message: Some website error\n          schema:\n            $ref: \"#/components/schemas/PageError\"\n      description: Non-2xx and non-404 HTTP status code on the target page\n    \"504\":\n      content:\n        application/json:\n          example:\n            message: Some error\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Timeout error, try increasing timeout parameter value\n  schemas:\n    Account:\n      properties:\n        remaining_api_calls:\n          description: Remaining API calls quota\n          type: integer\n        remaining_concurrency:\n          description: Remaining concurrent requests\n          type: integer\n        resets_at:\n          description: Next billing cycle start time (UNIX timestamp)\n          type: integer\n      title: Account limits info\n      type: object\n    Error:\n      properties:\n        message:\n          description: Error description\n          type: string\n      title: Generic error\n      type: object\n    PageError:\n      properties:\n        status_code:\n          description: Response HTTP status code (403, 500, etc)\n          type: integer\n        status_message:\n          description: Response HTTP status message\n          type: string\n      title: Non-2xx and non-404 HTTP status code on the target page\n      type: object\n    SelectedAreas:\n      description: Array of elements matched by selectors\n      items:\n        type: string\n      title: HTML for selected page areas\n      type: array\n  securitySchemes:\n    api_key:\n      in: query\n      name: api_key\n      type: apiKey\n"
		}
	},
	"Error": "security: failed to write file oas_security_gen.go: format: 103:3: expected 1 expression"
}