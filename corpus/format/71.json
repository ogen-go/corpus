{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/zerotier/go-ztcentral"
		},
		"file": {
			"name": "spec.json",
			"path": "spec.json",
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"description\": \"ZeroTier Central Network Management Portal API.\u003cp\u003eAll API requests must have an API token header specified in the \u003ccode\u003eAuthorization: Bearer xxxxx\u003c/code\u003e format.  You can generate your API key by logging into \u003ca href=\\\"https://my.zerotier.com\\\"\u003eZeroTier Central\u003c/a\u003e and creating a token on the Account page.\u003c/p\u003e\u003cp\u003eeg. \u003ccode\u003ecurl -X GET -H \\\"Authorization: bearer xxxxx\\\" https://my.zerotier.com/api/v1/network\u003c/code\u003e\u003c/p\u003e\",\n    \"version\": \"v1\",\n    \"title\": \"ZeroTier Central API\",\n    \"contact\": {\n      \"name\": \"ZeroTier Support Discussion Forum\",\n      \"url\": \"https://discuss.zerotier.com\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://my.zerotier.com/api/v1\",\n      \"description\": \"Production Server\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"network\",\n      \"description\": \"Network operations\"\n    },\n    {\n      \"name\": \"network-member\",\n      \"description\": \"Network member operations\"\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"User management operations\"\n    },\n    {\n      \"name\": \"organizations\",\n      \"description\": \"Organization management. Note: Organizations require a paid account and cannot be created via the API\"\n    },\n    {\n      \"name\": \"util\",\n      \"description\": \"Utility endpoints\"\n    }\n  ],\n  \"paths\": {\n    \"/status\": {\n      \"get\": {\n        \"tags\": [\"util\"],\n        \"summary\": \"Obtain the overall status of the account tied to the API token in use.\",\n        \"operationId\": \"getStatus\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/network\": {\n      \"get\": {\n        \"tags\": [\"network\"],\n        \"summary\": \"Returns a list of Networks you have access to.\",\n        \"operationId\": \"getNetworkList\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Network\"\n                  }\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"network\"],\n        \"summary\": \"Create a new network.\",\n        \"operationId\": \"newNetwork\",\n        \"requestBody\": {\n          \"description\": \"empty JSON object\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Network creation succeeded\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Network\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/network/{networkID}\": {\n      \"get\": {\n        \"tags\": [\"network\"],\n        \"summary\": \"Get network by ID\",\n        \"description\": \"Returns a single network\",\n        \"operationId\": \"getNetworkByID\",\n        \"parameters\": [\n          {\n            \"name\": \"networkID\",\n            \"description\": \"ID of the network to return\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"get success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Network\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/AccessDeniedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"network\"],\n        \"summary\": \"update network configuration\",\n        \"operationId\": \"updateNetwork\",\n        \"parameters\": [\n          {\n            \"name\": \"networkID\",\n            \"description\": \"ID of the network to change\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Network object JSON\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Network\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Network\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/AccessDeniedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\"network\"],\n        \"summary\": \"delete network\",\n        \"operationId\": \"deleteNetwork\",\n        \"parameters\": [\n          {\n            \"name\": \"networkID\",\n            \"description\": \"ID of the network\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"network deleted\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/AccessDeniedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/network/{networkID}/member\": {\n      \"get\": {\n        \"tags\": [\"network-member\"],\n        \"summary\": \"Returns a list of Members on the network.\",\n        \"operationId\": \"getNetworkMemberList\",\n        \"parameters\": [\n          {\n            \"name\": \"networkID\",\n            \"description\": \"ID of the network to return\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"member list get success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Member\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/AccessDeniedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/network/{networkID}/member/{memberID}\": {\n      \"get\": {\n        \"tags\": [\"network-member\"],\n        \"operationId\": \"getNetworkMember\",\n        \"summary\": \"Return an individual member on a network\",\n        \"parameters\": [\n          {\n            \"name\": \"networkID\",\n            \"description\": \"ID of the network\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"memberID\",\n            \"description\": \"ID of the member\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"member get success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Member\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/AccessDeniedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"network-member\"],\n        \"operationId\": \"updateNetworkMember\",\n        \"summary\": \"Modify a network member\",\n        \"parameters\": [\n          {\n            \"name\": \"networkID\",\n            \"description\": \"ID of the network\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"memberID\",\n            \"description\": \"ID of the member\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Member object JSON\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Member\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"member changed successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Member\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/AccessDeniedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\"network-member\"],\n        \"operationId\": \"deleteNetworkMember\",\n        \"summary\": \"Delete a network member\",\n        \"parameters\": [\n          {\n            \"name\": \"networkID\",\n            \"description\": \"ID of the network\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"memberID\",\n            \"description\": \"ID of the member\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"member deleted\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/AccessDeniedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/user/{userID}\": {\n      \"get\": {\n        \"tags\": [\"user\"],\n        \"operationId\": \"getUserByID\",\n        \"summary\": \"Get user record\",\n        \"parameters\": [\n          {\n            \"name\": \"userID\",\n            \"description\": \"User ID\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User get success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/AccessDeniedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"user\"],\n        \"operationId\": \"updateUserByID\",\n        \"summary\": \"Update user record (SMS number or Display Name only)\",\n        \"parameters\": [\n          {\n            \"name\": \"userID\",\n            \"description\": \"User ID\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"User object JSON\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User update success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/AccessDeniedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\"user\"],\n        \"operationId\": \"deleteUserByID\",\n        \"summary\": \"Delete user\",\n        \"description\": \"Deletes the user and all associated networks.  This is not reversible. Delete at your own risk.\",\n        \"parameters\": [\n          {\n            \"name\": \"userID\",\n            \"description\": \"User ID\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"user deleted\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/AccessDeniedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/user/{userID}/token\": {\n      \"post\": {\n        \"tags\": [\"user\"],\n        \"operationId\": \"addAPIToken\",\n        \"summary\": \"Add an API token\",\n        \"parameters\": [\n          {\n            \"name\": \"userID\",\n            \"description\": \"User ID\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"APIToken JSON object\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/APIToken\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"API Token added\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/APIToken\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/AccessDeniedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/user/{userID}/token/{tokenName}\": {\n      \"delete\": {\n        \"tags\": [\"user\"],\n        \"operationId\": \"deleteAPIToken\",\n        \"summary\": \"Delete API Token\",\n        \"parameters\": [\n          {\n            \"name\": \"userID\",\n            \"description\": \"User ID\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"tokenName\",\n            \"description\": \"Token Name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"API token deleted\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/AccessDeniedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/org\": {\n      \"get\": {\n        \"tags\": [\"organizations\"],\n        \"operationId\": \"getOrganization\",\n        \"summary\": \"Get the current user's organization\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Get my organization\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Organization\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/AccessDeniedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/org/{orgID}\": {\n      \"get\": {\n        \"tags\": [\"organizations\"],\n        \"operationId\": \"getOrganizationByID\",\n        \"summary\": \"Get organization by ID\",\n        \"parameters\": [\n          {\n            \"name\": \"orgID\",\n            \"description\": \"Organization ID\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Organization\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Organization\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/AccessDeniedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/org/{orgID}/user\": {\n      \"get\": {\n        \"tags\": [\"organizations\"],\n        \"operationId\": \"getOrganizationMembers\",\n        \"summary\": \"Get list of organization members\",\n        \"parameters\": [\n          {\n            \"name\": \"orgID\",\n            \"description\": \"Organization ID\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Get organization members success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrganizationMember\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/AccessDeniedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/org-invitation\": {\n      \"get\": {\n        \"tags\": [\"organizations\"],\n        \"operationId\": \"getOrganizationInvitationList\",\n        \"summary\": \"Get list of organization invitations\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Get list of invitations\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/OrganizationInvitation\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/AccessDeniedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"organizations\"],\n        \"operationId\": \"inviteUserByEmail\",\n        \"summary\": \"Invite a user to your organization by email\",\n        \"requestBody\": {\n          \"description\": \"Organization Invitation JSON object\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/OrganizationInvitation\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User invited to organization\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrganizationInvitation\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/AccessDeniedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/org-invitation/{inviteID}\": {\n      \"get\": {\n        \"tags\": [\"organizations\"],\n        \"operationId\": \"getInvitationByID\",\n        \"summary\": \"Get organization invitation\",\n        \"parameters\": [\n          {\n            \"name\": \"inviteID\",\n            \"description\": \"Invitation ID\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Get organization invitation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrganizationInvitation\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/AccessDeniedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"organizations\"],\n        \"operationId\": \"acceptInvitation\",\n        \"summary\": \"Accept organization invitation\",\n        \"parameters\": [\n          {\n            \"name\": \"inviteID\",\n            \"description\": \"Invitation ID\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Organization invitation accepted\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrganizationInvitation\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/AccessDeniedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\"organizations\"],\n        \"operationId\": \"declineInvitation\",\n        \"summary\": \"Decline organization invitation\",\n        \"parameters\": [\n          {\n            \"name\": \"inviteID\",\n            \"description\": \"Invitation ID\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"organization invitation declined\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/AccessDeniedError\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound\"\n          }\n        }\n      }\n    },\n    \"/randomToken\": {\n      \"get\": {\n        \"tags\": [\"util\"],\n        \"operationId\": \"getRandomToken\",\n        \"summary\": \"Get a random 32 character token\",\n        \"description\": \"Get a random 32 character.  Used by the web UI to generate API keys\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Random token\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RandomToken\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"securitySchemes\": {\n      \"bearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\"\n      }\n    },\n    \"responses\": {\n      \"BadRequest\": {\n        \"description\": \"Bad request\"\n      },\n      \"AccessDeniedError\": {\n        \"description\": \"Access denied\"\n      },\n      \"NotFound\": {\n        \"description\": \"Item not found\"\n      },\n      \"UnauthorizedError\": {\n        \"description\": \"Authorization required\"\n      }\n    },\n    \"schemas\": {\n      \"Network\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"example\": \"8056c2e21c000001\",\n            \"readOnly\": true\n          },\n          \"clock\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 12345,\n            \"readOnly\": true\n          },\n          \"config\": {\n            \"$ref\": \"#/components/schemas/NetworkConfig\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"example\": \"Some descriptive text about my network.\"\n          },\n          \"rulesSource\": {\n            \"type\": \"string\",\n            \"example\": \"accept;\"\n          },\n          \"permissions\": {\n            \"$ref\": \"#/components/schemas/PermissionsMap\"\n          },\n          \"ownerId\": {\n            \"type\": \"string\",\n            \"example\": \"00000000-0000-0000-0000-000000000000\"\n          },\n          \"onlineMemberCount\": {\n            \"type\": \"integer\",\n            \"example\": 123,\n            \"readOnly\": true\n          },\n          \"authorizedMemberCount\": {\n            \"type\": \"integer\",\n            \"example\": 200,\n            \"readOnly\": true\n          },\n          \"totalMemberCount\": {\n            \"type\": \"integer\",\n            \"example\": 250,\n            \"readOnly\": true\n          },\n          \"capabilitiesByName\": {\n            \"type\": \"object\"\n          },\n          \"tagsByName\": {\n            \"type\": \"object\"\n          }\n        },\n        \"description\": \"Network object\"\n      },\n      \"NetworkConfig\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"example\": \"8056c2e21c000001\",\n            \"description\": \"Network ID\",\n            \"readOnly\": true\n          },\n          \"creationTime\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1442292672978,\n            \"description\": \"Time the network was created\",\n            \"readOnly\": true\n          },\n          \"capabilities\": {\n            \"type\": \"array\",\n            \"description\": \"Array of network capabilities\",\n            \"items\": {\n              \"type\": \"object\"\n            }\n          },\n          \"dns\": {\n            \"type\": \"object\",\n            \"$ref\": \"#/components/schemas/DNS\"\n          },\n          \"enableBroadcast\": {\n            \"type\": \"boolean\",\n            \"example\": true,\n            \"description\": \"Enable broadcast packets on the network\"\n          },\n          \"ipAssignmentPools\": {\n            \"type\": \"array\",\n            \"description\": \"Range of IP addresses for the auto assign pool\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/IPRange\"\n            }\n          },\n          \"lastModified\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1588184318235,\n            \"description\": \"Time the network was last modified\",\n            \"readOnly\": true\n          },\n          \"mtu\": {\n            \"type\": \"integer\",\n            \"example\": 2800,\n            \"description\": \"MTU to set on the client virtual network adapter\"\n          },\n          \"multicastLimit\": {\n            \"type\": \"integer\",\n            \"example\": 32,\n            \"description\": \"Maximum number of recipients per multicast or broadcast. Warning - Setting this to 0 will disable IPv4 communication on your network!\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"My ZeroTier Network\"\n          },\n          \"private\": {\n            \"type\": \"boolean\",\n            \"example\": true,\n            \"description\": \"Whether or not the network is private.  If false, members will *NOT* need to be authorized to join.\"\n          },\n          \"routes\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Route\"\n            }\n          },\n          \"rules\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            }\n          },\n          \"v4AssignMode\": {\n            \"$ref\": \"#/components/schemas/IPV4AssignMode\"\n          },\n          \"v6AssignMode\": {\n            \"$ref\": \"#/components/schemas/IPV6AssignMode\"\n          }\n        }\n      },\n      \"Member\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"example\": \"8056c2e21c000001-abcdef0123\",\n            \"description\": \"concatenation of network ID and member ID\",\n            \"readOnly\": true,\n            \"deprecated\": true\n          },\n          \"clock\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1612993759070,\n            \"readOnly\": true\n          },\n          \"networkId\": {\n            \"type\": \"string\",\n            \"example\": \"8056c2e21c000001\",\n            \"readOnly\": true\n          },\n          \"nodeId\": {\n            \"type\": \"string\",\n            \"example\": \"abcdef01234\",\n            \"description\": \"ZeroTier ID of the member\",\n            \"readOnly\": true\n          },\n          \"controllerId\": {\n            \"type\": \"string\",\n            \"example\": \"8056c2e21c\",\n            \"readOnly\": true,\n            \"deprecated\": true\n          },\n          \"hidden\": {\n            \"type\": \"boolean\",\n            \"example\": false,\n            \"description\": \"Whether or not the member is hidden in the UI\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"my-cray-supercomputer\",\n            \"readOnly\": false,\n            \"description\": \"User defined name of the member\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"example\": \"My super awesome cray that I got ZeroTier to run on\",\n            \"readOnly\": false,\n            \"description\": \"User defined description of the member\"\n          },\n          \"config\": {\n            \"$ref\": \"#/components/schemas/MemberConfig\"\n          },\n          \"lastOnline\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"readOnly\": true,\n            \"description\": \"Last seen time of the member\",\n            \"example\": 1612993673254\n          },\n          \"physicalAddress\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"description\": \"IP address the member last spoke to the controller via\",\n            \"example\": \"8.8.8.8\"\n          },\n          \"clientVersion\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"description\": \"ZeroTier version the member is running\",\n            \"example\": \"1.6.3\"\n          },\n          \"protocolVersion\": {\n            \"type\": \"integer\",\n            \"readOnly\": true,\n            \"description\": \"ZeroTier protocol version\",\n            \"example\": 12\n          },\n          \"supportsRulesEngine\": {\n            \"type\": \"boolean\",\n            \"readOnly\": true,\n            \"description\": \"Whether or not the client version is new enough to support the rules engine (1.4.0+)\"\n          }\n        }\n      },\n      \"MemberConfig\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"activeBridge\": {\n            \"type\": \"boolean\",\n            \"readOnly\": false,\n            \"description\": \"Allow the member to be a bridge on the network\",\n            \"example\": false\n          },\n          \"authorized\": {\n            \"type\": \"boolean\",\n            \"readOnly\": false,\n            \"description\": \"Is the member authorized on the network\",\n            \"example\": true\n          },\n          \"capabilities\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\"\n            }\n          },\n          \"creationTime\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"readOnly\": true,\n            \"description\": \"Time the member was created or first tried to join the network\",\n            \"example\": 1599853509872\n          },\n          \"id\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"description\": \"ID of the member node.  This is the 10 digit identifier that identifies a ZeroTier node.\",\n            \"example\": \"abcdef01234\"\n          },\n          \"identity\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"description\": \"Public Key of the member's Identity\",\n            \"example\": \"abcdef0123:0:abcdef0123abcdef0123abcdef0123abcdef0123abcdef0123abcdef0123abcdef0123\"\n          },\n          \"ipAssignments\": {\n            \"type\": \"array\",\n            \"readOnly\": false,\n            \"description\": \"List of assigned IP addresses\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"example\": [\"10.0.0.3\"]\n          },\n          \"lastAuthorizedTime\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"readOnly\": true,\n            \"description\": \"Time the member was authorized on the network\",\n            \"example\": 1599853637989\n          },\n          \"lastDeauthorizedTime\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"readOnly\": true,\n            \"description\": \"Time the member was deauthorized on the network\",\n            \"example\": 0\n          },\n          \"noAutoAssignIps\": {\n            \"type\": \"boolean\",\n            \"readOnly\": false,\n            \"description\": \"Exempt this member from the IP auto assignment pool on a Network\",\n            \"example\": false\n          },\n          \"revision\": {\n            \"type\": \"integer\",\n            \"readOnly\": true,\n            \"description\": \"Member record revision count\",\n            \"example\": 123\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"integer\"\n              }\n            },\n            \"readOnly\": false,\n            \"description\": \"Array of 2 member tuples of tag [ID, tag value]\",\n            \"example\": [[123, 456]]\n          },\n          \"vMajor\": {\n            \"type\": \"integer\",\n            \"readOnly\": true,\n            \"description\": \"Major version of the client\",\n            \"example\": 1\n          },\n          \"vMinor\": {\n            \"type\": \"integer\",\n            \"readOnly\": true,\n            \"description\": \"Minor version of the client\",\n            \"example\": 6\n          },\n          \"vRev\": {\n            \"type\": \"integer\",\n            \"readOnly\": true,\n            \"description\": \"Revision number of the client\",\n            \"example\": 3\n          },\n          \"vProto\": {\n            \"type\": \"integer\",\n            \"readOnly\": true,\n            \"description\": \"Protocol version of the client\",\n            \"example\": 12\n          }\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"description\": \"User ID\",\n            \"example\": \"00000000-0000-0000-0000-000000000000\"\n          },\n          \"orgId\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"description\": \"Organization ID\",\n            \"example\": \"00000000-0000-0000-0000-000000000000\"\n          },\n          \"globalPermissions\": {\n            \"readOnly\": true,\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/Permissions\"\n              }\n            ]\n          },\n          \"displayName\": {\n            \"type\": \"string\",\n            \"readOnly\": false,\n            \"description\": \"Display Name\",\n            \"example\": \"Joe User\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"description\": \"User email address\",\n            \"example\": \"user@example.com\"\n          },\n          \"auth\": {\n            \"readOnly\": true,\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/AuthMethods\"\n              }\n            ]\n          },\n          \"smsNumber\": {\n            \"type\": \"string\",\n            \"readOnly\": false,\n            \"description\": \"SMS number\",\n            \"example\": \"+1-800-555-1212\",\n            \"deprecated\": true\n          },\n          \"tokens\": {\n            \"type\": \"array\",\n            \"readOnly\": true,\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"example\": [\"my-token-id\"],\n            \"description\": \"List of API token names.\"\n          }\n        }\n      },\n      \"Organization\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"example\": \"00000000-0000-0000-0000-000000000000\",\n            \"description\": \"Organization ID\"\n          },\n          \"ownerId\": {\n            \"type\": \"string\",\n            \"description\": \"User ID of the organization owner\",\n            \"example\": \"00000000-0000-0000-0000-000000000000\",\n            \"readOnly\": true\n          },\n          \"ownerEmail\": {\n            \"type\": \"string\",\n            \"description\": \"Organization owner's email address\",\n            \"example\": \"user@example.com\",\n            \"readOnly\": true\n          },\n          \"members\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OrganizationMember\"\n            },\n            \"description\": \"List of organization members\"\n          }\n        }\n      },\n      \"OrganizationMember\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"orgId\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"description\": \"Organization ID\",\n            \"example\": \"00000000-0000-0000-0000-000000000000\"\n          },\n          \"userId\": {\n            \"type\": \"string\",\n            \"readOnly\": false,\n            \"description\": \"User ID\",\n            \"example\": \"00000000-0000-0000-0000-000000000000\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"nullable\": true,\n            \"description\": \"Organization member display name\",\n            \"example\": \"Joe User\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"nullable\": true,\n            \"description\": \"Organization member email address\"\n          }\n        }\n      },\n      \"OrganizationInvitation\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"orgId\": {\n            \"type\": \"string\",\n            \"description\": \"Organization ID\",\n            \"example\": \"00000000-0000-0000-0000-000000000000\",\n            \"readOnly\": true\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"description\": \"Email address of invitee\",\n            \"example\": \"joe@user.com\"\n          },\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Invitation ID\",\n            \"example\": \"00000000-0000-0000-0000-000000000000\",\n            \"readOnly\": true\n          },\n          \"creation_time\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"description\": \"Creation time of the invite\",\n            \"example\": 1613067920454,\n            \"readOnly\": true\n          },\n          \"status\": {\n            \"readOnly\": true,\n            \"description\": \"Invitation status\",\n            \"example\": \"pending\",\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/InviteStatus\"\n              }\n            ]\n          },\n          \"update_time\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"description\": \"Last updated time of the invitation\",\n            \"example\": 1613067920454,\n            \"readOnly\": true\n          },\n          \"ownerEmail\": {\n            \"type\": \"string\",\n            \"description\": \"Organization owner email address\",\n            \"example\": \"user@example.com\",\n            \"readOnly\": true\n          }\n        }\n      },\n      \"PermissionsMap\": {\n        \"type\": \"object\",\n        \"additionalProperties\": {\n          \"$ref\": \"#/components/schemas/Permissions\"\n        },\n        \"example\": {\n          \"00000000-0000-0000-0000-000000000000\": {\n            \"a\": true,\n            \"d\": true,\n            \"m\": true,\n            \"r\": true\n          }\n        }\n      },\n      \"Permissions\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"a\": {\n            \"type\": \"boolean\",\n            \"example\": true,\n            \"description\": \"Authorize permission\"\n          },\n          \"d\": {\n            \"type\": \"boolean\",\n            \"example\": true,\n            \"description\": \"Delete permission\"\n          },\n          \"m\": {\n            \"type\": \"boolean\",\n            \"example\": true,\n            \"description\": \"Modify network settings permission\"\n          },\n          \"r\": {\n            \"type\": \"boolean\",\n            \"example\": true,\n            \"description\": \"Read network settings permission\"\n          }\n        }\n      },\n      \"IPRange\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"ipRangeStart\": {\n            \"type\": \"string\",\n            \"example\": \"10.0.0.1\"\n          },\n          \"ipRangeEnd\": {\n            \"type\": \"string\",\n            \"example\": \"10.0.0.255\"\n          }\n        }\n      },\n      \"DNS\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"domain\": {\n            \"type\": \"string\",\n            \"example\": \"some.domain\",\n            \"description\": \"Search domain to use for DNS records\"\n          },\n          \"servers\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"example\": [\"10.0.0.3\"],\n            \"description\": \"IP address of unicast DNS service\"\n          }\n        }\n      },\n      \"Route\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"target\": {\n            \"type\": \"string\",\n            \"example\": \"10.0.0.0/24\"\n          },\n          \"via\": {\n            \"type\": \"string\",\n            \"example\": null,\n            \"nullable\": true\n          }\n        }\n      },\n      \"IPV4AssignMode\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"zt\": {\n            \"type\": \"boolean\",\n            \"example\": true\n          }\n        }\n      },\n      \"IPV6AssignMode\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"6plane\": {\n            \"type\": \"boolean\",\n            \"example\": true\n          },\n          \"rfc4193\": {\n            \"type\": \"boolean\",\n            \"example\": false\n          },\n          \"zt\": {\n            \"type\": \"boolean\",\n            \"example\": false\n          }\n        }\n      },\n      \"AuthMethods\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"local\": {\n            \"type\": \"string\",\n            \"example\": \"user@example.com\",\n            \"description\": \"email address for built-in authentication\",\n            \"nullable\": true,\n            \"readOnly\": true\n          },\n          \"google\": {\n            \"type\": \"string\",\n            \"example\": \"156162346876134683\",\n            \"description\": \"Google OIDC ID\",\n            \"nullable\": true,\n            \"readOnly\": true\n          },\n          \"oidc\": {\n            \"type\": \"string\",\n            \"example\": \"00000000-0000-0000-0000-000000000000\",\n            \"description\": \"Generic OIDC ID\",\n            \"nullable\": true,\n            \"readOnly\": true\n          }\n        }\n      },\n      \"APIToken\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tokenName\": {\n            \"type\": \"string\",\n            \"example\": \"my-super-secret-token\",\n            \"description\": \"user specified token name\",\n            \"readOnly\": false\n          },\n          \"token\": {\n            \"type\": \"string\",\n            \"example\": \"adsf98ashdkjh3689adsfnj3$ADn\",\n            \"description\": \"API Token.  Minimum 32 characters. This token is encrypted in the database and can not be retrieved once set\",\n            \"readOnly\": false,\n            \"writeOnly\": true\n          }\n        }\n      },\n      \"InviteStatus\": {\n        \"type\": \"string\",\n        \"enum\": [\"pending\", \"accepted\", \"canceled\"]\n      },\n      \"Status\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"example\": \"central_status\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"example\": \"CentralStatus\"\n          },\n          \"clock\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1613067920454,\n            \"readOnly\": true,\n            \"description\": \"Current time on server\"\n          },\n          \"version\": {\n            \"type\": \"string\",\n            \"example\": \"1.6.5\"\n          },\n          \"apiVersion\": {\n            \"type\": \"string\",\n            \"example\": \"4\"\n          },\n          \"uptime\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1613067920454,\n            \"readOnly\": true,\n            \"description\": \"Uptime on server\"\n          },\n          \"user\": {\n            \"$ref\": \"#/components/schemas/User\"\n          },\n          \"readOnlyMode\": {\n            \"type\": \"boolean\"\n          },\n          \"loginMethods\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"local\": {\n                \"type\": \"boolean\"\n              },\n              \"google\": {\n                \"type\": \"boolean\"\n              },\n              \"twitter\": {\n                \"type\": \"boolean\"\n              },\n              \"facebook\": {\n                \"type\": \"boolean\"\n              },\n              \"github\": {\n                \"type\": \"boolean\"\n              },\n              \"saml\": {\n                \"type\": \"boolean\"\n              },\n              \"oidc\": {\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        }\n      },\n      \"RandomToken\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"clock\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"example\": 1613067920454,\n            \"readOnly\": true,\n            \"description\": \"Current time on server\"\n          },\n          \"hex\": {\n            \"type\": \"string\",\n            \"example\": \"16924f3ff478526cffb1b89b1040b33c8dbd3c09e07f39691f615769121c0d76\",\n            \"readOnly\": true,\n            \"description\": \"hex encoded random bytes of the token\"\n          },\n          \"token\": {\n            \"type\": \"string\",\n            \"example\": \"wwrb66uUh18Fqc38rd8jMd5RFJzRsCn4\",\n            \"readOnly\": true,\n            \"description\": \"Random 32 character token\"\n          }\n        }\n      }\n    }\n  },\n  \"security\": [\n    {\n      \"bearerAuth\": []\n    }\n  ]\n}\n"
		}
	},
	"Error": "schemas: failed to write file oas_schemas_gen.go: 210:4: 'p' exponent requires hexadecimal mantissa (and 1 more errors)"
}