{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wavesplatform/data-service"
		},
		"file": {
			"name": "openapi.yaml",
			"path": "docs/openapi.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  version: 0.30.0\n  title: Waves Data Service\n  description: This is a a public Waves Data Services API documentation. The goal of the API is to provide a simple and convenient way to get data from Waves blockchain.\nservers:\n  - url: /v0\ntags:\n  - name: assets\n    description: 'Asset info: ticker, name, decimals, issuer, etc.'\n  - name: candles\n    description: Candles\n  - name: pairs\n    description: 'DEX volume, change24, last trade price'\n  - name: transactions\n    description: Transactions info\n  - name: aliases\n    description: Get aliases by name or by address\n  - name: info\n    description: 'Service info: version, etc.'\n  - name: matchers\n    description: 'Candles, pairs and other trading endpoints'\npaths:\n  '/assets/{id}':\n    get:\n      tags:\n        - assets\n      summary: Get asset info by asset ID\n      operationId: getAssetById\n      parameters:\n        - name: id\n          in: path\n          description: asset ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Asset info\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Asset'\n        '404':\n          description: Asset not found\n  /assets:\n    get:\n      tags:\n        - assets\n      summary: Get a list of assets info from a list of IDs\n      operationId: getAssetListByIds\n      parameters:\n        - in: query\n          name: ids\n          description: Asset IDs array\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: ticker\n          description: 'Examples: WAVES, BTC, \\*. A wildcard request **ticker=***  returns all assets with tickers.'\n          required: false\n          example: '*'\n          schema:\n            type: string\n        - in: query\n          name: search\n          description: 'Assets prefix-search by the query in asset names, tickers, id.'\n          required: false\n          example: bitc\n          schema:\n            type: string\n        - in: query\n          name: after\n          description: After which assets its should search\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: limit\n          description: How many Assets to await in response.\n          required: false\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 100\n      responses:\n        '200':\n          description: List of Assets\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfAsset'\n        '400':\n          description: 'Invalid query, check params'\n    post:\n      tags:\n        - assets\n      summary: Get a list of assets info from a list of IDs\n      operationId: postAssetListByIds\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ids:\n                  type: array\n                  description: 'Asset IDs array'\n                  items:\n                    type: string\n                ticker:\n                  type: string\n                  description: 'Examples: WAVES, BTC, \\*. A wildcard request **ticker=***  returns all assets with tickers.'\n                  example: '*'\n                search:\n                  type: string\n                  description: 'Assets prefix-search by the query in asset names, tickers, id.'\n                  example: bitc\n                after:\n                  type: string\n                  description: 'After which assets its should search'\n                limit:\n                  type: integer\n                  description: 'How many Assets to await in response.'\n                  minimum: 1\n                  maximum: 100\n                  default: 100\n                  example: 100\n      responses:\n        '200':\n          description: List of Assets\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfAsset'\n        '400':\n          description: 'Invalid query, check params'\n  '/candles/{amountAsset}/{priceAsset}':\n    get:\n      tags:\n        - candles\n      summary: Get candles by amount and price assets. Maximum amount of candles in response â€“ 1440.\n      operationId: getCandles\n      parameters:\n        - name: amountAsset\n          in: path\n          description: Asset ID of the amount asset\n          required: true\n          schema:\n            type: string\n        - name: priceAsset\n          in: path\n          description: Asset ID of the price asset\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: timeStart\n          description: 'Time range filter, start. (ISO-8601 or timestamp in milliseconds, UTC)'\n          required: true\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: timeEnd\n          description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: interval\n          description: 'Candle interval. One of 1M, 1w, 1d, 12h, 6h, 4h, 3h, 2h, 1h, 30m, 15m, 5m, 1m.'\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: matcher\n          description: Matcher address\n          schema:\n            type: string\n      responses:\n        '200':\n          description: List of Candles.\u003c/br\u003etime - candle open time\u003c/br\u003etimeClose - candle close time\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfCandle'\n        '404':\n          description: Candle not found\n  '/pairs/{amountAsset}/{priceAsset}':\n    get:\n      tags:\n        - pairs\n      summary: Get pair info by amount and price assets\n      operationId: getPair\n      parameters:\n        - name: amountAsset\n          in: path\n          description: Asset ID of the amount asset\n          required: true\n          schema:\n            type: string\n        - name: priceAsset\n          in: path\n          description: Asset ID of the price asset\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: matcher\n          description: Matcher address\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Pair info\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pair'\n        '404':\n          description: Pair info not found\n  /pairs:\n    get:\n      tags:\n        - pairs\n      summary: 1) Get list of pairs info by serialized pairs list; 2) Get all list of pairs info by limit (sort by volume in WAVES)\n      operationId: getPairsListAll\n      parameters:\n        - name: pairs\n          in: query\n          description: '`{amountAsset}/{priceAsset}` strings list'\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: search_by_asset\n          description: 'For searching pairs, that have the `search_by_asset` in asset names, tickers, id of one asset of the pair.'\n          required: false\n          example: bitc\n          schema:\n            type: string\n        - in: query\n          name: search_by_assets\n          description: 'For searching pairs, that have the `search_by_asset` in asset names, tickers, id of one asset of the pair.'\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: match_exactly\n          description: Whether to search assets of pairs exactly or not. Parameter position is corresponds to asset position.\n          required: false\n          schema:\n            type: array\n            items:\n              type: boolean\n        - in: query\n          name: matcher\n          description: Matcher address\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: How many pairs to await in response.\n          required: false\n          schema:\n            type: number\n            minimum: 1\n            maximum: 1000\n            default: 100\n      responses:\n        '200':\n          description: List of Pairs info\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfPair'\n    post:\n      tags:\n        - pairs\n      summary: 1) Get list of pairs info by serialized pairs list; 2) Get all list of pairs info by limit (sort by volume in WAVES)\n      operationId: postPairsListAll\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pairs:\n                  type: array\n                  description: '`{amountAsset}/{priceAsset}` strings list'\n                  items:\n                    type: string\n                search_by_asset:\n                  type: string\n                  description: 'For searching pairs, that have the `search_by_asset` in asset names, tickers, id of one asset of the pair.'\n                  example: bitc\n                search_by_assets:\n                  type: array\n                  description: 'For searching pairs, that have the `search_by_asset` in asset names, tickers, id of one asset of the pair.'\n                  items:\n                    type: string\n                match_exactly:\n                  type: array\n                  description: 'Whether to search assets of pairs exactly or not. Parameter position is corresponds to asset position.'\n                  items:\n                    type: boolean\n                matcher:\n                  type: string\n                  description: Matcher address\n                limit:\n                  type: number\n                  description: How many pairs to await in response.\n                  example: 100\n                  minimum: 1\n                  maximum: 1000\n                  default: 100\n      responses:\n        '200':\n          description: List of Pairs info\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfPair'\n  '/transactions/all/{id}':\n    get:\n      tags:\n        - transactions\n      summary: Get any transaction info by id\n      operationId: getTxsAll\n      parameters:\n        - name: id\n          in: path\n          description: transaction ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Any transaction\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/TxTransfer'\n                  - $ref: '#/components/schemas/TxData'\n                  - $ref: '#/components/schemas/TxLease'\n                  - $ref: '#/components/schemas/TxLeaseCancel'\n                  - $ref: '#/components/schemas/TxMassTransfer'\n                  - $ref: '#/components/schemas/TxExchange'\n                  - $ref: '#/components/schemas/TxSetScript'\n                  - $ref: '#/components/schemas/TxSetAssetScript'\n        '404':\n          description: Transaction not found\n  /transactions/all:\n    get:\n      tags:\n        - transactions\n      summary: Get a list of transactions by applying filters\n      operationId: searchTxsAll\n      parameters:\n        - in: query\n          name: ids\n          description: Transaction IDs array\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: sender\n          description: Address-sender of the transaction\n          schema:\n            type: string\n        - in: query\n          name: timeStart\n          description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: timeEnd\n          description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: after\n          description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n          schema:\n            type: string\n        - in: query\n          name: sort\n          description: Sort order. Gonna be rewritten by cursor's sort if present.\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n            default: desc\n        - in: query\n          name: limit\n          description: How many transactions to await in response.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 100\n      responses:\n        '200':\n          description: List of transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfAllTx'\n    post:\n      tags:\n        - transactions\n      summary: Get a list of transactions by applying \n      operationId: postSearchTxsAll\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ids:\n                  type: array\n                  description: 'Transaction IDs array'\n                  items:\n                    type: string\n                sender:\n                  type: string\n                  description: 'Address-sender of the transaction'\n                timeStart:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2019-01-01T00:00:00.000'\n                timeEnd:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2020-01-01T00:00:00.000'\n                after:\n                  type: string\n                  description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n                sort:\n                  type: string\n                  description: 'Sort order. Gonna be rewritten by cursor''s sort if present.'\n                  enum:\n                    - asc\n                    - desc\n                  default: desc\n                limit:\n                  type: integer\n                  description: 'How many transactions to await in response.'\n                  minimum: 1\n                  maximum: 100\n                  default: 100\n                  example: 100\n      responses:\n        '200':\n          description: List of transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfAllTx'\n  '/transactions/genesis/{id}':\n    get:\n      tags:\n        - transactions\n      summary: Get genesis transaction info by id\n      operationId: getTxsGenesis\n      parameters:\n        - name: id\n          in: path\n          description: transaction ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Genesis transaction\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TxGenesis'\n        '404':\n          description: Transaction not found\n  /transactions/genesis:\n    get:\n      tags:\n        - transactions\n      summary: Get a list of genesis transactions by applying filters\n      operationId: searchTxsGenesis\n      parameters:\n        - in: query\n          name: ids\n          description: Transaction IDs array\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: timeStart\n          description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: timeEnd\n          description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: recipient\n          description: Search transactions by recipient address\n          schema:\n            type: string\n        - in: query\n          name: after\n          description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n          schema:\n            type: string\n        - in: query\n          name: sort\n          description: Sort order. Gonna be rewritten by cursor's sort if present.\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n            default: desc\n        - in: query\n          name: limit\n          description: How many transactions to await in response.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 100\n      responses:\n        '200':\n          description: List of genesis transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxGenesis'\n    post:\n      tags:\n        - transactions\n      summary: Get a list of genesis transactions by applying filters\n      operationId: postSearchTxsGenesis\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ids:\n                  type: array\n                  description: 'Transaction IDs array'\n                  items:\n                    type: string\n                sender:\n                  type: string\n                  description: 'Address-sender of the transaction'\n                timeStart:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2019-01-01T00:00:00.000'\n                timeEnd:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2020-01-01T00:00:00.000'\n                recipient:\n                  type: string\n                  description: 'Search transactions by recipient address'\n                after:\n                  type: string\n                  description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n                sort:\n                  type: string\n                  description: 'Sort order. Gonna be rewritten by cursor''s sort if present.'\n                  enum:\n                    - asc\n                    - desc\n                  default: desc\n                limit:\n                  type: integer\n                  description: 'How many transactions to await in response.'\n                  minimum: 1\n                  maximum: 100\n                  default: 100\n                  example: 100\n      responses:\n        '200':\n          description: List of genesis transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxGenesis'\n  '/transactions/payment/{id}':\n    get:\n      tags:\n        - transactions\n      summary: Get payment transaction info by id\n      operationId: getTxsPayment\n      parameters:\n        - name: id\n          in: path\n          description: transaction ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Payment transaction\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TxPayment'\n        '404':\n          description: Transaction not found\n  /transactions/payment:\n    get:\n      tags:\n        - transactions\n      summary: Get a list of payment transactions by applying filters\n      operationId: searchTxsSend\n      parameters:\n        - in: query\n          name: ids\n          description: Transaction IDs array\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: sender\n          description: Address-sender of the transaction; has exclusive relation with senders\n          schema:\n            type: string\n        - in: query\n          name: senders\n          description: Array of address-senders of the transaction; has exclusive relation with sender\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: timeStart\n          description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: timeEnd\n          description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: recipient\n          description: Search transactions by recipient address\n          schema:\n            type: string\n        - in: query\n          name: after\n          description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n          schema:\n            type: string\n        - in: query\n          name: sort\n          description: Sort order. Gonna be rewritten by cursor's sort if present.\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n            default: desc\n        - in: query\n          name: limit\n          description: How many transactions to await in response.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 100\n      responses:\n        '200':\n          description: List of payment transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxPayment'\n    post:\n      tags:\n        - transactions\n      summary: Get a list of payment transactions by applying filters\n      operationId: PostSearchTxsSend\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ids:\n                  type: array\n                  description: 'Transaction IDs array'\n                  items:\n                    type: string\n                sender:\n                  type: string\n                  description: 'Address-sender of the transaction'\n                timeStart:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2019-01-01T00:00:00.000'\n                timeEnd:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2020-01-01T00:00:00.000'\n                recipient:\n                  type: string\n                  description: 'Search transactions by recipient address'\n                after:\n                  type: string\n                  description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n                sort:\n                  type: string\n                  description: 'Sort order. Gonna be rewritten by cursor''s sort if present.'\n                  enum:\n                    - asc\n                    - desc\n                  default: desc\n                limit:\n                  type: integer\n                  description: 'How many transactions to await in response.'\n                  minimum: 1\n                  maximum: 100\n                  default: 100\n                  example: 100\n      responses:\n        '200':\n          description: List of payment transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxPayment'\n  '/transactions/issue/{id}':\n    get:\n      tags:\n        - transactions\n      summary: Get issue transaction info by id\n      operationId: getTxsIssue\n      parameters:\n        - name: id\n          in: path\n          description: transaction ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Issue transaction\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TxIssue'\n        '404':\n          description: Transaction not found\n  /transactions/issue:\n    get:\n      tags:\n        - transactions\n      summary: Get a list of issue transactions by applying filters\n      operationId: searchTxsIssue\n      parameters:\n        - in: query\n          name: ids\n          description: Transaction IDs array\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: sender\n          description: Address-sender of the transaction; has exclusive relation with senders\n          schema:\n            type: string\n        - in: query\n          name: senders\n          description: Array of address-senders of the transaction; has exclusive relation with sender\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: timeStart\n          description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: timeEnd\n          description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: after\n          description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n          schema:\n            type: string\n        - in: query\n          name: sort\n          description: Sort order. Gonna be rewritten by cursor's sort if present.\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n            default: desc\n        - in: query\n          name: limit\n          description: How many transactions to await in response.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 100\n        - in: query\n          name: assetId\n          description: Filter transactions by assetId\n          schema:\n            type: string\n        - in: query\n          name: script\n          description: Filter transactions by script. Supports only exact match. Needs to be url-encoded!\n          schema:\n            type: string\n      responses:\n        '200':\n          description: List of issue transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxIssue'\n    post:\n      tags:\n        - transactions\n      summary: Get a list of issue transactions by applying filters\n      operationId: postSearchTxsIssue\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ids:\n                  type: array\n                  description: 'Transaction IDs array'\n                  items:\n                    type: string\n                sender:\n                  type: string\n                  description: 'Address-sender of the transaction'\n                timeStart:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2019-01-01T00:00:00.000'\n                timeEnd:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2020-01-01T00:00:00.000'\n                after:\n                  type: string\n                  description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n                sort:\n                  type: string\n                  description: 'Sort order. Gonna be rewritten by cursor''s sort if present.'\n                  enum:\n                    - asc\n                    - desc\n                  default: desc\n                limit:\n                  type: integer\n                  description: 'How many transactions to await in response.'\n                  minimum: 1\n                  maximum: 100\n                  default: 100\n                  example: 100\n                assetId:\n                  type: string\n                  description: 'Filter transactions by assetId'\n                script:\n                  type: string\n                  description: 'Filter transactions by script. Supports only exact match. Needs to be url-encoded!'\n      responses:\n        '200':\n          description: List of issue transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxIssue'\n  '/transactions/transfer/{id}':\n    get:\n      tags:\n        - transactions\n      summary: Get transfer transaction info by id\n      operationId: getTxsTransfer\n      parameters:\n        - name: id\n          in: path\n          description: transaction ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Transfer transaction\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TxTransfer'\n        '404':\n          description: Transaction not found\n  /transactions/transfer:\n    get:\n      tags:\n        - transactions\n      summary: Get a list of transfer transactions by applying filters\n      operationId: searchTxsTransfer\n      parameters:\n        - in: query\n          name: ids\n          description: Transaction IDs array\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: sender\n          description: Address-sender of the transaction; has exclusive relation with senders\n          schema:\n            type: string\n        - in: query\n          name: senders\n          description: Array of address-senders of the transaction; has exclusive relation with sender\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: timeStart\n          description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: timeEnd\n          description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: recipient\n          description: Search transactions by recipient address\n          schema:\n            type: string\n        - in: query\n          name: assetId\n          description: Filter transactions by assetId\n          schema:\n            type: string\n        - in: query\n          name: after\n          description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n          schema:\n            type: string\n        - in: query\n          name: sort\n          description: Sort order. Gonna be rewritten by cursor's sort if present.\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n            default: desc\n        - in: query\n          name: limit\n          description: How many transactions to await in response.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 100\n      responses:\n        '200':\n          description: List of transfer transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxTransfer'\n    post:\n      tags:\n        - transactions\n      summary: Get a list of transfer transactions by applying filters\n      operationId: postSearchTxsTransfer\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ids:\n                  type: array\n                  description: 'Transaction IDs array'\n                  items:\n                    type: string\n                sender:\n                  type: string\n                  description: 'Address-sender of the transaction'\n                timeStart:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2019-01-01T00:00:00.000'\n                timeEnd:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2020-01-01T00:00:00.000'\n                recipient:\n                  type: string\n                  description: 'Search transactions by recipient address'\n                assetId:\n                  type: string\n                  description: 'Filter transactions by assetId'\n                after:\n                  type: string\n                  description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n                sort:\n                  type: string\n                  description: 'Sort order. Gonna be rewritten by cursor''s sort if present.'\n                  enum:\n                    - asc\n                    - desc\n                  default: desc\n                limit:\n                  type: integer\n                  description: 'How many transactions to await in response.'\n                  minimum: 1\n                  maximum: 100\n                  default: 100\n                  example: 100\n      responses:\n        '200':\n          description: List of transfer transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxTransfer'\n  '/transactions/reissue/{id}':\n    get:\n      tags:\n        - transactions\n      summary: Get reissue transaction info by id\n      operationId: getTxsReissue\n      parameters:\n        - name: id\n          in: path\n          description: transaction ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Reissue transaction\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TxReissue'\n        '404':\n          description: Transaction not found\n  /transactions/reissue:\n    get:\n      tags:\n        - transactions\n      summary: Get a list of reissue transactions by applying filters\n      operationId: searchTxsReissue\n      parameters:\n        - in: query\n          name: ids\n          description: Transaction IDs array\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: sender\n          description: Address-sender of the transaction; has exclusive relation with senders\n          schema:\n            type: string\n        - in: query\n          name: senders\n          description: Array of address-senders of the transaction; has exclusive relation with sender\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: timeStart\n          description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: timeEnd\n          description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: after\n          description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n          schema:\n            type: string\n        - in: query\n          name: sort\n          description: Sort order. Gonna be rewritten by cursor's sort if present.\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n            default: desc\n        - in: query\n          name: limit\n          description: How many transactions to await in response.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 100\n        - in: query\n          name: assetId\n          description: Filter transactions by assetId\n          schema:\n            type: string\n      responses:\n        '200':\n          description: List of reissue transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxReissue'\n    post:\n      tags:\n        - transactions\n      summary: Get a list of reissue transactions by applying filters\n      operationId: postSearchTxsReissue\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ids:\n                  type: array\n                  description: 'Transaction IDs array'\n                  items:\n                    type: string\n                sender:\n                  type: string\n                  description: 'Address-sender of the transaction'\n                timeStart:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2019-01-01T00:00:00.000'\n                timeEnd:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2020-01-01T00:00:00.000'\n                after:\n                  type: string\n                  description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n                sort:\n                  type: string\n                  description: 'Sort order. Gonna be rewritten by cursor''s sort if present.'\n                  enum:\n                    - asc\n                    - desc\n                  default: desc\n                limit:\n                  type: integer\n                  description: 'How many transactions to await in response.'\n                  minimum: 1\n                  maximum: 100\n                  default: 100\n                  example: 100\n                assetId:\n                  type: string\n                  description: 'Filter transactions by assetId'\n      responses:\n        '200':\n          description: List of reissue transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxReissue'\n  '/transactions/burn/{id}':\n    get:\n      tags:\n        - transactions\n      summary: Get burn transaction info by id\n      operationId: getTxsBurn\n      parameters:\n        - name: id\n          in: path\n          description: transaction ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Burn transaction\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TxBurn'\n        '404':\n          description: Transaction not found\n  /transactions/burn:\n    get:\n      tags:\n        - transactions\n      summary: Get a list of burn transactions by applying filters\n      operationId: searchTxsBurn\n      parameters:\n        - in: query\n          name: ids\n          description: Transaction IDs array\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: sender\n          description: Address-sender of the transaction; has exclusive relation with senders\n          schema:\n            type: string\n        - in: query\n          name: senders\n          description: Array of address-senders of the transaction; has exclusive relation with sender\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: timeStart\n          description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: timeEnd\n          description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: after\n          description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n          schema:\n            type: string\n        - in: query\n          name: sort\n          description: Sort order. Gonna be rewritten by cursor's sort if present.\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n            default: desc\n        - in: query\n          name: limit\n          description: How many transactions to await in response.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 100\n        - in: query\n          name: assetId\n          description: Filter transactions by assetId\n          schema:\n            type: string\n      responses:\n        '200':\n          description: List of burn transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxBurn'\n    post:\n      tags:\n        - transactions\n      summary: Get a list of burn transactions by applying filters\n      operationId: postSearchTxsBurn\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ids:\n                  type: array\n                  description: 'Transaction IDs array'\n                  items:\n                    type: string\n                sender:\n                  type: string\n                  description: 'Address-sender of the transaction'\n                timeStart:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2019-01-01T00:00:00.000'\n                timeEnd:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2020-01-01T00:00:00.000'\n                after:\n                  type: string\n                  description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n                sort:\n                  type: string\n                  description: 'Sort order. Gonna be rewritten by cursor''s sort if present.'\n                  enum:\n                    - asc\n                    - desc\n                  default: desc\n                limit:\n                  type: integer\n                  description: 'How many transactions to await in response.'\n                  minimum: 1\n                  maximum: 100\n                  default: 100\n                  example: 100\n                assetId:\n                  type: string\n                  description: 'Filter transactions by assetId'\n      responses:\n        '200':\n          description: List of burn transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxBurn'\n  '/transactions/exchange/{id}':\n    get:\n      tags:\n        - transactions\n      summary: Get transaction info by id\n      operationId: getTxsExchange\n      parameters:\n        - name: id\n          in: path\n          description: transaction ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Exchange transaction\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TxExchange'\n        '404':\n          description: Transaction not found\n  /transactions/exchange:\n    get:\n      tags:\n        - transactions\n      summary: Get a list of exchange transactions by applying filters\n      operationId: searchTxsExchange\n      parameters:\n        - in: query\n          name: ids\n          description: Transaction IDs array\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: matcher\n          description: Address of a matcher which sent the transaction\n          schema:\n            type: string\n        - in: query\n          name: orderId\n          description: Id of order related to the transaction\n          schema:\n            type: string\n        - in: query\n          name: sender\n          description: Address-sender of the order; has exclusive relation with senders\n          schema:\n            type: string\n        - in: query\n          name: senders\n          description: Array of address-senders of the order; has exclusive relation with sender\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: timeStart\n          description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: timeEnd\n          description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: amountAsset\n          description: Asset ID of the amount asset.\n          schema:\n            type: string\n        - in: query\n          name: priceAsset\n          description: Asset ID of the price asset.\n          schema:\n            type: string\n        - in: query\n          name: after\n          description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n          schema:\n            type: string\n        - in: query\n          name: sort\n          description: Sort order. Gonna be rewritten by cursor's sort if present.\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n            default: desc\n        - in: query\n          name: limit\n          description: How many transactions to await in response.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 100\n      responses:\n        '200':\n          description: List of exchange transactions satisfy provided filters in descending order by timestamp\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxExchange'\n    post:\n      tags:\n        - transactions\n      summary: Get a list of exchange transactions by applying filters\n      operationId: postSearchTxsExchange\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ids:\n                  type: array\n                  description: 'Transaction IDs array'\n                  items:\n                    type: string\n                matcher:\n                  type: string\n                  description: 'Address of a matcher which sent the transaction'\n                orderId:\n                  type: string\n                  description: I'd of order related to the transaction'\n                sender:\n                  type: string\n                  description: 'Address-sender of the transaction'\n                timeStart:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2019-01-01T00:00:00.000'\n                timeEnd:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2020-01-01T00:00:00.000'\n                amountAsset:\n                  type: string\n                  description: 'Asset ID of the amount asset.'\n                priceAsset:\n                  type: string\n                  description: 'Asset ID of the price asset.'\n                after:\n                  type: string\n                  description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n                sort:\n                  type: string\n                  description: 'Sort order. Gonna be rewritten by cursor''s sort if present.'\n                  enum:\n                    - asc\n                    - desc\n                  default: desc\n                limit:\n                  type: integer\n                  description: 'How many transactions to await in response.'\n                  minimum: 1\n                  maximum: 100\n                  default: 100\n                  example: 100\n      responses:\n        '200':\n          description: List of exchange transactions satisfy provided filters in descending order by timestamp\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxExchange'\n  '/transactions/lease/{id}':\n    get:\n      tags:\n        - transactions\n      summary: Get lease transaction info by id\n      operationId: getTxsLease\n      parameters:\n        - name: id\n          in: path\n          description: transaction ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Lease transaction\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TxLease'\n        '404':\n          description: Transaction not found\n  /transactions/lease:\n    get:\n      tags:\n        - transactions\n      summary: Get a list of lease transactions by applying filters\n      operationId: searchTxsLease\n      parameters:\n        - in: query\n          name: ids\n          description: Transaction IDs array\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: sender\n          description: Address-sender of the transaction; has exclusive relation with senders\n          schema:\n            type: string\n        - in: query\n          name: senders\n          description: Array of address-senders of the transaction; has exclusive relation with sender\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: timeStart\n          description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: timeEnd\n          description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: recipient\n          description: Search transactions by recipient address\n          schema:\n            type: string\n        - in: query\n          name: after\n          description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n          schema:\n            type: string\n        - in: query\n          name: sort\n          description: Sort order. Gonna be rewritten by cursor's sort if present.\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n            default: desc\n        - in: query\n          name: limit\n          description: How many transactions to await in response.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 100\n      responses:\n        '200':\n          description: List of lease transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxLease'\n    post:\n      tags:\n        - transactions\n      summary: Get a list of lease transactions by applying filters\n      operationId: postSearchTxsLease\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ids:\n                  type: array\n                  description: 'Transaction IDs array'\n                  items:\n                    type: string\n                sender:\n                  type: string\n                  description: 'Address-sender of the transaction'\n                timeStart:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2019-01-01T00:00:00.000'\n                timeEnd:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2020-01-01T00:00:00.000'\n                recipient:\n                  type: string\n                  description: 'Search transactions by recipient address'\n                after:\n                  type: string\n                  description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n                sort:\n                  type: string\n                  description: 'Sort order. Gonna be rewritten by cursor''s sort if present.'\n                  enum:\n                    - asc\n                    - desc\n                  default: desc\n                limit:\n                  type: integer\n                  description: 'How many transactions to await in response.'\n                  minimum: 1\n                  maximum: 100\n                  default: 100\n                  example: 100\n      responses:\n        '200':\n          description: List of lease transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxLease'\n  '/transactions/lease-cancel/{id}':\n    get:\n      tags:\n        - transactions\n      summary: Get lease cancel transaction info by id\n      operationId: getTxsLeaseCancel\n      parameters:\n        - name: id\n          in: path\n          description: transaction ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Lease cancel transaction\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TxLeaseCancel'\n        '404':\n          description: Transaction not found\n  /transactions/lease-cancel:\n    get:\n      tags:\n        - transactions\n      summary: Get a list of lease cancel transactions by applying filters\n      operationId: searchTxsLeaseCancel\n      parameters:\n        - in: query\n          name: ids\n          description: Transaction IDs array\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: sender\n          description: Address-sender of the transaction; has exclusive relation with senders\n          schema:\n            type: string\n        - in: query\n          name: senders\n          description: Array of address-senders of the transaction; has exclusive relation with sender\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: timeStart\n          description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: timeEnd\n          description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: recipient\n          description: A recipient of a lease cancelled by this tx\n          schema:\n            type: string\n        - in: query\n          name: after\n          description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n          schema:\n            type: string\n        - in: query\n          name: sort\n          description: Sort order. Gonna be rewritten by cursor's sort if present.\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n            default: desc\n        - in: query\n          name: limit\n          description: How many transactions to await in response.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 100\n      responses:\n        '200':\n          description: List of lease cancel transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxLeaseCancel'\n    post:\n      tags:\n        - transactions\n      summary: Get a list of lease cancel transactions by applying filters\n      operationId: postSearchTxsLeaseCancel\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ids:\n                  type: array\n                  description: 'Transaction IDs array'\n                  items:\n                    type: string\n                sender:\n                  type: string\n                  description: 'Address-sender of the transaction'\n                timeStart:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2019-01-01T00:00:00.000'\n                timeEnd:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2020-01-01T00:00:00.000'\n                recipient:\n                  type: string\n                  description: 'Search transactions by recipient address'\n                after:\n                  type: string\n                  description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n                sort:\n                  type: string\n                  description: 'Sort order. Gonna be rewritten by cursor''s sort if present.'\n                  enum:\n                    - asc\n                    - desc\n                  default: desc\n                limit:\n                  type: integer\n                  description: 'How many transactions to await in response.'\n                  minimum: 1\n                  maximum: 100\n                  default: 100\n                  example: 100\n      responses:\n        '200':\n          description: List of lease cancel transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxLeaseCancel'\n  '/transactions/alias/{id}':\n    get:\n      tags:\n        - transactions\n      summary: Get alias transaction info by id\n      operationId: getTxsAlias\n      parameters:\n        - name: id\n          in: path\n          description: transaction ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Alias transaction\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TxAlias'\n        '404':\n          description: Transaction not found\n  /transactions/alias:\n    get:\n      tags:\n        - transactions\n      summary: Get a list of alias transactions by applying filters\n      operationId: searchTxsAlias\n      parameters:\n        - in: query\n          name: ids\n          description: Transaction IDs array\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: sender\n          description: Address-sender of the transaction; has exclusive relation with senders\n          schema:\n            type: string\n        - in: query\n          name: senders\n          description: Array of address-senders of the transaction; has exclusive relation with sender\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: timeStart\n          description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: timeEnd\n          description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: after\n          description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n          schema:\n            type: string\n        - in: query\n          name: sort\n          description: Sort order. Gonna be rewritten by cursor's sort if present.\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n            default: desc\n        - in: query\n          name: limit\n          description: How many transactions to await in response.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 100\n      responses:\n        '200':\n          description: List of alias transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxAlias'\n    post:\n      tags:\n        - transactions\n      summary: Get a list of alias transactions by applying filters\n      operationId: postSearchTxsAlias\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ids:\n                  type: array\n                  description: 'Transaction IDs array'\n                  items:\n                    type: string\n                sender:\n                  type: string\n                  description: 'Address-sender of the transaction'\n                timeStart:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2019-01-01T00:00:00.000'\n                timeEnd:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2020-01-01T00:00:00.000'\n                after:\n                  type: string\n                  description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n                sort:\n                  type: string\n                  description: 'Sort order. Gonna be rewritten by cursor''s sort if present.'\n                  enum:\n                    - asc\n                    - desc\n                  default: desc\n                limit:\n                  type: integer\n                  description: 'How many transactions to await in response.'\n                  minimum: 1\n                  maximum: 100\n                  default: 100\n                  example: 100\n      responses:\n        '200':\n          description: List of alias transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxAlias'\n  '/transactions/mass-transfer/{id}':\n    get:\n      tags:\n        - transactions\n      summary: Get a mass-transfer transaction info by id\n      operationId: getTxsMassTransfer\n      parameters:\n        - name: id\n          in: path\n          description: transaction ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Mass transfer transaction\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TxMassTransfer'\n        '404':\n          description: Transaction not found\n  /transactions/mass-transfer:\n    get:\n      tags:\n        - transactions\n      summary: Get a list of mass-transfer transactions by applying filters\n      operationId: searchTxsMassTransfer\n      parameters:\n        - in: query\n          name: ids\n          description: Transaction IDs array\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: sender\n          description: Address-sender of the transaction; has exclusive relation with senders\n          schema:\n            type: string\n        - in: query\n          name: senders\n          description: Array of address-senders of the transaction; has exclusive relation with sender\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: timeStart\n          description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: timeEnd\n          description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: recipient\n          description: Search transactions by recipient address\n          schema:\n            type: string\n        - in: query\n          name: assetId\n          description: Filter transactions by assetId\n          schema:\n            type: string\n        - in: query\n          name: after\n          description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n          schema:\n            type: string\n        - in: query\n          name: sort\n          description: Sort order. Gonna be rewritten by cursor's sort if present.\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n            default: desc\n        - in: query\n          name: limit\n          description: How many transactions to await in response.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 100\n      responses:\n        '200':\n          description: List of mass-transfer transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxMassTransfer'\n    post:\n      tags:\n        - transactions\n      summary: Get a list of mass-transfer transactions by applying filters\n      operationId: postSearchTxsMassTransfer\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ids:\n                  type: array\n                  description: 'Transaction IDs array'\n                  items:\n                    type: string\n                sender:\n                  type: string\n                  description: 'Address-sender of the transaction'\n                timeStart:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2019-01-01T00:00:00.000'\n                timeEnd:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2020-01-01T00:00:00.000'\n                recipient:\n                  type: string\n                  description: 'Search transactions by recipient address'\n                assetId:\n                  type: string\n                  description: 'Filter transactions by assetId'\n                after:\n                  type: string\n                  description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n                sort:\n                  type: string\n                  description: 'Sort order. Gonna be rewritten by cursor''s sort if present.'\n                  enum:\n                    - asc\n                    - desc\n                  default: desc\n                limit:\n                  type: integer\n                  description: 'How many transactions to await in response.'\n                  minimum: 1\n                  maximum: 100\n                  default: 100\n                  example: 100\n      responses:\n        '200':\n          description: List of mass-transfer transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxMassTransfer'\n  '/transactions/data/{id}':\n    get:\n      tags:\n        - transactions\n      summary: Get transaction info by id\n      operationId: getTxsData\n      parameters:\n        - name: id\n          in: path\n          description: transaction ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Data transaction\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TxData'\n        '404':\n          description: Transaction not found\n  /transactions/data:\n    get:\n      tags:\n        - transactions\n      summary: Get a list of data transactions by applying filters\n      operationId: searchTxsData\n      parameters:\n        - in: query\n          name: ids\n          description: Transaction IDs array\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: sender\n          description: Address-sender of the transaction; has exclusive relation with senders\n          schema:\n            type: string\n        - in: query\n          name: senders\n          description: Array of address-senders of the transaction; has exclusive relation with sender\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: timeStart\n          description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: timeEnd\n          description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: key\n          description: Search transactions by data-enties with given key\n          schema:\n            type: string\n        - in: query\n          name: type\n          description: Search transactions by data-enties with given data type\n          schema:\n            type: string\n            enum:\n              - integer\n              - boolean\n              - string\n              - binary\n        - in: query\n          name: value\n          description: Search transactions by data-enties with given value. Can be used only together with `type` parameter\n          schema:\n            oneOf:\n              - type: string\n              - type: boolean\n              - type: number\n        - in: query\n          name: after\n          description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n          schema:\n            type: string\n        - in: query\n          name: sort\n          description: Sort order. Gonna be rewritten by cursor's sort if present.\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n            default: desc\n        - in: query\n          name: limit\n          description: How many transactions to await in response.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 100\n      responses:\n        '200':\n          description: List of data transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxData'\n    post:\n      tags:\n        - transactions\n      summary: Get a list of data transactions by applying filters\n      operationId: postSearchTxsData\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ids:\n                  type: array\n                  description: 'Transaction IDs array'\n                  items:\n                    type: string\n                sender:\n                  type: string\n                  description: 'Address-sender of the transaction'\n                timeStart:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2019-01-01T00:00:00.000'\n                timeEnd:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2020-01-01T00:00:00.000'\n                key:\n                  type: string\n                  description: 'Search transactions by data-enties with given key'\n                type:\n                  type: string\n                  description: 'Search transactions by data-enties with given data type'\n                  enum:\n                    - integer\n                    - boolean\n                    - string\n                    - binary\n                value:\n                  description: 'Search transactions by data-enties with given value. Can be used only together with `type` parameter'\n                  oneOf:\n                    - type: string\n                    - type: boolean\n                    - type: number\n                  example: string\n                after:\n                  type: string\n                  description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n                sort:\n                  type: string\n                  description: 'Sort order. Gonna be rewritten by cursor''s sort if present.'\n                  enum:\n                    - asc\n                    - desc\n                  default: desc\n                limit:\n                  type: integer\n                  description: 'How many transactions to await in response.'\n                  minimum: 1\n                  maximum: 100\n                  default: 100\n                  example: 100\n      responses:\n        '200':\n          description: List of data transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxData'\n  '/transactions/sponsorship/{id}':\n    get:\n      tags:\n        - transactions\n      summary: Get sponsorship transaction info by id\n      operationId: getTxsSponsorship\n      parameters:\n        - name: id\n          in: path\n          description: transaction ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Sponsorship transaction\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TxSponsorship'\n        '404':\n          description: Transaction not found\n  /transactions/sponsorship:\n    get:\n      tags:\n        - transactions\n      summary: Get a list of sponsorship transactions by applying filters\n      operationId: searchTxsSponsorship\n      parameters:\n        - in: query\n          name: ids\n          description: Transaction IDs array\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: sender\n          description: Address-sender of the transaction; has exclusive relation with senders\n          schema:\n            type: string\n        - in: query\n          name: senders\n          description: Array of address-senders of the transaction; has exclusive relation with sender\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: timeStart\n          description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: timeEnd\n          description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: after\n          description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n          schema:\n            type: string\n        - in: query\n          name: sort\n          description: Sort order. Gonna be rewritten by cursor's sort if present.\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n            default: desc\n        - in: query\n          name: limit\n          description: How many transactions to await in response.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 100\n        - in: query\n          name: assetId\n          description: Filter transactions by assetId\n          schema:\n            type: string\n      responses:\n        '200':\n          description: List of sponsorship transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxSponsorship'\n    post:\n      tags:\n        - transactions\n      summary: Get a list of sponsorship transactions by applying filters\n      operationId: postSearchTxsSponsorship\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ids:\n                  type: array\n                  description: 'Transaction IDs array'\n                  items:\n                    type: string\n                sender:\n                  type: string\n                  description: 'Address-sender of the transaction'\n                timeStart:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2019-01-01T00:00:00.000'\n                timeEnd:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2020-01-01T00:00:00.000'\n                after:\n                  type: string\n                  description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n                sort:\n                  type: string\n                  description: 'Sort order. Gonna be rewritten by cursor''s sort if present.'\n                  enum:\n                    - asc\n                    - desc\n                  default: desc\n                limit:\n                  type: integer\n                  description: 'How many transactions to await in response.'\n                  minimum: 1\n                  maximum: 100\n                  default: 100\n                  example: 100\n                assetId:\n                  type: string\n                  description: 'Filter transactions by assetId'\n      responses:\n        '200':\n          description: List of sponsorship transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxSponsorship'\n  '/transactions/set-script/{id}':\n    get:\n      tags:\n        - transactions\n      summary: Get a Set script transaction info by id\n      operationId: getTxsSetScript\n      parameters:\n        - name: id\n          in: path\n          description: transaction ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Set script transaction\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TxSetScript'\n        '404':\n          description: Transaction not found\n  /transactions/set-script:\n    get:\n      tags:\n        - transactions\n      summary: Get a list of Set script transactions by applying filters\n      operationId: searchTxsSetScript\n      parameters:\n        - in: query\n          name: ids\n          description: Transaction IDs array\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: sender\n          description: Address-sender of the transaction; has exclusive relation with senders\n          schema:\n            type: string\n        - in: query\n          name: senders\n          description: Array of address-senders of the transaction; has exclusive relation with sender\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: timeStart\n          description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: timeEnd\n          description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: script\n          description: Search transactions by the script. Supports only exact match. Needs to be url-encoded!\n          schema:\n            type: string\n        - in: query\n          name: after\n          description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n          schema:\n            type: string\n        - in: query\n          name: sort\n          description: Sort order. Gonna be rewritten by cursor's sort if present.\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n            default: desc\n        - in: query\n          name: limit\n          description: How many transactions to await in response.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 100\n      responses:\n        '200':\n          description: List of SetScript transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxSetScript'\n    post:\n      tags:\n        - transactions\n      summary: Get a list of Set script transactions by applying filters\n      operationId: postSearchTxsSetScript\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ids:\n                  type: array\n                  description: 'Transaction IDs array'\n                  items:\n                    type: string\n                sender:\n                  type: string\n                  description: 'Address-sender of the transaction'\n                timeStart:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2019-01-01T00:00:00.000'\n                timeEnd:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2020-01-01T00:00:00.000'\n                script:\n                  type: string\n                  description: 'Search transactions by the script. Supports only exact match. Needs to be url-encoded!'\n                after:\n                  type: string\n                  description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n                sort:\n                  type: string\n                  description: 'Sort order. Gonna be rewritten by cursor''s sort if present.'\n                  enum:\n                    - asc\n                    - desc\n                  default: desc\n                limit:\n                  type: integer\n                  description: 'How many transactions to await in response.'\n                  minimum: 1\n                  maximum: 100\n                  default: 100\n                  example: 100\n      responses:\n        '200':\n          description: List of SetScript transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxSetScript'\n  '/transactions/set-asset-script/{id}':\n    get:\n      tags:\n        - transactions\n      summary: Get a Set asset script transaction info by id\n      operationId: getTxsSetAssetScript\n      parameters:\n        - name: id\n          in: path\n          description: transaction ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Set asset script transaction\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TxSetAssetScript'\n        '404':\n          description: Transaction not found\n  /transactions/set-asset-script:\n    get:\n      tags:\n        - transactions\n      summary: Get a list of Set asset script transactions by applying filters\n      operationId: searchTxsSetAssetScript\n      parameters:\n        - in: query\n          name: ids\n          description: Transaction IDs array\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: sender\n          description: Address-sender of the transaction; has exclusive relation with senders\n          schema:\n            type: string\n        - in: query\n          name: senders\n          description: Array of address-senders of the transaction; has exclusive relation with sender\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: timeStart\n          description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: timeEnd\n          description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: assetId\n          description: Search transactions by the assetId.\n          schema:\n            type: string\n        - in: query\n          name: script\n          description: Search transactions by the script. Supports only exact match. Needs to be url-encoded!\n          schema:\n            type: string\n        - in: query\n          name: after\n          description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n          schema:\n            type: string\n        - in: query\n          name: sort\n          description: Sort order. Gonna be rewritten by cursor's sort if present.\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n            default: desc\n        - in: query\n          name: limit\n          description: How many transactions to await in response.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 100\n      responses:\n        '200':\n          description: List of SetAssetScript transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxSetAssetScript'\n    post:\n      tags:\n        - transactions\n      summary: Get a list of Set asset script transactions by applying filters\n      operationId: postSearchTxsSetAssetScript\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ids:\n                  type: array\n                  description: 'Transaction IDs array'\n                  items:\n                    type: string\n                sender:\n                  type: string\n                  description: 'Address-sender of the transaction'\n                timeStart:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2019-01-01T00:00:00.000'\n                timeEnd:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2020-01-01T00:00:00.000'\n                assetId:\n                  type: string\n                  description: 'Search transactions by the assetId.'\n                script:\n                  type: string\n                  description: 'Search transactions by the script. Supports only exact match. Needs to be url-encoded!'\n                after:\n                  type: string\n                  description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n                sort:\n                  type: string\n                  description: 'Sort order. Gonna be rewritten by cursor''s sort if present.'\n                  enum:\n                    - asc\n                    - desc\n                  default: desc\n                limit:\n                  type: integer\n                  description: 'How many transactions to await in response.'\n                  minimum: 1\n                  maximum: 100\n                  default: 100\n                  example: 100\n      responses:\n        '200':\n          description: List of SetAssetScript transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxSetAssetScript'\n  '/transactions/invoke-script/{id}':\n    get:\n      tags:\n        - transactions\n      summary: Get a Invoke-script transaction info by id\n      operationId: getTxsInvokeScript\n      parameters:\n        - name: id\n          in: path\n          description: transaction ID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Invoke script transaction\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TxInvokeScript'\n        '404':\n          description: Transaction not found\n  /transactions/invoke-script:\n    get:\n      tags:\n        - transactions\n      summary: Get a list of Invoke script transactions by applying filters\n      operationId: searchTxsInvokeScript\n      parameters:\n        - in: query\n          name: ids\n          description: Transaction IDs array\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: sender\n          description: Address-sender of the transaction; has exclusive relation with senders\n          schema:\n            type: string\n        - in: query\n          name: senders\n          description: Array of address-senders of the transaction; has exclusive relation with sender\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: timeStart\n          description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: timeEnd\n          description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: dapp\n          description: Search transactions by the dApp address. Supports only exact match.\n          schema:\n            type: string\n        - in: query\n          name: function\n          description: Search transactions by the called function name. Supports only exact match.\n          schema:\n            type: string\n        - in: query\n          name: after\n          description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n          schema:\n            type: string\n        - in: query\n          name: sort\n          description: Sort order. Gonna be rewritten by cursor's sort if present.\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n            default: desc\n        - in: query\n          name: limit\n          description: How many transactions to await in response.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 100\n      responses:\n        '200':\n          description: List of InvokeScript transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxInvokeScript'\n    post:\n      tags:\n        - transactions\n      summary: Get a list of Invoke script transactions by applying filters\n      operationId: postSearchTxsInvokeScript\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ids:\n                  type: array\n                  description: 'Transaction IDs array'\n                  items:\n                    type: string\n                sender:\n                  type: string\n                  description: 'Address-sender of the transaction'\n                timeStart:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, start. Defaults to first transaction''s time_stamp in db. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2019-01-01T00:00:00.000'\n                timeEnd:\n                  oneOf:\n                  - type: string\n                    format: date-time\n                  - type: number\n                  description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n                  example: '2020-01-01T00:00:00.000'\n                dapp:\n                  type: string\n                  description: 'Search transactions by the dApp address. Supports only exact match.'\n                function:\n                  type: string\n                  description: 'Search transactions by the called function name. Supports only exact match.'\n                after:\n                  type: string\n                  description: 'Cursor in base64 encoding. Holds information about timestamp, id, sort.'\n                sort:\n                  type: string\n                  description: 'Sort order. Gonna be rewritten by cursor''s sort if present.'\n                  enum:\n                    - asc\n                    - desc\n                  default: desc\n                limit:\n                  type: integer\n                  description: 'How many transactions to await in response.'\n                  minimum: 1\n                  maximum: 100\n                  default: 100\n                  example: 100\n      responses:\n        '200':\n          description: List of InvokeScript transactions satisfying provided filters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfTxInvokeScript'\n  '/aliases/{alias}':\n    get:\n      tags:\n        - aliases\n      summary: Get address for alias\n      operationId: getAlias\n      parameters:\n        - name: alias\n          in: path\n          description: alias itself\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Alias and address. Alias cam be broken (taken by several people), in which case `address` returns null.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Alias'\n        '404':\n          description: Alias not found\n  /aliases:\n    get:\n      tags:\n        - aliases\n      summary: Get a list of aliases\n      operationId: getAliasesForAddress\n      parameters:\n        - in: query\n          name: address\n          description: Address. In XOR relation with addresses and queries.\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: addresses\n          description: Search by array of address. In XOR relation with address and queries.\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: queries\n          description: Search by array of addressOrAlias. In XOR relation with address and addresses.\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: showBroken\n          description: Show broken aliases (taken by several people)\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - in: query\n          name: aliases\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        '200':\n          description: List of aliases\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfAlias'\n    post:\n      tags:\n        - aliases\n      summary: Get a list of aliases\n      operationId: postAliasesForAddress\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                address:\n                  type: string\n                  description: 'Address'\n                showBroken:\n                  type: boolean\n                  description: 'Show broken aliases (taken by several people)'\n                  default: false\n                aliases:\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: List of aliases\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfAlias'\n  /version:\n    get:\n      tags:\n        - info\n      summary: Current API version\n      operationId: getVersion\n      responses:\n        '200':\n          description: API current version\n  '/matchers/{matcher}/pairs/{amountAsset}/{priceAsset}':\n    get:\n      tags:\n        - matchers\n      summary: Get pair info by amount and price assets\n      operationId: matcherGetPair\n      parameters:\n        - name: matcher\n          in: path\n          description: Matcher address\n          required: true\n          schema:\n            type: string\n        - name: amountAsset\n          in: path\n          description: Asset ID of the amount asset\n          required: true\n          schema:\n            type: string\n        - name: priceAsset\n          in: path\n          description: Asset ID of the price asset\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Pair info\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pair'\n        '400':\n          description: If assets order in pair is incorrect or asset(s) does not exist\n  '/matchers/{matcher}/pairs':\n    get:\n      tags:\n        - matchers\n      summary: 1) Get list of pairs info by serialized pairs list; 2) Get all list of pairs info by limit (sort by volume in WAVES)\n      operationId: matcherGetPairsListAll\n      parameters:\n        - in: path\n          name: matcher\n          description: Matcher address\n          required: true\n          schema:\n            type: string\n        - name: pairs\n          in: query\n          description: '`{amountAsset}/{priceAsset}` strings list'\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: search_by_asset\n          description: 'For searching pairs, that have the `search_by_asset` in asset names, tickers, id of one asset of the pair.'\n          required: false\n          example: bitc\n          schema:\n            type: string\n        - in: query\n          name: search_by_assets\n          description: 'For searching pairs, that have the `search_by_asset` in asset names, tickers, id of one asset of the pair.'\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: match_exactly\n          description: Whether to search assets of pairs exactly or not. Parameter position is corresponds to asset position.\n          required: false\n          schema:\n            type: array\n            items:\n              type: boolean\n        - name: limit\n          in: query\n          description: How many pairs to await in response.\n          required: false\n          schema:\n            type: number\n            minimum: 1\n            maximum: 1000\n            default: 100\n      responses:\n        '200':\n          description: List of Pairs info\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfPair'\n        '400':\n          description: If assets order in one of the pairs is incorrect or at least on of the assets does not exist\n    post:\n      tags:\n        - matchers\n      summary: 1) Get list of pairs info by serialized pairs list; 2) Get all list of pairs info by limit (sort by volume in WAVES)\n      operationId: matcherPostPairsListAll\n      parameters:\n        - in: path\n          name: matcher\n          description: Matcher address\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pairs:\n                  type: array\n                  description: '`{amountAsset}/{priceAsset}` strings list'\n                  items:\n                    type: string\n                search_by_asset:\n                  type: string\n                  description: 'For searching pairs, that have the `search_by_asset` in asset names, tickers, id of one asset of the pair.'\n                  example: bitc\n                search_by_assets:\n                  type: array\n                  description: 'For searching pairs, that have the `search_by_asset` in asset names, tickers, id of one asset of the pair.'\n\n                  items:\n                    type: string\n                match_exactly:\n                  type: array\n                  description: 'Whether to search assets of pairs exactly or not. Parameter position is corresponds to asset position.'\n                  items:\n                    type: boolean\n                limit:\n                  type: number\n                  description: 'How many pairs to await in response.'\n                  example: 100\n                  minimum: 1\n                  maximum: 1000\n                  default: 100\n      responses:\n        '200':\n          description: List of Pairs info\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfPair'\n        '400':\n          description: If assets order in one of the pairs is incorrect or at least on of the assets does not exist\n  '/matchers/{matcher}/candles/{amountAsset}/{priceAsset}':\n    get:\n      tags:\n        - matchers\n      summary: Get candles by amount and price assets. Maximum amount of candles in response â€“ 1440.\n      operationId: matcherGetCandles\n      parameters:\n        - name: matcher\n          in: path\n          description: Matcher address\n          required: true\n          schema:\n            type: string\n        - name: amountAsset\n          in: path\n          description: Asset ID of the amount asset\n          required: true\n          schema:\n            type: string\n        - name: priceAsset\n          in: path\n          description: Asset ID of the price asset\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: timeStart\n          description: 'Time range filter, start. (ISO-8601 or timestamp in milliseconds, UTC)'\n          required: true\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: timeEnd\n          description: 'Time range filter, end. Defaults to now. (ISO-8601 or timestamp in milliseconds, UTC)'\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n        - in: query\n          name: interval\n          description: 'Candle interval. One of 1M, 1w, 1d, 12h, 6h, 4h, 3h, 2h, 1h, 30m, 15m, 5m, 1m.'\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: matcher\n          description: Matcher address\n          schema:\n            type: string\n      responses:\n        '200':\n          description: List of Candles\u003c/br\u003etime - candle open time\u003c/br\u003etimeClose - candle close time\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfCandle'\n        '404':\n          description: Candle not found\n  '/matchers/{matcher}/rates':\n    get:\n      tags:\n        - matchers\n      summary: Estimate assets relative assets rate for asset pairs at specific time\n      operationId: estimateRates\n      parameters:\n        - name: matcher\n          in: path\n          description: Matcher address\n          required: true\n          schema:\n            type: string\n        - name: pairs\n          in: query\n          description: '`{amountAsset}/{priceAsset}` strings list'\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: timestamp\n          description: Time to estimate the rates at. Defaults to now.\n          schema:\n            oneOf:\n              - type: string\n                format: date-time\n              - type: number\n      responses:\n        '200':\n          description: Pair info\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfRates'\n    post:\n      tags:\n        - matchers\n      summary: Estimate assets relative assets rate for asset pairs at specific time\n      operationId: postEstimateRates\n      parameters:\n        - name: matcher\n          in: path\n          description: Matcher address\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pairs:\n                  type: array\n                  description: '`{amountAsset}/{priceAsset}` strings list'\n                  items:\n                    type: string\n                timestamp:\n                  description: 'Time to estimate the rates at. Defaults to now.'\n                  oneOf:\n                    - type: string\n                      format: date-time\n                    - type: number\n                  example: '2020-01-01T00:00:00.000'\n      responses:\n        '200':\n          description: Pair info\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfRates'\ncomponents:\n  schemas:\n    Asset:\n      type: object\n      properties:\n        __type:\n          type: string\n          example: asset\n        data:\n          type: object\n          properties:\n            ticker:\n              type: string\n            id:\n              type: string\n            name:\n              type: string\n            precision:\n              type: integer\n              format: int4\n            height:\n              type: integer\n              format: int32\n            description:\n              type: string\n            timestamp:\n              type: string\n              format: date-time\n            sender:\n              type: string\n            quantity:\n              type: integer\n              format: int64\n            reissuable:\n              type: boolean\n            hasScript:\n              type: boolean\n            minSponsoredFee:\n              type: number\n              format: int64\n    Candle:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: candle\n        data:\n          type: object\n          properties:\n            time:\n              type: string\n              format: date-time\n              description: candle open time\n            open:\n              type: number\n              format: int64\n            close:\n              type: number\n              format: int64\n            high:\n              type: number\n              format: int64\n            low:\n              type: number\n              format: int64\n            volume:\n              type: number\n              format: int64\n            quoteVolume:\n              type: number\n              format: int64\n            weightedAveragePrice:\n              type: number\n              format: int64\n            maxHeight:\n              type: number\n            txsCount:\n              type: number\n            timeClose:\n              type: string\n              format: date-time\n              description: candle close time\n    Pair:\n      type: object\n      properties:\n        __type:\n          type: string\n          example: pair\n        data:\n          type: object\n          properties:\n            firstPrice:\n              type: number\n            lastPrice:\n              type: number\n            low:\n              type: number\n            high:\n              type: number\n            volume:\n              type: number\n            quoteVolume:\n              type: number\n            volumeWaves:\n              type: number\n            weightedAveragePrice:\n              type: number\n            txsCount:\n              type: number\n    Order:\n      type: object\n      properties:\n        id:\n          type: string\n        orderSender:\n          type: string\n        senderPublicKey:\n          type: string\n        matcherPublicKey:\n          type: string\n        assetPair:\n          type: object\n          properties:\n            amountAsset:\n              type: string\n            priceAsset:\n              type: string\n        orderType:\n          type: string\n        price:\n          type: number\n        amount:\n          type: number\n        timestamp:\n          type: string\n          format: date-time\n        expiration:\n          type: string\n          format: date-time\n        matcherFee:\n          type: number\n        signature:\n          type: string\n    TxExchange:\n      type: object\n      properties:\n        __type:\n          type: string\n        data:\n          type: object\n          properties:\n            type:\n              type: integer\n            id:\n              type: string\n            sender:\n              type: string\n            senderPublicKey:\n              type: string\n            fee:\n              type: number\n            timestamp:\n              type: string\n              format: date-time\n            signature:\n              type: string\n            order1:\n              $ref: '#/components/schemas/Order'\n            order2:\n              $ref: '#/components/schemas/Order'\n            price:\n              type: number\n            amount:\n              type: number\n            buyMatcherFee:\n              type: number\n            sellMatcherFee:\n              type: number\n            height:\n              type: integer\n              format: int32\n    Alias:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: alias\n        data:\n          type: object\n          properties:\n            address:\n              type: string\n            alias:\n              type: string\n    TxData:\n      type: object\n      properties:\n        __type:\n          type: string\n          example: transaction\n        data:\n          type: object\n          properties:\n            height:\n              type: integer\n              format: int32\n            version:\n              type: integer\n            type:\n              type: integer\n            id:\n              type: string\n            sender:\n              type: string\n            senderPublicKey:\n              type: string\n            fee:\n              type: number\n            timestamp:\n              type: string\n              format: date-time\n            signature:\n              type: string\n            proofs:\n              type: array\n              items:\n                type: string\n            data:\n              type: array\n              items:\n                oneOf:\n                  - type: object\n                    properties:\n                      key:\n                        type: string\n                      type:\n                        type: string\n                        example: boolean\n                      value:\n                        type: boolean\n                  - type: object\n                    properties:\n                      key:\n                        type: string\n                      type:\n                        type: string\n                      value:\n                        type: string\n                  - type: object\n                    properties:\n                      key:\n                        type: string\n                      type:\n                        type: string\n                        example: integer\n                      value:\n                        type: number\n    TxMassTransfer:\n      type: object\n      properties:\n        __type:\n          type: string\n          example: transaction\n        data:\n          type: object\n          properties:\n            height:\n              type: integer\n              format: int32\n            version:\n              type: integer\n            type:\n              type: integer\n            id:\n              type: string\n            sender:\n              type: string\n            senderPublicKey:\n              type: string\n            fee:\n              type: number\n            timestamp:\n              type: string\n              format: date-time\n            signature:\n              type: string\n            proofs:\n              type: array\n              items:\n                type: string\n            assetId:\n              type: string\n            attachment:\n              type: string\n            transfers:\n              type: array\n              items:\n                type: object\n                properties:\n                  amount:\n                    type: number\n                  recipient:\n                    type: string\n    TxTransfer:\n      type: object\n      properties:\n        __type:\n          type: string\n          example: transaction\n        data:\n          type: object\n          properties:\n            height:\n              type: integer\n              format: int32\n            version:\n              type: integer\n            type:\n              type: integer\n            id:\n              type: string\n            sender:\n              type: string\n            senderPublicKey:\n              type: string\n            feeAsset:\n              type: string\n            fee:\n              type: number\n            timestamp:\n              type: string\n              format: date-time\n            signature:\n              type: string\n            proofs:\n              type: array\n              items:\n                type: string\n            recipient:\n              type: string\n            assetId:\n              type: string\n            amount:\n              type: number\n            attachment:\n              type: string\n    TxLease:\n      type: object\n      properties:\n        __type:\n          type: string\n          example: transaction\n        data:\n          type: object\n          properties:\n            height:\n              type: integer\n              format: int32\n            version:\n              type: integer\n            type:\n              type: integer\n            id:\n              type: string\n            sender:\n              type: string\n            senderPublicKey:\n              type: string\n            fee:\n              type: number\n            timestamp:\n              type: string\n              format: date-time\n            signature:\n              type: string\n            proofs:\n              type: array\n              items:\n                type: string\n            recipient:\n              type: string\n            amount:\n              type: number\n    TxLeaseCancel:\n      type: object\n      properties:\n        __type:\n          type: string\n        data:\n          type: object\n          properties:\n            height:\n              type: integer\n              format: int32\n            version:\n              type: integer\n            type:\n              type: integer\n            id:\n              type: string\n            sender:\n              type: string\n            senderPublicKey:\n              type: string\n            fee:\n              type: number\n            timestamp:\n              type: string\n              format: date-time\n            signature:\n              type: string\n            proofs:\n              type: array\n              items:\n                type: string\n            leaseId:\n              type: string\n    TxSetScript:\n      type: object\n      properties:\n        __type:\n          type: string\n          example: transaction\n        data:\n          type: object\n          properties:\n            height:\n              type: integer\n              format: int32\n            version:\n              type: integer\n            type:\n              type: integer\n            id:\n              type: string\n            sender:\n              type: string\n            senderPublicKey:\n              type: string\n            fee:\n              type: number\n            timestamp:\n              type: string\n              format: date-time\n            signature:\n              type: string\n            proofs:\n              type: array\n              items:\n                type: string\n            script:\n              type: string\n    TxPayment:\n      type: object\n      properties:\n        __type:\n          type: string\n          example: transaction\n        data:\n          type: object\n          properties:\n            height:\n              type: integer\n              format: int32\n            version:\n              type: integer\n            type:\n              type: integer\n            id:\n              type: string\n            sender:\n              type: string\n            senderPublicKey:\n              type: string\n            fee:\n              type: number\n            timestamp:\n              type: string\n              format: date-time\n            signature:\n              type: string\n            proofs:\n              type: array\n              items:\n                type: string\n            recipient:\n              type: string\n            amount:\n              type: number\n    TxIssue:\n      type: object\n      properties:\n        __type:\n          type: string\n          example: transaction\n        data:\n          type: object\n          properties:\n            height:\n              type: integer\n              format: int32\n            version:\n              type: integer\n            type:\n              type: integer\n            id:\n              type: string\n            sender:\n              type: string\n            senderPublicKey:\n              type: string\n            fee:\n              type: number\n            timestamp:\n              type: string\n              format: date-time\n            signature:\n              type: string\n            proofs:\n              type: array\n              items:\n                type: string\n            assetId:\n              type: string\n            name:\n              type: string\n            description:\n              type: string\n            quantity:\n              type: number\n            decimals:\n              type: number\n            reissuable:\n              type: boolean\n            script:\n              type: string\n    TxReissue:\n      type: object\n      properties:\n        __type:\n          type: string\n          example: transaction\n        data:\n          type: object\n          properties:\n            height:\n              type: integer\n              format: int32\n            version:\n              type: integer\n            type:\n              type: integer\n            id:\n              type: string\n            sender:\n              type: string\n            senderPublicKey:\n              type: string\n            fee:\n              type: number\n            timestamp:\n              type: string\n              format: date-time\n            signature:\n              type: string\n            proofs:\n              type: array\n              items:\n                type: string\n            assetId:\n              type: string\n            quantity:\n              type: number\n            reissuable:\n              type: boolean\n    TxBurn:\n      type: object\n      properties:\n        __type:\n          type: string\n          example: transaction\n        data:\n          type: object\n          properties:\n            height:\n              type: integer\n              format: int32\n            version:\n              type: integer\n            type:\n              type: integer\n            id:\n              type: string\n            sender:\n              type: string\n            senderPublicKey:\n              type: string\n            fee:\n              type: number\n            timestamp:\n              type: string\n              format: date-time\n            signature:\n              type: string\n            proofs:\n              type: array\n              items:\n                type: string\n            assetId:\n              type: string\n            amount:\n              type: number\n    TxSponsorship:\n      type: object\n      properties:\n        __type:\n          type: string\n          example: transaction\n        data:\n          type: object\n          properties:\n            height:\n              type: integer\n              format: int32\n            version:\n              type: integer\n            type:\n              type: integer\n            id:\n              type: string\n            sender:\n              type: string\n            senderPublicKey:\n              type: string\n            fee:\n              type: number\n            timestamp:\n              type: string\n              format: date-time\n            signature:\n              type: string\n            proofs:\n              type: array\n              items:\n                type: string\n            assetId:\n              type: string\n            minSponsoredAssetFee:\n              type: number\n    TxAlias:\n      type: object\n      properties:\n        __type:\n          type: string\n          example: transaction\n        data:\n          type: object\n          properties:\n            height:\n              type: integer\n              format: int32\n            version:\n              type: integer\n            type:\n              type: integer\n            id:\n              type: string\n            sender:\n              type: string\n            senderPublicKey:\n              type: string\n            fee:\n              type: number\n            timestamp:\n              type: string\n              format: date-time\n            signature:\n              type: string\n            proofs:\n              type: array\n              items:\n                type: string\n            alias:\n              type: string\n    TxGenesis:\n      type: object\n      properties:\n        __type:\n          type: string\n          example: transaction\n        data:\n          type: object\n          properties:\n            height:\n              type: integer\n              format: int32\n            version:\n              type: integer\n            type:\n              type: integer\n            id:\n              type: string\n            senderPublicKey:\n              type: string\n            fee:\n              type: number\n            timestamp:\n              type: string\n              format: date-time\n            signature:\n              type: string\n            proofs:\n              type: array\n              items:\n                type: string\n            recipient:\n              type: string\n            amount:\n              type: number\n    TxSetAssetScript:\n      type: object\n      properties:\n        __type:\n          type: string\n          example: transaction\n        data:\n          type: object\n          properties:\n            height:\n              type: integer\n              format: int32\n            version:\n              type: integer\n            type:\n              type: integer\n            id:\n              type: string\n            sender:\n              type: string\n            senderPublicKey:\n              type: string\n            fee:\n              type: number\n            timestamp:\n              type: string\n              format: date-time\n            signature:\n              type: string\n            proofs:\n              type: array\n              items:\n                type: string\n            assetId:\n              type: string\n            script:\n              type: string\n    TxInvokeScript:\n      type: object\n      properties:\n        __type:\n          type: string\n          example: transaction\n        data:\n          type: object\n          properties:\n            height:\n              type: integer\n              format: int32\n            version:\n              type: integer\n            type:\n              type: integer\n            id:\n              type: string\n            sender:\n              type: string\n            senderPublicKey:\n              type: string\n            fee:\n              type: number\n            timestamp:\n              type: string\n              format: date-time\n            signature:\n              type: string\n            proofs:\n              type: array\n              items:\n                type: string\n            dApp:\n              type: string\n            call:\n              type: object\n              properties:\n                function:\n                  type: string\n                args:\n                  type: array\n                  items:\n                    oneOf:\n                      - type: object\n                        properties:\n                          type:\n                            type: string\n                          value:\n                            type: string\n                      - type: object\n                        properties:\n                          type:\n                            type: string\n                            example: integer\n                          value:\n                            type: number\n                      - type: object\n                        properties:\n                          type:\n                            type: string\n                            example: boolean\n                          value:\n                            type: boolean\n            payment:\n              type: array\n              items:\n                type: object\n                properties:\n                  amount:\n                    type: number\n                  assetId:\n                    type: string\n    Rate:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: rate\n        amountAsset:\n          type: string\n        priceAsset:\n          type: string\n        data:\n          type: object\n          properties:\n            rate:\n              type: number\n    ListOfRates:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: list\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Rate'\n    ListOfAlias:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: list\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Alias'\n    ListOfAsset:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: list\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Asset'\n    ListOfCandle:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: list\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Candle'\n        lastCursor:\n          type: string\n        isLastPage:\n          type: boolean\n    ListOfPair:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: list\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Pair'\n    ListOfAllTx:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: list\n        data:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/TxGenesis'\n              - $ref: '#/components/schemas/TxPayment'\n              - $ref: '#/components/schemas/TxIssue'\n              - $ref: '#/components/schemas/TxTransfer'\n              - $ref: '#/components/schemas/TxReissue'\n              - $ref: '#/components/schemas/TxBurn'\n              - $ref: '#/components/schemas/TxExchange'\n              - $ref: '#/components/schemas/TxLease'\n              - $ref: '#/components/schemas/TxLeaseCancel'\n              - $ref: '#/components/schemas/TxAlias'\n              - $ref: '#/components/schemas/TxMassTransfer'\n              - $ref: '#/components/schemas/TxData'\n              - $ref: '#/components/schemas/TxSponsorship'\n              - $ref: '#/components/schemas/TxSetScript'\n              - $ref: '#/components/schemas/TxSetAssetScript'\n              - $ref: '#/components/schemas/TxInvokeScript'\n        lastCursor:\n          type: string\n          example: U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj\n        isLastPage:\n          type: boolean\n    ListOfTxGenesis:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: list\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/TxGenesis'\n        lastCursor:\n          type: string\n          example: U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj\n        isLastPage:\n          type: boolean\n    ListOfTxPayment:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: list\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/TxPayment'\n        lastCursor:\n          type: string\n          example: U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj\n        isLastPage:\n          type: boolean\n    ListOfTxIssue:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: list\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/TxIssue'\n        lastCursor:\n          type: string\n          example: U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj\n        isLastPage:\n          type: boolean\n    ListOfTxTransfer:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: list\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/TxTransfer'\n        lastCursor:\n          type: string\n          example: U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj\n        isLastPage:\n          type: boolean\n    ListOfTxReissue:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: list\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/TxReissue'\n        lastCursor:\n          type: string\n          example: U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj\n        isLastPage:\n          type: boolean\n    ListOfTxBurn:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: list\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/TxBurn'\n        lastCursor:\n          type: string\n          example: U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj\n        isLastPage:\n          type: boolean\n    ListOfTxExchange:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: list\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/TxExchange'\n        lastCursor:\n          type: string\n          example: U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj\n        isLastPage:\n          type: boolean\n    ListOfTxLease:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: list\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/TxLease'\n        lastCursor:\n          type: string\n          example: U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj\n        isLastPage:\n          type: boolean\n    ListOfTxLeaseCancel:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: list\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/TxLeaseCancel'\n        lastCursor:\n          type: string\n          example: U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj\n        isLastPage:\n          type: boolean\n    ListOfTxAlias:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: list\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/TxAlias'\n        lastCursor:\n          type: string\n          example: U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj\n        isLastPage:\n          type: boolean\n    ListOfTxMassTransfer:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: list\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/TxMassTransfer'\n        lastCursor:\n          type: string\n          example: U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj\n        isLastPage:\n          type: boolean\n    ListOfTxData:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: list\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/TxData'\n        lastCursor:\n          type: string\n          example: U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj\n        isLastPage:\n          type: boolean\n    ListOfTxSponsorship:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: list\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/TxSponsorship'\n        lastCursor:\n          type: string\n          example: U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj\n        isLastPage:\n          type: boolean\n    ListOfTxSetScript:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: list\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/TxSetScript'\n        lastCursor:\n          type: string\n          example: U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj\n        isLastPage:\n          type: boolean\n    ListOfTxSetAssetScript:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: list\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/TxSetAssetScript'\n        lastCursor:\n          type: string\n          example: U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj\n        isLastPage:\n          type: boolean\n    ListOfTxInvokeScript:\n      type: object\n      required:\n        - __type\n        - data\n      properties:\n        __type:\n          type: string\n          example: list\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/TxInvokeScript'\n        lastCursor:\n          type: string\n          example: U2F0IEp1biAwMiAyMDE4IDE0OjAxOjQ1IEdNVCswMzAwIChNU0spOjozUHVrdnJzN2FwN1ZmQVlyTHlpZlNvZ0xYM0NuTVV4c0VFbmhuNk40WUVHWjo6YXNj\n        isLastPage:\n          type: boolean\n"
		}
	},
	"Error": "schemas: failed to write file oas_schemas_gen.go: 5109:13: expected ';', found time (and 10 more errors)"
}