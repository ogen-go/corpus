{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/interzoid.emailinfo/openapi.yml",
			"byteSize": 3480,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://api.interzoid.com\ninfo:\n  x-ballerina-display:\n      label: Interzoid Email Info\n      iconPath: \"icon.png\"\n  version: 1.0.0\n  title: Interzoid Get Email Information API\n  description: \u003e\n    This is a generated connector for [Interzoid Email Info API v1.0.0](https://interzoid.com/services/getemailinfo) OpenAPI specification.\n\n    This API provides validation information for email addresses to aid in deliverability. \n    Syntax, existence of mail servers, and other tests are run to ensure delivery. \n    Additional demographics are provided for the email address as well, including identifying generic, \n    vulgar, education, government, or other entity type email addresses.\n\n    For additional help getting started with the API, \n    visit [Interzoid Email Info API](https://interzoid.com/services/getemailinfo).\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n    \n    Create an [Interzoid Account](https://www.interzoid.com/register) \n    and obtain tokens by log into [Interzoid Account](https://www.interzoid.com/account).\n  contact:\n    name: API Support\n    email: support@interzoid.com\n    url: https://www.interzoid.com\n  termsOfService: https://www.interzoid.com/terms\n  license:\n    name: Interzoid license\n    url: 'https://www.interzoid.com/license'\nexternalDocs:\n  description: API home page and documentation\n  url: https://www.interzoid.com/services/getemailinfo\nsecurity:\n  - ApiKeyAuth : []\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      description: All requests on the Email Info API needs to include an API key. The API key can be provided as part of the query string or as a request header. The name of the API key needs to be `license`.\n      type: apiKey\n      in: query\n      name: license\n  schemas: \n    EmailInfo:\n      description: Validation information for email addresses.\n      properties:\n        Email:\n          type: string\n        Response:\n          type: string\n        Info:\n          type: string\n        IsGovernment:\n          type: string\n        IsEducational:\n          type: string\n        IsOrganizational:\n          type: string\n        IsVulgar:\n          type: string\n        IsGeneric:\n          type: string\n        Geolocation:\n          type: string\n        Code:\n          type: string\n        Credits:\n          type: string\npaths:\n  /getemailinfo:\n    get:\n      tags:\n        - Email Address Information\n      summary: Gets email validation information for an email address\n      operationId: getEmailInfo\n      description: |\n        Get email validation information and other demographics for an email address\n      parameters:\n        - in: query\n          name: email\n          description: Email address to retrieve validation information\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Email validation and demographic information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailInfo'\n        '400':\n          description: bad request - insufficient parameters\n        '402':\n          description: credits exhausted\n        '403':\n          description: invalid license API key\n        '404':\n          description: email address not valid\n        '405':\n          description: method not allowed\n        '500':\n          description: internal server error"
		}
	},
	"Error": "security: failed to write file oas_security_gen.go: format: 107:3: expected 1 expression"
}