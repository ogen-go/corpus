{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/factset/enterprise-sdk"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "code/java/FactSetPrices/v1/api/openapi.yaml",
			"byteSize": 293366,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: api@factset.com\n    name: FactSet Research Systems\n  description: |\n    Gain access to comprehensive global coverage for Equities \u0026 Fixed Income. Perform quick analytics by controlling the date ranges, currencies, and rolling periods, or simply request Open, High, Low, and Close prices. Easily connect pricing data with other core company data or alternative content sets using FactSet's hub and spoke symbology. \u003cp\u003eEquity and Fund Security types include Common Stock, ADR, GDR, Preferred, Closed-ended Fund, Exchange Traded Fund, Unit, Open-ended Fund, Exchange Traded Fund UVI, Exchange Traded Fund NAV, Preferred Equity, Non-Voting Depositary Receipt/Certificate, Alien/Foreign, Structured Product, and Temporary Instruments. Reference over 180,000+ active and inactive securities.\u003c/p\u003e\u003cp\u003eFixed Income Security Types include Corporate Bonds, Treasury and Agency bonds, Government Bonds, and Municipals.\u003c/p\u003e\n  title: FactSet Prices API\n  version: 1.2.1\nservers:\n- description: Production\n  url: https://api.factset.com/content\nsecurity:\n- FactSetApiKey: []\n- FactSetOAuth2: []\npaths:\n  /factset-prices/v1/prices:\n    get:\n      description: |\n        Gets security prices, Open, High, Low, Close, Volume, and currency for a specified date range and frequency. Prices are updated and at different times across the different regions around the globe. The Prices API automatically defaults relative price dates to the local region which is determined by the local region of the requested security id. To learn more about relative dates please visit [OA Page 4627](https://my.apps.factset.com/oa/pages/4627)\n\n        */prices* endpoint currently supports Long Running asynchronous requests up to **10 minutes** via `batch` parameter. This feature is in **Beta**. **Additional Approvals needed for access**. Id limits increased to **5000 ids** per request using batch parameter.\n      operationId: getSecurityPrices\n      parameters:\n      - description: The requested list of security identifiers. Accepted ID types\n          include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\u003cp\u003e***ids\n          limit** =  2000 per non-batch request / 5000 per batch request*\u003c/p\u003e *\u003cp\u003eMake\n          note, GET Method URL request lines are also limited to a total length of\n          8192 bytes (8KB). In cases where the service allows for thousands of ids,\n          which may lead to exceeding this request line limit of 8KB, its advised\n          for any requests with large request lines to be requested through the respective\n          \"POST\" method.\u003c/p\u003e*\n        examples:\n          oneEquityId:\n            summary: One Equity Market Identifier\n            value:\n            - AAPL-USA\n          multipleEquityIds:\n            summary: Multiple Equity Market Identifiers\n            value:\n            - FDS-US\n            - AAPL-US\n            - MSFT-US\n        explode: false\n        in: query\n        name: ids\n        required: true\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: |\n          The start date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n        example: 2019-01-01\n        explode: true\n        in: query\n        name: startDate\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          The end date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n        example: 2019-12-31\n        explode: true\n        in: query\n        name: endDate\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Controls the display frequency of the data returned.\n            * **D** = Daily\n            * **W** = Weekly, based on the last day of the week of the start date.\n            * **M** = Monthly, based on the last trading day of the month.\n            * **AM** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n            * **CQ** = Quarterly based on the last trading day of the calendar quarter (March, June, September, or December).\n            * **FQ** = Fiscal Quarter of the company.\n            * **AY** = Actual Annual, based on the start date.\n            * **CY** = Calendar Annual, based on the last trading day of the calendar year.\n            * **FY** = Fiscal Annual, based on the last trading day of the company's fiscal year.\n        examples:\n          Daily:\n            summary: D - Daily frequency display based on trading calendar\n            value: D\n          Weekly:\n            summary: W - Weekly - based on the last day of the week of the start date\n            value: W\n          Monthly:\n            summary: M - Monthly - based on the last trading day of the month.\n            value: M\n          Actual Month:\n            summary: AM - Actual Month - based on the startDate (e.g., if the start\n              date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n            value: AM\n          Calendar Quarterly:\n            summary: CQ - Calendar Quarterly - based on the last day of the week of\n              the startDate\n            value: CQ\n          Fiscal Quarterly:\n            summary: FQ - Fiscal Quarter of the company\n            value: FQ\n          Actual Annual:\n            summary: AY - Actual Annual - based on the startDate\n            value: AY\n          Calendar Annual:\n            summary: CY - Calendar Annual - based on the last trading day of the calendar\n              year.\n            value: CY\n          Fiscal Annual:\n            summary: FY - Fiscal Annual - based on the last trading day of the company's\n              fiscal year.\n            value: FY\n        explode: true\n        in: query\n        name: frequency\n        required: false\n        schema:\n          default: D\n          enum:\n          - D\n          - W\n          - M\n          - AM\n          - CQ\n          - FQ\n          - AY\n          - CY\n          - FY\n          type: string\n        style: form\n      - description: Calendar of data returned. SEVENDAY includes weekends. LOCAL\n          calendar will default to the securities' trading calendar which excludes\n          date records for respective holiday periods.\n        example: FIVEDAY\n        explode: true\n        in: query\n        name: calendar\n        required: false\n        schema:\n          default: FIVEDAY\n          enum:\n          - FIVEDAY\n          - SEVENDAY\n          - LOCAL\n          type: string\n        style: form\n      - description: Currency code for adjusting prices. Default is Local. For a list\n          of currency ISO codes, visit [Online Assistant Page 1470](https://oa.apps.factset.com/pages/1470).\n        example: USD\n        explode: true\n        in: query\n        name: currency\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Controls the split, spinoff, and dividend adjustments for the prices. \u003cp\u003eFor more information, visit [Online Assistant Page 614](https://oa.apps.factset.com/pages/614)\u003c/p\u003e\n            * **SPLIT** = Split ONLY Adjusted. This is used by default.\n            * **SPINOFF** = Splits \u0026 Spinoff Adjusted.\n            * **DIVADJ** = Splits, Spinoffs, and Dividends adjusted.\n            * **UNSPLIT** = No Adjustments.\n        examples:\n          split:\n            summary: Split adjusted by default - accounts for splits over security's\n              history.\n            value: SPLIT\n          spinoff:\n            summary: Spinoff Adjusted - accounts for a company's spinoff. Spinoffs\n              are treated as special dividends.\n            value: SPINOFF\n          Dividend Adjusted:\n            summary: Dividend Adjusted\n            value: DIVADJ\n          Unsplit:\n            summary: Unsplit data - overrides the default split adjustment\n            value: UNSPLIT\n        explode: true\n        in: query\n        name: adjust\n        required: false\n        schema:\n          default: SPLIT\n          enum:\n          - SPLIT\n          - SPINOFF\n          - DIVADJ\n          - UNSPLIT\n          type: string\n        style: form\n      - description: |\n          Enables the ability to asynchronously \"batch\" the request, supporting a long-running request up to **10 minutes**. Upon requesting batch=Y, the service will respond back with an HTTP Status Code of 202.\n\n          **`batch` is currently in **BETA**. Additional Access Required. To gain access to this feature, reach out to your FactSet Account team or \"Report Issue\" above and our support teams can assist.**\n\n          Once a batch request is submitted, use `batch/v1/status` to see if the job has completed. Once completed, retrieve the results of the request via `batch/v1/result`. See [Batching API](https://developer.factset.com/api-catalog/factset-content-api-batch) for more details.\n\n          When using Batch, `ids` limit is increased to **5000** ids per request, though limits on query string via GET method still apply. It's advised to submit large lists of ids via POST method.\n        explode: true\n        in: query\n        name: batch\n        required: false\n        schema:\n          default: \"N\"\n          enum:\n          - \"Y\"\n          - \"N\"\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Price of AAPL as of March 29 2019:\n                  $ref: '#/components/examples/singleSecurityPrices'\n                Prices for AAPL and TSLA as of March 29th 2019:\n                  $ref: '#/components/examples/twoSecuritiesPrices'\n                One Month of Daily Prices for AAPL in March 2019:\n                  $ref: '#/components/examples/oneMonthSecurityPrices'\n              schema:\n                $ref: '#/components/schemas/pricesResponse'\n          description: Array of security prices open, high, low, close, and volume.\n        \"202\":\n          content:\n            application/json:\n              examples:\n                Batch Request Accepted:\n                  $ref: '#/components/examples/BatchStatusAcceptedResponse'\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n          description: Batch request has been accepted.\n          headers:\n            Location:\n              description: Path to Batch Request status.\n              example: batch/v1/status?id=2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/badRequestDateFormat'\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Future Date:\n                  $ref: '#/components/examples/badRequestFutureDate'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Gets end-of-day Open, High, Low, Close for a list of securities.\n      tags:\n      - Prices\n      x-factset-different-success-responses: true\n      x-accepts: application/json\n    post:\n      description: |2\n\n        Gets security prices, Open, High, Low, Close, Volume, and currency for a specified date range and frequency.\n\n        */prices* endpoint currently supports Long Running asynchronous requests up to **10 minutes** via `batch` parameter. This feature is in **Beta**. **Additional Approvals needed for access**. Id limits increased to **5000 ids** per request using batch parameter.\n      operationId: getSecurityPricesForList\n      requestBody:\n        content:\n          application/json:\n            examples:\n              One Year of Daily Prices for Apple and Tesla in 2019:\n                $ref: '#/components/examples/multipleIdsOneYearPost'\n              Single Company Monthly Prices for One Year:\n                $ref: '#/components/examples/singleIdsOneYearMonthlyPost'\n              Price Adjusted for Splits, Spinoffs, and Dividends:\n                $ref: '#/components/examples/priceAdjustedForDividendsMonthlyPost'\n              Batch Request for Prices for APPL and Tesla:\n                $ref: '#/components/examples/BatchPricesRequestPost'\n            schema:\n              $ref: '#/components/schemas/pricesRequest'\n        description: Request object for `Security` prices.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Price of AAPL as of March 29 2019:\n                  $ref: '#/components/examples/singleSecurityPrices'\n                Prices for AAPL and TSLA as of March 29th 2019:\n                  $ref: '#/components/examples/twoSecuritiesPrices'\n                One Month of Daily Prices for AAPL in March 2019:\n                  $ref: '#/components/examples/oneMonthSecurityPrices'\n              schema:\n                $ref: '#/components/schemas/pricesResponse'\n          description: Array of security prices\n        \"202\":\n          content:\n            application/json:\n              examples:\n                Batch Request Accepted:\n                  $ref: '#/components/examples/BatchStatusAcceptedResponse'\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n          description: Batch request has been accepted.\n          headers:\n            Location:\n              description: Path to Batch Request status.\n              example: batch/v1/status?id=2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/badRequestDateFormat'\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Future Date:\n                  $ref: '#/components/examples/badRequestFutureDate'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Requests end-of-day Open, High, Low, Close for a large list of securities.\n      tags:\n      - Prices\n      x-factset-different-success-responses: true\n      x-contentType: application/json\n      x-accepts: application/json\n  /factset-prices/v1/fixed-income:\n    get:\n      description: |\n        Get BID, MID, ASK, and Issuer Entity ID for a list of Fixed Income Securities as of a requested date range. Available for U.S. Corporate, Treasury and Agency bonds, Municipals, and non-U.S. Corporate and Government bonds. To learn more about Fixed Income Prices database, please review [OA:15995](https://my.apps.factset.com/oa/pages/15995)\n      operationId: getFixedSecurityPrices\n      parameters:\n      - description: The requested list of Fixed Income security identifiers. \u003cp\u003e***ids\n          limit** =  2000 per request*\u003c/p\u003e *\u003cp\u003eMake note, GET Method URL request lines\n          are also limited to a total length of 8192 bytes (8KB). In cases where the\n          service allows for thousands of ids, which may lead to exceeding this request\n          line limit of 8KB, its advised for any requests with large request lines\n          to be requested through the respective \"POST\" method.\u003c/p\u003e*\n        examples:\n          oneFixedId:\n            summary: One Fixed Income Identifier\n            value:\n            - 037833BX\n          multipleFixedIds:\n            summary: Multiple Fixed Income Identifiers and Types\n            value:\n            - 037833BX\n            - 853207EZ\n            - 9127963H\n        explode: false\n        in: query\n        name: ids\n        required: true\n        schema:\n          items:\n            type: string\n          maxItems: 2000\n          minItems: 1\n          type: array\n        style: form\n      - description: |\n          The start date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n        example: 2019-01-01\n        explode: true\n        in: query\n        name: startDate\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          The end date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n        example: 2019-12-31\n        explode: true\n        in: query\n        name: endDate\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Controls the display frequency of the data returned.\n            * **D** = Daily\n            * **M** = Monthly, based on the last trading day of the month.\n            * **AM** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n            * **MTD** = Month-to-date\n            * **CQ** = Quarterly based on the last trading day of the calendar quarter (March, June, September, or December).\n            * **CQTD** =  Calendar quarter-to-date\n            * **AY** = Actual Annual, based on the start date.\n            * **CY** = Calendar Annual, based on the last trading day of the calendar year.\n            * **CYTD** = Calendar Year-to-date.\n        examples:\n          Daily:\n            summary: D - Daily frequency display based on trading calendar\n            value: D\n          Month-to-date:\n            summary: MTD - Month-to-date\n            value: MTD\n          Monthly:\n            summary: M - Monthly - based on the last trading day of the month.\n            value: M\n          Actual Month:\n            summary: AM - Actual Month - based on the startDate (e.g., if the start\n              date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n            value: AM\n          Calendar Quarterly:\n            summary: CQ - Calendar Quarterly - based on the last day of the week of\n              the startDate\n            value: CQ\n          Calendar quarter-to-date:\n            summary: CQTD - Calendar quarter-to-date\n            value: CQTD\n          Actual Annual:\n            summary: AY - Actual Annual - based on the startDate\n            value: AY\n          Calendar Annual:\n            summary: CY - Calendar Annual - based on the last trading day of the calendar\n              year.\n            value: CY\n          Calendar Year-to-date:\n            summary: CYTD - Calendar Year-to-date\n            value: CYTD\n        explode: true\n        in: query\n        name: frequency\n        required: false\n        schema:\n          default: D\n          enum:\n          - D\n          - M\n          - AM\n          - MTD\n          - CQ\n          - CQTD\n          - AY\n          - CY\n          - CYTD\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Fixed Income Price of Apple 4.65% 23-FEB-2046:\n                  $ref: '#/components/examples/singleSecurityPricesFixedIncome'\n                Fixed Income Prices for Three Security Types:\n                  $ref: '#/components/examples/multipleSecurityPricesFixedIncome'\n              schema:\n                $ref: '#/components/schemas/pricesFixedIncomeResponse'\n          description: Array of Fixed Income Security prices objects for date range\n            requested\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/badRequestDateFormat'\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Future Date:\n                  $ref: '#/components/examples/badRequestFutureDate'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Gets pricing for a list of Fixed Income securities\n      tags:\n      - Prices\n      x-accepts: application/json\n    post:\n      description: |\n        Get BID, MID, ASK, and Issuer Entity ID for a list of Fixed Income Securities as of a requested date range. Available for U.S. Corporate, Treasury and Agency bonds, Municipals, and non-U.S. Corporate and Government bonds. To learn more about Fixed Income Prices database, please review [OA:15995](https://my.apps.factset.com/oa/pages/15995)\n      operationId: getFixedSecurityPricesForList\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Single Fixed Income Id Request for One Year of Monthly Prices:\n                $ref: '#/components/examples/singleFixedOneYearPost'\n              Fixed Income Single Id Request:\n                $ref: '#/components/examples/multipleFixedPricesPost'\n            schema:\n              $ref: '#/components/schemas/pricesFixedIncomeRequest'\n        description: Request object for Fixed Income `Security` prices.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Fixed Income Price of Apple 4.65% 23-FEB-2046:\n                  $ref: '#/components/examples/singleSecurityPricesFixedIncome'\n                Fixed Income Prices for Three Security Types:\n                  $ref: '#/components/examples/multipleSecurityPricesFixedIncome'\n              schema:\n                $ref: '#/components/schemas/pricesFixedIncomeResponse'\n          description: Array of Fixed Income Security prices objects\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/badRequestDateFormat'\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Future Date:\n                  $ref: '#/components/examples/badRequestFutureDate'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Requests pricing for a list of Fixed Income securities for date range\n        requested\n      tags:\n      - Prices\n      x-contentType: application/json\n      x-accepts: application/json\n  /factset-prices/v1/references:\n    get:\n      description: |\n        Gets security reference details for a list of `ids`, such as Name, Security Type, Currency, Country, Primary Exchange, Local Index, and dates of First and Last Trade.\n      operationId: getSecurityReferences\n      parameters:\n      - description: The requested list of security identifiers. Accepted ID types\n          include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\n          \u003cp\u003e***ids limit** =  2000 per request*\u003c/p\u003e *\u003cp\u003eMake note, GET Method URL\n          request lines are also limited to a total length of 8192 bytes (8KB). In\n          cases where the service allows for thousands of ids, which may lead to exceeding\n          this request line limit of 8KB, its advised for any requests with large\n          request lines to be requested through the respective \"POST\" method.\u003c/p\u003e*\n        examples:\n          oneEquityId:\n            summary: One Equity Market Identifier\n            value:\n            - AAPL-USA\n          multipleEquityIds:\n            summary: Multiple Equity Market Identifiers\n            value:\n            - FDS-US\n            - AAPL-US\n            - MSFT-US\n        explode: false\n        in: query\n        name: ids\n        required: true\n        schema:\n          items:\n            type: string\n          maxItems: 2000\n          minItems: 1\n          type: array\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Single Company Reference:\n                  $ref: '#/components/examples/singleSecurityReferences'\n                Multiple Company References:\n                  $ref: '#/components/examples/multipleSecurityReferences'\n              schema:\n                $ref: '#/components/schemas/referencesResponse'\n          description: Array of security references objects\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/badRequestDateFormat'\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Future Date:\n                  $ref: '#/components/examples/badRequestFutureDate'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Gets security reference details for a list of securities\n      tags:\n      - Reference\n      x-accepts: application/json\n    post:\n      description: |\n        Gets security reference details for a large list of `ids`, such as Name, Security Type, Currency, Country, Primary Exchange, Local Index, and dates of First and Last Trade.\n      operationId: getSecurityReferenceForList\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Multiple Security Reference Request:\n                $ref: '#/components/examples/multipleReferencesPost'\n            schema:\n              $ref: '#/components/schemas/referencesRequest'\n        description: Request object for `Security` prices.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Single Company Reference:\n                  $ref: '#/components/examples/singleSecurityReferences'\n                Multiple Company References:\n                  $ref: '#/components/examples/multipleSecurityReferences'\n              schema:\n                $ref: '#/components/schemas/referencesResponse'\n          description: Array of security prices\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/badRequestDateFormat'\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Future Date:\n                  $ref: '#/components/examples/badRequestFutureDate'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Requests security reference details a list of securities\n      tags:\n      - Reference\n      x-contentType: application/json\n      x-accepts: application/json\n  /factset-prices/v1/returns:\n    get:\n      description: 'The simple or compound return for the requested frequency and/or\n        rollingPeriod. Depending on the input parameters the return will adjust accordingly.\n        If you simply use frequency and no rollingPeriod, the return value will represent\n        the frequency period. If you use rollingPeriod, the values will be returned\n        in actual period ends (e.g. actual month, actual week, daily, etc.). General\n        Return Calculation Details found on [Online Assistant Page #8748](https://oa.apps.factset.com/pages/8748)'\n      operationId: getSecurityReturns\n      parameters:\n      - description: The requested list of security identifiers. Accepted ID types\n          include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\n          \u003cp\u003e***ids limit** =  2000 per request*\u003c/p\u003e *\u003cp\u003eMake note, GET Method URL\n          request lines are also limited to a total length of 8192 bytes (8KB). In\n          cases where the service allows for thousands of ids, which may lead to exceeding\n          this request line limit of 8KB, its advised for any requests with large\n          request lines to be requested through the respective \"POST\" method.\u003c/p\u003e*\n        examples:\n          oneEquityId:\n            summary: One Equity Market Identifier\n            value:\n            - AAPL-USA\n          multipleEquityIds:\n            summary: Multiple Equity Market Identifiers\n            value:\n            - FDS-US\n            - AAPL-US\n            - MSFT-US\n        explode: false\n        in: query\n        name: ids\n        required: true\n        schema:\n          items:\n            type: string\n          maxItems: 2000\n          minItems: 1\n          type: array\n        style: form\n      - description: |\n          The start date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n        example: 2019-01-01\n        explode: true\n        in: query\n        name: startDate\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          The end date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n        example: 2019-12-31\n        explode: true\n        in: query\n        name: endDate\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Controls the display frequency of the data returned.\n            * **D** = Daily\n            * **W** = Weekly, based on the last day of the week of the start date.\n            * **M** = Monthly, based on the last trading day of the month.\n            * **AM** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n            * **CQ** = Quarterly based on the last trading day of the calendar quarter (March, June, September, or December).\n            * **FQ** = Fiscal Quarter of the company.\n            * **AY** = Actual Annual, based on the start date.\n            * **CY** = Calendar Annual, based on the last trading day of the calendar year.\n            * **FY** = Fiscal Annual, based on the last trading day of the company's fiscal year.\n        examples:\n          Daily:\n            summary: D - Daily frequency display based on trading calendar\n            value: D\n          Weekly:\n            summary: W - Weekly - based on the last day of the week of the start date\n            value: W\n          Monthly:\n            summary: M - Monthly - based on the last trading day of the month.\n            value: M\n          Actual Month:\n            summary: AM - Actual Month - based on the startDate (e.g., if the start\n              date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n            value: AM\n          Calendar Quarterly:\n            summary: CQ - Calendar Quarterly - based on the last day of the week of\n              the startDate\n            value: CQ\n          Fiscal Quarterly:\n            summary: FQ - Fiscal Quarter of the company\n            value: FQ\n          Actual Annual:\n            summary: AY - Actual Annual - based on the startDate\n            value: AY\n          Calendar Annual:\n            summary: CY - Calendar Annual - based on the last trading day of the calendar\n              year.\n            value: CY\n          Fiscal Annual:\n            summary: FY - Fiscal Annual - based on the last trading day of the company's\n              fiscal year.\n            value: FY\n        explode: true\n        in: query\n        name: frequency\n        required: false\n        schema:\n          default: D\n          enum:\n          - D\n          - W\n          - M\n          - AM\n          - CQ\n          - FQ\n          - AY\n          - CY\n          - FY\n          type: string\n        style: form\n      - description: Calendar of data returned. SEVENDAY includes weekends. LOCAL\n          calendar will default to the securities' trading calendar which excludes\n          date records for respective holiday periods.\n        example: FIVEDAY\n        explode: true\n        in: query\n        name: calendar\n        required: false\n        schema:\n          default: FIVEDAY\n          enum:\n          - FIVEDAY\n          - SEVENDAY\n          - LOCAL\n          type: string\n        style: form\n      - description: Currency code for adjusting prices. Default is Local. For a list\n          of currency ISO codes, visit [Online Assistant Page 1470](https://oa.apps.factset.com/pages/1470).\n        example: USD\n        explode: true\n        in: query\n        name: currency\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Controls the dividend reinvestment for the returns calculation.\n            * **PRICE** = Price Change - Dividends Excluded\n            * **EXDATE** = Simple Return - Dividends Received on exdate but not reinvested\n            * **PAYDATE** = Simple Return - Dividends Received on paydate but not reinvested\n            * **EXDATE_C** = Compound Return - Dividends reinvested on exdate\n            * **PAYDATE_C** = Compound Return - Dividends reinvested on paydate.\n        explode: true\n        in: query\n        name: dividendAdjust\n        required: false\n        schema:\n          default: PRICE\n          enum:\n          - PRICE\n          - EXDATE\n          - PAYDATE\n          - EXDATE_C\n          - PAYDATE_C\n          type: string\n        style: form\n      - description: Period of measure for the rolling cumulative return. This does\n          not change display `frequency` but rather the underlying return calculation\n          period. All periods are referencing actual periods of measure, not period-ends.\n          For example, 1M rolling period will go back to that date the previous month,\n          which is not always the month-end date.\n        explode: true\n        in: query\n        name: rollingPeriod\n        required: false\n        schema:\n          enum:\n          - 1D\n          - 1W\n          - 1M\n          - 3M\n          - 6M\n          - 52W\n          - 2Y\n          - 3Y\n          - 5Y\n          - 10Y\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Daily Returns of AAPL for the Year 2019:\n                  $ref: '#/components/examples/dailyReturnsAPPL'\n                Latest 52w Return for AAPL:\n                  $ref: '#/components/examples/52WKReturnAAPL'\n                Latest Month Return for FB, AAPL, NFLX, GOOGL:\n                  $ref: '#/components/examples/fangStocksReturn'\n              schema:\n                $ref: '#/components/schemas/returnsResponse'\n          description: Array of security returns for the requested date range and\n            rolling period\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/badRequestDateFormat'\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Future Date:\n                  $ref: '#/components/examples/badRequestFutureDate'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Gets Returns for a list of `ids` as of given date range and rolling\n        Period\n      tags:\n      - Returns\n      x-accepts: application/json\n    post:\n      description: 'The simple or compound return for the requested frequency and/or\n        rollingPeriod. Depending on the input parameters the return will adjust accordingly.\n        If you simply use frequency and no rollingPeriod, the return value will represent\n        the frequency period. If you use rollingPeriod, the values will be returned\n        in actual period ends (e.g. actual month, actual week, daily, etc.). General\n        Return Calculation Details found on [Online Assistant Page #8748](https://oa.apps.factset.com/pages/8748)'\n      operationId: getSecurityReturnsForList\n      requestBody:\n        content:\n          application/json:\n            examples:\n              What is the latest monthly total return for APPL TSLA FB and NFLX:\n                $ref: '#/components/examples/fangStocksReturnPost'\n              Daily Price Changes of AMZN in 2019:\n                $ref: '#/components/examples/dailyPriceChangeAMZNPost'\n            schema:\n              $ref: '#/components/schemas/returnsRequest'\n        description: Request object for `Security` returns.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Daily Returns of AAPL for the Year 2019:\n                  $ref: '#/components/examples/dailyReturnsAPPL'\n                Latest 52w Return for AAPL:\n                  $ref: '#/components/examples/52WKReturnAAPL'\n                Latest Month Return for FB, AAPL, NFLX, GOOGL:\n                  $ref: '#/components/examples/fangStocksReturn'\n              schema:\n                $ref: '#/components/schemas/returnsResponse'\n          description: Array of security returns for the requested date range and\n            rolling period\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/badRequestDateFormat'\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Future Date:\n                  $ref: '#/components/examples/badRequestFutureDate'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Requests security returns for the given date range and rollingPeriod.\n      tags:\n      - Returns\n      x-contentType: application/json\n      x-accepts: application/json\n  /factset-prices/v1/returns-snapshot:\n    get:\n      description: |\n        Retrieves various return periods as of a given date for a requested list of securities. This endpoint is very helpful for quickly retrieving a list of pre-calculated returns for application development.\u003cp\u003e Return periods include\n          * oneDay\n          * weekToDate\n          * monthToDate\n          * quarterToDate\n          * yearToDate\n          * oneMonth\n          * threeMonth\n          * sixMonth\n          * nineMonth\n          * oneYear\n          * twoYearAnnualized\n          * threeYearAnnualized\n          * fiveYearAnnualized\n          * tenYearAnnualized\n          * twentyYearAnnualized\n          * thirtyYearAnnualized\n          * ipoToDateAnnualized\n          \u003c/p\u003e\n      operationId: getReturnsSnapshot\n      parameters:\n      - description: The requested list of security identifiers. Accepted ID types\n          include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\n          \u003cp\u003e***ids limit** =  2000 per request*\u003c/p\u003e *\u003cp\u003eMake note, GET Method URL\n          request lines are also limited to a total length of 8192 bytes (8KB). In\n          cases where the service allows for thousands of ids, which may lead to exceeding\n          this request line limit of 8KB, its advised for any requests with large\n          request lines to be requested through the respective \"POST\" method.\u003c/p\u003e*\n        examples:\n          oneEquityId:\n            summary: One Equity Market Identifier\n            value:\n            - AAPL-USA\n          multipleEquityIds:\n            summary: Multiple Equity Market Identifiers\n            value:\n            - FDS-US\n            - AAPL-US\n            - MSFT-US\n        explode: false\n        in: query\n        name: ids\n        required: true\n        schema:\n          items:\n            type: string\n          maxItems: 2000\n          minItems: 1\n          type: array\n        style: form\n      - description: |\n          The date in **YYYY-MM-DD** format. This controls the perspective dates to the calculate the returns. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n        example: 2019-07-07\n        explode: true\n        in: query\n        name: date\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Calendar of data returned. SEVENDAY includes weekends. LOCAL\n          calendar will default to the securities' trading calendar which excludes\n          date records for respective holiday periods.\n        example: FIVEDAY\n        explode: true\n        in: query\n        name: calendar\n        required: false\n        schema:\n          default: FIVEDAY\n          enum:\n          - FIVEDAY\n          - SEVENDAY\n          - LOCAL\n          type: string\n        style: form\n      - description: Currency code for adjusting prices. Default is Local. For a list\n          of currency ISO codes, visit [Online Assistant Page 1470](https://oa.apps.factset.com/pages/1470).\n        example: USD\n        explode: true\n        in: query\n        name: currency\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Controls the dividend reinvestment for the returns calculation. Dividends will be reinvested on the date the dividends go ex (when the dividends belong to the seller rather than the buyer). Visit [OA 8748](https://my.apps.factset.com/oa/pages/8748) for calculation methodology.\n            * **PRICE** = Price Change - Dividends Excluded.\n            * **EXDATE** = Simple Return - Dividends Received on exdate but not reinvested. Dividends accumulated throughout the specified period are added to the price at the end of the period.\n            * **EXDATE_C** = Compound Return - Dividends reinvested on exdate. Dividends accumulated throughout the specified period are used to buy more shares of stock in the company.\n        explode: true\n        in: query\n        name: dividendAdjust\n        required: false\n        schema:\n          default: PRICE\n          enum:\n          - PRICE\n          - EXDATE\n          - EXDATE_C\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Return details for IBM-US with compound return type:\n                  $ref: '#/components/examples/singleRSCompundRTResponse'\n                Requesting returns details for Multiple companies with simple return type:\n                  $ref: '#/components/examples/multipleRSSimpleRTResponse'\n              schema:\n                $ref: '#/components/schemas/returnsSnapshotResponse'\n          description: Array of returns-snapshot objects for the list of ids requested\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/badRequestDateFormat'\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Future Date:\n                  $ref: '#/components/examples/badRequestFutureDate'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Returns the price performance of the security and annualized compound\n        total returns.\n      tags:\n      - Returns\n      x-accepts: application/json\n    post:\n      description: |\n        Retrieves various return periods as of a given date for a requested list of securities. This endpoint is very helpful for quickly retrieving a list of pre-calculated returns for application development.\u003cp\u003e Return periods include\n          * oneDay\n          * weekToDate\n          * monthToDate\n          * quarterToDate\n          * yearToDate\n          * oneMonth\n          * threeMonth\n          * sixMonth\n          * nineMonth\n          * oneYear\n          * twoYearAnnualized\n          * threeYearAnnualized\n          * fiveYearAnnualized\n          * tenYearAnnualized\n          * twentyYearAnnualized\n          * thirtyYearAnnualized\n          * ipoToDateAnnualized\n          \u003c/p\u003e\n      operationId: getReturnsSnapshotForList\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Return details for IBM-US with compound return type:\n                $ref: '#/components/examples/singleRSCompundRT'\n              Requesting returns details for multiple companies with simple return type:\n                $ref: '#/components/examples/multipleRSSimpleRT'\n            schema:\n              $ref: '#/components/schemas/returnsSnapshotRequest'\n        description: Request object for Returns-Snapshot.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Return details for IBM-US with compound return type:\n                  $ref: '#/components/examples/singleRSCompundRTResponse'\n                Requesting returns details for multiple companies with simple return type:\n                  $ref: '#/components/examples/multipleRSSimpleRTResponse'\n              schema:\n                $ref: '#/components/schemas/returnsSnapshotResponse'\n          description: Array of returns-snapshot objects for the list of ids requested\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/badRequestDateFormat'\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Future Date:\n                  $ref: '#/components/examples/badRequestFutureDate'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Returns the price performance of the security and annualized compound\n        total returns.\n      tags:\n      - Returns\n      x-contentType: application/json\n      x-accepts: application/json\n  /factset-prices/v1/dividends:\n    get:\n      description: Get the dividend amounts, dates, types, and flags over a specified\n        date range. You may request future dates to receive information for declared\n        dividends.\n      operationId: getSecurityDividends\n      parameters:\n      - description: The requested list of security identifiers. Accepted ID types\n          include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\n          \u003cp\u003e***ids limit** =  1000 per request*\u003c/p\u003e *\u003cp\u003eMake note, GET Method URL\n          request lines are also limited to a total length of 8192 bytes (8KB). In\n          cases where the service allows for thousands of ids, which may lead to exceeding\n          this request line limit of 8KB, its advised for any requests with large\n          request lines to be requested through the respective \"POST\" method.\u003c/p\u003e*\n        examples:\n          oneEquityId:\n            summary: One Equity Market Identifier\n            value:\n            - AAPL-USA\n          multipleEquityIds:\n            summary: Multiple Equity Market Identifiers\n            value:\n            - FDS-US\n            - AAPL-US\n            - MSFT-US\n        explode: false\n        in: query\n        name: ids\n        required: true\n        schema:\n          items:\n            type: string\n          maxItems: 1000\n          minItems: 1\n          type: array\n        style: form\n      - description: |\n          The start date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n        example: 2019-01-01\n        explode: true\n        in: query\n        name: startDate\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          The end date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n        example: 2019-12-31\n        explode: true\n        in: query\n        name: endDate\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Currency code for adjusting prices. Default is Local. For a list\n          of currency ISO codes, visit [Online Assistant Page 1470](https://oa.apps.factset.com/pages/1470).\n        example: USD\n        explode: true\n        in: query\n        name: currency\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Controls the split, spinoff, and dividend adjustments for the prices. \u003cp\u003eFor more information, visit [Online Assistant Page 614](https://oa.apps.factset.com/pages/614)\u003c/p\u003e\n            * **SPLIT** = Split ONLY Adjusted. This is used by default.\n            * **SPINOFF** = Splits \u0026 Spinoff Adjusted.\n            * **DIVADJ** = Splits, Spinoffs, and Dividends adjusted.\n            * **UNSPLIT** = No Adjustments.\n        examples:\n          split:\n            summary: Split adjusted by default - accounts for splits over security's\n              history.\n            value: SPLIT\n          spinoff:\n            summary: Spinoff Adjusted - accounts for a company's spinoff. Spinoffs\n              are treated as special dividends.\n            value: SPINOFF\n          Dividend Adjusted:\n            summary: Dividend Adjusted\n            value: DIVADJ\n          Unsplit:\n            summary: Unsplit data - overrides the default split adjustment\n            value: UNSPLIT\n        explode: true\n        in: query\n        name: adjust\n        required: false\n        schema:\n          default: SPLIT\n          enum:\n          - SPLIT\n          - SPINOFF\n          - DIVADJ\n          - UNSPLIT\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Three Years of Dividends for AAPL as of 2019:\n                  $ref: '#/components/examples/3yrDividendsAPPL'\n                Latest Dividends for AAPL and AMZN:\n                  $ref: '#/components/examples/latestDividends'\n              schema:\n                $ref: '#/components/schemas/dividendsResponse'\n          description: Array of security dividend information for a given date range\n            and list of securities\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/badRequestDateFormat'\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Future Date:\n                  $ref: '#/components/examples/badRequestFutureDate'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Gets dividend information for a given date range and list of securities\n      tags:\n      - Dividends\n      x-accepts: application/json\n    post:\n      description: Get the dividend amounts, dates, types, and flags over a specified\n        date range\n      operationId: getSecurityDividendsForList\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Request AAPL Dividends in 2019:\n                $ref: '#/components/examples/singleSecurityDividends'\n              Request Latest Dividends of AAPL and MSFT:\n                $ref: '#/components/examples/latestDividendsPost'\n            schema:\n              $ref: '#/components/schemas/dividendsRequest'\n        description: Request object for `Security` dividends.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Latest Dividends for AAPL and MSFT:\n                  $ref: '#/components/examples/latestDividends'\n              schema:\n                $ref: '#/components/schemas/dividendsResponse'\n          description: Array of dividend information for a given date range and list\n            of securities\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/badRequestDateFormat'\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Future Date:\n                  $ref: '#/components/examples/badRequestFutureDate'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Requests dividend information for a given date range and list of securities\n      tags:\n      - Dividends\n      x-contentType: application/json\n      x-accepts: application/json\n  /factset-prices/v1/splits:\n    get:\n      description: Gets the entire history of splits for a given list of identifiers.\n        Information returned includes the split factor, a plain text comment regarding\n        the type of split, and the event date.\n      operationId: getSecuritySplits\n      parameters:\n      - description: The requested list of security identifiers. Accepted ID types\n          include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\n          \u003cp\u003e***ids limit** =  2000 per request*\u003c/p\u003e *\u003cp\u003eMake note, GET Method URL\n          request lines are also limited to a total length of 8192 bytes (8KB). In\n          cases where the service allows for thousands of ids, which may lead to exceeding\n          this request line limit of 8KB, its advised for any requests with large\n          request lines to be requested through the respective \"POST\" method.\u003c/p\u003e*\n        examples:\n          oneEquityId:\n            summary: One Equity Market Identifier\n            value:\n            - AAPL-USA\n          multipleEquityIds:\n            summary: Multiple Equity Market Identifiers\n            value:\n            - FDS-US\n            - AAPL-US\n            - MSFT-US\n        explode: false\n        in: query\n        name: ids\n        required: true\n        schema:\n          items:\n            type: string\n          maxItems: 2000\n          minItems: 1\n          type: array\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Split History for a Single Security - MSFT:\n                  $ref: '#/components/examples/singleSecuritySplits'\n                Split History for a List of Securities:\n                  $ref: '#/components/examples/multipleSecuritySplits'\n              schema:\n                $ref: '#/components/schemas/splitsResponse'\n          description: Array of security splits\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/badRequestDateFormat'\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Future Date:\n                  $ref: '#/components/examples/badRequestFutureDate'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Gets full history of security Splits for a list of `ids`\n      tags:\n      - Splits\n      x-accepts: application/json\n    post:\n      description: Gets the entire history of splits for a given list of identifiers.\n        Information returned includes the split factor, a plain text comment regarding\n        the type of split, and the event date.\n      operationId: getSecuritySplitsForList\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Single Company Daily Prices One Month:\n                $ref: '#/components/examples/splitHistoryMSFTPost'\n              One Year of Monthly Prices for AAPL in 2019:\n                $ref: '#/components/examples/multipleSplitsHistoryPost'\n            schema:\n              $ref: '#/components/schemas/splitsRequest'\n        description: Request object for `Security` split factors.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Splits History for MSFT:\n                  $ref: '#/components/examples/singleSecuritySplits'\n                Split History for a List of Securities:\n                  $ref: '#/components/examples/multipleSecuritySplits'\n              schema:\n                $ref: '#/components/schemas/splitsResponse'\n          description: Array of Splits objects\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/badRequestDateFormat'\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Future Date:\n                  $ref: '#/components/examples/badRequestFutureDate'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Requests splits for a list of `ids`\n      tags:\n      - Splits\n      x-contentType: application/json\n      x-accepts: application/json\n  /factset-prices/v1/shares:\n    get:\n      description: Gets security shares for a list of 'ids' and given date range.\n        Share values returned include security-level and company-level.\n      operationId: getSecurityShares\n      parameters:\n      - description: The requested list of security identifiers. Accepted ID types\n          include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\n          \u003cp\u003e***ids limit** =  1000 per request*\u003c/p\u003e *\u003cp\u003eMake note, GET Method URL\n          request lines are also limited to a total length of 8192 bytes (8KB). In\n          cases where the service allows for thousands of ids, which may lead to exceeding\n          this request line limit of 8KB, its advised for any requests with large\n          request lines to be requested through the respective \"POST\" method.\u003c/p\u003e*\n        examples:\n          oneEquityId:\n            summary: One Equity Market Identifier\n            value:\n            - AAPL-USA\n          multipleEquityIds:\n            summary: Multiple Equity Market Identifiers\n            value:\n            - FDS-US\n            - AAPL-US\n            - MSFT-US\n        explode: false\n        in: query\n        name: ids\n        required: true\n        schema:\n          items:\n            type: string\n          maxItems: 1000\n          minItems: 1\n          type: array\n        style: form\n      - description: |\n          The start date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n        example: 2019-01-01\n        explode: true\n        in: query\n        name: startDate\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          The end date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n        example: 2019-12-31\n        explode: true\n        in: query\n        name: endDate\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Controls the display frequency of the data returned.\n            * **D** = Daily\n            * **W** = Weekly, based on the last day of the week of the start date.\n            * **M** = Monthly, based on the last trading day of the month.\n            * **AM** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n            * **CQ** = Quarterly based on the last trading day of the calendar quarter (March, June, September, or December).\n            * **FQ** = Fiscal Quarter of the company.\n            * **AY** = Actual Annual, based on the start date.\n            * **CY** = Calendar Annual, based on the last trading day of the calendar year.\n            * **FY** = Fiscal Annual, based on the last trading day of the company's fiscal year.\n        examples:\n          Daily:\n            summary: D - Daily frequency display based on trading calendar\n            value: D\n          Weekly:\n            summary: W - Weekly - based on the last day of the week of the start date\n            value: W\n          Monthly:\n            summary: M - Monthly - based on the last trading day of the month.\n            value: M\n          Actual Month:\n            summary: AM - Actual Month - based on the startDate (e.g., if the start\n              date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n            value: AM\n          Calendar Quarterly:\n            summary: CQ - Calendar Quarterly - based on the last day of the week of\n              the startDate\n            value: CQ\n          Fiscal Quarterly:\n            summary: FQ - Fiscal Quarter of the company\n            value: FQ\n          Actual Annual:\n            summary: AY - Actual Annual - based on the startDate\n            value: AY\n          Calendar Annual:\n            summary: CY - Calendar Annual - based on the last trading day of the calendar\n              year.\n            value: CY\n          Fiscal Annual:\n            summary: FY - Fiscal Annual - based on the last trading day of the company's\n              fiscal year.\n            value: FY\n        explode: true\n        in: query\n        name: frequency\n        required: false\n        schema:\n          default: D\n          enum:\n          - D\n          - W\n          - M\n          - AM\n          - CQ\n          - FQ\n          - AY\n          - CY\n          - FY\n          type: string\n        style: form\n      - description: Calendar of data returned. SEVENDAY includes weekends. LOCAL\n          calendar will default to the securities' trading calendar which excludes\n          date records for respective holiday periods.\n        example: FIVEDAY\n        explode: true\n        in: query\n        name: calendar\n        required: false\n        schema:\n          default: FIVEDAY\n          enum:\n          - FIVEDAY\n          - SEVENDAY\n          - LOCAL\n          type: string\n        style: form\n      - description: Code to control split adjustments for shares count.\n        explode: true\n        in: query\n        name: splitAdjust\n        required: false\n        schema:\n          default: SPLIT\n          enum:\n          - SPLIT\n          - UNSPLIT\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                One Year of Monthly Share Counts for AAPL:\n                  $ref: '#/components/examples/singleSecurityShares'\n                Multiple Security Share Counts as of 2019 Year End - FB, AAPL, NFLX, GOOGL:\n                  $ref: '#/components/examples/multipleSecuritiesShares'\n              schema:\n                $ref: '#/components/schemas/sharesResponse'\n          description: Array of security shares\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/badRequestDateFormat'\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Future Date:\n                  $ref: '#/components/examples/badRequestFutureDate'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Gets shares for a list of `ids` as of given date range.\n      tags:\n      - Shares\n      x-accepts: application/json\n    post:\n      description: Gets security shares for a list of 'ids' and given date range.\n        Share values returned include security-level and company-level.\n      operationId: getSecuritySharesForList\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Request One Year of Monthly Share Counts for AAPL:\n                $ref: '#/components/examples/singleSecuritySharesPost'\n              Request Multiple Security Share Counts as of 2019 Year End - FB, AAPL, NFLX, GOOGL:\n                $ref: '#/components/examples/multipleSecuritiesSharesPost'\n            schema:\n              $ref: '#/components/schemas/sharesRequest'\n        description: Request object for `Security` shares.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                One Year of Monthly Share Counts for AAPL:\n                  $ref: '#/components/examples/singleSecurityShares'\n                Multiple Security Share Counts as of 2019 Year End - FB, AAPL, NFLX, GOOGL:\n                  $ref: '#/components/examples/multipleSecuritiesShares'\n              schema:\n                $ref: '#/components/schemas/sharesResponse'\n          description: Array of Shares objects\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/badRequestDateFormat'\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Future Date:\n                  $ref: '#/components/examples/badRequestFutureDate'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Requests shares for a list of `ids` as of given date range.\n      tags:\n      - Shares\n      x-contentType: application/json\n      x-accepts: application/json\n  /factset-prices/v1/market-value:\n    get:\n      description: |\n        Gets market capitalization of list of ids for the company level, security level, calendar, frequency, and currency for a specified date range.\n      operationId: getMarketValue\n      parameters:\n      - description: The requested list of security identifiers. Accepted ID types\n          include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\n          \u003cp\u003e***ids limit** =  2000 per request*\u003c/p\u003e *\u003cp\u003eMake note, GET Method URL\n          request lines are also limited to a total length of 8192 bytes (8KB). In\n          cases where the service allows for thousands of ids, which may lead to exceeding\n          this request line limit of 8KB, its advised for any requests with large\n          request lines to be requested through the respective \"POST\" method.\u003c/p\u003e*\n        examples:\n          oneEquityId:\n            summary: One Equity Market Identifier\n            value:\n            - AAPL-USA\n          multipleEquityIds:\n            summary: Multiple Equity Market Identifiers\n            value:\n            - FDS-US\n            - AAPL-US\n            - MSFT-US\n        explode: false\n        in: query\n        name: ids\n        required: true\n        schema:\n          items:\n            type: string\n          maxItems: 2000\n          minItems: 1\n          type: array\n        style: form\n      - description: |\n          The start date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n        example: 2019-01-01\n        explode: true\n        in: query\n        name: startDate\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          The end date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n        example: 2019-12-31\n        explode: true\n        in: query\n        name: endDate\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Controls the display frequency of the data returned.\n            * **D** = Daily\n            * **W** = Weekly, based on the last day of the week of the start date.\n            * **M** = Monthly, based on the last trading day of the month.\n            * **AM** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n            * **CQ** = Quarterly based on the last trading day of the calendar quarter (March, June, September, or December).\n            * **FQ** = Fiscal Quarter of the company.\n            * **AY** = Actual Annual, based on the start date.\n            * **CY** = Calendar Annual, based on the last trading day of the calendar year.\n            * **FY** = Fiscal Annual, based on the last trading day of the company's fiscal year.\n        examples:\n          Daily:\n            summary: D - Daily frequency display based on trading calendar\n            value: D\n          Weekly:\n            summary: W - Weekly - based on the last day of the week of the start date\n            value: W\n          Monthly:\n            summary: M - Monthly - based on the last trading day of the month.\n            value: M\n          Actual Month:\n            summary: AM - Actual Month - based on the startDate (e.g., if the start\n              date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n            value: AM\n          Calendar Quarterly:\n            summary: CQ - Calendar Quarterly - based on the last day of the week of\n              the startDate\n            value: CQ\n          Fiscal Quarterly:\n            summary: FQ - Fiscal Quarter of the company\n            value: FQ\n          Actual Annual:\n            summary: AY - Actual Annual - based on the startDate\n            value: AY\n          Calendar Annual:\n            summary: CY - Calendar Annual - based on the last trading day of the calendar\n              year.\n            value: CY\n          Fiscal Annual:\n            summary: FY - Fiscal Annual - based on the last trading day of the company's\n              fiscal year.\n            value: FY\n        explode: true\n        in: query\n        name: frequency\n        required: false\n        schema:\n          default: D\n          enum:\n          - D\n          - W\n          - M\n          - AM\n          - CQ\n          - FQ\n          - AY\n          - CY\n          - FY\n          type: string\n        style: form\n      - description: Calendar of data returned. SEVENDAY includes weekends. LOCAL\n          calendar will default to the securities' trading calendar which excludes\n          date records for respective holiday periods.\n        example: FIVEDAY\n        explode: true\n        in: query\n        name: calendar\n        required: false\n        schema:\n          default: FIVEDAY\n          enum:\n          - FIVEDAY\n          - SEVENDAY\n          - LOCAL\n          type: string\n        style: form\n      - description: Currency code for adjusting prices. Default is Local. For a list\n          of currency ISO codes, visit [Online Assistant Page 1470](https://oa.apps.factset.com/pages/1470).\n        example: USD\n        explode: true\n        in: query\n        name: currency\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Market Value of GOOGL as of July 07 2020:\n                  $ref: '#/components/examples/singleMarketValue'\n                Market Value for AAPL and TSLA as of March 29th 2019:\n                  $ref: '#/components/examples/multipleMarketValues'\n              schema:\n                $ref: '#/components/schemas/marketValueResponse'\n          description: Array of company market capitalization values.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/badRequestDateFormat'\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Future Date:\n                  $ref: '#/components/examples/badRequestFutureDate'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Gets the security level and company level market values for a list\n        of `ids` as of given date range and frequency.\n      tags:\n      - Market Value\n      x-accepts: application/json\n    post:\n      description: Requests the market value for a list of `ids` as of given date\n        range.\n      operationId: getMarketValueForList\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Single Company Market Value:\n                $ref: '#/components/examples/singleMarketValuePost'\n              Multiple Company Market Values:\n                $ref: '#/components/examples/multipleMarketValuePost'\n            schema:\n              $ref: '#/components/schemas/marketValueRequest'\n        description: Request object for `Security` market values.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Market Value of GOOGL as of July 07 2020:\n                  $ref: '#/components/examples/singleMarketValue'\n                Market Value for AAPL and TSLA as of March 29th 2019:\n                  $ref: '#/components/examples/multipleMarketValues'\n              schema:\n                $ref: '#/components/schemas/marketValueResponse'\n          description: Array of company market capitalization values.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/badRequestDateFormat'\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Future Date:\n                  $ref: '#/components/examples/badRequestFutureDate'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Requests the market value for a list of `ids` as of given date range.\n      tags:\n      - Market Value\n      x-contentType: application/json\n      x-accepts: application/json\n  /factset-prices/v1/high-low:\n    get:\n      description: |\n        For given security(s), gets the high and low prices with the respective dates on which they occurred. This service gives options for fetching the price as of the close or intraday.\n      operationId: getHighLow\n      parameters:\n      - description: The requested list of security identifiers. Accepted ID types\n          include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\n          \u003cp\u003e***ids limit** =  2000 per request*\u003c/p\u003e *\u003cp\u003eMake note, GET Method URL\n          request lines are also limited to a total length of 8192 bytes (8KB). In\n          cases where the service allows for thousands of ids, which may lead to exceeding\n          this request line limit of 8KB, its advised for any requests with large\n          request lines to be requested through the respective \"POST\" method.\u003c/p\u003e*\n        examples:\n          oneEquityId:\n            summary: One Equity Market Identifier\n            value:\n            - AAPL-USA\n          multipleEquityIds:\n            summary: Multiple Equity Market Identifiers\n            value:\n            - FDS-US\n            - AAPL-US\n            - MSFT-US\n        explode: false\n        in: query\n        name: ids\n        required: true\n        schema:\n          items:\n            type: string\n          maxItems: 2000\n          minItems: 1\n          type: array\n        style: form\n      - description: |\n          The as of date in **YYYY-MM-DD** format. This controls the perspective date in which the period parameter will be computed. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n        example: 2019-07-07\n        explode: true\n        in: query\n        name: date\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          The period of measure for the security's high and low pricing. This does not change display `frequency` but rather the underlying period. For example, if you wish to fetch the latest 52 week high and low price, select 52W. All periods are referencing actual periods of measure, not period-ends where-\n\n            * **D** = Daily\n            * **W** = Weekly, based on the last trading day of the week. Use the 52W for representing the latest year.\n            * **M** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n            * **YTD** = Year-to-Date\n            * **Y** =  Actual Annual, based on the start date.\n        explode: true\n        in: query\n        name: period\n        required: false\n        schema:\n          default: 52W\n          enum:\n          - 1D\n          - 1W\n          - 1M\n          - 3M\n          - 6M\n          - YTD\n          - 52W\n          - 2Y\n          - 3Y\n          - 5Y\n          - 10Y\n          type: string\n        style: form\n      - description: |\n          Controls whether price high and low data is returned intraday or at the close. For example, by selecting INTRADAY, if a security price reached an all time high of 10 during trading hours over the period of measure but closed that day at 8, then the service will return 10. If CLOSE was selected the service would return 8 if that was the high for the period measured.\n        explode: true\n        in: query\n        name: priceType\n        required: false\n        schema:\n          default: CLOSE\n          enum:\n          - INTRADAY\n          - CLOSE\n          type: string\n        style: form\n      - description: Calendar of data returned. SEVENDAY includes weekends. LOCAL\n          calendar will default to the securities' trading calendar which excludes\n          date records for respective holiday periods.\n        example: FIVEDAY\n        explode: true\n        in: query\n        name: calendar\n        required: false\n        schema:\n          default: FIVEDAY\n          enum:\n          - FIVEDAY\n          - SEVENDAY\n          - LOCAL\n          type: string\n        style: form\n      - description: Currency code for adjusting prices. Default is Local. For a list\n          of currency ISO codes, visit [Online Assistant Page 1470](https://oa.apps.factset.com/pages/1470).\n        example: USD\n        explode: true\n        in: query\n        name: currency\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Controls the split, spinoff, and dividend adjustments for the prices. \u003cp\u003eFor more information, visit [Online Assistant Page 614](https://oa.apps.factset.com/pages/614)\u003c/p\u003e\n            * **SPLIT** = Split ONLY Adjusted. This is used by default.\n            * **SPINOFF** = Splits \u0026 Spinoff Adjusted.\n            * **DIVADJ** = Splits, Spinoffs, and Dividends adjusted.\n            * **UNSPLIT** = No Adjustments.\n        examples:\n          split:\n            summary: Split adjusted by default - accounts for splits over security's\n              history.\n            value: SPLIT\n          spinoff:\n            summary: Spinoff Adjusted - accounts for a company's spinoff. Spinoffs\n              are treated as special dividends.\n            value: SPINOFF\n          Dividend Adjusted:\n            summary: Dividend Adjusted\n            value: DIVADJ\n          Unsplit:\n            summary: Unsplit data - overrides the default split adjustment\n            value: UNSPLIT\n        explode: true\n        in: query\n        name: adjust\n        required: false\n        schema:\n          default: SPLIT\n          enum:\n          - SPLIT\n          - SPINOFF\n          - DIVADJ\n          - UNSPLIT\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                \"52 week Price High and Price Low of GOOGL-US as of July 07 2020\":\n                  $ref: '#/components/examples/singleHighLow'\n                \"52 week Price High and Price Low for AAPL-US and TSLA-US as of March 07 2020\":\n                  $ref: '#/components/examples/multipleHighLow'\n              schema:\n                $ref: '#/components/schemas/highLowResponse'\n          description: Array of price high and price low values.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/badRequestDateFormat'\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Future Date:\n                  $ref: '#/components/examples/badRequestFutureDate'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Gets the price high and price low of securities for a list of `ids`\n        as of given date, period and frequency.\n      tags:\n      - High Low\n      x-accepts: application/json\n    post:\n      description: |\n        For given security(s), gets the high and low prices with the respective dates on which they occurred. This service gives options for fetching the price as of the close or intraday.\n      operationId: getHighLowForList\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Single Company Market Value:\n                $ref: '#/components/examples/singleHighLowPost'\n              Multiple Company Market Values:\n                $ref: '#/components/examples/multipleHighLowPost'\n            schema:\n              $ref: '#/components/schemas/highLowRequest'\n        description: Request object for high low prices.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                \"52 week Price High and Price Low of GOOGL-US as of July 07 2020\":\n                  $ref: '#/components/examples/singleHighLow'\n                \"52 week Price High and Price Low of AAPL-US and TSLA-US as of March 07 2020\":\n                  $ref: '#/components/examples/multipleHighLow'\n              schema:\n                $ref: '#/components/schemas/highLowResponse'\n          description: Array of company price high and price low values.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/badRequestDateFormat'\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Future Date:\n                  $ref: '#/components/examples/badRequestFutureDate'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Requests the price high and price low of securities for a list of `ids`\n        as of given date, period and frequency.\n      tags:\n      - High Low\n      x-contentType: application/json\n      x-accepts: application/json\n  /factset-prices/v1/database-rollover:\n    get:\n      description: |\n        Gets zero relative date and last update time for FactSet databases. The dates represent the date that the rollover event happened; the date and time is in **eastern time zone**.  \u003cp\u003eDepending on the ids requested and their respective regions, a requested startDate or endDate used in the various Prices API may reflect different previous close dates. This relative \"zero\" date, meaning - as of yesterday's close - will vary across global regions. This API is designed to help production systems account for regional rollover dates to know when to trigger their processes for different regions to reflect the latest close. The response gives context for AMERICAS, ASIA PACIFIC, and EUROPE. \u003c/p\u003e\n      operationId: getDatabaseRollover\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/rolloverResponse'\n          description: Database rollover data items.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/badRequestDateFormat'\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Future Date:\n                  $ref: '#/components/examples/badRequestFutureDate'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Gets the latest relative rollover date for the database.\n      tags:\n      - Database Rollover\n      x-accepts: application/json\n    post:\n      description: |\n        Gets zero relative date and last update time for FactSet databases. The dates represent the date that the rollover event happened; the date and time is in **eastern time zone**.  \u003cp\u003eDepending on the ids requested and their respective regions, a requested startDate or endDate used in the various Prices API may reflect different previous close dates. This relative \"zero\" date, meaning - as of yesterday's close - will vary across global regions. This API is designed to help production systems account for regional rollover dates to know when to trigger their processes for different regions to reflect the latest close. The response gives context for AMERICAS, ASIA PACIFIC, and EUROPE. \u003c/p\u003e\n      operationId: getDatabaseRolloverForList\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/rolloverResponse'\n          description: Database rollover data items.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/badRequestDateFormat'\n                Bad Request - Missing Required Parameter:\n                  $ref: '#/components/examples/badRequestRequiredParameter'\n                Bad Request - Future Date:\n                  $ref: '#/components/examples/badRequestFutureDate'\n                Bad Request - Invalid Parameter:\n                  $ref: '#/components/examples/badRequestInvalidParameters'\n                Bad Request - Malformed JSON:\n                  $ref: '#/components/examples/badRequestMalformedJSON'\n                Bad Request - Read Timeout:\n                  $ref: '#/components/examples/badRequestReadTimeout'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Bad Request. This can occur for several reasons. Please review\n            the \"message\" for more details.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unauthenticated'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and\n            have successfully generated an API KEY for the IP range you are connecting\n            from. For more help, select the **Report Issue** in the top right corner\n            of this Developer Portal specification card and choose Connectivity 401\n            or 403 Responses.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/forbidden'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: The USERNAME-SERIAL attempted to request the endpoint is not\n            authorized to access. The request was a legal request, but the server\n            is refusing to respond. Please reach out to FactSet Account Team for assistance\n            with authorization.\n        \"415\":\n          content:\n            application/json:\n              examples:\n                Bad Request - Date Format:\n                  $ref: '#/components/examples/unsupportedMediaType'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Unsupported Media Type. This error may be returned when the\n            caller sends a resource in a format that is not accepted by the server.\n            This can be fixed by ensuring that Content-Type header is set to the correct\n            value. In this instance, \"application/json\" would be the appropriate value.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Internal Server Error - Not Writable:\n                  $ref: '#/components/examples/notWritable'\n                Internal Server Error - General Exception:\n                  $ref: '#/components/examples/generalException'\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n          description: Internal Server Error.\n      summary: Gets the latest relative rollover date for the database.\n      tags:\n      - Database Rollover\n      x-accepts: application/json\ncomponents:\n  examples:\n    singleSecurityPrices:\n      description: Single Price Record for AAPL\n      summary: Single Price Record for AAPL as of March 29 2019\n      value:\n        data:\n        - fsymId: MH33D6-R\n          date: 2019-03-29\n          adjDate: 2014-06-09\n          currency: USD\n          price: 189.95\n          priceOpen: 189.83\n          priceHigh: 190.08\n          priceLow: 188.54\n          volume: 23563.96\n          requestId: AAPL\n    twoSecuritiesPrices:\n      description: Price Records for AAPL and TSLA as of March 29 2019\n      summary: Price Records for AAPL and TSLA as of March 29 2019\n      value:\n        data:\n        - fsymId: MH33D6-R\n          date: 2019-03-29\n          adjDate: 2014-06-09\n          currency: USD\n          price: 189.95\n          priceOpen: 189.83\n          priceHigh: 190.08\n          priceLow: 188.54\n          volume: 23563.96\n          requestId: AAPL\n        - fsymId: Q2YN1N-R\n          date: 2019-03-29\n          adjDate: null\n          currency: USD\n          price: 279.86\n          priceOpen: 278.7\n          priceHigh: 280.16\n          priceLow: 274.5\n          volume: 5991.338\n          requestId: TSLA\n    oneMonthSecurityPrices:\n      description: One month of daily open, high, low, and close end-of-day prices\n        and volume for AAPL for March 2019.\n      summary: One month of daily prices for AAPL for March 2019\n      value:\n        data:\n        - fsymId: MH33D6-R\n          date: 2019-03-01\n          adjDate: 2014-06-09\n          currency: USD\n          price: 174.97\n          priceOpen: 174.28\n          priceHigh: 175.15\n          priceLow: 172.89\n          volume: 25886.17\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-04\n          adjDate: 2014-06-09\n          currency: USD\n          price: 175.85\n          priceOpen: 175.69\n          priceHigh: 177.75\n          priceLow: 173.97\n          volume: 27436.2\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-05\n          adjDate: 2014-06-09\n          currency: USD\n          price: 175.53\n          priceOpen: 175.94\n          priceHigh: 176\n          priceLow: 174.54\n          volume: 19737.42\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-06\n          adjDate: 2014-06-09\n          currency: USD\n          price: 174.52\n          priceOpen: 174.67\n          priceHigh: 175.49\n          priceLow: 173.94\n          volume: 20810.38\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-07\n          adjDate: 2014-06-09\n          currency: USD\n          price: 172.5\n          priceOpen: 173.87\n          priceHigh: 174.44\n          priceLow: 172.02\n          volume: 24796.37\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-08\n          adjDate: 2014-06-09\n          currency: USD\n          price: 172.91\n          priceOpen: 170.32\n          priceHigh: 173.07\n          priceLow: 169.5\n          volume: 23999.36\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-11\n          adjDate: 2014-06-09\n          currency: USD\n          price: 178.9\n          priceOpen: 175.49\n          priceHigh: 179.12\n          priceLow: 175.35\n          volume: 32011.03\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-12\n          adjDate: 2014-06-09\n          currency: USD\n          price: 180.91\n          priceOpen: 180\n          priceHigh: 182.67\n          priceLow: 179.37\n          volume: 32467.58\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-13\n          adjDate: 2014-06-09\n          currency: USD\n          price: 181.71\n          priceOpen: 182.25\n          priceHigh: 183.3\n          priceLow: 180.92\n          volume: 31032.52\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-14\n          adjDate: 2014-06-09\n          currency: USD\n          price: 183.73\n          priceOpen: 183.9\n          priceHigh: 184.1\n          priceLow: 182.56\n          volume: 23579.51\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-15\n          adjDate: 2014-06-09\n          currency: USD\n          price: 186.12\n          priceOpen: 184.85\n          priceHigh: 187.33\n          priceLow: 183.74\n          volume: 39042.91\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-18\n          adjDate: 2014-06-09\n          currency: USD\n          price: 188.02\n          priceOpen: 185.8\n          priceHigh: 188.39\n          priceLow: 185.79\n          volume: 26219.83\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-19\n          adjDate: 2014-06-09\n          currency: USD\n          price: 186.53\n          priceOpen: 188.35\n          priceHigh: 188.99\n          priceLow: 185.92\n          volume: 31646.37\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-20\n          adjDate: 2014-06-09\n          currency: USD\n          price: 188.16\n          priceOpen: 186.23\n          priceHigh: 189.49\n          priceLow: 184.73\n          volume: 31035.23\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-21\n          adjDate: 2014-06-09\n          currency: USD\n          price: 195.09\n          priceOpen: 190.02\n          priceHigh: 196.33\n          priceLow: 189.81\n          volume: 51034.24\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-22\n          adjDate: 2014-06-09\n          currency: USD\n          price: 191.05\n          priceOpen: 195.34\n          priceHigh: 197.69\n          priceLow: 190.78\n          volume: 42407.67\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-25\n          adjDate: 2014-06-09\n          currency: USD\n          price: 188.74\n          priceOpen: 191.51\n          priceHigh: 191.98\n          priceLow: 186.6\n          volume: 43845.29\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-26\n          adjDate: 2014-06-09\n          currency: USD\n          price: 186.79\n          priceOpen: 191.664\n          priceHigh: 192.88\n          priceLow: 184.58\n          volume: 49800.54\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-27\n          adjDate: 2014-06-09\n          currency: USD\n          price: 188.47\n          priceOpen: 188.75\n          priceHigh: 189.76\n          priceLow: 186.55\n          volume: 29848.43\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-28\n          adjDate: 2014-06-09\n          currency: USD\n          price: 188.72\n          priceOpen: 188.95\n          priceHigh: 189.559\n          priceLow: 187.53\n          volume: 20780.36\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-29\n          adjDate: 2014-06-09\n          currency: USD\n          price: 189.95\n          priceOpen: 189.83\n          priceHigh: 190.08\n          priceLow: 188.54\n          volume: 23563.96\n          requestId: AAPL\n    multipleIdsOneYearPost:\n      description: One Year of Daily Prices for APPL and Tesla in Calendar 2019 Year\n      summary: One Year of Daily Prices for APPL and Tesla in Calendar 2019 Year\n      value:\n        ids:\n        - AAPL-US\n        - TSLA-US\n        startDate: 2019-01-01\n        endDate: 2019-12-31\n        frequency: D\n        calendar: FIVEDAY\n        currency: LOCAL\n        adjust: SPLIT\n    singleIdsOneYearMonthlyPost:\n      description: One Year of Monthly Prices for AAPL-US in Calendar 2019 Year\n      summary: One Year of Monthly Prices for AAPL-US in Calendar 2019 Year\n      value:\n        ids:\n        - AAPL-US\n        startDate: 2019-01-01\n        endDate: 2019-12-31\n        frequency: M\n        calendar: FIVEDAY\n        currency: LOCAL\n        adjust: SPLIT\n    priceAdjustedForDividendsMonthlyPost:\n      summary: Price adjusted for splits, spinoffs and dividends.\n      value:\n        ids:\n        - AAPL-US\n        startDate: 2019-01-01\n        endDate: 2019-12-31\n        frequency: M\n        calendar: FIVEDAY\n        currency: LOCAL\n        adjust: DIVADJ\n    singleSecurityPricesFixedIncome:\n      description: Single Fixed Income Price Record for Apple Inc. 4.65% 23-FEB-2046\n      summary: Single Fixed Income Price Record for Apple Inc. 4.65% 23-FEB-2046\n      value:\n        data:\n        - fsymId: MCCBMM-S\n          date: 2020-07-13\n          securityType: BDNT\n          issuerEntityId: 000C7F-E\n          issuerType: CORP\n          priceBid: 141.212\n          priceMid: 141.212\n          priceAsk: 141.212\n          requestId: 037833BX\n    multipleSecurityPricesFixedIncome:\n      description: Multiple Fixed Income Prices for a sample of different Security\n        Types\n      summary: Multiple Fixed Income Prices for a sample of different Security Types\n      value:\n        data:\n        - fsymId: MCCBMM-S\n          date: 2020-07-13\n          securityType: BDNT\n          issuerEntityId: 000C7F-E\n          issuerType: CORP\n          priceBid: 141.212\n          priceMid: 141.212\n          priceAsk: 141.212\n          requestId: 037833BX\n        - fsymId: R388JW-S\n          date: 2020-07-13\n          securityType: BOND\n          issuerEntityId: 0DN2GL-E\n          issuerType: MUNI\n          priceBid: 100.091\n          priceMid: 100.238\n          priceAsk: 100.384\n          requestId: 853207EZ\n        - fsymId: SG86MQ-S\n          date: 2020-07-13\n          securityType: BLDN\n          issuerEntityId: 05MCSG-E\n          issuerType: SOV\n          priceBid: 99.847\n          priceMid: 99.847\n          priceAsk: 99.847\n          requestId: 9127963H\n    singleFixedOneYearPost:\n      description: One Year of Daily Fixed Income Prices for Apple Inc. 4.65% 23-FEB-2046\n        in Calendar 2019 Year\n      summary: One Year of Daily Fixed Income Prices for Apple Inc. 4.65% 23-FEB-2046\n        in Calendar 2019 Year\n      value:\n        ids:\n        - 037833BX\n        startDate: 2019-01-01\n        endDate: 2019-12-31\n        frequency: D\n    multipleFixedPricesPost:\n      description: Latest Daily Fixed Income Prices for three Fixed Income Securities\n      summary: Latest Daily Fixed Income Prices for three Fixed Income Securities\n      value:\n        ids:\n        - 037833BX\n        - 853207EZ\n        - 9127963H\n        frequency: D\n    \"52WKReturnAAPL\":\n      description: Rolling 52W Total Return for apple as of 2020-06-11. Request URL\n        https://api.factset.com/content/factset-prices/v1/returns?ids=AAPL\u0026frequency=D\u0026dividendAdjust=EXDATE_C\u0026rollingPeriod=52W\n      summary: Rolling 52W Week Total Return for AAPL-US\n      value:\n        data:\n        - fsymId: MH33D6-R\n          date: 2020-06-11\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: 74.47648\n          requestId: AAPL\n    fangStocksReturn:\n      description: The latest Month return for FANG Stocks - Facebook, Apple, Netflix,\n        Google.\n      summary: The latest Month return for FANG Stocks - Facebook, Apple, Netflix,\n        Google.\n      value:\n        data:\n        - fsymId: QLGSL2-R\n          date: 2020-06-11\n          adjDate: null\n          currency: USD\n          totalReturn: 5.2772284\n          requestId: FB\n        - fsymId: MH33D6-R\n          date: 2020-06-11\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: 6.6315293\n          requestId: AAPL\n        - fsymId: C4C0BL-R\n          date: 2020-06-11\n          adjDate: 2015-07-15\n          currency: USD\n          totalReturn: -3.3959866\n          requestId: NFLX\n        - fsymId: HTM0LK-R\n          date: 2020-06-11\n          adjDate: 2014-04-03\n          currency: USD\n          totalReturn: -0.12040138\n          requestId: GOOGL\n    dailyReturnsAPPL:\n      description: One Month Daily Returns for AAPL-US During December 2019. Note,\n        each total Return value is representative of the dates return value with dividends\n        reinvested using EXDATE_C\n      summary: One Month Daily Returns for AAPL-US During December 2019\n      value:\n        data:\n        - fsymId: MH33D6-R\n          date: 2019-11-29\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: -0.22028089\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-12-02\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: -1.1562169\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-12-03\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: -1.7830074\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-12-04\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: 0.8826256\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-12-05\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: 1.4671087\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-12-06\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: 1.9316196\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-12-09\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: -1.4000118\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-12-10\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: 0.5844474\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-12-11\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: 0.85294247\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-12-12\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: 0.2548337\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-12-13\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: 1.3593197\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-12-16\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: 1.7117858\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-12-17\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: 0.19652843\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-12-18\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: -0.2389431\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-12-19\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: 0.10008812\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-12-20\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: -0.20712614\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-12-23\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: 1.6318321\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-12-24\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: 0.09506941\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-12-25\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: 0\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-12-26\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: 1.984036\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-12-27\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: -0.037950277\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-12-30\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: 0.5935073\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-12-31\n          adjDate: 2014-06-09\n          currency: USD\n          totalReturn: 0.7306576\n          requestId: AAPL\n    fangStocksReturnPost:\n      description: Fetch the latest one month returns for the FANG stocks - FB, AAPL,\n        NFLX, and GOOGL\n      summary: Fetch the latest one month returns for the FANG stocks - FB, AAPL,\n        NFLX, and GOOGL\n      value:\n        ids:\n        - FB-US\n        - AAPL-US\n        - NFLX-US\n        - GOOGL-US\n        frequency: D\n        calendar: FIVEDAY\n        currency: LOCAL\n        dividendAdjust: EXDATE_C\n        rollingPeriod: 1M\n    dailyPriceChangeAMZNPost:\n      description: Fetch daily price changes for AAPL for the year 2019\n      summary: Fetch daily price changes for AAPL for the year 2019\n      value:\n        ids:\n        - AMZN-US\n        startDate: 2018-12-31\n        endDate: 2019-12-31\n        frequency: D\n        calendar: FIVEDAY\n        currency: LOCAL\n        dividendAdjust: PRICE\n    latestDividends:\n      description: Latest Dividends for AAPL and MSFT\n      summary: Latest Dividends for AAPL and MSFT\n      value:\n        data:\n        - fsymId: MH33D6-R\n          divsExDate: 2020-02-07\n          adjDate: 2014-06-09\n          currency: USD\n          divsPaid: 0.77\n          divsRecDate: 2020-02-10\n          divsPayDate: 2020-02-13\n          divsTypeC: 1049\n          divsTypeD: U.S. Currency\n          divsTaxC: null\n          divsTaxD: null\n          divsNGFlag: null\n          divsNGEquiv: 0\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          divsExDate: 2020-05-08\n          adjDate: 2014-06-09\n          currency: USD\n          divsPaid: 0.82\n          divsRecDate: 2020-05-11\n          divsPayDate: 2020-05-14\n          divsTypeC: 1049\n          divsTypeD: U.S. Currency\n          divsTaxC: null\n          divsTaxD: null\n          divsNGFlag: null\n          divsNGEquiv: 0\n          requestId: AAPL\n        - fsymId: P8R3C2-R\n          divsExDate: 2020-02-19\n          adjDate: 2003-02-18\n          currency: USD\n          divsPaid: 0.51\n          divsRecDate: 2020-02-20\n          divsPayDate: 2020-03-12\n          divsTypeC: 1049\n          divsTypeD: U.S. Currency\n          divsTaxC: null\n          divsTaxD: null\n          divsNGFlag: null\n          divsNGEquiv: 0\n          requestId: MSFT\n        - fsymId: P8R3C2-R\n          divsExDate: 2020-05-20\n          adjDate: 2003-02-18\n          currency: USD\n          divsPaid: 0.51\n          divsRecDate: 2020-05-21\n          divsPayDate: 2020-06-11\n          divsTypeC: 1049\n          divsTypeD: U.S. Currency\n          divsTaxC: null\n          divsTaxD: null\n          divsNGFlag: null\n          divsNGEquiv: 0\n          requestId: MSFT\n    \"3yrDividendsAPPL\":\n      description: Three Years of Dividends for AAPL as of 2019\n      summary: Three Years of Dividends for AAPL as of 2019\n      value:\n        data:\n        - fsymId: MH33D6-R\n          divsExDate: 2017-02-09\n          adjDate: 2014-06-09\n          currency: USD\n          divsPaid: 0.57\n          divsRecDate: 2017-02-13\n          divsPayDate: 2017-02-16\n          divsTypeC: 1049\n          divsTypeD: U.S. Currency\n          divsTaxC: null\n          divsTaxD: null\n          divsNGFlag: null\n          divsNGEquiv: 0\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          divsExDate: 2017-05-11\n          adjDate: 2014-06-09\n          currency: USD\n          divsPaid: 0.63\n          divsRecDate: 2017-05-15\n          divsPayDate: 2017-05-18\n          divsTypeC: 1049\n          divsTypeD: U.S. Currency\n          divsTaxC: null\n          divsTaxD: null\n          divsNGFlag: null\n          divsNGEquiv: 0\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          divsExDate: 2017-08-10\n          adjDate: 2014-06-09\n          currency: USD\n          divsPaid: 0.63\n          divsRecDate: 2017-08-14\n          divsPayDate: 2017-08-17\n          divsTypeC: 1049\n          divsTypeD: U.S. Currency\n          divsTaxC: null\n          divsTaxD: null\n          divsNGFlag: null\n          divsNGEquiv: 0\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          divsExDate: 2017-11-10\n          adjDate: 2014-06-09\n          currency: USD\n          divsPaid: 0.63\n          divsRecDate: 2017-11-13\n          divsPayDate: 2017-11-16\n          divsTypeC: 1049\n          divsTypeD: U.S. Currency\n          divsTaxC: null\n          divsTaxD: null\n          divsNGFlag: null\n          divsNGEquiv: 0\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          divsExDate: 2018-02-09\n          adjDate: 2014-06-09\n          currency: USD\n          divsPaid: 0.63\n          divsRecDate: 2018-02-12\n          divsPayDate: 2018-02-15\n          divsTypeC: 1049\n          divsTypeD: U.S. Currency\n          divsTaxC: null\n          divsTaxD: null\n          divsNGFlag: null\n          divsNGEquiv: 0\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          divsExDate: 2018-05-11\n          adjDate: 2014-06-09\n          currency: USD\n          divsPaid: 0.73\n          divsRecDate: 2018-05-14\n          divsPayDate: 2018-05-17\n          divsTypeC: 1049\n          divsTypeD: U.S. Currency\n          divsTaxC: null\n          divsTaxD: null\n          divsNGFlag: null\n          divsNGEquiv: 0\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          divsExDate: 2018-08-10\n          adjDate: 2014-06-09\n          currency: USD\n          divsPaid: 0.73\n          divsRecDate: 2018-08-13\n          divsPayDate: 2018-08-16\n          divsTypeC: 1049\n          divsTypeD: U.S. Currency\n          divsTaxC: null\n          divsTaxD: null\n          divsNGFlag: null\n          divsNGEquiv: 0\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          divsExDate: 2018-11-08\n          adjDate: 2014-06-09\n          currency: USD\n          divsPaid: 0.73\n          divsRecDate: 2018-11-12\n          divsPayDate: 2018-11-15\n          divsTypeC: 1049\n          divsTypeD: U.S. Currency\n          divsTaxC: null\n          divsTaxD: null\n          divsNGFlag: null\n          divsNGEquiv: 0\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          divsExDate: 2019-02-08\n          adjDate: 2014-06-09\n          currency: USD\n          divsPaid: 0.73\n          divsRecDate: 2019-02-11\n          divsPayDate: 2019-02-14\n          divsTypeC: 1049\n          divsTypeD: U.S. Currency\n          divsTaxC: null\n          divsTaxD: null\n          divsNGFlag: null\n          divsNGEquiv: 0\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          divsExDate: 2019-05-10\n          adjDate: 2014-06-09\n          currency: USD\n          divsPaid: 0.77\n          divsRecDate: 2019-05-13\n          divsPayDate: 2019-05-16\n          divsTypeC: 1049\n          divsTypeD: U.S. Currency\n          divsTaxC: null\n          divsTaxD: null\n          divsNGFlag: null\n          divsNGEquiv: 0\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          divsExDate: 2019-08-09\n          adjDate: 2014-06-09\n          currency: USD\n          divsPaid: 0.77\n          divsRecDate: 2019-08-12\n          divsPayDate: 2019-08-15\n          divsTypeC: 1049\n          divsTypeD: U.S. Currency\n          divsTaxC: null\n          divsTaxD: null\n          divsNGFlag: null\n          divsNGEquiv: 0\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          divsExDate: 2019-11-07\n          adjDate: 2014-06-09\n          currency: USD\n          divsPaid: 0.77\n          divsRecDate: 2019-11-11\n          divsPayDate: 2019-11-14\n          divsTypeC: 1049\n          divsTypeD: U.S. Currency\n          divsTaxC: null\n          divsTaxD: null\n          divsNGFlag: null\n          divsNGEquiv: 0\n          requestId: AAPL\n    singleSecurityDividends:\n      description: AAPL Dividends in 2019\n      summary: AAPL Dividends in 2019\n      value:\n        ids:\n        - AAPL-US\n        startDate: 2018-12-31\n        endDate: 2019-12-31\n        currency: LOCAL\n        adjust: SPLIT\n    latestDividendsPost:\n      description: Latest Dividends for AAPL and MSFT\n      summary: Latest Dividends for AAPL and MSFT\n      value:\n        ids:\n        - AAPL-US\n        - MSFT-US\n        startDate: \"\"\n        endDate: \"\"\n        currency: LOCAL\n        adjust: SPLIT\n    singleSecuritySplits:\n      description: Split History for MSFT\n      summary: Split History for MSFT\n      value:\n        data:\n        - fsymId: P8R3C2-R\n          date: 1987-09-21\n          splitFactor: 0.5\n          splitComment: null\n          requestId: MSFT\n        - fsymId: P8R3C2-R\n          date: 1990-04-16\n          splitFactor: 0.5\n          splitComment: null\n          requestId: MSFT\n        - fsymId: P8R3C2-R\n          date: 1991-06-27\n          splitFactor: 0.6666667\n          splitComment: null\n          requestId: MSFT\n        - fsymId: P8R3C2-R\n          date: 1992-06-15\n          splitFactor: 0.6666667\n          splitComment: null\n          requestId: MSFT\n        - fsymId: P8R3C2-R\n          date: 1994-05-23\n          splitFactor: 0.5\n          splitComment: null\n          requestId: MSFT\n        - fsymId: P8R3C2-R\n          date: 1996-12-09\n          splitFactor: 0.5\n          splitComment: null\n          requestId: MSFT\n        - fsymId: P8R3C2-R\n          date: 1998-02-23\n          splitFactor: 0.5\n          splitComment: null\n          requestId: MSFT\n        - fsymId: P8R3C2-R\n          date: 1999-03-29\n          splitFactor: 0.5\n          splitComment: null\n          requestId: MSFT\n        - fsymId: P8R3C2-R\n          date: 2003-02-18\n          splitFactor: 0.5\n          splitComment: 'Split: 2 for 1'\n          requestId: MSFT\n    multipleSecuritySplits:\n      description: Split History for Multiple Securities - GOOGL, MSFT, AMZN\n      summary: Split History for GOOGL, MSFT, and AMZN\n      value:\n        data:\n        - fsymId: HTM0LK-R\n          date: 2014-04-03\n          splitFactor: 0.500484\n          splitComment: 'Split: 2 for 1.000968'\n          requestId: GOOGL\n        - fsymId: P8R3C2-R\n          date: 1987-09-21\n          splitFactor: 0.5\n          splitComment: null\n          requestId: MSFT\n        - fsymId: P8R3C2-R\n          date: 1990-04-16\n          splitFactor: 0.5\n          splitComment: null\n          requestId: MSFT\n        - fsymId: P8R3C2-R\n          date: 1991-06-27\n          splitFactor: 0.6666667\n          splitComment: null\n          requestId: MSFT\n        - fsymId: P8R3C2-R\n          date: 1992-06-15\n          splitFactor: 0.6666667\n          splitComment: null\n          requestId: MSFT\n        - fsymId: P8R3C2-R\n          date: 1994-05-23\n          splitFactor: 0.5\n          splitComment: null\n          requestId: MSFT\n        - fsymId: P8R3C2-R\n          date: 1996-12-09\n          splitFactor: 0.5\n          splitComment: null\n          requestId: MSFT\n        - fsymId: P8R3C2-R\n          date: 1998-02-23\n          splitFactor: 0.5\n          splitComment: null\n          requestId: MSFT\n        - fsymId: P8R3C2-R\n          date: 1999-03-29\n          splitFactor: 0.5\n          splitComment: null\n          requestId: MSFT\n        - fsymId: P8R3C2-R\n          date: 2003-02-18\n          splitFactor: 0.5\n          splitComment: 'Split: 2 for 1'\n          requestId: MSFT\n        - fsymId: MCNYYL-R\n          date: 1998-06-02\n          splitFactor: 0.5\n          splitComment: null\n          requestId: AMZN\n        - fsymId: MCNYYL-R\n          date: 1999-01-05\n          splitFactor: 0.33333334\n          splitComment: null\n          requestId: AMZN\n        - fsymId: MCNYYL-R\n          date: 1999-09-02\n          splitFactor: 0.5\n          splitComment: null\n          requestId: AMZN\n    splitHistoryMSFTPost:\n      description: Split History Request for MSFT\n      summary: Split History Request for MSFT\n      value:\n        ids:\n        - MSFT-US\n    multipleSplitsHistoryPost:\n      description: Splits History for GOOGL, MSFT, and AMZN\n      summary: Splits History for GOOGL, MSFT, and AMZN\n      value:\n        ids:\n        - GOOGL-US\n        - MSFT-US\n        - AMZN-US\n    singleSecurityShares:\n      description: Latest Dividends for AAPL and MSFT\n      summary: One Year of Monthly Share Values for AAPL\n      value:\n        data:\n        - fsymId: MH33D6-R\n          date: 2018-12-31\n          adjDate: 2014-06-09\n          sharesSecurity: 4745398000\n          sharesCompany: 4.74539794921875E9\n          sharesCompanyNontraded: 4.74539794921875E9\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-01-31\n          adjDate: 2014-06-09\n          sharesSecurity: 4715280000\n          sharesCompany: 4.71527978515625E9\n          sharesCompanyNontraded: 4.71527978515625E9\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-02-28\n          adjDate: 2014-06-09\n          sharesSecurity: 4715280000\n          sharesCompany: 4.71527978515625E9\n          sharesCompanyNontraded: 4.71527978515625E9\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-03-29\n          adjDate: 2014-06-09\n          sharesSecurity: 4715280000\n          sharesCompany: 4.71527978515625E9\n          sharesCompanyNontraded: 4.71527978515625E9\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-04-30\n          adjDate: 2014-06-09\n          sharesSecurity: 4601075000\n          sharesCompany: 4.6010751953125E9\n          sharesCompanyNontraded: 4.6010751953125E9\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-05-31\n          adjDate: 2014-06-09\n          sharesSecurity: 4601075000\n          sharesCompany: 4.6010751953125E9\n          sharesCompanyNontraded: 4.6010751953125E9\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-06-28\n          adjDate: 2014-06-09\n          sharesSecurity: 4601075000\n          sharesCompany: 4.6010751953125E9\n          sharesCompanyNontraded: 4.6010751953125E9\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-07-31\n          adjDate: 2014-06-09\n          sharesSecurity: 4519180300\n          sharesCompany: 4.51918017578125E9\n          sharesCompanyNontraded: 4.51918017578125E9\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-08-30\n          adjDate: 2014-06-09\n          sharesSecurity: 4519180300\n          sharesCompany: 4.51918017578125E9\n          sharesCompanyNontraded: 4.51918017578125E9\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-09-30\n          adjDate: 2014-06-09\n          sharesSecurity: 4519180300\n          sharesCompany: 4.51918017578125E9\n          sharesCompanyNontraded: 4.51918017578125E9\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-10-31\n          adjDate: 2014-06-09\n          sharesSecurity: 4443265000\n          sharesCompany: 4.44326513671875E9\n          sharesCompanyNontraded: 4.44326513671875E9\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-11-29\n          adjDate: 2014-06-09\n          sharesSecurity: 4443265000\n          sharesCompany: 4.44326513671875E9\n          sharesCompanyNontraded: 4.44326513671875E9\n          requestId: AAPL\n        - fsymId: MH33D6-R\n          date: 2019-12-31\n          adjDate: 2014-06-09\n          sharesSecurity: 4443265000\n          sharesCompany: 4.44326513671875E9\n          sharesCompanyNontraded: 4.44326513671875E9\n          requestId: AAPL\n    multipleSecuritiesShares:\n      description: Latest Dividends for AAPL and MSFT\n      summary: Multiple Security Share Values as of 2019 Year End - FB, AAPL, NFLX,\n        GOOGL\n      value:\n        data:\n        - fsymId: QLGSL2-R\n          date: 2019-12-31\n          adjDate: null\n          sharesSecurity: 2406468000\n          sharesCompany: 2.40646801757812E9\n          sharesCompanyNontraded: 2.85146801757812E9\n          requestId: FB\n        - fsymId: MH33D6-R\n          date: 2019-12-31\n          adjDate: 2014-06-09\n          sharesSecurity: 4443265000\n          sharesCompany: 4.44326513671875E9\n          sharesCompanyNontraded: 4.44326513671875E9\n          requestId: AAPL\n        - fsymId: C4C0BL-R\n          date: 2019-12-31\n          adjDate: 2015-07-15\n          sharesSecurity: 438251000\n          sharesCompany: 4.38251007080078E8\n          sharesCompanyNontraded: 4.38251007080078E8\n          requestId: NFLX\n        - fsymId: HTM0LK-R\n          date: 2019-12-31\n          adjDate: 2014-04-03\n          sharesSecurity: 299828000\n          sharesCompany: 6.41894012451172E8\n          sharesCompanyNontraded: 6.88335012451172E8\n          requestId: GOOGL\n    singleSecuritySharesPost:\n      description: Request Monthly Shares Values for AAPL for 2019 calendar year\n      summary: Request Monthly Shares Values for AAPL for 2019 calendar year\n      value:\n        ids:\n        - AAPL-US\n        startDate: 2018-12-31\n        endDate: 2019-12-31\n        frequency: M\n        calendar: FIVEDAY\n        splitAdjust: SPLIT\n    multipleSecuritiesSharesPost:\n      description: Request Multiple Security Share Counts as of 2019 year end - FB,\n        AAPL, NFLX, GOOGL. Note the startDate and endDate must both be equal to the\n        single day requested, if one is left blank yesterday's close will be used\n        as default.\n      summary: Request Multiple Security Share Counts as of 2019 year end - FB, AAPL,\n        NFLX, GOOGL\n      value:\n        ids:\n        - FB-US\n        - AAPL-US\n        - NFLX-US\n        - GOOGL-US\n        startDate: 2019-12-31\n        endDate: 2019-12-31\n        frequency: D\n        calendar: FIVEDAY\n        splitAdjust: SPLIT\n    singleMarketValue:\n      description: Single Market Value Record for GOOGL\n      summary: Single Market Value Record for GOOGL as of July 7 2020\n      value:\n        data:\n        - fsymId: HTM0LK-R\n          date: 2020-07-07\n          currency: USD\n          entityMarketValue: 1.02236284113631E12\n          entityMarketValueExNotTraded: 9.5276858245333E11\n          securityMarketValue: 4.499706573425E11\n          requestId: GOOGL\n    multipleMarketValues:\n      description: Multiple Market Value Records for GOOGL and TSLA as of July 7 2020\n      summary: Multiple Market Value Records for GOOGL and TSLA as of July 7 2020\n      value:\n        data:\n        - fsymId: HTM0LK-R\n          date: 2020-07-07\n          currency: USD\n          entityMarketValue: 1.02236284113631E12\n          entityMarketValueExNotTraded: 9.5276858245333E11\n          securityMarketValue: 4.499706573425E11\n          requestId: GOOGL\n        - fsymId: Q2YN1N-R\n          date: 2020-07-07\n          currency: USD\n          entityMarketValue: 2.577849467011E11\n          entityMarketValueExNotTraded: 2.577849467011E11\n          securityMarketValue: 257784978430\n          requestId: TSLA\n    singleMarketValuePost:\n      description: Requesting One Year of Daily Market Values for GOOGL in Calendar\n        2019 Year\n      summary: Requesting One Year of Daily Market Values for GOOGL Calendar 2019\n        Year\n      value:\n        ids:\n        - GOOGL-US\n        startDate: 2019-01-01\n        endDate: 2019-12-31\n        frequency: D\n        calendar: FIVEDAY\n        currency: USD\n    multipleMarketValuePost:\n      description: Requesting One Year of Market Values on a monthly frequency for\n        GOOGL and TSLA in Calendar 2019 Year\n      summary: Requesting One Year of Market Values on a monthly frequency for GOOGL\n        and TSLA Calendar 2019 Year\n      value:\n        ids:\n        - GOOGL-US\n        - TSLA-US\n        startDate: 2019-01-01\n        endDate: 2019-12-31\n        frequency: M\n        calendar: FIVEDAY\n        currency: USD\n    singleSecurityReferences:\n      description: Single Security Reference Details\n      summary: Single Security Reference Details\n      value:\n        data:\n        - fsymId: MH33D6-R\n          name: APPLE INC\n          secType: Common stock\n          secTypeCode: \"0\"\n          secTypeCodeDet: \"10\"\n          currency: USD\n          country: UNITED STATES\n          primaryExchange: NASDAQ\n          exchangeCountry: UNITED STATES\n          localIndex: SP50\n          nextTradingHolidayDate: 2020-11-26\n          firstDate: 1980-12-12\n          lastDate: 2020-10-13\n          requestId: AAPL-USA\n    multipleSecurityReferences:\n      description: Multiple Security Reference Details\n      summary: Multiple Security Reference Details\n      value:\n        data:\n        - fsymId: SQFMK3-R\n          name: FACTSET RESH SYS INC\n          secType: Common stock\n          secTypeCode: \"0\"\n          secTypeCodeDet: \"10\"\n          currency: USD\n          country: UNITED STATES\n          primaryExchange: NYSE\n          exchangeCountry: UNITED STATES\n          localIndex: SP50\n          nextTradingHolidayDate: 2020-11-26\n          firstDate: 1996-06-28\n          lastDate: 2020-10-13\n          requestId: FDS-US\n        - fsymId: MH33D6-R\n          name: APPLE INC\n          secType: Common stock\n          secTypeCode: \"0\"\n          secTypeCodeDet: \"10\"\n          currency: USD\n          country: UNITED STATES\n          primaryExchange: NASDAQ\n          exchangeCountry: UNITED STATES\n          localIndex: SP50\n          nextTradingHolidayDate: 2020-11-26\n          firstDate: 1980-12-12\n          lastDate: 2020-10-13\n          requestId: AAPL-US\n        - fsymId: P8R3C2-R\n          name: MICROSOFT CORP\n          secType: Common stock\n          secTypeCode: \"0\"\n          secTypeCodeDet: \"10\"\n          currency: USD\n          country: UNITED STATES\n          primaryExchange: NASDAQ\n          exchangeCountry: UNITED STATES\n          localIndex: SP50\n          nextTradingHolidayDate: 2020-11-26\n          firstDate: 1986-03-13\n          lastDate: 2020-10-13\n          requestId: MSFT-US\n    multipleReferencesPost:\n      description: Requesting Multiple Security References\n      summary: Requesting Multiple Security References\n      value:\n        ids:\n        - GOOGL-US\n        - TSLA-US\n    singleHighLow:\n      description: Price High and Price Low for a Single Security for 52 week period\n      summary: Price High and Price Low for a Single Security for 52 week period\n      value:\n        data:\n        - adjDate: 2014-04-03\n          date: 2020-07-07\n          fsymId: HTM0LK-R\n          period: 52W\n          priceHigh: 1524.87\n          priceLow: 1054.13\n          priceLowDate: 2020-03-23\n          priceHighDate: 2020-02-19\n          requestId: GOOGL-US\n    multipleHighLow:\n      description: Price High and Price Low for a Multiple Securities for 52 week\n        period\n      summary: Price High and Price Low for Multiple Securities for 52 week period\n      value:\n        data:\n        - adjDate: 2020-08-31\n          date: 2020-03-06\n          fsymId: MH33D6-R\n          period: 52W\n          priceHigh: 81.8\n          priceLow: 43.125\n          priceLowDate: 2020-03-27\n          priceHighDate: 2020-02-12\n          requestId: AAPL-US\n        - adjDate: 2020-08-31\n          date: 2020-03-06\n          fsymId: Q2YN1N-R\n          period: 52W\n          priceHigh: 183.48\n          priceLow: 35.79\n          priceLowDate: 2020-06-03\n          priceHighDate: 2020-02-19\n          requestId: TSLA-US\n    singleHighLowPost:\n      description: Price High and Price Low for a Single Security for 52 week period\n      summary: Requesting Price High and Price Low for a Single Security for 52 week\n        period\n      value:\n        ids:\n        - GOOGL-US\n        date: 2020-07-07\n        period: 52W\n        priceType: CLOSE\n        calendar: FIVEDAY\n        currency: USD\n        adjust: SPLIT\n    multipleHighLowPost:\n      description: Price High and Price Low for Multiple Securities for 52 week period\n      summary: Requesting Price High and Price Low for Multiple Securities for 52\n        week period\n      value:\n        ids:\n        - AAPL-US\n        - TSLA-US\n        date: 2020-07-07\n        period: 52W\n        priceType: CLOSE\n        calendar: FIVEDAY\n        currency: USD\n        adjust: SPLIT\n    singleRSCompundRT:\n      description: Returns result for the given ticker price performance and annualized\n        returns analysis with compound return type.\n      summary: Requesting returns details for single company with compound return\n        type.\n      value:\n        ids:\n        - GOOGL-US\n        date: 2020-10-09\n        dividendAdjust: EXDATE_C\n        calendar: FIVEDAY\n        currency: USD\n    multipleRSSimpleRT:\n      description: Returns result for the given tickers price performance and annualized\n        returns analysis with simple return type.\n      summary: Requesting returns details for Multiple companies with simple return\n        type.\n      value:\n        ids:\n        - GOOGL-US\n        - IBM-US\n        date: 2020-10-09\n        dividendAdjust: EXDATE\n        calendar: FIVEDAY\n        currency: USD\n    singleRSCompundRTResponse:\n      description: Returns result for the given ticker price performance and annualized\n        returns analysis with compound return type.\n      summary: Requesting returns details for single company with compound return\n        type.\n      value:\n        data:\n        - currency: USD\n          date: 2020-09-10\n          dividendAdjust: EXDATE_C\n          fiveYearAnnualized: 18.892164\n          fsymId: HTM0LK-R\n          ipoToDateAnnualized: 23.792849\n          monthToDate: -5.05054\n          nineMonth: 15.2164345\n          oneDay: 0\n          oneMonth: 3.3678055\n          oneYear: 28.326284\n          quarterToDate: 9.109688\n          sixMonth: 21.335184\n          tenYearAnnualized: 20.567951\n          thirtyYearAnnualized: null\n          threeMonth: 5.634606\n          threeYearAnnualized: 17.971731\n          twentyYearAnnualized: null\n          twoYearAnnualized: 14.737806\n          weekToDate: -2.1489859\n          yearToDate: 15.517509\n          requestId: GOOGL-US\n    multipleRSSimpleRTResponse:\n      description: Returns result for the given tickers returns and annualized returns\n        analysis with simple return type.\n      summary: Requesting returns details for multiple companies with simple return\n        type.\n      value:\n        data:\n        - currency: USD\n          date: 2020-09-10\n          dividendAdjust: EXDATE\n          fiveYearAnnualized: 18.892164\n          fsymId: HTM0LK-R\n          ipoToDateAnnualized: 23.792849\n          monthToDate: -5.05054\n          nineMonth: 15.2164345\n          oneDay: 0\n          oneMonth: 3.3678055\n          oneYear: 28.326284\n          quarterToDate: 9.109688\n          requestId: GOOGL-US\n          sixMonth: 21.335184\n          tenYearAnnualized: 20.567951\n          thirtyYearAnnualized: null\n          threeMonth: 5.634606\n          threeYearAnnualized: 17.971731\n          twentyYearAnnualized: null\n          twoYearAnnualized: 14.737806\n          weekToDate: -2.1489859\n          yearToDate: 15.517509\n        - currency: USD\n          date: 2020-09-10\n          dividendAdjust: EXDATE\n          fiveYearAnnualized: 0.68179286\n          fsymId: SJY281-R\n          ipoToDateAnnualized: 6.5760174\n          monthToDate: -0.851506\n          nineMonth: -5.0556364\n          oneDay: 0\n          oneMonth: -3.8155913\n          oneYear: -11.230612\n          quarterToDate: 2.5834322\n          requestId: IBM-US\n          sixMonth: 0.60111284\n          tenYearAnnualized: 2.7469\n          thirtyYearAnnualized: 7.513745\n          threeMonth: -4.604602\n          threeYearAnnualized: -0.49068186\n          twentyYearAnnualized: 1.8993893\n          twoYearAnnualized: -3.8598573\n          weekToDate: -0.03270507\n          yearToDate: -5.1477075\n    BatchPricesRequestPost:\n      description: Batch Request for Prices for APPL and Tesla.\n      summary: Batch Request for Prices for APPL and Tesla.\n      value:\n        ids:\n        - AAPL-US\n        - TSLA-US\n        startDate: 2019-01-01\n        endDate: 2019-12-31\n        frequency: D\n        calendar: FIVEDAY\n        currency: LOCAL\n        adjust: SPLIT\n        batch: \"Y\"\n    BatchStatusAcceptedResponse:\n      description: Batch Status Accepted Response\n      value:\n        data:\n          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          status: QUEUED\n          startTime: 2021-06-29T18:34:52.168Z\n          endTime: null\n          error: null\n    badRequestDateFormat:\n      description: This bad request occurs when a request doesn't use the YYYY-MM-DD\n        in the date parameters. To resolve, convert your date to YYYY-MM-DD.\n      summary: Bad Request - Date Format\n      value:\n        status: Bad Request\n        timestamp: 2019-10-31 16:08:07.945\n        path: /factset-prices/v1/{endpoint}\n        message: 'The date parameter ''startDate'' must be in the following date format:\n          YYYY-MM-DD'\n        subErrors: null\n    badRequestRequiredParameter:\n      description: This error message occurs when the request does not include the\n        required parameters. Required parameters are indicated with a red asterisks\n        symbol in the specification file.\n      summary: Bad Request - Required Parameter Missing\n      value:\n        status: Bad Request\n        timestamp: 2020-06-12 15:48:42.016\n        path: /factset-prices/v1/{endpoint}\n        message: The parameter 'ids' is required and may not be empty.\n        subErrors: null\n    badRequestFutureDate:\n      description: This error message occurs when a future date is requested in the\n        startDate and endDate parameters. Please revise your request to include dates\n        as of today's current date or any prior historical date.\n      summary: Bad Request - Future Date\n      value:\n        status: Bad Request\n        timestamp: 2020-06-12 15:52:48.091\n        path: /factset-prices/v1/{endpoint}\n        message: The use of future dates is not applicable in this endpoint. Please\n          revise your request to include dates up to today's current date.\n        subErrors: null\n    badRequestInvalidParameters:\n      description: This error message occurs when a request parameter is used in which\n        is not recognized by the service. Please revise your request to include only\n        the parameters listed in the specification. Typical causes are spelling mistakes\n        and use of improper casing.\n      summary: Bad Request - Invalid Parameters\n      value:\n        status: Bad Request\n        timestamp: 2020-06-12 15:58:54.068\n        path: /factset-prices/v1/{endpoint}\n        message: 'Invalid Parameter (s): fakeParameterName1 fakeParameterName2. Please\n          modify your request to use parameters outlined in the specification for\n          this endpoint.'\n        subErrors: null\n    badRequestMalformedJSON:\n      description: This error may be returned when the request body is specified as\n        JSON, but is not in proper JSON format.\n      summary: Bad Request - Malformed JSON Request\n      value:\n        status: Bad Request\n        timestamp: 2019-11-05 09:48:29.18\n        path: /factset-prices/v1/{endpoint}\n        message: Malformed JSON Request\n        subErrors: null\n    badRequestReadTimeout:\n      description: This error may be returned if it takes more than 29 seconds to\n        hear back from the data fetch service.\n      summary: Bad Request - Read Timeout\n      value:\n        status: Bad Request\n        timestamp: 2019-11-04 16:18:38.949\n        path: /factset-prices/v1/{endpoint}\n        message: The request took too long. Try again with a smaller request.\n        subErrors: null\n    unauthenticated:\n      description: This occurs when a user is not properly authenticated or recognized\n        by the service. Please double check the USERNAME-SERIAL and API-Key used to\n        request and ensure you are within the IP range specified for the Key. Report\n        Issue under 401 error for help with troubleshooting.\n      summary: User Authentication Failed\n      value:\n        status: User Authentication Failed\n        timestamp: 2019-10-31 16:08:07.945\n        path: /factset-prices/v1/{endpoint}\n        message: User Authentication Failed.\n        subErrors: null\n    forbidden:\n      description: The USERNAME-SERIAL attempted to request the endpoint is not authorized\n        to access. The request was a legal request, but the server is refusing to\n        respond. Please reach out to FactSet Account Team for assistance with authorization.\n      summary: Forbidden\n      value:\n        status: Forbidden\n        timestamp: 2020-06-12 16:08:51.731\n        path: /factset-prices/v1/{endpoint}\n        message: USERNAME-SERIAL does not have permission to use /factset-prices/v1/{endpoint}\n        subErrors: null\n    unsupportedMediaType:\n      description: This bad request occurs when the media type passed in the request\n        is not supported. Currently the APIs only support 'application/json'.\n      summary: Unsupported Media Type\n      value:\n        status: Unsupported Media Type\n        timestamp: 2019-11-05 09:42:27.237\n        path: /factset-prices/v1/{endpoint}\n        message: text/html media type is not supported. Supported media types are\n          application/json\n        subErrors: null\n    notWritable:\n      description: This error may be returned when the server encounters an error\n        writing the JSON response.\n      summary: Internal Server Error - Not Writable\n      value:\n        status: Internal Server Error\n        timestamp: 2019-11-05 09:48:29.18\n        path: /factset-prices/v1/{endpoint}\n        message: Error writing JSON output\n        subErrors: null\n    generalException:\n      description: This is the most general error that can be returned to by the service.\n        Please `Report Issue` to FactSet.\n      summary: Internal Server Error - General Exception\n      value:\n        status: Internal Server Error\n        timestamp: 2019-11-01 10:36:01.944\n        path: /factset-prices/v1/{endpoint}\n        message: Unexpected error\n        subErrors: null\n  parameters:\n    idsBatchMax5000:\n      description: The requested list of security identifiers. Accepted ID types include\n        Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\u003cp\u003e***ids limit**\n        =  2000 per non-batch request / 5000 per batch request*\u003c/p\u003e *\u003cp\u003eMake note,\n        GET Method URL request lines are also limited to a total length of 8192 bytes\n        (8KB). In cases where the service allows for thousands of ids, which may lead\n        to exceeding this request line limit of 8KB, its advised for any requests\n        with large request lines to be requested through the respective \"POST\" method.\u003c/p\u003e*\n      examples:\n        oneEquityId:\n          summary: One Equity Market Identifier\n          value:\n          - AAPL-USA\n        multipleEquityIds:\n          summary: Multiple Equity Market Identifiers\n          value:\n          - FDS-US\n          - AAPL-US\n          - MSFT-US\n      explode: false\n      in: query\n      name: ids\n      required: true\n      schema:\n        items:\n          type: string\n        type: array\n      style: form\n    idsMax2000:\n      description: The requested list of security identifiers. Accepted ID types include\n        Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids. \u003cp\u003e***ids\n        limit** =  2000 per request*\u003c/p\u003e *\u003cp\u003eMake note, GET Method URL request lines\n        are also limited to a total length of 8192 bytes (8KB). In cases where the\n        service allows for thousands of ids, which may lead to exceeding this request\n        line limit of 8KB, its advised for any requests with large request lines to\n        be requested through the respective \"POST\" method.\u003c/p\u003e*\n      examples:\n        oneEquityId:\n          summary: One Equity Market Identifier\n          value:\n          - AAPL-USA\n        multipleEquityIds:\n          summary: Multiple Equity Market Identifiers\n          value:\n          - FDS-US\n          - AAPL-US\n          - MSFT-US\n      explode: false\n      in: query\n      name: ids\n      required: true\n      schema:\n        items:\n          type: string\n        maxItems: 2000\n        minItems: 1\n        type: array\n      style: form\n    idsMax1000:\n      description: The requested list of security identifiers. Accepted ID types include\n        Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids. \u003cp\u003e***ids\n        limit** =  1000 per request*\u003c/p\u003e *\u003cp\u003eMake note, GET Method URL request lines\n        are also limited to a total length of 8192 bytes (8KB). In cases where the\n        service allows for thousands of ids, which may lead to exceeding this request\n        line limit of 8KB, its advised for any requests with large request lines to\n        be requested through the respective \"POST\" method.\u003c/p\u003e*\n      examples:\n        oneEquityId:\n          summary: One Equity Market Identifier\n          value:\n          - AAPL-USA\n        multipleEquityIds:\n          summary: Multiple Equity Market Identifiers\n          value:\n          - FDS-US\n          - AAPL-US\n          - MSFT-US\n      explode: false\n      in: query\n      name: ids\n      required: true\n      schema:\n        items:\n          type: string\n        maxItems: 1000\n        minItems: 1\n        type: array\n      style: form\n    fixedIds:\n      description: The requested list of Fixed Income security identifiers. \u003cp\u003e***ids\n        limit** =  2000 per request*\u003c/p\u003e *\u003cp\u003eMake note, GET Method URL request lines\n        are also limited to a total length of 8192 bytes (8KB). In cases where the\n        service allows for thousands of ids, which may lead to exceeding this request\n        line limit of 8KB, its advised for any requests with large request lines to\n        be requested through the respective \"POST\" method.\u003c/p\u003e*\n      examples:\n        oneFixedId:\n          summary: One Fixed Income Identifier\n          value:\n          - 037833BX\n        multipleFixedIds:\n          summary: Multiple Fixed Income Identifiers and Types\n          value:\n          - 037833BX\n          - 853207EZ\n          - 9127963H\n      explode: false\n      in: query\n      name: ids\n      required: true\n      schema:\n        items:\n          type: string\n        maxItems: 2000\n        minItems: 1\n        type: array\n      style: form\n    startDate:\n      description: |\n        The start date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n      example: 2019-01-01\n      explode: true\n      in: query\n      name: startDate\n      required: false\n      schema:\n        type: string\n      style: form\n    endDate:\n      description: |\n        The end date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n      example: 2019-12-31\n      explode: true\n      in: query\n      name: endDate\n      required: false\n      schema:\n        type: string\n      style: form\n    date:\n      description: |\n        The as of date in **YYYY-MM-DD** format. This controls the perspective date in which the period parameter will be computed. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n      example: 2019-07-07\n      explode: true\n      in: query\n      name: date\n      required: false\n      schema:\n        type: string\n      style: form\n    dateRs:\n      description: |\n        The date in **YYYY-MM-DD** format. This controls the perspective dates to the calculate the returns. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n      example: 2019-07-07\n      explode: true\n      in: query\n      name: date\n      required: false\n      schema:\n        type: string\n      style: form\n    frequency:\n      description: |\n        Controls the display frequency of the data returned.\n          * **D** = Daily\n          * **W** = Weekly, based on the last day of the week of the start date.\n          * **M** = Monthly, based on the last trading day of the month.\n          * **AM** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n          * **CQ** = Quarterly based on the last trading day of the calendar quarter (March, June, September, or December).\n          * **FQ** = Fiscal Quarter of the company.\n          * **AY** = Actual Annual, based on the start date.\n          * **CY** = Calendar Annual, based on the last trading day of the calendar year.\n          * **FY** = Fiscal Annual, based on the last trading day of the company's fiscal year.\n      examples:\n        Daily:\n          summary: D - Daily frequency display based on trading calendar\n          value: D\n        Weekly:\n          summary: W - Weekly - based on the last day of the week of the start date\n          value: W\n        Monthly:\n          summary: M - Monthly - based on the last trading day of the month.\n          value: M\n        Actual Month:\n          summary: AM - Actual Month - based on the startDate (e.g., if the start\n            date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n          value: AM\n        Calendar Quarterly:\n          summary: CQ - Calendar Quarterly - based on the last day of the week of\n            the startDate\n          value: CQ\n        Fiscal Quarterly:\n          summary: FQ - Fiscal Quarter of the company\n          value: FQ\n        Actual Annual:\n          summary: AY - Actual Annual - based on the startDate\n          value: AY\n        Calendar Annual:\n          summary: CY - Calendar Annual - based on the last trading day of the calendar\n            year.\n          value: CY\n        Fiscal Annual:\n          summary: FY - Fiscal Annual - based on the last trading day of the company's\n            fiscal year.\n          value: FY\n      explode: true\n      in: query\n      name: frequency\n      required: false\n      schema:\n        default: D\n        enum:\n        - D\n        - W\n        - M\n        - AM\n        - CQ\n        - FQ\n        - AY\n        - CY\n        - FY\n        type: string\n      style: form\n    frequencyFi:\n      description: |\n        Controls the display frequency of the data returned.\n          * **D** = Daily\n          * **M** = Monthly, based on the last trading day of the month.\n          * **AM** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n          * **MTD** = Month-to-date\n          * **CQ** = Quarterly based on the last trading day of the calendar quarter (March, June, September, or December).\n          * **CQTD** =  Calendar quarter-to-date\n          * **AY** = Actual Annual, based on the start date.\n          * **CY** = Calendar Annual, based on the last trading day of the calendar year.\n          * **CYTD** = Calendar Year-to-date.\n      examples:\n        Daily:\n          summary: D - Daily frequency display based on trading calendar\n          value: D\n        Month-to-date:\n          summary: MTD - Month-to-date\n          value: MTD\n        Monthly:\n          summary: M - Monthly - based on the last trading day of the month.\n          value: M\n        Actual Month:\n          summary: AM - Actual Month - based on the startDate (e.g., if the start\n            date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n          value: AM\n        Calendar Quarterly:\n          summary: CQ - Calendar Quarterly - based on the last day of the week of\n            the startDate\n          value: CQ\n        Calendar quarter-to-date:\n          summary: CQTD - Calendar quarter-to-date\n          value: CQTD\n        Actual Annual:\n          summary: AY - Actual Annual - based on the startDate\n          value: AY\n        Calendar Annual:\n          summary: CY - Calendar Annual - based on the last trading day of the calendar\n            year.\n          value: CY\n        Calendar Year-to-date:\n          summary: CYTD - Calendar Year-to-date\n          value: CYTD\n      explode: true\n      in: query\n      name: frequency\n      required: false\n      schema:\n        default: D\n        enum:\n        - D\n        - M\n        - AM\n        - MTD\n        - CQ\n        - CQTD\n        - AY\n        - CY\n        - CYTD\n        type: string\n      style: form\n    calendar:\n      description: Calendar of data returned. SEVENDAY includes weekends. LOCAL calendar\n        will default to the securities' trading calendar which excludes date records\n        for respective holiday periods.\n      example: FIVEDAY\n      explode: true\n      in: query\n      name: calendar\n      required: false\n      schema:\n        default: FIVEDAY\n        enum:\n        - FIVEDAY\n        - SEVENDAY\n        - LOCAL\n        type: string\n      style: form\n    currency:\n      description: Currency code for adjusting prices. Default is Local. For a list\n        of currency ISO codes, visit [Online Assistant Page 1470](https://oa.apps.factset.com/pages/1470).\n      example: USD\n      explode: true\n      in: query\n      name: currency\n      required: false\n      schema:\n        type: string\n      style: form\n    adjust:\n      description: |\n        Controls the split, spinoff, and dividend adjustments for the prices. \u003cp\u003eFor more information, visit [Online Assistant Page 614](https://oa.apps.factset.com/pages/614)\u003c/p\u003e\n          * **SPLIT** = Split ONLY Adjusted. This is used by default.\n          * **SPINOFF** = Splits \u0026 Spinoff Adjusted.\n          * **DIVADJ** = Splits, Spinoffs, and Dividends adjusted.\n          * **UNSPLIT** = No Adjustments.\n      examples:\n        split:\n          summary: Split adjusted by default - accounts for splits over security's\n            history.\n          value: SPLIT\n        spinoff:\n          summary: Spinoff Adjusted - accounts for a company's spinoff. Spinoffs are\n            treated as special dividends.\n          value: SPINOFF\n        Dividend Adjusted:\n          summary: Dividend Adjusted\n          value: DIVADJ\n        Unsplit:\n          summary: Unsplit data - overrides the default split adjustment\n          value: UNSPLIT\n      explode: true\n      in: query\n      name: adjust\n      required: false\n      schema:\n        default: SPLIT\n        enum:\n        - SPLIT\n        - SPINOFF\n        - DIVADJ\n        - UNSPLIT\n        type: string\n      style: form\n    dividendAdjust:\n      description: |\n        Controls the dividend reinvestment for the returns calculation.\n          * **PRICE** = Price Change - Dividends Excluded\n          * **EXDATE** = Simple Return - Dividends Received on exdate but not reinvested\n          * **PAYDATE** = Simple Return - Dividends Received on paydate but not reinvested\n          * **EXDATE_C** = Compound Return - Dividends reinvested on exdate\n          * **PAYDATE_C** = Compound Return - Dividends reinvested on paydate.\n      explode: true\n      in: query\n      name: dividendAdjust\n      required: false\n      schema:\n        default: PRICE\n        enum:\n        - PRICE\n        - EXDATE\n        - PAYDATE\n        - EXDATE_C\n        - PAYDATE_C\n        type: string\n      style: form\n    splitAdjust:\n      description: Code to control split adjustments for shares count.\n      explode: true\n      in: query\n      name: splitAdjust\n      required: false\n      schema:\n        default: SPLIT\n        enum:\n        - SPLIT\n        - UNSPLIT\n        type: string\n      style: form\n    rollingPeriod:\n      description: Period of measure for the rolling cumulative return. This does\n        not change display `frequency` but rather the underlying return calculation\n        period. All periods are referencing actual periods of measure, not period-ends.\n        For example, 1M rolling period will go back to that date the previous month,\n        which is not always the month-end date.\n      explode: true\n      in: query\n      name: rollingPeriod\n      required: false\n      schema:\n        enum:\n        - 1D\n        - 1W\n        - 1M\n        - 3M\n        - 6M\n        - 52W\n        - 2Y\n        - 3Y\n        - 5Y\n        - 10Y\n        type: string\n      style: form\n    period:\n      description: |\n        The period of measure for the security's high and low pricing. This does not change display `frequency` but rather the underlying period. For example, if you wish to fetch the latest 52 week high and low price, select 52W. All periods are referencing actual periods of measure, not period-ends where-\n\n          * **D** = Daily\n          * **W** = Weekly, based on the last trading day of the week. Use the 52W for representing the latest year.\n          * **M** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n          * **YTD** = Year-to-Date\n          * **Y** =  Actual Annual, based on the start date.\n      explode: true\n      in: query\n      name: period\n      required: false\n      schema:\n        default: 52W\n        enum:\n        - 1D\n        - 1W\n        - 1M\n        - 3M\n        - 6M\n        - YTD\n        - 52W\n        - 2Y\n        - 3Y\n        - 5Y\n        - 10Y\n        type: string\n      style: form\n    priceType:\n      description: |\n        Controls whether price high and low data is returned intraday or at the close. For example, by selecting INTRADAY, if a security price reached an all time high of 10 during trading hours over the period of measure but closed that day at 8, then the service will return 10. If CLOSE was selected the service would return 8 if that was the high for the period measured.\n      explode: true\n      in: query\n      name: priceType\n      required: false\n      schema:\n        default: CLOSE\n        enum:\n        - INTRADAY\n        - CLOSE\n        type: string\n      style: form\n    dividendAdjustSnapshot:\n      description: |\n        Controls the dividend reinvestment for the returns calculation. Dividends will be reinvested on the date the dividends go ex (when the dividends belong to the seller rather than the buyer). Visit [OA 8748](https://my.apps.factset.com/oa/pages/8748) for calculation methodology.\n          * **PRICE** = Price Change - Dividends Excluded.\n          * **EXDATE** = Simple Return - Dividends Received on exdate but not reinvested. Dividends accumulated throughout the specified period are added to the price at the end of the period.\n          * **EXDATE_C** = Compound Return - Dividends reinvested on exdate. Dividends accumulated throughout the specified period are used to buy more shares of stock in the company.\n      explode: true\n      in: query\n      name: dividendAdjust\n      required: false\n      schema:\n        default: PRICE\n        enum:\n        - PRICE\n        - EXDATE\n        - EXDATE_C\n        type: string\n      style: form\n    batch:\n      description: |\n        Enables the ability to asynchronously \"batch\" the request, supporting a long-running request up to **10 minutes**. Upon requesting batch=Y, the service will respond back with an HTTP Status Code of 202.\n\n        **`batch` is currently in **BETA**. Additional Access Required. To gain access to this feature, reach out to your FactSet Account team or \"Report Issue\" above and our support teams can assist.**\n\n        Once a batch request is submitted, use `batch/v1/status` to see if the job has completed. Once completed, retrieve the results of the request via `batch/v1/result`. See [Batching API](https://developer.factset.com/api-catalog/factset-content-api-batch) for more details.\n\n        When using Batch, `ids` limit is increased to **5000** ids per request, though limits on query string via GET method still apply. It's advised to submit large lists of ids via POST method.\n      explode: true\n      in: query\n      name: batch\n      required: false\n      schema:\n        default: \"N\"\n        enum:\n        - \"Y\"\n        - \"N\"\n        type: string\n      style: form\n  responses:\n    \"400\":\n      content:\n        application/json:\n          examples:\n            Bad Request - Date Format:\n              $ref: '#/components/examples/badRequestDateFormat'\n            Bad Request - Missing Required Parameter:\n              $ref: '#/components/examples/badRequestRequiredParameter'\n            Bad Request - Future Date:\n              $ref: '#/components/examples/badRequestFutureDate'\n            Bad Request - Invalid Parameter:\n              $ref: '#/components/examples/badRequestInvalidParameters'\n            Bad Request - Malformed JSON:\n              $ref: '#/components/examples/badRequestMalformedJSON'\n            Bad Request - Read Timeout:\n              $ref: '#/components/examples/badRequestReadTimeout'\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n      description: Bad Request. This can occur for several reasons. Please review\n        the \"message\" for more details.\n    \"401\":\n      content:\n        application/json:\n          examples:\n            Bad Request - Date Format:\n              $ref: '#/components/examples/unauthenticated'\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n      description: Unauthenticated USERNAME-SERIAL. Ensure you are logged in and have\n        successfully generated an API KEY for the IP range you are connecting from.\n        For more help, select the **Report Issue** in the top right corner of this\n        Developer Portal specification card and choose Connectivity 401 or 403 Responses.\n    \"403\":\n      content:\n        application/json:\n          examples:\n            Bad Request - Date Format:\n              $ref: '#/components/examples/forbidden'\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n      description: The USERNAME-SERIAL attempted to request the endpoint is not authorized\n        to access. The request was a legal request, but the server is refusing to\n        respond. Please reach out to FactSet Account Team for assistance with authorization.\n    \"415\":\n      content:\n        application/json:\n          examples:\n            Bad Request - Date Format:\n              $ref: '#/components/examples/unsupportedMediaType'\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n      description: Unsupported Media Type. This error may be returned when the caller\n        sends a resource in a format that is not accepted by the server. This can\n        be fixed by ensuring that Content-Type header is set to the correct value.\n        In this instance, \"application/json\" would be the appropriate value.\n    \"500\":\n      content:\n        application/json:\n          examples:\n            Internal Server Error - Not Writable:\n              $ref: '#/components/examples/notWritable'\n            Internal Server Error - General Exception:\n              $ref: '#/components/examples/generalException'\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n      description: Internal Server Error.\n  schemas:\n    pricesRequest:\n      description: Prices Request Body\n      properties:\n        ids:\n          description: \"The requested list of security identifiers. Accepted ID types\\\n            \\ include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\\\n            \\ \\n\u003cp\u003eids limit =  2000 per non-batch request / 5000 per batch request\u003c/p\u003e\\n\"\n          example:\n          - FDS-US\n          items:\n            type: string\n          type: array\n        startDate:\n          description: |\n            The start date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n          example: 2019-01-01\n          type: string\n        endDate:\n          description: |\n            The end date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n          example: 2019-12-31\n          type: string\n        frequency:\n          $ref: '#/components/schemas/frequency'\n        currency:\n          description: Currency code for adjusting prices. Default is Local. For a\n            list of currency ISO codes, visit [Online Assistant Page 1470](https://oa.apps.factset.com/pages/1470).\n          example: USD\n          title: Request Currency\n          type: string\n        calendar:\n          $ref: '#/components/schemas/calendar'\n        adjust:\n          $ref: '#/components/schemas/adjust'\n        batch:\n          $ref: '#/components/schemas/batch'\n      required:\n      - ids\n      title: Prices Request Body\n      type: object\n    pricesResponse:\n      example:\n        data:\n        - date: 2013-08-01T00:00:00.000+0000\n          volume: 120341\n          adjDate: 2005-02-07T00:00:00.000+0000\n          priceLow: 121.25\n          price: 125\n          requestId: IBM-US\n          fsymId: SJY281-R\n          currency: USD\n          priceOpen: 123.75\n          priceHigh: 126\n        - date: 2013-08-01T00:00:00.000+0000\n          volume: 120341\n          adjDate: 2005-02-07T00:00:00.000+0000\n          priceLow: 121.25\n          price: 125\n          requestId: IBM-US\n          fsymId: SJY281-R\n          currency: USD\n          priceOpen: 123.75\n          priceHigh: 126\n      properties:\n        data:\n          description: Array of Price Objects\n          items:\n            $ref: '#/components/schemas/price'\n          type: array\n      title: Prices Response\n      type: object\n    price:\n      example:\n        date: 2013-08-01T00:00:00.000+0000\n        volume: 120341\n        adjDate: 2005-02-07T00:00:00.000+0000\n        priceLow: 121.25\n        price: 125\n        requestId: IBM-US\n        fsymId: SJY281-R\n        currency: USD\n        priceOpen: 123.75\n        priceHigh: 126\n      properties:\n        fsymId:\n          description: Factset Regional Security Identifier. Six alpha-numeric characters,\n            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's\n            best regional security data series per currency. For equities, all primary\n            listings per region and currency are allocated a regional-level permanent\n            identifier. The regional-level permanent identifier will be available\n            once a SEDOL representing the region/currency has been allocated and the\n            identifiers are on FactSet.\n          example: SJY281-R\n          type: string\n        date:\n          description: Ending date for the period expressed in YYYY-MM-DD format.\n          example: 2013-08-01\n          format: date\n          type: string\n        adjDate:\n          description: Date of last split for which prices and volume have been adjusted.\n            Use /factset-prices/v#/splits endpoint for details regarding the split.\n          example: 2005-02-07\n          format: date\n          type: string\n        currency:\n          description: 'Currency ISO code. For more details, visit [Online Assistant\n            Page #1470](https://oa.apps.factset.com/pages/1470).'\n          example: USD\n          type: string\n        price:\n          description: Closing Price as of the date(s) requested. By default the price\n            is in local trading currency, split adjusted and not spinoff adjusted.\n            Prices updated nightly at approximately at 9pm ET.\n          example: 125\n          format: double\n          type: number\n        priceOpen:\n          description: Open price as of the date(s) requested. By default the price\n            is in local trading currency, split adjusted and not spinoff adjusted.\n            Prices updated nightly at approximately at 9pm ET.\n          example: 123.75\n          format: double\n          type: number\n        priceHigh:\n          description: High closing price as of the date(s) requested. By default\n            the price is in local trading currency, split adjusted and not spinoff\n            adjusted.  Prices updated nightly at approximately at 9pm ET.\n          example: 126\n          format: double\n          type: number\n        priceLow:\n          description: Low closing price as of the date(s) requested. By default the\n            price is in local trading currency, split adjusted and not spinoff adjusted.  Prices\n            updated nightly at approximately at 9pm ET.\n          example: 121.25\n          format: double\n          type: number\n        volume:\n          description: Returns the cumulative volume over dates requested. Data is\n            returned in thousands.\n          example: 120341\n          format: double\n          type: number\n        requestId:\n          description: Identifier that was used for the request.\n          example: IBM-US\n          type: string\n      title: Price Object\n      type: object\n    pricesFixedIncomeRequest:\n      description: Fixed Income Request Body\n      properties:\n        ids:\n          description: |\n            The requested list of Fixed Income Security Identifiers.\n          example:\n          - 037833BX\n          items:\n            type: string\n          maxItems: 2000\n          minItems: 1\n          type: array\n        startDate:\n          description: |\n            The start date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n          example: 2019-01-01\n          type: string\n        endDate:\n          description: |\n            The end date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n          example: 2019-12-31\n          type: string\n        frequency:\n          $ref: '#/components/schemas/frequencyFi'\n      required:\n      - ids\n      title: Fixed Income Request Body\n      type: object\n    pricesFixedIncomeResponse:\n      example:\n        data:\n        - date: 2020-06-09T00:00:00.000+0000\n          securityType: BDNT\n          issuerType: CORP\n          priceMid: 137.695\n          requestId: 037833BX\n          fsymId: NL6DQ8-S\n          priceAsk: 134.959\n          priceBid: 134.959\n          issuerEntityId: 000C7F-E\n        - date: 2020-06-09T00:00:00.000+0000\n          securityType: BDNT\n          issuerType: CORP\n          priceMid: 137.695\n          requestId: 037833BX\n          fsymId: NL6DQ8-S\n          priceAsk: 134.959\n          priceBid: 134.959\n          issuerEntityId: 000C7F-E\n      properties:\n        data:\n          description: Array of Price Objects\n          items:\n            $ref: '#/components/schemas/fixedIncomePrice'\n          type: array\n      title: Fixed Income Prices Response\n      type: object\n    fixedIncomePrice:\n      example:\n        date: 2020-06-09T00:00:00.000+0000\n        securityType: BDNT\n        issuerType: CORP\n        priceMid: 137.695\n        requestId: 037833BX\n        fsymId: NL6DQ8-S\n        priceAsk: 134.959\n        priceBid: 134.959\n        issuerEntityId: 000C7F-E\n      properties:\n        fsymId:\n          description: Factset Security Identifier. Six alpha-numeric characters,\n            excluding vowels, with an -S suffix (XXXXXX-S).\n          example: NL6DQ8-S\n          type: string\n        date:\n          description: Ending date for the period expressed in YYYY-MM-DD format.\n          example: 2020-06-09\n          format: date\n          type: string\n        securityType:\n          description: |\n            Returns the security type code of fixed income instruments.\n              * AGCY - Agency\n              * BDNT - Bond/Note\n              * BDWT  - Bond with Warrants\n              * BKAC  - Bankers Acceptance\n              * BLDN - Bill/Discount Note\n              * BOND  - Bond\n              * CAP  - Embedded ceiling or short interest rates\n              * CAPS - Capital Security\n              * CAPT - Capital Trust Security\n              * CD - Certificate of Deposit (Munis)\n              * CDO - Collateralized Debt Obligation\n              * CMO  - Collateralized mortgage obligation\n              * COMP - Commercial Paper\n              * CONV - Convertible/Exchangeable\n              * CONVP - Convertible Preferred\n              * CORP - Corporate\n              * COVR - Covered Bond\n              * CP  - Commercial Paper\n              * CRL - Credit Linked Security\n              * DEB - Debenture\n              * DERI  - Derivative (generic type)\n              * EBON - Eurobond\n              * EQL - Equity Linked Security\n              * FORW  - Forward deliveries\n              * GRTR  - Grantor trust\n              * HY - Hypotheken Pfandbriefe\n              * IIDX - Inflation Indexed Security\n              * INVF  - Inverse floaters\n              * LAUTH - Local Authority/Political Division\n              * LINK  - Linked securities\n              * LKS - Linked Securities\n              * MAPL - Mixed Asset Portfolio Linked Security\n              * MM - Money Market\n              * NOTE  - Note\n              * OF - Obligations FonciÃres\n              * OPTN  - Options\n              * OTHL - Other Linked Security\n              * PAYS  - Payment streams\n              * PFD - Preferred\n              * PFND - Pfandbriefe\n              * POOL  - Pooled derivatives\n              * PSEC - Preferred Security\n              * PSTK - Preferred Stock\n              * REPO  - REPOS\n              * RMIC  - REMIC\n              * SHFL  - Short floats (auction)\n              * STRIPS - STRIPS\n              * SWAP  - Embedded swaps\n              * TR  - Trust\n              * TRUPS - Trust Preferred Security\n          example: BDNT\n          type: string\n        issuerEntityId:\n          description: Fixed Income Issuer Entity ID (-E).\n          example: 000C7F-E\n          type: string\n        issuerType:\n          description: |\n            Returns the issuer type code of fixed income instruments.\n              * AGCY - Agency\n              * CORP - Corporate\n              * LAUTH - Local Authority/Political Division\n              * MUNI - Municipals\n              * SOV - Sovereign\n              * SUPR - Supranational\n              * SCOL - Securitized/Collateralized\n          example: CORP\n          type: string\n        priceBid:\n          description: BID PRICE. For North American issues, the value is an evaluated\n            price, where available, else it is an exchange-traded price. Please note\n            that distinct Bid and Ask Prices are not available for North American\n            issues; Bid, Mid, and Ask Prices will be identical for North American\n            issues. For issues outside of North America (International), the value\n            is an evaluated price. Please note that distinct Bid and Ask Prices are\n            only available for issues outside of North America. By default, the Mid\n            Price is returned for issues outside of North America.\n          example: 134.959\n          format: double\n          type: number\n        priceMid:\n          description: MID Price. For North American issues, the value is an evaluated\n            price, where available, else it is an exchange-traded price. Please note\n            that distinct Bid and Ask Prices are not available for North American\n            issues; Bid, Mid, and Ask Prices will be identical for North American\n            issues. For issues outside of North America (International), the value\n            is an evaluated price. Please note that distinct Bid and Ask Prices are\n            only available for issues outside of North America. By default, the Mid\n            Price is returned for issues outside of North America.\n          example: 137.695\n          format: double\n          type: number\n        priceAsk:\n          description: ASK Price. For North American issues, the value is an evaluated\n            price, where available, else it is an exchange-traded price. Please note\n            that distinct Bid and Ask Prices are not available for North American\n            issues; Bid, Mid, and Ask Prices will be identical for North American\n            issues. For issues outside of North America (International), the value\n            is an evaluated price. Please note that distinct Bid and Ask Prices are\n            only available for issues outside of North America. By default, the Mid\n            Price is returned for issues outside of North America.\n          example: 134.959\n          format: double\n          type: number\n        requestId:\n          description: Identifier that was used for the request.\n          example: 037833BX\n          type: string\n      title: Fixed Income Price Object\n      type: object\n    referencesRequest:\n      description: References Request Body\n      properties:\n        ids:\n          description: |\n            The requested list of security identifiers. Accepted ID types include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\n          example:\n          - FDS-US\n          items:\n            type: string\n          maxItems: 2000\n          minItems: 1\n          type: array\n      required:\n      - ids\n      title: References Request Body\n      type: object\n    referencesResponse:\n      example:\n        data:\n        - country: UNITED STATES\n          nextTradingHolidayDate: 2020-09-07T00:00:00.000+0000\n          fsymId: HTM0LK-R\n          secType: Common stock\n          primaryExchange: NASDAQ\n          exchangeCountry: UNITED STATES\n          secTypeCodeDet: \"10\"\n          requestId: GOOGL-US\n          secTypeCode: \"0\"\n          name: ALPHABET INC\n          firstDate: 2004-08-19T00:00:00.000+0000\n          currency: USD\n          localIndex: SP50\n          lastDate: 2020-09-04T00:00:00.000+0000\n        - country: UNITED STATES\n          nextTradingHolidayDate: 2020-09-07T00:00:00.000+0000\n          fsymId: HTM0LK-R\n          secType: Common stock\n          primaryExchange: NASDAQ\n          exchangeCountry: UNITED STATES\n          secTypeCodeDet: \"10\"\n          requestId: GOOGL-US\n          secTypeCode: \"0\"\n          name: ALPHABET INC\n          firstDate: 2004-08-19T00:00:00.000+0000\n          currency: USD\n          localIndex: SP50\n          lastDate: 2020-09-04T00:00:00.000+0000\n      properties:\n        data:\n          description: Array of References Objects\n          items:\n            $ref: '#/components/schemas/references'\n          type: array\n      title: References Response\n      type: object\n    references:\n      example:\n        country: UNITED STATES\n        nextTradingHolidayDate: 2020-09-07T00:00:00.000+0000\n        fsymId: HTM0LK-R\n        secType: Common stock\n        primaryExchange: NASDAQ\n        exchangeCountry: UNITED STATES\n        secTypeCodeDet: \"10\"\n        requestId: GOOGL-US\n        secTypeCode: \"0\"\n        name: ALPHABET INC\n        firstDate: 2004-08-19T00:00:00.000+0000\n        currency: USD\n        localIndex: SP50\n        lastDate: 2020-09-04T00:00:00.000+0000\n      properties:\n        fsymId:\n          description: Factset Regional Security Identifier. Six alpha-numeric characters,\n            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's\n            best regional security data series per currency. For equities, all primary\n            listings per region and currency are allocated a regional-level permanent\n            identifier. The regional-level permanent identifier will be available\n            once a SEDOL representing the region/currency has been allocated and the\n            identifiers are on FactSet.\n          example: HTM0LK-R\n          type: string\n        name:\n          description: The name of the security.\n          example: ALPHABET INC\n          type: string\n        secType:\n          description: 'Security Type Description. For more details, visit [Online\n            Assistant Page #10149](https://oa.apps.factset.com/pages/10149).'\n          example: Common stock\n          type: string\n        secTypeCode:\n          description: 'General Security Type Code. For more details regarding what\n            the code represents, visit [Online Assistant Page #10149](https://oa.apps.factset.com/pages/10149).'\n          example: \"0\"\n          type: string\n        secTypeCodeDet:\n          description: 'Detailed Security Type Code. For more details regarding what\n            the code represents, visit [Online Assistant Page #10149](https://oa.apps.factset.com/pages/10149).'\n          example: \"10\"\n          type: string\n        currency:\n          description: 'Currency ISO code. For more details, visit [Online Assistant\n            Page #1470](https://oa.apps.factset.com/pages/1470).'\n          example: USD\n          type: string\n        country:\n          description: Country Name. Returns the country where the security is *traded*\n            from the North American Pricing database. Therefore, for securities covered\n            by the North American Pricing database, will return either UNITED STATES.\n            or CANADA. For securities covered by the Global Pricing database, the\n            item returns the country where the company is *incorporated*.\n          example: UNITED STATES\n          type: string\n        primaryExchange:\n          description: 'Primary Exchange Name. For more details, visit [Online Assistant\n            Page #16610](https://oa.apps.factset.com/pages/16610).'\n          example: NASDAQ\n          type: string\n        exchangeCountry:\n          description: Returns the location of the exchange where the company's stock\n            is traded.\n          example: UNITED STATES\n          type: string\n        localIndex:\n          description: 'The Local Index ID for the company''s home country benchmark.\n            For more details, visit [Online Assistant Page #10698](https://oa.apps.factset.com/pages/10698).'\n          example: SP50\n          type: string\n        nextTradingHolidayDate:\n          description: 'The Next Trading Holiday. For more details regarding Global\n            Trading Holiday Schedules, visit [Online Assistant Page #10397](https://oa.apps.factset.com/pages/10397).'\n          example: 2020-09-07\n          format: date\n          type: string\n        firstDate:\n          description: The Security's Date of First Trade. It will return the first\n            date that the FactSet Pricing database began to cover the security and\n            it may not coincide with the actual IPO date. Pricing information for\n            this security will not be available before the date returned. For more\n            details.\n          example: 2004-08-19\n          format: date\n          type: string\n        lastDate:\n          description: Date of Last Trade.  It will return the last date that the\n            FactSet Pricing database as a record for this security listing.\n          example: 2020-09-04\n          format: date\n          type: string\n        requestId:\n          description: Identifier that was used for the request.\n          example: GOOGL-US\n          type: string\n      title: References Object\n      type: object\n    returnsRequest:\n      description: Returns Request Body\n      properties:\n        ids:\n          description: |\n            The requested list of security identifiers. Accepted ID types include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\n          example:\n          - FDS-US\n          items:\n            type: string\n          maxItems: 2000\n          minItems: 1\n          type: array\n        startDate:\n          description: |\n            The start date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n          example: 2019-01-01\n          type: string\n        endDate:\n          description: |\n            The end date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n          example: 2019-12-31\n          type: string\n        frequency:\n          $ref: '#/components/schemas/frequency'\n        currency:\n          description: Currency code for adjusting prices. Default is Local. For a\n            list of currency ISO codes, visit [Online Assistant Page 1470](https://oa.apps.factset.com/pages/1470).\n          example: USD\n          title: Request Currency\n          type: string\n        calendar:\n          $ref: '#/components/schemas/calendar'\n        dividendAdjust:\n          $ref: '#/components/schemas/dividendAdjust'\n        rollingPeriod:\n          $ref: '#/components/schemas/rollingPeriod'\n      required:\n      - ids\n      title: Returns Request Body\n      type: object\n    returnsResponse:\n      example:\n        data:\n        - date: 2013-08-01T00:00:00.000+0000\n          adjDate: 2005-02-07T00:00:00.000+0000\n          totalReturn: 1.0345\n          requestId: IBM-US\n          fsymId: SJY281-R\n          currency: USD\n        - date: 2013-08-01T00:00:00.000+0000\n          adjDate: 2005-02-07T00:00:00.000+0000\n          totalReturn: 1.0345\n          requestId: IBM-US\n          fsymId: SJY281-R\n          currency: USD\n      properties:\n        data:\n          description: Array of Returns Objects\n          items:\n            $ref: '#/components/schemas/return'\n          type: array\n      title: Returns Response\n      type: object\n    return:\n      example:\n        date: 2013-08-01T00:00:00.000+0000\n        adjDate: 2005-02-07T00:00:00.000+0000\n        totalReturn: 1.0345\n        requestId: IBM-US\n        fsymId: SJY281-R\n        currency: USD\n      properties:\n        fsymId:\n          description: Factset Regional Security Identifier. Six alpha-numeric characters,\n            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's\n            best regional security data series per currency. For equities, all primary\n            listings per region and currency are allocated a regional-level permanent\n            identifier. The regional-level permanent identifier will be available\n            once a SEDOL representing the region/currency has been allocated and the\n            identifiers are on FactSet.\n          example: SJY281-R\n          type: string\n        date:\n          description: End date of the return. Date in YYYY-MM-DD format. Depending\n            on Frequency and Calendar settings, this could represent the entire return\n            period requested.\n          example: 2013-08-01\n          format: date\n          type: string\n        adjDate:\n          description: Date of last split for which return has been adjusted.\n          example: 2005-02-07\n          format: date\n          type: string\n        currency:\n          description: 'Currency ISO code. For more details, visit [Online Assistant\n            Page #1470](https://oa.apps.factset.com/pages/1470).'\n          example: USD\n          type: string\n        totalReturn:\n          description: 'The simple or compound return for the requested `frequency`\n            and/or `rolling_period`. Depending on the input parameters the return\n            will adjust accordingly. If you simply use `frequency` and no `rolling_period`,\n            the return value will represent the frequency period. If you use `rolling_period`,\n            the values will be returned in actual period ends (e.g. actual month,\n            actual week, daily, etc.). General Return Calculation Details found on\n            [Online Assistant Page #8748](https://oa.apps.factset.com/pages/8748)'\n          example: 1.0345\n          format: double\n          type: number\n        requestId:\n          description: Identifier that was used for the request.\n          example: IBM-US\n          type: string\n      title: Return Object\n      type: object\n    dividendsRequest:\n      description: Dividends Request Body\n      properties:\n        ids:\n          description: |\n            The requested list of security identifiers. Accepted ID types include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\n          example:\n          - FDS-US\n          items:\n            type: string\n          maxItems: 1000\n          minItems: 1\n          type: array\n        startDate:\n          description: |\n            The start date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n          example: 2019-01-01\n          type: string\n        endDate:\n          description: |\n            The end date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n          example: 2019-12-31\n          type: string\n        currency:\n          description: Currency code for adjusting prices. Default is Local. For a\n            list of currency ISO codes, visit [Online Assistant Page 1470](https://oa.apps.factset.com/pages/1470).\n          example: USD\n          title: Request Currency\n          type: string\n        adjust:\n          $ref: '#/components/schemas/adjust'\n      required:\n      - ids\n      title: Dividends Request Body\n      type: object\n    dividendsResponse:\n      example:\n        data:\n        - divsTaxD: Free of tax\n          divsTaxC: FC\n          adjDate: 2005-02-07T00:00:00.000+0000\n          divsTypeD: U.S. Currency\n          fsymId: SJY281-R\n          divsTypeC: 1049\n          divsNGEquiv: 5.5\n          divsRecDate: 2013-07-10T00:00:00.000+0000\n          divsExDate: 2013-08-01T00:00:00.000+0000\n          divsPaid: 5\n          requestId: IBM-US\n          currency: USD\n          divsNGFlag: \"N\"\n          divsPayDate: 2013-08-08T00:00:00.000+0000\n        - divsTaxD: Free of tax\n          divsTaxC: FC\n          adjDate: 2005-02-07T00:00:00.000+0000\n          divsTypeD: U.S. Currency\n          fsymId: SJY281-R\n          divsTypeC: 1049\n          divsNGEquiv: 5.5\n          divsRecDate: 2013-07-10T00:00:00.000+0000\n          divsExDate: 2013-08-01T00:00:00.000+0000\n          divsPaid: 5\n          requestId: IBM-US\n          currency: USD\n          divsNGFlag: \"N\"\n          divsPayDate: 2013-08-08T00:00:00.000+0000\n      properties:\n        data:\n          description: Array of Dividend Objects\n          items:\n            $ref: '#/components/schemas/dividend'\n          type: array\n      title: Dividend Response\n      type: object\n    dividend:\n      example:\n        divsTaxD: Free of tax\n        divsTaxC: FC\n        adjDate: 2005-02-07T00:00:00.000+0000\n        divsTypeD: U.S. Currency\n        fsymId: SJY281-R\n        divsTypeC: 1049\n        divsNGEquiv: 5.5\n        divsRecDate: 2013-07-10T00:00:00.000+0000\n        divsExDate: 2013-08-01T00:00:00.000+0000\n        divsPaid: 5\n        requestId: IBM-US\n        currency: USD\n        divsNGFlag: \"N\"\n        divsPayDate: 2013-08-08T00:00:00.000+0000\n      properties:\n        fsymId:\n          description: Factset Regional Security Identifier. Six alpha-numeric characters,\n            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's\n            best regional security data series per currency. For equities, all primary\n            listings per region and currency are allocated a regional-level permanent\n            identifier. The regional-level permanent identifier will be available\n            once a SEDOL representing the region/currency has been allocated and the\n            identifiers are on FactSet.\n          example: SJY281-R\n          type: string\n        divsExDate:\n          description: Ex-Date of the dividend expressed in YYYY-MM-DD format.\n          example: 2013-08-01\n          format: date\n          type: string\n        adjDate:\n          description: Date of last split for which prices and volume have been adjusted.\n          example: 2005-02-07\n          format: date\n          type: string\n        currency:\n          description: 'Currency ISO code. For more details, visit [Online Assistant\n            Page #1470](https://oa.apps.factset.com/pages/1470).'\n          example: USD\n          type: string\n        divsPaid:\n          description: Amount of the dividend paid.\n          example: 5\n          format: double\n          type: number\n        divsRecDate:\n          description: Date the dividend was recorded expressed in YYYY-MM-DD format.\n          example: 2013-07-10\n          format: date\n          type: string\n        divsPayDate:\n          description: Date the dividend will be paid expressed in YYYY-MM-DD format.\n          example: 2013-08-08\n          format: date\n          type: string\n        divsTypeC:\n          description: 'Dividend type code. For code descriptions, visit [Online Assistant\n            Page #8764](https://oa.apps.factset.com/pages/8764).'\n          example: 1049\n          type: integer\n        divsTypeD:\n          description: 'Description of dividend type. For type descriptions, visit\n            [Online Assistant Page #8764](https://oa.apps.factset.com/pages/8764).'\n          example: U.S. Currency\n          type: string\n        divsTaxC:\n          description: 'Tax Marker Code. For code descriptions, visit [Online Assistant\n            Page #15265](https://oa.apps.factset.com/pages/15265).'\n          example: FC\n          type: string\n        divsTaxD:\n          description: 'Description of Tax Marker. For type descriptions, visit [Online\n            Assistant Page #15265](https://oa.apps.factset.com/pages/15265).'\n          example: Free of tax\n          type: string\n        divsNGFlag:\n          description: 'Net/Gross Marker Code. For details describing Net vs. Gross\n            dividends, visit [Online Assistant Page #11512](https://oa.apps.factset.com/pages/11512).'\n          enum:\n          - \"N\"\n          - G\n          - T\n          - X\n          - V\n          - \"0\"\n          type: string\n        divsNGEquiv:\n          description: 'Net/Gross equivalent (opposite of dividend paid). For details\n            describing Net vs. Gross dividends, visit [Online Assistant Page #11512](https://oa.apps.factset.com/pages/11512).'\n          example: 5.5\n          format: double\n          type: number\n        requestId:\n          description: Identifier that was used for the request.\n          example: IBM-US\n          type: string\n      title: Dividend Object\n      type: object\n    splitsRequest:\n      description: Splits Request Body\n      properties:\n        ids:\n          description: |\n            The requested list of security identifiers. Accepted ID types include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\n          example:\n          - FDS-US\n          items:\n            type: string\n          maxItems: 2000\n          minItems: 1\n          type: array\n      required:\n      - ids\n      title: Splits Request Body\n      type: object\n    splitsResponse:\n      example:\n        data:\n        - date: 2013-08-01T00:00:00.000+0000\n          requestId: IBM-US\n          fsymId: SJY281-R\n          splitFactor: 2\n          splitComment: 'Split: 2 for 1'\n        - date: 2013-08-01T00:00:00.000+0000\n          requestId: IBM-US\n          fsymId: SJY281-R\n          splitFactor: 2\n          splitComment: 'Split: 2 for 1'\n      properties:\n        data:\n          description: Array of Splits Objects\n          items:\n            $ref: '#/components/schemas/splits'\n          type: array\n      title: Splits Response\n      type: object\n    splits:\n      example:\n        date: 2013-08-01T00:00:00.000+0000\n        requestId: IBM-US\n        fsymId: SJY281-R\n        splitFactor: 2\n        splitComment: 'Split: 2 for 1'\n      properties:\n        fsymId:\n          description: Factset Regional Security Identifier. Six alpha-numeric characters,\n            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's\n            best regional security data series per currency. For equities, all primary\n            listings per region and currency are allocated a regional-level permanent\n            identifier. The regional-level permanent identifier will be available\n            once a SEDOL representing the region/currency has been allocated and the\n            identifiers are on FactSet.\n          example: SJY281-R\n          type: string\n        date:\n          description: Ex-Date of the split expressed in YYYY-MM-DD format.\n          example: 2013-08-01\n          format: date\n          type: string\n        splitFactor:\n          description: Split adjustment factor for n splits ago. A 2-for-1 split returns\n            .50, the number you would multiply the stock price by to adjust for the\n            split.\n          example: 2\n          format: double\n          type: number\n        splitComment:\n          description: Description for the type of split or spin off.\n          example: 'Split: 2 for 1'\n          type: string\n        requestId:\n          description: Identifier that was used for the request.\n          example: IBM-US\n          type: string\n      title: Split Object\n      type: object\n    sharesRequest:\n      description: Shares Request Body\n      properties:\n        ids:\n          description: |\n            The requested list of security identifiers. Accepted ID types include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\n          example:\n          - FDS-US\n          items:\n            type: string\n          maxItems: 1000\n          minItems: 1\n          type: array\n        startDate:\n          description: |\n            The start date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n          example: 2019-01-01\n          type: string\n        endDate:\n          description: |\n            The end date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n          example: 2019-12-31\n          type: string\n        frequency:\n          $ref: '#/components/schemas/frequency'\n        calendar:\n          $ref: '#/components/schemas/calendar'\n        splitAdjust:\n          $ref: '#/components/schemas/splitAdjust'\n      required:\n      - ids\n      title: Shares Request Body\n      type: object\n    sharesResponse:\n      example:\n        data:\n        - date: 2013-08-01T00:00:00.000+0000\n          sharesCompany: 649532000\n          adjDate: 2005-02-07T00:00:00.000+0000\n          sharesSecurity: 299532000\n          sharesCompanyNontraded: 657532000\n          requestId: IBM-US\n          fsymId: SJY281-R\n        - date: 2013-08-01T00:00:00.000+0000\n          sharesCompany: 649532000\n          adjDate: 2005-02-07T00:00:00.000+0000\n          sharesSecurity: 299532000\n          sharesCompanyNontraded: 657532000\n          requestId: IBM-US\n          fsymId: SJY281-R\n      properties:\n        data:\n          description: Array of Shares Objects\n          items:\n            $ref: '#/components/schemas/shares'\n          type: array\n      title: Shares Response\n      type: object\n    shares:\n      example:\n        date: 2013-08-01T00:00:00.000+0000\n        sharesCompany: 649532000\n        adjDate: 2005-02-07T00:00:00.000+0000\n        sharesSecurity: 299532000\n        sharesCompanyNontraded: 657532000\n        requestId: IBM-US\n        fsymId: SJY281-R\n      properties:\n        fsymId:\n          description: Factset Regional Security Identifier. Six alpha-numeric characters,\n            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's\n            best regional security data series per currency. For equities, all primary\n            listings per region and currency are allocated a regional-level permanent\n            identifier. The regional-level permanent identifier will be available\n            once a SEDOL representing the region/currency has been allocated and the\n            identifiers are on FactSet.\n          example: SJY281-R\n          type: string\n        date:\n          description: Date expressed in YYYY-MM-DD format.\n          example: 2013-08-01\n          format: date\n          type: string\n        adjDate:\n          description: Date of last split for which return has been adjusted. Use\n            the /factset-prices/v#/splits endpoint for details on split. If not available,\n            date will return as 0001-01-01.\n          example: 2005-02-07\n          format: date\n          type: string\n        sharesSecurity:\n          description: '**Security-level** Common Shares Outstanding in base units.\n            Shares sourced primarily from SEC filings. Securities in certain countries\n            will include treasury shares. For details visit [Online Assistant Page\n            #10435](https://oa.apps.factset.com/pages/10435)'\n          example: 299532000\n          type: number\n        sharesCompany:\n          description: '**Company-level** Shares Outstanding aggregated across all\n            share classes. Non-traded shares are *excluded*. In base units. For more\n            details, visit [Online Assistant Page #16867](https://oa.apps.factset.com/pages/16867)'\n          example: 649532000\n          type: number\n        sharesCompanyNontraded:\n          description: '**Company-level** Shares Outstanding aggregated across all\n            share classes. Non-traded shares are *included* to the calculation basis\n            by the proportion of their nominal or par value. In base units. For more\n            details, visit [Online Assistant Page #16867](https://oa.apps.factset.com/pages/16867)'\n          example: 657532000\n          type: number\n        requestId:\n          description: Identifier that was used for the request.\n          example: IBM-US\n          type: string\n      title: Shares Object\n      type: object\n    marketValueRequest:\n      description: Market Value Request Body\n      properties:\n        ids:\n          description: |\n            The requested list of security identifiers. Accepted ID types include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\n          example:\n          - FDS-US\n          items:\n            type: string\n          maxItems: 2000\n          minItems: 1\n          type: array\n        startDate:\n          description: |\n            The start date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n          example: 2019-01-01\n          type: string\n        endDate:\n          description: |\n            The end date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n          example: 2019-12-31\n          type: string\n        frequency:\n          $ref: '#/components/schemas/frequency'\n        currency:\n          description: Currency code for adjusting prices. Default is Local. For a\n            list of currency ISO codes, visit [Online Assistant Page 1470](https://oa.apps.factset.com/pages/1470).\n          example: USD\n          title: Request Currency\n          type: string\n        calendar:\n          $ref: '#/components/schemas/calendar'\n      required:\n      - ids\n      title: Market Value Request Body\n      type: object\n    marketValueResponse:\n      example:\n        data:\n        - date: 2020-07-07T00:00:00.000+0000\n          entityMarketValue: 1022362841136.31\n          entityMarketValueExNonTraded: 952768582453.33\n          requestId: GOOGL\n          fsymId: HTM0LK-R\n          securityMarketValue: 449970657342.5\n          currency: USD\n        - date: 2020-07-07T00:00:00.000+0000\n          entityMarketValue: 1022362841136.31\n          entityMarketValueExNonTraded: 952768582453.33\n          requestId: GOOGL\n          fsymId: HTM0LK-R\n          securityMarketValue: 449970657342.5\n          currency: USD\n      properties:\n        data:\n          description: Array of Market Value Objects\n          items:\n            $ref: '#/components/schemas/marketValue'\n          type: array\n      title: Market Value Response\n      type: object\n    marketValue:\n      example:\n        date: 2020-07-07T00:00:00.000+0000\n        entityMarketValue: 1022362841136.31\n        entityMarketValueExNonTraded: 952768582453.33\n        requestId: GOOGL\n        fsymId: HTM0LK-R\n        securityMarketValue: 449970657342.5\n        currency: USD\n      properties:\n        fsymId:\n          description: Factset Regional Security Identifier. Six alpha-numeric characters,\n            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's\n            best regional security data series per currency. For equities, all primary\n            listings per region and currency are allocated a regional-level permanent\n            identifier. The regional-level permanent identifier will be available\n            once a SEDOL representing the region/currency has been allocated and the\n            identifiers are on FactSet.\n          example: HTM0LK-R\n          type: string\n        date:\n          description: Ending date for the period expressed in YYYY-MM-DD format.\n          example: 2020-07-07\n          format: date\n          type: string\n        currency:\n          description: 'Currency ISO code. For more details, visit [Online Assistant\n            Page #1470](https://oa.apps.factset.com/pages/1470).'\n          example: USD\n          type: string\n        entityMarketValue:\n          description: 'Aggregate market value across all share classes and includes\n            non-traded shares which are added to the calculation basis by the proportion\n            of their nominal or par value. Values are in base units. To value non-traded\n            shares, the price of the parent equity provides the most appropriate approximation\n            of what the non-traded shares would be worth in the open market. For unique\n            companies with an ADR as the parent equity, since it is the only traded\n            security associated with that company, when calculating company-level\n            market value, the price of the ADR is used, but is scaled by the ADR ratio\n            since there''s not always a one-to-one relationship between ADR shares\n            and the non-traded shares which they represent. For more details visit\n            [Online Assistant Page #16867](https://my.apps.factset.com/oa/pages/16867). '\n          example: 1022362841136.31\n          format: double\n          type: number\n        entityMarketValueExNonTraded:\n          description: 'Aggregate across all share classes and excludes non-traded\n            shares. Values are in base units. For more details visit [Online Assistant\n            Page #16867](https://my.apps.factset.com/oa/pages/16867).'\n          example: 952768582453.33\n          format: double\n          type: number\n        securityMarketValue:\n          description: Returns the security level market value calculated as the share\n            price multiplied by the number of shares at the security level. **Note:**\n            History is available back to Oct-1999 for North American securities, and\n            1-Jan-2001 for non-North American securities.\n          example: 449970657342.5\n          format: double\n          type: number\n        requestId:\n          description: Identifier that was used for the request.\n          example: GOOGL\n          type: string\n      title: Market Value Object\n      type: object\n    highLowRequest:\n      description: High Low Request Body\n      properties:\n        ids:\n          description: |\n            The requested list of security identifiers. Accepted ID types include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\n          example:\n          - FDS-US\n          items:\n            type: string\n          maxItems: 2000\n          minItems: 1\n          type: array\n        date:\n          description: |\n            The specific date requested for a given period range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n          example: 2020-07-07\n          type: string\n        period:\n          $ref: '#/components/schemas/period'\n        priceType:\n          $ref: '#/components/schemas/priceType'\n        calendar:\n          $ref: '#/components/schemas/calendar'\n        currency:\n          description: Currency code for adjusting prices. Default is Local. For a\n            list of currency ISO codes, visit [Online Assistant Page 1470](https://oa.apps.factset.com/pages/1470).\n          type: string\n        adjust:\n          $ref: '#/components/schemas/adjust'\n      required:\n      - ids\n      title: High Low Request Body\n      type: object\n    highLowResponse:\n      example:\n        data:\n        - date: 2020-07-07T00:00:00.000+0000\n          adjDate: 2005-02-07T00:00:00.000+0000\n          period: 52W\n          priceLow: 121.25\n          priceLowDate: 2019-09-14T00:00:00.000+0000\n          requestId: GOOGL\n          fsymId: HTM0LK-R\n          priceHighDate: 2020-03-05T00:00:00.000+0000\n          priceHigh: 126\n        - date: 2020-07-07T00:00:00.000+0000\n          adjDate: 2005-02-07T00:00:00.000+0000\n          period: 52W\n          priceLow: 121.25\n          priceLowDate: 2019-09-14T00:00:00.000+0000\n          requestId: GOOGL\n          fsymId: HTM0LK-R\n          priceHighDate: 2020-03-05T00:00:00.000+0000\n          priceHigh: 126\n      properties:\n        data:\n          description: Array of High Low Objects\n          items:\n            $ref: '#/components/schemas/highLow'\n          type: array\n      title: High Low Response\n      type: object\n    highLow:\n      example:\n        date: 2020-07-07T00:00:00.000+0000\n        adjDate: 2005-02-07T00:00:00.000+0000\n        period: 52W\n        priceLow: 121.25\n        priceLowDate: 2019-09-14T00:00:00.000+0000\n        requestId: GOOGL\n        fsymId: HTM0LK-R\n        priceHighDate: 2020-03-05T00:00:00.000+0000\n        priceHigh: 126\n      properties:\n        adjDate:\n          description: Date of last split for which prices have been adjusted.\n          example: 2005-02-07\n          format: date\n          type: string\n        date:\n          description: Specific reference date for the period expressed in YYYY-MM-DD\n            format.\n          example: 2020-07-07\n          format: date\n          type: string\n        period:\n          description: The period of measure requested using the period query parameter.\n          example: 52W\n          type: string\n        fsymId:\n          description: Factset Regional Security Identifier. Six alpha-numeric characters,\n            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's\n            best regional security data series per currency. For equities, all primary\n            listings per region and currency are allocated a regional-level permanent\n            identifier. The regional-level permanent identifier will be available\n            once a SEDOL representing the region/currency has been allocated and the\n            identifiers are on FactSet.\n          example: HTM0LK-R\n          type: string\n        priceHigh:\n          description: High price over the period requested. This can represent the\n            intra-day or closing price depending on the priceType requested. By default\n            the price is as of closing in local trading currency, split adjusted and\n            not spinoff adjusted.\n          example: 126\n          format: double\n          type: number\n        priceLow:\n          description: Low price over the period requested. This can represent the\n            intra-day or closing price depending on the priceType requested. By default\n            the price is as of closing in local trading currency, split adjusted and\n            not spinoff adjusted.\n          example: 121.25\n          format: double\n          type: number\n        priceHighDate:\n          description: Date in which the highest price occurred over the requested\n            period  for the given id expressed in YYYY-MM-DD format.\n          example: 2020-03-05\n          format: date\n          type: string\n        priceLowDate:\n          description: Date in which the lowest price occurred over the requested\n            period for the given id expressed in YYYY-MM-DD format.\n          example: 2019-09-14\n          format: date\n          type: string\n        requestId:\n          description: Identifier that was used for the request.\n          example: GOOGL\n          type: string\n      title: High Low Object\n      type: object\n    returnsSnapshotRequest:\n      description: Returns Snapshot Request Body\n      properties:\n        ids:\n          description: |\n            The requested list of security identifiers. Accepted ID types include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\n          example:\n          - FDS-US\n          items:\n            type: string\n          maxItems: 2000\n          minItems: 1\n          type: array\n        date:\n          description: |\n            The date in **YYYY-MM-DD** format. This controls the perspective dates to the calculate the returns. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n          example: 2019-12-31\n          type: string\n        currency:\n          description: Currency code for adjusting prices. Default is Local. For a\n            list of currency ISO codes, visit [Online Assistant Page 1470](https://oa.apps.factset.com/pages/1470).\n          example: USD\n          title: Request Currency\n          type: string\n        calendar:\n          $ref: '#/components/schemas/calendar'\n        dividendAdjust:\n          $ref: '#/components/schemas/dividendAdjustSnapshot'\n      required:\n      - ids\n      title: Returns Snapshot Request Body\n      type: object\n    returnsSnapshotResponse:\n      example:\n        data:\n        - date: 2020-09-09T00:00:00.000+0000\n          oneMonth: -2.1606863\n          quarterToDate: 1.2337565\n          fiveYearAnnualized: 0.8408688\n          oneYear: -14.263678\n          yearToDate: -8.788413\n          fsymId: SJY281-R\n          monthToDate: -0.851506\n          oneDay: 0.86627007\n          dividendAdjust: PRICE\n          sixMonth: 3.7772775\n          thirtyYearAnnualized: 7.5250373\n          nineMonth: -8.706689\n          weekToDate: -0.03270507\n          threeYearAnnualized: -0.49112806\n          ipoToDateAnnualized: 6.5763993\n          requestId: IBM-US\n          twoYearAnnualized: -3.7836754\n          threeMonth: -7.2874727\n          currency: USD\n          twentyYearAnnualized: 1.8996516\n          tenYearAnnualized: 2.8786583\n        - date: 2020-09-09T00:00:00.000+0000\n          oneMonth: -2.1606863\n          quarterToDate: 1.2337565\n          fiveYearAnnualized: 0.8408688\n          oneYear: -14.263678\n          yearToDate: -8.788413\n          fsymId: SJY281-R\n          monthToDate: -0.851506\n          oneDay: 0.86627007\n          dividendAdjust: PRICE\n          sixMonth: 3.7772775\n          thirtyYearAnnualized: 7.5250373\n          nineMonth: -8.706689\n          weekToDate: -0.03270507\n          threeYearAnnualized: -0.49112806\n          ipoToDateAnnualized: 6.5763993\n          requestId: IBM-US\n          twoYearAnnualized: -3.7836754\n          threeMonth: -7.2874727\n          currency: USD\n          twentyYearAnnualized: 1.8996516\n          tenYearAnnualized: 2.8786583\n      properties:\n        data:\n          description: Array of Returns Snapshot Objects\n          items:\n            $ref: '#/components/schemas/returnsSnapshot'\n          type: array\n      title: Returns Snapshot Response\n      type: object\n    returnsSnapshot:\n      example:\n        date: 2020-09-09T00:00:00.000+0000\n        oneMonth: -2.1606863\n        quarterToDate: 1.2337565\n        fiveYearAnnualized: 0.8408688\n        oneYear: -14.263678\n        yearToDate: -8.788413\n        fsymId: SJY281-R\n        monthToDate: -0.851506\n        oneDay: 0.86627007\n        dividendAdjust: PRICE\n        sixMonth: 3.7772775\n        thirtyYearAnnualized: 7.5250373\n        nineMonth: -8.706689\n        weekToDate: -0.03270507\n        threeYearAnnualized: -0.49112806\n        ipoToDateAnnualized: 6.5763993\n        requestId: IBM-US\n        twoYearAnnualized: -3.7836754\n        threeMonth: -7.2874727\n        currency: USD\n        twentyYearAnnualized: 1.8996516\n        tenYearAnnualized: 2.8786583\n      properties:\n        fsymId:\n          description: Factset Regional Security Identifier. Six alpha-numeric characters,\n            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's\n            best regional security data series per currency. For equities, all primary\n            listings per region and currency are allocated a regional-level permanent\n            identifier. The regional-level permanent identifier will be available\n            once a SEDOL representing the region/currency has been allocated and the\n            identifiers are on FactSet.\n          example: SJY281-R\n          type: string\n        date:\n          description: Specific reference date for the period expressed in YYYY-MM-DD\n            format.\n          example: 2020-09-09\n          format: date\n          type: string\n        currency:\n          description: 'Currency ISO code. For more details, visit [Online Assistant\n            Page #1470](https://oa.apps.factset.com/pages/1470).'\n          example: USD\n          type: string\n        requestId:\n          description: Identifier that was used for the request.\n          example: IBM-US\n          type: string\n        oneDay:\n          description: Returns the price performance of the security for the previous\n            one day from the given date.\n          example: 0.86627007\n          format: double\n          type: number\n        oneMonth:\n          description: Returns the price performance of the security for the past\n            one month.\n          example: -2.1606863\n          format: double\n          type: number\n        threeMonth:\n          description: Returns the price performance of the security for the past\n            three months.\n          example: -7.2874727\n          format: double\n          type: number\n        sixMonth:\n          description: Returns the price performance of the security for the past\n            six months.\n          example: 3.7772775\n          format: double\n          type: number\n        nineMonth:\n          description: Returns the price performance of the security for the past\n            nine months.\n          example: -8.706689\n          format: double\n          type: number\n        oneYear:\n          description: Returns the price performance of the security for the past\n            one year.\n          example: -14.263678\n          format: double\n          type: number\n        quarterToDate:\n          description: Returns the price performance of the security from the previous\n            calendar quarter end to the given date.\n          example: 1.2337565\n          format: double\n          type: number\n        weekToDate:\n          description: Returns the price performance of the security from the previous\n            week (usually Friday) to the given date.\n          example: -0.03270507\n          format: double\n          type: number\n        monthToDate:\n          description: Returns the price performance of the security from the previous\n            month-end to the given date.\n          example: -0.851506\n          format: double\n          type: number\n        yearToDate:\n          description: Returns the price performance of the security from the previous\n            calendar year-end to the given date.\n          example: -8.788413\n          format: double\n          type: number\n        twoYearAnnualized:\n          description: Returns the annualized compound total return for two years.\n          example: -3.7836754\n          format: double\n          type: number\n        threeYearAnnualized:\n          description: Returns the annualized compound total return for three years.\n          example: -0.49112806\n          format: double\n          type: number\n        fiveYearAnnualized:\n          description: Returns the annualized compound total return for five years.\n          example: 0.8408688\n          format: double\n          type: number\n        tenYearAnnualized:\n          description: Returns the annualized compound total return for ten years.\n          example: 2.8786583\n          format: double\n          type: number\n        twentyYearAnnualized:\n          description: Returns the annualized compound total return for twenty years.\n          example: 1.8996516\n          format: double\n          type: number\n        thirtyYearAnnualized:\n          description: Returns the annualized compound total return for thirty years.\n          example: 7.5250373\n          format: double\n          type: number\n        ipoToDateAnnualized:\n          description: Returns the annualized compound total return from the ipo date.\n            The calculation uses the closing price as of the IPO date, and not the\n            IPO price itself.\n          example: 6.5763993\n          format: double\n          type: number\n        dividendAdjust:\n          description: |\n            Controls the dividend reinvestment for the returns calculation. Dividends will be reinvested on the date the dividends go ex (when the dividends belong to the seller rather than the buyer). Visit [OA 8748](https://my.apps.factset.com/oa/pages/8748) for calculation methodology.\n              * **PRICE** = Price Change - Dividends Excluded.\n              * **EXDATE** = Simple Return - Dividends Received on exdate but not reinvested. Dividends accumulated throughout the specified period are added to the price at the end of the period.\n              * **EXDATE_C** = Compound Return - Dividends reinvested on exdate. Dividends accumulated throughout the specified period are used to buy more shares of stock in the company.\n          example: PRICE\n          type: string\n      title: Return Snapshot Object\n      type: object\n    rolloverResponse:\n      example:\n        data:\n        - americasZeroDate: 2020-06-17T00:00:00.000+0000\n          europeZeroDate: 2020-06-17T00:00:00.000+0000\n          asiapacificZeroDate: 2020-06-18T00:00:00.000+0000\n          americasRollTime: 2000-01-23T04:56:07.000+00:00\n          asiapacificRollTime: 2000-01-23T04:56:07.000+00:00\n          europeRollTime: 2000-01-23T04:56:07.000+00:00\n        - americasZeroDate: 2020-06-17T00:00:00.000+0000\n          europeZeroDate: 2020-06-17T00:00:00.000+0000\n          asiapacificZeroDate: 2020-06-18T00:00:00.000+0000\n          americasRollTime: 2000-01-23T04:56:07.000+00:00\n          asiapacificRollTime: 2000-01-23T04:56:07.000+00:00\n          europeRollTime: 2000-01-23T04:56:07.000+00:00\n      properties:\n        data:\n          description: Array of `Database Rollover` objects.\n          items:\n            $ref: '#/components/schemas/rollover'\n          type: array\n      title: Rollover Response\n      type: object\n    rollover:\n      example:\n        americasZeroDate: 2020-06-17T00:00:00.000+0000\n        europeZeroDate: 2020-06-17T00:00:00.000+0000\n        asiapacificZeroDate: 2020-06-18T00:00:00.000+0000\n        americasRollTime: 2000-01-23T04:56:07.000+00:00\n        asiapacificRollTime: 2000-01-23T04:56:07.000+00:00\n        europeRollTime: 2000-01-23T04:56:07.000+00:00\n      properties:\n        americasRollTime:\n          description: Time of last zero date rollover for the Americas. This is in\n            Eastern Time Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS],\n            following ISO 8601.\n          format: date-time\n          type: string\n        americasZeroDate:\n          description: Current relative zero date for the Americas. Date is expressed\n            in Eastern Time and expressed as YYYY-MM-DD.\n          example: 2020-06-17\n          format: date\n          type: string\n        asiapacificRollTime:\n          description: Time of last zero date rollover for Asia/Pacific. This is in\n            Eastern Time Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS],\n            following ISO 8601.\n          format: date-time\n          type: string\n        asiapacificZeroDate:\n          description: Current relative zero date for Asia/Pacific. This is in Eastern\n            Time Zone\n          example: 2020-06-18\n          format: date\n          type: string\n        europeRollTime:\n          description: Time of last zero date rollover for Europe. This is in Eastern\n            Time Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS],\n            following ISO 8601.\n          format: date-time\n          type: string\n        europeZeroDate:\n          description: Current relative zero date for Europe. This is in Eastern Time\n            Zone\n          example: 2020-06-17\n          format: date\n          type: string\n      title: Rollover Object\n      type: object\n    BatchStatusResponse:\n      properties:\n        data:\n          $ref: '#/components/schemas/BatchStatus'\n      title: Batch Status Response\n      type: object\n    BatchStatus:\n      properties:\n        id:\n          description: the id of batch request.\n          format: uuid\n          type: string\n        startTime:\n          description: Time when the batch request is started. This is in Eastern\n            Time Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS],\n            following ISO 8601.\n          format: date-time\n          type: string\n        endTime:\n          description: Time when the batch request is ended. This is in Eastern Time\n            Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS], following\n            ISO 8601.\n          format: date-time\n          type: string\n        status:\n          enum:\n          - QUEUED\n          - EXECUTING\n          - DONE\n          - FAILED\n          type: string\n        error:\n          description: Error message.\n          example: 'Invalid Parameter (s): curr. Please modify your request to use\n            parameters outlined in the specification for this endpoint.'\n          type: string\n      title: Batch Status\n      type: object\n    errorResponse:\n      properties:\n        status:\n          description: status\n          example: Bad Request\n          type: string\n        timestamp:\n          description: timestamp in YYYY-MM-DD HH:MM:SS.SSS\n          format: date-time\n          type: string\n        path:\n          description: The Endpoint path {package}/version/{endpoint}\n          example: /factset-prices/v1/prices\n          type: string\n        message:\n          description: The plain text error message\n          example: Validation Error\n          type: string\n        subErrors:\n          $ref: '#/components/schemas/errorResponse_subErrors'\n      title: Error Response\n      type: object\n    idsMax1000:\n      description: |\n        The requested list of security identifiers. Accepted ID types include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\n      example:\n      - FDS-US\n      items:\n        type: string\n      maxItems: 1000\n      minItems: 1\n      type: array\n    idsMax2000:\n      description: |\n        The requested list of security identifiers. Accepted ID types include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\n      example:\n      - FDS-US\n      items:\n        type: string\n      maxItems: 2000\n      minItems: 1\n      type: array\n    idsBatchMax5000:\n      description: \"The requested list of security identifiers. Accepted ID types\\\n        \\ include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\\\n        \\ \\n\u003cp\u003eids limit =  2000 per non-batch request / 5000 per batch request\u003c/p\u003e\\n\"\n      example:\n      - FDS-US\n      items:\n        type: string\n      type: array\n    fixedIds:\n      description: |\n        The requested list of Fixed Income Security Identifiers.\n      example:\n      - 037833BX\n      items:\n        type: string\n      maxItems: 2000\n      minItems: 1\n      type: array\n    startDate:\n      description: |\n        The start date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n      example: 2019-01-01\n      type: string\n    endDate:\n      description: |\n        The end date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n      example: 2019-12-31\n      type: string\n    dateHL:\n      description: |\n        The specific date requested for a given period range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n      example: 2020-07-07\n      type: string\n    frequency:\n      default: D\n      description: |\n        Controls the display frequency of the data returned.\n          * **D** = Daily\n          * **W** = Weekly, based on the last day of the week of the start date.\n          * **M** = Monthly, based on the last trading day of the month.\n          * **AM** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n          * **CQ** = Quarterly based on the last trading day of the calendar quarter (March, June, September, or December).\n          * **FQ** = Fiscal Quarter of the company.\n          * **AY** = Actual Annual, based on the start date.\n          * **CY** = Calendar Annual, based on the last trading day of the calendar year.\n          * **FY** = Fiscal Annual, based on the last trading day of the company's fiscal year.\n      enum:\n      - D\n      - W\n      - M\n      - AM\n      - CQ\n      - FQ\n      - AY\n      - CY\n      - FY\n      example: M\n      type: string\n    frequencyFi:\n      default: D\n      description: |\n        Controls the display frequency of the data returned.\n          * **D** = Daily\n          * **M** = Monthly, based on the last trading day of the month.\n          * **AM** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n          * **MTD** = Month-to-date\n          * **CQ** = Quarterly based on the last trading day of the calendar quarter (March, June, September, or December).\n          * **CQTD** =  Calendar quarter-to-date\n          * **AY** = Actual Annual, based on the start date.\n          * **CY** = Calendar Annual, based on the last trading day of the calendar year.\n          * **CYTD** = Calendar Year-to-date.\n      enum:\n      - D\n      - M\n      - AM\n      - MTD\n      - CQ\n      - CQTD\n      - AY\n      - CY\n      - CYTD\n      example: M\n      type: string\n    calendar:\n      default: FIVEDAY\n      description: Calendar of data returned. SEVENDAY includes weekends. LOCAL calendar\n        will default to the securities' trading calendar which excludes date records\n        for respective holiday periods.\n      enum:\n      - FIVEDAY\n      - SEVENDAY\n      - LOCAL\n      example: FIVEDAY\n      type: string\n    requestCurrency:\n      description: Currency code for adjusting prices. Default is Local. For a list\n        of currency ISO codes, visit [Online Assistant Page 1470](https://oa.apps.factset.com/pages/1470).\n      example: USD\n      title: Request Currency\n      type: string\n    adjust:\n      default: SPLIT\n      description: |\n        Controls the split, spinoff, and dividend adjustments for the prices. \u003cp\u003eFor more information, visit [Online Assistant Page 614](https://oa.apps.factset.com/pages/614)\u003c/p\u003e\n          * **SPLIT** = Split ONLY Adjusted. This is used by default.\n          * **SPINOFF** = Splits \u0026 Spinoff Adjusted.\n          * **DIVADJ** = Splits, Spinoffs, and Dividends adjusted.\n          * **UNSPLIT** = No Adjustments, Controls the split and dividend adjustments for the prices.\n      enum:\n      - SPLIT\n      - SPINOFF\n      - DIVADJ\n      - UNSPLIT\n      example: SPLIT\n      type: string\n    dividendAdjust:\n      default: PRICE\n      description: |\n        Controls the dividend reinvestment for the returns calculation.\n          * **PRICE** = Price Change - Dividends Excluded\n          * **EXDATE** = Simple Return - Dividends Received on exdate but not reinvested\n          * **PAYDATE** = Simple Return - Dividends Received on paydate but not reinvested\n          * **EXDATE_C** = Compound Return - Dividends reinvested on exdate\n          * **PAYDATE_C** = Compound Return - Dividends reinvested on paydate.\n      enum:\n      - PRICE\n      - EXDATE\n      - PAYDATE\n      - EXDATE_C\n      - PAYDATE_C\n      type: string\n    splitAdjust:\n      default: SPLIT\n      description: Code to control split adjustments for shares count.\n      enum:\n      - SPLIT\n      - UNSPLIT\n      type: string\n    rollingPeriod:\n      description: Period of measure for the rolling cumulative return. This does\n        not change display `frequency` but rather the underlying return calculation\n        period. All periods are referencing actual periods of measure, not period-ends.\n        For example, 1M rolling period will go back to that date the previous month,\n        which is not always the month-end date.\n      enum:\n      - 1D\n      - 1W\n      - 1M\n      - 3M\n      - 6M\n      - 52W\n      - 2Y\n      - 3Y\n      - 5Y\n      - 10Y\n      type: string\n    period:\n      default: 52W\n      description: Period of measure for Prices High Low. This does not change display\n        `frequency` but rather the underlying return calculation period. All periods\n        are referencing actual periods of measure, not period-ends. For example, 1M\n        rolling period will go back to that date the previous month, which is not\n        always the month-end date.\n      enum:\n      - 1D\n      - 1W\n      - 1M\n      - 3M\n      - 6M\n      - 52W\n      - 2Y\n      - 3Y\n      - 5Y\n      - 10Y\n      type: string\n    priceType:\n      default: CLOSE\n      description: Controls whether price high low data is returned intra-day or at\n        close.\n      enum:\n      - INTRADAY\n      - CLOSE\n      type: string\n    currency:\n      description: Currency code for adjusting prices. Default is Local. For a list\n        of currency ISO codes, visit [Online Assistant Page 1470](https://oa.apps.factset.com/pages/1470).\n      type: string\n    dateRS:\n      description: |\n        The date in **YYYY-MM-DD** format. This controls the perspective dates to the calculate the returns. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint.\n      example: 2019-12-31\n      type: string\n    dividendAdjustSnapshot:\n      default: PRICE\n      description: |\n        Controls the dividend reinvestment for the returns calculation. Dividends will be reinvested on the date the dividends go ex (when the dividends belong to the seller rather than the buyer). Visit [OA 8748](https://my.apps.factset.com/oa/pages/8748) for calculation methodology.\n          * **PRICE** = Price Change - Dividends Excluded.\n          * **EXDATE** = Simple Return - Dividends Received on exdate but not reinvested. Dividends accumulated throughout the specified period are added to the price at the end of the period.\n          * **EXDATE_C** = Compound Return - Dividends reinvested on exdate. Dividends accumulated throughout the specified period are used to buy more shares of stock in the company.\n      enum:\n      - PRICE\n      - EXDATE\n      - EXDATE_C\n      example: PRICE\n      type: string\n    batch:\n      default: \"N\"\n      description: |\n        Enables the ability to asynchronously \"batch\" the request, supporting a long-running request up to 10 minutes. Upon requesting batch=Y, the service will respond back with an HTTP Status Code of 202. Once a batch request is submitted, use the `batch/v1/status` to see if the job has completed. Once completed, retrieve the results of the request via `batch/v1/result`. \u003cp\u003e**`batch` is currently in **BETA**. Additional Access Required. To gain access to this feature, reach out to your FactSet Account team or \"Report Issue\" above and our support teams can assist.** Upon requesting \"batch\": \"Y\", the service will respond back with an HTTP Status Code of 202.\n      enum:\n      - \"Y\"\n      - \"N\"\n      type: string\n    errorResponse_subErrors:\n      description: subErrors related to the error message. Null if not applicable.\n      properties:\n        object:\n          description: the operation ID\n          type: string\n        field:\n          description: Parameter Field Name\n          type: string\n        message:\n          description: Error message\n          type: string\n        rejectedValue:\n          description: Rejected Values in an Array\n          items:\n            type: string\n          type: array\n      type: object\n  securitySchemes:\n    FactSetOAuth2:\n      flows:\n        clientCredentials:\n          scopes: {}\n          tokenUrl: https://auth.factset.com/as/token.oauth2\n      type: oauth2\n    FactSetApiKey:\n      scheme: basic\n      type: http\n\n",
			"canonicalURL": "/github.com/factset/enterprise-sdk@dcf75a02daedc726c313912a349d2863114bc92c/-/blob/code/java/FactSetPrices/v1/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/factset/enterprise-sdk/blob/dcf75a02daedc726c313912a349d2863114bc92c/code/java/FactSetPrices/v1/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/factset-prices/v1/returns\": get: security: security \"FactSetOAuth2\" (index 1): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}