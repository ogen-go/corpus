{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/brreg/openAPI"
		},
		"file": {
			"name": "fdk.json",
			"size": 0,
			"path": "specs/fdk.json",
			"byteSize": 35464,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"description\": \"Provides a basic search api against the National Data Directory of Norway\",\n    \"version\": \"1.0\",\n    \"title\": \"National Data Directory Search API\",\n    \"termsOfService\": \"https://fellesdatakatalog.brreg.no/about\",\n    \"contact\": {\n      \"name\": \"Brønnøysundregistrene\",\n      \"url\": \"https://fellesdatakatalog.brreg.no\",\n      \"email\": \"fellesdatakatalog@brreg.no\"\n    },\n    \"license\": {\n      \"name\": \"License of API\",\n      \"url\": \"http://data.norge.no/nlod/no/2.0\"\n    }\n  },\n  \"externalDocs\": {\n    \"description\": \"Dokumentasjon på Informasjonsforvaltning GitHub\",\n    \"url\": \"https://informasjonsforvaltning.github.io/felles-datakatalog/datasett-katalog/api/\"\n  },\n  \"tags\": [\n    {\n      \"name\": \"catalog-service\",\n      \"description\": \"Catalog Service\"\n    },\n    {\n      \"name\": \"datasets-query-service\",\n      \"description\": \"Datasets Query Service\"\n    },\n    {\n      \"name\": \"harvest-query-service\",\n      \"description\": \"Harvest Query Service\"\n    },\n    {\n      \"name\": \"publisher-query-service\",\n      \"description\": \"Publisher Query Service\"\n    },\n    {\n      \"name\": \"terms-query-service\",\n      \"description\": \"Terms Query Service\"\n    }\n  ],\n  \"paths\": {\n    \"/aggregateDataset\": {\n      \"get\": {\n        \"tags\": [\n          \"datasets-query-service\"\n        ],\n        \"summary\": \"Aggregates dataset count per organization path.\",\n        \"operationId\": \"aggregateDatasetsUsingGET\",\n        \"parameters\": [\n          {\n            \"name\": \"q\",\n            \"in\": \"query\",\n            \"description\": \"q\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/catalogs\": {\n      \"get\": {\n        \"tags\": [\n          \"catalog-service\"\n        ],\n        \"summary\": \"Returns a specific harvested catalog according to the DCAT-AP-NO standard in one out of the three supported RDF formats.\",\n        \"description\": \"The three formats are: text/turtle, application/ld+json and application/rdf+xml\",\n        \"operationId\": \"getCatalogDcatUsingGET\",\n        \"parameters\": [\n          {\n            \"name\": \"Accept\",\n            \"in\": \"header\",\n            \"description\": \"The result's format. Alternative to format query string: text/turtle, application/ld+json, application/rdf+xml\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"description\": \"The URI of the catalog as used in harvested file\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"format\",\n            \"in\": \"query\",\n            \"description\": \"The result's format. An alternative to Accept header: json for json-ld, ttl -for turtle, xml or rdf for rdf-xml\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/ld+json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Catalog\"\n                }\n              },\n              \"application/rdf+xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Catalog\"\n                }\n              },\n              \"text/turtle\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Catalog\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/dataset\": {\n      \"get\": {\n        \"tags\": [\n          \"catalog-service\"\n        ],\n        \"summary\": \"Returns a specific dataset in accordance with the DCAT-AP-NO standard in one out of the three supported RDF formats.\",\n        \"description\": \"The three formats are: text/turtle, application/ld+json and application/rdf+xml\",\n        \"operationId\": \"getDatasetDcatUsingGET\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"description\": \"The id of the dataset. The id is a uuid given by the harvester application.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"format\",\n            \"in\": \"query\",\n            \"description\": \"The result's format. An alternative to Accept header: json for json-ld, ttl -for turtle, xml or rdf for rdf-xml\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"Accept\",\n            \"in\": \"header\",\n            \"description\": \"The result's format. Alternative to format query string: text/turtle, application/ld+json, application/rdf+xml\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"*/*\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/ld+json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Dataset\"\n                }\n              },\n              \"application/rdf+xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Dataset\"\n                }\n              },\n              \"text/turtle\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Dataset\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/datasets\": {\n      \"get\": {\n        \"tags\": [\n          \"datasets-query-service\"\n        ],\n        \"summary\": \"Queries the catalog for datasets.\",\n        \"description\": \"Returns a list of matching datasets wrapped in a elasticsearch response. Max number returned by a single query is 100. Size parameters greater than 100 will not return more than 100 datasets. In order to access all datasets, use multiple queries and increment from parameter.\",\n        \"operationId\": \"searchUsingGET\",\n        \"parameters\": [\n          {\n            \"name\": \"q\",\n            \"in\": \"query\",\n            \"description\": \"the query string\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"theme\",\n            \"in\": \"query\",\n            \"description\": \"Filters on specified theme(s). ex. GOVE, or GOVE,SOCI\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"publisher\",\n            \"in\": \"query\",\n            \"description\": \"Filters on publisher name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"accessrights\",\n            \"in\": \"query\",\n            \"description\": \"Filters on accessrights, codes are PUBLIC, RESTRICTED or NON_PUBLIC \",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"orgPath\",\n            \"in\": \"query\",\n            \"description\": \"Filters on publisher's organization path (orgPath), e.g. /STAT/972417858/971040238\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"firstHarvested\",\n            \"in\": \"query\",\n            \"description\": \"Filters datasets that were first harvested x-days ago, e.g. a value of 100 will result in datasets that were harvested more than 100 days ago\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"lastHarvested\",\n            \"in\": \"query\",\n            \"description\": \"Filters datasets that were last harvested x-days ago, e.g. 10 will result in datasets that have not been harvested for the last 10 days.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"lastChanged\",\n            \"in\": \"query\",\n            \"description\": \"Filters datasets that has changed within the last x-days, e.g. a value of 10 will result in datasets that were changed during 10 days, i.e. its values have changed within the last 10 days\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"from\",\n            \"in\": \"query\",\n            \"description\": \"Returns datatasets from position x in the result set, 0 is the default value. A value of 150 will return the 150th dataset in the resultset\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"size\",\n            \"in\": \"query\",\n            \"description\": \"Specifies the size, i.e. the number of datasets to return in one request. The default is 10, the maximum number of datasets returned is 100\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 10\n            }\n          },\n          {\n            \"name\": \"lang\",\n            \"in\": \"query\",\n            \"description\": \"Specifies the language elements of the datasets to search in, default is nb\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"nb\"\n            }\n          },\n          {\n            \"name\": \"sortfield\",\n            \"in\": \"query\",\n            \"description\": \"Specifies the sort field, at the present we support title, modified and publisher. Default is no value\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sortdirection\",\n            \"in\": \"query\",\n            \"description\": \"Specifies the sort direction of the sorted result. The directions are: asc for ascending and desc for descending\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"subject\",\n            \"in\": \"query\",\n            \"description\": \"Filters datasets according their referred subjects\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"provenance\",\n            \"in\": \"query\",\n            \"description\": \"Filters datasets according to their provenance code, e.g. NASJONAL - nasjonal building block, VEDTAK - governmental decisions, BRUKER - user collected data and TREDJEPART - third party data\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"spatial\",\n            \"in\": \"query\",\n            \"description\": \"Filters datasets according to their spatial label, e.g. Oslo, Norge\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"opendata\",\n            \"in\": \"query\",\n            \"description\": \"Filters on distribution license and access rights. If true the distribution licence is open and the access rights are public.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Dataset\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/datasets/**\": {\n      \"get\": {\n        \"tags\": [\n          \"datasets-query-service\"\n        ],\n        \"summary\": \"Get a specific dataset.\",\n        \"description\": \"You must specify the dataset's identifier\",\n        \"operationId\": \"detailUsingGET\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/ld+json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Dataset\"\n                }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Dataset\"\n                }\n              },\n              \"application/rdf+xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Dataset\"\n                }\n              },\n              \"text/turtle\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Dataset\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/harvest/catalog\": {\n      \"get\": {\n        \"tags\": [\n          \"harvest-query-service\"\n        ],\n        \"summary\": \"Finds all harvest catalog records for a given orgpath.\",\n        \"operationId\": \"listCatalogHarvestRecordsUsingGET\",\n        \"parameters\": [\n          {\n            \"name\": \"q\",\n            \"in\": \"query\",\n            \"description\": \"The orgpath of the publisher, e.g. /STAT or /FYLKE\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/publisher\": {\n      \"get\": {\n        \"tags\": [\n          \"publisher-query-service\"\n        ],\n        \"summary\": \"Query for publishers.\",\n        \"description\": \"Returns the elasticsearch response with matching publishers\",\n        \"operationId\": \"publishersUsingGET\",\n        \"parameters\": [\n          {\n            \"name\": \"q\",\n            \"in\": \"query\",\n            \"description\": \"A query string to match a publisher name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Publisher\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/publisher/hierarchy\": {\n      \"get\": {\n        \"tags\": [\n          \"publisher-query-service\"\n        ],\n        \"summary\": \"Returns all publishers in a hierarchy.\",\n        \"operationId\": \"publisherNamesUsingGET\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PublisherHit\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/publishercount\": {\n      \"get\": {\n        \"tags\": [\n          \"datasets-query-service\"\n        ],\n        \"summary\": \"Aggregate dataset count per publisher.\",\n        \"description\": \"Returns a list of publishers and the total number of dataset for each of them\",\n        \"operationId\": \"publisherCountUsingGET\",\n        \"parameters\": [\n          {\n            \"name\": \"publisher\",\n            \"in\": \"query\",\n            \"description\": \"publisher\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/terms\": {\n      \"get\": {\n        \"tags\": [\n          \"terms-query-service\"\n        ],\n        \"summary\": \"Query for terms (concepts).\",\n        \"description\": \"Returns the elasticsearch response with matching terms (dct:subject)\",\n        \"operationId\": \"searchUsingGET_1\",\n        \"parameters\": [\n          {\n            \"name\": \"q\",\n            \"in\": \"query\",\n            \"description\": \"The query to match a concept\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"creator\",\n            \"in\": \"query\",\n            \"description\": \"Search for the creator (owner) of the term\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"orgPath\",\n            \"in\": \"query\",\n            \"description\": \"Search for concepts based on orgpath\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"from\",\n            \"in\": \"query\",\n            \"description\": \"The index position of the result set to start return concepts for\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            }\n          },\n          {\n            \"name\": \"size\",\n            \"in\": \"query\",\n            \"description\": \"The size of the result set\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 10\n            }\n          },\n          {\n            \"name\": \"lang\",\n            \"in\": \"query\",\n            \"description\": \"The language to search in\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"nb\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Subject\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/themecount\": {\n      \"get\": {\n        \"tags\": [\n          \"datasets-query-service\"\n        ],\n        \"summary\": \"Aggregate dataset count per theme.\",\n        \"description\": \"Returns a list of themes and the total number of datasets for each of them\",\n        \"operationId\": \"themecountUsingGET\",\n        \"parameters\": [\n          {\n            \"name\": \"code\",\n            \"in\": \"query\",\n            \"description\": \"code\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SkosConcept\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://fellesdatakatalog.brreg.no\"\n    }\n  ],\n  \"components\": {\n    \"schemas\": {\n      \"Catalog\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"dataset\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Dataset\"\n            }\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"issued\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"language\": {\n            \"type\": \"string\"\n          },\n          \"modified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"publisher\": {\n            \"$ref\": \"#/components/schemas/Publisher\"\n          },\n          \"themeTaxonomy\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"uri\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ConceptSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"versioninfo\": {\n            \"type\": \"string\"\n          },\n          \"versionnumber\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Contact\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"fullname\": {\n            \"type\": \"string\"\n          },\n          \"hasTelephone\": {\n            \"type\": \"string\"\n          },\n          \"hasURL\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"organizationName\": {\n            \"type\": \"string\"\n          },\n          \"organizationUnit\": {\n            \"type\": \"string\"\n          },\n          \"uri\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"DataTheme\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"string\"\n          },\n          \"conceptSchema\": {\n            \"$ref\": \"#/components/schemas/ConceptSchema\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"numberOfHits\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"pickedDate\": {\n            \"type\": \"string\"\n          },\n          \"startUse\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"uri\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Dataset\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"accessRights\": {\n            \"$ref\": \"#/components/schemas/SkosCode\"\n          },\n          \"accessRightsComment\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"accrualPeriodicity\": {\n            \"$ref\": \"#/components/schemas/SkosCode\"\n          },\n          \"admsIdentifier\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"catalog\": {\n            \"$ref\": \"#/components/schemas/Catalog\"\n          },\n          \"conformsTo\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SkosConcept\"\n            }\n          },\n          \"contactPoint\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Contact\"\n            }\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"descriptionFormatted\": {\n            \"type\": \"string\"\n          },\n          \"distribution\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Distribution\"\n            }\n          },\n          \"harvest\": {\n            \"$ref\": \"#/components/schemas/HarvestMetadata\"\n          },\n          \"hasAccuracyAnnotation\": {\n            \"$ref\": \"#/components/schemas/QualityAnnotation\"\n          },\n          \"hasAvailabilityAnnotation\": {\n            \"$ref\": \"#/components/schemas/QualityAnnotation\"\n          },\n          \"hasCompletenessAnnotation\": {\n            \"$ref\": \"#/components/schemas/QualityAnnotation\"\n          },\n          \"hasCurrentnessAnnotation\": {\n            \"$ref\": \"#/components/schemas/QualityAnnotation\"\n          },\n          \"hasRelevanceAnnotation\": {\n            \"$ref\": \"#/components/schemas/QualityAnnotation\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"identifier\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"informationModel\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SkosConcept\"\n            }\n          },\n          \"issued\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"keyword\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Map_string_string_\"\n            }\n          },\n          \"landingPage\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"language\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SkosCode\"\n            }\n          },\n          \"legalBasisForAccess\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SkosConcept\"\n            }\n          },\n          \"legalBasisForProcessing\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SkosConcept\"\n            }\n          },\n          \"legalBasisForRestriction\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SkosConcept\"\n            }\n          },\n          \"modified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"objective\": {\n            \"type\": \"string\"\n          },\n          \"page\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"provenance\": {\n            \"$ref\": \"#/components/schemas/SkosCode\"\n          },\n          \"provenanceSort\": {\n            \"type\": \"string\"\n          },\n          \"publisher\": {\n            \"$ref\": \"#/components/schemas/Publisher\"\n          },\n          \"references\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Reference\"\n            }\n          },\n          \"sample\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Distribution\"\n            }\n          },\n          \"source\": {\n            \"type\": \"string\"\n          },\n          \"spatial\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SkosCode\"\n            }\n          },\n          \"subject\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Subject\"\n            }\n          },\n          \"temporal\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PeriodOfTime\"\n            }\n          },\n          \"theme\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/DataTheme\"\n            }\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"uri\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Distribution\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"accessURL\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"conformsTo\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SkosConcept\"\n            }\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"downloadURL\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"format\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"license\": {\n            \"$ref\": \"#/components/schemas/SkosConcept\"\n          },\n          \"openLicense\": {\n            \"type\": \"boolean\"\n          },\n          \"page\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SkosConcept\"\n            }\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"uri\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"HarvestMetadata\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"changed\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\"\n            }\n          },\n          \"firstHarvested\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastChanged\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"lastHarvested\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"Hits\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"hits\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PublisherHit\"\n            }\n          }\n        }\n      },\n      \"PeriodOfTime\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"endDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"startDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"Publisher\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"orgPath\": {\n            \"type\": \"string\"\n          },\n          \"uri\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"PublisherHit\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"children\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PublisherHit\"\n            }\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"orgPath\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"QualityAnnotation\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"hasBody\": {\n            \"type\": \"string\"\n          },\n          \"inDimension\": {\n            \"type\": \"string\"\n          },\n          \"motivatedBy\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Reference\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"referenceType\": {\n            \"$ref\": \"#/components/schemas/SkosCode\"\n          },\n          \"source\": {\n            \"$ref\": \"#/components/schemas/SkosConcept\"\n          }\n        }\n      },\n      \"SkosCode\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"string\"\n          },\n          \"prefLabel\": {\n            \"type\": \"string\"\n          },\n          \"uri\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"SkosConcept\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"extraType\": {\n            \"type\": \"string\"\n          },\n          \"prefLabel\": {\n            \"type\": \"string\"\n          },\n          \"uri\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Subject\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"altLabel\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Map_string_string_\"\n            }\n          },\n          \"creator\": {\n            \"$ref\": \"#/components/schemas/Publisher\"\n          },\n          \"datasets\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Dataset\"\n            }\n          },\n          \"definition\": {\n            \"type\": \"string\"\n          },\n          \"identifier\": {\n            \"type\": \"string\"\n          },\n          \"inScheme\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"note\": {\n            \"type\": \"string\"\n          },\n          \"prefLabel\": {\n            \"type\": \"string\"\n          },\n          \"source\": {\n            \"type\": \"string\"\n          },\n          \"uri\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Map_string_string_\": {\n        \"type\": \"string\"\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/brreg/openAPI@0c563b3c4a1cd83aec3c5c2e691d425f7effa612/-/blob/specs/fdk.json",
			"externalURLs": [
				{
					"url": "https://github.com/brreg/openAPI/blob/0c563b3c4a1cd83aec3c5c2e691d425f7effa612/specs/fdk.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/catalogs\": get: responses: 200: contents: unsupported content types: [text/turtle, application/ld+json, application/rdf+xml]",
	"NotImplemented": [
		"unsupported content types"
	]
}