{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hyperledger/cactus"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "packages/cactus-plugin-ledger-connector-xdai/src/main/json/openapi.json",
			"byteSize": 43363,
			"content": "{\n    \"openapi\": \"3.0.3\",\n    \"info\": {\n        \"title\": \"Hyperledger Cactus Plugin - Connector Xdai\",\n        \"description\": \"Can perform basic tasks on a Xdai ledger\",\n        \"version\": \"0.0.1\",\n        \"license\": {\n            \"name\": \"Apache 2.0\",\n            \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"ReceiptType\": {\n                \"description\": \"Enumerates the possible types of receipts that can be waited for by someone or something that has requested the execution of a transaction on a ledger.\",\n                \"type\": \"string\",\n                \"enum\": [\n                    \"NODE_TX_POOL_ACK\",\n                    \"LEDGER_BLOCK_ACK\"\n                ]\n            },\n            \"ConsistencyStrategy\": {\n                \"type\": \"object\",\n                \"required\": [\"receiptType\", \"blockConfirmations\"],\n                \"properties\": {\n                    \"receiptType\": {\n                        \"$ref\": \"#/components/schemas/ReceiptType\"\n                    },\n                    \"timeoutMs\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The amount of milliseconds to wait for the receipt to arrive to the connector. Defaults to 0 which means to wait for an unlimited amount of time. Note that this wait may be interrupted still by other parts of the infrastructure such as load balancers cutting of HTTP requests after some time even if they are the type that is supposed to be kept alive. The question of re-entrance is a broader topic not in scope to discuss here, but it is important to mention it.\",\n                        \"minimum\": 0\n                    },\n                    \"blockConfirmations\": {\n                        \"type\": \"integer\",\n                        \"minimum\": 0,\n                        \"description\": \"The number of blocks to wait to be confirmed in addition to the block containing the transaction in question. Note that if the receipt type is set to only wait for node transaction pool ACK and this parameter is set to anything, but zero then the API will not accept the request due to conflicting parameters.\"\n                    },\n                    \"pollIntervalMs\" : {\n                        \"type\": \"integer\",\n                        \"minimum\": 0,\n                        \"description\": \"The amount of time (in milliseconds) connector will wait before making another confiramtion request to the network in case of previous confiramtion request fails\"\n                    }\n                }\n            },\n            \"Web3SigningCredential\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"type\"\n                ],\n                \"discriminator\": {\n                    \"propertyName\": \"type\"\n                },\n                \"oneOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredentialCactusKeychainRef\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredentialPrivateKeyHex\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredentialNone\"\n                    }\n                ],\n                \"properties\": {\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredentialType\"\n                    }\n                }\n            },\n            \"Web3SigningCredentialCactusKeychainRef\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"type\",\n                    \"ethAccount\",\n                    \"keychainId\",\n                    \"keychainEntryKey\"\n                ],\n                \"properties\": {\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredentialType\"\n                    },\n                    \"ethAccount\": {\n                        \"type\": \"string\",\n                        \"description\": \"The ethereum account (public key) that the credential  belongs to. Basically the username in the traditional  terminology of authentication.\",\n                        \"minLength\": 64,\n                        \"maxLength\": 64,\n                        \"nullable\": false\n                    },\n                    \"keychainEntryKey\": {\n                        \"type\": \"string\",\n                        \"description\": \"The key to use when looking up the the keychain entry holding the secret pointed to by the  keychainEntryKey parameter.\",\n                        \"minLength\": 0,\n                        \"maxLength\": 1024\n                    },\n                    \"keychainId\": {\n                        \"type\": \"string\",\n                        \"description\": \"The keychain ID to use when looking up the the keychain plugin instance that will be used to retrieve the secret pointed to by the keychainEntryKey parameter.\",\n                        \"minLength\": 0,\n                        \"maxLength\": 1024\n                    }\n                }\n            },\n            \"Web3SigningCredentialPrivateKeyHex\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"type\",\n                    \"ethAccount\",\n                    \"secret\"\n                ],\n                \"properties\": {\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredentialType\"\n                    },\n                    \"ethAccount\": {\n                        \"type\": \"string\",\n                        \"description\": \"The ethereum account (public key) that the credential belongs to. Basically the username in the traditional terminology of authentication.\",\n                        \"minLength\": 64,\n                        \"maxLength\": 64,\n                        \"nullable\": false\n                    },\n                    \"secret\": {\n                        \"type\": \"string\",\n                        \"description\": \"The HEX encoded private key of an eth account.\",\n                        \"minLength\": 0,\n                        \"maxLength\": 65535\n                    }\n                }\n            },\n            \"Web3SigningCredentialNone\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"type\"\n                ],\n                \"description\": \"Using this denotes that there is no signing required because the transaction is pre-signed.\",\n                \"properties\": {\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredentialType\"\n                    }\n                }\n            },\n            \"Web3SigningCredentialType\": {\n                \"type\": \"string\",\n                \"enum\": [\n                    \"CACTUS_KEYCHAIN_REF\",\n                    \"GETH_KEYCHAIN_PASSWORD\",\n                    \"PRIVATE_KEY_HEX\",\n                    \"NONE\"\n                ]\n            },\n            \"EthContractInvocationType\": {\n                \"type\": \"string\",\n                \"enum\": [\n                    \"SEND\",\n                    \"CALL\"\n                ]\n            },\n            \"SolidityContractJsonArtifact\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"contractName\"\n                ],\n                \"properties\": {\n                    \"contractName\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"metadata\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"bytecode\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"deployedBytecode\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"sourceMap\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"deployedSourceMap\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"sourcePath\": {\n                        \"type\": \"string\"\n                    },\n                    \"compiler\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": true,\n                        \"properties\": {\n                            \"name\": {\n                                \"type\": \"string\"\n                            },\n                            \"version\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"functionHashes\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": true\n                    },\n                    \"gasEstimates\": {\n                        \"properties\": {\n                            \"creation\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"codeDepositCost\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"executionCost\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"totalCost\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            },\n                            \"external\": {\n                                \"type\": \"object\",\n                                \"additionalProperties\": true\n                            }\n                        }\n                    }\n                }\n            },\n            \"XdaiTransactionConfig\": {\n                \"type\": \"object\",\n                \"additionalProperties\": true,\n                \"properties\": {\n                    \"rawTransaction\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"from\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    },\n                    \"to\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    },\n                    \"value\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    },\n                    \"gas\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    },\n                    \"gasPrice\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    },\n                    \"nonce\": {\n                        \"type\": \"number\"\n                    },\n                    \"data\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                }\n            },\n            \"Web3TransactionReceipt\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"blockHash\",\n                    \"blockNumber\",\n                    \"transactionHash\",\n                    \"transactionIndex\",\n                    \"status\",\n                    \"from\",\n                    \"to\",\n                    \"gasUsed\"\n                ],\n                \"additionalProperties\": true,\n                \"properties\": {\n                    \"status\": {\n                        \"type\": \"boolean\",\n                        \"nullable\": false\n                    },\n                    \"transactionHash\": {\n                        \"type\": \"string\",\n                        \"minLength\": 66,\n                        \"maxLength\": 66,\n                        \"pattern\": \"^0x([A-Fa-f0-9]{64})$\"\n                    },\n                    \"transactionIndex\": {\n                        \"type\": \"number\",\n                        \"nullable\": false\n                    },\n                    \"blockHash\": {\n                        \"type\": \"string\",\n                        \"minLength\": 66,\n                        \"maxLength\": 66,\n                        \"pattern\": \"^0x([A-Fa-f0-9]{64})$\"\n                    },\n                    \"blockNumber\": {\n                        \"type\": \"number\",\n                        \"nullable\": false\n                    },\n                    \"gasUsed\": {\n                        \"type\": \"number\",\n                        \"nullable\": false\n                    },\n                    \"contractAddress\": {\n                        \"type\": \"string\",\n                        \"nullable\": true\n                    },\n                    \"from\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"to\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"ContractJSON\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"contractName\",\n                    \"bytecode\",\n                    \"abi\"\n                ],\n                \"additionalProperties\": true,\n                \"properties\": {\n                    \"contractName\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"bytecode\": {\n                        \"type\": \"string\",\n                        \"nullable\": false,\n                        \"minLength\": 1,\n                        \"maxLength\": 24576,\n                        \"description\": \"See https://ethereum.stackexchange.com/a/47556 regarding the maximum length of the bytecode\"\n                    },\n                    \"abi\": {\n                        \"description\": \"The application binary interface of the solidity contract, optional parameter\",\n                        \"type\": \"array\",\n                        \"items\": {},\n                        \"nullable\": false\n                    },\n                    \"metadata\": {\n                        \"type\": \"string\"\n                    },\n                    \"deployedBytecode\": {\n                        \"type\": \"string\"\n                    },\n                    \"sourceMap\": {\n                        \"type\": \"string\"\n                    },\n                    \"deployedSourceMap\": {\n                        \"type\": \"string\"\n                    },\n                    \"sourcePath\": {\n                        \"type\": \"string\"\n                    },\n                    \"compiler\": {\n                        \"type\": \"object\"\n                    },\n                    \"networks\": {\n                        \"type\": \"object\"\n                    },\n                    \"ast\": {\n                        \"type\": \"object\"\n                    },\n                    \"functionHashes\": {\n                        \"type\": \"object\"\n                    },\n                    \"gasEstimates\": {\n                        \"type\": \"object\"\n                    }\n                }\n            },\n            \"RunTransactionV1Request\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"web3SigningCredential\",\n                    \"transactionConfig\",\n                    \"consistencyStrategy\"\n                ],\n                \"additionalProperties\": false,\n                \"properties\": {\n                    \"web3SigningCredential\": {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredential\",\n                        \"nullable\": false\n                    },\n                    \"transactionConfig\": {\n                        \"$ref\": \"#/components/schemas/XdaiTransactionConfig\",\n                        \"nullable\": false\n                    },\n                    \"consistencyStrategy\": {\n                        \"$ref\": \"#/components/schemas/ConsistencyStrategy\"\n                    }\n                }\n            },\n            \"RunTransactionV1Response\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"transactionReceipt\"\n                ],\n                \"properties\": {\n                    \"transactionReceipt\": {\n                        \"$ref\": \"#/components/schemas/Web3TransactionReceipt\"\n                    }\n                }\n            },\n            \"DeployContractV1Request\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"contractName\",\n                    \"web3SigningCredential\",\n                    \"keychainId\"\n                ],\n                \"additionalProperties\": false,\n                \"properties\": {\n                    \"contractName\": {\n                        \"type\": \"string\",\n                        \"description\": \"The contract name for retrieve the contracts json on the keychain.\",\n                        \"minLength\": 1,\n                        \"maxLength\": 100,\n                        \"nullable\": false\n                    },\n                    \"constructorArgs\": {\n                        \"type\": \"array\",\n                        \"items\": {},\n                        \"default\": []\n                    },\n                    \"web3SigningCredential\": {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredential\",\n                        \"nullable\": false\n                    },\n                    \"keychainId\": {\n                        \"type\": \"string\",\n                        \"description\": \"The keychainId for retrieve the contracts json.\",\n                        \"minLength\": 1,\n                        \"maxLength\": 100,\n                        \"nullable\": false\n                    },\n                    \"gas\": {\n                        \"type\": \"number\",\n                        \"nullable\": false\n                    },\n                    \"gasPrice\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"timeoutMs\": {\n                        \"type\": \"number\",\n                        \"description\": \"The amount of milliseconds to wait for a transaction receipt with theaddress of the contract(which indicates successful deployment) beforegiving up and crashing.\",\n                        \"minimum\": 0,\n                        \"default\": 60000,\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"DeployContractJsonObjectV1Request\": { \n                \"type\": \"object\",\n                \"required\": [\n                    \"web3SigningCredential\",\n                    \"contractJSON\"\n                ],\n                \"additionalProperties\": false,\n                \"properties\": {\n                    \"web3SigningCredential\": {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredential\",\n                        \"nullable\": false\n                    },\n                    \"gas\": {\n                        \"type\": \"number\",\n                        \"nullable\": false\n                    },\n                    \"gasPrice\": {\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"timeoutMs\": {\n                        \"type\": \"number\",\n                        \"description\": \"The amount of milliseconds to wait for a transaction receipt with theaddress of the contract(which indicates successful deployment) beforegiving up and crashing.\",\n                        \"minimum\": 0,\n                        \"default\": 60000,\n                        \"nullable\": false\n                    },\n                    \"contractJSON\": { \n                        \"$ref\": \"#/components/schemas/ContractJSON\",\n                        \"description\": \"For use when not using keychain, pass the contract in as this variable\",\n                        \"nullable\": false\n                    },\n                    \"constructorArgs\": {\n                        \"description\": \"The list of arguments to pass in to the constructor of the contract being deployed.\",\n                        \"type\": \"array\",\n                        \"default\": [],\n                        \"items\": {}\n                    }\n                }\n            },\n            \"DeployContractV1Response\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"transactionReceipt\"\n                ],\n                \"properties\": {\n                    \"transactionReceipt\": {\n                        \"$ref\": \"#/components/schemas/Web3TransactionReceipt\"\n                    }\n                }\n            },\n            \"InvokeContractV1Request\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"contractName\",\n                    \"web3SigningCredential\",\n                    \"invocationType\",\n                    \"methodName\",\n                    \"params\",\n                    \"keychainId\"\n                ],\n                \"additionalProperties\": false,\n                \"properties\": {\n                    \"contractName\": {\n                        \"description\": \"The contract name to find it in the keychain plugin\",\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"web3SigningCredential\": {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredential\",\n                        \"nullable\": false\n                    },\n                    \"invocationType\": {\n                        \"$ref\": \"#/components/schemas/EthContractInvocationType\",\n                        \"nullable\": false,\n                        \"description\": \"Indicates wether it is a CALL or a SEND type of  invocation where only SEND ends up creating an actual transaction on the ledger.\"\n                    },\n                    \"methodName\": {\n                        \"description\": \"The name of the contract method to invoke.\",\n                        \"type\": \"string\",\n                        \"nullable\": false,\n                        \"minLength\": 1,\n                        \"maxLength\": 2048\n                    },\n                    \"params\": {\n                        \"description\": \"The list of arguments to pass in to the contract method being invoked.\",\n                        \"type\": \"array\",\n                        \"default\": [],\n                        \"items\": {}\n                    },\n                    \"value\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    },\n                    \"gas\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    },\n                    \"gasPrice\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    },\n                    \"nonce\": {\n                        \"type\": \"number\"\n                    },\n                    \"timeoutMs\": {\n                        \"type\": \"number\",\n                        \"description\": \"The amount of milliseconds to wait for a transaction receipt beforegiving up and crashing. Only has any effect if the invocation type is SEND\",\n                        \"minimum\": 0,\n                        \"default\": 60000,\n                        \"nullable\": false\n                    },\n                    \"keychainId\": {\n                        \"type\": \"string\",\n                        \"description\": \"The keychainId for retrieve the contracts json.\",\n                        \"minLength\": 1,\n                        \"maxLength\": 100\n                    }\n                }\n            },\n            \"InvokeContractJsonObjectV1Request\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"web3SigningCredential\",\n                    \"invocationType\",\n                    \"methodName\",\n                    \"params\",\n                    \"contractJSON\",\n                    \"contractAddress\"\n                ],\n                \"additionalProperties\": false,\n                \"properties\": {\n                    \"web3SigningCredential\": {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredential\",\n                        \"nullable\": false\n                    },\n                    \"invocationType\": {\n                        \"$ref\": \"#/components/schemas/EthContractInvocationType\",\n                        \"nullable\": false,\n                        \"description\": \"Indicates wether it is a CALL or a SEND type of  invocation where only SEND ends up creating an actual transaction on the ledger.\"\n                    },\n                    \"methodName\": {\n                        \"description\": \"The name of the contract method to invoke.\",\n                        \"type\": \"string\",\n                        \"nullable\": false,\n                        \"minLength\": 1,\n                        \"maxLength\": 2048\n                    },\n                    \"params\": {\n                        \"description\": \"The list of arguments to pass in to the contract method being invoked.\",\n                        \"type\": \"array\",\n                        \"default\": [],\n                        \"items\": {}\n                    },\n                    \"contractAddress\": {\n                        \"description\": \"Address of the solidity contract\",\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"value\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    },\n                    \"gas\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    },\n                    \"gasPrice\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    },\n                    \"nonce\": {\n                        \"type\": \"number\"\n                    },\n                    \"timeoutMs\": {\n                        \"type\": \"number\",\n                        \"description\": \"The amount of milliseconds to wait for a transaction receipt beforegiving up and crashing. Only has any effect if the invocation type is SEND\",\n                        \"minimum\": 0,\n                        \"default\": 60000,\n                        \"nullable\": false\n                    },\n                    \"contractJSON\": { \n                        \"$ref\": \"#/components/schemas/ContractJSON\",\n                        \"description\": \"For use when not using keychain, pass the contract in as this variable\",\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"InvokeContractV1Response\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"success\"\n                ],\n                \"properties\": {\n                    \"transactionReceipt\": {\n                        \"$ref\": \"#/components/schemas/Web3TransactionReceipt\"\n                    },\n                    \"callOutput\": {},\n                    \"success\": {\n                        \"type\": \"boolean\",\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"PrometheusExporterMetricsResponse\": {\n                \"type\": \"string\",\n                \"nullable\": false\n            },\n            \"DeployRequestBaseV1\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"contractJSON\",\n                    \"web3SigningCredential\"\n                ],\n                \"properties\": {\n                    \"contractJSON\": { \n                        \"$ref\": \"#/components/schemas/ContractJSON\",\n                        \"description\": \"For use when not using keychain, pass the contract in as this variable\",\n                        \"nullable\": false\n                    },\n                    \"constructorArgs\": {\n                        \"type\": \"array\",\n                        \"items\": {},\n                        \"default\": []\n                    },\n                    \"web3SigningCredential\": {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredential\",\n                        \"nullable\": false\n                    },\n                    \"gas\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    },\n                    \"gasPrice\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    },\n                    \"timeoutMs\": {\n                        \"type\": \"number\",\n                        \"description\": \"The amount of milliseconds to wait for a transaction receipt with theaddress of the contract(which indicates successful deployment) beforegiving up and crashing.\",\n                        \"minimum\": 0,\n                        \"default\": 60000,\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"InvokeRequestBaseV1\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"contractAddress\",\n                    \"web3SigningCredential\",\n                    \"invocationType\",\n                    \"methodName\",\n                    \"params\",\n                    \"contractJSON\"\n                ],\n                \"additionalProperties\": false,\n                \"properties\": {\n                    \"contractAddress\": {\n                        \"description\": \"Address of the solidity contract\",\n                        \"type\": \"string\",\n                        \"nullable\": false\n                    },\n                    \"web3SigningCredential\": {\n                        \"$ref\": \"#/components/schemas/Web3SigningCredential\",\n                        \"nullable\": false\n                    },\n                    \"invocationType\": {\n                        \"$ref\": \"#/components/schemas/EthContractInvocationType\",\n                        \"nullable\": false,\n                        \"description\": \"Indicates wether it is a CALL or a SEND type of  invocation where only SEND ends up creating an actual transaction on the ledger.\"\n                    },\n                    \"methodName\": {\n                        \"description\": \"The name of the contract method to invoke.\",\n                        \"type\": \"string\",\n                        \"nullable\": false,\n                        \"minLength\": 1,\n                        \"maxLength\": 2048\n                    },\n                    \"params\": {\n                        \"description\": \"The list of arguments to pass in to the contract method being invoked.\",\n                        \"type\": \"array\",\n                        \"default\": [],\n                        \"items\": {}\n                    },\n                    \"value\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    },\n                    \"gas\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    },\n                    \"gasPrice\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"type\": \"number\"\n                            }\n                        ]\n                    },\n                    \"nonce\": {\n                        \"type\": \"number\"\n                    },\n                    \"timeoutMs\": {\n                        \"type\": \"number\",\n                        \"description\": \"The amount of milliseconds to wait for a transaction receipt beforegiving up and crashing. Only has any effect if the invocation type is SEND\",\n                        \"minimum\": 0,\n                        \"default\": 60000,\n                        \"nullable\": false\n                    },\n                    \"contractJSON\": { \n                        \"$ref\": \"#/components/schemas/ContractJSON\",\n                        \"description\": \"For use when not using keychain, pass the contract in as this variable\",\n                        \"nullable\": false\n                    }\n                }\n            }\n        }\n    },\n    \"paths\": {\n        \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-xdai/deploy-contract-solidity-bytecode\": {\n            \"post\": {\n                \"x-hyperledger-cactus\": {\n                    \"http\": {\n                        \"verbLowerCase\": \"post\",\n                        \"path\": \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-xdai/deploy-contract-solidity-bytecode\"\n                    }\n                },\n                \"operationId\": \"deployContractV1\",\n                \"summary\": \"Deploys the bytecode of a Solidity contract.\",\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/DeployContractV1Request\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/DeployContractV1Response\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-xdai/deploy-contract-solidity-bytecode-json-object\": {\n            \"post\": {\n                \"x-hyperledger-cactus\": {\n                    \"http\": {\n                        \"verbLowerCase\": \"post\",\n                        \"path\": \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-xdai/deploy-contract-solidity-bytecode-json-object\"\n                    }\n                },\n                \"operationId\": \"deployContractJsonObjectV1\",\n                \"summary\": \"Deploys the bytecode of a Solidity contract.\",\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/DeployContractJsonObjectV1Request\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/DeployContractV1Response\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-xdai/run-transaction\": {\n            \"post\": {\n                \"x-hyperledger-cactus\": {\n                    \"http\": {\n                        \"verbLowerCase\": \"post\",\n                        \"path\": \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-xdai/run-transaction\"\n                    }\n                },\n                \"operationId\": \"runTransactionV1\",\n                \"summary\": \"Executes a transaction on a xdai ledger\",\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/RunTransactionV1Request\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/RunTransactionV1Response\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-xdai/invoke-contract\": {\n            \"post\": {\n                \"x-hyperledger-cactus\": {\n                    \"http\": {\n                        \"verbLowerCase\": \"post\",\n                        \"path\": \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-xdai/invoke-contract\"\n                    }\n                },\n                \"operationId\": \"invokeContractV1\",\n                \"summary\": \"Invokes a contract on a xdai ledger\",\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/InvokeContractV1Request\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/InvokeContractV1Response\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-xdai/invoke-contract-json-object\": {\n            \"post\": {\n                \"x-hyperledger-cactus\": {\n                    \"http\": {\n                        \"verbLowerCase\": \"post\",\n                        \"path\": \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-xdai/invoke-contract-json-object\"\n                    }\n                },\n                \"operationId\": \"invokeContractJsonObject\",\n                \"summary\": \"Invokes a contract on a besu ledger\",\n                \"parameters\": [],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/InvokeContractJsonObjectV1Request\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/InvokeContractV1Response\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-xdai/get-prometheus-exporter-metrics\": {\n            \"get\": {\n                \"x-hyperledger-cactus\": {\n                    \"http\": {\n                        \"verbLowerCase\": \"get\",\n                        \"path\": \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-xdai/get-prometheus-exporter-metrics\"\n                    }\n                },\n                \"operationId\": \"getPrometheusMetricsV1\",\n                \"summary\": \"Get the Prometheus Metrics\",\n                \"parameters\": [],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"text/plain\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/PrometheusExporterMetricsResponse\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
			"canonicalURL": "/github.com/hyperledger/cactus@a69a9578c4e8f1334758690f77c35ee75ccc0884/-/blob/packages/cactus-plugin-ledger-connector-xdai/src/main/json/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/hyperledger/cactus/blob/a69a9578c4e8f1334758690f77c35ee75ccc0884/packages/cactus-plugin-ledger-connector-xdai/src/main/json/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/v1/plugins/@hyperledger/cactus-plugin-ledger-connector-xdai/get-prometheus-exporter-metrics\": get: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}