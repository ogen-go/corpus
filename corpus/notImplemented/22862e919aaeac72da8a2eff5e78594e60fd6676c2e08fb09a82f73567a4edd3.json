{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/qiudaoke/flowable-userguide"
		},
		"file": {
			"name": "flowable-oas-content.yaml",
			"size": 0,
			"path": "V6.5.0/docs/public-api/references/openapi/content/flowable-oas-content.yaml",
			"byteSize": 23034,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'http://localhost:8080/flowable-rest/content-api'\n  - url: 'https://localhost:8080/flowable-rest/content-api'\ninfo:\n  description: \u003e-\n    # flowable / flow??b(??)l /\n\n\n    - a compact and highly efficient workflow and Business Process Management\n    (BPM) platform for developers, system admins and business users.\n\n    - a lightning fast, tried and tested BPMN 2 process engine written in Java.\n    It is Apache 2.0 licensed open source, with a committed community.\n\n    - can run embedded in a Java application, or as a service on a server, a\n    cluster, and in the cloud. It integrates perfectly with Spring. With a rich\n    Java and REST API, it is the ideal engine for orchestrating human or system\n    activities.\n  version: v1\n  title: Flowable Content REST API\n  contact:\n    name: Flowable\n    url: 'http://www.flowable.org/'\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: Content item\n  - name: Engine\n  - name: Query\npaths:\n  /content-management/engine:\n    get:\n      tags:\n        - Engine\n      summary: Get Content engine info\n      description: ''\n      operationId: getEngineInfo\n      responses:\n        '200':\n          description: Indicates the engine info is returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContentEngineInfoResponse'\n      security:\n        - basicAuth: []\n      parameters: []\n  /content-service/content-items:\n    get:\n      tags:\n        - Content item\n      summary: List content items\n      description: ''\n      operationId: listContentItems\n      parameters:\n        - name: id\n          in: query\n          description: Only return content items with the given id.\n          required: false\n          schema:\n            type: string\n        - name: name\n          in: query\n          description: Only return content items with the given name.\n          required: false\n          schema:\n            type: string\n        - name: nameLike\n          in: query\n          description: Only return content items with a name like the given value.\n          required: false\n          schema:\n            type: string\n        - name: mimeType\n          in: query\n          description: Only return content items with the given mime type.\n          required: false\n          schema:\n            type: string\n        - name: mimeTypeLike\n          in: query\n          description: Only return content items with a mime type like the given value.\n          required: false\n          schema:\n            type: string\n        - name: taskId\n          in: query\n          description: Only return content items with the given task id.\n          required: false\n          schema:\n            type: string\n        - name: taskIdLike\n          in: query\n          description: Only return content items with a task like the given value.\n          required: false\n          schema:\n            type: string\n        - name: processInstanceId\n          in: query\n          description: Only return content items with the given process instance id.\n          required: false\n          schema:\n            type: string\n        - name: processInstanceIdLike\n          in: query\n          description: \u003e-\n            Only return content items with a process instance like the given\n            value.\n          required: false\n          schema:\n            type: string\n        - name: contentStoreId\n          in: query\n          description: Only return content items with the given content store id.\n          required: false\n          schema:\n            type: string\n        - name: contentStoreIdLike\n          in: query\n          description: \u003e-\n            Only return content items with a content store id like the given\n            value.\n          required: false\n          schema:\n            type: string\n        - name: contentStoreName\n          in: query\n          description: Only return content items with the given content store name.\n          required: false\n          schema:\n            type: string\n        - name: contentStoreNameLike\n          in: query\n          description: \u003e-\n            Only return content items with a content store name like the given\n            value.\n          required: false\n          schema:\n            type: string\n        - name: contentAvailable\n          in: query\n          description: Only return content items with or without content available.\n          required: false\n          schema:\n            type: boolean\n        - name: contentSize\n          in: query\n          description: Only return content items with the given content size.\n          required: false\n          schema:\n            type: number\n            format: int64\n        - name: minimumContentSize\n          in: query\n          description: \u003e-\n            Only return content items with the a minimum content size of the\n            given value.\n          required: false\n          schema:\n            type: number\n            format: int64\n        - name: maximumContentSize\n          in: query\n          description: \u003e-\n            Only return content items with the a maximum content size of the\n            given value.\n          required: false\n          schema:\n            type: number\n            format: int64\n        - name: field\n          in: query\n          description: Only return content items with the given field.\n          required: false\n          schema:\n            type: string\n        - name: fieldLike\n          in: query\n          description: Only return content items with a field like the given value.\n          required: false\n          schema:\n            type: string\n        - name: createdOn\n          in: query\n          description: Only return content items with the given create date.\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: createdBefore\n          in: query\n          description: Only return content items before given create date.\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: createdAfter\n          in: query\n          description: Only return content items after given create date.\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: createdBy\n          in: query\n          description: Only return content items with the given created by.\n          required: false\n          schema:\n            type: string\n        - name: createdByLike\n          in: query\n          description: Only return content items with a created by like the given value.\n          required: false\n          schema:\n            type: string\n        - name: lastModifiedOn\n          in: query\n          description: Only return content items with the given last modified date.\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: lastModifiedBefore\n          in: query\n          description: Only return content items before given last modified date.\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: lastModifiedAfter\n          in: query\n          description: Only return content items after given last modified date.\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: lastModifiedBy\n          in: query\n          description: Only return content items with the given last modified by.\n          required: false\n          schema:\n            type: string\n        - name: lastModifiedByLike\n          in: query\n          description: \u003e-\n            Only return content items with a last modified by like the given\n            value.\n          required: false\n          schema:\n            type: string\n        - name: tenantId\n          in: query\n          description: Only return content items with the given tenantId.\n          required: false\n          schema:\n            type: string\n        - name: tenantIdLike\n          in: query\n          description: Only return content items with a tenantId like the given value.\n          required: false\n          schema:\n            type: string\n        - name: withoutTenantId\n          in: query\n          description: \u003e-\n            If true, only returns content items without a tenantId set. If\n            false, the withoutTenantId parameter is ignored.\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: The content items are returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataResponseContentItemResponse'\n      security:\n        - basicAuth: []\n    post:\n      tags:\n        - Content item\n      summary: \u003e-\n        Create a new content item, with content item information and an optional\n        attached file\n      description: \u003e-\n        This endpoint can be used in 2 ways: By passing a JSON Body\n        (ContentItemRequest) to link an external resource or by passing a\n        multipart/form-data Object to attach a file.\n      operationId: createContentItem\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContentItemResponse'\n        '201':\n          description: Indicates the content item was created and the result is returned.\n        '400':\n          description: Indicates required content item info is missing from the request.\n      security:\n        - basicAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContentItemRequest'\n              description: 'Create a new content item, with content item information'\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  description: 'Attachment File'\n                  type: string\n                  format: binary\n                name:\n                  description: Required name of the variable\n                  type: string\n                mimeType:\n                  description: 'Mime type of the content item, optional'\n                  type: string\n                taskId:\n                  description: 'Task identifier for the content item, optional'\n                  type: string\n                processInstanceId:\n                  description: 'Process instance identifier for the content item, optional'\n                  type: string\n                contentStoreId:\n                  description: \u003e-\n                    The identifier of the content item in an external content\n                    store, optional\n                  type: string\n                contentStoreName:\n                  description: 'The name of an external content store, optional'\n                  type: string\n                field:\n                  description: 'The form field for the content item, optional'\n                  type: string\n                createdBy:\n                  description: 'The user identifier that created the content item, optional'\n                  type: string\n                lastModifiedBy:\n                  description: \u003e-\n                    The user identifier that last modified the content item,\n                    optional\n                  type: string\n                tenantId:\n                  description: 'The tenant identifier of the content item, optional'\n                  type: string\n      parameters: []\n  '/content-service/content-items/{contentItemId}':\n    get:\n      tags:\n        - Content item\n      summary: Get a content item\n      description: ''\n      operationId: getContentItem\n      parameters:\n        - name: contentItemId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Indicates the content item was found and returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContentItemResponse'\n        '404':\n          description: Indicates the requested content item was not found.\n      security:\n        - basicAuth: []\n    put:\n      tags:\n        - Content item\n      summary: 'Updates a content item, with the provided content item information'\n      description: ''\n      operationId: updateContentItem\n      parameters:\n        - name: contentItemId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Indicates the content item was updated and the result is returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContentItemResponse'\n        '404':\n          description: Indicates content item could not be found.\n      security:\n        - basicAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContentItemRequest'\n    delete:\n      tags:\n        - Content item\n      summary: Delete a content item\n      description: ''\n      operationId: deleteContentItem\n      parameters:\n        - name: contentItemId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Indicates the content item was deleted.\n        '404':\n          description: Indicates the content item was not found.\n      security:\n        - basicAuth: []\n  '/content-service/content-items/{contentItemId}/data':\n    get:\n      tags:\n        - Content item\n      summary: Get the data of a content item\n      description: \u003e-\n        The response body contains the binary content. By default, the\n        content-type of the response is set to application/octet-stream unless\n        the content item type contains a valid mime type.\n      operationId: getContentItemData\n      parameters:\n        - name: contentItemId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            Indicates the content item was found and the requested content is\n            returned.\n          content:\n            '*/*':\n              schema:\n                type: array\n                items:\n                  type: string\n                  format: byte\n        '404':\n          description: \u003e-\n            Indicates the content item was not found or the content item does not\n            have a binary stream available. Status message provides additional\n            information.\n      security:\n        - basicAuth: []\n    post:\n      tags:\n        - Content item\n      summary: Save the content item data\n      description: \u003e-\n        Save the content item data with an attached fileThe request should be of\n        type multipart/form-data. There should be a single file-part included\n        with the binary value of the content item.\n      operationId: saveContentItemData\n      parameters:\n        - name: contentItemId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContentItemResponse'\n        '201':\n          description: \u003e-\n            Indicates the content item data was saved and the result is\n            returned.\n        '400':\n          description: Indicates required content item data is missing from the request.\n      security:\n        - basicAuth: []\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              type: string\n              format: binary\n        required: true\n  /query/content-items:\n    post:\n      tags:\n        - Content item\n        - Query\n      summary: Query for content items\n      description: \u003e-\n        All supported JSON parameter fields allowed are exactly the same as the\n        parameters found for getting a collection of content items, but passed\n        in as JSON-body arguments rather than URL-parameters to allow for more\n        advanced querying and preventing errors with request-uri?s that are too\n        long.\n      operationId: getQueryResult\n      responses:\n        '200':\n          description: Indicates request was successful and the content items are returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataResponseContentItemResponse'\n        '400':\n          description: \u003e-\n            Indicates a parameter was passed in the wrong format. The\n            status-message contains additional information.\n      security:\n        - basicAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContentItemQueryRequest'\n      parameters: []\ncomponents:\n  schemas:\n    ContentEngineInfoResponse:\n      type: object\n      properties:\n        name:\n          type: string\n          example: default\n        resourceUrl:\n          type: string\n          example: 'file://flowable/flowable.content.cfg.xml'\n        exception:\n          type: string\n          example: 'null'\n        version:\n          type: string\n          example: 6.2.0\n    ContentItemQueryRequest:\n      type: object\n      properties:\n        start:\n          type: integer\n          format: int32\n        size:\n          type: integer\n          format: int32\n        sort:\n          type: string\n        order:\n          type: string\n        id:\n          type: string\n        ids:\n          type: array\n          uniqueItems: true\n          items:\n            type: string\n        name:\n          type: string\n        nameLike:\n          type: string\n        mimeType:\n          type: string\n        mimeTypeLike:\n          type: string\n        taskId:\n          type: string\n        taskIdLike:\n          type: string\n        processInstanceId:\n          type: string\n        processInstanceIdLike:\n          type: string\n        contentStoreId:\n          type: string\n        contentStoreIdLike:\n          type: string\n        contentStoreName:\n          type: string\n        contentStoreNameLike:\n          type: string\n        contentSize:\n          type: integer\n          format: int64\n        minimumContentSize:\n          type: integer\n          format: int64\n        maximumContentSize:\n          type: integer\n          format: int64\n        contentAvailable:\n          type: boolean\n        field:\n          type: string\n        fieldLike:\n          type: string\n        createdOn:\n          type: string\n          format: date-time\n        createdBefore:\n          type: string\n          format: date-time\n        createdAfter:\n          type: string\n          format: date-time\n        createdBy:\n          type: string\n        createdByLike:\n          type: string\n        lastModifiedOn:\n          type: string\n          format: date-time\n        lastModifiedBefore:\n          type: string\n          format: date-time\n        lastModifiedAfter:\n          type: string\n          format: date-time\n        lastModifiedBy:\n          type: string\n        lastModifiedByLike:\n          type: string\n        tenantId:\n          type: string\n        tenantIdLike:\n          type: string\n        withoutTenantId:\n          type: boolean\n    ContentItemRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Simple content item\n          description: Name of the content item\n        mimeType:\n          type: string\n          example: application/pdf\n          description: 'Mime type of the content item, optional'\n        taskId:\n          type: string\n          example: '12345'\n          description: 'Task identifier for the content item, optional'\n        processInstanceId:\n          type: string\n          example: '1234'\n          description: 'Process instance identifier for the content item, optional'\n        contentStoreId:\n          type: string\n          example: '5678'\n          description: \u003e-\n            The identifier of the content item in an external content store,\n            optional.\n        contentStoreName:\n          type: string\n          example: myFileStore\n          description: 'The name of an external content store, optional'\n        field:\n          type: string\n          example: uploadField\n          description: 'The form field for the content item, optional'\n        tenantId:\n          type: string\n          example: myTenantId\n          description: 'The tenant identifier of the content item, optional.'\n        createdBy:\n          type: string\n          example: johndoe\n          description: 'The user identifier that created the content item, optional'\n        lastModifiedBy:\n          type: string\n          example: johndoe\n          description: 'The user identifier that last modified the content item, optional'\n    ContentItemResponse:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        mimeType:\n          type: string\n        taskId:\n          type: string\n        processInstanceId:\n          type: string\n        contentStoreId:\n          type: string\n        contentStoreName:\n          type: string\n        contentAvailable:\n          type: boolean\n        tenantId:\n          type: string\n        created:\n          type: string\n          format: date-time\n        createdBy:\n          type: string\n        lastModified:\n          type: string\n          format: date-time\n        lastModifiedBy:\n          type: string\n        url:\n          type: string\n    DataResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n        total:\n          type: integer\n          format: int64\n        start:\n          type: integer\n          format: int32\n        sort:\n          type: string\n        order:\n          type: string\n        size:\n          type: integer\n          format: int32\n    DataResponseContentItemResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContentItemResponse'\n        total:\n          type: integer\n          format: int64\n        start:\n          type: integer\n          format: int32\n        sort:\n          type: string\n        order:\n          type: string\n        size:\n          type: integer\n          format: int32\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n  links: {}\n  callbacks: {}\nsecurity: []\n",
			"canonicalURL": "/github.com/qiudaoke/flowable-userguide@f9269440e64eab847fd9235a5cc63216797d082f/-/blob/V6.5.0/docs/public-api/references/openapi/content/flowable-oas-content.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/qiudaoke/flowable-userguide/blob/f9269440e64eab847fd9235a5cc63216797d082f/V6.5.0/docs/public-api/references/openapi/content/flowable-oas-content.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/content-service/content-items/{contentItemId}/data\": get: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}