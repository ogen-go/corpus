{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aler9/rtsp-simple-server"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "apidocs/openapi.yaml",
			"byteSize": 14755,
			"content": "openapi: 3.0.0\n\ninfo:\n  version: 1.0.0\n  title: rtsp-simple-server API\n  description: API of rtsp-simple-server, a server and proxy that supports various protocols.\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\n\nservers:\n  - url: http://localhost:9997\n\ncomponents:\n  schemas:\n    Conf:\n      type: object\n      properties:\n        # general\n        logLevel:\n          type: string\n        logDestinations:\n          type: array\n          items:\n            type: string\n        logFile:\n          type: string\n        readTimeout:\n          type: string\n        writeTimeout:\n          type: string\n        readBufferCount:\n          type: integer\n        externalAuthenticationURL:\n          type: string\n        api:\n          type: boolean\n        apiAddress:\n          type: string\n        metrics:\n          type: boolean\n        metricsAddress:\n          type: string\n        pprof:\n          type: boolean\n        pprofAddress:\n          type: string\n        runOnConnect:\n          type: string\n        runOnConnectRestart:\n          type: boolean\n\n        # RTSP\n        rtspDisable:\n          type: boolean\n        protocols:\n          type: array\n          items:\n            type: string\n        encryption:\n          type: string\n        rtspAddress:\n          type: string\n        rtspsAddress:\n          type: string\n        rtpAddress:\n          type: string\n        rtcpAddress:\n          type: string\n        multicastIPRange:\n          type: string\n        multicastRTPPort:\n          type: integer\n        multicastRTCPPort:\n          type: integer\n        serverKey:\n          type: string\n        serverCert:\n          type: string\n        authMethods:\n          type: array\n          items:\n            type: string\n\n        # RTMP\n        rtmpDisable:\n          type: boolean\n        rtmpAddress:\n          type: string\n\n        # HLS\n        hlsDisable:\n          type: boolean\n        hlsAddress:\n          type: string\n        hlsAlwaysRemux:\n          type: boolean\n        hlsVariant:\n          type: string\n        hlsSegmentCount:\n          type: integer\n        hlsSegmentDuration:\n          type: string\n        hlsPartDuration:\n          type: string\n        hlsSegmentMaxSize:\n          type: string\n        hlsAllowOrigin:\n          type: string\n        hlsEncryption:\n          type: boolean\n        hlsServerKey:\n          type: string\n        hlsServerCert:\n          type: string\n\n        paths:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/PathConf'\n\n    PathConf:\n      type: object\n      properties:\n        # source\n        source:\n          type: string\n        sourceProtocol:\n          type: string\n        sourceAnyPortEnable:\n          type: boolean\n        sourceFingerprint:\n          type: string\n        sourceOnDemand:\n          type: boolean\n        sourceOnDemandStartTimeout:\n          type: string\n        sourceOnDemandCloseAfter:\n          type: string\n        sourceRedirect:\n          type: string\n        disablePublisherOverride:\n          type: boolean\n        fallback:\n          type: string\n\n        # authentication\n        publishUser:\n          type: string\n        publishPass:\n          type: string\n        publishIPs:\n          type: array\n          items:\n            type: string\n        readUser:\n          type: string\n        readPass:\n          type: string\n        readIPs:\n          type: array\n          items:\n            type: string\n\n        # external commands\n        runOnInit:\n          type: string\n        runOnInitRestart:\n          type: boolean\n        runOnDemand:\n          type: string\n        runOnDemandRestart:\n          type: boolean\n        runOnDemandStartTimeout:\n          type: string\n        runOnDemandCloseAfter:\n          type: string\n        runOnReady:\n          type: string\n        runOnReadyRestart:\n          type: boolean\n        runOnRead:\n          type: string\n        runOnReadRestart:\n          type: boolean\n\n    Path:\n      type: object\n      properties:\n        confName:\n          type: string\n        conf:\n          $ref: '#/components/schemas/PathConf'\n        source:\n          oneOf:\n          - $ref: '#/components/schemas/PathSourceRTSPSession'\n          - $ref: '#/components/schemas/PathSourceRTSPSSession'\n          - $ref: '#/components/schemas/PathSourceRTMPConn'\n          - $ref: '#/components/schemas/PathSourceRTSPSource'\n          - $ref: '#/components/schemas/PathSourceRTMPSource'\n          - $ref: '#/components/schemas/PathSourceHLSSource'\n        sourceReady:\n          type: boolean\n        readers:\n          type: array\n          items:\n            oneOf:\n            - $ref: '#/components/schemas/PathReaderRTSPSession'\n            - $ref: '#/components/schemas/PathReaderRTSPSSession'\n            - $ref: '#/components/schemas/PathReaderRTMPConn'\n            - $ref: '#/components/schemas/PathReaderHLSMuxer'\n\n    PathSourceRTSPSession:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: [rtspSession]\n        id:\n          type: string\n\n    PathSourceRTSPSSession:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: [rtspsSession]\n        id:\n          type: string\n\n    PathSourceRTMPConn:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: [rtmpConn]\n        id:\n          type: string\n\n    PathSourceRTSPSource:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: [rtspSource]\n\n    PathSourceRTMPSource:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: [rtmpSource]\n\n    PathSourceHLSSource:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: [hlsSource]\n\n    PathReaderRTSPSession:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: [rtspSession]\n        id:\n          type: string\n\n    PathReaderRTSPSSession:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: [rtspsSession]\n        id:\n          type: string\n\n    PathReaderRTMPConn:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: [rtmpConn]\n        id:\n          type: string\n\n    PathReaderHLSMuxer:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: [hlsMuxer]\n\n    RTSPSession:\n      type: object\n      properties:\n        remoteAddr:\n          type: string\n        state:\n          type: string\n          enum: [idle, read, publish]\n\n    RTSPSSession:\n      type: object\n      properties:\n        remoteAddr:\n          type: string\n        state:\n          type: string\n          enum: [idle, read, publish]\n\n    RTMPConn:\n      type: object\n      properties:\n        remoteAddr:\n          type: string\n        state:\n          type: string\n          enum: [idle, read, publish]\n\n    HLSMuxer:\n      type: object\n      properties:\n        lastRequest:\n          type: string\n\n    PathsList:\n      type: object\n      properties:\n        items:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/Path'\n\n    RTSPSessionsList:\n      type: object\n      properties:\n        items:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/RTSPSession'\n\n    RTSPSSessionsList:\n      type: object\n      properties:\n        items:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/RTSPSSession'\n\n    RTMPConnsList:\n      type: object\n      properties:\n        items:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/RTMPConn'\n\n    HLSMuxersList:\n      type: object\n      properties:\n        items:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/HLSMuxer'\n\npaths:\n  /v1/config/get:\n    get:\n      operationId: configGet\n      summary: returns the configuration.\n      description: ''\n      responses:\n        '200':\n          description: the request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Conf'\n        '400':\n          description: invalid request.\n        '500':\n          description: internal server error.\n\n  /v1/config/set:\n    post:\n      operationId: configSet\n      summary: changes the configuration.\n      description: all fields are optional. paths can't be edited with this request, use /v1/config/paths/{operation}/{name} to edit them.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Conf'\n      responses:\n        '200':\n          description: the request was successful.\n        '400':\n          description: invalid request.\n        '500':\n          description: internal server error.\n\n  /v1/config/paths/add/{name}:\n    post:\n      operationId: configPathsAdd\n      summary: adds the configuration of a path.\n      description: all fields are optional.\n      parameters:\n      - name: name\n        in: path\n        required: true\n        description: the name of the path.\n        schema:\n          type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PathConf'\n      responses:\n        '200':\n          description: the request was successful.\n        '400':\n          description: invalid request.\n        '500':\n          description: internal server error.\n\n  /v1/config/paths/edit/{name}:\n    post:\n      operationId: configPathsEdit\n      summary: changes the configuration of a path.\n      description: all fields are optional.\n      parameters:\n      - name: name\n        in: path\n        required: true\n        description: the name of the path.\n        schema:\n          type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PathConf'\n      responses:\n        '200':\n          description: the request was successful.\n        '400':\n          description: invalid request.\n        '500':\n          description: internal server error.\n\n  /v1/config/paths/remove/{name}:\n    post:\n      operationId: configPathsRemove\n      summary: removes the configuration of a path.\n      description: ''\n      parameters:\n      - name: name\n        in: path\n        required: true\n        description: the name of the path.\n        schema:\n          type: string\n      responses:\n        '200':\n          description: the request was successful.\n        '400':\n          description: invalid request.\n        '500':\n          description: internal server error.\n\n  /v1/paths/list:\n    get:\n      operationId: pathsList\n      summary: returns all active paths.\n      description: ''\n      responses:\n        '200':\n          description: the request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PathsList'\n        '400':\n          description: invalid request.\n        '500':\n          description: internal server error.\n\n  /v1/rtspsessions/list:\n    get:\n      operationId: rtspSessionsList\n      summary: returns all active RTSP sessions.\n      description: ''\n      responses:\n        '200':\n          description: the request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RTSPSessionsList'\n        '400':\n          description: invalid request.\n        '500':\n          description: internal server error.\n\n  /v1/rtspsessions/kick/{id}:\n    post:\n      operationId: rtspSessionsKick\n      summary: kicks out a RTSP session from the server.\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: the ID of the session.\n        schema:\n          type: string\n      responses:\n        '200':\n          description: the request was successful.\n        '400':\n          description: invalid request.\n        '500':\n          description: internal server error.\n\n  /v1/rtspssessions/list:\n    get:\n      operationId: rtspsSessionsList\n      summary: returns all active RTSPS sessions.\n      description: ''\n      responses:\n        '200':\n          description: the request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RTSPSSessionsList'\n        '400':\n          description: invalid request.\n        '500':\n          description: internal server error.\n\n  /v1/rtspssessions/kick/{id}:\n    post:\n      operationId: rtspsSessionsKick\n      summary: kicks out a RTSPS session from the server.\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: the ID of the session.\n        schema:\n          type: string\n      responses:\n        '200':\n          description: the request was successful.\n        '400':\n          description: invalid request.\n        '500':\n          description: internal server error.\n\n  /v1/rtmpconns/list:\n    get:\n      operationId: rtmpConnsList\n      summary: returns all active RTMP connections.\n      description: ''\n      responses:\n        '200':\n          description: the request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RTMPConnsList'\n        '400':\n          description: invalid request.\n        '500':\n          description: internal server error.\n\n  /v1/rtmpconns/kick/{id}:\n    post:\n      operationId: rtmpConnsKick\n      summary: kicks out a RTMP connection from the server.\n      description: ''\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: the ID of the connection.\n        schema:\n          type: string\n      responses:\n        '200':\n          description: the request was successful.\n        '400':\n          description: invalid request.\n        '500':\n          description: internal server error.\n\n  /v1/hlsmuxers/list:\n    get:\n      operationId: hlsMuxersList\n      summary: returns all active HLS muxers.\n      description: ''\n      responses:\n        '200':\n          description: the request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HLSMuxersList'\n        '400':\n          description: invalid request.\n        '500':\n          description: internal server error.\n",
			"canonicalURL": "/github.com/aler9/rtsp-simple-server@3e5f62156d3c442186c5b3b8ac4200d79d1e5cc2/-/blob/apidocs/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/aler9/rtsp-simple-server/blob/3e5f62156d3c442186c5b3b8ac4200d79d1e5cc2/apidocs/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/paths/list\": get: responses: 200: contents: application/json: generate schema: field items: item: field readers: item: oneOf: oneOf PathReadersItem: variant PathReaderRTSPSSession: no unique fields, unable to parse without discriminator: discriminator inference not implemented",
	"NotImplemented": [
		"discriminator inference"
	]
}