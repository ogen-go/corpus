{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/EricWittmann/api-samples"
		},
		"file": {
			"name": "beer-api.yaml",
			"size": 0,
			"path": "beer/beer-api.yaml",
			"byteSize": 5355,
			"content": "---\nopenapi: 3.0.0\ninfo:\n  title: Full Beer API\n  description: The absolute full beer api!\n  contact:\n    name: Eric Wittmann\n    url: http://apicur.io\n    email: eric.wittmann@gmail.com\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0\n  version: 1.0.0\nservers:\n- url: https://example.org/{server}\n  description: Foo bar.\n  variables:\n    server:\n      default: baz\n      description: This is the des...\npaths:\n  /beers:\n    get:\n      summary: Get Beers\n      operationId: getBeers\n      parameters:\n      - name: style\n        in: query\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Beer'\n      security:\n      - Basic: []\n    post:\n      summary: Add a Beer\n      operationId: addBeer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Beer'\n        required: true\n      responses:\n        201: {}\n  /beers/{beerId}:\n    get:\n      summary: Get a Beer\n      operationId: getBeer\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Beer'\n              examples:\n                Example-1:\n                  value: {}\n    put:\n      summary: Update a Beer\n      operationId: updateBeer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Beer'\n        required: true\n      responses:\n        202: {}\n    delete:\n      summary: Delete a Beer\n      operationId: deleteBeer\n      responses:\n        204: {}\n    parameters:\n    - name: beerId\n      in: path\n      required: true\n      schema:\n        format: int32\n        type: integer\n  /breweries:\n    get:\n      summary: Get Breweries\n      operationId: getBreweries\n      parameters:\n      - name: city\n        in: query\n        schema:\n          type: string\n      - name: state\n        in: query\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Brewery'\n              examples:\n                Example-1:\n                  value: |-\n                    [\n                        {\n                            \"id\": \"value-1\"\n                        }\n                    ]\n    post:\n      summary: Add a Brewery\n      operationId: addBrewery\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Brewery'\n        required: true\n      responses:\n        201:\n          content:\n            application/json: {}\n  /breweries/{breweryId}:\n    get:\n      summary: Get a Brewery\n      operationId: getBrewery\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Brewery'\n    put:\n      summary: Update a Brewery\n      operationId: updateBrewery\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Brewery'\n        required: true\n      responses:\n        202: {}\n    delete:\n      summary: Delete a Brewery\n      operationId: deleteBrewery\n      responses:\n        204: {}\n    parameters:\n    - name: breweryId\n      in: path\n      required: true\n      schema:\n        format: int32\n        type: integer\n  /breweries/{breweryId}/beers:\n    get:\n      summary: Get Beers from Brewery\n      operationId: getBreweryBeers\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Beer'\n    parameters:\n    - name: breweryId\n      in: path\n      required: true\n      schema:\n        format: int32\n        type: integer\ncomponents:\n  schemas:\n    Beer:\n      title: Root Type for Beer\n      description: The root of the Beer type's schema.\n      type: object\n      properties:\n        id:\n          format: int32\n          type: integer\n        breweryId:\n          format: int32\n          type: integer\n        name:\n          type: string\n        style:\n          type: string\n        ibu:\n          format: int32\n          type: integer\n        ounces:\n          format: int32\n          type: integer\n        abv:\n          format: int32\n          type: integer\n    Brewery:\n      title: Root Type for Brewery\n      description: The root of the Brewery type's schema.\n      type: object\n      properties:\n        city:\n          type: string\n        state:\n          type: string\n        id:\n          format: int32\n          type: integer\n        name:\n          type: string\n  securitySchemes:\n    Basic:\n      type: http\n      scheme: basic\n    OAuth:\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: http://www.example.org/auth/\n          refreshUrl: http://www.example.org/refresh/\n          scopes:\n            read:\n            write:\n            admin:\nsecurity:\n- OAuth:\n  - read\n  - write\ntags:\n- name: Foo\n  description: This is bar.\n",
			"canonicalURL": "/github.com/EricWittmann/api-samples@c66cd48d9c43f67d7a4eac07f60ed3ae2b732cac/-/blob/beer/beer-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/EricWittmann/api-samples/blob/c66cd48d9c43f67d7a4eac07f60ed3ae2b732cac/beer/beer-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/beers\": post: security: security \"OAuth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"empty schema",
		"oauth2 security"
	]
}