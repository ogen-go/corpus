{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/apple.com/sirikit-cloud-media/1.0.2/openapi.yaml",
			"byteSize": 62799,
			"content": "openapi: 3.0.1\nservers:\n  - url: https://cloudextension-testservice.local/api\ninfo:\n  contact:\n    name: Siri for Developers\n    url: https://developer.apple.com/siri/\n  title: SiriKit Cloud Media\n  version: 1.0.2\n  x-apisguru-categories:\n    - media\n  x-origin:\n    - format: openapi\n      url: sirikit-cloud-media.json\n      version: \"3.0\"\n  x-platform: sirikit_media_api\n  x-providerName: apple.com\n  x-serviceName: sirikit-cloud-media\ntags:\n  - name: config\n  - name: intent\n  - name: queues\npaths:\n  /configuration:\n    get:\n      operationId: extensionConfiguration\n      parameters:\n        - in: header\n          name: x-applecloudextension-session-id\n          required: true\n          schema:\n            maxLength: 128\n            minLength: 1\n            type: string\n        - in: header\n          name: x-applecloudextension-retry-count\n          required: false\n          schema:\n            format: uint32\n            minimum: 1\n            type: number\n        - in: header\n          name: Request-Timeout\n          required: true\n          schema:\n            format: uint32\n            minimum: 1\n            type: number\n        - in: header\n          name: User-Agent\n          required: true\n          schema:\n            maxLength: 250\n            pattern: AppleCloudExtension/([0-9]+\\.[0-9]+\\.[0-9]+) *.*\n            type: string\n        - in: header\n          name: Accept-Language\n          required: true\n          schema:\n            type: string\n        - in: header\n          name: If-None-Match\n          schema:\n            $ref: \"#/components/schemas/ExtensionConfigTag\"\n        - in: header\n          name: Cache-Control\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/jose:\n              schema:\n                $ref: \"#/components/schemas/ExtensionConfig\"\n          description: \"\"\n          headers:\n            Cache-Control:\n              example: max-age=1800, must-revalidate, private\n              required: true\n              schema:\n                type: string\n            ETag:\n              required: true\n              schema:\n                $ref: \"#/components/schemas/ExtensionConfigTag\"\n            x-applecloudextension-session-id:\n              schema:\n                maxLength: 128\n                minLength: 1\n                type: string\n        \"304\":\n          description: \"\"\n          headers:\n            Cache-Control:\n              example: max-age=1800, must-revalidate, private\n              required: true\n              schema:\n                type: string\n            x-applecloudextension-session-id:\n              schema:\n                maxLength: 128\n                minLength: 1\n                type: string\n      summary: Configuration Resource\n      tags:\n        - config\n  /intent/addMedia:\n    post:\n      operationId: addMediaIntentHandling\n      parameters:\n        - in: header\n          name: x-applecloudextension-session-id\n          required: true\n          schema:\n            maxLength: 128\n            minLength: 1\n            type: string\n        - in: header\n          name: x-applecloudextension-retry-count\n          required: false\n          schema:\n            format: uint32\n            minimum: 1\n            type: number\n        - in: header\n          name: Request-Timeout\n          required: true\n          schema:\n            format: uint32\n            minimum: 1\n            type: number\n        - in: header\n          name: User-Agent\n          required: true\n          schema:\n            maxLength: 250\n            pattern: AppleCloudExtension/([0-9]+\\.[0-9]+\\.[0-9]+) *.*\n            type: string\n        - in: header\n          name: Accept-Language\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/AddMediaIntentHandlingInvocation\"\n              type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AddMediaIntentHandlingInvocationResponse\"\n                type: array\n          description: \"\"\n          headers:\n            x-applecloudextension-session-id:\n              schema:\n                maxLength: 128\n                minLength: 1\n                type: string\n      summary: addMedia\n      tags:\n        - intent\n  /intent/playMedia:\n    post:\n      operationId: playMediaIntentHandling\n      parameters:\n        - in: header\n          name: x-applecloudextension-session-id\n          required: true\n          schema:\n            maxLength: 128\n            minLength: 1\n            type: string\n        - in: header\n          name: x-applecloudextension-retry-count\n          required: false\n          schema:\n            format: uint32\n            minimum: 1\n            type: number\n        - in: header\n          name: Request-Timeout\n          required: true\n          schema:\n            format: uint32\n            minimum: 1\n            type: number\n        - in: header\n          name: User-Agent\n          required: true\n          schema:\n            maxLength: 250\n            pattern: AppleCloudExtension/([0-9]+\\.[0-9]+\\.[0-9]+) *.*\n            type: string\n        - in: header\n          name: Accept-Language\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/PlayMediaIntentHandlingInvocation\"\n              type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PlayMediaIntentHandlingInvocationResponse\"\n                type: array\n          description: \"\"\n          headers:\n            x-applecloudextension-session-id:\n              schema:\n                maxLength: 128\n                minLength: 1\n                type: string\n      summary: playMedia\n      tags:\n        - intent\n  /intent/updateMediaAffinity:\n    post:\n      operationId: updateMediaAffinityIntentHandling\n      parameters:\n        - in: header\n          name: x-applecloudextension-session-id\n          required: true\n          schema:\n            maxLength: 128\n            minLength: 1\n            type: string\n        - in: header\n          name: x-applecloudextension-retry-count\n          required: false\n          schema:\n            format: uint32\n            minimum: 1\n            type: number\n        - in: header\n          name: Request-Timeout\n          required: true\n          schema:\n            format: uint32\n            minimum: 1\n            type: number\n        - in: header\n          name: User-Agent\n          required: true\n          schema:\n            maxLength: 250\n            pattern: AppleCloudExtension/([0-9]+\\.[0-9]+\\.[0-9]+) *.*\n            type: string\n        - in: header\n          name: Accept-Language\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/UpdateMediaAffinityIntentHandlingInvocation\"\n              type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/UpdateMediaAffinityIntentHandlingInvocationResponse\"\n                type: array\n          description: \"\"\n          headers:\n            x-applecloudextension-session-id:\n              schema:\n                maxLength: 128\n                minLength: 1\n                type: string\n      summary: updateMediaAffinity\n      tags:\n        - intent\n  /queues/playMedia:\n    post:\n      operationId: playMediaOnQueue\n      parameters:\n        - in: header\n          name: x-applecloudextension-session-id\n          required: true\n          schema:\n            maxLength: 128\n            minLength: 1\n            type: string\n        - in: header\n          name: x-applecloudextension-retry-count\n          required: false\n          schema:\n            format: uint32\n            minimum: 1\n            type: number\n        - in: header\n          name: User-Agent\n          required: true\n          schema:\n            maxLength: 250\n            pattern: AppleCloudExtension/([0-9]+\\.[0-9]+\\.[0-9]+) *.*\n            type: string\n        - in: header\n          name: Accept-Language\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PlayMediaRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Queue\"\n          description: \"\"\n        \"204\":\n          description: \"\"\n        \"401\":\n          description: \"\"\n        \"410\":\n          description: \"\"\n      summary: playMedia\n      tags:\n        - queues\n  /queues/updateActivity:\n    post:\n      operationId: updateActivityOnQueue\n      parameters:\n        - in: header\n          name: x-applecloudextension-session-id\n          required: true\n          schema:\n            maxLength: 128\n            minLength: 1\n            type: string\n        - in: header\n          name: x-applecloudextension-retry-count\n          required: false\n          schema:\n            format: uint32\n            minimum: 1\n            type: number\n        - in: header\n          name: User-Agent\n          required: true\n          schema:\n            maxLength: 250\n            pattern: AppleCloudExtension/([0-9]+\\.[0-9]+\\.[0-9]+) *.*\n            type: string\n        - in: header\n          name: Accept-Language\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateActivityRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateActivityResponse\"\n          description: \"\"\n        \"204\":\n          description: \"\"\n        \"401\":\n          description: \"\"\n        \"404\":\n          description: \"\"\n        \"410\":\n          description: \"\"\n      summary: updateActivity\n      tags:\n        - queues\ncomponents:\n  schemas:\n    AddMediaIntent:\n      allOf:\n        - $ref: \"#/components/schemas/Intent\"\n      properties:\n        class:\n          enum:\n            - AddMediaIntent\n          type: string\n        mediaDestination:\n          $ref: \"#/components/schemas/MediaDestination\"\n        mediaItems:\n          items:\n            $ref: \"#/components/schemas/MediaItem\"\n          type: array\n        mediaSearch:\n          $ref: \"#/components/schemas/MediaSearch\"\n      required:\n        - class\n      type: object\n    AddMediaIntentHandlingConfirmInvocationResponse:\n      allOf:\n        - $ref: \"#/components/schemas/InvocationResponse\"\n      properties:\n        method:\n          enum:\n            - AddMediaIntentHandling.confirm\n          type: string\n        result:\n          nullable: false\n          properties:\n            response:\n              $ref: \"#/components/schemas/AddMediaIntentResponse\"\n          required:\n            - response\n          type: object\n      required:\n        - method\n        - result\n      type: object\n    AddMediaIntentHandlingHandleInvocationResponse:\n      allOf:\n        - $ref: \"#/components/schemas/InvocationResponse\"\n      properties:\n        method:\n          enum:\n            - AddMediaIntentHandling.handle\n          type: string\n        result:\n          nullable: false\n          properties:\n            response:\n              $ref: \"#/components/schemas/AddMediaIntentResponse\"\n          required:\n            - response\n          type: object\n      required:\n        - method\n        - result\n      type: object\n    AddMediaIntentHandlingInvocation:\n      allOf:\n        - $ref: \"#/components/schemas/Invocation\"\n      discriminator:\n        mapping:\n          AddMediaIntentHandling.confirm: \"#/components/schemas/AddMediaIntentHandlingInvocation\"\n          AddMediaIntentHandling.handle: \"#/components/schemas/AddMediaIntentHandlingInvocation\"\n          AddMediaIntentHandling.resolveMediaDestination: \"#/components/schemas/AddMediaIntentHandlingInvocation\"\n          AddMediaIntentHandling.resolveMediaItems: \"#/components/schemas/AddMediaIntentHandlingInvocation\"\n        propertyName: method\n      properties:\n        method:\n          enum:\n            - AddMediaIntentHandling.resolveMediaItems\n            - AddMediaIntentHandling.resolveMediaDestination\n            - AddMediaIntentHandling.confirm\n            - AddMediaIntentHandling.handle\n          type: string\n        params:\n          nullable: false\n          properties:\n            intent:\n              $ref: \"#/components/schemas/AddMediaIntent\"\n          required:\n            - intent\n          type: object\n      required:\n        - method\n        - params\n      type: object\n    AddMediaIntentHandlingInvocationResponse:\n      discriminator:\n        mapping:\n          AddMediaIntentHandling.confirm: \"#/components/schemas/AddMediaIntentHandlingCon\\\n            firmInvocationResponse\"\n          AddMediaIntentHandling.handle: \"#/components/schemas/AddMediaIntentHandlingHandleInvocationResponse\"\n          AddMediaIntentHandling.resolveMediaDestination: \"#/components/schemas/AddMediaI\\\n            ntentHandlingResolveMediaDestinationInvocationResponse\"\n          AddMediaIntentHandling.resolveMediaItems: \"#/components/schemas/AddMediaIntentH\\\n            andlingResolveMediaItemsInvocationResponse\"\n          ProtocolException: \"#/components/schemas/ProtocolExceptionInvocationResponse\"\n        propertyName: method\n      oneOf:\n        - $ref: \"#/components/schemas/AddMediaIntentHandlingResolveMediaItemsInvocationRe\\\n            sponse\"\n        - $ref: \"#/components/schemas/AddMediaIntentHandlingResolveMediaDestinationInvoca\\\n            tionResponse\"\n        - $ref: \"#/components/schemas/AddMediaIntentHandlingConfirmInvocationResponse\"\n        - $ref: \"#/components/schemas/AddMediaIntentHandlingHandleInvocationResponse\"\n        - $ref: \"#/components/schemas/ProtocolExceptionInvocationResponse\"\n    AddMediaIntentHandlingResolveMediaDestinationInvocationResponse:\n      allOf:\n        - $ref: \"#/components/schemas/InvocationResponse\"\n      properties:\n        method:\n          enum:\n            - AddMediaIntentHandling.resolveMediaDestination\n          type: string\n        result:\n          nullable: false\n          properties:\n            resolutionResult:\n              $ref: \"#/components/schemas/AddMediaMediaDestinationResolutionResult\"\n          required:\n            - response\n          type: object\n      required:\n        - method\n        - result\n      type: object\n    AddMediaIntentHandlingResolveMediaItemsInvocationResponse:\n      allOf:\n        - $ref: \"#/components/schemas/InvocationResponse\"\n      properties:\n        method:\n          enum:\n            - AddMediaIntentHandling.resolveMediaItems\n          type: string\n        result:\n          nullable: false\n          properties:\n            resolutionResult:\n              items:\n                $ref: \"#/components/schemas/AddMediaMediaItemResolutionResult\"\n              type: array\n          required:\n            - response\n          type: object\n      required:\n        - method\n        - result\n      type: object\n    AddMediaIntentResponse:\n      allOf:\n        - $ref: \"#/components/schemas/IntentResponse\"\n      properties:\n        class:\n          enum:\n            - AddMediaIntentResponse\n          type: string\n        code:\n          $ref: \"#/components/schemas/AddMediaIntentResponseCode\"\n      required:\n        - class\n        - code\n      type: object\n    AddMediaIntentResponseCode:\n      enum:\n        - unspecified\n        - ready\n        - inProgress\n        - success\n        - failure\n        - failureRequiringAppLaunch\n      type: string\n    AddMediaMediaDestinationResolutionResult:\n      allOf:\n        - $ref: \"#/components/schemas/IntentResolutionResult\"\n      properties:\n        class:\n          enum:\n            - AddMediaMediaDestinationResolutionResult\n          type: string\n        confirmationRequired:\n          properties:\n            mediaDestinationToConfirm:\n              $ref: \"#/components/schemas/MediaDestination\"\n          required:\n            - mediaDestinationToConfirm\n          type: object\n          x-flow-exception: Requires Confirmation\n        disambiguation:\n          properties:\n            mediaDestinationsToDisambiguate:\n              items:\n                $ref: \"#/components/schemas/MediaDestination\"\n              minItems: 2\n              type: array\n          required:\n            - mediaDestinationsToDisambiguate\n          type: object\n          x-flow-exception: Requires Disambiguation\n        success:\n          properties:\n            resolvedMediaDestination:\n              $ref: \"#/components/schemas/MediaDestination\"\n          required:\n            - resolvedMediaDestination\n          type: object\n        unsupported:\n          properties:\n            reason:\n              $ref: \"#/components/schemas/AddMediaMediaDestinationUnsupportedReason\"\n          type: object\n          x-flow-exception: Unsupported\n      type: object\n    AddMediaMediaDestinationUnsupportedReason:\n      enum:\n        - playlistNameNotFound\n        - playlistNotEditable\n      type: string\n    AddMediaMediaItemResolutionResult:\n      allOf:\n        - $ref: \"#/components/schemas/IntentResolutionResult\"\n      properties:\n        class:\n          enum:\n            - AddMediaMediaItemResolutionResult\n          type: string\n        confirmationRequired:\n          properties:\n            mediaItemToConfirm:\n              $ref: \"#/components/schemas/MediaItem\"\n          required:\n            - mediaItemToConfirm\n          type: object\n          x-flow-exception: Requires Confirmation\n        disambiguation:\n          properties:\n            mediaItemsToDisambiguate:\n              items:\n                $ref: \"#/components/schemas/MediaItem\"\n              minItems: 2\n              type: array\n          required:\n            - mediaItemsToDisambiguate\n          type: object\n        success:\n          properties:\n            resolvedMediaItem:\n              $ref: \"#/components/schemas/MediaItem\"\n          required:\n            - resolvedMediaItem\n          type: object\n        unsupported:\n          properties:\n            reason:\n              $ref: \"#/components/schemas/AddMediaMediaItemUnsupportedReason\"\n          type: object\n          x-flow-exception: Unsupported\n      type: object\n    AddMediaMediaItemUnsupportedReason:\n      enum:\n        - loginRequired\n        - subscriptionRequired\n        - unsupportedMediaType\n        - explicitContentSettings\n        - restrictedContent\n        - regionRestriction\n      type: string\n    BooleanResolutionResult:\n      allOf:\n        - $ref: \"#/components/schemas/IntentResolutionResult\"\n      properties:\n        class:\n          enum:\n            - BooleanResolutionResult\n          type: string\n        confirmationRequired:\n          properties:\n            valueToConfirm:\n              type: boolean\n          required:\n            - valueToConfirm\n          type: object\n          x-flow-exception: Requires Confirmation\n        success:\n          properties:\n            resolvedValue:\n              type: boolean\n          required:\n            - resolvedValue\n          type: object\n      type: object\n    Constraints:\n      properties:\n        allowExplicitContent:\n          default: true\n          type: boolean\n        maximumQueueSegmentItemCount:\n          default: 1000\n          format: uint32\n          maximum: 1000\n          minimum: 50\n          type: integer\n        updateUserTasteProfile:\n          default: true\n          type: boolean\n      type: object\n    Content:\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/ContentAttributes\"\n        control:\n          default: default\n          example: song\n          type: string\n        identifier:\n          $ref: \"#/components/schemas/ContentIdentifier\"\n        isLive:\n          type: boolean\n        playIndex:\n          format: uint64\n          type: integer\n        url:\n          maxLength: 2000\n          type: string\n      required:\n        - identifier\n      type: object\n    ContentAttributes:\n      properties:\n        albumName:\n          example: Blood On the Tracks\n          maxLength: 250\n          type: string\n        artistName:\n          example: Bob Dylan\n          maxLength: 1000\n          type: string\n        artwork:\n          properties:\n            url:\n              maxLength: 2000\n              type: string\n          type: object\n        composerName:\n          example: B. Dylan\n          maxLength: 250\n          type: string\n        durationInMillis:\n          format: uint64\n          type: integer\n        genreNames:\n          items:\n            maxLength: 250\n            type: string\n          maxItems: 30\n          type: array\n        name:\n          example: Tangled Up In Blue\n          maxLength: 250\n          type: string\n        trackNumber:\n          example: 1\n          format: uint32\n          type: integer\n      type: object\n    ContentIdentifier:\n      example: j15f8A3cuU0GG\n      maxLength: 1000\n      minLength: 1\n      type: string\n    DateComponents:\n      example: \"1980\"\n      oneOf:\n        - pattern: \"[0-9]{4}\"\n          type: string\n        - pattern: \"[0-9]{4}-[0-9]{2}\"\n          type: string\n        - format: date\n          type: string\n        - format: date-time\n          type: string\n        - $ref: \"#/components/schemas/ExplicitDateComponents\"\n    DateComponentsRange:\n      properties:\n        endDateComponents:\n          $ref: \"#/components/schemas/DateComponents\"\n        startDateComponents:\n          $ref: \"#/components/schemas/DateComponents\"\n      type: object\n    ExecutionMetrics:\n      properties:\n        completed:\n          format: date-time\n          type: string\n        duration:\n          format: float\n          type: number\n        received:\n          format: date-time\n          type: string\n      type: object\n    ExplicitDateComponents:\n      properties:\n        calendarIdentifier:\n          type: string\n        day:\n          format: int32\n          type: integer\n        era:\n          format: int32\n          type: integer\n        hour:\n          format: int32\n          type: integer\n        minute:\n          format: int32\n          type: integer\n        month:\n          format: int32\n          type: integer\n        nanosecond:\n          format: int32\n          type: integer\n        second:\n          format: int32\n          type: integer\n        timeZone:\n          type: string\n        year:\n          format: int32\n          type: integer\n      type: object\n    ExtensionConfig:\n      properties:\n        hdr:\n          example:\n            x-client-type: headless\n            x-service-affinity: cluster1\n          type: object\n        intent:\n          properties:\n            addMedia:\n              allOf:\n                - $ref: \"#/components/schemas/ExtensionEndpointConfig\"\n              properties:\n                opt:\n                  items:\n                    enum:\n                      - resolveMediaDestination\n                      - confirm\n                    type: string\n                  type: array\n              type: object\n            hdr:\n              example:\n                x-service-affinity: intent2\n              type: object\n            playMedia:\n              allOf:\n                - $ref: \"#/components/schemas/ExtensionEndpointConfig\"\n              properties:\n                opt:\n                  items:\n                    enum:\n                      - resolvePlayShuffled\n                      - resolvePlaybackRepeatMode\n                      - resolvePlaybackQueueLocation\n                      - resolveResumePlayback\n                    type: string\n                  type: array\n              type: object\n            updateMediaAffinity:\n              allOf:\n                - $ref: \"#/components/schemas/ExtensionEndpointConfig\"\n              properties:\n                opt:\n                  items:\n                    enum:\n                      - resolveAffinityType\n                    type: string\n                  type: array\n              type: object\n          required:\n            - playMedia\n          type: object\n        media:\n          properties:\n            queues:\n              properties:\n                hdr:\n                  example:\n                    x-content-min-ttl: 1200\n                    x-media-catalog-region: en_US\n                  type: object\n                playMedia:\n                  properties:\n                    hdr:\n                      example:\n                        x-headless-client: true\n                      type: object\n                    url:\n                      default: /queues/playMedia\n                      maxLength: 4000\n                      minLength: 1\n                      type: string\n                  type: object\n                updateActivity:\n                  properties:\n                    hdr:\n                      type: object\n                    url:\n                      default: /queues/updateActivity\n                      maxLength: 4000\n                      minLength: 1\n                      type: string\n                  type: object\n              type: object\n          type: object\n        url:\n          example: /v2\n          maxLength: 2000\n          minLength: 1\n          type: string\n        version:\n          example: 1.0.0\n          pattern: ([0-9]+[.]){2}[0-9]+\n          type: string\n      required:\n        - version\n        - intent\n        - media\n      type: object\n    ExtensionConfigTag:\n      maxLength: 1002\n      pattern: '[\"][ -~]{1000}[\"]'\n      type: string\n    ExtensionEndpointConfig:\n      properties:\n        hdr:\n          type: object\n        url:\n          maxLength: 2000\n          minLength: 0\n          type: string\n      type: object\n    Intent:\n      discriminator:\n        mapping:\n          AddMediaIntent: \"#/components/schemas/AddMediaIntent\"\n          PlayMediaIntent: \"#/components/schemas/PlayMediaIntent\"\n          UpdateMediaAffinityIntent: \"#/components/schemas/UpdateMediaAffinityIntent\"\n        propertyName: class\n      properties:\n        class:\n          type: string\n        identifier:\n          type: string\n      required:\n        - class\n        - identifier\n      type: object\n    IntentResolutionResult:\n      discriminator:\n        mapping:\n          AddMediaMediaItemResolutionResult: \"#/components/schemas/AddMediaMediaItemResolutionResult\"\n          BooleanResolutionResult: \"#/components/schemas/BooleanResolutionResult\"\n          MediaAffinityTypeResolutionResult: \"#/components/schemas/MediaAffinityTypeResolutionResult\"\n          PlayMediaMediaItemResolutionResult: \"#/components/schemas/PlayMediaMediaItemResolutionResult\"\n          PlaybackQueueLocationResolutionResult: \"#/components/schemas/PlaybackQueueLocationResolutionResult\"\n          UpdateMediaAffinityMediaItemResolutionResult: \"#/components/schemas/UpdateMediaAffinityMediaItemResolutionResult\"\n        propertyName: class\n      properties:\n        class:\n          type: string\n        needsValue:\n          type: object\n          x-flow-exception: Failure\n        notRequired:\n          type: object\n        unsupported:\n          type: object\n          x-flow-exception: Failure\n      required:\n        - class\n      type: object\n    IntentResponse:\n      discriminator:\n        mapping:\n          AddMediaIntentResponse: \"#/components/schemas/AddMediaIntentResponse\"\n          PlayMediaIntentResponse: \"#/components/schemas/PlayMediaIntentResponse\"\n          UpdateMediaAffinityIntentResponse: \"#/components/schemas/UpdateMediaAffinityIntentResponse\"\n        propertyName: class\n      properties:\n        class:\n          type: string\n        userActivity:\n          $ref: \"#/components/schemas/UserActivity\"\n      required:\n        - class\n        - userActivity\n      type: object\n    Invocation:\n      discriminator:\n        mapping:\n          AddMediaIntentHandling.confirm: \"#/components/schemas/AddMediaIntentHandlingInvocation\"\n          AddMediaIntentHandling.handle: \"#/components/schemas/AddMediaIntentHandlingInvocation\"\n          AddMediaIntentHandling.resolveMediaDestination: \"#/components/schemas/AddMediaIntentHandlingInvocation\"\n          AddMediaIntentHandling.resolveMediaItems: \"#/components/schemas/AddMediaIntentHandlingInvocation\"\n          PlayMediaIntentHandling.handle: \"#/components/schemas/PlayMediaIntentHandlingInvocation\"\n          PlayMediaIntentHandling.resolveMediaItems: \"#/components/schemas/PlayMediaIntentHandlingInvocation\"\n          PlayMediaIntentHandling.resolvePlayShuffled: \"#/components/schemas/PlayMediaIntentHandlingInvocation\"\n          PlayMediaIntentHandling.resolvePlaybackQueueLocation: \"#/components/schemas/PlayMediaIntentHandlingInvocation\"\n          PlayMediaIntentHandling.resolvePlaybackRepeatMode: \"#/components/schemas/PlayMediaIntentHandlingInvocation\"\n          PlayMediaIntentHandling.resolveResumePlayback: \"#/components/schemas/PlayMediaIntentHandlingInvocation\"\n          UpdateMediaAffinityIntentHandling.handle: \"#/components/schemas/UpdateMediaAffinityIntentHandlingInvocation\"\n          UpdateMediaAffinityIntentHandling.resolveAffinityType: \"#/components/schemas/UpdateMediaAffinityIntentHandlingInvocation\"\n          UpdateMediaAffinityIntentHandling.resolveMediaItems: \"#/components/schemas/UpdateMediaAffinityIntentHandlingInvocation\"\n        propertyName: method\n      properties:\n        method:\n          type: string\n        params:\n          nullable: true\n          type: object\n        session:\n          $ref: \"#/components/schemas/Session\"\n      required:\n        - method\n        - params\n      type: object\n    InvocationResponse:\n      discriminator:\n        mapping:\n          AddMediaIntentHandling.confirm: \"#/components/schemas/AddMediaIntentHandlingCon\\\n            firmInvocationResponse\"\n          AddMediaIntentHandling.handle: \"#/components/schemas/AddMediaIntentHandlingHandleInvocationResponse\"\n          AddMediaIntentHandling.resolveMediaDestination: \"#/components/schemas/AddMediaI\\\n            ntentHandlingResolveMediaDestinationInvocationResponse\"\n          AddMediaIntentHandling.resolveMediaItems: \"#/components/schemas/AddMediaIntentH\\\n            andlingResolveMediaItemsInvocationResponse\"\n          PlayMediaIntentHandling.handle: \"#/components/schemas/PlayMediaIntentHandlingHa\\\n            ndleInvocationResponse\"\n          PlayMediaIntentHandling.resolveMediaItems: \"#/components/schemas/PlayMediaInten\\\n            tHandlingResolveMediaItemsInvocationResponse\"\n          PlayMediaIntentHandling.resolvePlayShuffled: \"#/components/schemas/PlayMediaInt\\\n            entHandlingResolvePlayShuffledInvocationResponse\"\n          PlayMediaIntentHandling.resolvePlaybackQueueLocation: \"#/components/schemas/Pla\\\n            yMediaIntentHandlingResolvePlaybackQueueLocationInvocationResponse\"\n          PlayMediaIntentHandling.resolvePlaybackRepeatMode: \"#/components/schemas/PlayMe\\\n            diaIntentHandlingResolvePlaybackRepeatModeInvocationResponse\"\n          PlayMediaIntentHandling.resolveResumePlayback: \"#/components/schemas/PlayMediaI\\\n            ntentHandlingResolveResumePlaybackInvocationResponse\"\n          ProtocolException: \"#/components/schemas/ProtocolExceptionInvocationResponse\"\n          UpdateMediaAffinityIntentHandling.handle: \"#/components/schemas/UpdateMediaAffi\\\n            nityIntentHandlingHandleInvocationResponse\"\n          UpdateMediaAffinityIntentHandling.resolveAffinityType: \"#/components/schemas/Up\\\n            dateMediaAffinityIntentHandlingResolveAffinityTypeInvocationRespons\\\n            e\"\n          UpdateMediaAffinityIntentHandling.resolveMediaItems: \"#/components/schemas/Upda\\\n            teMediaAffinityIntentHandlingResolveMediaItemsInvocationResponse\"\n        propertyName: method\n      properties:\n        debug:\n          $ref: \"#/components/schemas/ServiceDebugReference\"\n        method:\n          type: string\n        metrics:\n          $ref: \"#/components/schemas/ExecutionMetrics\"\n        result:\n          nullable: true\n          type: object\n      required:\n        - method\n        - result\n      type: object\n    MediaAffinityType:\n      enum:\n        - unknown\n        - like\n        - dislike\n      type: string\n    MediaAffinityTypeResolutionResult:\n      allOf:\n        - $ref: \"#/components/schemas/IntentResolutionResult\"\n      properties:\n        class:\n          enum:\n            - MediaAffinityTypeResolutionResult\n          type: string\n        confirmationRequired:\n          properties:\n            mediaAffinityTypeToConfirm:\n              $ref: \"#/components/schemas/MediaAffinityType\"\n          required:\n            - mediaAffinityTypeToConfirm\n          type: object\n          x-flow-exception: Requires Confirmation\n        success:\n          properties:\n            resolvedMediaAffinityType:\n              $ref: \"#/components/schemas/MediaAffinityType\"\n          required:\n            - resolvedMediaAffinityType\n          type: object\n      type: object\n    MediaDestination:\n      discriminator:\n        mapping:\n          library: \"#/components/schemas/MediaDestinationLibrary\"\n          playlist: \"#/components/schemas/MediaDestinationPlaylist\"\n        propertyName: mediaDestinationType\n      properties:\n        mediaDestinationType:\n          enum:\n            - library\n            - playlist\n          type: string\n      required:\n        - mediaDestinationType\n      type: object\n    MediaDestinationLibrary:\n      allOf:\n        - $ref: \"#/components/schemas/MediaDestination\"\n      properties:\n        mediaDestinationType:\n          enum:\n            - library\n          type: string\n      required:\n        - mediaDestinationType\n      type: object\n    MediaDestinationPlaylist:\n      allOf:\n        - $ref: \"#/components/schemas/MediaDestination\"\n      properties:\n        mediaDestinationType:\n          enum:\n            - playlist\n          type: string\n        playlistName:\n          maxLength: 1000\n          minLength: 1\n          type: string\n      required:\n        - mediaDestinationType\n        - playlistName\n      type: object\n    MediaItem:\n      properties:\n        artist:\n          maxLength: 1000\n          readOnly: true\n          type: string\n        identifier:\n          maxLength: 250\n          type: string\n        title:\n          maxLength: 1000\n          readOnly: true\n          type: string\n        type:\n          $ref: \"#/components/schemas/MediaItemType\"\n      required:\n        - type\n        - identifier\n      type: object\n    MediaItemType:\n      enum:\n        - unknown\n        - song\n        - album\n        - artist\n        - genre\n        - playlist\n        - podcastShow\n        - podcastEpisode\n        - podcastPlaylist\n        - musicStation\n        - audioBook\n        - movie\n        - tvShow\n        - tvShowEpisode\n        - musicVideo\n        - podcastStation\n        - radioStation\n        - station\n        - music\n        - algorithmicRadioStation\n        - news\n      type: string\n    MediaReference:\n      enum:\n        - unknown\n        - currentlyPlaying\n        - my\n      type: string\n    MediaSearch:\n      properties:\n        albumName:\n          type: string\n        artistName:\n          type: string\n        genreNames:\n          items:\n            type: string\n          type: array\n        mediaIdentifier:\n          type: string\n        mediaName:\n          type: string\n        mediaType:\n          $ref: \"#/components/schemas/MediaItemType\"\n        moodNames:\n          items:\n            type: string\n          type: array\n        reference:\n          $ref: \"#/components/schemas/MediaReference\"\n        releaseDate:\n          $ref: \"#/components/schemas/DateComponentsRange\"\n        sortOrder:\n          $ref: \"#/components/schemas/MediaSortOrder\"\n      type: object\n    MediaSortOrder:\n      enum:\n        - unknown\n        - newest\n        - oldest\n        - best\n        - worst\n        - popular\n        - unpopular\n        - trending\n        - recommended\n      type: string\n    PlayMediaControl:\n      properties:\n        activity:\n          $ref: \"#/components/schemas/PlayMediaControlActivity\"\n        commands:\n          $ref: \"#/components/schemas/PlayMediaControlCommandSet\"\n        scheme:\n          $ref: \"#/components/schemas/PlayMediaControlScheme\"\n      required:\n        - scheme\n      type: object\n    PlayMediaControlActivity:\n      properties:\n        playElapsed:\n          format: uint32\n          minimum: 5\n          type: integer\n        playElapsedInterval:\n          format: uint32\n          minimum: 5\n          type: integer\n        playPaused:\n          default: 5\n          format: uint32\n          maximum: 60\n          minimum: 5\n          type: integer\n      type: object\n    PlayMediaControlCommandSet:\n      properties:\n        bookmarkTrack:\n          type: boolean\n        dislikeTrack:\n          type: boolean\n        likeTrack:\n          type: boolean\n        nextTrack:\n          type: boolean\n        preferSkipBackward:\n          type: boolean\n        preferSkipForward:\n          type: boolean\n        previousTrack:\n          type: boolean\n        seekToPlaybackPosition:\n          type: boolean\n        skipBackward:\n          type: boolean\n        skipForward:\n          type: boolean\n      type: object\n    PlayMediaControlScheme:\n      enum:\n        - custom\n        - onDemand\n        - internetRadio\n        - liveStreaming\n        - audioBook\n        - podcast\n        - advertisement\n      type: string\n    PlayMediaIntent:\n      allOf:\n        - $ref: \"#/components/schemas/Intent\"\n      properties:\n        class:\n          enum:\n            - PlayMediaIntent\n          type: string\n        mediaItems:\n          items:\n            $ref: \"#/components/schemas/MediaItem\"\n          type: array\n        mediaSearch:\n          $ref: \"#/components/schemas/MediaSearch\"\n        playShuffled:\n          type: boolean\n        playbackQueueLocation:\n          $ref: \"#/components/schemas/PlaybackQueueLocation\"\n        playbackRepeatMode:\n          $ref: \"#/components/schemas/PlaybackRepeatMode\"\n        playbackSpeed:\n          format: double\n          type: number\n        resumePlayback:\n          type: boolean\n      type: object\n    PlayMediaIntentHandlingHandleInvocationResponse:\n      allOf:\n        - $ref: \"#/components/schemas/InvocationResponse\"\n      properties:\n        method:\n          enum:\n            - PlayMediaIntentHandling.handle\n          type: string\n        result:\n          nullable: false\n          properties:\n            response:\n              $ref: \"#/components/schemas/PlayMediaIntentResponse\"\n          required:\n            - response\n          type: object\n      required:\n        - method\n        - result\n      type: object\n    PlayMediaIntentHandlingInvocation:\n      allOf:\n        - $ref: \"#/components/schemas/Invocation\"\n      properties:\n        method:\n          enum:\n            - PlayMediaIntentHandling.resolveMediaItems\n            - PlayMediaIntentHandling.resolvePlayShuffled\n            - PlayMediaIntentHandling.resolvePlaybackQueueLocation\n            - PlayMediaIntentHandling.resolvePlaybackRepeatMode\n            - PlayMediaIntentHandling.resolveResumePlayback\n            - PlayMediaIntentHandling.handle\n          type: string\n        params:\n          nullable: false\n          properties:\n            intent:\n              $ref: \"#/components/schemas/PlayMediaIntent\"\n          required:\n            - intent\n          type: object\n      required:\n        - params\n        - method\n      type: object\n    PlayMediaIntentHandlingInvocationResponse:\n      discriminator:\n        mapping:\n          PlayMediaIntentHandling.handle: \"#/components/schemas/PlayMediaIntentHandlingHa\\\n            ndleInvocationResponse\"\n          PlayMediaIntentHandling.resolveMediaItems: \"#/components/schemas/PlayMediaInten\\\n            tHandlingResolveMediaItemsInvocationResponse\"\n          PlayMediaIntentHandling.resolvePlayShuffled: \"#/components/schemas/PlayMediaInt\\\n            entHandlingResolvePlayShuffledInvocationResponse\"\n          PlayMediaIntentHandling.resolvePlaybackQueueLocation: \"#/components/schemas/Pla\\\n            yMediaIntentHandlingResolvePlaybackQueueLocationInvocationResponse\"\n          PlayMediaIntentHandling.resolvePlaybackRepeatMode: \"#/components/schemas/PlayMe\\\n            diaIntentHandlingResolvePlaybackRepeatModeInvocationResponse\"\n          PlayMediaIntentHandling.resolveResumePlayback: \"#/components/schemas/PlayMediaI\\\n            ntentHandlingResolveResumePlaybackInvocationResponse\"\n          ProtocolException: \"#/components/schemas/ProtocolExceptionInvocationResponse\"\n        propertyName: method\n      oneOf:\n        - $ref: \"#/components/schemas/PlayMediaIntentHandlingResolveMediaItemsInvocationR\\\n            esponse\"\n        - $ref: \"#/components/schemas/PlayMediaIntentHandlingResolvePlayShuffledInvocatio\\\n            nResponse\"\n        - $ref: \"#/components/schemas/PlayMediaIntentHandlingResolvePlaybackQueueLocation\\\n            InvocationResponse\"\n        - $ref: \"#/components/schemas/PlayMediaIntentHandlingResolvePlaybackRepeatModeInv\\\n            ocationResponse\"\n        - $ref: \"#/components/schemas/PlayMediaIntentHandlingResolveResumePlaybackInvocat\\\n            ionResponse\"\n        - $ref: \"#/components/schemas/PlayMediaIntentHandlingHandleInvocationResponse\"\n        - $ref: \"#/components/schemas/ProtocolExceptionInvocationResponse\"\n    PlayMediaIntentHandlingResolveMediaItemsInvocationResponse:\n      allOf:\n        - $ref: \"#/components/schemas/InvocationResponse\"\n      properties:\n        method:\n          enum:\n            - PlayMediaIntentHandling.resolveMediaItems\n          type: string\n        result:\n          nullable: false\n          properties:\n            resolutionResult:\n              items:\n                $ref: \"#/components/schemas/PlayMediaMediaItemResolutionResult\"\n              type: array\n          required:\n            - resolutionResult\n          type: object\n      required:\n        - method\n        - result\n      type: object\n    PlayMediaIntentHandlingResolvePlayShuffledInvocationResponse:\n      allOf:\n        - $ref: \"#/components/schemas/InvocationResponse\"\n      properties:\n        method:\n          enum:\n            - PlayMediaIntentHandling.resolvePlayShuffled\n          type: string\n        result:\n          nullable: false\n          properties:\n            resolutionResult:\n              $ref: \"#/components/schemas/BooleanResolutionResult\"\n          required:\n            - resolutionResult\n          type: object\n      required:\n        - method\n        - result\n      type: object\n    PlayMediaIntentHandlingResolvePlaybackQueueLocationInvocationResponse:\n      allOf:\n        - $ref: \"#/components/schemas/InvocationResponse\"\n      properties:\n        method:\n          enum:\n            - PlayMediaIntentHandling.resolvePlaybackQueueLocation\n          type: string\n        result:\n          nullable: false\n          properties:\n            resolutionResult:\n              $ref: \"#/components/schemas/PlaybackQueueLocationResolutionResult\"\n          required:\n            - resolutionResult\n          type: object\n      required:\n        - method\n        - result\n      type: object\n    PlayMediaIntentHandlingResolvePlaybackRepeatModeInvocationResponse:\n      allOf:\n        - $ref: \"#/components/schemas/InvocationResponse\"\n      properties:\n        method:\n          enum:\n            - PlayMediaIntentHandling.resolvePlaybackRepeatMode\n          type: string\n        result:\n          nullable: false\n          properties:\n            resolutionResult:\n              $ref: \"#/components/schemas/PlaybackRepeatModeResolutionResult\"\n          required:\n            - resolutionResult\n          type: object\n      required:\n        - method\n        - result\n      type: object\n    PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse:\n      allOf:\n        - $ref: \"#/components/schemas/InvocationResponse\"\n      properties:\n        method:\n          enum:\n            - PlayMediaIntentHandling.resolveResumePlayback\n          type: string\n        result:\n          nullable: false\n          properties:\n            resolutionResult:\n              $ref: \"#/components/schemas/BooleanResolutionResult\"\n          required:\n            - resolutionResult\n          type: object\n      required:\n        - method\n        - result\n      type: object\n    PlayMediaIntentResponse:\n      allOf:\n        - $ref: \"#/components/schemas/IntentResponse\"\n      properties:\n        class:\n          enum:\n            - PlayMediaIntentResponse\n          type: string\n        code:\n          $ref: \"#/components/schemas/PlayMediaIntentResponseCode\"\n      required:\n        - class\n        - code\n      type: object\n    PlayMediaIntentResponseCode:\n      enum:\n        - unspecified\n        - success\n        - failure\n        - failureRequiringAppLaunch\n        - failureUnknownMediaType\n        - failureNoUnplayedContent\n        - failureRestrictedContent\n      type: string\n    PlayMediaMediaItemResolutionResult:\n      allOf:\n        - $ref: \"#/components/schemas/IntentResolutionResult\"\n      properties:\n        class:\n          enum:\n            - PlayMediaMediaItemResolutionResult\n          type: string\n        confirmationRequired:\n          properties:\n            mediaItemToConfirm:\n              $ref: \"#/components/schemas/MediaItem\"\n          required:\n            - mediaItemToConfirm\n          type: object\n          x-flow-exception: Requires Confirmation\n        disambiguation:\n          properties:\n            mediaItemsToDisambiguate:\n              items:\n                $ref: \"#/components/schemas/MediaItem\"\n              minItems: 2\n              type: array\n          required:\n            - mediaItemsToDisambiguate\n          type: object\n          x-flow-exception: Requires Disambiguation\n        success:\n          properties:\n            resolvedMediaItem:\n              $ref: \"#/components/schemas/MediaItem\"\n          required:\n            - resolvedMediaItem\n          type: object\n        unsupported:\n          properties:\n            reason:\n              $ref: \"#/components/schemas/PlayMediaMediaItemUnsupportedReason\"\n          type: object\n          x-flow-exception: Unsupported\n      type: object\n    PlayMediaMediaItemUnsupportedReason:\n      enum:\n        - loginRequired\n        - subscriptionRequired\n        - unsupportedMediaType\n        - explicitContentSettings\n        - restrictedContent\n        - regionRestriction\n      type: string\n    PlayMediaRequest:\n      properties:\n        constraints:\n          $ref: \"#/components/schemas/Constraints\"\n        userActivity:\n          $ref: \"#/components/schemas/UserActivity\"\n        version:\n          pattern: \"[0-9]+\\\\.[0-9]+\\\\.[0-9]+\"\n          type: string\n      required:\n        - version\n        - userActivity\n        - constraints\n      type: object\n    PlaybackQueueLocation:\n      enum:\n        - unknown\n        - now\n        - next\n        - later\n      type: string\n    PlaybackQueueLocationResolutionResult:\n      allOf:\n        - $ref: \"#/components/schemas/IntentResolutionResult\"\n      properties:\n        class:\n          enum:\n            - PlaybackQueueLocationResolutionResult\n          type: string\n        confirmationRequired:\n          properties:\n            playbackQueueLocationToConfirm:\n              $ref: \"#/components/schemas/PlaybackQueueLocation\"\n          required:\n            - playbackQueueLocationToConfirm\n          type: object\n          x-flow-exception: Requires Confirmation\n        success:\n          properties:\n            resolvedPlaybackQueueLocation:\n              $ref: \"#/components/schemas/PlaybackQueueLocation\"\n          required:\n            - resolvedPlaybackQueueLocation\n          type: object\n      type: object\n    PlaybackRepeatMode:\n      enum:\n        - unknown\n        - none\n        - all\n        - one\n      type: string\n    PlaybackRepeatModeResolutionResult:\n      allOf:\n        - $ref: \"#/components/schemas/IntentResolutionResult\"\n      properties:\n        class:\n          enum:\n            - PlaybackRepeatModeResolutionResult\n          type: string\n        confirmationRequired:\n          properties:\n            playbackRepeatModeToConfirm:\n              $ref: \"#/components/schemas/PlaybackRepeatMode\"\n          required:\n            - playbackRepeatModeToConfirm\n          type: object\n          x-flow-exception: Requires Confirmation\n        success:\n          properties:\n            resolvedPlaybackRepeatMode:\n              $ref: \"#/components/schemas/PlaybackRepeatMode\"\n          required:\n            - resolvedPlaybackRepeatMode\n          type: object\n      type: object\n    PlayerContext:\n      properties:\n        activityIdentifier:\n          maxLength: 250\n          type: string\n        contentIdentifier:\n          $ref: \"#/components/schemas/ContentIdentifier\"\n        offsetInMillis:\n          example: 10942\n          format: int64\n          type: integer\n        playbackSpeed:\n          default: 1\n          format: double\n          type: number\n        queueIdentifier:\n          $ref: \"#/components/schemas/QueueIdentifier\"\n      type: object\n    ProtocolException:\n      properties:\n        code:\n          format: int64\n          type: integer\n        methodIndex:\n          format: uint32\n          type: integer\n        methodName:\n          type: string\n        reason:\n          $ref: \"#/components/schemas/ProtocolExceptionReason\"\n        retryWithDelay:\n          default: -1\n          format: float\n          type: number\n        trace:\n          items:\n            maxLength: 1000\n            type: string\n          maxItems: 64\n          type: array\n      required:\n        - reason\n      type: object\n    ProtocolExceptionInvocationResponse:\n      allOf:\n        - $ref: \"#/components/schemas/InvocationResponse\"\n      properties:\n        exception:\n          $ref: \"#/components/schemas/ProtocolException\"\n        method:\n          enum:\n            - ProtocolException\n          type: string\n      required:\n        - method\n        - exception\n      type: object\n    ProtocolExceptionReason:\n      enum:\n        - unsupported\n        - unauthorized\n        - unexpected\n        - invalid\n        - unparseable\n        - deprecated\n        - internal\n        - complex\n        - busy\n      type: string\n    Queue:\n      properties:\n        content:\n          items:\n            $ref: \"#/components/schemas/Content\"\n          maxItems: 1000\n          type: array\n        contentItemsCount:\n          format: uint32\n          nullable: true\n          type: integer\n        controls:\n          $ref: \"#/components/schemas/QueueControlMapping\"\n        identifier:\n          $ref: \"#/components/schemas/QueueIdentifier\"\n        insertPointer:\n          $ref: \"#/components/schemas/QueueInsertPointer\"\n        nextContentUrl:\n          maxLength: 2000\n          minLength: 1\n          nullable: true\n          type: string\n        playPointer:\n          $ref: \"#/components/schemas/QueuePlayPointer\"\n        prerollSeconds:\n          format: double\n          type: number\n        previousContentUrl:\n          maxLength: 2000\n          minLength: 1\n          nullable: true\n          type: string\n        skipsRemaining:\n          format: uint32\n          nullable: true\n          type: integer\n        version:\n          maxLength: 25\n          pattern: \"[0-9]+\\\\.[0-9]+\\\\.[0-9]+\"\n          type: string\n      required:\n        - version\n        - identifier\n        - content\n      type: object\n    QueueActivityReportEvent:\n      enum:\n        - local.playing.elapsed\n        - local.playing.paused\n        - local.playing.continued\n        - local.playing.scrub\n        - local.playing.fastForward\n        - local.playing.fastRewind\n        - local.playing.transitioned.naturally\n        - local.playing.transitioned.skip_next\n        - local.playing.transitioned.skip_previous\n        - local.playing.transitioned.queue_replaced\n        - local.stopped.naturally\n        - local.stopped.skip_past_end\n        - local.command.like\n        - local.command.dislike\n        - local.command.bookmark\n      type: string\n    QueueControlMapping:\n      additionalProperties:\n        $ref: \"#/components/schemas/PlayMediaControl\"\n      properties:\n        default:\n          $ref: \"#/components/schemas/PlayMediaControl\"\n      required:\n        - default\n      type: object\n    QueueIdentifier:\n      example: u104823q8201\n      maxLength: 1024\n      minLength: 1\n      type: string\n    QueueInsertPointer:\n      properties:\n        afterIdentifier:\n          $ref: \"#/components/schemas/ContentIdentifier\"\n        replace:\n          default: false\n          type: boolean\n    QueuePlayPointer:\n      nullable: true\n      properties:\n        contentIdentifier:\n          $ref: \"#/components/schemas/ContentIdentifier\"\n        offsetInMillis:\n          example: 10942\n          format: int64\n          type: integer\n      type: object\n    ServiceDebugReference:\n      format: uri\n      maxLength: 2000\n      type: string\n    Session:\n      properties:\n        constraints:\n          $ref: \"#/components/schemas/Constraints\"\n        deadline:\n          format: date-time\n          type: string\n        identifier:\n          maxLength: 128\n          minLength: 1\n          type: string\n        playerContext:\n          $ref: \"#/components/schemas/PlayerContext\"\n        requested:\n          format: date-time\n          type: string\n        version:\n          pattern: \"[0-9]+\\\\.[0-9]+\\\\.[0-9]+\"\n          type: string\n      required:\n        - version\n        - identifier\n        - constraints\n        - deadline\n        - requested\n      type: object\n    UpdateActivityRequest:\n      properties:\n        constraints:\n          $ref: \"#/components/schemas/Constraints\"\n        nowPlaying:\n          $ref: \"#/components/schemas/PlayerContext\"\n        previouslyPlaying:\n          $ref: \"#/components/schemas/PlayerContext\"\n        report:\n          $ref: \"#/components/schemas/QueueActivityReportEvent\"\n        timestamp:\n          format: date-time\n          type: string\n        userActivity:\n          $ref: \"#/components/schemas/UserActivity\"\n        version:\n          pattern: \"[0-9]+\\\\.[0-9]+\\\\.[0-9]+\"\n          type: string\n      required:\n        - version\n        - timestamp\n        - report\n        - userActivity\n      type: object\n    UpdateActivityResponse:\n      properties:\n        queue:\n          $ref: \"#/components/schemas/Queue\"\n        userActivity:\n          $ref: \"#/components/schemas/UserActivity\"\n      type: object\n    UpdateMediaAffinityIntent:\n      allOf:\n        - $ref: \"#/components/schemas/Intent\"\n      properties:\n        affinityType:\n          $ref: \"#/components/schemas/MediaAffinityType\"\n        class:\n          enum:\n            - UpdateMediaAffinityIntent\n          type: string\n        mediaItems:\n          items:\n            $ref: \"#/components/schemas/MediaItem\"\n          type: array\n        mediaSearch:\n          $ref: \"#/components/schemas/MediaSearch\"\n      required:\n        - class\n      type: object\n    UpdateMediaAffinityIntentHandlingHandleInvocationResponse:\n      allOf:\n        - $ref: \"#/components/schemas/InvocationResponse\"\n      properties:\n        method:\n          enum:\n            - UpdateMediaAffinityIntentHandling.handle\n          type: string\n        result:\n          nullable: false\n          properties:\n            response:\n              $ref: \"#/components/schemas/UpdateMediaAffinityIntentResponse\"\n          required:\n            - response\n          type: object\n      required:\n        - method\n        - result\n      type: object\n    UpdateMediaAffinityIntentHandlingInvocation:\n      allOf:\n        - $ref: \"#/components/schemas/Invocation\"\n      discriminator:\n        mapping:\n          UpdateMediaAffinityIntentHandling.handle: \"#/components/schemas/UpdateMediaAffinityIntentHandlingInvocation\"\n          UpdateMediaAffinityIntentHandling.resolveAffinityType: \"#/components/schemas/UpdateMediaAffinityIntentHandlingInvocation\"\n          UpdateMediaAffinityIntentHandling.resolveMediaItems: \"#/components/schemas/UpdateMediaAffinityIntentHandlingInvocation\"\n        propertyName: method\n      properties:\n        method:\n          enum:\n            - UpdateMediaAffinityIntentHandling.resolveMediaItems\n            - UpdateMediaAffinityIntentHandling.resolveAffinityType\n            - UpdateMediaAffinityIntentHandling.handle\n          type: string\n        params:\n          nullable: false\n          properties:\n            intent:\n              $ref: \"#/components/schemas/UpdateMediaAffinityIntent\"\n          required:\n            - intent\n          type: object\n      required:\n        - method\n        - params\n      type: object\n    UpdateMediaAffinityIntentHandlingInvocationResponse:\n      discriminator:\n        mapping:\n          ProtocolException: \"#/components/schemas/ProtocolExceptionInvocationResponse\"\n          UpdateMediaAffinityIntentHandling.handle: \"#/components/schemas/UpdateMediaAffi\\\n            nityIntentHandlingHandleInvocationResponse\"\n          UpdateMediaAffinityIntentHandling.resolveAffinityType: \"#/components/schemas/Up\\\n            dateMediaAffinityIntentHandlingResolveAffinityTypeInvocationRespons\\\n            e\"\n          UpdateMediaAffinityIntentHandling.resolveMediaItems: \"#/components/schemas/Upda\\\n            teMediaAffinityIntentHandlingResolveMediaItemsInvocationResponse\"\n        propertyName: method\n      oneOf:\n        - $ref: \"#/components/schemas/UpdateMediaAffinityIntentHandlingResolveMediaItemsI\\\n            nvocationResponse\"\n        - $ref: \"#/components/schemas/UpdateMediaAffinityIntentHandlingResolveAffinityTyp\\\n            eInvocationResponse\"\n        - $ref: \"#/components/schemas/UpdateMediaAffinityIntentHandlingHandleInvocationRe\\\n            sponse\"\n        - $ref: \"#/components/schemas/ProtocolExceptionInvocationResponse\"\n    UpdateMediaAffinityIntentHandlingResolveAffinityTypeInvocationResponse:\n      allOf:\n        - $ref: \"#/components/schemas/InvocationResponse\"\n      properties:\n        method:\n          enum:\n            - UpdateMediaAffinityIntentHandling.resolveAffinityType\n          type: string\n        result:\n          nullable: false\n          properties:\n            resolutionResult:\n              $ref: \"#/components/schemas/MediaAffinityTypeResolutionResult\"\n          required:\n            - resolutionResult\n          type: object\n      required:\n        - method\n        - result\n      type: object\n    UpdateMediaAffinityIntentHandlingResolveMediaItemsInvocationResponse:\n      allOf:\n        - $ref: \"#/components/schemas/InvocationResponse\"\n      properties:\n        method:\n          enum:\n            - UpdateMediaAffinityIntentHandling.resolveMediaItems\n          type: string\n        result:\n          nullable: false\n          properties:\n            resolutionResult:\n              items:\n                $ref: \"#/components/schemas/UpdateMediaAffinityMediaItemResolutionResult\"\n              type: array\n          required:\n            - resolutionResult\n          type: object\n      required:\n        - method\n        - result\n      type: object\n    UpdateMediaAffinityIntentResponse:\n      allOf:\n        - $ref: \"#/components/schemas/IntentResponse\"\n      properties:\n        class:\n          enum:\n            - UpdateMediaAffinityIntentResponse\n          type: string\n        code:\n          $ref: \"#/components/schemas/UpdateMediaAffinityIntentResponseCode\"\n      required:\n        - class\n        - code\n      type: object\n    UpdateMediaAffinityIntentResponseCode:\n      enum:\n        - unspecified\n        - inProgress\n        - success\n        - failure\n        - failureRequiringAppLaunch\n      type: string\n    UpdateMediaAffinityMediaItemResolutionResult:\n      allOf:\n        - $ref: \"#/components/schemas/IntentResolutionResult\"\n      properties:\n        class:\n          enum:\n            - UpdateMediaAffinityMediaItemResolutionResult\n          type: string\n        confirmationRequired:\n          properties:\n            mediaItemToConfirm:\n              $ref: \"#/components/schemas/MediaItem\"\n          required:\n            - mediaItemToConfirm\n          type: object\n          x-flow-exception: Requires Confirmation\n        disambiguation:\n          properties:\n            mediaItemsToDisambiguate:\n              items:\n                $ref: \"#/components/schemas/MediaItem\"\n              minItems: 2\n              type: array\n          required:\n            - mediaItemsToDisambiguate\n          type: object\n        success:\n          properties:\n            resolvedMediaItem:\n              $ref: \"#/components/schemas/MediaItem\"\n          required:\n            - resolvedMediaItem\n          type: object\n        unsupported:\n          properties:\n            reason:\n              $ref: \"#/components/schemas/UpdateMediaAffinityMediaItemUnsupportedReason\"\n          type: object\n          x-flow-exception: Unsupported\n      type: object\n    UpdateMediaAffinityMediaItemUnsupportedReason:\n      enum:\n        - loginRequired\n        - subscriptionRequired\n        - unsupportedMediaType\n        - explicitContentSettings\n      type: string\n    UserActivity:\n      nullable: true\n      properties:\n        activityType:\n          example: com.mediastreamingservice.playmedia\n          maxLength: 250\n          type: string\n        persistentIdentifier:\n          maxLength: 250\n          type: string\n        title:\n          maxLength: 250\n          type: string\n        userInfo:\n          title: UserActivityUserInfo\n          type: object\n        version:\n          maxLength: 25\n          pattern: \"[0-9]+\\\\.[0-9]+\\\\.[0-9]+\"\n          type: string\n      required:\n        - version\n        - activityType\n      type: object\nx-important: \"IMPORTANT:  This OpenAPI Specification is only for use in\n  accordance with the terms of the Apple Developer Program License\n  Agreement.  You may not use this OpenAPI Specification unless you have agreed\n  to the Apple Developer Program License Agreement.\"\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/apple.com/sirikit-cloud-media/1.0.2/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/apple.com/sirikit-cloud-media/1.0.2/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/intent/addMedia\": post: responses: 200: contents: application/json: generate schema: item: oneOf: collect variants: AddMediaIntentHandlingInvocationResponse: sum types with same names not implemented",
	"NotImplemented": [
		"sum types with same names",
		"unsupported content types"
	]
}