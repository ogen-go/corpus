{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/codingsoo/REST_Go"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "services/jdk11/project-tracking-system/openapi.yaml",
			"byteSize": 53154,
			"content": "openapi: 3.0.1\ninfo:\n  title: Project-Tracker-System\n  description: \"Manage and track commits transactions by Employees and their Managers\\\n    \\ on a specific project.\\n- Employees can be assigned to projects created and\\\n    \\ managed by their managers, can add a new commits to a specific project so manager\\\n    \\ can track its progression\\n- Managers can create, edit \u0026 delete projects, also\\\n    \\ assign them to their employees and track them efficiently \u0026 easily\\n- Admin\\\n    \\ manages all Employees as well as their credentials \u0026 departments\\nFor more,\\\n    \\ you can check more on our GitHub repositories : \\n- Selim Horri : https://github.com/SelimHorri?tab=repositories\\\n    \\ \\n- Imen Toukebri : https://github.com/imen1012?tab=repositories \\n- Bader Idoudi\\\n    \\ : https://github.com/Bader1996?tab=repositories \\n\"\n  termsOfService: Terms of service\n  contact:\n    name: Selim Horri, Imen Touk, Badr Idoudi\n    url: https://github.com/SelimHorri/Project-Tracking-System\n    email: springabcxyz@gmail.com\n  license:\n    name: Apache Licence version 2.0\n    url: https://apache.org/license.html\n  version: \"1.0\"\nservers:\n- url: http://localhost:8080/\ntags:\n- name: assignment-resource\n  description: Assignment Resource\n- name: authentication-resource\n  description: Authentication Resource\n- name: credential-resource\n  description: Credential Resource\n- name: department-resource\n  description: Department Resource\n- name: employee-resource\n  description: Employee Resource\n- name: location-resource\n  description: Location Resource\n- name: project-resource\n  description: Project Resource\npaths:\n  /app/api/assignments:\n    get:\n      tags:\n      - assignment-resource\n      summary: findAll\n      operationId: findAllUsingGET\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DtoCollectionAssignment'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n    put:\n      tags:\n      - assignment-resource\n      summary: update\n      operationId: updateUsingPUT\n      requestBody:\n        description: assignment\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Assignment'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Assignment'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: assignment\n    post:\n      tags:\n      - assignment-resource\n      summary: save\n      operationId: saveUsingPOST\n      requestBody:\n        description: assignment\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Assignment'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Assignment'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: assignment\n  /app/api/assignments/data/project-commit/{employeeId}/{projectId}:\n    get:\n      tags:\n      - assignment-resource\n      summary: findByEmployeeIdAndProjectId\n      operationId: findByEmployeeIdAndProjectIdUsingGET\n      parameters:\n      - name: employeeId\n        in: path\n        description: employeeId\n        required: true\n        schema:\n          type: string\n        example: abc\n      - name: projectId\n        in: path\n        description: projectId\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DtoCollectionProjectCommit'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n  /app/api/assignments/data/project-commit/{employeeId}/{projectId}/{commitDate}:\n    get:\n      tags:\n      - assignment-resource\n      summary: findByEmployeeIdAndProjectIdAndCommitDate\n      operationId: findByEmployeeIdAndProjectIdAndCommitDateUsingGET\n      parameters:\n      - name: commitDate\n        in: path\n        description: commitDate\n        required: true\n        schema:\n          type: string\n        example: abc\n      - name: employeeId\n        in: path\n        description: employeeId\n        required: true\n        schema:\n          type: string\n        example: abc\n      - name: projectId\n        in: path\n        description: projectId\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ProjectCommit'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n  /app/api/assignments/data/project-commit/{projectId}:\n    get:\n      tags:\n      - assignment-resource\n      summary: findByProjectId\n      operationId: findByProjectIdUsingGET\n      parameters:\n      - name: projectId\n        in: path\n        description: projectId\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DtoCollectionProjectCommit'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n  /app/api/assignments/delete/{employeeId}/{projectId}/{commitDate}:\n    delete:\n      tags:\n      - assignment-resource\n      summary: deleteById\n      operationId: deleteByIdUsingDELETE\n      parameters:\n      - name: commitDate\n        in: path\n        description: commitDate\n        required: true\n        schema:\n          type: string\n        example: abc\n      - name: employeeId\n        in: path\n        description: employeeId\n        required: true\n        schema:\n          type: string\n        example: abc\n      - name: projectId\n        in: path\n        description: projectId\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: object\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      deprecated: false\n  /app/api/assignments/save:\n    post:\n      tags:\n      - assignment-resource\n      summary: save\n      operationId: saveUsingPOST_1\n      requestBody:\n        description: assignment\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Assignment'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Assignment'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: assignment\n  /app/api/assignments/update:\n    put:\n      tags:\n      - assignment-resource\n      summary: update\n      operationId: updateUsingPUT_1\n      requestBody:\n        description: assignment\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Assignment'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Assignment'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: assignment\n  /app/api/assignments/{employeeId}/{projectId}:\n    get:\n      tags:\n      - assignment-resource\n      summary: findAllByEmployeeIdAndManagerId\n      operationId: findAllByEmployeeIdAndManagerIdUsingGET\n      parameters:\n      - name: employeeId\n        in: path\n        description: employeeId\n        required: true\n        schema:\n          type: string\n        example: abc\n      - name: projectId\n        in: path\n        description: projectId\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DtoCollectionAssignment'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n  /app/api/assignments/{employeeId}/{projectId}/{commitDate}:\n    get:\n      tags:\n      - assignment-resource\n      summary: findById\n      operationId: findByIdUsingGET\n      parameters:\n      - name: commitDate\n        in: path\n        description: commitDate\n        required: true\n        schema:\n          type: string\n        example: abc\n      - name: employeeId\n        in: path\n        description: employeeId\n        required: true\n        schema:\n          type: string\n        example: abc\n      - name: projectId\n        in: path\n        description: projectId\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Assignment'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n    delete:\n      tags:\n      - assignment-resource\n      summary: deleteById\n      operationId: deleteByIdUsingDELETE_1\n      parameters:\n      - name: commitDate\n        in: path\n        description: commitDate\n        required: true\n        schema:\n          type: string\n        example: abc\n      - name: employeeId\n        in: path\n        description: employeeId\n        required: true\n        schema:\n          type: string\n        example: abc\n      - name: projectId\n        in: path\n        description: projectId\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: object\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      deprecated: false\n  /app/api/authenticate:\n    post:\n      tags:\n      - authentication-resource\n      summary: authenticate\n      operationId: authenticateUsingPOST\n      requestBody:\n        description: authenticationRequest\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthenticationRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AuthenticationResponse'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: authenticationRequest\n  /app/api/credentials:\n    get:\n      tags:\n      - credential-resource\n      summary: findAll\n      operationId: findAllUsingGET_2\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DtoCollectionCredential'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n    put:\n      tags:\n      - credential-resource\n      summary: update\n      operationId: updateUsingPUT_2\n      requestBody:\n        description: credential\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Credential'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Credential'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: credential\n    post:\n      tags:\n      - credential-resource\n      summary: save\n      operationId: saveUsingPOST_2\n      requestBody:\n        description: credential\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Credential'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Credential'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: credential\n    delete:\n      tags:\n      - credential-resource\n      summary: deleteById\n      operationId: deleteByIdUsingDELETE_2\n      parameters:\n      - name: credentialId\n        in: query\n        description: credentialId\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: boolean\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      deprecated: false\n  /app/api/credentials/delete:\n    delete:\n      tags:\n      - credential-resource\n      summary: deleteById\n      operationId: deleteByIdUsingDELETE_3\n      parameters:\n      - name: credentialId\n        in: query\n        description: credentialId\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: boolean\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      deprecated: false\n  /app/api/credentials/save:\n    post:\n      tags:\n      - credential-resource\n      summary: save\n      operationId: saveUsingPOST_3\n      requestBody:\n        description: credential\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Credential'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Credential'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: credential\n  /app/api/credentials/update:\n    put:\n      tags:\n      - credential-resource\n      summary: update\n      operationId: updateUsingPUT_3\n      requestBody:\n        description: credential\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Credential'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Credential'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: credential\n  /app/api/credentials/username/{username}:\n    get:\n      tags:\n      - credential-resource\n      summary: findByUsername\n      operationId: findByUsernameUsingGET\n      parameters:\n      - name: username\n        in: path\n        description: username\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Credential'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n    delete:\n      tags:\n      - credential-resource\n      summary: deleteByUsername\n      operationId: deleteByUsernameUsingDELETE\n      parameters:\n      - name: username\n        in: path\n        description: username\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: boolean\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      deprecated: false\n  /app/api/credentials/{id}:\n    get:\n      tags:\n      - credential-resource\n      summary: findById\n      operationId: findByIdUsingGET_1\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Credential'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n  /app/api/departments:\n    get:\n      tags:\n      - department-resource\n      summary: findAll\n      operationId: findAllUsingGET_4\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DtoCollectionDepartment'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n    put:\n      tags:\n      - department-resource\n      summary: update\n      operationId: updateUsingPUT_4\n      requestBody:\n        description: department\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Department'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Department'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: department\n    post:\n      tags:\n      - department-resource\n      summary: save\n      operationId: saveUsingPOST_4\n      requestBody:\n        description: department\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Department'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Department'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: department\n    delete:\n      tags:\n      - department-resource\n      summary: deleteById\n      operationId: deleteByIdUsingDELETE_4\n      parameters:\n      - name: departmentId\n        in: query\n        description: departmentId\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: boolean\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      deprecated: false\n  /app/api/departments/delete:\n    delete:\n      tags:\n      - department-resource\n      summary: deleteById\n      operationId: deleteByIdUsingDELETE_5\n      parameters:\n      - name: departmentId\n        in: query\n        description: departmentId\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: boolean\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      deprecated: false\n  /app/api/departments/save:\n    post:\n      tags:\n      - department-resource\n      summary: save\n      operationId: saveUsingPOST_5\n      requestBody:\n        description: department\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Department'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Department'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: department\n  /app/api/departments/update:\n    put:\n      tags:\n      - department-resource\n      summary: update\n      operationId: updateUsingPUT_5\n      requestBody:\n        description: department\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Department'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Department'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: department\n  /app/api/departments/{id}:\n    get:\n      tags:\n      - department-resource\n      summary: findById\n      operationId: findByIdUsingGET_2\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Department'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n  /app/api/employees:\n    get:\n      tags:\n      - employee-resource\n      summary: findAll\n      operationId: findAllUsingGET_6\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DtoCollectionEmployee'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n    put:\n      tags:\n      - employee-resource\n      summary: update\n      operationId: updateUsingPUT_6\n      requestBody:\n        description: employee\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Employee'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Employee'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: employee\n    post:\n      tags:\n      - employee-resource\n      summary: save\n      operationId: saveUsingPOST_6\n      requestBody:\n        description: employee\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Employee'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Employee'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: employee\n    delete:\n      tags:\n      - employee-resource\n      summary: deleteById\n      operationId: deleteByIdUsingDELETE_6\n      parameters:\n      - name: employeeId\n        in: query\n        description: employeeId\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: boolean\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      deprecated: false\n  /app/api/employees/data/department/{departmentId}:\n    get:\n      tags:\n      - employee-resource\n      summary: findByDepartmentId\n      operationId: findByDepartmentIdUsingGET\n      parameters:\n      - name: departmentId\n        in: path\n        description: departmentId\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DtoCollectionEmployee'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n  /app/api/employees/data/employee-project-data/{employeeId}:\n    get:\n      tags:\n      - employee-resource\n      summary: findByEmployeeProjectDataEmployeeId\n      operationId: findByEmployeeProjectDataEmployeeIdUsingGET\n      parameters:\n      - name: employeeId\n        in: path\n        description: employeeId\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DtoCollectionEmployeeProjectData'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n  /app/api/employees/data/manager-project-data/{employeeId}:\n    get:\n      tags:\n      - employee-resource\n      summary: findManagerProjectDataByEmployeeId\n      operationId: findManagerProjectDataByEmployeeIdUsingGET\n      parameters:\n      - name: employeeId\n        in: path\n        description: employeeId\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DtoCollectionManagerProjectData'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n  /app/api/employees/delete:\n    delete:\n      tags:\n      - employee-resource\n      summary: deleteById\n      operationId: deleteByIdUsingDELETE_7\n      parameters:\n      - name: employeeId\n        in: query\n        description: employeeId\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: boolean\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      deprecated: false\n  /app/api/employees/save:\n    post:\n      tags:\n      - employee-resource\n      summary: save\n      operationId: saveUsingPOST_7\n      requestBody:\n        description: employee\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Employee'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Employee'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: employee\n  /app/api/employees/update:\n    put:\n      tags:\n      - employee-resource\n      summary: update\n      operationId: updateUsingPUT_7\n      requestBody:\n        description: employee\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Employee'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Employee'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: employee\n  /app/api/employees/username/{username}:\n    get:\n      tags:\n      - employee-resource\n      summary: findByUsername\n      operationId: findByUsernameUsingGET_1\n      parameters:\n      - name: username\n        in: path\n        description: username\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Employee'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n    delete:\n      tags:\n      - employee-resource\n      summary: deleteByUsername\n      operationId: deleteByUsernameUsingDELETE_1\n      parameters:\n      - name: username\n        in: path\n        description: username\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: boolean\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      deprecated: false\n  /app/api/employees/{id}:\n    get:\n      tags:\n      - employee-resource\n      summary: findById\n      operationId: findByIdUsingGET_3\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Employee'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n  /app/api/locations:\n    get:\n      tags:\n      - location-resource\n      summary: findAll\n      operationId: findAllUsingGET_8\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DtoCollectionLocation'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n    put:\n      tags:\n      - location-resource\n      summary: update\n      operationId: updateUsingPUT_8\n      requestBody:\n        description: location\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Location'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Location'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: location\n    post:\n      tags:\n      - location-resource\n      summary: save\n      operationId: saveUsingPOST_8\n      requestBody:\n        description: location\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Location'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Location'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: location\n    delete:\n      tags:\n      - location-resource\n      summary: deleteById\n      operationId: deleteByIdUsingDELETE_8\n      parameters:\n      - name: locationId\n        in: query\n        description: locationId\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content: {}\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      deprecated: false\n  /app/api/locations/delete:\n    delete:\n      tags:\n      - location-resource\n      summary: deleteById\n      operationId: deleteByIdUsingDELETE_9\n      parameters:\n      - name: locationId\n        in: query\n        description: locationId\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content: {}\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      deprecated: false\n  /app/api/locations/save:\n    post:\n      tags:\n      - location-resource\n      summary: save\n      operationId: saveUsingPOST_9\n      requestBody:\n        description: location\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Location'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Location'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: location\n  /app/api/locations/update:\n    put:\n      tags:\n      - location-resource\n      summary: update\n      operationId: updateUsingPUT_9\n      requestBody:\n        description: location\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Location'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Location'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: location\n  /app/api/locations/{id}:\n    get:\n      tags:\n      - location-resource\n      summary: findById\n      operationId: findByIdUsingGET_4\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Location'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n  /app/api/projects:\n    get:\n      tags:\n      - project-resource\n      summary: findAll\n      operationId: findAllUsingGET_10\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DtoCollectionProject'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n    put:\n      tags:\n      - project-resource\n      summary: update\n      operationId: updateUsingPUT_10\n      requestBody:\n        description: project\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Project'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Project'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: project\n    post:\n      tags:\n      - project-resource\n      summary: save\n      operationId: saveUsingPOST_10\n      requestBody:\n        description: project\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Project'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Project'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: project\n    delete:\n      tags:\n      - project-resource\n      summary: deleteById\n      operationId: deleteByIdUsingDELETE_10\n      parameters:\n      - name: projectId\n        in: query\n        description: projectId\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content: {}\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      deprecated: false\n  /app/api/projects/delete:\n    delete:\n      tags:\n      - project-resource\n      summary: deleteById\n      operationId: deleteByIdUsingDELETE_11\n      parameters:\n      - name: projectId\n        in: query\n        description: projectId\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content: {}\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      deprecated: false\n  /app/api/projects/save:\n    post:\n      tags:\n      - project-resource\n      summary: save\n      operationId: saveUsingPOST_11\n      requestBody:\n        description: project\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Project'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Project'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: project\n  /app/api/projects/update:\n    put:\n      tags:\n      - project-resource\n      summary: update\n      operationId: updateUsingPUT_11\n      requestBody:\n        description: project\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Project'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Project'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: project\n  /app/api/projects/{id}:\n    get:\n      tags:\n      - project-resource\n      summary: findById\n      operationId: findByIdUsingGET_5\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Project'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\ncomponents:\n  schemas:\n    Assignment:\n      title: Assignment\n      type: object\n      properties:\n        commitDate:\n          type: string\n          example: dd-MM-yyyyHH:mm:ss\n        commitEmpDesc:\n          type: string\n        commitMgrDesc:\n          type: string\n        employee:\n          $ref: '#/components/schemas/Employee'\n        employeeId:\n          type: integer\n          format: int32\n        project:\n          $ref: '#/components/schemas/Project'\n        projectId:\n          type: integer\n          format: int32\n    AuthenticationRequest:\n      title: AuthenticationRequest\n      type: object\n      properties:\n        password:\n          type: string\n        username:\n          type: string\n    AuthenticationResponse:\n      title: AuthenticationResponse\n      type: object\n      properties:\n        isEligible:\n          type: boolean\n        username:\n          type: string\n    Credential:\n      title: Credential\n      type: object\n      properties:\n        credentialId:\n          type: integer\n          format: int32\n        enabled:\n          type: boolean\n        password:\n          type: string\n        role:\n          type: string\n        username:\n          type: string\n    Department:\n      title: Department\n      type: object\n      properties:\n        departmentId:\n          type: integer\n          format: int32\n        departmentName:\n          type: string\n        location:\n          $ref: '#/components/schemas/Location'\n    DtoCollectionAssignment:\n      title: DtoCollectionAssignment\n      type: object\n      properties:\n        collection:\n          type: array\n          items:\n            $ref: '#/components/schemas/Assignment'\n    DtoCollectionCredential:\n      title: DtoCollectionCredential\n      type: object\n      properties:\n        collection:\n          type: array\n          items:\n            $ref: '#/components/schemas/Credential'\n    DtoCollectionDepartment:\n      title: DtoCollectionDepartment\n      type: object\n      properties:\n        collection:\n          type: array\n          items:\n            $ref: '#/components/schemas/Department'\n    DtoCollectionEmployeeProjectData:\n      title: DtoCollectionEmployeeProjectData\n      type: object\n      properties:\n        collection:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmployeeProjectData'\n    DtoCollectionEmployee:\n      title: DtoCollectionEmployee\n      type: object\n      properties:\n        collection:\n          type: array\n          items:\n            $ref: '#/components/schemas/Employee'\n    DtoCollectionLocation:\n      title: DtoCollectionLocation\n      type: object\n      properties:\n        collection:\n          type: array\n          items:\n            $ref: '#/components/schemas/Location'\n    DtoCollectionManagerProjectData:\n      title: DtoCollectionManagerProjectData\n      type: object\n      properties:\n        collection:\n          type: array\n          items:\n            $ref: '#/components/schemas/ManagerProjectData'\n    DtoCollectionProjectCommit:\n      title: DtoCollectionProjectCommit\n      type: object\n      properties:\n        collection:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProjectCommit'\n    DtoCollectionProject:\n      title: DtoCollectionProject\n      type: object\n      properties:\n        collection:\n          type: array\n          items:\n            $ref: '#/components/schemas/Project'\n    Employee:\n      title: Employee\n      type: object\n      properties:\n        credential:\n          $ref: '#/components/schemas/Credential'\n        department:\n          $ref: '#/components/schemas/Department'\n        email:\n          type: string\n        employeeId:\n          type: integer\n          format: int32\n        firstName:\n          type: string\n        hiredate:\n          type: string\n          example: dd-MM-yyyy\n        job:\n          type: string\n        lastName:\n          type: string\n        phone:\n          type: string\n        salary:\n          type: number\n          format: double\n    EmployeeProjectData:\n      title: EmployeeProjectData\n      type: object\n      properties:\n        endDate:\n          type: string\n        projectId:\n          type: integer\n          format: int32\n        startDate:\n          type: string\n        status:\n          type: string\n        title:\n          type: string\n    Location:\n      title: Location\n      type: object\n      properties:\n        adr:\n          type: string\n        city:\n          type: string\n        locationId:\n          type: integer\n          format: int32\n        postalCode:\n          type: string\n    ManagerProjectData:\n      title: ManagerProjectData\n      type: object\n      properties:\n        endDate:\n          type: string\n        projectId:\n          type: integer\n          format: int32\n        startDate:\n          type: string\n        status:\n          type: string\n        title:\n          type: string\n    Project:\n      title: Project\n      type: object\n      properties:\n        endDate:\n          type: string\n          example: dd-MM-yyyy\n        projectId:\n          type: integer\n          format: int32\n        startDate:\n          type: string\n          example: dd-MM-yyyy\n        status:\n          type: string\n        title:\n          type: string\n    ProjectCommit:\n      title: ProjectCommit\n      type: object\n      properties:\n        commitDate:\n          type: string\n          format: date-time\n        commitEmpDesc:\n          type: string\n        commitMgrDesc:\n          type: string\n        employeeId:\n          type: integer\n          format: int32\n        firstName:\n          type: string\n        lastName:\n          type: string\n        projectId:\n          type: integer\n          format: int32\n",
			"canonicalURL": "/github.com/codingsoo/REST_Go@ed67007a3d9cc852de4c47d395991f602a381c67/-/blob/services/jdk11/project-tracking-system/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/codingsoo/REST_Go/blob/ed67007a3d9cc852de4c47d395991f602a381c67/services/jdk11/project-tracking-system/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/app/api/projects\": get: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}