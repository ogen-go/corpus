{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kyma-incubator/varkes"
		},
		"file": {
			"name": "pets_openapi.yaml",
			"size": 0,
			"path": "modules/openapi-mock/src/test/pets_openapi.yaml",
			"byteSize": 12774,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  description: A sample API that uses a petstore as an example to demonstrate features in\n    the swagger-2.0 specification\n  termsOfService: http://helloreverb.com/terms/\n  contact:\n    name: Wordnik API Team\n    email: foo@example.com\n    url: http://madskristensen.net\n  license:\n    name: MIT\n    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT\nservers:\n  - url: \"{protocol}://{hostName}/{basePath}\"\n    variables:\n      protocol:\n        enum:\n          - http\n          - https\n        default: http\n      hostName:\n        default: company.com\n      basePath:\n        default: wrong\nsecurity:\n  - petStoreBasic: []\n    petStoreApiKey: []\n  - petStoreOAuth:\n      - view\npaths:\n  /pets:\n    get:\n      description: Returns all pets, optionally filtered by one or more criteria\n      operationId: findPets\n      security:\n        []\n      parameters:\n        - name: Tags\n          in: query\n          description: Filters pets by one or more tags\n          required: false\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n        - name: Type\n          in: query\n          description: Filters pets by type (dog, cat, or bird)\n          required: true\n          schema:\n            type: string\n        - name: Age\n          in: query\n          description: Filters pets by age\n          required: false\n          schema:\n            type: integer\n        - name: DOB\n          in: query\n          description: Filters pets by date of birth\n          required: false\n          schema:\n            type: string\n            format: date\n        - name: Address.City\n          in: query\n          description: Filters pets by city\n          required: false\n          schema:\n            type: string\n        - name: Address.State\n          in: query\n          description: Filters pets by state\n          required: false\n          schema:\n            type: string\n        - name: Address.ZipCode\n          in: query\n          description: Filters pets by zip code\n          required: false\n          schema:\n            type: integer\n        - name: Vet.Name\n          in: query\n          description: Filters pets by veterinarian name\n          required: false\n          schema:\n            type: string\n        - name: Vet.Address.City\n          in: query\n          description: Filters pets by veterinarian city\n          required: false\n          schema:\n            type: string\n        - name: Vet.Address.State\n          in: query\n          description: Filters pets by veterinarian state\n          required: false\n          schema:\n            type: string\n        - name: Vet.Address.ZipCode\n          in: query\n          description: Filters pets by veterinarian zip code\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: pet response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/pet\"\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/pet\"\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/pet\"\n            text/html:\n              schema:\n                type: string\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/error\"\n            text/html:\n              schema:\n                type: string\n    post:\n      description: Creates a new pet in the store.\n      operationId: addPet\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/pet\"\n        description: Pet to add to the store\n        required: true\n      responses:\n        \"201\":\n          description: pet response\n          headers:\n            Location:\n              description: Swagger-Express-Middleware will automatically set this header\n                appropriately\n              schema:\n                type: string\n        \"409\":\n          description: new pet conflicts with an existing pet (i.e. they have the same name)\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n  \"/pets/{PetName}\":\n    parameters:\n      - $ref: \"#/components/parameters/petName\"\n\n    get:\n      description: Returns a pet by name\n      operationId: findPetByName\n      responses:\n        \"200\":\n          description: pet response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/pet\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/pet\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/pet\"\n            text/html:\n              schema:\n                type: string\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/error\"\n            text/html:\n              schema:\n                type: string\n\n    patch:\n      description: Updates a pet by name\n      security:\n        - petStoreBasic: []\n          petStoreApiKey: []\n        - petStoreOAuth:\n            - view\n            - edit\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/pet\"\n        description: The updated pet info\n        required: true\n      responses:\n        \"200\":\n          description: pet response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/pet\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/pet\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/pet\"\n            text/html:\n              schema:\n                type: string\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/error\"\n            text/html:\n              schema:\n                type: string\n\n    delete:\n      description: deletes a single pet based on the name supplied\n      operationId: deletePet\n      security:\n        - petStoreBasic: []\n          petStoreApiKey: []\n        - petStoreOAuth:\n            - view\n            - edit\n            - delete\n      responses:\n        \"204\":\n          description: pet deleted\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error\"\n\n  \"/pets/{PetName}/photos\":\n    parameters:\n      - $ref: \"#/components/parameters/petName\"\n\n    get:\n      description: get a list of the photos for a pet\n      responses:\n        \"200\":\n          description: the list of photos\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  properties:\n                    ID:\n                      type: integer\n                      format: int32\n                    Label:\n                      type: string\n                    Description:\n                      type: string\n                    Photo:\n                      description: information about the photo (size, file name, etc.)\n\n    post:\n      description: adds a new pet photo\n      security:\n        - petStoreBasic: []\n          petStoreApiKey: []\n        - petStoreOAuth:\n            - view\n            - edit\n            - create\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                ID:\n                  description: the photo ID (generated automatically)\n                  type: integer\n                  format: int32\n                  minimum: 1\n                Label:\n                  description: a label for the photo\n                  type: string\n                  minLength: 1\n                Description:\n                  description: an optional description of the photo\n                  type: string\n                Photo:\n                  description: the pet photo\n                  type: string\n                  minLength: 1\n                  maxLength: 5000000\n                  format: binary\n              required:\n                - Label\n                - Photo\n      responses:\n        \"201\":\n          description: the photo was saved\n          headers:\n            Location:\n              description: Swagger-Express-Middleware will automatically set this header\n                appropriately\n              schema:\n                type: string\n\n  \"/pets/{PetName}/photos/{ID}\":\n    parameters:\n      - $ref: \"#/components/parameters/petName\"\n      - name: ID\n        in: path\n        description: id of the photo\n        required: true\n        schema:\n          type: integer\n          format: int32\n\n    get:\n      description: gets a pet photo\n      responses:\n        \"200\":\n          description: the photo blob\n          content:\n            application/json:\n              schema:\n                type: string\n                format: binary\n\n    delete:\n      description: deletes a pet photo\n      security:\n        - petStoreBasic: []\n          petStoreApiKey: []\n        - petStoreOAuth:\n            - view\n            - edit\n            - delete\n      responses:\n        \"204\":\n          description: the photo was deleted\n\ncomponents:\n  parameters:\n    petName:\n      name: PetName\n      in: path\n      description: name of the pet\n      required: true\n      schema:\n        type: string\n\n  securitySchemes:\n    petStoreBasic:\n      type: http\n      description: basic HTTP auth\n      scheme: basic\n\n    petStoreApiKey:\n      type: apiKey\n      name: petStoreKey\n      in: header\n      description: requires an API key header\n\n    petStoreOAuth:\n      type: oauth2\n      description: OAuth2 security\n      flows:\n        password:\n          tokenUrl: http://company.com/authorize\n          scopes:\n            view: read only\n            edit: can edit pets\n            create: can create new pets\n            delete: can delete pets\n\n  schemas:\n    pet:\n      required:\n        - Name\n        - Type\n      properties:\n        Name:\n          type: string\n          minLength: 2\n          pattern: ^[a-zA-Z0-9- ]+$\n        Age:\n          type: integer\n        DOB:\n          type: string\n          format: date\n        Type:\n          type: string\n          enum:\n            - cat\n            - dog\n            - bird\n        Address:\n          $ref: \"#/components/schemas/address\"\n        Vet:\n          $ref: \"#/components/schemas/veterinarian\"\n        Tags:\n          type: array\n          items:\n            type: string\n            minLength: 1\n\n    veterinarian:\n      required:\n        - Name\n      properties:\n        Name:\n          type: string\n          minLength: 1\n        Address:\n          $ref: \"#/components/schemas/address\"\n\n    address:\n      required:\n        - Street\n        - City\n        - State\n        - ZipCode\n      properties:\n        Street:\n          type: string\n          minLength: 1\n        City:\n          type: string\n          minLength: 1\n        State:\n          type: string\n          minLength: 2\n          maxLength: 2\n          pattern: ^[A-Z]+$\n        ZipCode:\n          type: integer\n          minimum: 10000\n          maximum: 99999\n\n    error:\n      required:\n        - Code\n        - Message\n      properties:\n        Code:\n          type: integer\n          format: int32\n        Message:\n          type: string\n        Pet:\n          $ref: \"#/components/schemas/pet\"",
			"canonicalURL": "/github.com/kyma-incubator/varkes@811fec2004f72909dde1faf967a630cbe3d3147b/-/blob/modules/openapi-mock/src/test/pets_openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/kyma-incubator/varkes/blob/811fec2004f72909dde1faf967a630cbe3d3147b/modules/openapi-mock/src/test/pets_openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/pets/{PetName}\": get: security: security \"petStoreOAuth\" (index 2): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}