{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/21hack02win/nascalay-backend"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "docs/openapi.yml",
			"byteSize": 19230,
			"content": "openapi: 3.0.3\ninfo:\n  title: nascalay\n  version: '1.0'\n  description: nascalay v1 API\n  contact:\n    name: 21hack02win\n    url: 'https://github.com/21hack02win'\nservers:\n  - url: 'https://nascalay-backend.trap.games'\n  - url: 'https://api.nascalay.trasta.dev'\npaths:\n  /rooms/new:\n    post:\n      summary: createRoom\n      responses:\n        '200':\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Room'\n      operationId: createRoom\n      parameters: []\n      description: 新規ルーム作成\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateRoomRequest'\n      tags:\n        - room\n  /rooms/join:\n    post:\n      summary: joinRoom\n      operationId: joinRoom\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Room'\n      description: ルームに参加\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JoinRoomRequest'\n      tags:\n        - room\n  '/rooms/{roomId}':\n    parameters:\n      - $ref: '#/components/parameters/roomIdInPath'\n    get:\n      summary: getRoom\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Room'\n      operationId: getRoom\n      description: ルーム情報を取得\n      tags:\n        - room\n  /ws:\n    get:\n      summary: getWs\n      parameters:\n        - $ref: '#/components/parameters/userIdInQuery'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WsSendMessage'\n      operationId: ws\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WsReceiveMessage'\n        description: ''\n      description: |-\n        Websocketを送受信する\n\n        {\n            type: tag,\n            \"body\": {\n                \"------\"\n            }\n        }\n      tags:\n        - ws\n  /ping:\n    get:\n      summary: ping\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n      operationId: ping\n      description: 疎通確認\n      tags:\n        - ping\ncomponents:\n  schemas:\n    Room:\n      title: Room\n      type: object\n      description: ルーム情報\n      example:\n        roomId: Nao340bzc0\n        capacity: 0\n        userId: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        hostId: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        members:\n          - userId: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n            username: John\n            avatar:\n              type: 5\n              color: '#ffffff'\n      properties:\n        roomId:\n          type: string\n          pattern: '^[A-Za-z0-9]{10}$'\n          description: ルームID\n        capacity:\n          type: integer\n          description: ルームの最大収容人数\n        userId:\n          type: string\n          format: uuid\n          x-go-type: uuid.UUID\n          description: ユーザーUUID\n        hostId:\n          type: string\n          format: uuid\n          x-go-type: uuid.UUID\n          description: ホストのユーザーUUID\n        members:\n          type: array\n          description: 現在ルームにいるメンバーの情報\n          items:\n            $ref: '#/components/schemas/User'\n      required:\n        - roomId\n        - capacity\n        - userId\n        - hostId\n        - members\n    User:\n      title: User\n      type: object\n      description: ユーザー情報\n      example:\n        userId: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        username: John\n        avatar:\n          type: 5\n          color: '#ffffff'\n      properties:\n        userId:\n          type: string\n          format: uuid\n          x-go-type: uuid.UUID\n          description: ユーザーUUID\n        username:\n          type: string\n          description: ユーザー名\n        avatar:\n          $ref: '#/components/schemas/Avatar'\n      required:\n        - userId\n        - username\n        - avatar\n    Avatar:\n      title: Avatar\n      type: object\n      description: アバター情報\n      example:\n        type: 5\n        color: '#ffffff'\n      properties:\n        type:\n          type: integer\n          description: アバターの種類\n        color:\n          type: string\n          description: アバターの背景色\n          pattern: '^#[a-fA-F0-9]{6}'\n      required:\n        - type\n        - color\n    CreateRoomRequest:\n      title: CreateRoomRequest\n      type: object\n      description: 新規ルーム作成リクエスト\n      example:\n        username: John\n        avatar:\n          type: 5\n          color: '#ffffff'\n        capacity: 4\n      properties:\n        username:\n          type: string\n          description: ユーザー名\n        avatar:\n          $ref: '#/components/schemas/Avatar'\n        capacity:\n          type: integer\n          description: ルームの最大収容人数\n      required:\n        - username\n        - avatar\n        - capacity\n    JoinRoomRequest:\n      title: JoinRoomRequest\n      type: object\n      description: ルーム参加リクエスト\n      example:\n        roomId: Nao340bzc0\n        username: John\n        avatar:\n          type: 5\n          color: '#ffffff'\n      properties:\n        roomId:\n          type: string\n          pattern: '^[A-Za-z0-9]{10}$'\n          description: ルームID\n        username:\n          type: string\n          description: ユーザー名\n        avatar:\n          $ref: '#/components/schemas/Avatar'\n      required:\n        - roomId\n        - username\n        - avatar\n    Canvas:\n      title: Canvas\n      type: object\n      description: ユーザーが描画するキャンバスの分割情報・描画位置\n      example:\n        boardName: 5×5\n        areaId: 5\n      properties:\n        boardName:\n          type: string\n          description: ボード名\n        areaId:\n          type: integer\n          description: ボードの座標ID\n      required:\n        - boardName\n        - areaId\n    WsEvent:\n      title: WsEvent\n      type: string\n      description: Websocketイベントのリスト\n      enum:\n        - ROOM_NEW_MEMBER\n        - ROOM_SET_OPTION\n        - ROOM_UPDATE_OPTION\n        - REQUEST_GAME_START\n        - GAME_START\n        - ODAI_READY\n        - ODAI_CANCEL\n        - ODAI_INPUT\n        - ODAI_FINISH\n        - ODAI_SEND\n        - DRAW_START\n        - DRAW_READY\n        - DRAW_CANCEL\n        - DRAW_INPUT\n        - DRAW_FINISH\n        - DRAW_SEND\n        - ANSWER_START\n        - ANSWER_READY\n        - ANSWER_CANCEL\n        - ANSWER_INPUT\n        - ANSWER_FINISH\n        - ANSWER_SEND\n        - SHOW_START\n        - SHOW_NEXT\n        - SHOW_ODAI\n        - SHOW_CANVAS\n        - SHOW_ANSWER\n        - RETURN_ROOM\n        - NEXT_ROOM\n        - CHANGE_HOST\n        - BREAK_ROOM\n        - WELCOME_NEW_CLIENT\n        - ERROR\n    WsReceiveMessage:\n      title: WsReceiveMessage\n      description: WebSocketで クライアントからサーバーへ送信する情報\n      allOf:\n        - properties:\n            type:\n              $ref: '#/components/schemas/WsEvent'\n            body:\n              anyOf:\n                - $ref: '#/components/schemas/WsRoomSetOptionEventBody'\n                - $ref: '#/components/schemas/WsOdaiSendEventBody'\n                - $ref: '#/components/schemas/WsDrawSendEventBody'\n                - $ref: '#/components/schemas/WsAnswerSendEventBody'\n                - type: object\n          required:\n            - type\n            - body\n      type: object\n    WsSendMessage:\n      title: WsSendMessage\n      description: WebSocketで サーバーからクライアントへ送信する情報\n      allOf:\n        - properties:\n            type:\n              $ref: '#/components/schemas/WsEvent'\n            body:\n              oneOf:\n                - $ref: '#/components/schemas/WsWelcomeNewClientBody'\n                - $ref: '#/components/schemas/WsErrorBody'\n                - $ref: '#/components/schemas/WsRoomNewMemberEventBody'\n                - $ref: '#/components/schemas/WsRoomUpdateOptionEventBody'\n                - $ref: '#/components/schemas/WsGameStartEventBody'\n                - $ref: '#/components/schemas/WsOdaiInputEventBody'\n                - $ref: '#/components/schemas/WsDrawStartEventBody'\n                - $ref: '#/components/schemas/WsDrawInputEventBody'\n                - $ref: '#/components/schemas/WsAnswerStartEventBody'\n                - $ref: '#/components/schemas/WsAnswerInputEventBody'\n                - $ref: '#/components/schemas/WsShowOdaiEventBody'\n                - $ref: '#/components/schemas/WsShowCanvasEventBody'\n                - $ref: '#/components/schemas/WsShowAnswerEventBody'\n                - $ref: '#/components/schemas/WsChangeHostEventBody'\n                - type: object\n          required:\n            - type\n            - body\n      type: object\n    WsNextShowStatus:\n      title: WsNextWsEvent\n      type: string\n      description: 次のWebsocketイベントのリスト\n      enum:\n        - odai\n        - canvas\n        - answer\n        - end\n    WsWelcomeNewClientBody:\n      title: WsWelcomeNewClientBody\n      type: object\n      description: 接続時に送信する (サーバー -\u003e 新規クライアント)\n      example:\n        content: Welcome to nascalay-backend!\n      properties:\n        content:\n          type: string\n          description: 接続確認メッセージ\n      required:\n        - content\n    WsErrorBody:\n      title: WsErrorBody\n      type: object\n      description: エラー用ボディ\n      example:\n        content: connection failed\n      properties:\n        content:\n          type: string\n          description: エラーの内容\n      required:\n        - content\n    WsRoomNewMemberEventBody:\n      title: WsRoomNewMemberEventBody\n      type: object\n      description: 部屋に追加のメンバーが来たことを通知する (サーバー -\u003e ルーム全員)\n      example:\n        capacity: 0\n        hostId: 70e3fb2d-1cb6-4dbc-ab8d-fa7209aca5dd\n        members:\n          - userId: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n            username: John\n            avatar:\n              type: 5\n              color: '#ffffff'\n      properties:\n        capacity:\n          type: integer\n          description: ルームの最大収容人数\n        hostId:\n          type: string\n          format: uuid\n          x-go-type: uuid.UUID\n          description: ホストのユーザーUUID\n        members:\n          type: array\n          description: 現在ルームにいるメンバーの情報\n          items:\n            $ref: '#/components/schemas/User'\n      required:\n        - capacity\n        - hostId\n        - members\n    WsRoomSetOptionEventBody:\n      title: WsRoomSetOptionEventBody\n      type: object\n      description: ゲームのオプションを設定する (ホスト -\u003e サーバー)\n      example:\n        timeLimit: 20\n      properties:\n        timeLimit:\n          type: integer\n          description: 制限時間\n    WsRoomUpdateOptionEventBody:\n      title: WsRoomUpdateOptionEventBody\n      type: object\n      example:\n        timeLimit: 20\n      properties:\n        timeLimit:\n          type: integer\n          description: 制限時間\n      description: ゲームの設定を更新する (サーバー -\u003e ルーム全員)\n    WsGameStartEventBody:\n      title: WsGameStartEventBody\n      type: object\n      description: ゲームの開始を通知する (サーバー -\u003e ルーム全員)\n      example:\n        odaiExample: ねこのおばけ\n        timeLimit: 40\n      properties:\n        odaiExample:\n          type: string\n          description: お題のサジェスト\n        timeLimit:\n          type: integer\n          description: 制限時間\n      required:\n        - odaiExample\n        - timeLimit\n    WsOdaiInputEventBody:\n      title: WsOdaiInputEventBody\n      type: object\n      example:\n        ready: 2\n      description: お題入力が完了した人数を送信する (サーバー -\u003e ルームの各員)\n      properties:\n        ready:\n          type: integer\n          description: お題入力が完了した人数\n      required:\n        - ready\n    WsOdaiSendEventBody:\n      title: WsOdaiSendEventBody\n      type: object\n      example:\n        odai: ねこのおばけ\n      description: お題を送信する (ルームの各員 -\u003e サーバー)\n      properties:\n        odai:\n          type: string\n          description: お題\n      required:\n        - odai\n    WsDrawStartEventBody:\n      title: WsDrawStartEventBody\n      type: object\n      example:\n        timeLimit: 40\n        canvas:\n          boardName: 5x5\n          areaId: 5\n        img: iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKAQAAAAClSfIQAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgA...\n        odai: ねこのおばけ\n        drawPhaseNum: 3\n        allDrawPhaseNum: 10\n        drawnArea:\n          - 3\n          - 1\n          - 5\n      description: キャンバス情報とお題を送信する (サーバー -\u003e ルーム各員)\n      properties:\n        timeLimit:\n          type: integer\n          description: 制限時間\n        canvas:\n          $ref: '#/components/schemas/Canvas'\n        img:\n          type: string\n          description: 画像ID\n        odai:\n          type: string\n          description: お題\n        drawPhaseNum:\n          type: integer\n          description: 現在のDRAWフェーズの番号\n        allDrawPhaseNum:\n          type: integer\n          description: 全DRAWフェーズ数\n        drawnArea:\n          type: array\n          description: 埋まっているエリアの一覧\n          items:\n            type: integer\n      required:\n        - timeLimit\n        - canvas\n        - img\n        - odai\n        - drawPhaseNum\n        - allDrawPhaseNum\n        - drawnArea\n    WsDrawInputEventBody:\n      title: WsDrawInputEventBody\n      type: object\n      example:\n        ready: 2\n      description: 絵を描き終えた人数を送信する (サーバー -\u003e ルームの各員)\n      properties:\n        ready:\n          type: integer\n          description: 絵を描き終えた人数\n      required:\n        - ready\n    WsDrawSendEventBody:\n      title: WsDrawSendEventBody\n      type: object\n      example:\n        img: iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKAQAAAAClSfIQAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgA...\n      description: |-\n        絵を送信する (ルームの各員 -\u003e サーバー)\n\n        -\u003e (DRAWフェーズが終わってなかったら) また，DRAW_START が飛んでくる\n      properties:\n        img:\n          type: string\n          description: 画像ID\n      required:\n        - img\n    WsAnswerStartEventBody:\n      title: WsAnswerStartEventBody\n      type: object\n      description: 絵が飛んできて，回答する (サーバー -\u003e ルーム各員)\n      example:\n        timeLimit: 40\n        img: iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKAQAAAAClSfIQAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgA...\n      properties:\n        timeLimit:\n          type: integer\n          description: 制限時間\n        img:\n          type: string\n          description: 画像ID\n      required:\n        - timeLimit\n        - img\n    WsAnswerInputEventBody:\n      title: WsAnswerInputEventBody\n      type: object\n      example:\n        ready: 2\n      description: 回答の入力が完了した人数を送信する (サーバー -\u003e ルームの各員)\n      properties:\n        ready:\n          type: integer\n          description: 回答の入力が完了した人数\n      required:\n        - ready\n    WsAnswerSendEventBody:\n      title: WsAnswerSendEventBody\n      type: object\n      description: 回答を送信する (ルームの各員 -\u003e サーバー)\n      example:\n        answer: ねこのおばけ\n      properties:\n        answer:\n          type: string\n          description: 回答\n      required:\n        - answer\n    WsShowOdaiEventBody:\n      title: WsShowOdaiEventBody\n      type: object\n      description: 最初のお題を受信する (サーバー -\u003e ルーム全員)\n      example:\n        odai: そうじきをかけるねこ\n        sender:\n          userId: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n          username: John\n          avatar:\n            type: 5\n            color: '#ffffff'\n        next: odai\n      properties:\n        odai:\n          type: string\n          description: お題\n        sender:\n          $ref: '#/components/schemas/User'\n        next:\n          $ref: '#/components/schemas/WsNextShowStatus'\n      required:\n        - odai\n        - sender\n        - next\n    WsShowCanvasEventBody:\n      title: WsShowCanvasEventBody\n      type: object\n      example:\n        img: iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKAQAAAAClSfIQAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgA...\n        next: odai\n      description: 次のキャンバスを受信する (サーバー -\u003e ルーム全員)\n      properties:\n        img:\n          type: string\n          description: 画像ID\n        next:\n          $ref: '#/components/schemas/WsNextShowStatus'\n      required:\n        - img\n        - next\n    WsShowAnswerEventBody:\n      title: WsShowAnswerEventBody\n      type: object\n      description: 最後の回答を受信する (サーバー -\u003e ルーム全員)\n      example:\n        answer: そうじきをかけるねこ\n        answerer:\n          userId: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n          username: John\n          avatar:\n            type: 5\n            color: '#ffffff'\n        next: odai\n      properties:\n        answer:\n          type: string\n          description: 回答\n        answerer:\n          $ref: '#/components/schemas/User'\n        next:\n          $ref: '#/components/schemas/WsNextShowStatus'\n      required:\n        - answer\n        - answerer\n        - next\n    WsChangeHostEventBody:\n      title: WsChangeHostEventBody\n      type: object\n      description: 最後の回答を受信する (サーバー -\u003e ルーム全員)\n      example:\n        hostId: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n      properties:\n        hostId:\n          type: string\n          format: uuid\n          description: ホストのユーザーUUID\n      required:\n        - hostId\n  parameters:\n    roomIdInPath:\n      name: roomId\n      in: path\n      required: true\n      schema:\n        type: string\n        pattern: '^[A-Za-z0-9]{10}$'\n        description: ルームID\n      description: ルームID\n    userIdInQuery:\n      name: user\n      in: query\n      required: true\n      schema:\n        type: string\n        format: uuid\n      description: ユーザーUUID\ntags:\n  - name: room\n    description: ルームAPI\n  - name: ws\n    description: WebsocketAPI\n  - name: ping\n    description: 疎通確認API\n",
			"canonicalURL": "/github.com/21hack02win/nascalay-backend@f6986c95ade81dad1fb48700973d02e478672799/-/blob/docs/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/21hack02win/nascalay-backend/blob/f6986c95ade81dad1fb48700973d02e478672799/docs/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/ws\": get: requestBody: contents: application/json: generate schema: allOf: field body: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}