{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/josille/apis-schemas"
		},
		"file": {
			"name": "Contentful-CDA.openapi_collection.yml",
			"size": 0,
			"path": "openAPI/Contentful-CDA.openapi_collection.yml",
			"byteSize": 31796,
			"content": "openapi: 3.0.0\ninfo:\n  title: CDA - Content Delivery API\n  description:  \u003e-\n      Contentful's Content Management API (CMA) helps you manage content in your\n      spaces. To learn more about how to model your content, read our modeling\n      guide.\n      \n\n      Note: You can use the CMA to deliver and manage content, but you shouldn't\n      use it to deliver large amounts of content and instead use the Content\n      Delivery API. The structure of responses from the CMA differs from the CDA\n      as GET responses retrieve the entirety of items (i.e. all localized and\n      unpublished content).\n  version: 1.0.0\nexternalDocs:\n  url: https://www.contentful.com/developers/docs/references/content-delivery-api/\nservers:\n  - url: https://cdn.contentful.com\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\ntags:\n  - name: Spaces\n  - name: Content Types\n  - name: Entries\n  - name: Assets\n  - name: Asset keys\n  - name: Locales\n  - name: Content tags\n  - name: Search\n  - name: Synchronization\npaths:\n  /spaces/{space_id}:\n    get:\n      tags:\n        - Spaces\n      summary: Get a space\n      operationId: Get a space\n      description: \u003e-\n        All content and assets in Contentful belong to a space. You will\n        generally have at least one space for a project, but use separate spaces\n        for testing or staging.\n\n\n        [https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/spaces](https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/spaces\n        \"https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/spaces\")\n\n\n        `\n\n        curl --include --request GET\n        https://cdn.contentful.com/spaces/{space_id}?access_token={access_token}\n\n        `\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space to use\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/content_types:\n    get:\n      tags:\n        - Content Types\n      summary: Get the content model of a space\n      operationId: Get the content model of a space\n      description: \u003e-\n        [https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-types/content-model](https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-types/content-model)\n\n\n        `\n\n        curl --include --request GET\n        https://cdn.contentful.com/spaces/{space_id}/environments/{environment_id}/content_types?access_token={access_token}\n\n        `\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space to use\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space environment to use\n          example: master\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/content_types/{content_type_id}:\n    get:\n      tags:\n        - Content Types\n      summary: Get a single content type\n      operationId: Get a single content type\n      description: \u003e-\n        [https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-types/content-type](https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-types/content-type)\n\n\n        `\n\n        curl --include --request GET\n        https://cdn.contentful.com/spaces/{space_id}/environments/{environment_id}/content_types/{content_type_id}?access_token={access_token}\n\n        `\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space to use\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space environment to use\n          example: master\n        - name: content_type_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: imageWithFocalPoint\n          example: imageWithFocalPoint\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/entries:\n    get:\n      tags:\n        - Entries\n      summary: Get all entries of a Space\n      operationId: Get all entries of a Space\n      description: \u003e-\n        https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/entries/entries-collection\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space to use\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/entries/{entry_id}:\n    get:\n      tags:\n        - Entries\n      summary: Get a single entry\n      operationId: Get a single entry\n      description: \u003e-\n        The include array is not applicable while retrieving a single entry.\n\n\n        [https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/entries/entry](https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/entries/entry)\n\n\n        `\n\n        curl --include --request GET\n        https://cdn.contentful.com/spaces/{space_id}/environments/{environment_id}/entries/{entry_id}?access_token={access_token}\n\n        `\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space to use\n          example: 5nvk6q4s3ttw\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space environment to use\n          example: master\n        - name: entry_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: 6Lng3TPchCEw9cGvDiYDHs\n          example: 34b0QSe0NSzPxnkRwmBfbr\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: \n              example:\n                metadata:\n                  tags: []\n                sys:\n                  space:\n                    sys:\n                      type: Link\n                      linkType: Space\n                      id: 5nvk6q4s3ttw\n                  id: 2coD0qbA6BPWoNFo75i87N\n                  type: Entry\n                  createdAt: '2021-10-21T07:32:43.986Z'\n                  updatedAt: '2021-10-21T07:32:43.986Z'\n                  environment:\n                    sys:\n                      id: master\n                      type: Link\n                      linkType: Environment\n                  revision: 1\n                  contentType:\n                    sys:\n                      type: Link\n                      linkType: ContentType\n                      id: allTypesTest\n                  locale: en\n                fields:\n                  textFieldShort: HERE a short field\n                  textFieldLong: HERE a long field\n                  textFieldList: value one\n                  numberInteger: 42\n                  dateTimeField: 2021-10-21T09:22+02:00\n                  locationField:\n                    lon: 13.08748\n                    lat: 52.77932\n                  mediaFieldSingle:\n                    sys:\n                      type: Link\n                      linkType: Asset\n                      id: 5WKt2xGG9IksoeaIjcCxjr\n                  mediaFieldMany:\n                    sys:\n                      type: Link\n                      linkType: Asset\n                      id: 5WKt2xGG9IksoeaIjcCxjr\n                  booleanField: true\n                  jsonField:\n                    hola: mundo\n                  referenceFieldOne:\n                    sys:\n                      type: Link\n                      linkType: Entry\n                      id: 1nKfhL9efcaZjGhxbMxpDV\n                  referenceFieldMany:\n                    - sys:\n                        type: Link\n                        linkType: Entry\n                        id: 7tfEnBqQNfodeEyFEiHGn3\n                  richtextField:\n                    nodeType: document\n                    data: {}\n                    content:\n                      - nodeType: paragraph\n                        content:\n                          - nodeType: text\n                            value: Some Richtext here.\n                            marks: []\n                            data: {}\n                        data: {}\n                      - nodeType: heading-1\n                        content:\n                          - nodeType: text\n                            value: Header\n                            marks: []\n                            data: {}\n                        data: {}\n                      - nodeType: paragraph\n                        content:\n                          - nodeType: text\n                            value: bold\n                            marks:\n                              - type: bold\n                            data: {}\n                        data: {}\n                      - nodeType: paragraph\n                        content:\n                          - nodeType: text\n                            value: italics\n                            marks:\n                              - type: italic\n                            data: {}\n                        data: {}\n                      - nodeType: ordered-list\n                        content:\n                          - nodeType: list-item\n                            content:\n                              - nodeType: paragraph\n                                content:\n                                  - nodeType: text\n                                    value: orderlist 1\n                                    marks: []\n                                    data: {}\n                                data: {}\n                            data: {}\n                          - nodeType: list-item\n                            content:\n                              - nodeType: paragraph\n                                content:\n                                  - nodeType: text\n                                    value: orderlist 2\n                                    marks: []\n                                    data: {}\n                                data: {}\n                            data: {}\n                          - nodeType: list-item\n                            content:\n                              - nodeType: paragraph\n                                content:\n                                  - nodeType: text\n                                    value: orderlist 3\n                                    marks: []\n                                    data: {}\n                                data: {}\n                            data: {}\n                        data: {}\n                      - nodeType: unordered-list\n                        content:\n                          - nodeType: list-item\n                            content:\n                              - nodeType: paragraph\n                                content:\n                                  - nodeType: text\n                                    value: unorderlist 1\n                                    marks: []\n                                    data: {}\n                                data: {}\n                            data: {}\n                          - nodeType: list-item\n                            content:\n                              - nodeType: paragraph\n                                content:\n                                  - nodeType: text\n                                    value: unorderlist 2\n                                    marks: []\n                                    data: {}\n                                data: {}\n                            data: {}\n                          - nodeType: list-item\n                            content:\n                              - nodeType: paragraph\n                                content:\n                                  - nodeType: text\n                                    value: unorderlist 3\n                                    marks: []\n                                    data: {}\n                                data: {}\n                            data: {}\n                        data: {}\n                      - nodeType: paragraph\n                        content:\n                          - nodeType: text\n                            value: ''\n                            marks: []\n                            data: {}\n                        data: {}\n                      - nodeType: paragraph\n                        content:\n                          - nodeType: text\n                            value: ''\n                            marks: []\n                            data: {}\n                        data: {}\n                \n  /spaces/{space_id}/environments/{environment_id}/assets:\n    get:\n      tags:\n        - Assets\n      summary: Get all assets of a space\n      operationId: Get all assets of a space\n      description: \u003e-\n        [https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/assets/assets-collection](https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/assets/assets-collection)\n\n\n        `\n\n        curl --include --request GET\n        https://cdn.contentful.com/spaces/{space_id}/environments/{environment_id}/assets?access_token={access_token}\n\n        `\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space to use\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space environment to use\n          example: master\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/assets/{asset_id}:\n    get:\n      tags:\n        - Assets\n      summary: Get a single asset\n      operationId: Get a single asset\n      description: \u003e-\n        [https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/assets/asset](https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/assets/asset)\n\n\n        `\n\n        curl --include --request GET\n        https://cdn.contentful.com/spaces/{space_id}/environments/{environment_id}/assets/{asset_id}?access_token={access_token}\n\n        `\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space to use\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space environment to use\n          example: master\n        - name: asset_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: 6Od9v3wzLOysiMum0Wkmme\n          example: 6Od9v3wzLOysiMum0Wkmme\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/asset_keys/:\n    post:\n      tags:\n        - Asset keys\n      summary: Create an asset key\n      operationId: Create an asset key\n      description: \u003e-\n        [https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/assets/asset](https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/assets/asset)\n\n\n        `\n\n        curl --include --request GET\n        https://cdn.contentful.com/spaces/{space_id}/environments/{environment_id}/assets/{asset_id}?access_token={access_token}\n\n        `\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              example:\n                parameters:\n                  \"expiresAt\": 1613590465\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space to use\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space environment to use\n          example: master\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/locales:\n    get:\n      tags:\n        - Locales\n      summary: Get all locales of a space\n      operationId: Get all locales of a space\n      description: \u003e-\n        [https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/locales/locale-collection](https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/locales/locale-collection)\n\n\n        `\n\n        curl --include --request GET\n        https://cdn.contentful.com/spaces/{space_id}/environments/{environment_id}/locales?access_token={access_token}\n\n        `\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space to use\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space environment to use\n          example: master\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/tags:\n    get:\n      tags:\n        - Content tags\n      summary: Get all tags\n      operationId: Get all tags\n      description: \u003e-\n        https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags/tag-collection\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n          example: master\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/tags/{tag_id}:\n    get:\n      tags:\n        - Content tags\n      summary: Get a single tag\n      operationId: Get a single tag\n      description: \u003e-\n        https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags/tag\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n        - name: tag_id\n          in: path\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/sync:\n    get:\n      tags:\n        - Synchronization\n      summary: The Sync API allows you to keep a local copy of all content in a space up-to-date via delta updates, or only the content that has changed.\n      operationId: Syncing specific content\n      description: \u003e-\n        Synchronization responses contain either a **nextPageUrl** or\n        **nextSyncUrl** attribute. If there is more content for the current\n        sync, **nextPageUrl** will contain an URL with a **sync_token** which\n        will retrieve the next page. This continues until you have retrieved all\n        content.\n\n\n        At this point, the response will contain a **nextSyncUrl** which you use\n        to make requests in the future and retrieve delta updates between the\n        current content on Contentful and what you retrieved with your last sync\n        request. Upon completion, you will receive a new **nextSyncUrl** which\n        you can again use for future updates.\n\n\n        If a client loses the **nextSyncUrl**, the client should delete its\n        local content and perform an initial synchronization again.\n\n\n        NOTE: The initial query with **sync_token** will persist across\n        subsequent syncs.\n\n\n        [https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/synchronization/pagination-and-subsequent-syncs](https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/synchronization/pagination-and-subsequent-syncs)\n\n\n        `\n\n        curl --include --request GET\n        https://cdn.contentful.com/spaces/{space_id}/sync?access_token={access_token}\u0026sync_token={sync_token}\n\n        `\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: sync_token\n          in: query\n          schema:\n            type: string\n          description: \u003e-\n            An opaque token which is used to identify your previous sync.\n            Examplew7Ese3kdwpMbMhhgw7QAUsKiw6bCi09CwpFYwpwywqVYw6DDh8OawrTDpWvCgMOhw6jCuAhxWX_CocOPwowhcsOzeEJSbcOvwrfDlCjDr8O1YzLDvi9FOTXCmsOqT8OFcHPDuFDCqyMMTsKNw7rDmsOqKcOnw7FCwpIfNMOcFMOxFnHCoCzDpAjCucOdwpwfw4YTK8Kpw6zCtDrChVQlNsO2ZybDnw\n          example: SYNC_TOKEN\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space to use\n        - name: initial\n          in: query\n          schema:\n            type: boolean\n          required: true\n          description: Initial synchronization\n          example: initial=true\n        - name: type\n          in: query\n          schema:\n            type: string\n          required: true\n          description: Synchronization of entries of specific content type\n          example: initial=true\u0026type=Entry\u0026content_type=2PqfXUJwE8qSYKuM0U6w8M\u0026limit=42\n        - name: limit\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Maximum number of results\n          example: limit=100\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/entries/:\n    get:\n      tags:\n        - Search\n      summary: Search in entries\n      operationId: Search in entries\n      description: \u003e-\n        The include array is not applicable while retrieving a single entry.\n\n\n        [https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/entries/entry](https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/entries/entry)\n\n\n        `\n\n        curl --include --request GET\n        https://cdn.contentful.com/spaces/{space_id}/environments/{environment_id}/entries/{entry_id}?access_token={access_token}\n\n        `\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space to use\n          example: 5nvk6q4s3ttw\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space environment to use\n          example: master\n        - name: include\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Number of levels to include (defaults to 1)\n        - name: content_type\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Alphanumeric id of the content type to retrieve.\n          example: 2PqfXUJwE8qSYKuM0U6w8M\n        - name: select\n          in: query\n          schema:\n            type: string\n          description: select operator allows you to choose what fields to return from an entity.\n          example: sys.id\n        - name: key\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Part of the query parameter to search on\n          examples:\n            all:\n              value: metadata.tags.sys.id[all]\n              summary: Querying content based on a set of tags\n            in:\n              value: metadata.tags.sys.id[in]\n              summary: You can filter a field by multiple values with the [in] operator\n            nin:\n              value: metadata.tags.sys.id[nin]\n              summary: You can filter a field by multiple (exclude) values with the [nin] operator\n            exist:\n              value: metadata.tags[exists]\n              summary: You can check for the presence of a field using the [exists] operator\n            lt:\n              value: metadata.revision[lt]\n              summary: Range operator - Less than\n            lte:\n              value: metadata.revision[lte]\n              summary: Range operator - Less than or equal\n            gt:\n              value: metadata.revision[gt]\n              summary: Range operator - Greater than\n            gte:\n              value: metadata.revision[gte]\n              summary: Range operator - Greater than or equal\n        - name: query\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Full-text search.\n          example: design,some text here\n        - name: fields.{field_id}[match]\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Full-text search on a field.\n          example: fields.website[match]=content\n        - name: fields.center[near]\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Location proximity search.\n          example: fields.center[near]=38,-122\n        - name: fields.center[within]\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Locations in a bounding object, rectangle or circle.\n          examples:\n            rectangle:\n              value: field.center[within]=latitude1,longitude1,latitude2,longitude2\n              summary: Using a bounding rectangle\n            circle:\n              value: field.center[within]=latitute,longitude,radius\n              summary: Using a bounding circle\n        - name: links_to_entry\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Links to entry ID.\n          example: links_to_entry=4LgMotpNF6W20YKmuemW0a\n        - name: links_to_asset\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Links to asset ID.\n          example: links_to_asset=4LgMotpNF6W20YKmuemW0a\n        - name: order\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Order by of results.\n          examples:\n            asc:\n              value: order=sys.createdAt\n              summary: Asc\n            desc:\n              value: order=-sys.createdAt\n              summary: Desc\n            multiple:\n              value: order=sys.createdAt,sys.publishedAt\n              summary: Multiple parameters\n        - name: limit\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Maximum number of results\n          example: limit=100\n        - name: skip\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Offset\n          example: skip=100\n        - name: locale\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Retrieve localized entries\n          examples:\n            locale:\n              value: locale=EN-us\n              summary: single locale\n            all_locales:\n              value: locale=*\n              summary: all locales\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /spaces/{space_id}/environments/{environment_id}/assets/:\n    get:\n      tags:\n        - Search\n      summary: Search in assets\n      operationId: Search in assets\n      description: \u003e-\n       You can filter assets by their MIME type group by using the mimetype_group query parameter. Valid groups are attachment, plaintext, image, audio, video, richtext, presentation, spreadsheet, pdfdocument, archive, code and markup. By default, the API will return all assets.\n        `\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: space_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space to use\n          example: 5nvk6q4s3ttw\n        - name: environment_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: space environment to use\n          example: master\n        \n        - name: mimetype_group\n          in: query\n          required: false\n          schema:\n            type: string\n          description: Filtering assets by MIME type\n          examples:\n            attachment:\n              value: mimetype_group=attachment\n              summary: attachment\n            plaintext:\n              value: mimetype_group=plaintext\n              summary: plaintext\n            image:\n              value: mimetype_group=image\n              summary: image\n            audio:\n              value: mimetype_group=audio\n              summary: audio\n            video:\n              value: mimetype_group=video\n              summary: video\n            richtext:\n              value: mimetype_group=richtext\n              summary: richtext\n            presentation:\n              value: mimetype_group=presentation\n              summary: presentation\n            spreadsheet:\n              value: mimetype_group=spreadsheet\n              summary: spreadsheet\n            pdfdocument:\n              value: mimetype_group=pdfdocument\n              summary: pdfdocument\n            archive:\n              value: mimetype_group=archive\n              summary: archive\n            code:\n              value: mimetype_group=code\n              summary: code\n            markup:\n              value: mimetype_group=markup\n              summary: markup\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}",
			"canonicalURL": "/github.com/josille/apis-schemas@3b2232ed50366c0a1a0618eaafc82c08f3891719/-/blob/openAPI/Contentful-CDA.openapi_collection.yml",
			"externalURLs": [
				{
					"url": "https://github.com/josille/apis-schemas/blob/3b2232ed50366c0a1a0618eaafc82c08f3891719/openAPI/Contentful-CDA.openapi_collection.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/spaces/{space_id}\": get: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}