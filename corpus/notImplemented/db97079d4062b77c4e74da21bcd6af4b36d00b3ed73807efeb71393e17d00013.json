{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/salesforce/Avocat"
		},
		"file": {
			"name": "test_sample_contract.yaml",
			"size": 0,
			"path": "src/test/contracts-samples/test_sample_contract.yaml",
			"byteSize": 6018,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: \"2.2.2\"\n  title: \"TEST_SAMPLE_CONTRACT\"\n  description: This is test sample contract\nservers:\n  - url: \"test/sample/contract\"\npaths:\n  /mru:\n    get:\n      summary: \"Loads user's MRUs\"\n      security:\n        - BearerAuth: []\n      description: \"\"\n      parameters:\n      - name: \"sobject\"\n        in: \"query\"\n        description: \"The comma separated list of objects that the MRU are scoped to, such as Account or offer__c. All MRUs of all types are fetched by default\"\n        required: false\n        schema:\n          type: \"string\"\n          pattern: \"^.+(,.+)*$\"\n        examples:\n          oneItem:\n            value: \"Account\"\n          multipleItems:\n            value: \"Account,Work\"\n      - name: \"limit\"\n        in: \"query\"\n        description: \"The number of results to return\"\n        required: false\n        schema:\n          type: \"integer\"\n          minimum: 1\n          maximum: 200\n          default: 200\n        example: 100\n      - name: \"dynamicFields\"\n        in: \"query\"\n        description: \"A comma separated list of field to compute for each MRU. Only secondaryField is supported for now.\"\n        required: false\n        schema:\n          type: \"string\"\n          pattern: \"^.+(,.+)*$\"\n        example: \"secondaryField\"\n      - name: \"networkId\"\n        in: \"query\"\n        description: \"Specifies one or more unique identifiers for the community(ies) that the question to return is associated to. Specify multiple communities using a comma-separated list.\"\n        required: false\n        schema:\n          type: \"string\"\n          pattern: \".{18}\"\n        example: \"0DBX01D5F68R9E\"\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/200\"\n        400:\n          description: \"Invalid input\"\n    post:\n      summary: \"Loads user's MRUs\"\n      security:\n        - BearerAuth: []\n      description: \"\"\n      parameters:\n        - name: \"sobject\"\n          in: \"query\"\n          description: \"The comma separated list of objects that the MRU are scoped to, such as Account or offer__c. All MRUs of all types are fetched by default\"\n          required: false\n          schema:\n            type: \"string\"\n            pattern: \"^.+(,.+)*$\"\n          examples:\n            oneItem:\n              value: \"Account\"\n            multipleItems:\n              value: \"Account,Work\"\n        - name: \"limit\"\n          in: \"query\"\n          description: \"The number of results to return\"\n          required: false\n          schema:\n            type: \"integer\"\n            minimum: 1\n            maximum: 200\n            default: 200\n          example: 100\n        - name: \"dynamicFields\"\n          in: \"query\"\n          description: \"A comma separated list of field to compute for each MRU. Only secondaryField is supported for now.\"\n          required: false\n          schema:\n            type: \"string\"\n            pattern: \"^.+(,.+)*$\"\n          example: \"secondaryField\"\n        - name: \"networkId\"\n          in: \"query\"\n          description: \"Specifies one or more unique identifiers for the community(ies) that the question to return is associated to. Specify multiple communities using a comma-separated list.\"\n          required: false\n          schema:\n            type: \"string\"\n            pattern: \".{18}\"\n          example: \"0DBX01D5F68R9E\"\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/200\"\n        400:\n          description: \"Invalid input\"\ncomponents:\n  schemas:\n    200:\n      type: \"object\"\n      required:\n      - records\n      properties:\n        records:\n          type: \"array\"\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/CaseRecordItem\"\n              - $ref: \"#/components/schemas/ContactRecordItem\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n    RecordItem:\n      type: \"object\"\n      required:\n      - id\n      - attributes\n      properties:\n        attributes:\n          type: \"object\"\n          properties:\n            type:\n              type: \"string\"\n              description: \"The entity api name\"\n            url:\n              type: \"string\"\n              example: \"/services/data/v44.0/sobjects/Xxx/KprB0000003ygxsIAA\"\n        Id:\n          type: \"string\"\n          example: \"500bndf9908uygxsIAA\"\n    CaseRecordItem:\n      description: \"Example of a Case record\"\n      allOf:\n      - $ref: \"#/components/schemas/RecordItem\"\n      - type: \"object\"\n        properties:\n          CaseNumber:\n            type: \"string\"\n            example: \"01481851\"\n            description: \"This is the name field of this entity, its name depends on the entity\"\n          Subject:\n            type: \"string\"\n            example: \"This is the case subject\"\n            description: \"The secondary field name depends on the entity and its search layout\"\n    ContactRecordItem:\n      description: \"Example of a Contact record, with no secondary field found\"\n      allOf:\n      - $ref: \"#/components/schemas/RecordItem\"\n      - type: \"object\"\n        properties:\n          Name:\n            type: \"string\"\n            example: \"John Doe\"\n            description: \"This is the name field of this entity, its name depends on the entity\"\n    Meta:\n      type: \"object\"\n      properties:\n        secondaryFields:\n          type: \"array\"\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/MetaSecondaryField\"\n    MetaSecondaryField:\n      type: \"object\"\n      required:\n      - entityApiName\n      - fieldApiName\n      - type\n      properties:\n        entityApiName:\n          type: \"string\"\n          example: \"Case\"\n        fieldApiName:\n          type: \"string\"\n          example: \"Subject\"\n        \"type\":\n          type: \"string\"\n          example: \"TEXT\"\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n",
			"canonicalURL": "/github.com/salesforce/Avocat@72afc2f7b286f20d69cb0621288b59efc0df82a8/-/blob/src/test/contracts-samples/test_sample_contract.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/salesforce/Avocat/blob/72afc2f7b286f20d69cb0621288b59efc0df82a8/src/test/contracts-samples/test_sample_contract.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/mru\": get: responses: 200: contents: application/json: generate schema: field records: item: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}