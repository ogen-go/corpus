{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tomkludy/docker-drawio-renderer"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 9511,
			"content": "openapi: 3.0.0\ninfo:\n  title: Draw.io Renderer\n  description: |\n    REST API for rendering diagrams built on [diagrams.net](https://diagrams.net)\n    (formerly known as [draw.io](https://draw.io)) into images.\n  version: 1.1.0\nservers:\n  - url: http://localhost:5000/\n    description: Locally running docker container. See instructions.\npaths:\n  /convert_file:\n    post:\n      summary: Convert a diagram to an image\n      description: |\n        Convert a diagram to a supported image format.\n\n        Note: The caller must specify the `Accept:` request header with one\n        of the possible output format MIME types in order to choose\n        the desired image format.\n      parameters:\n        - in: query\n          name: quality\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n          description: 'Output image quality for JPEG (default: 90)'\n        - in: query\n          name: transparent\n          schema:\n            type: boolean\n          description: Use transparent background for PNG\n        - in: query\n          name: embed\n          schema:\n            type: boolean\n          description: Includes a copy of the diagram (for PNG format only)\n        - in: query\n          name: border\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 10000\n          description: 'Sets the border width around the diagram (default: 0)'\n        - in: query\n          name: scale\n          schema:\n            type: number\n            minimum: 0\n            exclusiveMinimum: true\n            maximum: 5\n          description: Scales the diagram size; 1.0 is default size\n        - in: query\n          name: width\n          schema:\n            type: integer\n            minimum: 10\n            maximum: 10000\n          description: Fits the generated image/pdf into the specified width, preserves aspect ratio\n        - in: query\n          name: height\n          schema:\n            type: integer\n            minimum: 10\n            maximum: 10000\n          description: Fits the generated image/pdf into the specified height, preserves aspect ratio\n        - in: query\n          name: crop\n          schema:\n            type: boolean\n          description: Crops PDF to diagram size\n      requestBody:\n        required: true\n        content:\n          application/xml:\n            schema:\n              type: string\n            example: \u003cmxfile\u003e\u003cdiagram\u003ejZLbboMwDIafhstJ0Gwtu13XwyYhTaq0apcp8UikgFFqBvTpF4aBoqrSrrA/H3B+OxDrvNk5WeoEFdhgEaomEK/BYhFF4dJ/OtL2ZBU/9yBzRnHSBA7mAgxDppVRcJ4lEqIlU85hikUBKc2YdA7redo32vlfS5nBDTik0t7So1Gkexo/hRPfg8k0jQ/mSC6HZAZnLRXWV0hsArF2iNRbebMG24k36NLXbe9Ex8EcFPSfgs/T28ldNNmtTd4fd3Hy9dE+cJcfaSt+8N5XoUdHdF6qfnJqBzkcVoWCrmMYiJdaG4JDKdMuWvsD8ExTbr0XeZN7gyNo7g4djVL4GwLMgVzrU7hALFk9Ph+xYr+elhENCuurRQx1kvefja0nibzBKg3utI2/2NVNi80v\u003c/diagram\u003e\u003c/mxfile\u003e\n          application/drawio:\n            schema:\n              type: string\n            example: \u003cmxfile\u003e\u003cdiagram\u003ejZLbboMwDIafhstJ0Gwtu13XwyYhTaq0apcp8UikgFFqBvTpF4aBoqrSrrA/H3B+OxDrvNk5WeoEFdhgEaomEK/BYhFF4dJ/OtL2ZBU/9yBzRnHSBA7mAgxDppVRcJ4lEqIlU85hikUBKc2YdA7redo32vlfS5nBDTik0t7So1Gkexo/hRPfg8k0jQ/mSC6HZAZnLRXWV0hsArF2iNRbebMG24k36NLXbe9Ex8EcFPSfgs/T28ldNNmtTd4fd3Hy9dE+cJcfaSt+8N5XoUdHdF6qfnJqBzkcVoWCrmMYiJdaG4JDKdMuWvsD8ExTbr0XeZN7gyNo7g4djVL4GwLMgVzrU7hALFk9Ph+xYr+elhENCuurRQx1kvefja0nibzBKg3utI2/2NVNi80v\u003c/diagram\u003e\u003c/mxfile\u003e\n      responses:\n        '200':\n          $ref: \"#/components/responses/Ok\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '409':\n          $ref: \"#/components/responses/NotAcceptable\"\n        '413':\n          $ref: \"#/components/responses/EntityTooLarge\"\n  /convert:\n    post:\n      summary: Convert a diagram to an image\n      description: Convert a diagram to a supported image format.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Options'\n            examples:\n              PNG:\n                value:\n                  source: \u003cmxfile\u003e\u003cdiagram\u003ejZLbboMwDIafhstJ0Gwtu13XwyYhTaq0apcp8UikgFFqBvTpF4aBoqrSrrA/H3B+OxDrvNk5WeoEFdhgEaomEK/BYhFF4dJ/OtL2ZBU/9yBzRnHSBA7mAgxDppVRcJ4lEqIlU85hikUBKc2YdA7redo32vlfS5nBDTik0t7So1Gkexo/hRPfg8k0jQ/mSC6HZAZnLRXWV0hsArF2iNRbebMG24k36NLXbe9Ex8EcFPSfgs/T28ldNNmtTd4fd3Hy9dE+cJcfaSt+8N5XoUdHdF6qfnJqBzkcVoWCrmMYiJdaG4JDKdMuWvsD8ExTbr0XeZN7gyNo7g4djVL4GwLMgVzrU7hALFk9Ph+xYr+elhENCuurRQx1kvefja0nibzBKg3utI2/2NVNi80v\u003c/diagram\u003e\u003c/mxfile\u003e\n                  embed: true\n              JPEG:\n                value:\n                  source: \u003cmxfile\u003e\u003cdiagram\u003ejZLbboMwDIafhstJ0Gwtu13XwyYhTaq0apcp8UikgFFqBvTpF4aBoqrSrrA/H3B+OxDrvNk5WeoEFdhgEaomEK/BYhFF4dJ/OtL2ZBU/9yBzRnHSBA7mAgxDppVRcJ4lEqIlU85hikUBKc2YdA7redo32vlfS5nBDTik0t7So1Gkexo/hRPfg8k0jQ/mSC6HZAZnLRXWV0hsArF2iNRbebMG24k36NLXbe9Ex8EcFPSfgs/T28ldNNmtTd4fd3Hy9dE+cJcfaSt+8N5XoUdHdF6qfnJqBzkcVoWCrmMYiJdaG4JDKdMuWvsD8ExTbr0XeZN7gyNo7g4djVL4GwLMgVzrU7hALFk9Ph+xYr+elhENCuurRQx1kvefja0nibzBKg3utI2/2NVNi80v\u003c/diagram\u003e\u003c/mxfile\u003e\n                  format: jpeg\n                  quality: 95\n              SVG:\n                value:\n                  source: \u003cmxfile\u003e\u003cdiagram\u003ejZLbboMwDIafhstJ0Gwtu13XwyYhTaq0apcp8UikgFFqBvTpF4aBoqrSrrA/H3B+OxDrvNk5WeoEFdhgEaomEK/BYhFF4dJ/OtL2ZBU/9yBzRnHSBA7mAgxDppVRcJ4lEqIlU85hikUBKc2YdA7redo32vlfS5nBDTik0t7So1Gkexo/hRPfg8k0jQ/mSC6HZAZnLRXWV0hsArF2iNRbebMG24k36NLXbe9Ex8EcFPSfgs/T28ldNNmtTd4fd3Hy9dE+cJcfaSt+8N5XoUdHdF6qfnJqBzkcVoWCrmMYiJdaG4JDKdMuWvsD8ExTbr0XeZN7gyNo7g4djVL4GwLMgVzrU7hALFk9Ph+xYr+elhENCuurRQx1kvefja0nibzBKg3utI2/2NVNi80v\u003c/diagram\u003e\u003c/mxfile\u003e\n                  format: svg\n              PDF:\n                value:\n                  source: \u003cmxfile\u003e\u003cdiagram\u003ejZLbboMwDIafhstJ0Gwtu13XwyYhTaq0apcp8UikgFFqBvTpF4aBoqrSrrA/H3B+OxDrvNk5WeoEFdhgEaomEK/BYhFF4dJ/OtL2ZBU/9yBzRnHSBA7mAgxDppVRcJ4lEqIlU85hikUBKc2YdA7redo32vlfS5nBDTik0t7So1Gkexo/hRPfg8k0jQ/mSC6HZAZnLRXWV0hsArF2iNRbebMG24k36NLXbe9Ex8EcFPSfgs/T28ldNNmtTd4fd3Hy9dE+cJcfaSt+8N5XoUdHdF6qfnJqBzkcVoWCrmMYiJdaG4JDKdMuWvsD8ExTbr0XeZN7gyNo7g4djVL4GwLMgVzrU7hALFk9Ph+xYr+elhENCuurRQx1kvefja0nibzBKg3utI2/2NVNi80v\u003c/diagram\u003e\u003c/mxfile\u003e\n                  format: pdf\n                  pages: '0..5'\n      responses:\n        '200':\n          $ref: \"#/components/responses/Ok\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '409':\n          $ref: \"#/components/responses/NotAcceptable\"\n        '413':\n          $ref: \"#/components/responses/EntityTooLarge\"\ncomponents:\n  responses:\n    Ok:\n      description: The image was successfully converted and is returned.\n      content:\n        image/png:\n          schema: \n            type: string\n            format: binary\n          example: \"\\\\x89PNG\\\\x0D\\\\x0A\\\\x1A\\\\x0A...\"\n        image/jpeg:\n          schema: \n            type: string\n            format: binary\n          example: \"\\\\xFF\\\\xD8\\\\xFF\\\\xE0\\\\x00\\\\x10JFIF\\\\x00\\\\x01...\"\n        application/pdf:\n          schema: \n            type: string\n            format: binary\n          example: \"%PDF-1.4...\"\n        image/svg+xml; encoding=utf-8:\n          schema:\n            type: string\n          example: \"\u003c!DOCTYPE svg ...\"\n    BadRequest:\n      description: Invalid data was passed in the request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    NotAcceptable:\n      description: \"`Accept:` request header did not specify a supported image format.\"\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    EntityTooLarge:\n      description: The diagram was too large for the server to process. Break the diagram into smaller parts, or ask the web service operator to increase the available memory if necessary.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n  schemas:\n    Options:\n      type: object\n      properties:\n        source:\n          type: string\n          description: Draw.io-format source file\n        format:\n          type: string\n          enum:\n            - png\n            - jpeg\n            - svg\n            - pdf\n          default: png\n        quality:\n          type: integer\n          description: 'Output image quality for JPEG (default: 90)'\n          minimum: 1\n          maximum: 100\n        transparent:\n          type: boolean\n          description: Use transparent background for PNG\n        embed:\n          type: boolean\n          description: Includes a copy of the diagram (for PNG format only)\n        border:\n          type: integer\n          description: 'Sets the border width around the diagram (default: 0)'\n          minimum: 0\n          maximum: 10000\n        scale:\n          type: number\n          description: Scales the diagram size; 1.0 is default size\n          minimum: 0\n          exclusiveMinimum: true\n          maximum: 5\n        width:\n          type: integer\n          description: Fits the generated image/pdf into the specified width, preserves aspect ratio\n          minimum: 10\n          maximum: 10000\n        height:\n          type: integer\n          description: Fits the generated image/pdf into the specified height, preserves aspect ratio\n          minimum: 10\n          maximum: 10000\n        crop:\n          type: boolean\n          description: Crops PDF to diagram size\n      required:\n        - source\n    Error:\n      type: object\n      properties:\n        message:\n          type: string\n          description: The error that occurred",
			"canonicalURL": "/github.com/tomkludy/docker-drawio-renderer@598bb71f3ae67a2a4cf3d149a7f229ffff9ded6c/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/tomkludy/docker-drawio-renderer/blob/598bb71f3ae67a2a4cf3d149a7f229ffff9ded6c/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/convert_file\": post: requestBody: contents: unsupported content types: [application/drawio, application/xml]",
	"NotImplemented": [
		"unsupported content types"
	]
}