{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/swagger-api/swagger-codegen-generators"
		},
		"file": {
			"name": "header-parameters.json",
			"size": 0,
			"path": "src/test/java/io/swagger/codegen/v3/generators/scala/header-parameters.json",
			"byteSize": 1117,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"header parameter\",\n    \"version\": \"1.0\"\n  },\n  \"paths\": {\n    \"/parameters\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Find some pet\",\n        \"description\": \"Returns a single pet\",\n        \"operationId\": \"getPet\",\n        \"parameters\": [\n          {\n            \"name\": \"header\",\n            \"in\": \"header\",\n            \"description\": \"some header value\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"optionalHeader\",\n            \"in\": \"header\",\n            \"description\": \"some optional header value\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/swagger-api/swagger-codegen-generators@56bf0942d7510e50f6511ee1eb214038e98611ce/-/blob/src/test/java/io/swagger/codegen/v3/generators/scala/header-parameters.json",
			"externalURLs": [
				{
					"url": "https://github.com/swagger-api/swagger-codegen-generators/blob/56bf0942d7510e50f6511ee1eb214038e98611ce/src/test/java/io/swagger/codegen/v3/generators/scala/header-parameters.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/parameters\": get: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}