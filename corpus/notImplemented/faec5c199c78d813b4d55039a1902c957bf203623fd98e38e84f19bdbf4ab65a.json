{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/networknt/model-config"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "rest/openapi/chain-reader/openapi.yaml",
			"byteSize": 11663,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Chain reader service for light blockchain\n  license:\n    name: MIT\nservers:\n  - url: 'https://reader.networknt.com'\npaths:\n  '/account/{address}':\n    get:\n      summary: Get all information about an address like currency accounts, balances and the last 10 transactions of each account.\n      operationId: getAddress\n      tags:\n        - address\n      parameters:\n        - name: address\n          in: path\n          description: The blockchain address\n          required: true\n          schema:\n            type: string\n      security:\n        - tx_auth:\n            - 'tx.r'\n      responses:\n        '200':\n          description: A paged array of accounts and txs\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Transaction'\n              example:\n                - currency: taiji\n                  c: \n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n                  d: \n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n                - currency: taiji\n                  c: \n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n                  d:\n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n  '/account':\n    get:\n      summary: Get all information about an address like currency accounts, balances and the last 10 transactions of each account.\n      operationId: getBalances\n      parameters:\n        - name: addresses\n          in: query\n          description: A list of Taiji blockchain addresses separated by comma\n          required: true\n          schema:\n            type: string\n      security:\n        - tx_auth:\n            - 'tx.r'\n      responses:\n        '200':\n          description: A list of addresses and their balances per currency\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Transaction'\n              example:\n                - currency: taiji\n                  c: \n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n                  d: \n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n                - currency: taiji\n                  c: \n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n                  d:\n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n  '/account/{address}/{currency}':\n    get:\n      summary: Get all information about an account for an address of balances and the last 10 transactions.\n      operationId: getAccount\n      tags:\n        - account\n      parameters:\n        - name: address\n          in: path\n          description: The blockchain address\n          required: true\n          schema:\n            type: string\n        - name: currency\n          in: path\n          description: The currency account\n          required: true\n          schema: \n            type: string\n            enum: [taiji]\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100 and default 10) \n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: offset\n          in: query\n          description: Offset of transactions (default 0 which is from the last transaction)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      security:\n        - tx_auth:\n            - 'tx.r'\n      responses:\n        '200':\n          description: A paged array of txs\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Transaction'\n              example:\n                - currency: taiji\n                  c: \n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n                  d: \n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n                - currency: taiji\n                  c: \n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n                  d:\n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n  '/transaction/{address}/{currency}':\n    get:\n      summary: Get tranactions about an account for an address.\n      operationId: getTransactionByAccount\n      tags:\n        - transaction\n      parameters:\n        - name: address\n          in: path\n          description: The blockchain address\n          required: true\n          schema:\n            type: string\n        - name: currency\n          in: path\n          description: The currency account\n          required: true\n          schema: \n            type: string\n            enum: [taiji]\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100 and default 10) \n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: offset\n          in: query\n          description: Offset of transactions (default 0 which is from the last transaction)\n          required: true\n          schema:\n            type: integer\n            format: int32\n      security:\n        - tx_auth:\n            - 'tx.r'\n      responses:\n        '200':\n          description: A paged array of txs\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Transaction'\n              example:\n                - currency: taiji\n                  c: \n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n                  d: \n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n                - currency: taiji\n                  c: \n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n                  d:\n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n\n  '/ledger/{currency}':\n    get:\n      summary: Get last number of ledger entries from home bank which is the first 4 digits of your address.\n      operationId: getLedgerByCurrency\n      tags:\n        - getLedgerByCurrency\n      parameters:\n        - name: currency\n          in: path\n          description: The currency\n          required: true\n          schema: \n            type: string\n            enum: [taiji]\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 1000 and default 10) \n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 1000\n      security:\n        - tx_auth:\n            - 'tx.r'\n      responses:\n        '200':\n          description: A paged array of txs\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Transaction'\n              example:\n                - 00007208c97fffee67c1186686f272ecf17f29e9: \n                  id: 39\n                  toAddress: 00007208c97fffee67c1186686f272ecf17f29e9\n                  value: 1000000000000\n                  data: \"\"\n                  signatureData: \n                    v: 28\n                    r: \"QT0B8P2rNZo0D8bsJ35+92/o6VEUwqMKIqYrx6skU+w=\"\n                    s: \"ZDnhhRpn+dEFXPcAG4VhfRA/1NkMAprkWXxECZsYb7I=\"\n                  from: 0000dd2548e2255da25c9a0bdbaa3bad81dbc559\n                - 0000dd2548e2255da25c9a0bdbaa3bad81dbc559: \n                  id: 38\n                  toAddress: 00007208c97fffee67c1186686f272ecf17f29e9\n                  value: 1000000000000\n                  data: \"\"\n                  signatureData: \n                    v: 28\n                    r: \"QT0B8P2rNZo0D8bsJ35+92/o6VEUwqMKIqYrx6skU+w=\"\n                    s: \"ZDnhhRpn+dEFXPcAG4VhfRA/1NkMAprkWXxECZsYb7I=\"\n                  from: 0000dd2548e2255da25c9a0bdbaa3bad81dbc559\n  '/ledger/{currency}/{ledgerId}':\n    get:\n      summary: Info for a specific ledger entry for the home bank\n      operationId: getLedgerById\n      tags:\n        - ledgerById\n      parameters:\n        - name: currency\n          in: path\n          description: The currency\n          required: true\n          schema: \n            type: string\n            enum: [taiji]\n        - name: ledgerId\n          in: path\n          required: true\n          description: The id of the ledger entry to from the home bank\n          schema:\n            type: string\n      security:\n        - tx_auth:\n            - 'tx.r'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LedgerEntry'\n              example:\n                id: 1\n                name: Jessica Right\n                tag: pet\n  '/fee/{currency}':\n    get:\n      summary: Fee structure for the currency and application associate to the currency\n      operationId: getFeeByCurrency\n      tags:\n        - feeByCurrency\n      parameters:\n        - name: currency\n          in: path\n          description: The currency\n          required: true\n          schema: \n            type: string\n            enum: [taiji]\n      security:\n        - tx_auth:\n            - 'tx.r'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fee'\n              example:\n                bankAddress: 000050f134b8B0Db3D9Cc3F6cB262D4d4445Ee28\n                innerChain: 1000\n                interChain: 5000\n                application: 1000000\n\ncomponents:\n  securitySchemes:\n    tx_auth:\n      type: oauth2\n      description: This API uses OAuth 2 with the client credential grant flow.\n      flows:\n        clientCredentials:\n          tokenUrl: 'https://localhost:6882/token'\n          scopes:\n            'tx.r': query txs\n            'tx.w': create tx\n  schemas:\n\n    Transaction:\n      type: object\n      properties:\n        currency: \n          type: string\n          enum: [taiji]\n        d:\n          type: array\n          items: \n            $ref: '#/components/schemas/LedgerEntry'\n        c:\n          type: array\n          items: \n            $ref: '#/components/schemas/LedgerEntry'\n    LedgerEntry:\n      type: object\n      properties:\n        address: \n          type: string\n        signedEntry:\n          type: string\n    Fee:\n      type: object\n      properties:\n        bankAddress: \n          type: string\n        innerChain:\n          type: integer\n          format: int32\n        interChain:\n          type: integer\n          format: int32\n        application: \n          type: integer\n          format: int32\n          ",
			"canonicalURL": "/github.com/networknt/model-config@3fea561d7982c217c1d5d35c1193eac78a7fdcef/-/blob/rest/openapi/chain-reader/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/networknt/model-config/blob/3fea561d7982c217c1d5d35c1193eac78a7fdcef/rest/openapi/chain-reader/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/ledger/{currency}\": get: security: security \"tx_auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}