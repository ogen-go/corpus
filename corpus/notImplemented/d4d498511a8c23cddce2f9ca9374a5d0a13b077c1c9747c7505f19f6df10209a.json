{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/interlay/esplora-btc-api"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "api.yaml",
			"byteSize": 21634,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.1\n  title: Blockstream Esplora HTTP API\n  description: JSON over RESTful HTTP. Amounts are always represented in satoshis.\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n  - url: https://blockstream.info/api\n    description: Bitcoin Mainnet. Does not index provably unspendable transactions - cannot query by OP_RETURN\n  - url: https://btc-testnet.interlay.io\n    description: Bitcoin Testnet. Indexes provably unspendable transactions - can query by OP_RETURN\npaths:\n  /tx/{txId}:\n    get:\n      summary: Returns information about the transaction.\n      operationId: getTx\n      tags:\n        - tx\n      parameters:\n        - name: txId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Transaction\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Transaction\"\n  /tx/{txId}/status:\n    get:\n      summary: Returns the transaction confirmation status.\n      operationId: getTxStatus\n      tags:\n        - tx\n      parameters:\n        - name: txId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Transaction status\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Status\"\n  /tx/{txId}/hex:\n    get:\n      summary: Returns the raw transaction in hex.\n      operationId: getTxHex\n      tags:\n        - tx\n      parameters:\n        - name: txId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Transaction in hex format\n          content:\n            text/plain:\n              schema:\n                type: string\n  /tx/{txId}/raw:\n    get:\n      summary: Returns the raw transaction as binary data.\n      operationId: getTxRaw\n      tags:\n        - tx\n      parameters:\n        - name: txId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Transaction in binary format\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n  /tx/{txId}/merkleblock-proof:\n    get:\n      summary: Returns a merkle inclusion proof for the transaction using bitcoind's merkleblock format.\n      operationId: getTxMerkleBlockProof\n      tags:\n        - tx\n      parameters:\n        - name: txId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Merkle proof\n          content:\n            text/plain:\n              schema:\n                type: string\n  /tx/{txId}/merkle-proof:\n    get:\n      summary: Returns a merkle inclusion proof for the transaction using Electrum's blockchain.transaction.get_merkle format.\n      operationId: getTxMerkleProof\n      tags:\n        - tx\n      parameters:\n        - name: txId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Merkle branch to a confirmed transaction\n          content:\n            text/plain:\n              schema:\n                type: object\n                required:\n                  - merkle\n                  - block_height\n                  - pos\n                properties:\n                  merkle:\n                    type: array\n                    description: A list of transaction hashes the current hash is paired with, deepest pairing first.\n                    items:\n                      type: string\n                  block_height:\n                    type: number\n                    description: The height of the block the transaction was confirmed in.\n                  pos:\n                    type: number\n                    description: The 0-based index of the position of the transaction in the ordered list of transactions in the block.\n  /tx/{txId}/outspend/{vout}:\n    get:\n      summary: Returns the spending status of a transaction output.\n      operationId: getTxOutspend\n      tags:\n        - tx\n      parameters:\n        - name: txId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: vout\n          in: path\n          required: true\n          schema:\n            type: number\n      responses:\n        default:\n          description: Spending status\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Spend\"\n  /tx/{txId}/outspends:\n    get:\n      summary: Returns the spending status of all transaction outputs.\n      operationId: getAllTxOutspends\n      tags:\n        - tx\n      parameters:\n        - name: txId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: All spending statuses\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Spend\"\n  /tx:\n    post:\n      summary: Broadcast a raw transaction to the network.\n      operationId: postTx\n      tags:\n        - tx\n      requestBody:\n        description: The transaction should be provided as hex in the request body.\n        required: true\n        content:\n          text/plain:\n            schema:\n              type: string\n      responses:\n        default:\n          description: The txid will be returned on success.\n          content:\n            application/json:\n              schema:\n                type: string\n  /address/{address}:\n    get:\n      summary: Get information about an address.\n      operationId: getAddress\n      tags:\n        - address\n      parameters:\n        - name: address\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Account metrics\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - address\n                  - chain_stats\n                  - mempool_stats\n                properties:\n                  address:\n                    type: string\n                  chain_stats:\n                    type: object\n                    properties:\n                      funded_txo_count:\n                        type: number\n                      funded_txo_sum:\n                        type: number\n                      spent_txo_count:\n                        type: number\n                      spent_txo_sum:\n                        type: number\n                      tx_count:\n                        type: number\n                  mempool_stats:\n                    type: object\n                    properties:\n                      funded_txo_count:\n                        type: number\n                      funded_txo_sum:\n                        type: number\n                      spent_txo_count:\n                        type: number\n                      spent_txo_sum:\n                        type: number\n                      tx_count:\n                        type: number\n  /address/{address}/txs:\n    get:\n      summary: Get transaction history for the specified address, sorted with newest first.\n      operationId: getAddressTxHistory\n      tags:\n        - address\n      parameters:\n        - name: address\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Returns up to 50 mempool transactions plus the first 25 confirmed transactions.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Transaction\"\n  /address/{address}/txs/mempool:\n    get:\n      summary: Get unconfirmed transaction history for the specified address.\n      operationId: getAddressTxMempool\n      tags:\n        - address\n      parameters:\n        - name: address\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Returns up to 50 transactions (no paging).\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Transaction\"\n  /address/{address}/utxo:\n    get:\n      summary: Get the list of unspent transaction outputs associated with the address.\n      operationId: getAddressUtxo\n      tags:\n        - address\n      parameters:\n        - name: address\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Unspent tx outputs.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/UTXO\"\n  /block/{hash}:\n    get:\n      summary: Returns information about a block.\n      operationId: getBlock\n      tags:\n        - block\n      parameters:\n        - name: hash\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Block info\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - id\n                  - height\n                  - version\n                  - timestamp\n                  - bits\n                  - nonce\n                  - merkle_root\n                  - tx_count\n                  - size\n                  - weight\n                  - previousblockhash\n                properties:\n                  id:\n                    type: string\n                  height:\n                    type: number\n                  version:\n                    type: number\n                  timestamp:\n                    type: number\n                  bits:\n                    type: number\n                  nonce:\n                    type: number\n                  merkle_root: \n                    type: string\n                  tx_count:\n                    type: number\n                  size:\n                    type: number\n                  weight:\n                    type: number\n                  previousblockhash:\n                    type: string\n  /block/{hash}/header:\n    get:\n      summary: Returns the hex-encoded block header.\n      operationId: getBlockHeader\n      tags:\n        - block\n      parameters:\n        - name: hash\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Block header\n          content:\n            application/json:\n              schema:\n                type: string\n  /block/{hash}/status:\n    get:\n      summary: Returns the block status.\n      operationId: getBlockStatus\n      tags:\n        - block\n      parameters:\n        - name: hash\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Block status\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - in_best_chain\n                properties:\n                  in_best_chain:\n                    type: boolean\n                  height:\n                    type: number\n                  next_best:\n                    type: string\n  /block/{hash}/txids:\n    get:\n      summary: Returns a list of all txids in the block.\n      operationId: getBlockTxids\n      tags:\n        - block\n      parameters:\n        - name: hash\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Block transactions\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  /block/{hash}/txid/{index}:\n    get:\n      summary: Returns the transaction at index :index within the specified block.\n      operationId: getBlockTxByIndex\n      tags:\n        - block\n      parameters:\n        - name: hash\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: index\n          in: path\n          required: true\n          schema:\n            type: number\n      responses:\n        default:\n          description: Block transaction\n          content:\n            application/json:\n              schema:\n                type: string\n  /block/{hash}/raw:\n    get:\n      summary: Returns the raw block representation in binary.\n      operationId: getBlockRaw\n      tags:\n        - block\n      parameters:\n        - name: hash\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Block in binary format\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n  /block-height/{height}:\n    get:\n      summary: Returns the hash of the block currently at height.\n      operationId: getBlockAtHeight\n      tags:\n        - block\n      parameters:\n        - name: height\n          in: path\n          required: true\n          schema:\n            type: number\n      responses:\n        default:\n          description: Block hash\n          content:\n            application/json:\n              schema:\n                type: string\n  /blocks/tip/height:\n    get:\n      summary: Returns the height of the last block.\n      operationId: getLastBlockHeight\n      tags:\n        - block\n      responses:\n        default:\n          description: Block height\n          content:\n            application/json:\n              schema:\n                type: number\n  /blocks/tip/hash:\n    get:\n      summary: Returns the hash of the last block.\n      operationId: getLastBlockHash\n      tags:\n        - block\n      responses:\n        default:\n          description: Block hash\n          content:\n            application/json:\n              schema:\n                type: string\n  /mempool:\n    get:\n      summary: Get mempool backlog statistics.\n      operationId: getMempool\n      tags:\n        - mempool\n      responses:\n        default:\n          description: Object with mempool count and size.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Mempool\"\n  /mempool/txids:\n    get:\n      summary: Get the full list of txids in the mempool as an array.\n      operationId: getMempoolTxids\n      tags:\n        - mempool\n      responses:\n        default:\n          description: The order of the txids is arbitrary and does not match bitcoind's.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  /mempool/recent:\n    get:\n      summary: Get a list of the last 10 transactions to enter the mempool.\n      operationId: getMempoolRecent\n      tags:\n        - mempool\n      responses:\n        default:\n          description: Each transaction object contains simplified overview data.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  required:\n                    - txid\n                    - fee\n                    - vsize\n                    - value\n                  properties:\n                    txid:\n                      type: string\n                    fee:\n                      type: number\n                    vsize:\n                      type: number\n                    value:\n                      type: number\n  /fee-estimates:\n    get:\n      summary: Get an object where the key is the confirmation target (in number of blocks) and the value is the estimated feerate (in sat/vB).\n      operationId: getFeeEstimates\n      tags:\n        - fee-estimates\n      responses:\n        default:\n          description: The available confirmation targets are 1-25, 144, 504 and 1008 blocks.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: number\n  /scripthash/{hash}/txs:\n    get:\n      summary: Get transaction history for the specified address/scripthash, sorted with newest first. Can be used to query by op_return\n      operationId: getTxsByScripthash\n      tags:\n        - scripthash\n      parameters:\n        - name: hash\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Returns up to 50 mempool transactions plus the first 25 confirmed transactions. You can request more confirmed transactions using :last_seen_txid (see other scripthash endpoint).\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Transaction\"\n  /scripthash/{hash}/txs/chain:\n    get:\n      summary: Get confirmed transaction history for the specified address/scripthash, sorted by newest first.\n      operationId: getRecentTxsByScripthash\n      tags:\n        - scripthash\n      parameters:\n        - name: hash\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Returns latest 25 transactions.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Transaction\"\n  /scripthash/{hash}/txs/chain/{lastSeenTxid}:\n    get:\n      summary: Get confirmed transaction history for the specified address/scripthash, sorted by newest first.\n      operationId: getTxsBeforeTxidByScripthash\n      tags:\n        - scripthash\n      parameters:\n        - name: hash\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: lastSeenTxid\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: Returns 25 transactions per page. More can be requested by specifying the last txid seen by the previous query.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Transaction\"\ncomponents:\n  schemas:\n    Status:\n      type: object\n      required:\n        - confirmed\n      properties:\n        confirmed:\n          type: boolean\n        block_height:\n          type: number\n        block_hash:\n          type: string\n        block_time:\n          type: number\n    VOut:\n      type: object\n      properties:\n        scriptpubkey:\n          type: string\n        scriptpubkey_asm:\n          type: string\n        scriptpubkey_type:\n          type: string\n        scriptpubkey_address:\n          type: string\n        value:\n          type: number\n    VIn:\n      type: object\n      properties:\n        txid:\n          type: string\n        vout:\n          type: number\n        is_coinbase:\n          type: boolean\n        scriptsig:\n          type: string\n        scriptsig_asm:\n          type: string\n        inner_redeemscript_asm:\n          type: string\n        inner_witnessscript_asm:\n          type: string\n        sequence:\n          type: number\n        witness:\n          type: array\n          items:\n            type: string\n        prevout:\n          $ref: \"#/components/schemas/VOut\"\n    Transaction:\n      type: object\n      required:\n        - txid\n        - version\n      properties:\n        txid:\n          type: string\n        version:\n          type: number\n        locktime:\n          type: number\n        vin:\n          type: array\n          items:\n            $ref: \"#/components/schemas/VIn\"\n        vout:\n          type: array\n          items:\n            $ref: \"#/components/schemas/VOut\"\n        size:\n          type: number\n        weight:\n          type: number\n        fee:\n          type: number\n        status:\n          $ref: \"#/components/schemas/Status\"\n    Spend:\n      type: object\n      required:\n        - spent\n      properties:\n        spent:\n          type: boolean\n        txid:\n          type: string\n        vin:\n          type: string\n        status:\n          $ref: \"#/components/schemas/Status\"\n    UTXO:\n      type: object\n      required:\n        - txid\n        - vout\n        - value\n      properties:\n        txid:\n          type: string\n        vout:\n          type: number\n        value:\n          type: number\n        status:\n          $ref: \"#/components/schemas/Status\"\n    Mempool:\n      type: object\n      required:\n        - count\n        - vsize\n        - total_fee\n        - fee_histogram\n      properties:\n        count:\n          type: number\n        vsize:\n          type: number\n        total_fee:\n          type: number\n        fee_histogram:\n          type: array\n          items:\n            type: array\n            items:\n              type: number\n            minItems: 2\n            maxItems: 2\n\n\n\n",
			"canonicalURL": "/github.com/interlay/esplora-btc-api@1613ac3a7ac94bc39a3e06162113bb9b4ea740fb/-/blob/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/interlay/esplora-btc-api/blob/1613ac3a7ac94bc39a3e06162113bb9b4ea740fb/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/tx/{txId}/merkle-proof\": get: responses: default: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}