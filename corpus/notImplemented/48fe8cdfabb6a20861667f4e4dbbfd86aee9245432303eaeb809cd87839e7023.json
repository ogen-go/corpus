{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mosip/documentation"
		},
		"file": {
			"name": "kernel-keymanager-service-openapi.json",
			"size": 0,
			"path": "api/kernel-keymanager-service-openapi.json",
			"byteSize": 101683,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"Key Manager Service\",\n    \"description\": \"Rest Endpoints for operations related to key management and crypto operations\",\n    \"license\": {\n      \"name\": \"Mosip\",\n      \"url\": \"https://docs.mosip.io/platform/license\"\n    },\n    \"version\": \"1.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://dev2.mosip.net/v1/keymanager\",\n      \"description\": \"Key Manager Service\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"signaturecontroller\",\n      \"description\": \"Operation related to signature\"\n    },\n    {\n      \"name\": \"tokenidgenerator\",\n      \"description\": \"Operation related to tokenid generator\"\n    },\n    {\n      \"name\": \"clientcrypto\",\n      \"description\": \"Operation related to offline Encryption and Decryption\"\n    },\n    {\n      \"name\": \"cryptomanager\",\n      \"description\": \"Operation related to Encryption and Decryption\"\n    },\n    {\n      \"name\": \"zkcryptomanager\",\n      \"description\": \"Operation related to Zero Knowledge Encryption and Decryption\"\n    },\n    {\n      \"name\": \"keymanager\",\n      \"description\": \"Operation related to Keymanagement\"\n    },\n    {\n      \"name\": \"partnercertmanager\",\n      \"description\": \"Operation related to partner certificate management\"\n    },\n    {\n      \"name\": \"keymigrator\",\n      \"description\": \"Operation related to Key Migration from one HSM to another HSM\"\n    },\n    {\n      \"name\": \"licensekey\",\n      \"description\": \"Operation related to License Key Management\"\n    }\n  ],\n  \"paths\": {\n    \"/zkReEncryptRandomKey\": {\n      \"post\": {\n        \"tags\": [\n          \"zkcryptomanager\"\n        ],\n        \"summary\": \"Endpoint for Decrypt the data\",\n        \"description\": \"Endpoint for Decrypt the data\",\n        \"operationId\": \"zkReEncryptRandomKey\",\n        \"parameters\": [\n          {\n            \"name\": \"encryptedKey\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperReEncryptRandomKeyResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/zkEncrypt\": {\n      \"post\": {\n        \"tags\": [\n          \"zkcryptomanager\"\n        ],\n        \"summary\": \"Endpoint for Encrypt the data\",\n        \"description\": \"Endpoint for Encrypt the data\",\n        \"operationId\": \"zkEncrypt\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperZKCryptoRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperZKCryptoResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/zkDecrypt\": {\n      \"post\": {\n        \"tags\": [\n          \"zkcryptomanager\"\n        ],\n        \"summary\": \"Endpoint for Decrypt the data\",\n        \"description\": \"Endpoint for Decrypt the data\",\n        \"operationId\": \"zkDecrypt\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperZKCryptoRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperZKCryptoResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/verifyCertificateTrust\": {\n      \"post\": {\n        \"tags\": [\n          \"partnercertmanager\"\n        ],\n        \"summary\": \"To Upload Partner Certificate\",\n        \"description\": \"To Upload Partner Certificate\",\n        \"operationId\": \"verifyCertificateTrust\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperCertificateTrustRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperCertificateTrustResponeDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/validate\": {\n      \"post\": {\n        \"tags\": [\n          \"signaturecontroller\"\n        ],\n        \"summary\": \"Function to validate signature\",\n        \"description\": \"Function to validate signature\",\n        \"operationId\": \"validate\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperTimestampRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperValidatorResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"deprecated\": true\n      }\n    },\n    \"/uploadPartnerCertificate\": {\n      \"post\": {\n        \"tags\": [\n          \"partnercertmanager\"\n        ],\n        \"summary\": \"To Upload Partner Certificate\",\n        \"description\": \"To Upload Partner Certificate\",\n        \"operationId\": \"uploadPartnerCertificate\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperPartnerCertificateRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPartnerCertificateResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/uploadOtherDomainCertificate\": {\n      \"post\": {\n        \"tags\": [\n          \"keymanager\"\n        ],\n        \"summary\": \"Update signed certificate for the provided APP ID \u0026 REF ID for other domains\",\n        \"description\": \"Update signed certificate for the provided APP ID \u0026 REF ID for other domains\",\n        \"operationId\": \"uploadOtherDomainCertificate\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperUploadCertificateRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperUploadCertificateResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/uploadCertificate\": {\n      \"post\": {\n        \"tags\": [\n          \"keymanager\"\n        ],\n        \"summary\": \"Update signed certificate for the provided APP ID \u0026 REF ID\",\n        \"description\": \"Update signed certificate for the provided APP ID \u0026 REF ID\",\n        \"operationId\": \"uploadCertificate\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperUploadCertificateRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperUploadCertificateResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/uploadCACertificate\": {\n      \"post\": {\n        \"tags\": [\n          \"partnercertmanager\"\n        ],\n        \"summary\": \"To Upload CA/Sub-CA certificates\",\n        \"description\": \"To Upload CA/Sub-CA certificates\",\n        \"operationId\": \"uploadCACertificate\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperCACertificateRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperCACertificateResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/tpmsigning/publickey\": {\n      \"post\": {\n        \"tags\": [\n          \"clientcrypto\"\n        ],\n        \"summary\": \"Get signinging public key\",\n        \"description\": \"Get signinging public key\",\n        \"operationId\": \"getSigningPublicKey\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperPublicKeyRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPublicKeyResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/tpmencryption/publickey\": {\n      \"post\": {\n        \"tags\": [\n          \"clientcrypto\"\n        ],\n        \"summary\": \"Get encryption public key\",\n        \"description\": \"Get encryption public key\",\n        \"operationId\": \"getEncPublicKey\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperPublicKeyRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPublicKeyResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/tpmencrypt\": {\n      \"post\": {\n        \"tags\": [\n          \"clientcrypto\"\n        ],\n        \"summary\": \"Encrypt data using tpm\",\n        \"description\": \"Encrypt data using tpm\",\n        \"operationId\": \"tpmEncrypt\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperTpmCryptoRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperTpmCryptoResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/tpmdecrypt\": {\n      \"post\": {\n        \"tags\": [\n          \"clientcrypto\"\n        ],\n        \"summary\": \"Decrypt data using tpm\",\n        \"description\": \"Decrypt data using tpm\",\n        \"operationId\": \"tpmDecrypt\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperTpmCryptoRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperTpmCryptoResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/tokenid/{uin}/{partnercode}\": {\n      \"get\": {\n        \"tags\": [\n          \"tokenidgenerator\"\n        ],\n        \"summary\": \"Function to generate token id\",\n        \"description\": \"Function to generate token id\",\n        \"operationId\": \"generateTokenID\",\n        \"parameters\": [\n          {\n            \"name\": \"uin\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"partnercode\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperTokenIDResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/sign\": {\n      \"post\": {\n        \"tags\": [\n          \"signaturecontroller\"\n        ],\n        \"summary\": \"Function to sign response\",\n        \"description\": \"Function to sign response\",\n        \"operationId\": \"sign\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperSignRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperSignResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"deprecated\": true\n      }\n    },\n    \"/revokeKey\": {\n      \"put\": {\n        \"tags\": [\n          \"keymanager\"\n        ],\n        \"summary\": \"Request to Revoke Base Key for the provided APP ID \u0026 REF ID\",\n        \"description\": \"Request to Revoke Base Key for the provided APP ID \u0026 REF ID\",\n        \"operationId\": \"revokeKey\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperRevokeKeyRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperRevokeKeyResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/pdf/sign\": {\n      \"post\": {\n        \"tags\": [\n          \"signaturecontroller\"\n        ],\n        \"summary\": \"Function to sign PDF\",\n        \"description\": \"Function to sign PDF\",\n        \"operationId\": \"signPDF\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperPDFSignatureRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperSignatureResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/migrateZKKeys\": {\n      \"post\": {\n        \"tags\": [\n          \"keymigrator\"\n        ],\n        \"summary\": \"Controller for migrating ZK keys\",\n        \"description\": \"Controller for migrating ZK keys\",\n        \"operationId\": \"migrateZKKeys\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperZKKeyMigrateRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperZKKeyMigrateResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/migrateBaseKey\": {\n      \"post\": {\n        \"tags\": [\n          \"keymigrator\"\n        ],\n        \"summary\": \"Controller for migrating base key\",\n        \"description\": \"Controller for migrating base key\",\n        \"operationId\": \"migrateBaseKey\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperKeyMigrateBaseKeyRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperKeyMigrateBaseKeyResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/license/permission\": {\n      \"get\": {\n        \"tags\": [\n          \"licensekey\"\n        ],\n        \"summary\": \"This method will fetch the mapped permissions for a license key\",\n        \"description\": \"Endpoint for Encrypt the data\",\n        \"operationId\": \"fetchLicenseKeyPermissions\",\n        \"parameters\": [\n          {\n            \"name\": \"tspId\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"licenseKey\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperLicenseKeyFetchResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"licensekey\"\n        ],\n        \"summary\": \"This method will map license key to several permissions. The permissions provided must be present in the master list\",\n        \"description\": \"Endpoint for Encrypt the data\",\n        \"operationId\": \"mapLicenseKey\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperLicenseKeyMappingDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperLicenseKeyMappingResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/license/generate\": {\n      \"post\": {\n        \"tags\": [\n          \"licensekey\"\n        ],\n        \"summary\": \"This method will generate license key against a certain TSP ID\",\n        \"description\": \"Endpoint for Encrypt the data\",\n        \"operationId\": \"generateLicenseKey\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperLicenseKeyGenerationDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperLicenseKeyGenerationResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/jwtVerify\": {\n      \"post\": {\n        \"tags\": [\n          \"signaturecontroller\"\n        ],\n        \"summary\": \"Function to JWT Signature verification\",\n        \"description\": \"Function to JWT Signature verification\",\n        \"operationId\": \"jwtVerify\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperJWTSignatureVerifyRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperJWTSignatureVerifyResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/jwtSign\": {\n      \"post\": {\n        \"tags\": [\n          \"signaturecontroller\"\n        ],\n        \"summary\": \"TFunction to JWT sign datas\",\n        \"description\": \"Function to JWT sign data\",\n        \"operationId\": \"jwtSign\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperJWTSignatureRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperJWTSignatureResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/jwsSign\": {\n      \"post\": {\n        \"tags\": [\n          \"signaturecontroller\"\n        ],\n        \"summary\": \"Function to do JSON Web Signature(JWS) for the inputted data using inputted algorithm. Default Algorithm PS256.\",\n        \"description\": \"Function to JWT sign data\",\n        \"operationId\": \"jwsSign\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperJWSSignatureRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperJWTSignatureResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/getZKTempCertificate\": {\n      \"get\": {\n        \"tags\": [\n          \"keymigrator\"\n        ],\n        \"summary\": \"Controller to get the certificate for migrating ZK keys\",\n        \"description\": \"Controller to get the certificate for migrating ZK keys\",\n        \"operationId\": \"getZKTempCertificate\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperZKKeyMigrateCertficateResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/getPartnerCertificate/{partnerCertId}\": {\n      \"get\": {\n        \"tags\": [\n          \"partnercertmanager\"\n        ],\n        \"summary\": \"To Download Partner Certificate\",\n        \"description\": \"To Download Partner Certificate\",\n        \"operationId\": \"getPartnerCertificate\",\n        \"parameters\": [\n          {\n            \"name\": \"partnerCertId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperPartnerCertDownloadResponeDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/getCertificate\": {\n      \"get\": {\n        \"tags\": [\n          \"keymanager\"\n        ],\n        \"summary\": \"Request to get Certificate for the Provided APP ID \u0026 REF ID\",\n        \"description\": \"Request to get Certificate for the Provided APP ID \u0026 REF ID\",\n        \"operationId\": \"getCertificate\",\n        \"parameters\": [\n          {\n            \"name\": \"applicationId\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"referenceId\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperKeyPairGenerateResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/generateSymmetricKey\": {\n      \"post\": {\n        \"tags\": [\n          \"keymanager\"\n        ],\n        \"summary\": \"Request to Generate Symmetric key for the provided APP ID \u0026 REF ID\",\n        \"description\": \"Request to Generate Symmetric key for the provided APP ID \u0026 REF ID\",\n        \"operationId\": \"generateSymmetricKey\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperSymmetricKeyGenerateRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperSymmetricKeyGenerateResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/generateMasterKey/{objectType}\": {\n      \"post\": {\n        \"tags\": [\n          \"keymanager\"\n        ],\n        \"summary\": \"Generate Master Key for the provided APP ID\",\n        \"description\": \"Generate Master Key for the provided APP ID\",\n        \"operationId\": \"generateMasterKey\",\n        \"parameters\": [\n          {\n            \"name\": \"objectType\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperKeyPairGenerateRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperKeyPairGenerateResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/generateCSR\": {\n      \"post\": {\n        \"tags\": [\n          \"keymanager\"\n        ],\n        \"summary\": \"Request to Generate CSR for the provided APP ID \u0026 REF ID along with other certificate params\",\n        \"description\": \"Request to Generate CSR for the provided APP ID \u0026 REF ID along with other certificate params\",\n        \"operationId\": \"generateCSR\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperCSRGenerateRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperKeyPairGenerateResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/encrypt\": {\n      \"post\": {\n        \"tags\": [\n          \"cryptomanager\"\n        ],\n        \"summary\": \"Encrypt the data\",\n        \"description\": \"Encrypt the data\",\n        \"operationId\": \"encrypt\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperCryptomanagerRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperCryptomanagerResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/encryptWithPin\": {\n      \"post\": {\n        \"tags\": [\n          \"cryptomanager\"\n        ],\n        \"summary\": \"Encrypt the data with pin\",\n        \"description\": \"Encrypt the data with pin\",\n        \"operationId\": \"encryptWithPin\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperCryptoWithPinRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperCryptoWithPinResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/encryptDt\": {\n      \"post\": {\n        \"tags\": [\n          \"cryptomanager\"\n        ],\n        \"summary\": \"Encrypt the data \u0026 encrypt hash of the data with same session key\",\n        \"description\": \"Encrypt the data \u0026 encrypt hash of the data with same session key\",\n        \"operationId\": \"encryptDt\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperCryptomanagerRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperCryptomanagerResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/decrypt\": {\n      \"post\": {\n        \"tags\": [\n          \"cryptomanager\"\n        ],\n        \"summary\": \"Decrypt the data\",\n        \"description\": \"Decrypt the data\",\n        \"operationId\": \"decrypt\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperCryptomanagerRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperCryptomanagerResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/decryptWithPin\": {\n      \"post\": {\n        \"tags\": [\n          \"cryptomanager\"\n        ],\n        \"summary\": \"Decrypt the data with pin\",\n        \"description\": \"Decrypt the data with pin\",\n        \"operationId\": \"decryptWithPin\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperCryptoWithPinRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperCryptoWithPinResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/decryptDt\": {\n      \"post\": {\n        \"tags\": [\n          \"cryptomanager\"\n        ],\n        \"summary\": \"Decrypt the data \u0026 encrypt hash of the data with same session key\",\n        \"description\": \"Decrypt the data \u0026 encrypt hash of the data with same session key\",\n        \"operationId\": \"decryptDt\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperCryptomanagerRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperCryptomanagerResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/csverifysign\": {\n      \"post\": {\n        \"tags\": [\n          \"clientcrypto\"\n        ],\n        \"summary\": \"Verify signature\",\n        \"description\": \"Verify signature\",\n        \"operationId\": \"verifySignature\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperTpmSignVerifyRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperTpmSignVerifyResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/cssign\": {\n      \"post\": {\n        \"tags\": [\n          \"clientcrypto\"\n        ],\n        \"summary\": \"Sign data using tpm\",\n        \"description\": \"Sign data using tpm\",\n        \"operationId\": \"signData\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RequestWrapperTpmSignRequestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success or you may find errors in error array in response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseWrapperTpmSignResponseDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"ReEncryptRandomKeyResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"encryptedKey\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperReEncryptRandomKeyResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/ReEncryptRandomKeyResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"ServiceError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"errorCode\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"CryptoDataDto\": {\n        \"required\": [\n          \"identifier\",\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"identifier\": {\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperZKCryptoRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/ZKCryptoRequestDto\"\n          }\n        }\n      },\n      \"ZKCryptoRequestDto\": {\n        \"required\": [\n          \"id\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"zkDataAttributes\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CryptoDataDto\"\n            }\n          }\n        }\n      },\n      \"ResponseWrapperZKCryptoResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/ZKCryptoResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"ZKCryptoResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"zkDataAttributes\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CryptoDataDto\"\n            }\n          },\n          \"encryptedRandomKey\": {\n            \"type\": \"string\"\n          },\n          \"rankomKeyIndex\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"CertificateTrustRequestDto\": {\n        \"required\": [\n          \"certificateData\",\n          \"partnerDomain\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"certificateData\": {\n            \"type\": \"string\"\n          },\n          \"partnerDomain\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperCertificateTrustRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/CertificateTrustRequestDto\"\n          }\n        }\n      },\n      \"CertificateTrustResponeDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"ResponseWrapperCertificateTrustResponeDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/CertificateTrustResponeDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"RequestWrapperTimestampRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/TimestampRequestDto\"\n          }\n        }\n      },\n      \"TimestampRequestDto\": {\n        \"required\": [\n          \"data\",\n          \"signature\",\n          \"timestamp\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"signature\": {\n            \"type\": \"string\"\n          },\n          \"data\": {\n            \"type\": \"string\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"ResponseWrapperValidatorResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/ValidatorResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"ValidatorResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"PartnerCertificateRequestDto\": {\n        \"required\": [\n          \"certificateData\",\n          \"organizationName\",\n          \"partnerDomain\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"certificateData\": {\n            \"type\": \"string\"\n          },\n          \"organizationName\": {\n            \"type\": \"string\"\n          },\n          \"partnerDomain\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperPartnerCertificateRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/PartnerCertificateRequestDto\"\n          }\n        }\n      },\n      \"PartnerCertificateResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"signedCertificateData\": {\n            \"type\": \"string\"\n          },\n          \"certificateId\": {\n            \"type\": \"string\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"ResponseWrapperPartnerCertificateResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/PartnerCertificateResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"RequestWrapperUploadCertificateRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/UploadCertificateRequestDto\"\n          }\n        }\n      },\n      \"UploadCertificateRequestDto\": {\n        \"required\": [\n          \"applicationId\",\n          \"certificateData\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"applicationId\": {\n            \"type\": \"string\"\n          },\n          \"referenceId\": {\n            \"type\": \"string\"\n          },\n          \"certificateData\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperUploadCertificateResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/UploadCertificateResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"UploadCertificateResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"CACertificateRequestDto\": {\n        \"required\": [\n          \"certificateData\",\n          \"partnerDomain\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"certificateData\": {\n            \"type\": \"string\"\n          },\n          \"partnerDomain\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperCACertificateRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/CACertificateRequestDto\"\n          }\n        }\n      },\n      \"CACertificateResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"ResponseWrapperCACertificateResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/CACertificateResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"PublicKeyRequestDto\": {\n        \"required\": [\n          \"serverProfile\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"serverProfile\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperPublicKeyRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/PublicKeyRequestDto\"\n          }\n        }\n      },\n      \"PublicKeyResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"publicKey\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperPublicKeyResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/PublicKeyResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"RequestWrapperTpmCryptoRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/TpmCryptoRequestDto\"\n          }\n        }\n      },\n      \"TpmCryptoRequestDto\": {\n        \"required\": [\n          \"publicKey\",\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"type\": \"string\"\n          },\n          \"publicKey\": {\n            \"type\": \"string\"\n          },\n          \"tpm\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"ResponseWrapperTpmCryptoResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/TpmCryptoResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"TpmCryptoResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"value\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperTokenIDResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/TokenIDResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"TokenIDResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tokenID\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperSignRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/SignRequestDto\"\n          }\n        }\n      },\n      \"SignRequestDto\": {\n        \"required\": [\n          \"data\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperSignResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/SignResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"SignResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"signature\": {\n            \"type\": \"string\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"RequestWrapperRevokeKeyRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/RevokeKeyRequestDto\"\n          }\n        }\n      },\n      \"RevokeKeyRequestDto\": {\n        \"required\": [\n          \"applicationId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"applicationId\": {\n            \"type\": \"string\"\n          },\n          \"referenceId\": {\n            \"type\": \"string\"\n          },\n          \"disableAutoGen\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"ResponseWrapperRevokeKeyResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/RevokeKeyResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"RevokeKeyResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"PDFSignatureRequestDto\": {\n        \"required\": [\n          \"applicationId\",\n          \"data\",\n          \"reason\",\n          \"timeStamp\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"applicationId\": {\n            \"type\": \"string\"\n          },\n          \"referenceId\": {\n            \"type\": \"string\"\n          },\n          \"timeStamp\": {\n            \"type\": \"string\"\n          },\n          \"data\": {\n            \"type\": \"string\"\n          },\n          \"lowerLeftX\": {\n            \"maximum\": 2147483647,\n            \"minimum\": 0,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"lowerLeftY\": {\n            \"maximum\": 2147483647,\n            \"minimum\": 0,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"upperRightX\": {\n            \"maximum\": 2147483647,\n            \"minimum\": 0,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"upperRightY\": {\n            \"maximum\": 2147483647,\n            \"minimum\": 0,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"reason\": {\n            \"type\": \"string\"\n          },\n          \"pageNumber\": {\n            \"maximum\": 2147483647,\n            \"minimum\": 0,\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperPDFSignatureRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/PDFSignatureRequestDto\"\n          }\n        }\n      },\n      \"ResponseWrapperSignatureResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/SignatureResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"SignatureResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperZKKeyMigrateRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/ZKKeyMigrateRequestDto\"\n          }\n        }\n      },\n      \"ZKKeyDataDto\": {\n        \"required\": [\n          \"encryptedKeyData\",\n          \"keyIndex\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"keyIndex\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"encryptedKeyData\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ZKKeyMigrateRequestDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"zkEncryptedDataList\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ZKKeyDataDto\"\n            }\n          },\n          \"purgeTempKeyFlag\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"ResponseWrapperZKKeyMigrateResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/ZKKeyMigrateResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"ZKKeyMigrateResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"zkEncryptedDataList\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ZKKeyResponseDto\"\n            }\n          }\n        }\n      },\n      \"ZKKeyResponseDto\": {\n        \"required\": [\n          \"keyIndex\",\n          \"statusMessage\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"keyIndex\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"statusMessage\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"KeyMigrateBaseKeyRequestDto\": {\n        \"required\": [\n          \"applicationId\",\n          \"certificateData\",\n          \"encryptedKeyData\",\n          \"referenceId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"applicationId\": {\n            \"type\": \"string\"\n          },\n          \"referenceId\": {\n            \"type\": \"string\"\n          },\n          \"encryptedKeyData\": {\n            \"type\": \"string\"\n          },\n          \"certificateData\": {\n            \"type\": \"string\"\n          },\n          \"notBefore\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"notAfter\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"RequestWrapperKeyMigrateBaseKeyRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/KeyMigrateBaseKeyRequestDto\"\n          }\n        }\n      },\n      \"KeyMigrateBaseKeyResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"ResponseWrapperKeyMigrateBaseKeyResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/KeyMigrateBaseKeyResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"LicenseKeyMappingDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tspId\": {\n            \"type\": \"string\"\n          },\n          \"licenseKey\": {\n            \"type\": \"string\"\n          },\n          \"permissions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"RequestWrapperLicenseKeyMappingDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/LicenseKeyMappingDto\"\n          }\n        }\n      },\n      \"LicenseKeyMappingResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperLicenseKeyMappingResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/LicenseKeyMappingResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"LicenseKeyFetchResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"permissions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"ResponseWrapperLicenseKeyFetchResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/LicenseKeyFetchResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"LicenseKeyGenerationDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tspId\": {\n            \"type\": \"string\"\n          },\n          \"licenseExpiryTime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"RequestWrapperLicenseKeyGenerationDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/LicenseKeyGenerationDto\"\n          }\n        }\n      },\n      \"LicenseKeyGenerationResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"licenseKey\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperLicenseKeyGenerationResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/LicenseKeyGenerationResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"JWTSignatureVerifyRequestDto\": {\n        \"required\": [\n          \"jwtSignatureData\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"jwtSignatureData\": {\n            \"type\": \"string\"\n          },\n          \"actualData\": {\n            \"type\": \"string\"\n          },\n          \"applicationId\": {\n            \"type\": \"string\"\n          },\n          \"referenceId\": {\n            \"type\": \"string\"\n          },\n          \"certificateData\": {\n            \"type\": \"string\"\n          },\n          \"validateTrust\": {\n            \"type\": \"boolean\"\n          },\n          \"domain\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperJWTSignatureVerifyRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/JWTSignatureVerifyRequestDto\"\n          }\n        }\n      },\n      \"JWTSignatureVerifyResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"signatureValid\": {\n            \"type\": \"boolean\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"trustValid\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperJWTSignatureVerifyResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/JWTSignatureVerifyResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"JWTSignatureRequestDto\": {\n        \"required\": [\n          \"dataToSign\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"dataToSign\": {\n            \"type\": \"string\"\n          },\n          \"applicationId\": {\n            \"type\": \"string\"\n          },\n          \"referenceId\": {\n            \"type\": \"string\"\n          },\n          \"includePayload\": {\n            \"type\": \"boolean\"\n          },\n          \"includeCertificate\": {\n            \"type\": \"boolean\"\n          },\n          \"includeCertHash\": {\n            \"type\": \"boolean\"\n          },\n          \"certificateUrl\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperJWTSignatureRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/JWTSignatureRequestDto\"\n          }\n        }\n      },\n      \"JWTSignatureResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"jwtSignedData\": {\n            \"type\": \"string\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"ResponseWrapperJWTSignatureResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/JWTSignatureResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"JWSSignatureRequestDto\": {\n        \"required\": [\n          \"dataToSign\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"dataToSign\": {\n            \"type\": \"string\"\n          },\n          \"applicationId\": {\n            \"type\": \"string\"\n          },\n          \"referenceId\": {\n            \"type\": \"string\"\n          },\n          \"includePayload\": {\n            \"type\": \"boolean\"\n          },\n          \"includeCertificate\": {\n            \"type\": \"boolean\"\n          },\n          \"includeCertHash\": {\n            \"type\": \"boolean\"\n          },\n          \"certificateUrl\": {\n            \"type\": \"string\"\n          },\n          \"validateJson\": {\n            \"type\": \"boolean\"\n          },\n          \"b64JWSHeaderParam\": {\n            \"type\": \"boolean\"\n          },\n          \"signAlgorithm\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperJWSSignatureRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/JWSSignatureRequestDto\"\n          }\n        }\n      },\n      \"ResponseWrapperZKKeyMigrateCertficateResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/ZKKeyMigrateCertficateResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"ZKKeyMigrateCertficateResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"certificate\": {\n            \"type\": \"string\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"PartnerCertDownloadResponeDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"certificateData\": {\n            \"type\": \"string\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"ResponseWrapperPartnerCertDownloadResponeDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/PartnerCertDownloadResponeDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"KeyPairGenerateResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"certificate\": {\n            \"type\": \"string\"\n          },\n          \"certSignRequest\": {\n            \"type\": \"string\"\n          },\n          \"issuedAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"expiryAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"ResponseWrapperKeyPairGenerateResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/KeyPairGenerateResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"RequestWrapperSymmetricKeyGenerateRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/SymmetricKeyGenerateRequestDto\"\n          }\n        }\n      },\n      \"SymmetricKeyGenerateRequestDto\": {\n        \"required\": [\n          \"applicationId\",\n          \"referenceId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"applicationId\": {\n            \"type\": \"string\"\n          },\n          \"referenceId\": {\n            \"type\": \"string\"\n          },\n          \"force\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"ResponseWrapperSymmetricKeyGenerateResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/SymmetricKeyGenerateResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"SymmetricKeyGenerateResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"KeyPairGenerateRequestDto\": {\n        \"required\": [\n          \"applicationId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"applicationId\": {\n            \"type\": \"string\"\n          },\n          \"referenceId\": {\n            \"type\": \"string\"\n          },\n          \"force\": {\n            \"type\": \"boolean\"\n          },\n          \"commonName\": {\n            \"type\": \"string\"\n          },\n          \"organizationUnit\": {\n            \"type\": \"string\"\n          },\n          \"organization\": {\n            \"type\": \"string\"\n          },\n          \"location\": {\n            \"type\": \"string\"\n          },\n          \"state\": {\n            \"type\": \"string\"\n          },\n          \"country\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperKeyPairGenerateRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/KeyPairGenerateRequestDto\"\n          }\n        }\n      },\n      \"CSRGenerateRequestDto\": {\n        \"required\": [\n          \"applicationId\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"applicationId\": {\n            \"type\": \"string\"\n          },\n          \"referenceId\": {\n            \"type\": \"string\"\n          },\n          \"commonName\": {\n            \"type\": \"string\"\n          },\n          \"organizationUnit\": {\n            \"type\": \"string\"\n          },\n          \"organization\": {\n            \"type\": \"string\"\n          },\n          \"location\": {\n            \"type\": \"string\"\n          },\n          \"state\": {\n            \"type\": \"string\"\n          },\n          \"country\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperCSRGenerateRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/CSRGenerateRequestDto\"\n          }\n        }\n      },\n      \"CryptomanagerRequestDto\": {\n        \"required\": [\n          \"applicationId\",\n          \"data\",\n          \"timeStamp\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"applicationId\": {\n            \"type\": \"string\"\n          },\n          \"referenceId\": {\n            \"type\": \"string\"\n          },\n          \"timeStamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"data\": {\n            \"type\": \"string\"\n          },\n          \"salt\": {\n            \"pattern\": \".+\\\\S.*\",\n            \"type\": \"string\"\n          },\n          \"aad\": {\n            \"pattern\": \".+\\\\S.*\",\n            \"type\": \"string\"\n          },\n          \"prependThumbprint\": {\n            \"type\": \"boolean\",\n            \"deprecated\": true\n          }\n        }\n      },\n      \"RequestWrapperCryptomanagerRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/CryptomanagerRequestDto\"\n          }\n        }\n      },\n      \"CryptomanagerResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperCryptomanagerResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/CryptomanagerResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"CryptoWithPinRequestDto\": {\n        \"required\": [\n          \"data\",\n          \"userPin\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"type\": \"string\"\n          },\n          \"userPin\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RequestWrapperCryptoWithPinRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/CryptoWithPinRequestDto\"\n          }\n        }\n      },\n      \"CryptoWithPinResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperCryptoWithPinResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/CryptoWithPinResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"RequestWrapperTpmSignVerifyRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/TpmSignVerifyRequestDto\"\n          }\n        }\n      },\n      \"TpmSignVerifyRequestDto\": {\n        \"required\": [\n          \"data\",\n          \"publicKey\",\n          \"signature\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"type\": \"string\"\n          },\n          \"signature\": {\n            \"type\": \"string\"\n          },\n          \"publicKey\": {\n            \"type\": \"string\"\n          },\n          \"tpm\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"ResponseWrapperTpmSignVerifyResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/TpmSignVerifyResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"TpmSignVerifyResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"verified\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"RequestWrapperTpmSignRequestDto\": {\n        \"required\": [\n          \"request\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"requesttime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"request\": {\n            \"$ref\": \"#/components/schemas/TpmSignRequestDto\"\n          }\n        }\n      },\n      \"TpmSignRequestDto\": {\n        \"required\": [\n          \"data\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponseWrapperTpmSignResponseDto\": {\n        \"required\": [\n          \"response\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"responsetime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"type\": \"object\"\n          },\n          \"response\": {\n            \"$ref\": \"#/components/schemas/TpmSignResponseDto\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ServiceError\"\n            }\n          }\n        }\n      },\n      \"TpmSignResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/mosip/documentation@80c18e5b360ae9106b6b1bd68f7f81d0dd3952ce/-/blob/api/kernel-keymanager-service-openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/mosip/documentation/blob/80c18e5b360ae9106b6b1bd68f7f81d0dd3952ce/api/kernel-keymanager-service-openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/tokenid/{uin}/{partnercode}\": get: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}