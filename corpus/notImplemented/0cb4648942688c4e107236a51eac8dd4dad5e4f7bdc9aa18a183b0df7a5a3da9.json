{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/austin-millan/tdameritrade-openapi"
		},
		"file": {
			"name": "swagger.yml",
			"size": 0,
			"path": "swagger.yml",
			"byteSize": 149598,
			"content": "openapi: 3.0.0\ninfo:\n  description: TD Ameritrade API\n  version: 3.0.1\n  title: TD Ameritrade API\n  termsOfService: https://developer.tdameritrade.com/legal\n  contact:\n    email: austin.millan@gmail.com\nservers:\n  - url: https://api.tdameritrade.com/v2\n  - url: http://api.tdameritrade.com/v2\nexternalDocs:\n  description: Find out more about Swagger\n  url: http://swagger.io\npaths:\n  \"/accounts/{accountId}/orders/{orderId}\":\n    delete:\n      tags:\n        - Accounts and Trading\n      summary: Cancel Order\n      description: \"Cancel a specific order for a specific account. \"\n      operationId: cancelOrder\n      parameters:\n        - name: accountId\n          in: path\n          description: Account Number\n          required: true\n          schema:\n            type: integer\n            format: string\n        - name: orderId\n          in: path\n          description: Order Number\n          required: true\n          schema:\n            type: integer\n            format: int64\n            maximum: 0\n      responses:\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken in the HTTP authorization request header.\n        \"403\":\n          description: An error message indicating the caller is forbidden from accessing this page.\n        \"404\":\n          description: An error message if the order was not found.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n      security:\n        - Bearer: []\n    put:\n      tags:\n        - Accounts and Trading\n      summary: Replace Order\n      description: Replace an existing order for an account. The existing order will be\n        replaced by the new order. Once replaced, the old order will be canceled\n        and a new order will be created.\n      operationId: replaceOrder\n      parameters:\n        - name: accountId\n          in: path\n          description: Account Number\n          required: true\n          schema:\n            type: integer\n            format: string\n        - name: orderId\n          in: path\n          description: Order Number\n          required: true\n          schema:\n            type: integer\n            format: int64\n            maximum: 0\n      requestBody:\n        $ref: \"#/components/requestBodies/Order\"\n      responses:\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken in the HTTP authorization request header.\n        \"403\":\n          description: An error message indicating the caller is forbidden from accessing this page.\n        \"404\":\n          description: An error message if the order was not found.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n      security:\n        - Bearer: []\n    get:\n      tags:\n        - Accounts and Trading\n      summary: Get Order\n      description: Get a specific order for a specific account.\n      operationId: getOrder\n      parameters:\n        - name: accountId\n          in: path\n          description: Account Number\n          required: true\n          schema:\n            type: integer\n            format: string\n        - name: orderId\n          in: path\n          description: Order Number\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: A Order object\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken in the HTTP authorization request header.\n        \"403\":\n          description: An error message indicating the caller is forbidden from accessing this page.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n      security:\n        - Bearer: []\n  \"/accounts/{accountId}/orders\":\n    get:\n      tags:\n        - Accounts and Trading\n      summary: Get Orders By Path\n      description: Orders for a specific account.\n      operationId: getOrdersByPath\n      parameters:\n        - name: accountId\n          in: path\n          description: Account Number\n          required: true\n          schema:\n            type: integer\n            format: string\n        - name: maxResults\n          in: query\n          description: The maximum number of orders to retrieve.\n          required: true\n          schema:\n            type: integer\n        - name: fromEnteredTime\n          in: query\n          description: Specifies that no orders entered before this time should be\n            returned. Valid ISO-8601 formats are  yyyy-MM-dd and\n            yyyy-MM-dd'T'HH:mm:ssz Date must be within 60 days from today's\n            date. 'toEnteredTime' must also be set.\n          required: true\n          schema:\n            type: string\n        - name: toEnteredTime\n          in: query\n          description: Specifies that no orders entered after this time should be\n            returned.Valid ISO-8601 formats are :yyyy-MM-dd and\n            yyyy-MM-dd'T'HH:mm:ssz. 'fromEnteredTime' must also be set.\n          required: true\n          schema:\n            type: string\n            format: string\n            maximum: 0\n        - name: status\n          in: query\n          description: The maximum number of orders to retrieve.\n          required: true\n          schema:\n            type: integer\n            format: int64\n            maximum: 0\n      responses:\n        \"200\":\n          description: A Order object\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken in the HTTP authorization request header.\n        \"403\":\n          description: An error message indicating the caller is forbidden from accessing this page.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n      security:\n        - Bearer: []\n    post:\n      tags:\n        - Accounts and Trading\n      summary: Place Order\n      description: Place an order for a specific account.\n      operationId: placeOrder\n      parameters:\n        - name: accountId\n          in: path\n          description: Account Number\n          required: true\n          schema:\n            type: integer\n            format: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Order\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"403\":\n          description: An error message indicating the caller is forbidden from accessing this page.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n      security:\n        - Bearer: []\n  /orders:\n    get:\n      tags:\n        - Accounts and Trading\n      summary: Get Orders By Query\n      description: All orders for a specific account or, if account ID isn't specified,\n        orders will be returned for all linked accounts\n      operationId: getOrdersByQuery\n      parameters:\n        - name: accountId\n          in: query\n          description: Account Number\n          required: true\n          schema:\n            type: integer\n            format: string\n        - name: maxResults\n          in: query\n          description: The maximum number of orders to retrieve.\n          required: true\n          schema:\n            type: integer\n        - name: fromEnteredTime\n          in: query\n          description: Specifies that no orders entered before this time should be\n            returned. Valid ISO-8601 formats are  yyyy-MM-dd and\n            yyyy-MM-dd'T'HH:mm:ssz Date must be within 60 days from today's\n            date. 'toEnteredTime' must also be set.\n          required: true\n          schema:\n            type: string\n        - name: toEnteredTime\n          in: query\n          description: Specifies that no orders entered after this time should be\n            returned.Valid ISO-8601 formats are :yyyy-MM-dd and\n            yyyy-MM-dd'T'HH:mm:ssz. 'fromEnteredTime' must also be set.\n          required: true\n          schema:\n            type: string\n            format: string\n            maximum: 0\n        - name: status\n          in: query\n          description: The maximum number of orders to retrieve.\n          required: true\n          schema:\n            type: integer\n            format: int64\n            maximum: 0\n      responses:\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"403\":\n          description: An error message indicating the caller is forbidden from accessing this page.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n      security:\n        - Bearer: []\n  \"/accounts/{accountId}/savedorders\":\n    get:\n      tags:\n        - Accounts and Trading\n      summary: Get Saved Orders by Path\n      description: Saved orders for a specific account.\n      operationId: getSavedOrdersByPath\n      parameters:\n        - name: accountId\n          in: path\n          description: Account Number\n          required: true\n          schema:\n            type: integer\n            format: string\n      responses:\n        \"200\":\n          description: A Order object\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/SavedOrder\"\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"403\":\n          description: An error message indicating the caller is forbidden from accessing this page.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n      security:\n        - Bearer: []\n    post:\n      tags:\n        - Accounts and Trading\n      summary: Create Saved Order\n      description: \"Save an order for a specific account. \"\n      operationId: saveOrder\n      parameters:\n        - name: accountId\n          in: path\n          description: Account Number\n          required: true\n          schema:\n            type: integer\n            format: string\n        - name: orderId\n          in: path\n          description: Order Number\n          required: true\n          schema:\n            type: integer\n            format: int64\n            maximum: 0\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SavedOrder\"\n        description: The order to save.\n      responses:\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"403\":\n          description: An error message indicating the caller is forbidden from accessing this page.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n      security:\n        - Bearer: []\n  \"/accounts/{accountId}/savedorders/{savedOrderId}\":\n    delete:\n      tags:\n        - Accounts and Trading\n      summary: Delete Saved Order\n      description: Delete a specific saved order for a specific account.\n      operationId: deleteSavedOrder\n      parameters:\n        - name: accountId\n          in: path\n          description: Account Number\n          required: true\n          schema:\n            type: integer\n            format: string\n        - name: savedOrderId\n          in: path\n          description: Order Number\n          required: true\n          schema:\n            type: integer\n            format: int64\n            maximum: 0\n      responses:\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"403\":\n          description: An error message indicating the caller is forbidden from accessing this page.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n      security:\n        - Bearer: []\n    get:\n      tags:\n        - Accounts and Trading\n      summary: Get Saved Order\n      description: Specific saved order by its ID, for a specific account.\n      operationId: getSavedOrder\n      parameters:\n        - name: accountId\n          in: path\n          description: Account Number\n          required: true\n          schema:\n            type: integer\n            format: string\n        - name: savedOrderId\n          in: path\n          description: Order Number\n          required: true\n          schema:\n            type: integer\n            format: int64\n            maximum: 0\n      responses:\n        \"200\":\n          description: A Order object\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"403\":\n          description: An error message indicating the caller is forbidden from accessing this page.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n      security:\n        - Bearer: []\n    put:\n      tags:\n        - Accounts and Trading\n      summary: Replace Saved Order\n      description: Replace an existing saved order for an account. The existing saved order\n        will be replaced by the new order.\n      operationId: replaceSavedOrder\n      parameters:\n        - name: accountId\n          in: path\n          description: Account Number\n          required: true\n          schema:\n            type: integer\n            format: string\n        - name: savedOrderId\n          in: path\n          description: Order Number\n          required: true\n          schema:\n            type: integer\n            format: int64\n            maximum: 0\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SavedOrder\"\n        description: The order to place.\n      responses:\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"403\":\n          description: An error message indicating the caller is forbidden from accessing this page.\n        \"404\":\n          description: An error message if the order was not found.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n      security:\n        - Bearer: []\n  \"/accounts/{accountId}\":\n    get:\n      tags:\n        - Accounts and Trading\n      summary: Get Account\n      description: Account balances, positions, and orders for a specific account.\n      operationId: getAccount\n      parameters:\n        - name: accountId\n          in: path\n          description: Account Number\n          required: true\n          schema:\n            type: integer\n            format: string\n      responses:\n        \"200\":\n          description: A Account Object\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Account\"\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"403\":\n          description: An error message indicating the caller is forbidden from accessing this page.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n      security:\n        - Bearer: []\n  /accounts:\n    get:\n      tags:\n        - Accounts and Trading\n      summary: Get Accounts\n      description: Account balances, positions, and orders for a specific account.\n      operationId: getAccounts\n      responses:\n        \"200\":\n          description: A Account Object\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Account\"\n        \"207\":\n          description: Indicates there was a problem getting account data for one or more linked accounts, but the accounts who's data returned successfully is in the response. Do not aggregate balances and positions for this case.\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"403\":\n          description: An error message indicating the caller is forbidden from accessing this page.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n      security:\n        - Bearer: []\n  /oath2/token:\n    post:\n      tags:\n        - Authentication\n      summary: Post Access Token\n      description: The token endpoint returns an access token along with an optional\n        refresh token.\n      operationId: postAccessToken\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EASObject\"\n        description: The access token.\n      responses:\n        \"200\":\n          description: A EASObject Object\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EASObject\"\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"403\":\n          description: An error message indicating the caller is forbidden from accessing this page.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n        \"503\":\n          description: An error message indicating there is a temporary problem responding.\n      security:\n        - Bearer: []\n  /instruments:\n    get:\n      tags:\n        - Instruments\n      summary: Search for instrument and fundamental data\n      description: Search or retrieve instrument data, including fundamental data.\n      operationId: searchInstruments\n      parameters:\n        - name: apikey\n          in: query\n          description: API Key\n          required: true\n          schema:\n            type: string\n        - name: symbol\n          in: query\n          description: Value to pass to the search. See projection description for more information.\n          required: true\n          schema:\n            type: string\n        - name: projection \n          in: query\n          description: \"The type of request:symbol-search: Retrieve instrument data of a specific symbol or cusip\\nsymbol-regex: Retrieve instrument data for all symbols matching regex. Example: symbol=XYZ.* will return all symbols beginning with XYZ\\ndesc-search: Retrieve instrument data for instruments whose description contains the word supplied. Example: symbol=FakeCompany will return all instruments with FakeCompany in the description.\\ndesc-regex: Search description with full regex support. Example: symbol=XYZ.[A-C] returns all instruments whose descriptions contain a word beginning with XYZ followed by a character A through C. \\nfundamental: Returns fundamental data for a single instrument specified by exact symbol.\"\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Instruments List\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  allOf:\n                  - properties:\n                      Bond:\n                        $ref: '#/components/schemas/Bond'\n                  - properties:\n                      FundamentalData:\n                        $ref: '#/components/schemas/FundamentalData'\n                  - properties:\n                      FundamentalData:\n                        $ref: '#/components/schemas/FundamentalData'\n                  - properties:\n                      Fundamental:\n                        $ref: '#/components/schemas/Fundamental'\n                  - properties:\n                      Instrument:\n                        $ref: '#/components/schemas/Instrument'\n        \"400\":\n          description: An error message indicating the caller must pass a non null value in the parameter.\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: An error message indicating the instrument for the symbol/cusip was not found.\n        \"406\":\n          description: An error message indicating an issue in the symbol regex, or number of symbols searched is over the maximum.\n      security:\n        - Bearer: []\n  /instruments/{accountId}:\n    get:\n      tags:\n        - Instruments\n      summary: Search for instrument and fundamental data\n      description: Search or retrieve instrument data, including fundamental data.\n      operationId: getInstrument\n      parameters:\n        - name: accountId\n          in: path\n          description: Account ID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Instruments List\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  allOf:\n                  - properties:\n                      Bond:\n                        $ref: '#/components/schemas/Bond'\n                  - properties:\n                      FundamentalData:\n                        $ref: '#/components/schemas/FundamentalData'\n                  - properties:\n                      FundamentalData:\n                        $ref: '#/components/schemas/FundamentalData'\n                  - properties:\n                      Fundamental:\n                        $ref: '#/components/schemas/Fundamental'\n                  - properties:\n                      Instrument:\n                        $ref: '#/components/schemas/Instrument'\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: An error message indicating the instrument for the symbol/cusip was not found.\n      security:\n        - Bearer: []\n  /marketdata/hours:\n    get:\n      tags:\n        - Market Hours\n      summary: Operating hours of markets\n      description: Retrieve market hours for specified markets\n      operationId: getHours\n      parameters:\n        - name: apikey\n          in: query\n          description: API Key\n          required: true\n          schema:\n            type: string\n        - name: markets\n          in: query\n          description: The markets for which you're requesting market hours, comma-separated. Valid markets are EQUITY, OPTION, FUTURE, BOND, or FOREX.\n          required: true\n          schema:\n            type: string\n        - name: date\n          in: query\n          description: \"The date for which market hours information is requested. Valid ISO-8601 formats are : yyyy-MM-dd and yyyy-MM-dd'T'HH:mm:ssz.\"\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Instruments List\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Hours\"\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"404\":\n          description: Not Found\n      security:\n        - Bearer: []\n  /marketdata/{market}/hours:\n    get:\n      tags:\n        - Market Hours\n      summary: Operating hours of markets\n      description: Retrieve market hours for specified single market\n      operationId: getMarketHours\n      parameters:\n        - name: apikey\n          in: query\n          description: API Key\n          required: true\n          schema:\n            type: string\n        - name: market\n          in: path\n          description: The markets for which you're requesting market hours, comma-separated. Valid markets are EQUITY, OPTION, FUTURE, BOND, or FOREX.\n          required: true\n          schema:\n            type: string\n        - name: date\n          in: query\n          description: \"The date for which market hours information is requested. Valid ISO-8601 formats are : yyyy-MM-dd and yyyy-MM-dd'T'HH:mm:ssz.\"\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Instruments List\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Hours\"\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"404\":\n          description: Not Found\n      security:\n        - Bearer: []\n  /marketdata/{index}/movers:\n    get:\n      tags:\n        - Movers\n      summary: Retrieve mover information by index symbol, direction type and change\n      description: Top 10 (up or down) movers by value or percent for a particular market\n      operationId: getMovers\n      parameters:\n        - name: apikey\n          in: query\n          description: API Key\n          required: true\n          schema:\n            type: string\n        - name: index\n          in: path\n          description: The index symbol to get movers from.\n          required: true\n          schema:\n            type: string\n        - name: direction\n          in: query\n          description: \"To return movers with the specified directions of up or down.\"\n          required: true\n          schema:\n            type: string\n            example: \"'up' or 'down'\"\n        - name: change\n          in: query\n          description: \"To return movers with the specified change types of percent or value.\"\n          required: true\n          schema:\n            type: string\n            example: \"'percent' or 'value'\"\n      responses:\n        \"200\":\n          description: Instruments List\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Mover\"\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      security:\n        - Bearer: []\n        \n  /marketdata/chains:\n    get:\n      tags:\n        - Option Chains\n      summary: Get Option Chains for optionable symbols\n      description: Get option chain for an optionable Symbol\n      operationId: getOptionChains\n      parameters:\n        - name: apikey\n          in: query\n          description: API Key\n          required: true\n          schema:\n            type: string\n        - name: symbol\n          in: query\n          description: Enter one symbol\n          required: true\n          schema:\n            type: string\n        - name: contractType\n          in: query\n          description: Type of contracts to return in the chain. Can be CALL, PUT, or ALL. Default is ALL.\n          required: true\n          schema:\n            $ref: \"#/components/schemas/PutOrCall\"\n        - name: strikeCount\n          in: query\n          description: The number of strikes to return above and below the at-the-money price.\n          required: true\n          schema:\n            type: string\n        - name: includeQuotes\n          in: query\n          description: \"Include quotes for options in the option chain. Can be TRUE or FALSE. Default is FALSE.\"\n          required: true\n          schema:\n            type: string\n            example: \"'TRUE' or 'FALSE'\"\n        - name: strategy\n          in: query\n          description: \"Passing a value returns a Strategy Chain. Possible values are SINGLE, ANALYTICAL (allows use of the volatility, underlyingPrice, interestRate, and daysToExpiration params to calculate theoretical values), COVERED, VERTICAL, CALENDAR, STRANGLE, STRADDLE, BUTTERFLY, CONDOR, DIAGONAL, COLLAR, or ROLL. Default is SINGLE.\"\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Strategy\"\n      responses:\n        \"200\":\n          description: Instruments List\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  allOf:\n                  - properties:\n                      OptionChain:\n                        $ref: '#/components/schemas/OptionChain'\n                  - properties:\n                      StrikePriceMap:\n                        $ref: '#/components/schemas/StrikePriceMap'\n                  - properties:\n                      Option:\n                        $ref: '#/components/schemas/Option'\n                  - properties:\n                      Underlying:\n                        $ref: '#/components/schemas/Underlying'\n                  - properties:\n                      ExpirationDate:\n                        $ref: '#/components/schemas/ExpirationDate'\n                  - properties:\n                      OptionDeliverables:\n                        $ref: '#/components/schemas/OptionDeliverables'\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: An error message indicating internal error in the service.\n      security:\n        - Bearer: []\n        \n  /marketdata/{symbol}/pricehistory:\n    get:\n      tags:\n        - Price History\n      summary: Historical price data for charts\n      description: Get price history for a symbol\n      operationId: getPriceHistory\n      parameters:\n        - name: apikey\n          in: query\n          description: API Key\n          required: true\n          schema:\n            type: string\n        - name: symbol\n          in: path\n          description: Enter one symbol\n          required: true\n          schema:\n            type: string\n        - name: periodType\n          in: query\n          description: The type of period to show. Valid values are day, month, year, or ytd (year to date). Default is day.\n          required: true\n          schema:\n            type: string\n            example: \"'day' or 'month' or 'year' or 'ytd'\"\n        - name: period\n          in: query\n          description: \"The number of periods to show.\\n\\nExample: For a 2 day / 1 min chart, the values would be:\\nperiod: 2\\nperiodType: day\\nfrequency: 1\\nfrequencyType: min\\nValid periods by periodType (defaults marked with an asterisk):\\nday: 1, 2, 3, 4, 5, 10*\\nmonth: 1*, 2, 3, 6\\nyear: 1*, 2, 3, 5, 10, 15, 20\\nytd: 1*\"\n          required: true\n          schema:\n            type: integer\n        - name: frequencyType\n          in: query\n          description: \"The type of frequency with which a new candle is formed.\\n\\nValid frequencyTypes by periodType (defaults marked with an asterisk):\\n\\nday: minute*\\nmonth: daily, weekly*\\nyear: daily, weekly, monthly*\\nytd: daily, weekly*\\n\"\n          required: true\n          schema:\n            type: string\n        - name: frequency\n          in: query\n          description: \"The number of the frequencyType to be included in each candle.\\n\\nValid frequencies by frequencyType (defaults marked with an asterisk):\\n\\nminute: 1*, 5, 10, 15, 30\\ndaily: 1*\\nweekly: 1*\\nmonthly: 1*\\n\"\n          required: true\n          schema:\n            type: integer\n        - name: endDate\n          in: query\n          description: \"End date as milliseconds since epoch. If startDate and endDate are provided, period should not be provided. Default is previous trading day.\"\n          required: true\n          schema:\n            type: string\n        - name: startDate\n          in: query\n          description: \"Start date as milliseconds since epoch. If startDate and endDate are provided, period should not be provided.\"\n          required: true\n          schema:\n            type: string\n        - name: needExtendedHoursData\n          in: query\n          description: \"true to return extended hours data, false for regular market hours only. Default is true\"\n          required: true\n          schema:\n            type: boolean\n            example: \"x\"\n        - name: x\n          in: query\n          description: \"x\"\n          required: true\n          schema:\n            type: string\n            example: \"x\"\n      responses:\n        \"200\":\n          description: Instruments List\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CandleList\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"500\":\n          description: Not Found\n      security:\n        - Bearer: []\n  /marketdata/{symbol}/quotes:\n    get:\n      tags:\n        - Quotes\n      summary: Search for instrument and fundamental data\n      description: Get quote for a symbol.\n      operationId: getQuote\n      parameters:\n        - name: symbol\n          in: path\n          description: Account ID\n          required: true\n          schema:\n            type: string\n        - name: apiKey\n          in: query\n          description: API Key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Instruments List\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  allOf:\n                  - properties:\n                      MutualFund:\n                        $ref: '#/components/schemas/MutualFund'\n                  - properties:\n                      FutureOptions:\n                        $ref: '#/components/schemas/FutureOptions'\n                  - properties:\n                      Option:\n                        $ref: '#/components/schemas/Option'\n                  - properties:\n                      Forex:\n                        $ref: '#/components/schemas/Forex'\n                  - properties:\n                      ETF:\n                        $ref: '#/components/schemas/ETF'\n                  - properties:\n                      Equity:\n                        $ref: '#/components/schemas/Equity'\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"403\":\n          description: An error message indicating the caller is forbidden from accessing this page.\n        \"404\":\n          description: An error message indicating the instrument for the symbol/cusip was not found.\n      security:\n        - Bearer: []\n  /marketdata/quotes:\n    get:\n      tags:\n        - Quotes\n      summary: Search for instrument and fundamental data\n      description: Get quote for one or more symbols.\n      operationId: getQuotes\n      parameters:\n        - name: apiKey\n          in: query\n          description: API Key\n          required: true\n          schema:\n            type: string\n        - name: symbol\n          in: query\n          description: Symbol to search for\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Instruments List\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  allOf:\n                  - properties:\n                      MutualFund:\n                        $ref: '#/components/schemas/MutualFund'\n                  - properties:\n                      FutureOptions:\n                        $ref: '#/components/schemas/FutureOptions'\n                  - properties:\n                      Option:\n                        $ref: '#/components/schemas/Option'\n                  - properties:\n                      Forex:\n                        $ref: '#/components/schemas/Forex'\n                  - properties:\n                      ETF:\n                        $ref: '#/components/schemas/ETF'\n                  - properties:\n                      Equity:\n                        $ref: '#/components/schemas/Equity'\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"403\":\n          description: An error message indicating the caller is forbidden from accessing this page.\n        \"404\":\n          description: An error message indicating the instrument for the symbol/cusip was not found.\n        \"406\":\n          description: An error message indicating an issue in the symbol regex, or number of symbols searched is over the maximum.\n      security:\n        - Bearer: []\n  /accounts/{accountId}/transactions/{transactionId}:\n    get:\n      tags:\n        - Transaction History\n      summary: APIs to access transaction history on the account\n      description: Transaction for a specific account.\n      operationId: getTransaction\n      parameters:\n        - name: accountId\n          in: path\n          description: Account ID\n          required: true\n          schema:\n            type: string\n        - name: transactionId\n          in: path\n          description: Transaction ID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Instruments List\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Transaction\"\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"403\":\n          description: An error message indicating the caller doesn't have access to the account in the request.\n        \"404\":\n          description: An error message indicating the specified transaction could not be found.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n        \"503\":\n          description: An error message indicating there is a temporary problem responding.\n      security:\n        - Bearer: []\n  /accounts/{accountId}/transactions:\n    get:\n      tags:\n        - Transaction History\n      summary: APIs to access transaction history on the account\n      description: Transactions for a specific account.\n      operationId: getTransactions\n      parameters:\n        - name: accountId\n          in: path\n          description: Account ID\n          required: true\n          schema:\n            type: string\n        - name: type\n          in: query\n          description: Only transactions with the specified type will be returned.\n          required: true\n          schema:\n            $ref:  \"#/components/schemas/TransactionType\"\n        - name: symbol\n          in: query\n          description: Only transactions with the specified symbol will be returned.\n          required: true\n          schema:\n            type: string\n        - name: startDate\n          in: query\n          description: \"Only transactions after the Start Date will be returned. Note: The maximum date range is one year. Valid ISO-8601 formats are: yyyy-MM-dd.\"\n          required: true\n          schema:\n            type: string\n        - name: endDate\n          in: query\n          description: \"Only transactions before the End Date will be returned. Note: The maximum date range is one year. Valid ISO-8601 formats are: yyyy-MM-dd.\"\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Instruments List\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Transaction\"\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"403\":\n          description: An error message indicating the caller doesn't have access to the account in the request.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n        \"503\":\n          description: An error message indicating there is a temporary problem responding.\n      security:\n        - Bearer: []\n  /accounts/{accountId}/preferences:\n    get:\n      tags:\n        - User Info \u0026 Preferences\n      summary: APIs to access user-authorized accounts and their preferences\n      description: Preferences for a specific account.\n      operationId: getPreferences\n      parameters:\n        - name: accountId\n          in: path\n          description: Account ID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Preferences\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Preferences\"\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n        \"503\":\n          description: An error message indicating there is a temporary problem responding.\n      security:\n        - Bearer: []\n    put:\n      tags:\n        - User Info \u0026 Preferences\n      summary: APIs to access user-authorized accounts and their preferences\n      description: Update preferences for a specific account. Please note that the directOptionsRouting and directEquityRouting values cannot be modified via this operation\n      operationId: updatePreferences\n      parameters:\n        - name: accountId\n          in: path\n          description: Account ID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdatePreferences\"\n      responses:\n        \"200\":\n          description: Preferences\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Preferences\"\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"403\":\n          description: An error message indicating the caller is forbidden from accessing this resource.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n        \"503\":\n          description: An error message indicating there is a temporary problem responding.\n      security:\n        - Bearer: []\n  /userprincipals/streamersubscriptionkeys:\n    get:\n      tags:\n        - User Info \u0026 Preferences\n      summary: APIs to access user-authorized accounts and their preferences\n      description: SubscriptionKey for provided accounts or default accounts.\n      operationId: getStreamerSubscriptionKeys\n      parameters:\n        - name: accountIds\n          in: query\n          description: Account IDs\n          required: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: Preferences\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SubscriptionKey\"\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n        \"503\":\n          description: An error message indicating there is a temporary problem responding.\n      security:\n        - Bearer: []\n  /userprincipals:\n    get:\n      tags:\n        - User Info \u0026 Preferences\n      summary: APIs to access user-authorized accounts and their preferences\n      description: User Principal details.\n      operationId: getUserPrincipals\n      parameters:\n        - name: fields\n          in: query\n          description: \"A comma separated String which allows one to specify additional fields to return. None of these fields are returned by default. Possible values in this String can be: streamerSubscriptionKeys,\\nstreamerConnectionInfo,\\npreferences,\\nsurrogateIds\"\n          required: true\n          schema:\n            type: array\n            items:\n              type: string\n              example: \"fields=streamerSubscriptionKeys,streamerConnectionInfo\"\n      responses:\n        \"200\":\n          description: Preferences\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserPrincipal\"\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n        \"503\":\n          description: An error message indicating there is a temporary problem responding.\n      security:\n        - Bearer: []\n  /accounts/{accountId}/watchlists:\n    post:\n      tags:\n        - Watchlist\n      summary: APIs to perform CRUD operations on Account Watchlist\n      description: Create watchlist for specific account.This method does not verify that the symbol or asset type are valid.\n      operationId: createWatchlist\n      parameters:\n        - name: accountId\n          in: path\n          description: Account ID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateWatchlist\"\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n      security:\n        - Bearer: []\n    get:\n      tags:\n        - Watchlist\n      summary: APIs to perform CRUD operations on Account Watchlist\n      description: All watchlists of an account.\n      operationId: getWatchlistSingleAccount\n      parameters:\n        - name: accountId\n          in: path\n          description: Account ID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Watchlist'\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n      security:\n        - Bearer: []\n  /accounts/{accountId}/watchlists/{watchlistId}:\n    delete:\n      tags:\n        - Watchlist\n      summary: APIs to perform CRUD operations on Account Watchlist\n      description: Delete watchlist for a specific account. This method does not verify that the symbol or asset type are valid.\n      operationId: deleteWatchlist\n      parameters:\n        - name: accountId\n          in: path\n          description: Account ID\n          required: true\n          schema:\n            type: string\n        - name: watchlistId\n          in: path\n          description: Watchlist ID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n        \"204\":\n          description: Watchlist deleted.\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n      security:\n        - Bearer: []\n    put:\n      tags:\n        - Watchlist\n      summary: APIs to perform CRUD operations on Account Watchlist\n      description: Replace watchlist for specific account. This method does not verify that the symbol or asset type are valid.\n      operationId: replaceWatchlist\n      parameters:\n        - name: accountId\n          in: path\n          description: Account ID\n          required: true\n          schema:\n            type: string\n        - name: watchlistId\n          in: path\n          description: Watchlist ID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateWatchlist\"\n      responses:\n        \"200\":\n          description: OK\n        \"204\":\n          description: Watchlist updated.\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n      security:\n        - Bearer: []\n    patch:\n      tags:\n        - Watchlist\n      summary: APIs to perform CRUD operations on Account Watchlist\n      description: \"Partially update watchlist for a specific account: change watchlist name, add to the beginning/end of a watchlist, update or delete items in a watchlist. This method does not verify that the symbol or asset type are valid.\"\n      operationId: updateWatchlist\n      parameters:\n        - name: accountId\n          in: path\n          description: Account ID\n          required: true\n          schema:\n            type: string\n        - name: watchlistId\n          in: path\n          description: Watchlist ID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateWatchlist\"\n      responses:\n        \"200\":\n          description: OK\n        \"204\":\n          description: Watchlist updated.\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n      security:\n        - Bearer: []\n    get:\n      tags:\n        - Watchlist\n      summary: APIs to perform CRUD operations on Account Watchlist\n      description: Specific watchlist for a specific account.\n      operationId: getWatchlist\n      parameters:\n        - name: accountId\n          in: path\n          description: Account ID\n          required: true\n          schema:\n            type: string\n        - name: watchlistId\n          in: path\n          description: Watchlist ID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Watchlist'\n        \"400\":\n          description: An error message indicating the validation problem with the request.\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"404\":\n          description: An error message indicating the account or the watchlist ID does not exist.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n      security:\n        - Bearer: []\n\n  /accounts/watchlists:\n    get:\n      tags:\n        - Watchlist\n      summary: APIs to perform CRUD operations on Account Watchlist\n      description: All watchlists for all of the user's linked accounts.\n      operationId: getWatchlistMultipleAccounts\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Watchlist'\n        \"401\":\n          description: An error message indicating the caller must pass a valid AuthToken\n            in the HTTP authorization request header.\n        \"500\":\n          description: An error message indicating there was an unexpected server error.\n      security:\n        - Bearer: []\ncomponents:\n  requestBodies:\n    Order:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Order\"\n      description: The order to place.\n  securitySchemes:\n    Bearer:\n      type: apiKey\n      name: Authorization\n      in: header\n  schemas:\n    Account:\n      properties:\n        securitiesAccount:\n          $ref: '#/components/schemas/AccountType'\n      type: object\n    AccountType:\n      oneOf:\n        - $ref: '#/components/schemas/CashAccount'\n        - $ref: '#/components/schemas/MarginAccount'\n      type: object\n    AssetType:\n      enum:\n        - EQUITY\n        - OPTION\n        - FUTURE_OPTION\n        - INDICATOR\n        - FOREX\n        - MUTUAL_FUND\n        - INDEX\n        - CASH_EQUIVALENT\n        - FIXED_INCOME\n        - CURRENCY\n        - ETF\n        - BOND\n        - UNKNOWN\n      example: '''EQUITY'' or ''OPTION'' or ''INDEX'' or ''MUTUAL_FUND'' or ''CASH_EQUIVALENT'' or ''FIXED_INCOME'' or ''CURRENCY'''\n      type: string\n    Bond:\n      properties:\n        assetType:\n          $ref: '#/components/schemas/AssetType'\n        bondPrice:\n          example: 0\n          type: number\n        cusip:\n          example: string\n          type: string\n        description:\n          example: string\n          type: string\n        exchange:\n          example: string\n          type: string\n        symbol:\n          example: string\n          type: string\n      type: object\n    CandleList:\n      properties:\n        candles:\n          items:\n            properties:\n              close:\n                example: 0\n                type: number\n              datetime:\n                example: 0\n                type: number\n              high:\n                example: 0\n                type: number\n              low:\n                example: 0\n                type: number\n              open:\n                example: 0\n                type: number\n              volume:\n                example: 0\n                type: number\n            type: object\n          type: array\n        empty:\n          type: boolean\n        symbol:\n          example: string\n          type: string\n      type: object\n    CashAccount:\n      properties:\n        accountId:\n          example: string\n          type: string\n        currentBalances:\n          properties:\n            accruedInterest:\n              example: 0\n              type: number\n            bondValue:\n              example: 0\n              type: number\n            cashAvailableForTrading:\n              example: 0\n              type: number\n            cashAvailableForWithdrawal:\n              example: 0\n              type: number\n            cashBalance:\n              example: 0\n              type: number\n            cashCall:\n              example: 0\n              type: number\n            cashDebitCallValue:\n              example: 0\n              type: number\n            cashReceipts:\n              example: 0\n              type: number\n            liquidationValue:\n              example: 0\n              type: number\n            longMarketValue:\n              example: 0\n              type: number\n            longNonMarginableMarketValue:\n              example: 0\n              type: number\n            longOptionMarketValue:\n              example: 0\n              type: number\n            moneyMarketFund:\n              example: 0\n              type: number\n            mutualFundValue:\n              example: 0\n              type: number\n            pendingDeposits:\n              example: 0\n              type: number\n            savings:\n              example: 0\n              type: number\n            shortMarketValue:\n              example: 0\n              type: number\n            shortOptionMarketValue:\n              example: 0\n              type: number\n            totalCash:\n              example: 0\n              type: number\n            unsettledCash:\n              example: 0\n              type: number\n          type: object\n        initialBalances:\n          properties:\n            accountValue:\n              example: 0\n              type: number\n            accruedInterest:\n              example: 0\n              type: number\n            bondValue:\n              example: 0\n              type: number\n            cashAvailableForTrading:\n              example: 0\n              type: number\n            cashAvailableForWithdrawal:\n              example: 0\n              type: number\n            cashBalance:\n              example: 0\n              type: number\n            cashDebitCallValue:\n              example: 0\n              type: number\n            cashReceipts:\n              example: 0\n              type: number\n            isInCall:\n              type: boolean\n            liquidationValue:\n              example: 0\n              type: number\n            longOptionMarketValue:\n              example: 0\n              type: number\n            longStockValue:\n              example: 0\n              type: number\n            moneyMarketFund:\n              example: 0\n              type: number\n            mutualFundValue:\n              example: 0\n              type: number\n            pendingDeposits:\n              example: 0\n              type: number\n            shortOptionMarketValue:\n              example: 0\n              type: number\n            shortStockValue:\n              example: 0\n              type: number\n            unsettledCash:\n              example: 0\n              type: number\n          type: object\n        isClosingOnlyRestricted:\n          type: boolean\n        isDayTrader:\n          type: boolean\n        orderStrategies:\n          items:\n            properties:\n              accountId:\n                example: 0\n                type: number\n              activationPrice:\n                example: 0\n                type: number\n              cancelTime:\n                properties:\n                  date:\n                    example: string\n                    type: string\n                  shortFormat:\n                    type: boolean\n                type: object\n              cancelable:\n                type: boolean\n              childOrderStrategies:\n                items:\n                  type: object\n                type: array\n              closeTime:\n                example: string\n                type: string\n              complexOrderStrategyType:\n                $ref: '#/components/schemas/ComplexOrderStrategyType'\n              destinationLinkName:\n                example: string\n                type: string\n              duration:\n                $ref: '#/components/schemas/Duration'\n              editable:\n                type: boolean\n              enteredTime:\n                example: string\n                type: string\n              filledQuantity:\n                example: 0\n                type: number\n              orderActivityCollection:\n                items:\n                  $ref: '#/components/schemas/Execution'\n                type: array\n              orderId:\n                example: 0\n                type: number\n              orderLegCollection:\n                items:\n                  properties:\n                    instruction:\n                      $ref: '#/components/schemas/Instruction'\n                    instrument:\n                      $ref: '#/components/schemas/InstrumentType'\n                    legId:\n                      example: 0\n                      type: number\n                    orderLegType:\n                      $ref: '#/components/schemas/AssetType'\n                    positionEffect:\n                      $ref: '#/components/schemas/PositionEffect'\n                    quantity:\n                      example: 0\n                      type: number\n                    quantityType:\n                      $ref: '#/components/schemas/QuantityType'\n                  type: object\n                type: array\n              orderStrategyType:\n                $ref: '#/components/schemas/OrderStrategyType'\n              orderType:\n                $ref: '#/components/schemas/OrderType'\n              price:\n                example: 0\n                type: number\n              priceLinkBasis:\n                $ref: '#/components/schemas/PriceLinkBasis'\n              priceLinkType:\n                $ref: '#/components/schemas/PriceLinkType'\n              quantity:\n                example: 0\n                type: number\n              releaseTime:\n                example: string\n                type: string\n              remainingQuantity:\n                example: 0\n                type: number\n              replacingOrderCollection:\n                items:\n                  type: object\n                type: array\n              requestedDestination:\n                $ref: '#/components/schemas/DestinationExchange'\n              session:\n                $ref: '#/components/schemas/Session'\n              specialInstruction:\n                $ref: '#/components/schemas/SpecialInstruction'\n              status:\n                $ref: '#/components/schemas/OrderStatus'\n              statusDescription:\n                example: string\n                type: string\n              stopPrice:\n                example: 0\n                type: number\n              stopPriceLinkBasis:\n                $ref: '#/components/schemas/PriceLinkBasis'\n              stopPriceLinkType:\n                $ref: '#/components/schemas/PriceLinkType'\n              stopPriceOffset:\n                example: 0\n                type: number\n              stopType:\n                $ref: '#/components/schemas/StopType'\n              tag:\n                example: string\n                type: string\n              taxLotMethod:\n                $ref: '#/components/schemas/TaxLotMethod'\n            type: object\n          type: array\n        positions:\n          items:\n            properties:\n              agedQuantity:\n                example: 0\n                type: number\n              averagePrice:\n                example: 0\n                type: number\n              currentDayProfitLoss:\n                example: 0\n                type: number\n              currentDayProfitLossPercentage:\n                example: 0\n                type: number\n              instrument:\n                $ref: '#/components/schemas/InstrumentType'\n              longQuantity:\n                example: 0\n                type: number\n              marketValue:\n                example: 0\n                type: number\n              settledLongQuantity:\n                example: 0\n                type: number\n              settledShortQuantity:\n                example: 0\n                type: number\n              shortQuantity:\n                example: 0\n                type: number\n            type: object\n          type: array\n        projectedBalances:\n          properties:\n            accruedInterest:\n              example: 0\n              type: number\n            bondValue:\n              example: 0\n              type: number\n            cashAvailableForTrading:\n              example: 0\n              type: number\n            cashAvailableForWithdrawal:\n              example: 0\n              type: number\n            cashBalance:\n              example: 0\n              type: number\n            cashCall:\n              example: 0\n              type: number\n            cashDebitCallValue:\n              example: 0\n              type: number\n            cashReceipts:\n              example: 0\n              type: number\n            liquidationValue:\n              example: 0\n              type: number\n            longMarketValue:\n              example: 0\n              type: number\n            longNonMarginableMarketValue:\n              example: 0\n              type: number\n            longOptionMarketValue:\n              example: 0\n              type: number\n            moneyMarketFund:\n              example: 0\n              type: number\n            mutualFundValue:\n              example: 0\n              type: number\n            pendingDeposits:\n              example: 0\n              type: number\n            savings:\n              example: 0\n              type: number\n            shortMarketValue:\n              example: 0\n              type: number\n            shortOptionMarketValue:\n              example: 0\n              type: number\n            totalCash:\n              example: 0\n              type: number\n            unsettledCash:\n              example: 0\n              type: number\n          type: object\n        roundTrips:\n          example: 0\n          type: number\n        type:\n          example: '''CASH'' or ''MARGIN'''\n          type: string\n      type: object\n    CashEquivalent:\n      properties:\n        assetType:\n          $ref: '#/components/schemas/AssetType'\n        cusip:\n          example: string\n          type: string\n        description:\n          example: string\n          type: string\n        symbol:\n          example: string\n          type: string\n        type:\n          example: '''SAVINGS'' or ''MONEY_MARKET_FUND'''\n          type: string\n      type: object\n    ComplexOrderStrategyType:\n      enum:\n        - NONE\n        - COVERED\n        - VERTICAL\n        - BACK_RATIO\n        - CALENDAR\n        - DIAGONAL\n        - STRADDLE\n        - STRANGLE\n        - COLLAR_SYNTHETIC\n        - BUTTERFLY\n        - CONDOR\n        - IRON_CONDOR\n        - VERTICAL_ROLL\n        - COLLAR_WITH_STOCK\n        - DOUBLE_DIAGONAL\n        - UNBALANCED_BUTTERFLY\n        - UNBALANCED_CONDOR\n        - UNBALANCED_IRON_CONDOR\n        - UNBALANCED_VERTICAL_ROLL\n        - CUSTOM\n      example: '''NONE'' or ''COVERED'' or ''VERTICAL'' or ''BACK_RATIO'' or ''CALENDAR'' or ''DIAGONAL'' or ''STRADDLE'' or ''STRANGLE'' or ''COLLAR_SYNTHETIC'' or ''BUTTERFLY'' or ''CONDOR'' or ''IRON_CONDOR'' or ''VERTICAL_ROLL'' or ''COLLAR_WITH_STOCK'' or ''DOUBLE_DIAGONAL'' or ''UNBALANCED_BUTTERFLY'' or ''UNBALANCED_CONDOR'' or ''UNBALANCED_IRON_CONDOR'' or ''UNBALANCED_VERTICAL_ROLL'' or ''CUSTOM'''\n      type: string\n    CreateWatchlist:\n      properties:\n        name:\n          example: string\n          type: string\n        watchlistItems:\n          items:\n            properties:\n              averagePrice:\n                example: 0\n                format: int32\n                type: integer\n              commission:\n                example: 0\n                format: int32\n                type: integer\n              instrument:\n                properties:\n                  assetType:\n                    $ref: '#/components/schemas/AssetType'\n                  symbol:\n                    example: string\n                    type: string\n                type: object\n              purchasedDate:\n                example: DateParam\n                type: string\n              quantity:\n                example: 0\n                format: int32\n                type: integer\n            type: object\n          type: array\n      type: object\n    CurrencyType:\n      enum:\n        - USD\n        - CAD\n        - EUR\n        - JPY\n      example: '''USD'' or ''CAD'' or ''EUR'' or ''JPY'''\n      type: string\n    DestinationExchange:\n      enum:\n        - INET\n        - ECN_ARCA\n        - CBOE\n        - AMEX\n        - PHLX\n        - ISE\n        - BOX\n        - NYSE\n        - NASDAQ\n        - BATS\n        - C2\n        - AUTO\n      example: '''INET'' or ''ECN_ARCA'' or ''CBOE'' or ''AMEX'' or ''PHLX'' or ''ISE'' or ''BOX'' or ''NYSE'' or ''NASDAQ'' or ''BATS'' or ''C2'' or ''AUTO'''\n      type: string\n    Duration:\n      enum:\n        - DAY\n        - GOOD_TILL_CANCEL\n        - FILL_OR_KILL\n      example: '''DAY'' or ''GOOD_TILL_CANCEL'' or ''FILL_OR_KILL'''\n      type: string\n    EASObject:\n      properties:\n        access_token:\n          example: string\n          type: string\n        expires_in:\n          example: 0\n          type: number\n        refresh_token:\n          example: string\n          type: string\n        refresh_token_expires_in:\n          example: 0\n          type: number\n        scope:\n          example: string\n          type: string\n        token_type:\n          example: string\n          type: string\n      type: object\n    ETF:\n      properties:\n        52WkHigh:\n          example: 0\n          type: number\n        52WkLow:\n          example: 0\n          type: number\n        askId:\n          example: string\n          type: string\n        askPrice:\n          example: 0\n          type: number\n        askSize:\n          example: 0\n          type: number\n        bidId:\n          example: string\n          type: string\n        bidPrice:\n          example: 0\n          type: number\n        bidSize:\n          example: 0\n          type: number\n        closePrice:\n          example: 0\n          type: number\n        description:\n          example: string\n          type: string\n        digits:\n          example: 0\n          type: number\n        divAmount:\n          example: 0\n          type: number\n        divDate:\n          example: string\n          type: string\n        divYield:\n          example: 0\n          type: number\n        exchange:\n          example: string\n          type: string\n        exchangeName:\n          example: string\n          type: string\n        highPrice:\n          example: 0\n          type: number\n        lastId:\n          example: string\n          type: string\n        lastPrice:\n          example: 0\n          type: number\n        lastSize:\n          example: 0\n          type: number\n        lowPrice:\n          example: 0\n          type: number\n        marginable:\n          type: boolean\n        mark:\n          example: 0\n          type: number\n        netChange:\n          example: 0\n          type: number\n        openPrice:\n          example: 0\n          type: number\n        peRatio:\n          example: 0\n          type: number\n        quoteTimeInLong:\n          example: 0\n          type: number\n        regularMarketLastPrice:\n          example: 0\n          type: number\n        regularMarketLastSize:\n          example: 0\n          type: number\n        regularMarketNetChange:\n          example: 0\n          type: number\n        regularMarketTradeTimeInLong:\n          example: 0\n          type: number\n        securityStatus:\n          example: string\n          type: string\n        shortable:\n          type: boolean\n        symbol:\n          example: string\n          type: string\n        totalVolume:\n          example: 0\n          type: number\n        tradeTimeInLong:\n          example: 0\n          type: number\n        volatility:\n          example: 0\n          type: number\n      type: object\n    Equity:\n      properties:\n        assetType:\n          $ref: '#/components/schemas/AssetType'\n        cusip:\n          example: string\n          type: string\n        description:\n          example: string\n          type: string\n        symbol:\n          example: string\n          type: string\n      type: object\n    EquityPriceLinkType:\n      enum:\n        - VALUE\n        - PERCENT\n      example: '''VALUE'' or ''PERCENT'''\n      type: string\n    Execution:\n      properties:\n        activityType:\n          example: '''EXECUTION'' or ''ORDER_ACTION'''\n          type: string\n        executionLegs:\n          items:\n            properties:\n              legId:\n                example: 0\n                type: number\n              mismarkedQuantity:\n                example: 0\n                type: number\n              price:\n                example: 0\n                type: number\n              quantity:\n                example: 0\n                type: number\n              time:\n                example: string\n                type: string\n            type: object\n          type: array\n        executionType:\n          example: FILL\n          type: string\n        orderRemainingQuantity:\n          example: 0\n          type: number\n        quantity:\n          example: 0\n          type: number\n      type: object\n    ExpirationDate:\n      properties:\n        date:\n          example: string\n          type: string\n      type: object\n    FixedIncome:\n      properties:\n        assetType:\n          $ref: '#/components/schemas/AssetType'\n        cusip:\n          example: string\n          type: string\n        description:\n          example: string\n          type: string\n        factor:\n          example: 0\n          type: number\n        maturityDate:\n          example: string\n          type: string\n        symbol:\n          example: string\n          type: string\n        variableRate:\n          example: 0\n          type: number\n      type: object\n    Forex:\n      properties:\n        52WkHighInDouble:\n          example: 0\n          type: number\n        52WkLowInDouble:\n          example: 0\n          type: number\n        askPriceInDouble:\n          example: 0\n          type: number\n        bidPriceInDouble:\n          example: 0\n          type: number\n        changeInDouble:\n          example: 0\n          type: number\n        closePriceInDouble:\n          example: 0\n          type: number\n        description:\n          example: string\n          type: string\n        digits:\n          example: 0\n          type: number\n        exchange:\n          example: string\n          type: string\n        exchangeName:\n          example: string\n          type: string\n        highPriceInDouble:\n          example: 0\n          type: number\n        isTradable:\n          type: boolean\n        lastPriceInDouble:\n          example: 0\n          type: number\n        lowPriceInDouble:\n          example: 0\n          type: number\n        mark:\n          example: 0\n          type: number\n        marketMaker:\n          example: string\n          type: string\n        openPriceInDouble:\n          example: 0\n          type: number\n        percentChange:\n          example: 0\n          type: number\n        product:\n          example: string\n          type: string\n        securityStatus:\n          example: string\n          type: string\n        symbol:\n          example: string\n          type: string\n        tick:\n          example: 0\n          type: number\n        tickAmount:\n          example: 0\n          type: number\n        tradingHours:\n          example: string\n          type: string\n      type: object\n    Fundamental:\n      properties:\n        assetType:\n          $ref: '#/components/schemas/AssetType'\n        cusip:\n          example: string\n          type: string\n        description:\n          example: string\n          type: string\n        exchange:\n          example: string\n          type: string\n        fundamental:\n          properties:\n            beta:\n              example: 0\n              type: number\n            bookValuePerShare:\n              example: 0\n              type: number\n            currentRatio:\n              example: 0\n              type: number\n            divGrowthRate3Year:\n              example: 0\n              type: number\n            dividendAmount:\n              example: 0\n              type: number\n            dividendDate:\n              example: string\n              type: string\n            dividendPayAmount:\n              example: 0\n              type: number\n            dividendPayDate:\n              example: string\n              type: string\n            dividendYield:\n              example: 0\n              type: number\n            epsChange:\n              example: 0\n              type: number\n            epsChangePercentTTM:\n              example: 0\n              type: number\n            epsChangeYear:\n              example: 0\n              type: number\n            epsTTM:\n              example: 0\n              type: number\n            grossMarginMRQ:\n              example: 0\n              type: number\n            grossMarginTTM:\n              example: 0\n              type: number\n            high52:\n              example: 0\n              type: number\n            interestCoverage:\n              example: 0\n              type: number\n            low52:\n              example: 0\n              type: number\n            ltDebtToEquity:\n              example: 0\n              type: number\n            marketCap:\n              example: 0\n              type: number\n            marketCapFloat:\n              example: 0\n              type: number\n            netProfitMarginMRQ:\n              example: 0\n              type: number\n            netProfitMarginTTM:\n              example: 0\n              type: number\n            operatingMarginMRQ:\n              example: 0\n              type: number\n            operatingMarginTTM:\n              example: 0\n              type: number\n            pbRatio:\n              example: 0\n              type: number\n            pcfRatio:\n              example: 0\n              type: number\n            peRatio:\n              example: 0\n              type: number\n            pegRatio:\n              example: 0\n              type: number\n            prRatio:\n              example: 0\n              type: number\n            quickRatio:\n              example: 0\n              type: number\n            returnOnAssets:\n              example: 0\n              type: number\n            returnOnEquity:\n              example: 0\n              type: number\n            returnOnInvestment:\n              example: 0\n              type: number\n            revChangeIn:\n              example: 0\n              type: number\n            revChangeTTM:\n              example: 0\n              type: number\n            revChangeYear:\n              example: 0\n              type: number\n            sharesOutstanding:\n              example: 0\n              type: number\n            shortIntDayToCover:\n              example: 0\n              type: number\n            shortIntToFloat:\n              example: 0\n              type: number\n            symbol:\n              example: string\n              type: string\n            totalDebtToCapital:\n              example: 0\n              type: number\n            totalDebtToEquity:\n              example: 0\n              type: number\n            vol10DayAvg:\n              example: 0\n              type: number\n            vol1DayAvg:\n              example: 0\n              type: number\n            vol3MonthAvg:\n              example: 0\n              type: number\n          type: object\n        symbol:\n          example: string\n          type: string\n      type: object\n    FundamentalData:\n      properties:\n        beta:\n          example: 0\n          type: number\n        bookValuePerShare:\n          example: 0\n          type: number\n        currentRatio:\n          example: 0\n          type: number\n        divGrowthRate3Year:\n          example: 0\n          type: number\n        dividendAmount:\n          example: 0\n          type: number\n        dividendDate:\n          example: string\n          type: string\n        dividendPayAmount:\n          example: 0\n          type: number\n        dividendPayDate:\n          example: string\n          type: string\n        dividendYield:\n          example: 0\n          type: number\n        epsChange:\n          example: 0\n          type: number\n        epsChangePercentTTM:\n          example: 0\n          type: number\n        epsChangeYear:\n          example: 0\n          type: number\n        epsTTM:\n          example: 0\n          type: number\n        grossMarginMRQ:\n          example: 0\n          type: number\n        grossMarginTTM:\n          example: 0\n          type: number\n        high52:\n          example: 0\n          type: number\n        interestCoverage:\n          example: 0\n          type: number\n        low52:\n          example: 0\n          type: number\n        ltDebtToEquity:\n          example: 0\n          type: number\n        marketCap:\n          example: 0\n          type: number\n        marketCapFloat:\n          example: 0\n          type: number\n        netProfitMarginMRQ:\n          example: 0\n          type: number\n        netProfitMarginTTM:\n          example: 0\n          type: number\n        operatingMarginMRQ:\n          example: 0\n          type: number\n        operatingMarginTTM:\n          example: 0\n          type: number\n        pbRatio:\n          example: 0\n          type: number\n        pcfRatio:\n          example: 0\n          type: number\n        peRatio:\n          example: 0\n          type: number\n        pegRatio:\n          example: 0\n          type: number\n        prRatio:\n          example: 0\n          type: number\n        quickRatio:\n          example: 0\n          type: number\n        returnOnAssets:\n          example: 0\n          type: number\n        returnOnEquity:\n          example: 0\n          type: number\n        returnOnInvestment:\n          example: 0\n          type: number\n        revChangeIn:\n          example: 0\n          type: number\n        revChangeTTM:\n          example: 0\n          type: number\n        revChangeYear:\n          example: 0\n          type: number\n        sharesOutstanding:\n          example: 0\n          type: number\n        shortIntDayToCover:\n          example: 0\n          type: number\n        shortIntToFloat:\n          example: 0\n          type: number\n        symbol:\n          example: string\n          type: string\n        totalDebtToCapital:\n          example: 0\n          type: number\n        totalDebtToEquity:\n          example: 0\n          type: number\n        vol10DayAvg:\n          example: 0\n          type: number\n        vol1DayAvg:\n          example: 0\n          type: number\n        vol3MonthAvg:\n          example: 0\n          type: number\n      type: object\n    Future:\n      properties:\n        askId:\n          example: string\n          type: string\n        askPriceInDouble:\n          example: 0\n          type: number\n        bidId:\n          example: string\n          type: string\n        bidPriceInDouble:\n          example: 0\n          type: number\n        changeInDouble:\n          example: 0\n          type: number\n        closePriceInDouble:\n          example: 0\n          type: number\n        description:\n          example: string\n          type: string\n        exchange:\n          example: string\n          type: string\n        exchangeName:\n          example: string\n          type: string\n        futureActiveSymbol:\n          example: string\n          type: string\n        futureExpirationDate:\n          example: string\n          type: string\n        futureIsActive:\n          type: boolean\n        futureIsTradable:\n          type: boolean\n        futureMultiplier:\n          example: 0\n          type: number\n        futurePercentChange:\n          example: 0\n          type: number\n        futurePriceFormat:\n          example: string\n          type: string\n        futureSettlementPrice:\n          example: 0\n          type: number\n        futureTradingHours:\n          example: string\n          type: string\n        highPriceInDouble:\n          example: 0\n          type: number\n        lastId:\n          example: string\n          type: string\n        lastPriceInDouble:\n          example: 0\n          type: number\n        lowPriceInDouble:\n          example: 0\n          type: number\n        mark:\n          example: 0\n          type: number\n        openInterest:\n          example: 0\n          type: number\n        openPriceInDouble:\n          example: 0\n          type: number\n        product:\n          example: string\n          type: string\n        securityStatus:\n          example: string\n          type: string\n        symbol:\n          example: string\n          type: string\n        tick:\n          example: 0\n          type: number\n        tickAmount:\n          example: 0\n          type: number\n      type: object\n    FutureOptions:\n      properties:\n        askPriceInDouble:\n          example: 0\n          type: number\n        bidPriceInDouble:\n          example: 0\n          type: number\n        closePriceInDouble:\n          example: 0\n          type: number\n        contractType:\n          $ref: '#/components/schemas/PutOrCall'\n        deltaInDouble:\n          example: 0\n          type: number\n        description:\n          example: string\n          type: string\n        digits:\n          example: 0\n          type: number\n        exchangeName:\n          example: string\n          type: string\n        exerciseType:\n          example: string\n          type: string\n        expirationType:\n          example: string\n          type: string\n        futureExpirationDate:\n          example: 0\n          type: number\n        futureIsActive:\n          type: boolean\n        futureIsTradable:\n          type: boolean\n        futurePercentChange:\n          example: 0\n          type: number\n        futureTradingHours:\n          example: string\n          type: string\n        gammaInDouble:\n          example: 0\n          type: number\n        highPriceInDouble:\n          example: 0\n          type: number\n        inTheMoney:\n          type: boolean\n        lastPriceInDouble:\n          example: 0\n          type: number\n        lowPriceInDouble:\n          example: 0\n          type: number\n        mark:\n          example: 0\n          type: number\n        moneyIntrinsicValueInDouble:\n          example: 0\n          type: number\n        multiplierInDouble:\n          example: 0\n          type: number\n        netChangeInDouble:\n          example: 0\n          type: number\n        openInterest:\n          example: 0\n          type: number\n        openPriceInDouble:\n          example: 0\n          type: number\n        rhoInDouble:\n          example: 0\n          type: number\n        securityStatus:\n          example: string\n          type: string\n        strikePriceInDouble:\n          example: 0\n          type: number\n        symbol:\n          example: string\n          type: string\n        thetaInDouble:\n          example: 0\n          type: number\n        tick:\n          example: 0\n          type: number\n        tickAmount:\n          example: 0\n          type: number\n        timeValueInDouble:\n          example: 0\n          type: number\n        underlying:\n          example: string\n          type: string\n        vegaInDouble:\n          example: 0\n          type: number\n        volatility:\n          example: 0\n          type: number\n      type: object\n    Hours:\n      properties:\n        category:\n          example: string\n          type: string\n        date:\n          example: string\n          type: string\n        exchange:\n          example: string\n          type: string\n        isOpen:\n          type: boolean\n        marketType:\n          example: '''BOND'' or ''EQUITY'' or ''ETF'' or ''FOREX'' or ''FUTURE'' or ''FUTURE_OPTION'' or ''INDEX'' or ''INDICATOR'' or ''MUTUAL_FUND'' or ''OPTION'' or ''UNKNOWN'''\n          type: string\n        product:\n          example: string\n          type: string\n        productName:\n          example: string\n          type: string\n        sessionHours:\n          example: object\n          type: string\n      type: object\n    Index:\n      properties:\n        52WkHigh:\n          example: 0\n          type: number\n        52WkLow:\n          example: 0\n          type: number\n        closePrice:\n          example: 0\n          type: number\n        description:\n          example: string\n          type: string\n        digits:\n          example: 0\n          type: number\n        exchange:\n          example: string\n          type: string\n        exchangeName:\n          example: string\n          type: string\n        highPrice:\n          example: 0\n          type: number\n        lastPrice:\n          example: 0\n          type: number\n        lowPrice:\n          example: 0\n          type: number\n        netChange:\n          example: 0\n          type: number\n        openPrice:\n          example: 0\n          type: number\n        securityStatus:\n          example: string\n          type: string\n        symbol:\n          example: string\n          type: string\n        totalVolume:\n          example: 0\n          type: number\n        tradeTimeInLong:\n          example: 0\n          type: number\n      type: object\n    Instruction:\n      enum:\n        - BUY\n        - SELL\n        - BUY_TO_COVER\n        - BUY_TO_OPEN\n        - BUY_TO_CLOSE\n        - SELL_TO_OPEN\n        - SELL_TO_CLOSE\n        - EXCHANGE\n      example: '''BUY'' or ''SELL'' or ''BUY_TO_COVER'' or ''SELL_SHORT'' or ''BUY_TO_OPEN'' or ''BUY_TO_CLOSE'' or ''SELL_TO_OPEN'' or ''SELL_TO_CLOSE'' or ''EXCHANGE'''\n      type: string\n    Instrument:\n      properties:\n        assetType:\n          $ref: '#/components/schemas/AssetType'\n        cusip:\n          example: string\n          type: string\n        description:\n          example: string\n          type: string\n        exchange:\n          example: string\n          type: string\n        symbol:\n          example: string\n          type: string\n      type: object\n    InstrumentType:\n      oneOf:\n        - $ref: '#/components/schemas/Option'\n        - $ref: '#/components/schemas/MutualFund'\n        - $ref: '#/components/schemas/CashEquivalent'\n        - $ref: '#/components/schemas/Equity'\n        - $ref: '#/components/schemas/FixedIncome'\n      type: object\n    MarginAccount:\n      properties:\n        accountId:\n          example: string\n          type: string\n        currentBalances:\n          properties:\n            accruedInterest:\n              example: 0\n              type: number\n            availableFunds:\n              example: 0\n              type: number\n            availableFundsNonMarginableTrade:\n              example: 0\n              type: number\n            bondValue:\n              example: 0\n              type: number\n            buyingPower:\n              example: 0\n              type: number\n            buyingPowerNonMarginableTrade:\n              example: 0\n              type: number\n            cashBalance:\n              example: 0\n              type: number\n            cashReceipts:\n              example: 0\n              type: number\n            dayTradingBuyingPower:\n              example: 0\n              type: number\n            dayTradingBuyingPowerCall:\n              example: 0\n              type: number\n            equity:\n              example: 0\n              type: number\n            equityPercentage:\n              example: 0\n              type: number\n            isInCall:\n              type: boolean\n            liquidationValue:\n              example: 0\n              type: number\n            longMarginValue:\n              example: 0\n              type: number\n            longMarketValue:\n              example: 0\n              type: number\n            longOptionMarketValue:\n              example: 0\n              type: number\n            maintenanceCall:\n              example: 0\n              type: number\n            maintenanceRequirement:\n              example: 0\n              type: number\n            marginBalance:\n              example: 0\n              type: number\n            moneyMarketFund:\n              example: 0\n              type: number\n            mutualFundValue:\n              example: 0\n              type: number\n            optionBuyingPower:\n              example: 0\n              type: number\n            pendingDeposits:\n              example: 0\n              type: number\n            regTCall:\n              example: 0\n              type: number\n            savings:\n              example: 0\n              type: number\n            shortBalance:\n              example: 0\n              type: number\n            shortMarginValue:\n              example: 0\n              type: number\n            shortMarketValue:\n              example: 0\n              type: number\n            shortOptionMarketValue:\n              example: 0\n              type: number\n            sma:\n              example: 0\n              type: number\n            stockBuyingPower:\n              example: 0\n              type: number\n          type: object\n        initialBalances:\n          properties:\n            accountValue:\n              example: 0\n              type: number\n            accruedInterest:\n              example: 0\n              type: number\n            availableFundsNonMarginableTrade:\n              example: 0\n              type: number\n            bondValue:\n              example: 0\n              type: number\n            buyingPower:\n              example: 0\n              type: number\n            cashAvailableForTrading:\n              example: 0\n              type: number\n            cashBalance:\n              example: 0\n              type: number\n            cashReceipts:\n              example: 0\n              type: number\n            dayTradingBuyingPower:\n              example: 0\n              type: number\n            dayTradingBuyingPowerCall:\n              example: 0\n              type: number\n            dayTradingEquityCall:\n              example: 0\n              type: number\n            equity:\n              example: 0\n              type: number\n            equityPercentage:\n              example: 0\n              type: number\n            isInCall:\n              type: boolean\n            liquidationValue:\n              example: 0\n              type: number\n            longMarginValue:\n              example: 0\n              type: number\n            longOptionMarketValue:\n              example: 0\n              type: number\n            longStockValue:\n              example: 0\n              type: number\n            maintenanceCall:\n              example: 0\n              type: number\n            maintenanceRequirement:\n              example: 0\n              type: number\n            margin:\n              example: 0\n              type: number\n            marginBalance:\n              example: 0\n              type: number\n            marginEquity:\n              example: 0\n              type: number\n            moneyMarketFund:\n              example: 0\n              type: number\n            mutualFundValue:\n              example: 0\n              type: number\n            pendingDeposits:\n              example: 0\n              type: number\n            regTCall:\n              example: 0\n              type: number\n            shortBalance:\n              example: 0\n              type: number\n            shortMarginValue:\n              example: 0\n              type: number\n            shortOptionMarketValue:\n              example: 0\n              type: number\n            shortStockValue:\n              example: 0\n              type: number\n            totalCash:\n              example: 0\n              type: number\n            unsettledCash:\n              example: 0\n              type: number\n          type: object\n        isClosingOnlyRestricted:\n          type: boolean\n        isDayTrader:\n          type: boolean\n        orderStrategies:\n          items:\n            properties:\n              accountId:\n                example: 0\n                type: number\n              activationPrice:\n                example: 0\n                type: number\n              cancelTime:\n                properties:\n                  date:\n                    example: string\n                    type: string\n                  shortFormat:\n                    type: boolean\n                type: object\n              cancelable:\n                type: boolean\n              childOrderStrategies:\n                items:\n                  type: object\n                type: array\n              closeTime:\n                example: string\n                type: string\n              complexOrderStrategyType:\n                $ref: '#/components/schemas/ComplexOrderStrategyType'\n              destinationLinkName:\n                example: string\n                type: string\n              duration:\n                $ref: '#/components/schemas/Duration'\n              editable:\n                type: boolean\n              enteredTime:\n                example: string\n                type: string\n              filledQuantity:\n                example: 0\n                type: number\n              orderActivityCollection:\n                $ref: '#/components/schemas/Execution'\n              orderId:\n                example: 0\n                type: number\n              orderLegCollection:\n                items:\n                  properties:\n                    instruction:\n                      $ref: '#/components/schemas/Instruction'\n                    instrument:\n                      $ref: '#/components/schemas/InstrumentType'\n                    legId:\n                      example: 0\n                      type: number\n                    orderLegType:\n                      $ref: '#/components/schemas/AssetType'\n                    positionEffect:\n                      $ref: '#/components/schemas/PositionEffect'\n                    quantity:\n                      example: 0\n                      type: number\n                    quantityType:\n                      $ref: '#/components/schemas/QuantityType'\n                  type: object\n                type: array\n              orderStrategyType:\n                $ref: '#/components/schemas/OrderStrategyType'\n              orderType:\n                $ref: '#/components/schemas/OrderType'\n              price:\n                example: 0\n                type: number\n              priceLinkBasis:\n                $ref: '#/components/schemas/PriceLinkBasis'\n              priceLinkType:\n                $ref: '#/components/schemas/PriceLinkType'\n              quantity:\n                example: 0\n                type: number\n              releaseTime:\n                example: string\n                type: string\n              remainingQuantity:\n                example: 0\n                type: number\n              replacingOrderCollection:\n                items:\n                  type: object\n                type: array\n              requestedDestination:\n                $ref: '#/components/schemas/DestinationExchange'\n              session:\n                $ref: '#/components/schemas/Session'\n              specialInstruction:\n                $ref: '#/components/schemas/SpecialInstruction'\n              status:\n                $ref: '#/components/schemas/OrderStatus'\n              statusDescription:\n                example: string\n                type: string\n              stopPrice:\n                example: 0\n                type: number\n              stopPriceLinkBasis:\n                $ref: '#/components/schemas/PriceLinkBasis'\n              stopPriceLinkType:\n                $ref: '#/components/schemas/PriceLinkType'\n              stopPriceOffset:\n                example: 0\n                type: number\n              stopType:\n                $ref: '#/components/schemas/StopType'\n              tag:\n                example: string\n                type: string\n              taxLotMethod:\n                $ref: '#/components/schemas/TaxLotMethod'\n            type: object\n          type: array\n        positions:\n          items:\n            properties:\n              agedQuantity:\n                example: 0\n                type: number\n              averagePrice:\n                example: 0\n                type: number\n              currentDayProfitLoss:\n                example: 0\n                type: number\n              currentDayProfitLossPercentage:\n                example: 0\n                type: number\n              instrument:\n                $ref: '#/components/schemas/InstrumentType'\n              longQuantity:\n                example: 0\n                type: number\n              marketValue:\n                example: 0\n                type: number\n              settledLongQuantity:\n                example: 0\n                type: number\n              settledShortQuantity:\n                example: 0\n                type: number\n              shortQuantity:\n                example: 0\n                type: number\n            type: object\n          type: array\n        projectedBalances:\n          properties:\n            accruedInterest:\n              example: 0\n              type: number\n            availableFunds:\n              example: 0\n              type: number\n            availableFundsNonMarginableTrade:\n              example: 0\n              type: number\n            bondValue:\n              example: 0\n              type: number\n            buyingPower:\n              example: 0\n              type: number\n            buyingPowerNonMarginableTrade:\n              example: 0\n              type: number\n            cashBalance:\n              example: 0\n              type: number\n            cashReceipts:\n              example: 0\n              type: number\n            dayTradingBuyingPower:\n              example: 0\n              type: number\n            dayTradingBuyingPowerCall:\n              example: 0\n              type: number\n            equity:\n              example: 0\n              type: number\n            equityPercentage:\n              example: 0\n              type: number\n            isInCall:\n              type: boolean\n            liquidationValue:\n              example: 0\n              type: number\n            longMarginValue:\n              example: 0\n              type: number\n            longMarketValue:\n              example: 0\n              type: number\n            longOptionMarketValue:\n              example: 0\n              type: number\n            maintenanceCall:\n              example: 0\n              type: number\n            maintenanceRequirement:\n              example: 0\n              type: number\n            marginBalance:\n              example: 0\n              type: number\n            moneyMarketFund:\n              example: 0\n              type: number\n            mutualFundValue:\n              example: 0\n              type: number\n            optionBuyingPower:\n              example: 0\n              type: number\n            pendingDeposits:\n              example: 0\n              type: number\n            regTCall:\n              example: 0\n              type: number\n            savings:\n              example: 0\n              type: number\n            shortBalance:\n              example: 0\n              type: number\n            shortMarginValue:\n              example: 0\n              type: number\n            shortMarketValue:\n              example: 0\n              type: number\n            shortOptionMarketValue:\n              example: 0\n              type: number\n            sma:\n              example: 0\n              type: number\n            stockBuyingPower:\n              example: 0\n              type: number\n          type: object\n        roundTrips:\n          example: 0\n          type: number\n        type:\n          example: '''CASH'' or ''MARGIN'''\n          type: string\n      type: object\n    Mover:\n      properties:\n        change:\n          example: 0\n          type: number\n        description:\n          example: string\n          type: string\n        direction:\n          example: '''up'' or ''down'''\n          type: string\n        last:\n          example: 0\n          type: number\n        symbol:\n          example: string\n          type: string\n        totalVolume:\n          example: 0\n          type: number\n      type: object\n    MutualFund:\n      properties:\n        assetType:\n          $ref: '#/components/schemas/AssetType'\n        cusip:\n          example: string\n          type: string\n        description:\n          example: string\n          type: string\n        symbol:\n          example: string\n          type: string\n        type:\n          example: '''NOT_APPLICABLE'' or ''OPEN_END_NON_TAXABLE'' or ''OPEN_END_TAXABLE'' or ''NO_LOAD_NON_TAXABLE'' or ''NO_LOAD_TAXABLE'''\n          type: string\n      type: object\n    Mutual_Fund:\n      properties:\n        52WkHigh:\n          example: 0\n          type: number\n        52WkLow:\n          example: 0\n          type: number\n        closePrice:\n          example: 0\n          type: number\n        description:\n          example: string\n          type: string\n        digits:\n          example: 0\n          type: number\n        divAmount:\n          example: 0\n          type: number\n        divDate:\n          example: string\n          type: string\n        divYield:\n          example: 0\n          type: number\n        exchange:\n          example: string\n          type: string\n        exchangeName:\n          example: string\n          type: string\n        nAV:\n          example: 0\n          type: number\n        netChange:\n          example: 0\n          type: number\n        peRatio:\n          example: 0\n          type: number\n        securityStatus:\n          example: string\n          type: string\n        symbol:\n          example: string\n          type: string\n        totalVolume:\n          example: 0\n          type: number\n        tradeTimeInLong:\n          example: 0\n          type: number\n      type: object\n    Option:\n      properties:\n        assetType:\n          $ref: '#/components/schemas/AssetType'\n        cusip:\n          example: string\n          type: string\n        description:\n          example: string\n          type: string\n        optionDeliverables:\n          items:\n            properties:\n              assetType:\n                $ref: '#/components/schemas/AssetType'\n              currencyType:\n                $ref: '#/components/schemas/CurrencyType'\n              deliverableUnits:\n                example: 0\n                type: number\n              symbol:\n                example: string\n                type: string\n            type: object\n          type: array\n        optionMultiplier:\n          example: 0\n          type: number\n        putCall:\n          $ref: '#/components/schemas/PutOrCall'\n        symbol:\n          example: string\n          type: string\n        type:\n          $ref: '#/components/schemas/OptionType'\n        underlyingSymbol:\n          example: string\n          type: string\n      type: object\n    OptionChain:\n      properties:\n        callExpDateMap:\n          example: object\n          type: string\n        daysToExpiration:\n          example: 0\n          type: number\n        interestRate:\n          example: 0\n          type: number\n        interval:\n          example: 0\n          type: number\n        isDelayed:\n          type: boolean\n        isIndex:\n          type: boolean\n        putExpDateMap:\n          example: object\n          type: string\n        status:\n          $ref: '#/components/schemas/OrderStatus'\n        strategy:\n          $ref: '#/components/schemas/Strategy'\n        symbol:\n          example: string\n          type: string\n        underlying:\n          properties:\n            ask:\n              example: 0\n              type: number\n            askSize:\n              example: 0\n              type: number\n            bid:\n              example: 0\n              type: number\n            bidSize:\n              example: 0\n              type: number\n            change:\n              example: 0\n              type: number\n            close:\n              example: 0\n              type: number\n            delayed:\n              type: boolean\n            description:\n              example: string\n              type: string\n            exchangeName:\n              example: string\n              type: string\n            fiftyTwoWeekHigh:\n              example: 0\n              type: number\n            fiftyTwoWeekLow:\n              example: 0\n              type: number\n            highPrice:\n              example: 0\n              type: number\n            last:\n              example: 0\n              type: number\n            lowPrice:\n              example: 0\n              type: number\n            mark:\n              example: 0\n              type: number\n            markChange:\n              example: 0\n              type: number\n            markPercentChange:\n              example: 0\n              type: number\n            openPrice:\n              example: 0\n              type: number\n            percentChange:\n              example: 0\n              type: number\n            quoteTime:\n              example: 0\n              type: number\n            symbol:\n              example: string\n              type: string\n            totalVolume:\n              example: 0\n              type: number\n            tradeTime:\n              example: 0\n              type: number\n          type: object\n        underlyingPrice:\n          example: 0\n          type: number\n        volatility:\n          example: 0\n          type: number\n      type: object\n    OptionDeliverables:\n      properties:\n        assetType:\n          $ref: '#/components/schemas/AssetType'\n        currencyType:\n          $ref: '#/components/schemas/CurrencyType'\n        deliverableUnits:\n          example: string\n          type: string\n        symbol:\n          example: string\n          type: string\n      type: object\n    OptionType:\n      enum:\n        - VANILLA\n        - BINARY\n        - BARRIER\n      example: '''VANILLA'' or ''BINARY'' or ''BARRIER'''\n      type: string\n    Order:\n      properties:\n        accountId:\n          example: 0\n          type: number\n        activationPrice:\n          example: 0\n          type: number\n        cancelTime:\n          properties:\n            date:\n              example: string\n              type: string\n            shortFormat:\n              type: boolean\n          type: object\n        cancelable:\n          type: boolean\n        childOrderStrategies:\n          items:\n            properties:\n              cancelTime:\n                properties:\n                  date:\n                    example: string\n                    type: string\n                  shortFormat:\n                    type: boolean\n                type: object\n              complexOrderStrategyType:\n                $ref: '#/components/schemas/ComplexOrderStrategyType'\n              destinationLinkName:\n                example: string\n                type: string\n              duration:\n                $ref: '#/components/schemas/Duration'\n              filledQuantity:\n                example: 0\n                type: number\n              orderType:\n                $ref: '#/components/schemas/OrderType'\n              price:\n                example: 0\n                type: number\n              priceLinkBasis:\n                $ref: '#/components/schemas/PriceLinkBasis'\n              priceLinkType:\n                $ref: '#/components/schemas/PriceLinkType'\n              quantity:\n                example: 0\n                type: number\n              releaseTime:\n                example: string\n                type: string\n              remainingQuantity:\n                example: 0\n                type: number\n              requestedDestination:\n                $ref: '#/components/schemas/DestinationExchange'\n              session:\n                $ref: '#/components/schemas/Session'\n              stopPrice:\n                example: 0\n                type: number\n              stopPriceLinkBasis:\n                $ref: '#/components/schemas/PriceLinkBasis'\n              stopPriceLinkType:\n                $ref: '#/components/schemas/PriceLinkType'\n              stopPriceOffset:\n                example: 0\n                type: number\n              stopType:\n                $ref: '#/components/schemas/StopType'\n              taxLotMethod:\n                $ref: '#/components/schemas/TaxLotMethod'\n            type: object\n          type: array\n        closeTime:\n          example: string\n          type: string\n        complexOrderStrategyType:\n          $ref: '#/components/schemas/ComplexOrderStrategyType'\n        destinationLinkName:\n          example: string\n          type: string\n        duration:\n          $ref: '#/components/schemas/Duration'\n        editable:\n          type: boolean\n        enteredTime:\n          example: string\n          type: string\n        filledQuantity:\n          example: 0\n          type: number\n        orderActivityCollection:\n          items:\n            $ref: '#/components/schemas/Execution'\n          type: array\n        orderId:\n          example: 0\n          type: number\n        orderLegCollection:\n          items:\n            properties:\n              instruction:\n                $ref: '#/components/schemas/Instruction'\n              instrument:\n                $ref: '#/components/schemas/InstrumentType'\n              legId:\n                example: 0\n                type: number\n              orderLegType:\n                $ref: '#/components/schemas/OrderType'\n              positionEffect:\n                $ref: '#/components/schemas/PositionEffect'\n              quantity:\n                example: 0\n                type: number\n              quantityType:\n                $ref: '#/components/schemas/QuantityType'\n            type: object\n          type: array\n        orderStrategyType:\n          $ref: '#/components/schemas/OrderStrategyType'\n        orderType:\n          $ref: '#/components/schemas/OrderType'\n        price:\n          example: 0\n          type: number\n        priceLinkBasis:\n          $ref: '#/components/schemas/PriceLinkBasis'\n        priceLinkType:\n          $ref: '#/components/schemas/PriceLinkType'\n        quantity:\n          example: 0\n          type: number\n        releaseTime:\n          example: string\n          type: string\n        remainingQuantity:\n          example: 0\n          type: number\n        replacingOrderCollection:\n          items:\n            type: object\n          type: array\n        requestedDestination:\n          $ref: '#/components/schemas/DestinationExchange'\n        session:\n          $ref: '#/components/schemas/Session'\n        specialInstruction:\n          $ref: '#/components/schemas/SpecialInstruction'\n        status:\n          $ref: '#/components/schemas/OrderStatus'\n        statusDescription:\n          example: string\n          type: string\n        stopPrice:\n          example: 0\n          type: number\n        stopPriceLinkBasis:\n          $ref: '#/components/schemas/PriceLinkBasis'\n        stopPriceLinkType:\n          $ref: '#/components/schemas/PriceLinkType'\n        stopPriceOffset:\n          example: 0\n          type: number\n        stopType:\n          $ref: '#/components/schemas/StopType'\n        tag:\n          example: string\n          type: string\n        taxLotMethod:\n          $ref: '#/components/schemas/TaxLotMethod'\n      type: object\n    OrderCollection:\n      items:\n        properties:\n          accountId:\n            example: 0\n            type: number\n          activationPrice:\n            example: 0\n            type: number\n          cancelTime:\n            properties:\n              date:\n                example: string\n                type: string\n              shortFormat:\n                type: boolean\n            type: object\n          cancelable:\n            type: boolean\n          childOrderStrategies:\n            items:\n              type: object\n            type: array\n          closeTime:\n            example: string\n            type: string\n          complexOrderStrategyType:\n            $ref: '#/components/schemas/ComplexOrderStrategyType'\n          destinationLinkName:\n            example: string\n            type: string\n          duration:\n            $ref: '#/components/schemas/Duration'\n          editable:\n            type: boolean\n          enteredTime:\n            example: string\n            type: string\n          filledQuantity:\n            example: 0\n            type: number\n          orderActivityCollection:\n            items:\n              $ref: '#/components/schemas/Execution'\n            type: array\n          orderId:\n            example: 0\n            type: number\n          orderLegCollection:\n            items:\n              properties:\n                instruction:\n                  $ref: '#/components/schemas/Instruction'\n                instrument:\n                  $ref: '#/components/schemas/InstrumentType'\n                legId:\n                  example: 0\n                  type: number\n                orderLegType:\n                  $ref: '#/components/schemas/AssetType'\n                positionEffect:\n                  $ref: '#/components/schemas/PositionEffect'\n                quantity:\n                  example: 0\n                  type: number\n                quantityType:\n                  $ref: '#/components/schemas/QuantityType'\n              type: object\n            type: array\n          orderStrategyType:\n            $ref: '#/components/schemas/OrderStrategyType'\n          orderType:\n            $ref: '#/components/schemas/OrderType'\n          price:\n            example: 0\n            type: number\n          priceLinkBasis:\n            $ref: '#/components/schemas/PriceLinkBasis'\n          priceLinkType:\n            $ref: '#/components/schemas/PriceLinkType'\n          quantity:\n            example: 0\n            type: number\n          releaseTime:\n            example: string\n            type: string\n          remainingQuantity:\n            example: 0\n            type: number\n          replacingOrderCollection:\n            items:\n              type: object\n            type: array\n          requestedDestination:\n            $ref: '#/components/schemas/DestinationExchange'\n          session:\n            $ref: '#/components/schemas/Session'\n          specialInstruction:\n            $ref: '#/components/schemas/SpecialInstruction'\n          status:\n            $ref: '#/components/schemas/OrderStatus'\n          statusDescription:\n            example: string\n            type: string\n          stopPrice:\n            example: 0\n            type: number\n          stopPriceLinkBasis:\n            $ref: '#/components/schemas/PriceLinkBasis'\n          stopPriceLinkType:\n            $ref: '#/components/schemas/PriceLinkType'\n          stopPriceOffset:\n            example: 0\n            type: number\n          stopType:\n            $ref: '#/components/schemas/StopType'\n          tag:\n            example: string\n            type: string\n          taxLotMethod:\n            $ref: '#/components/schemas/TaxLotMethod'\n        type: object\n      type: array\n    OrderStatus:\n      enum:\n        - AWAITING_PARENT_ORDER\n        - AWAITING_CONDITION\n        - AWAITING_MANUAL_REVIEW\n        - ACCEPTED\n        - AWAITING_UR_OUT\n        - PENDING_ACTIVATION\n        - WORKING\n        - REJECTED\n        - QUEUED\n        - PENDING_CANCEL\n        - CANCELED\n        - PENDING_REPLACE\n        - REPLACED\n        - FILLED\n        - EXPIRED\n      example: '''AWAITING_PARENT_ORDER'' or ''AWAITING_CONDITION'' or ''AWAITING_MANUAL_REVIEW'' or ''ACCEPTED'' or ''AWAITING_UR_OUT'' or ''PENDING_ACTIVATION'' or ''QUEUED'' or ''WORKING'' or ''REJECTED'' or ''PENDING_CANCEL'' or ''CANCELED'' or ''PENDING_REPLACE'' or ''REPLACED'' or ''FILLED'' or ''EXPIRED'''\n      type: string\n    OrderStrategyType:\n      enum:\n        - SINGLE\n        - OCO\n        - TRIGGER\n      example: '''SINGLE'' or ''OCO'' or ''TRIGGER'''\n      type: string\n    OrderType:\n      enum:\n        - MARKET\n        - LIMIT\n        - STOP\n        - STOP_LIMIT\n        - TRAILING_STOP\n        - MARKET_ON_CLOSE\n        - EXERCISE\n        - TRAILING_STOP_LIMIT\n        - NET_DEBIT\n        - NET_CREDIT\n        - NET_ZERO\n      example: '''MARKET'' or ''LIMIT'' or ''STOP'' or ''STOP_LIMIT'' or ''TRAILING_STOP'' or ''MARKET_ON_CLOSE'' or ''EXERCISE'' or ''TRAILING_STOP_LIMIT'' or ''NET_DEBIT'' or ''NET_CREDIT'' or ''NET_ZERO'''\n      type: string\n    PositionEffect:\n      enum:\n        - OPENING\n        - CLOSING\n        - AUTOMATIC\n      example: '''OPENING'' or ''CLOSING'' or ''AUTOMATIC'''\n      type: string\n    Preferences:\n      properties:\n        authTokenTimeout:\n          example: '''FIFTY_FIVE_MINUTES'' or ''TWO_HOURS'' or ''FOUR_HOURS'' or ''EIGHT_HOURS'''\n          type: string\n        defaultAdvancedToolLaunch:\n          example: '''TA'' or ''N'' or ''Y'' or ''TOS'' or ''NONE'' or ''CC2'''\n          type: string\n        defaultEquityOrderDuration:\n          $ref: '#/components/schemas/Duration'\n        defaultEquityOrderLegInstruction:\n          example: '''BUY'' or ''SELL'' or ''BUY_TO_COVER'' or ''SELL_SHORT'' or ''NONE'''\n          type: string\n        defaultEquityOrderMarketSession:\n          $ref: '#/components/schemas/Session'\n        defaultEquityOrderPriceLinkType:\n          $ref: '#/components/schemas/EquityPriceLinkType'\n        defaultEquityOrderType:\n          $ref: '#/components/schemas/OrderType'\n        defaultEquityQuantity:\n          example: 0\n          type: number\n        directEquityRouting:\n          type: boolean\n        directOptionsRouting:\n          type: boolean\n        equityTaxLotMethod:\n          $ref: '#/components/schemas/TaxLotMethod'\n        expressTrading:\n          type: boolean\n        mutualFundTaxLotMethod:\n          $ref: '#/components/schemas/TaxLotMethod'\n        optionTaxLotMethod:\n          $ref: '#/components/schemas/TaxLotMethod'\n      type: object\n    PriceLinkBasis:\n      enum:\n        - MANUAL\n        - BASE\n        - TRIGGER\n        - LAST\n        - BID\n        - ASK\n        - ASK_BID\n        - MARK\n        - AVERAGE\n      example: '''MANUAL'' or ''BASE'' or ''TRIGGER'' or ''LAST'' or ''BID'' or ''ASK'' or ''ASK_BID'' or ''MARK'' or ''AVERAGE'''\n      type: string\n    PriceLinkType:\n      enum:\n        - VALUE\n        - PERCENT\n        - TICK\n      example: '''VALUE'' or ''PERCENT'' or ''TICK'''\n      type: string\n    PutOrCall:\n      enum:\n        - PUT\n        - CALL\n        - ALL\n      example: '''PUT'' or ''CALL'' or ''ALL'''\n      type: string\n    QuantityType:\n      enum:\n        - ALL_SHARES\n        - DOLLARS\n        - SHARES\n      example: '''ALL_SHARES'' or ''DOLLARS'' or ''SHARES'''\n      type: string\n    SavedOrder:\n      properties:\n        accountId:\n          example: 0\n          type: number\n        activationPrice:\n          example: 0\n          type: number\n        cancelTime:\n          properties:\n            date:\n              example: string\n              type: string\n            shortFormat:\n              type: boolean\n          type: object\n        cancelable:\n          type: boolean\n        childOrderStrategies:\n          items:\n            properties:\n              accountId:\n                example: 0\n                type: number\n              activationPrice:\n                example: 0\n                type: number\n              cancelTime:\n                properties:\n                  date:\n                    example: string\n                    type: string\n                  shortFormat:\n                    type: boolean\n                type: object\n              cancelable:\n                type: boolean\n              closeTime:\n                example: string\n                type: string\n              complexOrderStrategyType:\n                $ref: '#/components/schemas/ComplexOrderStrategyType'\n              destinationLinkName:\n                example: string\n                type: string\n              duration:\n                $ref: '#/components/schemas/Duration'\n              editable:\n                type: boolean\n              enteredTime:\n                example: string\n                type: string\n              filledQuantity:\n                example: 0\n                type: number\n              orderActivityCollection:\n                items:\n                  $ref: '#/components/schemas/Execution'\n                type: array\n              orderId:\n                example: 0\n                type: number\n              orderLegCollection:\n                items:\n                  properties:\n                    instruction:\n                      $ref: '#/components/schemas/Instruction'\n                    instrument:\n                      $ref: '#/components/schemas/InstrumentType'\n                    legId:\n                      example: 0\n                      type: number\n                    orderLegType:\n                      $ref: '#/components/schemas/AssetType'\n                    positionEffect:\n                      $ref: '#/components/schemas/PositionEffect'\n                    quantity:\n                      example: 0\n                      type: number\n                    quantityType:\n                      $ref: '#/components/schemas/QuantityType'\n                  type: object\n                type: array\n              orderStrategyType:\n                $ref: '#/components/schemas/OrderStrategyType'\n              orderType:\n                $ref: '#/components/schemas/OrderType'\n              price:\n                example: 0\n                type: number\n              priceLinkBasis:\n                $ref: '#/components/schemas/PriceLinkBasis'\n              priceLinkType:\n                $ref: '#/components/schemas/PriceLinkType'\n              quantity:\n                example: 0\n                type: number\n              releaseTime:\n                example: string\n                type: string\n              remainingQuantity:\n                example: 0\n                type: number\n              replacingOrderCollection:\n                items:\n                  type: object\n                type: array\n              requestedDestination:\n                $ref: '#/components/schemas/DestinationExchange'\n              session:\n                $ref: '#/components/schemas/Session'\n              specialInstruction:\n                $ref: '#/components/schemas/SpecialInstruction'\n              status:\n                $ref: '#/components/schemas/OrderStatus'\n              stopPrice:\n                example: 0\n                type: number\n              stopPriceLinkBasis:\n                $ref: '#/components/schemas/PriceLinkBasis'\n              stopPriceLinkType:\n                $ref: '#/components/schemas/PriceLinkType'\n              stopPriceOffset:\n                example: 0\n                type: number\n              stopType:\n                $ref: '#/components/schemas/StopType'\n              tag:\n                example: string\n                type: string\n              taxLotMethod:\n                $ref: '#/components/schemas/TaxLotMethod'\n            type: object\n          type: array\n        closeTime:\n          example: string\n          type: string\n        complexOrderStrategyType:\n          $ref: '#/components/schemas/ComplexOrderStrategyType'\n        destinationLinkName:\n          example: string\n          type: string\n        duration:\n          $ref: '#/components/schemas/Duration'\n        editable:\n          type: boolean\n        enteredTime:\n          example: string\n          type: string\n        filledQuantity:\n          example: 0\n          type: number\n        orderActivityCollection:\n          items:\n            $ref: '#/components/schemas/Execution'\n          type: array\n        orderId:\n          example: 0\n          type: number\n        orderLegCollection:\n          items:\n            properties:\n              instruction:\n                $ref: '#/components/schemas/Instruction'\n              instrument:\n                $ref: '#/components/schemas/InstrumentType'\n              legId:\n                example: 0\n                type: number\n              orderLegType:\n                $ref: '#/components/schemas/AssetType'\n              positionEffect:\n                $ref: '#/components/schemas/PositionEffect'\n              quantity:\n                example: 0\n                type: number\n              quantityType:\n                $ref: '#/components/schemas/QuantityType'\n            type: object\n          type: array\n        orderStrategyType:\n          $ref: '#/components/schemas/OrderStrategyType'\n        orderType:\n          $ref: '#/components/schemas/OrderType'\n        price:\n          example: 0\n          type: number\n        priceLinkBasis:\n          $ref: '#/components/schemas/PriceLinkBasis'\n        priceLinkType:\n          $ref: '#/components/schemas/PriceLinkType'\n        quantity:\n          example: 0\n          type: number\n        releaseTime:\n          example: string\n          type: string\n        remainingQuantity:\n          example: 0\n          type: number\n        requestedDestination:\n          $ref: '#/components/schemas/DestinationExchange'\n        savedOrderId:\n          example: 0\n          type: number\n        savedTime:\n          example: string\n          type: string\n        session:\n          $ref: '#/components/schemas/Session'\n        specialInstruction:\n          $ref: '#/components/schemas/SpecialInstruction'\n        status:\n          $ref: '#/components/schemas/OrderStatus'\n        statusDescription:\n          example: string\n          type: string\n        stopPrice:\n          example: 0\n          type: number\n        stopPriceLinkBasis:\n          $ref: '#/components/schemas/PriceLinkBasis'\n        stopPriceLinkType:\n          $ref: '#/components/schemas/PriceLinkType'\n        stopPriceOffset:\n          example: 0\n          type: number\n        stopType:\n          $ref: '#/components/schemas/StopType'\n        tag:\n          example: string\n          type: string\n        taxLotMethod:\n          $ref: '#/components/schemas/TaxLotMethod'\n      type: object\n    Session:\n      enum:\n        - NORMAL\n        - SEAMLESS\n        - AM\n        - PM\n      example: '''NORMAL'' or ''AM'' or ''PM'' or ''SEAMLESS'''\n      type: string\n    SpecialInstruction:\n      enum:\n        - ALL_OR_NONE\n        - DO_NOT_REDUCE\n        - ALL_OR_NONE_DO_NOT_REDUCE\n      example: '''ALL_OR_NONE'' or ''DO_NOT_REDUCE'' or ''ALL_OR_NONE_DO_NOT_REDUCE'''\n      type: string\n    StopType:\n      enum:\n        - STANDARD\n        - BID\n        - ASK\n        - LAST\n        - MARK\n      example: '''STANDARD'' or ''BID'' or ''ASK'' or ''LAST'' or ''MARK'''\n      type: string\n    Strategy:\n      enum:\n        - SINGLE\n        - ANALYTICAL\n        - COVERED\n        - VERTICAL\n        - CALENDAR\n        - STRANGLE\n        - STRADDLE\n        - BUTTERFLY\n        - CONDOR\n        - DIAGONAL\n        - COLLAR\n        - ROLL\n      example: '''SINGLE'' or ''ANALYTICAL'' or ''COVERED'' or ''VERTICAL'' or ''CALENDAR'' or ''STRANGLE'' or ''STRADDLE'' or ''BUTTERFLY'' or ''CONDOR'' or ''DIAGONAL'' or ''COLLAR'' or ''ROLL'''\n      type: string\n    StrikePriceMap:\n      type: object\n    SubscriptionKey:\n      properties:\n        keys:\n          items:\n            properties:\n              key:\n                example: string\n                type: string\n            type: object\n          type: array\n      type: object\n    TaxLotMethod:\n      enum:\n        - FIFO\n        - LIFO\n        - HIGH_COST\n        - LOW_COST\n        - AVERAGE_COST\n        - SPECIFIC_LOT\n      example: '''FIFO'' or ''LIFO'' or ''HIGH_COST'' or ''LOW_COST'' or ''AVERAGE_COST'' or ''SPECIFIC_LOT'''\n      type: string\n    Transaction:\n      properties:\n        accruedInterest:\n          example: 0\n          type: number\n        achStatus:\n          example: '''Approved'' or ''Rejected'' or ''Cancel'' or ''Error'''\n          type: string\n        cashBalanceEffectFlag:\n          type: boolean\n        clearingReferenceNumber:\n          example: string\n          type: string\n        dayTradeBuyingPowerEffect:\n          example: 0\n          type: number\n        description:\n          example: string\n          type: string\n        fees:\n          example: object\n          type: string\n        netAmount:\n          example: 0\n          type: number\n        orderDate:\n          example: string\n          type: string\n        orderId:\n          example: string\n          type: string\n        requirementReallocationAmount:\n          example: 0\n          type: number\n        settlementDate:\n          example: string\n          type: string\n        sma:\n          example: 0\n          type: number\n        subAccount:\n          example: string\n          type: string\n        transactionDate:\n          example: string\n          type: string\n        transactionId:\n          example: 0\n          type: number\n        transactionItem:\n          properties:\n            accountId:\n              example: 0\n              type: number\n            amount:\n              example: 0\n              type: number\n            cost:\n              example: 0\n              type: number\n            instruction:\n              $ref: '#/components/schemas/Instruction'\n            instrument:\n              properties:\n                assetType:\n                  $ref: '#/components/schemas/AssetType'\n                bondInterestRate:\n                  example: 0\n                  type: number\n                bondMaturityDate:\n                  example: string\n                  type: string\n                cusip:\n                  example: string\n                  type: string\n                description:\n                  example: string\n                  type: string\n                optionExpirationDate:\n                  example: string\n                  type: string\n                optionStrikePrice:\n                  example: 0\n                  type: number\n                putCall:\n                  $ref: '#/components/schemas/PutOrCall'\n                symbol:\n                  example: string\n                  type: string\n                underlyingSymbol:\n                  example: string\n                  type: string\n              type: object\n            parentChildIndicator:\n              example: string\n              type: string\n            parentOrderKey:\n              example: 0\n              type: number\n            positionEffect:\n              $ref: '#/components/schemas/PositionEffect'\n            price:\n              example: 0\n              type: number\n          type: object\n        transactionSubType:\n          example: string\n          type: string\n        type:\n          example: '''TRADE'' or ''RECEIVE_AND_DELIVER'' or ''DIVIDEND_OR_INTEREST'' or ''ACH_RECEIPT'' or ''ACH_DISBURSEMENT'' or ''CASH_RECEIPT'' or ''CASH_DISBURSEMENT'' or ''ELECTRONIC_FUND'' or ''WIRE_OUT'' or ''WIRE_IN'' or ''JOURNAL'' or ''MEMORANDUM'' or ''MARGIN_CALL'' or ''MONEY_MARKET'' or ''SMA_ADJUSTMENT'''\n          type: string\n      type: object\n    TransactionType:\n      enum:\n        - ALL\n        - TRADE\n        - BUY_ONLY\n        - SELL_ONLY\n        - CASH_IN_OR_CASH_OUT\n        - CHECKING\n        - DIVIDEND\n        - INTEREST\n        - OTHER\n        - ADVISOR_FEES\n      example: '''ALL'' or ''TRADE'' or ''BUY_ONLY'' or ''SELL_ONLY'' or ''CASH_IN_OR_CASH_OUT'' or ''CHECKING'' or ''DIVIDEND'' or ''INTEREST'' or ''OTHER'' or ''ADVISOR_FEES'''\n      type: string\n    Underlying:\n      properties:\n        ask:\n          example: 0\n          type: number\n        askSize:\n          example: 0\n          type: number\n        bid:\n          example: 0\n          type: number\n        bidSize:\n          example: 0\n          type: number\n        change:\n          example: 0\n          type: number\n        close:\n          example: 0\n          type: number\n        delayed:\n          type: boolean\n        description:\n          example: string\n          type: string\n        exchangeName:\n          example: '''IND'' or ''ASE'' or ''NYS'' or ''NAS'' or ''NAP'' or ''PAC'' or ''OPR'' or ''BATS'''\n          type: string\n        fiftyTwoWeekHigh:\n          example: 0\n          type: number\n        fiftyTwoWeekLow:\n          example: 0\n          type: number\n        highPrice:\n          example: 0\n          type: number\n        last:\n          example: 0\n          type: number\n        lowPrice:\n          example: 0\n          type: number\n        mark:\n          example: 0\n          type: number\n        markChange:\n          example: 0\n          type: number\n        markPercentChange:\n          example: 0\n          type: number\n        openPrice:\n          example: 0\n          type: number\n        percentChange:\n          example: 0\n          type: number\n        quoteTime:\n          example: 0\n          type: number\n        symbol:\n          example: string\n          type: string\n        totalVolume:\n          example: 0\n          type: number\n        tradeTime:\n          example: 0\n          type: number\n      type: object\n    UpdatePreferences:\n      properties:\n        authTokenTimeout:\n          example: '''FIFTY_FIVE_MINUTES'' or ''TWO_HOURS'' or ''FOUR_HOURS'' or ''EIGHT_HOURS'''\n          type: string\n        defaultAdvancedToolLaunch:\n          example: '''TA'' or ''N'' or ''Y'' or ''TOS'' or ''NONE'' or ''CC2'''\n          type: string\n        defaultEquityOrderDuration:\n          $ref: '#/components/schemas/Duration'\n        defaultEquityOrderLegInstruction:\n          example: '''BUY'' or ''SELL'' or ''BUY_TO_COVER'' or ''SELL_SHORT'' or ''NONE'''\n          type: string\n        defaultEquityOrderMarketSession:\n          $ref: '#/components/schemas/Session'\n        defaultEquityOrderPriceLinkType:\n          $ref: '#/components/schemas/EquityPriceLinkType'\n        defaultEquityOrderType:\n          $ref: '#/components/schemas/OrderType'\n        defaultEquityQuantity:\n          example: 0\n          format: int32\n          type: integer\n        directEquityRouting:\n          type: boolean\n        directOptionsRouting:\n          type: boolean\n        equityTaxLotMethod:\n          $ref: '#/components/schemas/TaxLotMethod'\n        expressTrading:\n          type: boolean\n        mutualFundTaxLotMethod:\n          $ref: '#/components/schemas/TaxLotMethod'\n        optionTaxLotMethod:\n          $ref: '#/components/schemas/TaxLotMethod'\n      type: object\n    UpdateWatchlist:\n      properties:\n        name:\n          example: string\n          type: string\n        watchlistId:\n          example: string\n          type: string\n        watchlistItems:\n          items:\n            properties:\n              averagePrice:\n                example: 0\n                format: int32\n                type: integer\n              commission:\n                example: 0\n                format: int32\n                type: integer\n              instrument:\n                properties:\n                  assetType:\n                    $ref: '#/components/schemas/AssetType'\n                  symbol:\n                    example: string\n                    type: string\n                type: object\n              purchasedDate:\n                example: DateParam\n                type: string\n              quantity:\n                example: 0\n                format: int32\n                type: integer\n              sequenceId:\n                example: 0\n                format: int32\n                type: integer\n            type: object\n          type: array\n      type: object\n    UserPrincipal:\n      properties:\n        accessLevel:\n          example: string\n          type: string\n        accounts:\n          items:\n            properties:\n              accountCdDomainId:\n                example: string\n                type: string\n              accountId:\n                example: string\n                type: string\n              acl:\n                example: string\n                type: string\n              authorizations:\n                properties:\n                  advancedMargin:\n                    type: boolean\n                  apex:\n                    type: boolean\n                  levelTwoQuotes:\n                    type: boolean\n                  marginTrading:\n                    type: boolean\n                  optionTradingLevel:\n                    example: '''COVERED'' or ''FULL'' or ''LONG'' or ''SPREAD'' or ''NONE'''\n                    type: string\n                  scottradeAccount:\n                    type: boolean\n                  stockTrading:\n                    type: boolean\n                  streamerAccess:\n                    type: boolean\n                  streamingNews:\n                    type: boolean\n                type: object\n              company:\n                example: string\n                type: string\n              description:\n                example: string\n                type: string\n              displayName:\n                example: string\n                type: string\n              preferences:\n                properties:\n                  authTokenTimeout:\n                    example: '''FIFTY_FIVE_MINUTES'' or ''TWO_HOURS'' or ''FOUR_HOURS'' or ''EIGHT_HOURS'''\n                    type: string\n                  defaultAdvancedToolLaunch:\n                    example: '''TA'' or ''N'' or ''Y'' or ''TOS'' or ''NONE'' or ''CC2'''\n                    type: string\n                  defaultEquityOrderDuration:\n                    $ref: '#/components/schemas/Duration'\n                  defaultEquityOrderLegInstruction:\n                    example: '''BUY'' or ''SELL'' or ''BUY_TO_COVER'' or ''SELL_SHORT'' or ''NONE'''\n                    type: string\n                  defaultEquityOrderMarketSession:\n                    $ref: '#/components/schemas/Session'\n                  defaultEquityOrderPriceLinkType:\n                    $ref: '#/components/schemas/EquityPriceLinkType'\n                  defaultEquityOrderType:\n                    $ref: '#/components/schemas/OrderType'\n                  defaultEquityQuantity:\n                    example: 0\n                    type: number\n                  directEquityRouting:\n                    type: boolean\n                  directOptionsRouting:\n                    type: boolean\n                  equityTaxLotMethod:\n                    $ref: '#/components/schemas/TaxLotMethod'\n                  expressTrading:\n                    type: boolean\n                  mutualFundTaxLotMethod:\n                    $ref: '#/components/schemas/TaxLotMethod'\n                  optionTaxLotMethod:\n                    $ref: '#/components/schemas/TaxLotMethod'\n                type: object\n              segment:\n                example: string\n                type: string\n              surrogateIds:\n                example: object\n                type: string\n            type: object\n          type: array\n        authToken:\n          example: string\n          type: string\n        lastLoginTime:\n          example: string\n          type: string\n        loginTime:\n          example: string\n          type: string\n        primaryAccountId:\n          example: string\n          type: string\n        professionalStatus:\n          example: '''PROFESSIONAL'' or ''NON_PROFESSIONAL'' or ''UNKNOWN_STATUS'''\n          type: string\n        quotes:\n          properties:\n            isAmexDelayed:\n              type: boolean\n            isCmeDelayed:\n              type: boolean\n            isForexDelayed:\n              type: boolean\n            isIceDelayed:\n              type: boolean\n            isNasdaqDelayed:\n              type: boolean\n            isNyseDelayed:\n              type: boolean\n            isOpraDelayed:\n              type: boolean\n          type: object\n        stalePassword:\n          type: boolean\n        streamerInfo:\n          properties:\n            accessLevel:\n              example: string\n              type: string\n            acl:\n              example: string\n              type: string\n            appId:\n              example: string\n              type: string\n            streamerBinaryUrl:\n              example: string\n              type: string\n            streamerSocketUrl:\n              example: string\n              type: string\n            token:\n              example: string\n              type: string\n            tokenTimestamp:\n              example: string\n              type: string\n            userGroup:\n              example: string\n              type: string\n          type: object\n        streamerSubscriptionKeys:\n          properties:\n            keys:\n              items:\n                properties:\n                  key:\n                    example: string\n                    type: string\n                type: object\n              type: array\n          type: object\n        tokenExpirationTime:\n          example: string\n          type: string\n        userCdDomainId:\n          example: string\n          type: string\n        userId:\n          example: string\n          type: string\n      type: object\n    Watchlist:\n      properties:\n        accountId:\n          example: string\n          type: string\n        name:\n          example: string\n          type: string\n        status:\n          example: '''UNCHANGED'' or ''CREATED'' or ''UPDATED'' or ''DELETED'''\n          type: string\n        watchlistId:\n          example: string\n          type: string\n        watchlistItems:\n          items:\n            properties:\n              averagePrice:\n                example: 0\n                type: number\n              commission:\n                example: 0\n                type: number\n              instrument:\n                properties:\n                  assetType:\n                    $ref: '#/components/schemas/AssetType'\n                  description:\n                    example: string\n                    type: string\n                  symbol:\n                    example: string\n                    type: string\n                type: object\n              purchasedDate:\n                example: DateParam\n                type: string\n              quantity:\n                example: 0\n                type: number\n              sequenceId:\n                example: 0\n                type: number\n              status:\n                example: '''UNCHANGED'' or ''CREATED'' or ''UPDATED'' or ''DELETED'''\n                type: string\n            type: object\n          type: array\n      type: object",
			"canonicalURL": "/github.com/austin-millan/tdameritrade-openapi@3fa730a17a91241a109d354b3bb3fdd3c5280fc2/-/blob/swagger.yml",
			"externalURLs": [
				{
					"url": "https://github.com/austin-millan/tdameritrade-openapi/blob/3fa730a17a91241a109d354b3bb3fdd3c5280fc2/swagger.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/accounts/{accountId}\": get: responses: 200: contents: application/json: generate schema: field securitiesAccount: oneOf: collect variants: oneOf[0]: field orderStrategies: item: field orderLegCollection: item: field instrument: oneOf: oneOf InstrumentType: variant CashEquivalent: no unique fields, unable to parse without discriminator: discriminator inference not implemented",
	"NotImplemented": [
		"discriminator inference"
	]
}