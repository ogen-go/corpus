{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/networknt/model-config"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "rest/light-reference/openapi.yaml",
			"byteSize": 9013,
			"content": "openapi: 3.0.0\ninfo:\n  description: Rerference API is a microserice that used for retrieval of dropdown list for SPA and Mobile\n    application. It is built on top of light-4j framework.\n  version: 1.0.0\n  title: Reference service API\n  contact:\n    email: stevehu@gmail.com\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\npaths:\n  \"/schema/{host}/{file}\":\n    get:\n      description: Return the json schema for the host and id\n      operationId: getRefSchema\n      parameters:\n        - name: host\n          in: path\n          description: The json schema host\n          required: true\n          schema:\n            type: string\n        - name: file\n          in: path\n          description: The json schema file\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n      security:\n        - ref_auth:\n            - ref.r\n            - ref.w\n      x-accepts: application/json\n      x-contentType: application/json\n  \"/table\":\n    get:\n      description: Return the ref table list for the host\n      operationId: getRefTable\n      parameters:\n        - name: host\n          in: query\n          description: The host which the reference table belongs to\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/RefTable\"\n      security:\n        - ref_auth:\n            - ref.r\n            - ref.w\n      x-accepts: application/json\n      x-contentType: application/json\n  \"/data\":\n    get:\n      description: Return the reference data for the host and table combination for the dropdown\n      operationId: getRefData\n      parameters:\n        - name: host\n          in: query\n          description: The host which use the reference\n          required: false\n          schema:\n            type: string\n        - name: name\n          in: query\n          description: refernece table name\n          required: true\n          schema:\n            type: string\n        - name: lang\n          in: query\n          description: refernece data language\n          required: false\n          schema:\n            type: string\n        - name: rela\n          in: query\n          description: relation id\n          required: false\n          schema:\n            type: string\n        - name: from\n          in: query\n          description: relation from value\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefData\"\n      security:\n        - ref_auth:\n            - ref.r\n            - ref.w\n      x-accepts: application/json\n      x-contentType: application/json\n  \"/value\":\n    get:\n      description: Return the reference value for the host and table combination\n      operationId: getRefValue\n      parameters:\n        - name: host\n          in: query\n          description: The host which uses the reference\n          required: true\n          schema:\n            type: string\n        - name: name\n          in: query\n          description: refernece table name\n          required: false\n          schema:\n            type: string\n        - name: id\n          in: query\n          description: refernece table id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefValue\"\n      security:\n        - ref_auth:\n            - ref.r\n            - ref.w\n      x-accepts: application/json\n      x-contentType: application/json\n\n  '/host':\n    get:\n      description: Return the all registed hosts\n      operationId: getHost\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n      security:\n        - ref_auth:\n            - ref.r\n            - ref.w\n      x-accepts: application/json\n      x-contentType: application/json\n  \"/locale\":\n    get:\n      description: get reference value\n      operationId: getRefLocale\n      parameters:\n        - name: id\n          in: query\n          description: The reference value Id\n          required: true\n          schema:\n            type: string\n        - name: language\n          in: query\n          description: The reference value language\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ValueLocale\"\n      security:\n        - ref_auth:\n            - ref.r\n      x-accepts: application/json\n      x-contentType: application/json\n  \"/rtype\":\n    get:\n      description: get relation type\n      operationId: getRefRelationType\n      parameters:\n        - name: id\n          in: query\n          description: The relation id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RelationType\"\n      security:\n        - ref_auth:\n            - ref.r\n      x-accepts: application/json\n      x-contentType: application/json\n  \"/relation\":\n    get:\n      description: get relation\n      operationId: getRefRelation\n      parameters:\n        - name: id\n          in: query\n          description: The relation id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Relation\"\n      security:\n        - ref_auth:\n            - ref.r\n      x-accepts: application/json\n      x-contentType: application/json\nservers:\n  - url: http://ref.lightapi.net/r\ncomponents:\n  securitySchemes:\n    ref_auth:\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: http://localhost:8080/oauth2/code\n          scopes:\n            ref.r: read reference\n            ref.w: write reference\n  schemas:\n    RefData:\n      type: object\n      properties:\n        value:\n          type: string\n          description: reference value\n        label:\n          type: string\n          description: reference value label\n    RefValue:\n      type: object\n      properties:\n        tableId:\n          type: string\n          description: reference table Id\n        valueId:\n          type: string\n          description: reference value Id\n        valueCode:\n          type: string\n          description: reference value code\n        displayOrder:\n          type: number\n          format: integer\n          description: reference value display order\n        startTime:\n          type: string\n          description: effective start Time\n        endTime:\n          type: string\n          description: effective end Time\n    RefTable:\n      type: object\n      properties:\n        tableId:\n          type: string\n          description: a UUID generated\n        host:\n          type: string\n          description: host indicator the organization for the reference\n        tableName:\n          type: string\n          description: reference table name\n        tableDesc:\n          type: string\n          description: reference table description\n        active:\n          type: boolean\n          description: reference active indicator\n        editable:\n          type: boolean\n          description: editable indicator\n        common:\n          type: boolean\n          description: commmon indicator\n    ValueLocale:\n      type: object\n      properties:\n        value:\n          type: string\n          description: the value\n        language:\n          type: string\n          description: the language of label\n        label:\n          type: string\n          description: the label\n    RelationType:\n      type: object\n      properties:\n        id:\n          type: string\n          description: relation id\n        name:\n          type: string\n          description: relation name\n        desc:\n          type: string\n          description: relation desc\n    Relation:\n      type: object\n      properties:\n        id:\n          type: string\n          description: relation id\n        from:\n          type: string\n          description: from value id\n        to:\n          type: string\n          description: to value id\n",
			"canonicalURL": "/github.com/networknt/model-config@3fea561d7982c217c1d5d35c1193eac78a7fdcef/-/blob/rest/light-reference/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/networknt/model-config/blob/3fea561d7982c217c1d5d35c1193eac78a7fdcef/rest/light-reference/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/schema/{host}/{file}\": get: security: security \"ref_auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}