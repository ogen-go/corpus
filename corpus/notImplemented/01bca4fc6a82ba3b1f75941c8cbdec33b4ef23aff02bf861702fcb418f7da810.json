{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/INGV/hyp2000-ws"
		},
		"file": {
			"name": "oa3.yaml",
			"size": 0,
			"path": "public/api/0.0.1/oa3.yaml",
			"byteSize": 20619,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: valentino.lauciani@ingv.it\n    name: INGV\n    url: http://terremoti.ingv.it/webservices_and_software\n  description: \"\\n# Introduction\\nHypoinverse is software used to Locate earthquakes\\\n    \\ and determine magnitudes in a local or regional seismic network.\\n\\nMore info,\\\n    \\ here: [https://www.usgs.gov/software/hypoinverse-earthquake-location](https://www.usgs.gov/software/hypoinverse-earthquake-location)\\n\\\n    \\nAt INGV we build stand-alone Docker to deploy \\\"hyp2000\\\" ([https://github.com/ingv/hyp2000](https://github.com/ingv/hyp2000))\\\n    \\ and on top of this docker was build a Web Service.\\n\\n# Input\\nThe input file\\\n    \\ is a JSON with four sections: \\n  - **HYP2000_CONF**: HYPOINVERS configuration\\\n    \\ file (refer to manual for more details)\\n  - **MODEL**: Crustal velocity model\\n\\\n    \\  - **OUTPUT**: It could be `json`, `prt`, `arc`, `sum`\\n  - **TYPE_HYP2000ARC**:\\\n    \\ An array of phases in **ew2openapi** format.\\n\\n# Output\\nThe output could be\\\n    \\ `json`, `prt`, `arc` or `sum`:\\n  - `prt`: print format\\n  - `arc`: archive\\\n    \\ format\\n  - `sum`: summary format\\n  - `json`: NON STANDARD json format developed\\\n    \\ in **ew2openapi**\\n\\n# Rate limit:\\n  The **Rate Limit** and **Rate Reset**\\\n    \\ are specified in the HTTP-header with `X-RateLimit-Limit` and `X-RateLimit-Reset`;\\\n    \\ the rate limit is *per* `IP`.\"\n  license:\n    name: Creative Commons Attribution 4.0 International\n    url: http://creativecommons.org/licenses/by/4.0/\n  title: INGV HYP2000 Web Services\n  version: 2.0.0\n  x-api-id: fa78e2be-826e-4451-8979-0a0dfd598dff\n  x-logo: http://webservices.ingv.it/ingv_logo_text_two_lines.png\n  x-summary: The hyp2000 web service bla bla bla\nservers:\n- description: Production\n  url: https://webservices.ingv.it/api/v1/hyp2000\npaths:\n  /v1/hyp2000/:\n    post:\n      description: Send new input to HYP2000 WS\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                data:\n                  properties:\n                    HYP2000_CONF:\n                      example:\n                      - 200 T 2000 0\n                      - LET 5 2 3 2 2\n                      - H71 1 1 3\n                      - STA './all_stations.hinv'\n                      - CRH 1 './italy.crh'\n                      - MAG 1 T 3 1\n                      - DUR -.81 2.22 0 .0011 0, 5*0, 9999 1\n                      - FC1 'D' 2 'HHZ' 'EHZ'\n                      - PRE 7, 3 0 4 9, 5 6 4 9, 1 1 0 9, 2 1 0 9, 4 4 4 9, 3 0 0\n                        9, 4 0 0 9\n                      - RMS 4 .40 2 4\n                      - ERR .10\n                      - POS 1.78\n                      - REP T T\n                      - JUN T\n                      - MIN 4\n                      - NET 4\n                      - ZTR 5 T\n                      - DIS 6 100 1. 7.\n                      - DAM 7 30 0.5 0.9 0.005 0.02 0.6 100 500\n                      - WET 1. .75 .5 .25\n                      - ERF T\n                      - TOP F\n                      - LST 1 1 0\n                      - KPR 2\n                      - COP 5\n                      - CAR 3\n                      - PRT '../output/hypo.prt'\n                      - SUM '../output/hypo.sum'\n                      - ARC '../output/hypo.arc'\n                      - APP F T F\n                      - CON 25 0.04 0.001\n                      - PHS './input.arc'\n                      - LOC\n                    MODEL:\n                      example:\n                      - Italy\n                      - 5.00  0.00\n                      - 6.00 10.00\n                      - 8.10 30.00\n                    OUTPUT:\n                      example:\n                      - json\n                    TYPE_HYP2000ARC:\n                      allOf:\n                      - properties:\n                          phases:\n                            $ref: '#/components/schemas/hyp2000arc__phases'\n                          quakeId:\n                            $ref: '#/components/schemas/event__id_locator'\n                          version:\n                            $ref: '#/components/schemas/type_hypocenter__name'\n        description: JSON to send\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/hyp2000arc'\n          description: successful operation\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      summary: Hypoinverse 2000\n      tags:\n      - hyp2000\ncomponents:\n  headers:\n    Retry-After:\n      description: |-\n        Retry contacting the endpoint *at least* after seconds.\n        See https://tools.ietf.org/html/rfc7231#section-7.1.3\n      schema:\n        format: int32\n        type: integer\n    X-RateLimit-Limit:\n      description: The number of allowed requests in the current period\n      schema:\n        format: int32\n        type: integer\n    X-RateLimit-Reset:\n      description: The number of seconds left in the current period\n      schema:\n        format: int32\n        type: integer\n  responses:\n    204NoContent:\n      description: Request was properly formatted and submitted but no data matches\n        the selection\n      headers:\n        X-RateLimit-Limit:\n          $ref: '#/components/headers/X-RateLimit-Limit'\n        X-RateLimit-Reset:\n          $ref: '#/components/headers/X-RateLimit-Reset'\n    400BadRequest:\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n      description: Bad Request\n    404NotFound:\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n      description: Not Found\n    429TooManyRequests:\n      description: Too many requests\n      headers:\n        X-RateLimit-Limit:\n          $ref: '#/components/headers/X-RateLimit-Limit'\n        X-RateLimit-Reset:\n          $ref: '#/components/headers/X-RateLimit-Reset'\n    503ServiceUnavailable:\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n      description: Service Unavailable\n      headers:\n        Retry-After:\n          $ref: '#/components/headers/Retry-After'\n    default:\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n      description: Unexpected error\n  schemas:\n    Latitude:\n      description: |-\n        Latitude of a point expressed in:\n\n        * the ETRS89 system for Italian and European territories\n        * and in WGS84 for the others.\n      example: 45.492599\n      externalDocs:\n        url: http://dati.gov.it/onto/clvapit#long\n      format: double\n      maximum: 90\n      minimum: -90\n      type: number\n    Longitude:\n      description: |-\n        Longitude of a point expressed in:\n\n        * the ETRS89 system for Italian and European territories\n        * and in WGS84 for the others.\n      example: 9.19289\n      externalDocs:\n        url: http://dati.gov.it/onto/clvapit#long\n      format: double\n      maximum: 180\n      minimum: -180\n      type: number\n    Problem:\n      properties:\n        detail:\n          description: |\n            A human readable explanation specific to this occurrence of the\n            problem. You MUST NOT expose internal informations, personal\n            data or implementation details through this field.\n          example: Request took too long to complete.\n          type: string\n        instance:\n          description: |\n            An absolute URI that identifies the specific occurrence of the problem.\n            It may or may not yield further information if dereferenced.\n          format: uri\n          type: string\n        status:\n          description: |\n            The HTTP status code generated by the origin server for this occurrence\n            of the problem.\n          example: 503\n          exclusiveMaximum: true\n          format: int32\n          maximum: 600\n          minimum: 100\n          type: integer\n        title:\n          description: |\n            A short, summary of the problem type. Written in english and readable\n            for engineers (usually not suited for non technical stakeholders and\n            not localized); example: Service Unavailable\n          type: string\n        type:\n          default: about:blank\n          description: |\n            An absolute URI that identifies the problem type.  When dereferenced,\n            it SHOULD provide human-readable documentation for the problem type\n            (e.g., using HTML).\n          example: https://tools.ietf.org/html/rfc7231#section-6.6.4\n          format: uri\n          type: string\n      type: object\n    cha:\n      description: Channel code | char(3)\n      example: HHZ\n      type: string\n    depth:\n      description: Depth in Km | double\n      example: 0.02\n      format: double\n      type: number\n    event__id_locator:\n      default: 0\n      description: Event id created by locator | bigint(20)\n      example: 182491\n      format: int64\n      type: integer\n    ewLogo:\n      properties:\n        ewLogo:\n          properties:\n            hostname:\n              description: Hostname | ???\n              example: hew3.int.ingv.it\n              type: string\n            installation:\n              description: Installation description | ???\n              example: INST_INGV\n              type: string\n            instance:\n              description: Instance description | ???\n              example: hew3_mole\n              type: string\n            module:\n              description: Module description | ???\n              example: MOD_BINDER_EW\n              type: string\n            type:\n              description: Type description | ???\n              example: TYPE_QUAKE2K\n              type: string\n            user:\n              description: Hostname user | ???\n              example: ew\n              type: string\n          required:\n          - type\n          - module\n          - installation\n          - instance\n    hyp2000arc:\n      properties:\n        data:\n          allOf:\n          - $ref: '#/components/schemas/ewLogo'\n          - $ref: '#/components/schemas/hyp2000arc__base'\n    hyp2000arc__base:\n      properties:\n        ewMessage:\n          properties:\n            Md:\n              description: Md description | ???\n              format: double\n              type: number\n            Mpref:\n              description: Mpref description | ???\n              format: double\n              type: number\n            depth:\n              $ref: '#/components/schemas/depth'\n            dmin:\n              description: dmin description | ???\n              format: double\n              type: number\n            e0:\n              $ref: '#/components/schemas/hypocenter__e0'\n            e0az:\n              $ref: '#/components/schemas/hypocenter__e0_az'\n            e0dp:\n              $ref: '#/components/schemas/hypocenter__e0_dip'\n            e1:\n              $ref: '#/components/schemas/hypocenter__e1'\n            e1az:\n              $ref: '#/components/schemas/hypocenter__e1_az'\n            e1dp:\n              $ref: '#/components/schemas/hypocenter__e1_dip'\n            e2:\n              $ref: '#/components/schemas/hypocenter__e2'\n            erh:\n              $ref: '#/components/schemas/hypocenter__err_h'\n            erz:\n              $ref: '#/components/schemas/hypocenter__err_z'\n            gap:\n              $ref: '#/components/schemas/hypocenter__azim_gap'\n            ingvQuality:\n              description: ingvQuality description | ???\n              example: DD\n              type: string\n            labelpref:\n              description: ingvQuality description | ???\n              example: ' '\n              type: string\n            latitude:\n              $ref: '#/components/schemas/latitude'\n            longitude:\n              $ref: '#/components/schemas/longitude'\n            mdmad:\n              description: mdmad description | ???\n              format: double\n              type: number\n            mdtype:\n              description: ingvQuality description | ???\n              example: D\n              type: string\n            mdwt:\n              description: mdwt description | ???\n              format: double\n              type: number\n            nPfm:\n              $ref: '#/components/schemas/hypocenter__nph_fm'\n            nph:\n              $ref: '#/components/schemas/hypocenter__nph'\n            nphS:\n              $ref: '#/components/schemas/hypocenter__nph_s'\n            nphtot:\n              $ref: '#/components/schemas/hypocenter__nph_tot'\n            originTime:\n              $ref: '#/components/schemas/hypocenter__ot'\n            phases:\n              $ref: '#/components/schemas/hyp2000arc__phases'\n            quakeId:\n              $ref: '#/components/schemas/event__id_locator'\n            reg:\n              description: ingvQuality description | ???\n              example: ' '\n              type: string\n            rms:\n              $ref: '#/components/schemas/hypocenter__rms'\n            version:\n              $ref: '#/components/schemas/type_hypocenter__name'\n            wtpref:\n              description: wtpref description | ???\n              format: double\n              type: number\n          required:\n          - quakeId\n          - version\n          - originTime\n          - latitude\n          - longitude\n          - depth\n    hyp2000arc__phases:\n      items:\n        properties:\n          Md:\n            description: Todo description | ???\n            format: double\n            type: number\n          Pat:\n            $ref: '#/components/schemas/hypocenter__ot'\n          Pfm:\n            description: Todo description | ???\n            example: ' '\n            type: string\n          Plabel:\n            description: Todo description | ???\n            example: ' '\n            type: string\n          Ponset:\n            description: Todo description | ???\n            example: P\n            type: string\n          Pqual:\n            description: Todo description | ???\n            format: double\n            type: number\n          Pres:\n            description: Todo description | ???\n            format: double\n            type: number\n          Pwt:\n            description: Todo description | ???\n            format: double\n            type: number\n          Sat:\n            $ref: '#/components/schemas/hypocenter__ot'\n          Sfm:\n            description: Todo description | ???\n            example: ' '\n            type: string\n          Slabel:\n            description: Todo description | ???\n            example: ' '\n            type: string\n          Sonset:\n            description: Todo description | ???\n            example: ' '\n            type: string\n          Squal:\n            description: Todo description | ???\n            format: double\n            type: number\n          Sres:\n            description: Todo description | ???\n            format: double\n            type: number\n          Swt:\n            description: Todo description | ???\n            format: double\n            type: number\n          ampMag:\n            description: Amplitude magnitude for this station | col98 F3.2\n            format: float\n            type: number\n          ampMagWeightCode:\n            description: Amplitude magnitude weight code | col82 I1\n            type: integer\n          ampType:\n            description: Amplitude type 0=unspecified 1=Wood-Anderson 2=velocity 3=acceleration\n              4=no magnitude | col114 I2\n            type: integer\n          ampUnitsCode:\n            description: Amp units code. 0=PP mm, 1=0 to peak mm (UCB), 2=digital\n              counts | col62 I2\n            type: integer\n          amplitude:\n            description: Amplitude (Normally peak-to-peak) | col55 F7.2\n            format: float\n            type: number\n          azm:\n            description: Todo description | ???\n            format: double\n            type: number\n          caav:\n            items:\n              description: Todo description | ???\n              example:\n              - 0\n              - 0\n              - 0\n              - 0\n              - 0\n            type: array\n          ccntr:\n            items:\n              description: Todo description | ???\n              example:\n              - 0\n              - 0\n              - 0\n              - 0\n              - 0\n            type: array\n          codalen:\n            description: Todo description | ???\n            format: double\n            type: number\n          codalenObs:\n            description: Todo description | ???\n            format: double\n            type: number\n          codawt:\n            description: Todo description | ???\n            format: double\n            type: number\n          comp:\n            $ref: '#/components/schemas/cha'\n          datasrc:\n            description: Todo description | ???\n            example: W\n            type: string\n          dist:\n            description: Todo description | ???\n            format: double\n            type: number\n          importanceP:\n            description: Importance of P arrival | col101 F4.3\n            format: float\n            type: number\n          importanceS:\n            description: Importance of S arrival | col105 F4.3\n            format: float\n            type: number\n          latitude:\n            $ref: '#/components/schemas/latitude'\n          loc:\n            $ref: '#/components/schemas/loc'\n          longitude:\n            $ref: '#/components/schemas/longitude'\n          net:\n            $ref: '#/components/schemas/net'\n          pamp:\n            description: Todo description | ???\n            format: double\n            type: number\n          sta:\n            $ref: '#/components/schemas/sta'\n          takeoff:\n            description: Todo description | ???\n            format: double\n            type: number\n        required:\n        - net\n        - sta\n        - comp\n        - loc\n      type: array\n    hypocenter__azim_gap:\n      description: Azimutal gap | double\n      format: double\n      type: number\n    hypocenter__e0:\n      description: magnitude (km) of largest principal error | double\n      format: double\n      type: number\n    hypocenter__e0_az:\n      description: azimuth of largest principal error | double\n      format: double\n      type: integer\n    hypocenter__e0_dip:\n      description: dip of largest principal error | double\n      format: double\n      type: integer\n    hypocenter__e1:\n      description: magnitude (km) of intermed principal error | double\n      format: double\n      type: number\n    hypocenter__e1_az:\n      description: azimuth of intermediate principal error | double\n      format: double\n      type: integer\n    hypocenter__e1_dip:\n      description: dip of intermediate principal error | double\n      format: double\n      type: integer\n    hypocenter__e2:\n      description: magnitude (km) of smallest principal error | double\n      format: double\n      type: number\n    hypocenter__err_h:\n      description: Depth error | double\n      format: double\n      type: number\n    hypocenter__err_z:\n      description: Depth error | double\n      format: double\n      type: number\n    hypocenter__nph:\n      description: '# phases (P\u0026S) weight \u003e0.1 | int(11)'\n      format: int64\n      type: integer\n    hypocenter__nph_fm:\n      description: '# P first motions | int(11)'\n      format: int64\n      type: integer\n    hypocenter__nph_s:\n      description: '# S phases weight \u003e0.1 | int(11)'\n      format: int64\n      type: integer\n    hypocenter__nph_tot:\n      description: '# phases (P\u0026S) weight \u003e0.0 | int(11)'\n      format: int64\n      type: integer\n    hypocenter__ot:\n      description: Origin time | datetime(6)\n      example: '2016-06-22 16:52:06.260000'\n      type: string\n    hypocenter__rms:\n      description: Root mean square | double\n      format: double\n      type: number\n    latitude:\n      $ref: '#/components/schemas/Latitude'\n    loc:\n      default: --\n      description: Channel location | char(2)\n      example: '00'\n      type: string\n    longitude:\n      $ref: '#/components/schemas/Longitude'\n    net:\n      description: Channel net code | char(2)\n      example: IV\n      type: string\n    pippo:\n      $ref: '#/components/schemas/Longitude'\n    sta:\n      description: Channel station code | varchar(5)\n      example: ACER\n      type: string\n    type_hypocenter__name:\n      description: Localization name (es:01,XX,WW,..) | varchar(255)\n      example: ew prelim\n      type: string\n",
			"canonicalURL": "/github.com/INGV/hyp2000-ws@5aca316fb3b8b326aedb06e5805f3418584e98b2/-/blob/public/api/0.0.1/oa3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/INGV/hyp2000-ws/blob/5aca316fb3b8b326aedb06e5805f3418584e98b2/public/api/0.0.1/oa3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/hyp2000/\": post: responses: 404: contents: unsupported content types: [application/problem+json]",
	"NotImplemented": [
		"unsupported content types"
	]
}