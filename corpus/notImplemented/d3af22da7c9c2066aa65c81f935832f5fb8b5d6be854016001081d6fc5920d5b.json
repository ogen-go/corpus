{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "repo_interactions.yaml",
			"size": 0,
			"path": "providers/src/github/v0.1.1/services/repo_interactions.yaml",
			"byteSize": 10229,
			"content": "paths:\n  /repos/{owner}/{repo}/interaction-limits:\n    get:\n      summary: Get interaction restrictions for a repository\n      description: Shows which type of GitHub user can interact with this repository and when the restriction expires. If there are no restrictions, you will see an empty response.\n      tags:\n        - interactions\n      operationId: interactions/get-restrictions-for-repo\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/interactions#get-interaction-restrictions-for-a-repository\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                anyOf:\n                  - $ref: '#/components/schemas/interaction-limit-response'\n                  - type: object\n                    properties: {}\n                    additionalProperties: false\n              examples:\n                default:\n                  $ref: '#/components/examples/interaction-limit-2'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: interactions\n        subcategory: repos\n    put:\n      summary: Set interaction restrictions for a repository\n      description: Temporarily restricts interactions to a certain type of GitHub user within the given repository. You must have owner or admin access to set these restrictions. If an interaction limit is set for the user or organization that owns this repository, you will receive a `409 Conflict` response and will not be able to use this endpoint to change the interaction limit for a single repository.\n      tags:\n        - interactions\n      operationId: interactions/set-restrictions-for-repo\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/interactions#set-interaction-restrictions-for-a-repository\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/interaction-limit'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/interaction-limit-response'\n              examples:\n                default:\n                  $ref: '#/components/examples/interaction-limit-2'\n        '409':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: interactions\n        subcategory: repos\n    delete:\n      summary: Remove interaction restrictions for a repository\n      description: Removes all interaction restrictions from the given repository. You must have owner or admin access to remove restrictions. If the interaction limit is set for the user or organization that owns this repository, you will receive a `409 Conflict` response and will not be able to use this endpoint to change the interaction limit for a single repository.\n      tags:\n        - interactions\n      operationId: interactions/remove-restrictions-for-repo\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/interactions#remove-interaction-restrictions-for-a-repository\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '204':\n          description: Response\n        '409':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: interactions\n        subcategory: repos\ncomponents:\n  schemas:\n    interaction-limit-response:\n      title: Interaction Limits\n      description: Interaction limit settings.\n      type: object\n      properties:\n        limit:\n          $ref: '#/components/schemas/interaction-group'\n        origin:\n          type: string\n          example: repository\n        expires_at:\n          type: string\n          format: date-time\n          example: '2018-08-17T04:18:39Z'\n      required:\n        - limit\n        - origin\n        - expires_at\n    interaction-group:\n      type: string\n      description: 'The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect. Can be one of: `existing_users`, `contributors_only`, `collaborators_only`.'\n      example: collaborators_only\n      enum:\n        - existing_users\n        - contributors_only\n        - collaborators_only\n    interaction-limit:\n      title: Interaction Restrictions\n      description: Limit interactions to a specific type of user for a specified duration\n      type: object\n      properties:\n        limit:\n          $ref: '#/components/schemas/interaction-group'\n        expiry:\n          $ref: '#/components/schemas/interaction-expiry'\n      required:\n        - limit\n    interaction-expiry:\n      type: string\n      description: 'The duration of the interaction restriction. Can be one of: `one_day`, `three_days`, `one_week`, `one_month`, `six_months`. Default: `one_day`.'\n      example: one_month\n      enum:\n        - one_day\n        - three_days\n        - one_week\n        - one_month\n        - six_months\n  parameters:\n    owner:\n      name: owner\n      in: path\n      required: true\n      schema:\n        type: string\n    repo:\n      name: repo\n      in: path\n      required: true\n      schema:\n        type: string\n  responses: {}\n  securitySchemes: {}\n  callbacks: {}\n  examples:\n    interaction-limit-2:\n      value:\n        limit: collaborators_only\n        origin: repository\n        expires_at: '2018-08-17T04:18:39Z'\n  requestBodies: {}\n  headers: {}\n  links: {}\n  x-stackQL-resources:\n    repos:\n      id: github.repo_interactions.repos\n      name: repos\n      title: repos\n      methods:\n        get_restrictions_for_repo:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1interaction-limits/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        set_restrictions_for_repo:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1interaction-limits/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        remove_restrictions_for_repo:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1interaction-limits/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/repos/methods/get_restrictions_for_repo'\n        insert: []\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/repos/methods/remove_restrictions_for_repo'\nopenapi: 3.0.3\nservers:\n  - url: https://api.github.com\ntags:\n  - name: actions\n    description: Endpoints to manage GitHub Actions using the REST API.\n  - name: activity\n    description: Activity APIs provide access to notifications, subscriptions, and timelines.\n  - name: apps\n    description: Information for integrations and installations.\n  - name: billing\n    description: Monitor charges and usage from Actions and Packages.\n  - name: checks\n    description: Rich interactions with checks run by your integrations.\n  - name: code-scanning\n    description: Retrieve code scanning alerts from a repository.\n  - name: codes-of-conduct\n    description: Insight into codes of conduct for your communities.\n  - name: codespaces\n    description: Endpoints to manage Codespaces using the REST API.\n  - name: emojis\n    description: List emojis available to use on GitHub.\n  - name: enterprise-admin\n    description: Administer a GitHub enterprise.\n  - name: dependabot\n    description: Endpoints to manage Dependabot.\n  - name: gists\n    description: View, modify your gists.\n  - name: git\n    description: Raw Git functionality.\n  - name: gitignore\n    description: View gitignore templates\n  - name: interactions\n    description: Owner or admin management of users interactions.\n  - name: issues\n    description: Interact with GitHub Issues.\n  - name: licenses\n    description: View various OSS licenses.\n  - name: markdown\n    description: Render GitHub flavored markdown\n  - name: meta\n    description: Endpoints that give information about the API.\n  - name: migrations\n    description: Move projects to or from GitHub.\n  - name: oauth-authorizations\n    description: Manage access of OAuth applications\n  - name: orgs\n    description: Interact with GitHub Orgs.\n  - name: packages\n    description: Manage packages for authenticated users and organizations.\n  - name: projects\n    description: Interact with GitHub Projects.\n  - name: pulls\n    description: Interact with GitHub Pull Requests.\n  - name: rate-limit\n    description: Check your current rate limit status\n  - name: reactions\n    description: Interact with reactions to various GitHub entities.\n  - name: repos\n    description: Interact with GitHub Repos.\n  - name: scim\n    description: Provisioning of GitHub organization membership for SCIM-enabled providers.\n  - name: search\n    description: Look for stuff on GitHub.\n  - name: secret-scanning\n    description: Retrieve secret scanning alerts from a repository.\n  - name: server-statistics\n    description: GHES statistics\n  - name: teams\n    description: Interact with GitHub Teams.\n  - name: users\n    description: Interact with and view information about users and also current user.\nexternalDocs:\n  description: GitHub v3 REST API\n  url: https://docs.github.com/rest/\ninfo:\n  version: 1.1.4\n  title: GitHub v3 REST API - repo_interactions\n  description: Owner or admin management of users interactions.\n  license:\n    name: MIT\n    url: https://spdx.org/licenses/MIT\n  termsOfService: https://docs.github.com/articles/github-terms-of-service\n  contact:\n    name: Support\n    url: https://support.github.com/contact?tags=dotcom-rest-api\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/github/v0.1.1/services/repo_interactions.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/github/v0.1.1/services/repo_interactions.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/repos/{owner}/{repo}/interaction-limits\": get: responses: 200: contents: application/json: generate schema: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}