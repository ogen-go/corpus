{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mailscript/cli"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "api/swagger/swagger.yaml",
			"byteSize": 53427,
			"content": "openapi: 3.0.0\ninfo:\n  version: 0.4.0\n  title: Mailscript\n  license:\n    name: MIT\nservers:\n  - url: 'https://api.mailscript.com/v2'\n    description: API server\npaths:\n  /user:\n    get:\n      tags:\n        - user\n      summary: Get the authenticated user\n      operationId: getAuthenticatedUser\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n        - user\n      summary: Update a user\n      operationId: updateUser\n      requestBody:\n        description: User body\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateUserRequest'\n      responses:\n        '200':\n          description: Successful update operation\n        '400':\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /send:\n    post:\n      tags:\n        - send\n      summary: Send an email\n      operationId: send\n      requestBody:\n        description: request body\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SendRequest'\n      responses:\n        '200':\n          description: successful operation\n        '400':\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /workspaces:\n    post:\n      tags:\n        - workspaces\n      summary: Claim a Mailscript workspace\n      description: An attendant address will be created as well\n      operationId: addWorkspace\n      requestBody:\n        description: request body\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddWorkspaceRequest'\n      responses:\n        '201':\n          description: successful operation\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '405':\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    get:\n      tags:\n        - workspaces\n      summary: Get all workspaces you have access to\n      description: ''\n      operationId: getAllWorkspaces\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllWorkspacesResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '405':\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /addresses:\n    post:\n      tags:\n        - addresses\n      summary: Claim a new Mailscript address\n      description: ''\n      operationId: addAddress\n      requestBody:\n        description: Address body\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddAddressRequest'\n      responses:\n        '200':\n          description: successful operation\n        '400':\n          description: Internal error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '405':\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    get:\n      tags:\n        - addresses\n      summary: Get all addresses you have access to\n      description: ''\n      operationId: getAllAddresses\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllAddressesResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '405':\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /domains:\n    post:\n      tags:\n        - domains\n      summary: Claim a new Domain\n      description: ''\n      operationId: addDomain\n      requestBody:\n        description: Domain body\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddDomainRequest'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainResponse'\n              examples:\n                Add:\n                  value: |-\n                    {\n                      \"id\": \"hielle.com\",\n                      \"records\": [\n                        {\n                          \"type:\" \"TXT\",\n                          \"name\": \"@\",\n                          \"value\": \"ms_verify=eecbb911-d940-41ea-8fc2-2c83295f418b\"\n                        }\n                      ]\n                    }\n        '400':\n          description: Internal error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '405':\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    get:\n      tags:\n        - domains\n      summary: Get all domains you have access to\n      description: ''\n      operationId: getAllDomains\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllDomainsResponse'\n              examples:\n                list:\n                  value: |-\n                    {\n                    \"list\": [\"hielle.com\"]\n                    }\n        '400':\n          description: Internal error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '405':\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/domains/{domain}':\n    delete:\n      tags:\n        - domains\n      summary: Remove a domain\n      description: ''\n      operationId: removeDomainVerify\n      parameters:\n        - name: domain\n          in: path\n          description: Full Top-level domain name\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n        '400':\n          description: Internal error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '405':\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/domains/verify/{domain}':\n    get:\n      tags:\n        - domains\n      summary: Get domain verification\n      description: ''\n      operationId: getDomainVerify\n      parameters:\n        - name: domain\n          in: path\n          description: Full Top-level domain name\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainResponse'\n              examples:\n                Domain verification record:\n                  value: |-\n                    {\n                      \"id\": \"hielle.com\",\n                      \"records\": [\n                        {\n                          \"type:\" \"TXT\",\n                          \"name\": \"@\",\n                          \"value\": \"ms_verify=eecbb911-d940-41ea-8fc2-2c83295f418b\"\n                        }\n                      ]\n                    }\n        '400':\n          description: Internal error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '405':\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - domains\n      summary: Check a new Domain\n      description: ''\n      operationId: CheckDomainVerify\n      parameters:\n        - name: domain\n          in: path\n          description: Full Top-level domain name\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CheckDomainVerify'\n              examples:\n                checkDomainVerify:\n                  value: |-\n                    {\n                    \"id\":\"hielle.com\",\n                    \"success\": true\n                    }\n        '400':\n          description: Internal error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: Authorization failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '405':\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/addresses/{address}':\n    delete:\n      tags:\n        - addresses\n      summary: Delete a mailscript address\n      description: ''\n      operationId: deleteAddress\n      parameters:\n        - name: address\n          in: path\n          description: ID of address\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: successful delete operation\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '405':\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /triggers:\n    get:\n      tags:\n        - triggers\n      summary: Get all triggers you have access to\n      description: ''\n      operationId: getAllTriggers\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllTriggersResponse'\n        '400':\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - triggers\n      summary: Setup a trigger\n      description: ''\n      operationId: addTrigger\n      requestBody:\n        description: Trigger body\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddTriggerRequest'\n      responses:\n        '201':\n          description: successful add operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddTriggerResponse'\n        '400':\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/triggers/{trigger}':\n    put:\n      tags:\n        - triggers\n      summary: Update a trigger\n      operationId: updateTrigger\n      parameters:\n        - name: trigger\n          in: path\n          description: ID of the trigger\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Trigger body\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddTriggerRequest'\n      responses:\n        '200':\n          description: Successful update operation\n        '400':\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Key not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - triggers\n      summary: Delete a trigger\n      operationId: deleteTrigger\n      parameters:\n        - name: trigger\n          in: path\n          description: ID of the trigger\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Successful delete operation\n        '400':\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Key not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /inputs:\n    get:\n      tags:\n        - inputs\n      summary: Get all inputs you have access to\n      description: ''\n      operationId: getAllInputs\n      parameters:\n        - name: name\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllInputsResponse'\n        '400':\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /workflows:\n    post:\n      tags:\n        - workflows\n      summary: Setup workflow\n      description: ''\n      operationId: addWorkflow\n      requestBody:\n        description: Workflow body\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddWorkflowRequest'\n      responses:\n        '201':\n          description: successful operation\n        '400':\n          description: Internal error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '405':\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    get:\n      tags:\n        - workflows\n      summary: Get all workflows you have access to\n      description: ''\n      operationId: getAllWorkflows\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllWorkflowsResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '405':\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/workflows/{workflow}':\n    put:\n      tags:\n        - workflows\n      summary: Update an workflow\n      operationId: updateWorkflow\n      parameters:\n        - name: workflow\n          in: path\n          description: ID of the workflow\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Workflow body\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddWorkflowRequest'\n      responses:\n        '200':\n          description: Successful update operation\n        '400':\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Key not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - workflows\n      summary: Delete a workflow\n      operationId: deleteWorkflow\n      parameters:\n        - name: workflow\n          in: path\n          description: ID of the workflow\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Successful delete operation\n        '400':\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Key not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/addresses/{address}/keys':\n    get:\n      tags:\n        - keys\n      summary: List address keys\n      operationId: getAllKeys\n      parameters:\n        - name: address\n          in: path\n          description: ID of address\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllKeysResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Address not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - keys\n      summary: Add address key\n      operationId: addKey\n      parameters:\n        - name: address\n          in: path\n          description: ID of address\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Key body\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddKeyRequest'\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddKeyResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Address not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/addresses/{address}/keys/{key}':\n    get:\n      tags:\n        - keys\n      summary: Get address key\n      operationId: getKey\n      parameters:\n        - name: address\n          in: path\n          description: ID of address\n          required: true\n          schema:\n            type: string\n        - name: key\n          in: path\n          description: ID of key\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Key'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Key not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n        - keys\n      summary: Update an address key\n      operationId: updateKey\n      parameters:\n        - name: address\n          in: path\n          description: ID of address\n          required: true\n          schema:\n            type: string\n        - name: key\n          in: path\n          description: ID of key\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Key body\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateKeyRequest'\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Key'\n        '400':\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Key not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - keys\n      summary: Delete address key\n      operationId: deleteKey\n      parameters:\n        - name: address\n          in: path\n          description: ID of address\n          required: true\n          schema:\n            type: string\n        - name: key\n          in: path\n          description: ID of key\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Successful delete operation\n        '400':\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Key not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /verifications:\n    get:\n      tags:\n        - verifications\n      summary: Get all verificats for the user\n      operationId: getAllVerifications\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllVerificationsResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - verifications\n      summary: Start verification process for external email address or sms number\n      operationId: addVerification\n      requestBody:\n        description: Key body\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/AddEmailVerificationRequest'\n                - $ref: '#/components/schemas/AddSmsVerificationRequest'\n      responses:\n        '201':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddVerificationResponse'\n        '400':\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/verifications/{verification}/verify':\n    post:\n      tags:\n        - verifications\n      summary: Verify an email address or sms number with a code\n      operationId: verify\n      parameters:\n        - name: verification\n          in: path\n          description: ID of the verification entry\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Verify action body\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/VerifyEmailRequest'\n                - $ref: '#/components/schemas/VerifySmsRequest'\n      responses:\n        '200':\n          description: Successful operation\n        '400':\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Not authorized or bad code\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /actions:\n    get:\n      tags:\n        - actions\n      summary: Get all actions for the user\n      operationId: getAllActions\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllActionsResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - actions\n      summary: Add an action\n      operationId: addAction\n      requestBody:\n        description: Add action body\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/AddActionCombineRequest'\n                - $ref: '#/components/schemas/AddActionSmsRequest'\n                - $ref: '#/components/schemas/AddActionWebhookRequest'\n                - $ref: '#/components/schemas/AddActionDaemonRequest'\n                - $ref: '#/components/schemas/AddActionSendRequest'\n                - $ref: '#/components/schemas/AddActionForwardRequest'\n                - $ref: '#/components/schemas/AddActionForwardRequest'\n                - $ref: '#/components/schemas/AddActionReplyRequest'\n                - $ref: '#/components/schemas/AddActionReplyAllRequest'\n                - $ref: '#/components/schemas/AddActionAliasRequest'\n      responses:\n        '201':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddActionResponse'\n              examples:\n                list:\n                  value: |-\n                    [\n                    \"hielle.com\"\n                    ]\n        '400':\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Not authorized or bad code\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/actions/{action}':\n    put:\n      tags:\n        - actions\n      summary: Update an action key\n      operationId: updateAction\n      parameters:\n        - name: action\n          in: path\n          description: ID of action\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Action body\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/AddActionCombineRequest'\n                - $ref: '#/components/schemas/AddActionSmsRequest'\n                - $ref: '#/components/schemas/AddActionWebhookRequest'\n                - $ref: '#/components/schemas/AddActionDaemonRequest'\n                - $ref: '#/components/schemas/AddActionSendRequest'\n                - $ref: '#/components/schemas/AddActionForwardRequest'\n                - $ref: '#/components/schemas/AddActionForwardRequest'\n                - $ref: '#/components/schemas/AddActionReplyRequest'\n                - $ref: '#/components/schemas/AddActionReplyAllRequest'\n                - $ref: '#/components/schemas/AddActionAliasRequest'\n      responses:\n        '200':\n          description: Successful update operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Key'\n        '400':\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Key not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - actions\n      summary: Delete an action\n      operationId: deleteAction\n      parameters:\n        - name: action\n          in: path\n          description: ID of the action\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Successful delete operation\n        '400':\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Key not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/daemons/{daemon}/token':\n    get:\n      tags:\n        - daemon\n      summary: Get a token for opening a daemon connection\n      operationId: getDaemonToken\n      parameters:\n        - name: daemon\n          in: path\n          description: name of Daemon\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful get operation\n          content:\n            application/json:\n              schema:\n                required:\n                  - token\n                properties:\n                  token:\n                    type: string\n        '400':\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /integrations:\n    get:\n      tags:\n        - integrations\n      summary: Get all integrations for the user\n      operationId: getAllIntegrations\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllIntegrationsResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/integrations/{integration}':\n    delete:\n      tags:\n        - integrations\n      summary: Delete an integration\n      operationId: deleteIntegration\n      parameters:\n        - name: integration\n          in: path\n          description: ID of the integration\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Successful delete operation\n        '400':\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '403':\n          description: Bad credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Key not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\ncomponents:\n  schemas:\n    User:\n      required:\n        - id\n        - displayName\n        - email\n        - createdAt\n      properties:\n        id:\n          type: string\n        displayName:\n          type: string\n        photoURL:\n          type: string\n        email:\n          type: string\n        createdAt:\n          type: string\n          format: date-time\n    Workspace:\n      required:\n        - id\n        - owner\n        - createdAt\n        - createdBy\n      properties:\n        id:\n          type: string\n        owner:\n          type: string\n        createdAt:\n          type: string\n          format: date-time\n        createdBy:\n          type: string\n    Address:\n      required:\n        - id\n        - owner\n        - createdAt\n        - createdBy\n      properties:\n        id:\n          type: string\n        owner:\n          type: string\n        displayName:\n          type: string\n        createdAt:\n          type: string\n          format: date-time\n        createdBy:\n          type: string\n    Workflow:\n      required:\n        - id\n        - name\n        - owner\n        - createdAt\n        - createdBy\n        - input\n        - trigger\n        - action\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        owner:\n          type: string\n        createdAt:\n          type: string\n          format: date-time\n        createdBy:\n          type: string\n        input:\n          type: string\n        trigger:\n          type: string\n        action:\n          type: string\n    Trigger:\n      required:\n        - id\n        - owner\n        - createdAt\n        - createdBy\n        - name\n        - criteria\n      properties:\n        id:\n          type: string\n        owner:\n          type: string\n        displayName:\n          type: string\n        createdAt:\n          type: string\n          format: date-time\n        createdBy:\n          type: string\n        name:\n          type: string\n        criteria:\n          $ref: '#/components/schemas/Criteria'\n    Criteria:\n      minProperties: 1\n      properties:\n        sentTo:\n          type: string\n        subjectContains:\n          type: string\n        from:\n          type: string\n        domain:\n          type: string\n        hasTheWords:\n          type: string\n        hasAttachments:\n          type: boolean\n    CriteriaOperand:\n      minProperties: 1\n      properties:\n        and:\n          type: array\n          items:\n            type: string\n        or:\n          type: array\n          items:\n            type: string\n    Key:\n      required:\n        - id\n        - name\n        - read\n        - write\n        - createdBy\n        - createdAt\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        read:\n          type: boolean\n        write:\n          type: boolean\n        createdBy:\n          type: string\n        createdAt:\n          type: string\n          format: date-time\n    VerificationEmail:\n      properties:\n        id:\n          type: string\n        type:\n          type: string\n          enum:\n            - email\n        email:\n          type: string\n        verified:\n          type: boolean\n        verifiedBy:\n          type: string\n        verifiedAt:\n          type: string\n          format: date-time\n    VerificationSms:\n      properties:\n        id:\n          type: string\n        type:\n          type: string\n          enum:\n            - sms\n        sms:\n          type: string\n        verified:\n          type: boolean\n        verifiedBy:\n          type: string\n        verifiedAt:\n          type: string\n          format: date-time\n    ErrorResponse:\n      required:\n        - error\n      properties:\n        error:\n          type: string\n    UpdateUserRequest:\n      required:\n        - displayName\n      properties:\n        displayName:\n          type: string\n    AddWorkspaceRequest:\n      required:\n        - workspace\n      properties:\n        workspace:\n          type: string\n    GetAllWorkspacesResponse:\n      required:\n        - list\n      properties:\n        list:\n          type: array\n          items:\n            type: object\n            oneOf:\n              - $ref: '#/components/schemas/Workspace'\n    AddAddressRequest:\n      required:\n        - address\n      properties:\n        address:\n          type: string\n    AddDomainRequest:\n      required:\n        - domain\n      properties:\n        domain:\n          type: string\n    DomainResponse:\n      required:\n        - domain\n        - records\n      properties:\n        domain:\n          type: string\n        records:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n              name:\n                type: string\n              value:\n                type: string\n            required:\n              - type\n              - name\n              - value\n    GetAllDomainsResponse:\n      required:\n        - list\n      properties:\n        id:\n          type: array\n          items:\n            type: string\n    CheckDomainVerify:\n      required:\n        - domain\n        - success\n      properties:\n        domain:\n          type: string\n        success:\n          type: boolean\n    GetAllAddressesResponse:\n      required:\n        - list\n      properties:\n        list:\n          type: array\n          items:\n            type: object\n            oneOf:\n              - $ref: '#/components/schemas/Address'\n    GetAllWorkflowsResponse:\n      required:\n        - list\n      properties:\n        list:\n          type: array\n          items:\n            type: object\n            oneOf:\n              - $ref: '#/components/schemas/Workflow'\n    AddWorkflowRequest:\n      required:\n        - name\n        - input\n        - action\n      properties:\n        name:\n          type: string\n        input:\n          type: string\n        trigger:\n          type: string\n        action:\n          type: string\n    SendRequest:\n      required:\n        - to\n        - from\n        - subject\n      properties:\n        to:\n          type: string\n        from:\n          type: string\n        subject:\n          type: string\n        text:\n          type: string\n        html:\n          type: string\n    GetAllKeysResponse:\n      required:\n        - list\n      properties:\n        list:\n          type: array\n          items:\n            type: object\n            oneOf:\n              - $ref: '#/components/schemas/Key'\n    AddKeyRequest:\n      required:\n        - name\n        - read\n        - write\n      properties:\n        name:\n          type: string\n        read:\n          type: boolean\n        write:\n          type: boolean\n    UpdateKeyRequest:\n      required:\n        - name\n        - read\n        - write\n      properties:\n        name:\n          type: string\n        read:\n          type: boolean\n        write:\n          type: boolean\n    AddKeyResponse:\n      properties:\n        id:\n          type: string\n    AddEmailVerificationRequest:\n      required:\n        - type\n        - email\n      properties:\n        type:\n          type: string\n          enum:\n            - email\n        email:\n          type: string\n    AddSmsVerificationRequest:\n      required:\n        - type\n        - sms\n      properties:\n        type:\n          type: string\n          enum:\n            - sms\n        sms:\n          type: string\n    AddVerificationResponse:\n      required:\n        - id\n      properties:\n        id:\n          type: string\n    VerifyEmailRequest:\n      required:\n        - email\n        - code\n      properties:\n        email:\n          type: string\n        code:\n          type: string\n    VerifySmsRequest:\n      required:\n        - sms\n        - code\n      properties:\n        sms:\n          type: string\n        code:\n          type: string\n    GetAllVerificationsResponse:\n      required:\n        - list\n      properties:\n        list:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/VerificationEmail'\n              - $ref: '#/components/schemas/VerificationSms'\n    AddTriggerRequest:\n      required:\n        - name\n        - criteria\n      properties:\n        name:\n          type: string\n        criteria:\n          oneOf:\n            - $ref: '#/components/schemas/Criteria'\n            - $ref: '#/components/schemas/CriteriaOperand'\n    AddTriggerResponse:\n      required:\n        - id\n      properties:\n        id:\n          type: string\n    AddActionResponse:\n      required:\n        - id\n      properties:\n        id:\n          type: string\n    GetAllTriggersResponse:\n      required:\n        - list\n      properties:\n        list:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/Trigger'\n    GetAllInputsResponse:\n      required:\n        - list\n      properties:\n        list:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/MailscriptEmailInput'\n    MailscriptEmailInput:\n      required:\n        - id\n        - name\n        - type\n        - owner\n        - createdAt\n        - createdBy\n        - address\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n          enum:\n            - mailescript-email\n        owner:\n          type: string\n        createdAt:\n          type: string\n          format: date-time\n        createdBy:\n          type: string\n        address:\n          type: string\n    AddActionForwardRequest:\n      required:\n        - name\n        - type\n        - config\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n          enum:\n            - mailscript-email\n        config:\n          type: object\n          required:\n            - type\n            - forward\n            - from\n            - key\n          properties:\n            type:\n              type: string\n              enum:\n                - forward\n            forward:\n              type: string\n            from:\n              type: string\n            key:\n              type: string\n    AddActionCombineRequest:\n      required:\n        - name\n        - list\n      properties:\n        name:\n          type: string\n        list:\n          type: array\n          items:\n            type: string\n    AddActionSmsRequest:\n      required:\n        - name\n        - type\n        - config\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n          enum:\n            - sms\n        config:\n          type: object\n          required:\n            - number\n            - text\n          properties:\n            number:\n              type: string\n            text:\n              type: string\n    AddActionDaemonRequest:\n      required:\n        - name\n        - type\n        - config\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n          enum:\n            - daemon\n        config:\n          type: object\n          required:\n            - body\n          properties:\n            daemon:\n              type: string\n            body:\n              type: string\n    AddActionWebhookRequest:\n      required:\n        - name\n        - type\n        - config\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n          enum:\n            - webhook\n        config:\n          type: object\n          required:\n            - url\n            - opts\n            - body\n          properties:\n            url:\n              type: string\n            opts:\n              type: object\n              required:\n                - headers\n                - method\n              properties:\n                headers:\n                  type: object\n                method:\n                  type: string\n                  enum:\n                    - POST\n                    - GET\n                    - DELETE\n            body:\n              type: string\n    AddActionSendRequest:\n      required:\n        - name\n        - type\n        - config\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n          enum:\n            - mailscript-email\n        config:\n          type: object\n          required:\n            - send\n            - subject\n            - from\n            - key\n          properties:\n            type:\n              type: string\n              enum:\n                - send\n            to:\n              type: string\n            subject:\n              type: string\n            text:\n              type: string\n            html:\n              type: string\n            from:\n              type: string\n            key:\n              type: string\n    AddActionReplyRequest:\n      required:\n        - name\n        - type\n        - config\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n          enum:\n            - mailscript-email\n        config:\n          type: object\n          required:\n            - type\n            - from\n            - key\n          properties:\n            type:\n              type: string\n              enum:\n                - reply\n            text:\n              type: string\n            html:\n              type: string\n            from:\n              type: string\n            key:\n              type: string\n    AddActionReplyAllRequest:\n      required:\n        - name\n        - type\n        - config\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n          enum:\n            - mailscript-email\n        config:\n          type: object\n          required:\n            - type\n            - from\n            - key\n          properties:\n            type:\n              type: string\n              enum:\n                - replyAll\n            text:\n              type: string\n            html:\n              type: string\n            from:\n              type: string\n            key:\n              type: string\n    AddActionAliasRequest:\n      required:\n        - name\n        - type\n        - config\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n          enum:\n            - mailscript-email\n        config:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - alias\n            alias:\n              type: string\n    GetAllActionsResponse:\n      required:\n        - list\n      properties:\n        list:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/ActionSend'\n              - $ref: '#/components/schemas/ActionCombine'\n    ActionSend:\n      required:\n        - id\n        - name\n        - owner\n        - createdAt\n        - createdBy\n        - output\n        - config\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        owner:\n          type: string\n        createdAt:\n          type: string\n          format: date-time\n        createdBy:\n          type: string\n        output:\n          type: string\n        config:\n          type: object\n          required:\n            - type\n            - subject\n          properties:\n            type:\n              type: string\n            subject:\n              type: string\n            text:\n              type: string\n            html:\n              type: string\n    ActionCombine:\n      required:\n        - id\n        - name\n        - owner\n        - createdAt\n        - createdBy\n        - output\n        - config\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        owner:\n          type: string\n        createdAt:\n          type: string\n          format: date-time\n        createdBy:\n          type: string\n        list:\n          type: array\n          items:\n            type: string\n    GetAllIntegrationsResponse:\n      required:\n        - list\n      properties:\n        list:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/Integration'\n    Integration:\n      required:\n        - id\n        - type\n        - createdAt\n      properties:\n        id:\n          type: string\n        type:\n          type: string\n          enum:\n            - google\n        createdAt:\n          type: string\n          format: date-time\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\nsecurity:\n  - bearerAuth: []\n",
			"canonicalURL": "/github.com/mailscript/cli@e00fd8af91a916b814ed8662eb3379da3467c98c/-/blob/api/swagger/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/mailscript/cli/blob/e00fd8af91a916b814ed8662eb3379da3467c98c/api/swagger/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/actions/{action}\": put: requestBody: contents: application/json: generate schema: oneOf: collect variants: UpdateActionReq: sum types with same names not implemented",
	"NotImplemented": [
		"sum types with same names"
	]
}