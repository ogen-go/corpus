{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/rodolfomiranda/sidetree-cardano"
		},
		"file": {
			"name": "api.yml",
			"size": 0,
			"path": "www/swagger/api.yml",
			"byteSize": 6610,
			"content": "openapi: 3.0.0\n# Added by API Auto Mocking Plugin\nservers:\n\n  - description: Sidetree-Cardano localhost\n    url: http://localhost:3000/\ninfo:\n  description: Sidetree-Cardano API.\n  version: \"1.0.0\"\n  title: Sidetree-Cardano REST API\ntags:\n  - name: Sidetree\n    description: APIs for interacting with the Sidetree Node.\npaths:\n  /operations:\n    post:\n      tags:\n        - Sidetree\n      summary: Writes an Operation to Sidetree.\n      operationId: writeSidetreeOperation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/SidetreeCreateOperation'\n                - $ref: '#/components/schemas/SidetreeUpdateOperation'\n                - $ref: '#/components/schemas/SidetreeRecoverOperation'\n                - $ref: '#/components/schemas/SidetreeDeactivateOperation'\n      responses:\n        '200':\n          description: Success\n        '400':\n          description: Bad Request\n        '401':\n          description: Unauthorized\n        '404':\n          description: Not Found\n        '500':\n          description: Server Error\n  /identifiers/{did-with-or-without-initial-state}:\n    get:\n      tags:\n        - Sidetree\n      summary: Resolve a Sidetree DID.\n      operationId: resolveSidetreeDID\n      parameters:\n        - in: path\n          required: true\n          name: did-with-or-without-initial-state\n          schema:\n            type: string\n          description: A DID to resolve\n          example: \"did:sidetree:EiAC2jrPmjaLI4xMiHTGWaKK29HmU9USFWA22lYc6CV0Bg?-sidetree-initial-state=eyJ0eXBlIjoiY3JlYXRlIiwic3VmZml4RGF0YSI6ImV5SnZjR1Z5WVhScGIyNUVZWFJoU0dGemFDSTZJa1ZwUW13Mk9IUktSRFp3YmxadVdHWTFURUZqY1VGWWJsRkhOR2syY2xKSGVuUmZlazEzYXpkaFZWUTBlVUVpTENKeVpXTnZkbVZ5ZVV0bGVTSTZleUp3ZFdKc2FXTkxaWGxJWlhnaU9pSXdNalE0WkRWaFlUbGxZamxqWVdZNE5EWmhNalZoTkRReE1qbGlPR013TURBek9HUTFObVJsTlROaVptTTNZbUU1TkRneU1tRTFNV1ZpTUdabU1EazNNbU1pZlN3aWJtVjRkRkpsWTI5MlpYSjVUM1J3U0dGemFDSTZJa1ZwUTI5aU5YZFZkMEV5U0VObVRGUjZjbmRHZG14b2JVSm5TRnB0ZEVsZmRXVXhNa1JuWHpsVlkxOXdlR2NpZlEiLCJvcGVyYXRpb25EYXRhIjoiZXlKdVpYaDBWWEJrWVhSbFQzUndTR0Z6YUNJNklrVnBSSEZMVDJ0ZlRsZHVZMkZrT0RJelYySm9WVGwyZUVwcmQwVnVTVFZHUlVNeU0xbDViRE5rUlZnNWJtY2lMQ0prYjJOMWJXVnVkQ0k2ZXlKQVkyOXVkR1Y0ZENJNkltaDBkSEJ6T2k4dmR6TnBaQzV2Y21jdlpHbGtMM1l4SWl3aWNIVmliR2xqUzJWNUlqcGJleUpwWkNJNklpTnphV2R1YVc1blMyVjVJaXdpZEhsd1pTSTZJbE5sWTNBeU5UWnJNVlpsY21sbWFXTmhkR2x2Ymt0bGVUSXdNVGdpTENKMWMyRm5aU0k2SW5OcFoyNXBibWNpTENKd2RXSnNhV05MWlhsSVpYZ2lPaUl3TTJKa01HVTBOREF3TlRKaU9UUXlaVE13T0dJNVptUXdPR1JpTWpsaFltTTRaRFl6TmpZNE5ESXpNMkZsT0Raa09Ea3lZVEk1WmpCak5qRTJabVV3TldVaWZWMHNJbk5sY25acFkyVWlPbHQ3SW1sa0lqb2lTV1JsYm5ScGRIbElkV0lpTENKMGVYQmxJam9pU1dSbGJuUnBkSGxJZFdJaUxDSnpaWEoyYVdObFJXNWtjRzlwYm5RaU9uc2lRR052Ym5SbGVIUWlPaUp6WTJobGJXRXVhV1JsYm5ScGRIa3VabTkxYm1SaGRHbHZiaTlvZFdJaUxDSkFkSGx3WlNJNklsVnpaWEpUWlhKMmFXTmxSVzVrY0c5cGJuUWlMQ0pwYm5OMFlXNWpaWE1pT2xzaVpHbGtPbk5wWkdWMGNtVmxPblpoYkhWbE1DSmRmWDFkZlgwIn0\"\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          description: Bad Request\n        '401':\n          description: Unauthorized\n        '404':\n          description: Not Found\n        '410':\n          description: DID is deactivated\n        '500':\n          description: Server Error\n  /version:\n    get:\n      tags:\n        - Sidetree\n      operationId: getVersion\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Version'\n        '400':\n          description: Bad Request\n        '401':\n          description: Unauthorized\n        '404':\n          description: Not Found\n        '500':\n          description: Server Error        \n          \ncomponents:\n  schemas:\n    Version:\n      type: object\n      properties:\n        name: \n          type: string\n          description: A string representing the name of the service.\n        version: \n          type: string\n          description: A string representing the version of currently running service.\n      example: {\n        \"name\": \"bitcoin\",\n        \"version\": \"1.0.0\"\n      }\n    SidetreeCreateOperation:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: [create]\n          example: \"create\"\n        suffix_data:\n          type: string\n          description: The Base64URL encoded Suffix Data Object.\n        delta:\n          type: string\n          description: The Base64URL encoded Create Operation Data Object.\n      description: Create operation.\n    SidetreeUpdateOperation:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: [update]\n          example: \"update\"\n        did_suffix:\n          type: string\n          description: The unique identifier string within a DID URI.\n        update_reveal_value:\n          type: string\n          description: The last update commitment value.\n        delta:\n          type: string\n          description: The Base64URL encoded Update Operation Data Object.\n        signed_data:\n          type: string\n          description: The JWS object as defined in Map File for Update operations.\n      description: Update operation.\n    SidetreeRecoverOperation:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: [recover]\n          description: Recover operation.\n          example: \"recover\"\n        did_suffix:\n          type: string\n          description: The unique identifier string within a DID URI.\n        recovery_reveal_value:\n          type: string\n          description: The last recovery commitment value.\n        delta:\n          type: string\n          description: The Base64URL encoded Recover Operation Data Object.\n        signed_data:\n          type: string\n          description: The JWS object as defined in Anchor File for Recovery operations.\n      description: Recover operation.\n    SidetreeDeactivateOperation:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: [deactivate]\n          example: \"deactivate\"\n        did_suffix:\n          type: string\n          description: The unique identifier string within a DID URI.\n        recovery_reveal_value:\n          type: string\n          description: The last recovery commitment value.\n        signed_data:\n          type: string\n          description: The JWS object as defined in Anchor File for Deactivate operations.\n      description: Deactivate operation.\n\n         ",
			"canonicalURL": "/github.com/rodolfomiranda/sidetree-cardano@86576e837e139730808166784b715c87b502751b/-/blob/www/swagger/api.yml",
			"externalURLs": [
				{
					"url": "https://github.com/rodolfomiranda/sidetree-cardano/blob/86576e837e139730808166784b715c87b502751b/www/swagger/api.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/operations\": post: requestBody: contents: application/json: generate schema: oneOf: oneOf WriteSidetreeOperationReq: variant SidetreeDeactivateOperation: no unique fields, unable to parse without discriminator: discriminator inference not implemented",
	"NotImplemented": [
		"discriminator inference"
	]
}