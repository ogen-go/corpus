{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/lufthansa.com/partner/1.0/openapi.yaml",
			"byteSize": 37668,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://api.lufthansa.com/v1\ninfo:\n  description: \"\"\n  license:\n    name: LH\n    url: https://developer.lufthansa.com\n  title: LH Partner API\n  version: \"1.0\"\n  x-apisguru-categories:\n    - transport\n  x-logo:\n    backgroundColor: \"#FFFFFF\"\n    url: https://avatars2.githubusercontent.com/u/22329684?v=4\u0026s=200\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/LufthansaOpenAPI/Swagger4Partners/master/LH-OpenAPI-Partners-Swagger2.json\n      version: \"3.0\"\n  x-providerName: lufthansa.com\n  x-serviceName: partner\npaths:\n  \"/baggage/baggagetripandcontact/{searchID}\":\n    get:\n      description: Retrieve passenger trip, contact and baggage details. This service is only accessible for LH privileged partners\n      operationId: Baggage Trip and Contact\n      parameters:\n        - description: Bag tag number, PNR, boarding card or FQTV ID\n          in: path\n          name: searchID\n          required: true\n          schema:\n            type: string\n        - description: 'http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: \"\"\n      security:\n        - auth: []\n      summary: Baggage Trip and Contact\n      tags:\n        - Baggage\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /offers/fares/allfares:\n    get:\n      description: \"Retrieves all available fares for a specific Origin \u0026 Destination pair on a given date. Available fares are: One-way and Return for 4U. Return only for OS\"\n      operationId: All Fares\n      parameters:\n        - description: Specifies in which catalogue the fares need to be searched (e.g.'4U;OS').\n          in: query\n          name: catalogues\n          required: true\n          schema:\n            type: string\n        - description: Enter journey origin (e.g 'FRA').\n          in: query\n          name: origin\n          required: true\n          schema:\n            type: string\n        - description: Enter journey destination (e.g 'MAD').\n          in: query\n          name: destination\n          required: true\n          schema:\n            type: string\n        - description: Enter journey travel-date (e.g 2016-10-20)\n          in: query\n          name: travel-date\n          required: true\n          schema:\n            type: string\n        - description: Enter journey return-date (e.g 2016-10-31)'.\n          in: query\n          name: return-date\n          required: false\n          schema:\n            type: string\n        - description: 'Enter the required cabin class (e.g econonmy, business etc.). (Acceptable values are: \"\", \"economy\", \"premium economy\", \"business\", \"first\")'\n          in: query\n          name: cabin-class\n          required: false\n          schema:\n            default: economy\n            type: string\n        - description: Specifies the type and number of travelers (e.g. '(adult=2;child=2;infant=1)') For LH only (adult=1) possible.\n          in: query\n          name: travelers\n          required: false\n          schema:\n            type: string\n        - description: 'Mandatory for 4U. Specifies, which fares to be returned, such as basic, smart, best, smartflex, bestflex . (Acceptable values are: \"\", \"basic\", \"smart\", \"best\", \"smartflex\", \"bestflex\")'\n          in: query\n          name: fare-family\n          required: false\n          schema:\n            default: smart\n            type: string\n        - description: Austrian Airlines only - specify the web tracking id to be used in OS Deep link.\n          in: query\n          name: trackingid\n          required: false\n          schema:\n            type: string\n        - description: \"Mandatory http header:  application/xml or application/json\"\n          in: header\n          name: Accept\n          required: false\n          schema:\n            default: application/json\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: \"\"\n      security:\n        - auth: []\n      summary: All Fares\n      tags:\n        - Offers\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /offers/fares/bestfares:\n    get:\n      description: Retrieve best fares for the requested journey across multiple days or multiple months.\n      operationId: Best Fares\n      parameters:\n        - description: Search fares from these carriers' catalogues (e.g. '4U;OS;LH')\n          in: query\n          name: catalogues\n          required: true\n          schema:\n            type: string\n        - description: Journey origin. 3-letter IATA airport code (e.g. 'FRA')\n          in: query\n          name: origin\n          required: true\n          schema:\n            type: string\n        - description: Journey destination. 3-letter IATA airport code (e.g. 'MAD')\n          in: query\n          name: destination\n          required: true\n          schema:\n            type: string\n        - description: Journey travel-date (YYYY-MM-DD)\n          in: query\n          name: travel-date\n          required: true\n          schema:\n            type: string\n        - description: Trip duration in days (e.g. '7')\n          in: query\n          name: trip-duration\n          required: true\n          schema:\n            type: string\n        - description: \"Fare range: 'byday' or 'bymonth' (Acceptable values are: \\\"byday\\\", \\\"bymonth\\\")\"\n          in: query\n          name: range\n          required: true\n          schema:\n            type: string\n        - description: 'http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: \"Cabin class: 'economy', 'premium_economy', 'business', 'first' (Acceptable values are: \\\"\\\", \\\"economy\\\", \\\"premium_economy\\\", \\\"business\\\", \\\"first\\\")\"\n          in: query\n          name: cabin-class\n          required: false\n          schema:\n            type: string\n        - description: Country code of requestor. 2-letter ISO 3166-1 country code (e.g. 'de')\n          in: query\n          name: country\n          required: false\n          schema:\n            type: string\n        - description: Austrian Airlines only - specify the web tracking id to be used in OS Deep link.\n          in: query\n          name: trackingid\n          required: false\n          schema:\n            type: string\n        - description: 'Fare family: basic, smart, best, smartflex, bestflex - Germanwings only (Acceptable values are: \"\", \"basic\", \"smart\", \"best\", \"smartflex\", \"bestflex\")'\n          in: query\n          name: fare-family\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: \"\"\n      security:\n        - auth: []\n      summary: Best Fares\n      tags:\n        - Offers\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /offers/fares/deeplink:\n    get:\n      description: Returns valid deep links for the provided input parameters\n      operationId: Deep Links\n      parameters:\n        - description: Carrier for which the deep link will be created (e.g. 'LH')\n          in: query\n          name: catalogues\n          required: true\n          schema:\n            type: string\n        - description: Deep link tracking ID\n          in: query\n          name: trackingid\n          required: true\n          schema:\n            type: string\n        - description: 2-letter ISO 3166-1 country code\n          in: query\n          name: country\n          required: true\n          schema:\n            type: string\n        - description: 2-letter ISO 3166-1 language code\n          in: query\n          name: lang\n          required: true\n          schema:\n            type: string\n        - description: 'http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: Journey origin. 3-letter IATA airport or city code (e.g. 'FRA')\n          in: query\n          name: origin\n          required: false\n          schema:\n            type: string\n        - description: Journey origin airport or city name (e.g. 'frankfurt')\n          in: query\n          name: origin-name\n          required: false\n          schema:\n            type: string\n        - description: Journey destination. 3-letter IATA airport or city code (e.g. 'MAD')\n          in: query\n          name: destination\n          required: false\n          schema:\n            type: string\n        - description: Journey destination airport or city name (e.g. 'madrid')\n          in: query\n          name: destination-name\n          required: false\n          schema:\n            type: string\n        - description: Journey travel-date (YYYY-MM-DD)\n          in: query\n          name: travel-date\n          required: false\n          schema:\n            type: string\n        - description: Journey return-date (YYYY-MM-DD)\n          in: query\n          name: return-date\n          required: false\n          schema:\n            type: string\n        - description: \"Cabin class: 'economy', 'premium_economy', 'business', 'first' (Acceptable values are: \\\"\\\", \\\"economy\\\", \\\"premium_economy\\\", \\\"business\\\", \\\"first\\\")\"\n          in: query\n          name: cabin-class\n          required: false\n          schema:\n            type: string\n        - description: Outbound flight segments in the sequence of travel (e.g. 'LH096;LH480')\n          in: query\n          name: outbound-segments\n          required: false\n          schema:\n            type: string\n        - description: Flight segments in the sequence of travel (e.g. 'LH7465;LH431')\n          in: query\n          name: return-segments\n          required: false\n          schema:\n            type: string\n        - description: Type and number of travelers (e.g. '(adult=2;child=2;infant=1)')\n          in: query\n          name: travelers\n          required: false\n          schema:\n            type: string\n        - description: Travel fare (e.g. '1341.45')\n          in: query\n          name: fare\n          required: false\n          schema:\n            type: string\n        - description: Travel net fare. Total fare less taxes and charges (e.g. '1140')\n          in: query\n          name: net-fare\n          required: false\n          schema:\n            type: string\n        - description: Fare currency (e.g. 'EUR')\n          in: query\n          name: fare-currency\n          required: false\n          schema:\n            type: string\n        - description: Deep link partner id (e.g. '1247')\n          in: query\n          name: partnerid\n          required: false\n          schema:\n            type: string\n        - description: Deep link encryption-key\n          in: query\n          name: encryption-key\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: \"\"\n      security:\n        - auth: []\n      summary: Deep Links\n      tags:\n        - Offers\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /offers/fares/deeplink/ffp:\n    get:\n      description: Returns valid LH deep links (FFP - links to flight selection screen on LH.COM)\n      operationId: LH Deep Links - FFP\n      parameters:\n        - description: Carrier for which the deep link will be created (e.g. 'LH')\n          in: query\n          name: catalogues\n          required: true\n          schema:\n            type: string\n        - description: Journey origin. 3-letter IATA airport or city code (e.g. 'FRA')\n          in: query\n          name: origin\n          required: true\n          schema:\n            type: string\n        - description: Journey destination. 3-letter IATA airport or city code (e.g. 'MAD')\n          in: query\n          name: destination\n          required: true\n          schema:\n            type: string\n        - description: Journey travel-date (YYYY-MM-DD)\n          in: query\n          name: travel-date\n          required: true\n          schema:\n            type: string\n        - description: Deep link tracking ID\n          in: query\n          name: trackingid\n          required: true\n          schema:\n            type: string\n        - description: 2-letter ISO 3166-1 country code\n          in: query\n          name: country\n          required: true\n          schema:\n            type: string\n        - description: 2-letter ISO 3166-1 language code\n          in: query\n          name: lang\n          required: true\n          schema:\n            type: string\n        - description: 'http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: Journey return-date (YYYY-MM-DD)\n          in: query\n          name: return-date\n          required: false\n          schema:\n            type: string\n        - description: \"Cabin class: 'economy', 'premium_economy', 'business', 'first' (Acceptable values are: \\\"\\\", \\\"economy\\\", \\\"premium_economy\\\", \\\"business\\\", \\\"first\\\")\"\n          in: query\n          name: cabin-class\n          required: false\n          schema:\n            type: string\n        - description: Type and number of travelers (e.g. '(adult=2;child=2;infant=1)')\n          in: query\n          name: travelers\n          required: false\n          schema:\n            type: string\n        - description: Deep link partner id (e.g. '1247')\n          in: query\n          name: partnerid\n          required: false\n          schema:\n            type: string\n        - description: Deep link encryption-key\n          in: query\n          name: encryption-key\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: \"\"\n      security:\n        - auth: []\n      summary: LH Deep Links - FFP\n      tags:\n        - Offers\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /offers/fares/deeplink/itco:\n    get:\n      description: Returns valid LH deep links (ITCO - links to shopping cart on LH.COM)\n      operationId: LH Deep Links - ITCO\n      parameters:\n        - description: Carrier for which the deep link will be created (e.g. 'LH')\n          in: query\n          name: catalogues\n          required: true\n          schema:\n            type: string\n        - description: Journey origin. 3-letter IATA airport or city code (e.g. 'FRA')\n          in: query\n          name: origin\n          required: true\n          schema:\n            type: string\n        - description: Journey destination. 3-letter IATA airport or city code (e.g. 'MAD')\n          in: query\n          name: destination\n          required: true\n          schema:\n            type: string\n        - description: Journey travel-date (YYYY-MM-DD)\n          in: query\n          name: travel-date\n          required: true\n          schema:\n            type: string\n        - description: Outbound flight segments in the sequence of travel (e.g. 'LH096;LH480')\n          in: query\n          name: outbound-segments\n          required: true\n          schema:\n            type: string\n        - description: Travel fare (e.g. '1341.45')\n          in: query\n          name: fare\n          required: true\n          schema:\n            type: string\n        - description: Fare currency (e.g. 'EUR')\n          in: query\n          name: fare-currency\n          required: true\n          schema:\n            type: string\n        - description: Deep link tracking ID\n          in: query\n          name: trackingid\n          required: true\n          schema:\n            type: string\n        - description: 2-letter ISO 3166-1 country code\n          in: query\n          name: country\n          required: true\n          schema:\n            type: string\n        - description: 2-letter ISO 3166-1 language code\n          in: query\n          name: lang\n          required: true\n          schema:\n            type: string\n        - description: 'http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: Journey return-date (YYYY-MM-DD)\n          in: query\n          name: return-date\n          required: false\n          schema:\n            type: string\n        - description: \"Cabin class: 'economy', 'premium_economy', 'business', 'first' (Acceptable values are: \\\"\\\", \\\"economy\\\", \\\"premium_economy\\\", \\\"business\\\", \\\"first\\\")\"\n          in: query\n          name: cabin-class\n          required: false\n          schema:\n            type: string\n        - description: Flight segments in the sequence of travel (e.g. 'LH7465;LH431')\n          in: query\n          name: return-segments\n          required: false\n          schema:\n            type: string\n        - description: Type and number of travelers (e.g. '(adult=2;child=2;infant=1)')\n          in: query\n          name: travelers\n          required: false\n          schema:\n            type: string\n        - description: Travel net fare. Total fare less taxes and charges (e.g. '1140')\n          in: query\n          name: net-fare\n          required: false\n          schema:\n            type: string\n        - description: Deep link partner id (e.g. '1247')\n          in: query\n          name: partnerid\n          required: false\n          schema:\n            type: string\n        - description: Deep link encryption-key\n          in: query\n          name: encryption-key\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: \"\"\n      security:\n        - auth: []\n      summary: LH Deep Links - ITCO\n      tags:\n        - Offers\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /offers/fares/fares:\n    get:\n      description: Retrieve all available fares per fare family for a specific Origin \u0026 Destination on a given date\n      operationId: Fares\n      parameters:\n        - description: Search fares from these carriers' catalogues - currently active for Germanwings only  (4U)\n          in: query\n          name: catalogues\n          required: true\n          schema:\n            type: string\n        - description: Journey details  e.g. (origin=TXL;destination=CGN;travel-date=2016-12-15;return-date=2016-12-20;cabin=Economy)\n          in: query\n          name: segments\n          required: true\n          schema:\n            type: string\n        - description: Include fares for these carriers e.g. ('4U;LH')\n          in: query\n          name: carriers\n          required: true\n          schema:\n            type: string\n        - description: 'http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: Type and number of travelers e.g. (adult=1;child=1;infant=1)\n          in: query\n          name: travelers\n          required: false\n          schema:\n            type: string\n        - description: 'Fares family: basic,smart, best, smartflex, bestflex - Germanwings only (Acceptable values are: \"\", \"basic\", \"smart\", \"best\", \"smartflex\", \"bestflex\")'\n          in: query\n          name: fare-types\n          required: false\n          schema:\n            default: basic\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: \"\"\n      security:\n        - auth: []\n      summary: Fares\n      tags:\n        - Offers\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /offers/fares/lowestfares:\n    get:\n      description: \"Retrieve lowest fare for a specific Origin \u0026 Destination pair on a given date. Available fares are: One-way and Return for 4U. Return only for OS \u0026 LH\"\n      operationId: Lowest Fares\n      parameters:\n        - description: Search fares from these carriers' catalogues e.g. '4U;OS;LH'\n          in: query\n          name: catalogues\n          required: true\n          schema:\n            type: string\n        - description: Journey origin. 3-letter IATA aiport code e.g. 'FRA'\n          in: query\n          name: origin\n          required: true\n          schema:\n            type: string\n        - description: Journey destination. 3-letter IATA airport code e.g. 'MAD'\n          in: query\n          name: destination\n          required: true\n          schema:\n            type: string\n        - description: Journey travel-date YYYY-MM-DD\n          in: query\n          name: travel-date\n          required: true\n          schema:\n            type: string\n        - description: 'http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: Journey return-date - mandatory for OS and LH searches YYYY-MM-DD\n          in: query\n          name: return-date\n          required: false\n          schema:\n            type: string\n        - description: \"Cabin class: 'economy', 'premium_economy', 'business', 'first' (Acceptable values are: \\\"\\\", \\\"economy\\\", \\\"premium_economy\\\", \\\"business\\\", \\\"first\\\")\"\n          in: query\n          name: cabin-class\n          required: false\n          schema:\n            type: string\n        - description: Type and number of travelers e.g. '(adult=2;child=2;infant=1)'. For LH only (adult=1) possible\n          in: query\n          name: travelers\n          required: false\n          schema:\n            type: string\n        - description: 'Fare family: basic, smart, best, smartflex, bestflex - Germanwings only (Acceptable values are: \"\", \"basic\", \"smart\", \"best\", \"smartflex\", \"bestflex\")'\n          in: query\n          name: fare-family\n          required: false\n          schema:\n            default: basic\n            type: string\n        - description: Country code of requestor. 2-letter ISO 3166-1 country code (e.g. 'de')\n          in: query\n          name: country\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: \"\"\n      security:\n        - auth: []\n      summary: Lowest Fares\n      tags:\n        - Offers\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /offers/fares/subscriptions:\n    get:\n      description: Create a subscription for best price O\u0026D. Receive regular updates on lowest fares\n      operationId: Fares Subscriptions\n      parameters:\n        - description: Journey origin. 3-leter IATA airport code (e.g. 'FRA')\n          in: query\n          name: origin\n          required: true\n          schema:\n            type: string\n        - description: Journey destination. 3-letter IATA airport code (e.g. 'MAD')\n          in: query\n          name: destination\n          required: true\n          schema:\n            type: string\n        - description: \"Cabin class: 'economy', 'premium_economy', 'business', 'first' (Acceptable values are: \\\"\\\", \\\"economy\\\", \\\"premium_economy\\\", \\\"business\\\", \\\"first\\\")\"\n          in: query\n          name: cabin-class\n          required: true\n          schema:\n            type: string\n        - description: Trip duration in days (e.g. '7')\n          in: query\n          name: trip-duration\n          required: true\n          schema:\n            type: string\n        - description: Email Address')\n          in: query\n          name: email\n          required: true\n          schema:\n            type: string\n        - description: 2-letter ISO 3166-1 language code\n          in: query\n          name: lang\n          required: true\n          schema:\n            type: string\n        - description: 'http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: 2-letter ISO 3166-1 country code\n          in: query\n          name: country\n          required: false\n          schema:\n            type: string\n        - description: Tracking parameter\n          in: query\n          name: trackingid\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: \"\"\n      security:\n        - auth: []\n      summary: Fares Subscriptions\n      tags:\n        - Offers\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/offers/ond/route/{origin}/{destination}\":\n    get:\n      description: Returns LH route origin \u0026 destination information\n      operationId: OND Route\n      parameters:\n        - description: Enter either the orgin city or orgin country code (e.g 'FRA' or 'DE'). Enter '*' for all\n          in: path\n          name: origin\n          required: true\n          schema:\n            type: string\n        - description: Enter either the destination city or country code (e.g 'MAD' or 'ES'). Enter '*' for all\n          in: path\n          name: destination\n          required: true\n          schema:\n            type: string\n        - description: \"Mandatory http header:  application/xml or application/json\"\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: Carrier for which the OND will be retrieved (e.g. 'LH')\n          in: query\n          name: catalogues\n          required: false\n          schema:\n            default: LH\n            type: string\n        - description: Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n        - description: Number of records skipped. Defaults to 0\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: \"\"\n      security:\n        - auth: []\n      summary: OND Route\n      tags:\n        - Offers\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /offers/ond/status:\n    get:\n      description: Returns LH network route status information. Search for recently added or retired routes\n      operationId: OND Status\n      parameters:\n        - description: \"Mandatory http header:  application/xml or application/json\"\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: Carrier for which the OND will be retrieved (e.g. 'LH')\n          in: query\n          name: catalogues\n          required: false\n          schema:\n            default: LH\n            type: string\n        - description: 'Enter if newly added routes should be returned in the response. (Acceptable values are: \"\", \"true\", \"false\")'\n          in: query\n          name: new-routes\n          required: false\n          schema:\n            type: string\n        - description: 'Enter if old (deleted) routes should be returned in the response. (Acceptable values are: \"\", \"true\", \"false\")'\n          in: query\n          name: old-routes\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: \"\"\n      security:\n        - auth: []\n      summary: OND Status\n      tags:\n        - Offers\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  /offers/ond/top:\n    get:\n      description: Returns LH Top routes per country or across all countries\n      operationId: Top OND\n      parameters:\n        - description: \"Mandatory http header:  application/xml or application/json\"\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: Carrier for which the OND will be retrieved (e.g. 'LH')\n          in: query\n          name: catalogues\n          required: false\n          schema:\n            default: LH\n            type: string\n        - description: Enter the origin country code (e.g. 'DE'). Leave empty to search Top OND across all countries\n          in: query\n          name: origin\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: \"\"\n      security:\n        - auth: []\n      summary: Top OND\n      tags:\n        - Offers\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/orders/orders/{orderID}/{name}\":\n    get:\n      description: Retrieve order by ID and optionally name. This service is only accessible for LH privileged partners\n      operationId: Orders\n      parameters:\n        - description: Unique order identifier\n          in: path\n          name: orderID\n          required: true\n          schema:\n            type: string\n        - description: 'http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: Surname of traveller\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: \"\"\n      security:\n        - auth: []\n      summary: Orders\n      tags:\n        - Orders\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/preflight/autocheckin/{ticketnumber}\":\n    put:\n      description: Trigger an automatic check-in given a ticket number. This service is only accessible for LH privileged partners\n      operationId: Auto Check-In\n      parameters:\n        - description: Ticket number\n          in: path\n          name: ticketnumber\n          required: true\n          schema:\n            type: string\n        - description: Email address\n          in: query\n          name: emailAddress\n          required: true\n          schema:\n            type: string\n        - description: 'http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: \"\"\n      security:\n        - auth: []\n      summary: Auto Check-In\n      tags:\n        - Preflight\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/promotions/priceoffers/flights/ond/{origin}/{destination}\":\n    get:\n      description: Retrieve a best price offer given an origin and destination.\n      operationId: Price Offers\n      parameters:\n        - description: Departure city. 3-letter IATA city code\n          in: path\n          name: origin\n          required: true\n          schema:\n            type: string\n        - description: Destination city. 3-letter IATA city code\n          in: path\n          name: destination\n          required: true\n          schema:\n            type: string\n        - description: Departure date in local time (YYYY-MM-DD)\n          in: query\n          name: departureDate\n          required: true\n          schema:\n            type: string\n        - description: Return date in local time (YYYY-MM-DD)\n          in: query\n          name: returnDate\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter.\n          in: query\n          name: service\n          required: false\n          schema:\n            default: amadeusBestPrice\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: \"\"\n      security:\n        - auth: []\n      summary: Price Offers\n      tags:\n        - Promotions\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\n  \"/references/seatdetails/{aircraftCode}/{cabinCode}\":\n    get:\n      description: A description of all available seat details by aircraft type. You can retrieve the full set or details for a particular aircraft type.\n      operationId: Seat Details\n      parameters:\n        - description: Aircraft type. 3-character IATA equipment code\n          in: path\n          name: aircraftCode\n          required: true\n          schema:\n            type: string\n        - description: 'http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")'\n          in: header\n          name: Accept\n          required: true\n          schema:\n            type: string\n        - description: 'Cabin class: M, E, C, F (Acceptable values are: \"\", \"M\", \"E\", \"C\", \"F\")'\n          in: path\n          name: cabinCode\n          required: true\n          schema:\n            default: C\n            type: string\n        - description: 2-letter ISO 3166-1 language code\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: \"\"\n      security:\n        - auth: []\n      summary: Seat Details\n      tags:\n        - Reference Data\n      x-operation-settings:\n        AllowDynamicFormParameters: false\n        AllowDynamicQueryParameters: false\n        CollectParameters: false\n        IsMultiContentStreaming: false\n      x-unitTests: []\ncomponents:\n  securitySchemes:\n    auth:\n      flows:\n        clientCredentials:\n          scopes:\n            read:LH Open API: read access\n          tokenUrl: https://api.lufthansa.com/v1/partners/oauth/token\n      type: oauth2\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/lufthansa.com/partner/1.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/lufthansa.com/partner/1.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/orders/orders/{orderID}/{name}\": get: security: security \"auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}