{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/salab/RefactorHub"
		},
		"file": {
			"name": "swagger.yml",
			"size": 0,
			"path": "docs/swagger.yml",
			"byteSize": 31233,
			"content": "openapi: 3.0.0\ninfo:\n  title: RefactorHub\n  description: RefactorHub API\n  version: 1.1.0\n\nservers:\n  - url: \"https://refactorhub.com/api\"\n    description: production\n  - url: \"http://localhost:8080/api\"\n    description: local\n\ntags:\n  - name: users\n    description: User\n  - name: commits\n    description: Commit\n  - name: refactorings\n    description: Refactoring\n  - name: refactoringTypes\n    description: RefactoringType\n  - name: drafts\n    description: RefactoringDraft\n  - name: annotator\n    description: Annotator\n  - name: elements\n    description: CodeElement\n  - name: experiments\n    description: Experiment\n  - name: actions\n    description: Action\n\npaths:\n  \"/users/{userId}\":\n    parameters:\n      - $ref: \"#/components/parameters/userIdInPath\"\n    get:\n      summary: get user\n      operationId: getUser\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"404\":\n          description: User is not found\n      tags:\n        - users\n  \"/users/{userId}/refactorings\":\n    parameters:\n      - $ref: \"#/components/parameters/userIdInPath\"\n    get:\n      summary: get refactorings the user has\n      operationId: getUserRefactorings\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Refactoring\"\n        \"404\":\n          description: User is not found\n      tags:\n        - users\n  \"/users/{userId}/drafts\":\n    parameters:\n      - $ref: \"#/components/parameters/userIdInPath\"\n    get:\n      summary: get drafts the user has\n      operationId: getUserDrafts\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/RefactoringDraft\"\n        \"404\":\n          description: User is not found\n      tags:\n        - users\n  \"/users/me\":\n    get:\n      summary: get logged in user\n      operationId: getMe\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"401\":\n          description: You are not logged in\n      tags:\n        - users\n\n  \"/commits/{commitOwner}/{commitRepository}/{commitSha}\":\n    parameters:\n      - $ref: \"#/components/parameters/commitOwnerInPath\"\n      - $ref: \"#/components/parameters/commitRepositoryInPath\"\n      - $ref: \"#/components/parameters/commitShaInPath\"\n    get:\n      summary: get commit\n      operationId: getCommit\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Commit\"\n        \"404\":\n          description: Commit is not found\n      tags:\n        - commits\n  \"/commits/{commitOwner}/{commitRepository}/{commitSha}/detail\":\n    parameters:\n      - $ref: \"#/components/parameters/commitOwnerInPath\"\n      - $ref: \"#/components/parameters/commitRepositoryInPath\"\n      - $ref: \"#/components/parameters/commitShaInPath\"\n    get:\n      summary: get commit detail\n      operationId: getCommitDetail\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitDetail\"\n        \"400\":\n          description: First commit is not supported\n        \"404\":\n          description: Commit is not found\n      tags:\n        - commits\n\n  \"/refactorings\":\n    get:\n      summary: get all refactorings\n      operationId: getAllRefactorings\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Refactoring\"\n      tags:\n        - refactorings\n    post:\n      summary: create a new refactoring\n      operationId: createRefactoring\n      security:\n        - cookieAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateRefactoringRequest\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Refactoring\"\n        \"401\":\n          description: You are not logged in\n      tags:\n        - refactorings\n  \"/refactorings/{refactoringId}\":\n    parameters:\n      - $ref: \"#/components/parameters/refactoringIdInPath\"\n    get:\n      summary: get refactoring\n      operationId: getRefactoring\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Refactoring\"\n        \"404\":\n          description: Refactoring is not found\n      tags:\n        - refactorings\n  \"/refactorings/{refactoringId}/children\":\n    parameters:\n      - $ref: \"#/components/parameters/refactoringIdInPath\"\n    get:\n      summary: get refactoring children of the refactoring\n      operationId: getRefactoringChildren\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Refactoring\"\n        \"404\":\n          description: Refactoring is not found\n      tags:\n        - refactorings\n  \"/refactorings/{refactoringId}/drafts\":\n    parameters:\n      - $ref: \"#/components/parameters/refactoringIdInPath\"\n    get:\n      summary: get editing refactoring drafts of the refactoring\n      operationId: getRefactoringDrafts\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/RefactoringDraft\"\n        \"404\":\n          description: Refactoring is not found\n      tags:\n        - refactorings\n  \"/refactorings/{refactoringId}/fork\":\n    parameters:\n      - $ref: \"#/components/parameters/refactoringIdInPath\"\n    post:\n      summary: copy \u0026 create a new refactoring from the refactoring\n      operationId: forkRefactoring\n      security:\n        - cookieAuth: []\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefactoringDraft\"\n        \"401\":\n          description: You are not logged in\n        \"404\":\n          description: Refactoring is not found\n      tags:\n        - refactorings\n  \"/refactorings/{refactoringId}/edit\":\n    parameters:\n      - $ref: \"#/components/parameters/refactoringIdInPath\"\n    post:\n      summary: start to edit the refactoring\n      operationId: editRefactoring\n      security:\n        - cookieAuth: []\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefactoringDraft\"\n        \"401\":\n          description: You are not logged in\n        \"403\":\n          description: You are not an owner\n        \"404\":\n          description: Refactoring is not found\n      tags:\n        - refactorings\n\n  \"/refactoring_types\":\n    get:\n      summary: get all refactoring types\n      operationId: getAllRefactoringTypes\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/RefactoringType\"\n      tags:\n        - refactoringTypes\n    post:\n      summary: create a new refactoring type\n      operationId: createRefactoringType\n      security:\n        - cookieAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateRefactoringTypeRequest\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefactoringType\"\n        \"400\":\n          description: This name already exists\n      tags:\n        - refactoringTypes\n  \"/refactoring_types/{typeName}\":\n    parameters:\n      - $ref: \"#/components/parameters/typeNameInPath\"\n    get:\n      summary: get refactoring type\n      operationId: getRefactoringType\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefactoringType\"\n      tags:\n        - refactoringTypes\n\n  \"/drafts/{draftId}\":\n    parameters:\n      - $ref: \"#/components/parameters/draftIdInPath\"\n    get:\n      summary: get refactoring draft\n      operationId: getRefactoringDraft\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefactoringDraft\"\n        \"404\":\n          description: RefactoringDraft is not found\n      tags:\n        - drafts\n    patch:\n      summary: update description or type of refactoring draft\n      operationId: updateRefactoringDraft\n      security:\n        - cookieAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateRefactoringDraftRequest\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefactoringDraft\"\n        \"404\":\n          description: RefactoringDraft is not found\n      tags:\n        - drafts\n  \"/drafts/{draftId}/save\":\n    parameters:\n      - $ref: \"#/components/parameters/draftIdInPath\"\n    post:\n      summary: save refactoring draft as refactoring\n      operationId: saveRefactoringDraft\n      security:\n        - cookieAuth: []\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Refactoring\"\n        \"404\":\n          description: RefactoringDraft is not found\n      tags:\n        - drafts\n  \"/drafts/{draftId}/discard\":\n    parameters:\n      - $ref: \"#/components/parameters/draftIdInPath\"\n    post:\n      summary: discard refactoring draft\n      operationId: discardRefactoringDraft\n      security:\n        - cookieAuth: []\n      responses:\n        \"200\":\n          description: OK\n        \"404\":\n          description: RefactoringDraft is not found\n      tags:\n        - drafts\n  \"/drafts/{draftId}/{diffCategory}\":\n    parameters:\n      - $ref: \"#/components/parameters/draftIdInPath\"\n      - $ref: \"#/components/parameters/diffCategoryInPath\"\n    put:\n      summary: put CodeElementHolder on refactoring draft data[category]\n      operationId: putRefactoringDraftElementKey\n      security:\n        - cookieAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PutCodeElementHolderRequest\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefactoringDraft\"\n        \"400\":\n          description: Bad Request\n        \"404\":\n          description: RefactoringDraft is not found\n      tags:\n        - drafts\n  \"/drafts/{draftId}/{diffCategory}/{elementKey}\":\n    parameters:\n      - $ref: \"#/components/parameters/draftIdInPath\"\n      - $ref: \"#/components/parameters/diffCategoryInPath\"\n      - $ref: \"#/components/parameters/elementKeyInPath\"\n    delete:\n      summary: remove CodeElementHolder on refactoring draft data[category]\n      operationId: removeCodeElementHolder\n      security:\n        - cookieAuth: []\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefactoringDraft\"\n        \"400\":\n          description: Bad Request\n        \"404\":\n          description: RefactoringDraft is not found\n      tags:\n        - drafts\n    post:\n      summary: append default CodeElement value on refactoring draft data[category][key].elements\n      operationId: appendCodeElementDefaultValue\n      security:\n        - cookieAuth: []\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefactoringDraft\"\n        \"400\":\n          description: Bad Request\n        \"404\":\n          description: RefactoringDraft is not found\n      tags:\n        - drafts\n    patch:\n      summary: verify CodeElementHolder on refactoring draft data[category][key]\n      operationId: verifyCodeElementHolder\n      security:\n        - cookieAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/VerifyCodeElementHolderRequest\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefactoringDraft\"\n        \"400\":\n          description: Bad Request\n        \"404\":\n          description: RefactoringDraft is not found\n      tags:\n        - drafts\n  \"/drafts/{draftId}/{diffCategory}/{elementKey}/{elementIndex}\":\n    parameters:\n      - $ref: \"#/components/parameters/draftIdInPath\"\n      - $ref: \"#/components/parameters/diffCategoryInPath\"\n      - $ref: \"#/components/parameters/elementKeyInPath\"\n      - $ref: \"#/components/parameters/elementIndexInPath\"\n    patch:\n      summary: update CodeElement value of refactoring draft data[category][key].elements[index]\n      operationId: updateCodeElementValue\n      security:\n        - cookieAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateCodeElementValueRequest\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefactoringDraft\"\n        \"400\":\n          description: Bad Request\n        \"404\":\n          description: RefactoringDraft is not found\n      tags:\n        - drafts\n    delete:\n      summary: delete element value of refactoring draft data[category][key].elements[index]\n      operationId: deleteRefactoringDraftElementValue\n      security:\n        - cookieAuth: []\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefactoringDraft\"\n        \"400\":\n          description: Bad Request\n        \"404\":\n          description: RefactoringDraft is not found\n      tags:\n        - drafts\n\n  \"/elements/types\":\n    get:\n      summary: get all CodeElement types\n      operationId: getCodeElementTypes\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n      tags:\n        - elements\n\n  \"/annotator/content\":\n    get:\n      summary: get FileContent with CodeElements\n      operationId: getFileContent\n      parameters:\n        - in: query\n          name: owner\n          schema:\n            type: string\n        - in: query\n          name: repository\n          schema:\n            type: string\n        - in: query\n          name: sha\n          schema:\n            type: string\n        - in: query\n          name: category\n          schema:\n            type: string\n            enum: [before, after]\n        - in: query\n          name: path\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileContent\"\n      tags:\n        - annotator\n\n  \"/annotator/content/prepare\":\n    post:\n      summary: prepare CommitContents\n      operationId: prepareCommitContents\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: boolean\n      tags:\n        - annotator\n\n  \"/experiments\":\n    get:\n      summary: get all experiments\n      operationId: getAllExperiments\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Experiment\"\n      tags:\n        - experiments\n    post:\n      summary: create a new experiment\n      operationId: createExperiment\n      security:\n        - cookieAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateExperimentRequest\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Experiment\"\n        \"401\":\n          description: You are not logged in\n      tags:\n        - experiments\n  \"/experiments/{experimentId}\":\n    parameters:\n      - $ref: \"#/components/parameters/experimentIdInPath\"\n    get:\n      summary: get experiment\n      operationId: getExperiment\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Experiment\"\n        \"404\":\n          description: Experiment is not found\n      tags:\n        - experiments\n  \"/experiments/{experimentId}/result\":\n    parameters:\n      - $ref: \"#/components/parameters/experimentIdInPath\"\n    get:\n      summary: get experiment result\n      operationId: getExperimentResult\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Refactoring\"\n        \"404\":\n          description: Experiment is not found\n      tags:\n        - experiments\n  \"/experiments/{experimentId}/refactorings\":\n    parameters:\n      - $ref: \"#/components/parameters/experimentIdInPath\"\n    get:\n      summary: get experiment refactorings\n      operationId: getExperimentRefactorings\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Refactoring\"\n        \"404\":\n          description: Experiment is not found\n      tags:\n        - experiments\n\n  \"/actions\":\n    post:\n      summary: logging actions\n      operationId: postAction\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ActionRequest\"\n      responses:\n        \"200\":\n          description: OK\n      tags:\n        - actions\n\ncomponents:\n  securitySchemes:\n    cookieAuth:\n      type: apiKey\n      in: cookie\n      name: app_session\n\n  schemas:\n    User:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n      required:\n        - id\n        - name\n\n    Commit:\n      type: object\n      properties:\n        owner:\n          type: string\n        repository:\n          type: string\n        sha:\n          type: string\n      required:\n        - owner\n        - repository\n        - sha\n    CommitDetail:\n      type: object\n      properties:\n        owner:\n          type: string\n        repository:\n          type: string\n        sha:\n          type: string\n        url:\n          type: string\n        message:\n          type: string\n        author:\n          type: string\n        authorDate:\n          type: string\n          format: date-time\n        files:\n          type: array\n          items:\n            $ref: \"#/components/schemas/CommitFile\"\n        parent:\n          type: string\n      required:\n        - owner\n        - repository\n        - sha\n        - url\n        - message\n        - author\n        - authorDate\n        - files\n        - parent\n    CommitFile:\n      type: object\n      properties:\n        sha:\n          type: string\n        status:\n          type: string\n          enum: [modified, added, removed, renamed]\n        name:\n          type: string\n        previousName:\n          type: string\n      required:\n        - sha\n        - status\n        - name\n        - previousName\n\n    Refactoring:\n      type: object\n      properties:\n        id:\n          type: integer\n        ownerId:\n          type: integer\n        parentId:\n          type: integer\n        commit:\n          $ref: \"#/components/schemas/Commit\"\n        type:\n          type: string\n        data:\n          $ref: \"#/components/schemas/RefactoringData\"\n        description:\n          type: string\n        isVerified:\n          type: boolean\n      required:\n        - id\n        - ownerId\n        - commit\n        - type\n        - data\n        - description\n        - isVerified\n    RefactoringData:\n      type: object\n      properties:\n        before:\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/CodeElementHolder\"\n        after:\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/CodeElementHolder\"\n      required:\n        - before\n        - after\n    RefactoringType:\n      type: object\n      properties:\n        id:\n          type: integer\n        ownerId:\n          type: integer\n        name:\n          type: string\n        before:\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/CodeElementMetadata\"\n        after:\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/CodeElementMetadata\"\n        description:\n          type: string\n        url:\n          type: string\n      required:\n        - id\n        - ownerId\n        - name\n        - before\n        - after\n        - description\n        - url\n\n    RefactoringDraft:\n      type: object\n      properties:\n        id:\n          type: integer\n        ownerId:\n          type: integer\n        originId:\n          type: integer\n        isFork:\n          type: boolean\n        commit:\n          $ref: \"#/components/schemas/Commit\"\n        type:\n          type: string\n        data:\n          $ref: \"#/components/schemas/RefactoringData\"\n        description:\n          type: string\n      required:\n        - id\n        - ownerId\n        - originId\n        - isFork\n        - commit\n        - type\n        - data\n        - description\n\n    Experiment:\n      type: object\n      properties:\n        id:\n          type: integer\n        ownerId:\n          type: integer\n        title:\n          type: string\n        description:\n          type: string\n        isActive:\n          type: boolean\n      required:\n        - id\n        - ownerId\n        - title\n        - description\n        - isActive\n\n    FileContent:\n      type: object\n      properties:\n        text:\n          type: string\n        extension:\n          type: string\n        uri:\n          type: string\n        elements:\n          type: array\n          items:\n            $ref: \"#/components/schemas/CodeElement\"\n      required:\n        - text\n        - extension\n        - uri\n        - elements\n\n    CodeElement:\n      type: object\n      properties:\n        type:\n          $ref: \"#/components/schemas/CodeElementType\"\n        location:\n          $ref: \"#/components/schemas/Location\"\n      required:\n        - type\n    CodeElementType:\n      type: string\n      enum:\n        [\n            PackageDeclaration,\n            TypeDeclaration,\n            ClassDeclaration,\n            InterfaceDeclaration,\n            EnumDeclaration,\n            FieldDeclaration,\n            FieldType,\n            MethodDeclaration,\n            ConstructorDeclaration,\n            ReturnType,\n            ParameterDeclaration,\n            ParameterType,\n            MethodInvocation,\n            VariableDeclaration,\n            VariableType,\n            SimpleName,\n            Statement,\n            CodeFragment,\n        ]\n    CodeElementHolder:\n      type: object\n      properties:\n        type:\n          $ref: \"#/components/schemas/CodeElementType\"\n        multiple:\n          type: boolean\n        elements:\n          type: array\n          items:\n            $ref: \"#/components/schemas/CodeElement\"\n        state:\n          $ref: \"#/components/schemas/CodeElementHolderState\"\n      required:\n        - type\n        - multiple\n        - elements\n        - state\n    CodeElementHolderState:\n      type: string\n      enum: [None, Autofill, Manual]\n    CodeElementMetadata:\n      type: object\n      properties:\n        type:\n          $ref: \"#/components/schemas/CodeElementType\"\n        multiple:\n          type: boolean\n        required:\n          type: boolean\n        autofills:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Autofill\"\n        description:\n          type: string\n      required:\n        - type\n        - multiple\n        - required\n        - autofills\n        - description\n\n    Location:\n      type: object\n      properties:\n        path:\n          type: string\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - path\n    Range:\n      type: object\n      properties:\n        startLine:\n          type: integer\n        startColumn:\n          type: integer\n        endLine:\n          type: integer\n        endColumn:\n          type: integer\n      required:\n        - startLine\n        - startColumn\n        - endLine\n        - endColumn\n\n    Autofill:\n      type: object\n      properties:\n        type:\n          $ref: \"#/components/schemas/AutofillType\"\n        follows:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Follow\"\n    AutofillType:\n      type: string\n      enum: [Reference, Surround, Package]\n    Follow:\n      type: object\n      properties:\n        category:\n          type: string\n          enum: [before, after]\n        name:\n          type: string\n      required:\n        - category\n        - name\n\n    Action:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/ActionName\"\n        type:\n          $ref: \"#/components/schemas/ActionType\"\n        user:\n          type: integer\n        time:\n          type: integer\n        data:\n          type: object\n      required:\n        - name\n        - type\n        - time\n        - data\n    ActionType:\n      type: string\n      enum: [Server, Client]\n    ActionName:\n      type: string\n      enum:\n        [\n            Save,\n            Discard,\n            Update,\n            PutCodeElementHolder,\n            RemoveCodeElementHolder,\n            VerifyCodeElementHolder,\n            AppendCodeElementDefaultValue,\n            UpdateCodeElementValue,\n            RemoveCodeElementValue,\n            Fork,\n            Edit,\n\n            OpenElementLocation,\n            ToggleEditingElement,\n            SetDisplayedFile,\n        ]\n\n    CreateRefactoringRequest:\n      type: object\n      properties:\n        commit:\n          $ref: \"#/components/schemas/Commit\"\n        type:\n          type: string\n        data:\n          $ref: \"#/components/schemas/RefactoringData\"\n        description:\n          type: string\n      required:\n        - commit\n        - type\n        - data\n        - description\n    CreateRefactoringTypeRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        before:\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/CodeElementMetadata\"\n        after:\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/CodeElementMetadata\"\n        description:\n          type: string\n      required:\n        - name\n        - before\n        - after\n        - description\n    CreateExperimentRequest:\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        refactorings:\n          type: array\n          items:\n            $ref: \"#/components/schemas/CreateRefactoringRequest\"\n      required:\n        - title\n        - description\n        - refactorings\n    UpdateRefactoringDraftRequest:\n      type: object\n      properties:\n        description:\n          type: string\n        type:\n          type: string\n    PutCodeElementHolderRequest:\n      type: object\n      properties:\n        key:\n          type: string\n        type:\n          type: string\n        multiple:\n          type: boolean\n      required:\n        - key\n        - type\n    VerifyCodeElementHolderRequest:\n      type: object\n      properties:\n        state:\n          type: boolean\n      required:\n        - state\n    UpdateCodeElementValueRequest:\n      type: object\n      properties:\n        element:\n          $ref: \"#/components/schemas/CodeElement\"\n      required:\n        - element\n    ActionRequest:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/ActionName\"\n        type:\n          $ref: \"#/components/schemas/ActionType\"\n        data:\n          type: object\n      required:\n        - name\n        - type\n        - data\n\n  parameters:\n    userIdInPath:\n      name: userId\n      in: path\n      required: true\n      schema:\n        type: integer\n    commitOwnerInPath:\n      name: commitOwner\n      in: path\n      required: true\n      schema:\n        type: string\n    commitRepositoryInPath:\n      name: commitRepository\n      in: path\n      required: true\n      schema:\n        type: string\n    commitShaInPath:\n      name: commitSha\n      in: path\n      required: true\n      schema:\n        type: string\n    refactoringIdInPath:\n      name: refactoringId\n      in: path\n      required: true\n      schema:\n        type: integer\n    typeNameInPath:\n      name: typeName\n      in: path\n      required: true\n      schema:\n        type: string\n    draftIdInPath:\n      name: draftId\n      in: path\n      required: true\n      schema:\n        type: integer\n    diffCategoryInPath:\n      name: diffCategory\n      in: path\n      required: true\n      schema:\n        type: string\n        enum: [before, after]\n    elementKeyInPath:\n      name: elementKey\n      in: path\n      required: true\n      schema:\n        type: string\n    elementIndexInPath:\n      name: elementIndex\n      in: path\n      required: true\n      schema:\n        type: integer\n    experimentIdInPath:\n      name: experimentId\n      in: path\n      required: true\n      schema:\n        type: integer\n",
			"canonicalURL": "/github.com/salab/RefactorHub@f876da7bcc7bceed549586f0f0300d20f2108fe0/-/blob/docs/swagger.yml",
			"externalURLs": [
				{
					"url": "https://github.com/salab/RefactorHub/blob/f876da7bcc7bceed549586f0f0300d20f2108fe0/docs/swagger.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/drafts/{draftId}/discard\": post: security: security \"cookieAuth\" (index 0): cookie security not implemented",
	"NotImplemented": [
		"cookie security"
	]
}