{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/onosproject/config-models"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "models/devicesim-1.0.x/openapi.yaml",
			"byteSize": 336612,
			"content": "# SPDX-FileCopyrightText: 2021-present Open Networking Foundation \u003cinfo@opennetworking.org\u003e\n#\n# SPDX-License-Identifier: Apache-2.0\ncomponents:\n  parameters:\n    target:\n      content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: target (target in onos-config)\n      in: path\n      name: target\n      required: true\n  requestBodies:\n    RequestBody_Components:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Components'\n    RequestBody_Components_Component:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Components_Component'\n    RequestBody_Components_Component_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Components_Component_Config'\n    RequestBody_Components_Component_Properties:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Components_Component_Properties'\n    RequestBody_Components_Component_Properties_Property:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Components_Component_Properties_Property'\n    RequestBody_Components_Component_Properties_Property_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Components_Component_Properties_Property_Config'\n    RequestBody_Components_Component_Properties_Property_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Components_Component_Properties_Property_State'\n    RequestBody_Components_Component_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Components_Component_State'\n    RequestBody_Components_Component_State_Temperature:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Components_Component_State_Temperature'\n    RequestBody_Components_Component_Subcomponents:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Components_Component_Subcomponents'\n    RequestBody_Components_Component_Subcomponents_Subcomponent:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Components_Component_Subcomponents_Subcomponent'\n    RequestBody_Components_Component_Subcomponents_Subcomponent_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Components_Component_Subcomponents_Subcomponent_Config'\n    RequestBody_Components_Component_Subcomponents_Subcomponent_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Components_Component_Subcomponents_Subcomponent_State'\n    RequestBody_Interfaces:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Interfaces'\n    RequestBody_Interfaces_Interface:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Interfaces_Interface'\n    RequestBody_Interfaces_Interface_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Interfaces_Interface_Config'\n    RequestBody_Interfaces_Interface_Hold-time:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Interfaces_Interface_Hold-time'\n    RequestBody_Interfaces_Interface_Hold-time_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Interfaces_Interface_Hold-time_Config'\n    RequestBody_Interfaces_Interface_Hold-time_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Interfaces_Interface_Hold-time_State'\n    RequestBody_Interfaces_Interface_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Interfaces_Interface_State'\n    RequestBody_Interfaces_Interface_State_Counters:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Interfaces_Interface_State_Counters'\n    RequestBody_Interfaces_Interface_Subinterfaces:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces'\n    RequestBody_Interfaces_Interface_Subinterfaces_Subinterface:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface'\n    RequestBody_Interfaces_Interface_Subinterfaces_Subinterface_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface_Config'\n    RequestBody_Interfaces_Interface_Subinterfaces_Subinterface_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface_State'\n    RequestBody_Interfaces_Interface_Subinterfaces_Subinterface_State_Counters:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface_State_Counters'\n    RequestBody_System:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System'\n    RequestBody_System_Aaa:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa'\n    RequestBody_System_Aaa_Accounting:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Accounting'\n    RequestBody_System_Aaa_Accounting_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Accounting_Config'\n    RequestBody_System_Aaa_Accounting_Events:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Accounting_Events'\n    RequestBody_System_Aaa_Accounting_Events_Event:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Accounting_Events_Event'\n    RequestBody_System_Aaa_Accounting_Events_Event_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Accounting_Events_Event_Config'\n    RequestBody_System_Aaa_Accounting_Events_Event_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Accounting_Events_Event_State'\n    RequestBody_System_Aaa_Accounting_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Accounting_State'\n    RequestBody_System_Aaa_Authentication:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Authentication'\n    RequestBody_System_Aaa_Authentication_Admin-user:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Authentication_Admin-user'\n    RequestBody_System_Aaa_Authentication_Admin-user_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Authentication_Admin-user_Config'\n    RequestBody_System_Aaa_Authentication_Admin-user_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Authentication_Admin-user_State'\n    RequestBody_System_Aaa_Authentication_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Authentication_Config'\n    RequestBody_System_Aaa_Authentication_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Authentication_State'\n    RequestBody_System_Aaa_Authentication_Users:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Authentication_Users'\n    RequestBody_System_Aaa_Authentication_Users_User:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Authentication_Users_User'\n    RequestBody_System_Aaa_Authentication_Users_User_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Authentication_Users_User_Config'\n    RequestBody_System_Aaa_Authentication_Users_User_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Authentication_Users_User_State'\n    RequestBody_System_Aaa_Authorization:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Authorization'\n    RequestBody_System_Aaa_Authorization_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Authorization_Config'\n    RequestBody_System_Aaa_Authorization_Events:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Authorization_Events'\n    RequestBody_System_Aaa_Authorization_Events_Event:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Authorization_Events_Event'\n    RequestBody_System_Aaa_Authorization_Events_Event_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Authorization_Events_Event_Config'\n    RequestBody_System_Aaa_Authorization_Events_Event_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Authorization_Events_Event_State'\n    RequestBody_System_Aaa_Authorization_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Authorization_State'\n    RequestBody_System_Aaa_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Config'\n    RequestBody_System_Aaa_Server-groups:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Server-groups'\n    RequestBody_System_Aaa_Server-groups_Server-group:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group'\n    RequestBody_System_Aaa_Server-groups_Server-group_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Config'\n    RequestBody_System_Aaa_Server-groups_Server-group_Servers:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers'\n    RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server'\n    RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Config'\n    RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Radius:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius'\n    RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Radius_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius_Config'\n    RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State'\n    RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State_Counters:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State_Counters'\n    RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_State'\n    RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs'\n    RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_Config'\n    RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_State'\n    RequestBody_System_Aaa_Server-groups_Server-group_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_State'\n    RequestBody_System_Aaa_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Aaa_State'\n    RequestBody_System_Clock:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Clock'\n    RequestBody_System_Clock_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Clock_Config'\n    RequestBody_System_Clock_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Clock_State'\n    RequestBody_System_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Config'\n    RequestBody_System_Dns:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Dns'\n    RequestBody_System_Dns_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Dns_Config'\n    RequestBody_System_Dns_Host-entries:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Dns_Host-entries'\n    RequestBody_System_Dns_Host-entries_Host-entry:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Dns_Host-entries_Host-entry'\n    RequestBody_System_Dns_Host-entries_Host-entry_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Dns_Host-entries_Host-entry_Config'\n    RequestBody_System_Dns_Host-entries_Host-entry_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Dns_Host-entries_Host-entry_State'\n    RequestBody_System_Dns_Servers:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Dns_Servers'\n    RequestBody_System_Dns_Servers_Server:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Dns_Servers_Server'\n    RequestBody_System_Dns_Servers_Server_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Dns_Servers_Server_Config'\n    RequestBody_System_Dns_Servers_Server_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Dns_Servers_Server_State'\n    RequestBody_System_Dns_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Dns_State'\n    RequestBody_System_Logging:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Logging'\n    RequestBody_System_Logging_Console:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Logging_Console'\n    RequestBody_System_Logging_Console_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Logging_Console_Config'\n    RequestBody_System_Logging_Console_Selectors:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Logging_Console_Selectors'\n    RequestBody_System_Logging_Console_Selectors_Selector:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Logging_Console_Selectors_Selector'\n    RequestBody_System_Logging_Console_Selectors_Selector_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Logging_Console_Selectors_Selector_Config'\n    RequestBody_System_Logging_Console_Selectors_Selector_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Logging_Console_Selectors_Selector_State'\n    RequestBody_System_Logging_Console_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Logging_Console_State'\n    RequestBody_System_Logging_Remote-servers:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Logging_Remote-servers'\n    RequestBody_System_Logging_Remote-servers_Remote-server:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server'\n    RequestBody_System_Logging_Remote-servers_Remote-server_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Config'\n    RequestBody_System_Logging_Remote-servers_Remote-server_Selectors:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors'\n    RequestBody_System_Logging_Remote-servers_Remote-server_Selectors_Selector:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors_Selector'\n    RequestBody_System_Logging_Remote-servers_Remote-server_Selectors_Selector_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors_Selector_Config'\n    RequestBody_System_Logging_Remote-servers_Remote-server_Selectors_Selector_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors_Selector_State'\n    RequestBody_System_Logging_Remote-servers_Remote-server_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_State'\n    RequestBody_System_Memory:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Memory'\n    RequestBody_System_Memory_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Memory_Config'\n    RequestBody_System_Memory_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Memory_State'\n    RequestBody_System_Ntp:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Ntp'\n    RequestBody_System_Ntp_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Ntp_Config'\n    RequestBody_System_Ntp_Ntp-keys:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Ntp_Ntp-keys'\n    RequestBody_System_Ntp_Ntp-keys_Ntp-key:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Ntp_Ntp-keys_Ntp-key'\n    RequestBody_System_Ntp_Ntp-keys_Ntp-key_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Ntp_Ntp-keys_Ntp-key_Config'\n    RequestBody_System_Ntp_Ntp-keys_Ntp-key_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Ntp_Ntp-keys_Ntp-key_State'\n    RequestBody_System_Ntp_Servers:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Ntp_Servers'\n    RequestBody_System_Ntp_Servers_Server:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Ntp_Servers_Server'\n    RequestBody_System_Ntp_Servers_Server_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Ntp_Servers_Server_Config'\n    RequestBody_System_Ntp_Servers_Server_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Ntp_Servers_Server_State'\n    RequestBody_System_Ntp_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Ntp_State'\n    RequestBody_System_Openflow:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Openflow'\n    RequestBody_System_Openflow_Agent:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Openflow_Agent'\n    RequestBody_System_Openflow_Agent_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Openflow_Agent_Config'\n    RequestBody_System_Openflow_Agent_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Openflow_Agent_State'\n    RequestBody_System_Openflow_Controllers:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Openflow_Controllers'\n    RequestBody_System_Openflow_Controllers_Controller:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Openflow_Controllers_Controller'\n    RequestBody_System_Openflow_Controllers_Controller_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Config'\n    RequestBody_System_Openflow_Controllers_Controller_Connections:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections'\n    RequestBody_System_Openflow_Controllers_Controller_Connections_Connection:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections_Connection'\n    RequestBody_System_Openflow_Controllers_Controller_Connections_Connection_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections_Connection_Config'\n    RequestBody_System_Openflow_Controllers_Controller_Connections_Connection_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections_Connection_State'\n    RequestBody_System_Openflow_Controllers_Controller_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Openflow_Controllers_Controller_State'\n    RequestBody_System_Processes:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Processes'\n    RequestBody_System_Processes_Process:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Processes_Process'\n    RequestBody_System_Processes_Process_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Processes_Process_State'\n    RequestBody_System_Ssh-server:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Ssh-server'\n    RequestBody_System_Ssh-server_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Ssh-server_Config'\n    RequestBody_System_Ssh-server_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Ssh-server_State'\n    RequestBody_System_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_State'\n    RequestBody_System_Telnet-server:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Telnet-server'\n    RequestBody_System_Telnet-server_Config:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Telnet-server_Config'\n    RequestBody_System_Telnet-server_State:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/System_Telnet-server_State'\n  schemas:\n    AdditionalPropertiesUnchTarget:\n      description: both the additional property 'unchanged' and the 'target'\n      properties:\n        target:\n          description: an override of the target (target)\n          title: target\n          type: string\n        unchanged:\n          description: A comma seperated list of unchanged mandatory attribute names\n          title: unchanged\n          type: string\n      title: AdditionalPropertiesUnchTarget\n      type: object\n    AdditionalPropertyTarget:\n      description: Optionally specify a target other than the default (only on PATCH\n        method)\n      properties:\n        target:\n          description: an override of the target (target)\n          title: target\n          type: string\n      title: AdditionalPropertyTarget\n      type: object\n    AdditionalPropertyUnchanged:\n      description: To optionally omit 'required' properties, add them to 'unchanged'\n        list\n      properties:\n        unchanged:\n          description: A comma seperated list of unchanged mandatory attribute names\n          title: unchanged\n          type: string\n      title: AdditionalPropertyUnchanged\n      type: object\n    Components:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyTarget'\n      description: Enclosing container for the components in the system.\n      properties:\n        component:\n          $ref: '#/components/schemas/Components_Component_List'\n      title: Components\n      type: object\n    Components_Component:\n      description: List of components, keyed by component name. (single)\n      properties:\n        config:\n          $ref: '#/components/schemas/Components_Component_Config'\n        name:\n          description: References the component name\n          title: name\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../config/name\n        properties:\n          $ref: '#/components/schemas/Components_Component_Properties'\n        state:\n          $ref: '#/components/schemas/Components_Component_State'\n        subcomponents:\n          $ref: '#/components/schemas/Components_Component_Subcomponents'\n      required:\n      - name\n      title: Components_Component\n      type: object\n      x-list-multiple: true\n    Components_Component_Config:\n      description: Configuration data for each component\n      properties:\n        name:\n          description: |-\n            Device name for the component -- this will not be a\n            configurable parameter on many implementations\n          title: name\n          type: string\n      title: Components_Component_Config\n      type: object\n    Components_Component_List:\n      description: List of components, keyed by component name. (list)\n      items:\n        $ref: '#/components/schemas/Components_Component'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - name\n      x-list-multiple: true\n    Components_Component_Properties:\n      description: 'Enclosing container '\n      properties:\n        property:\n          $ref: '#/components/schemas/Components_Component_Properties_Property_List'\n      title: Components_Component_Properties\n      type: object\n    Components_Component_Properties_Property:\n      description: List of system properties for the component (single)\n      properties:\n        config:\n          $ref: '#/components/schemas/Components_Component_Properties_Property_Config'\n        name:\n          description: Reference to the property name.\n          title: name\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../config/name\n        state:\n          $ref: '#/components/schemas/Components_Component_Properties_Property_State'\n      required:\n      - name\n      title: Components_Component_Properties_Property\n      type: object\n      x-list-multiple: true\n    Components_Component_Properties_Property_Config:\n      description: Configuration data for each property\n      properties:\n        name:\n          description: |-\n            System-supplied name of the property -- this is typically\n            non-configurable\n          title: name\n          type: string\n        value:\n          description: |-\n            Property values can take on a variety of types.  Signed and\n            unsigned integer types may be provided in smaller sizes,\n            e.g., int8, uint16, etc.\n          title: value\n          type: string\n      title: Components_Component_Properties_Property_Config\n      type: object\n    Components_Component_Properties_Property_List:\n      description: List of system properties for the component (list)\n      items:\n        $ref: '#/components/schemas/Components_Component_Properties_Property'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - name\n      x-list-multiple: true\n    Components_Component_Properties_Property_State:\n      description: Operational state data for each property\n      properties:\n        configurable:\n          description: Indication whether the property is user-configurable\n          title: configurable\n          type: boolean\n        name:\n          description: |-\n            System-supplied name of the property -- this is typically\n            non-configurable\n          title: name\n          type: string\n        value:\n          description: |-\n            Property values can take on a variety of types.  Signed and\n            unsigned integer types may be provided in smaller sizes,\n            e.g., int8, uint16, etc.\n          title: value\n          type: string\n      title: Components_Component_Properties_Property_State\n      type: object\n    Components_Component_State:\n      description: Operational state data for each component\n      properties:\n        description:\n          description: System-supplied description of the component\n          title: description\n          type: string\n        id:\n          description: |-\n            Unique identifier assigned by the system for the\n            component\n          title: id\n          type: string\n        mfg-name:\n          description: |-\n            System-supplied identifier for the manufacturer of the\n            component.  This data is particularly useful when a\n            component manufacturer is different than the overall\n            device vendor.\n          title: mfg-name\n          type: string\n        name:\n          description: |-\n            Device name for the component -- this will not be a\n            configurable parameter on many implementations\n          title: name\n          type: string\n        part-no:\n          description: |-\n            System-assigned part number for the component.  This should\n            be present in particular if the component is also an FRU\n            (field replacable unit)\n          title: part-no\n          type: string\n        serial-no:\n          description: System-assigned serial number of the component.\n          title: serial-no\n          type: string\n        temperature:\n          $ref: '#/components/schemas/Components_Component_State_Temperature'\n        type:\n          description: Type of component as identified by the system\n          title: type\n          type: string\n        version:\n          description: |-\n            System-defined version string for a hardware, firmware,\n            or software component.\n          title: version\n          type: string\n      title: Components_Component_State\n      type: object\n    Components_Component_State_Temperature:\n      description: |-\n        Temperature in degrees Celsius of the component. Values include\n        the instantaneous, average, minimum, and maximum statistics. If\n        avg/min/max statistics are not supported, the target is expected\n        to just supply the instant value\n      properties:\n        avg:\n          description: |-\n            The arithmetic mean value of the statistic over the\n            sampling period.\n          maximum: 922337203685477600\n          minimum: -922337203685477600\n          title: avg\n          type: number\n        instant:\n          description: The instantaneous value of the statistic.\n          maximum: 922337203685477600\n          minimum: -922337203685477600\n          title: instant\n          type: number\n        max:\n          description: |-\n            The maximum value of the statistic over the sampling\n            period\n          maximum: 922337203685477600\n          minimum: -922337203685477600\n          title: max\n          type: number\n        min:\n          description: |-\n            The minimum value of the statistic over the sampling\n            period\n          maximum: 922337203685477600\n          minimum: -922337203685477600\n          title: min\n          type: number\n      title: Components_Component_State_Temperature\n      type: object\n    Components_Component_Subcomponents:\n      description: Enclosing container for subcomponent references\n      properties:\n        subcomponent:\n          $ref: '#/components/schemas/Components_Component_Subcomponents_Subcomponent_List'\n      title: Components_Component_Subcomponents\n      type: object\n    Components_Component_Subcomponents_Subcomponent:\n      description: List of subcomponent references (single)\n      properties:\n        config:\n          $ref: '#/components/schemas/Components_Component_Subcomponents_Subcomponent_Config'\n        name:\n          description: Reference to the name list key\n          title: name\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../config/name\n        state:\n          $ref: '#/components/schemas/Components_Component_Subcomponents_Subcomponent_State'\n      required:\n      - name\n      title: Components_Component_Subcomponents_Subcomponent\n      type: object\n      x-list-multiple: true\n    Components_Component_Subcomponents_Subcomponent_Config:\n      description: 'Configuration data '\n      properties:\n        name:\n          description: Reference to the name of the subcomponent\n          title: name\n          type: string\n          x-leafref: ../../../../../component/config/name\n      title: Components_Component_Subcomponents_Subcomponent_Config\n      type: object\n    Components_Component_Subcomponents_Subcomponent_List:\n      description: List of subcomponent references (list)\n      items:\n        $ref: '#/components/schemas/Components_Component_Subcomponents_Subcomponent'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - name\n      x-list-multiple: true\n    Components_Component_Subcomponents_Subcomponent_State:\n      description: 'Operational state data '\n      properties:\n        name:\n          description: Reference to the name of the subcomponent\n          title: name\n          type: string\n          x-leafref: ../../../../../component/config/name\n      title: Components_Component_Subcomponents_Subcomponent_State\n      type: object\n    Interfaces:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyTarget'\n      description: |-\n        Top level container for interfaces, including configuration\n        and state data.\n      properties:\n        interface:\n          $ref: '#/components/schemas/Interfaces_Interface_List'\n      title: Interfaces\n      type: object\n    Interfaces_Interface:\n      description: The list of named interfaces on the device. (single)\n      properties:\n        config:\n          $ref: '#/components/schemas/Interfaces_Interface_Config'\n        hold-time:\n          $ref: '#/components/schemas/Interfaces_Interface_Hold-time'\n        name:\n          description: References the configured name of the interface\n          title: name\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../config/name\n        state:\n          $ref: '#/components/schemas/Interfaces_Interface_State'\n        subinterfaces:\n          $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces'\n      required:\n      - name\n      title: Interfaces_Interface\n      type: object\n      x-list-multiple: true\n    Interfaces_Interface_Config:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyUnchanged'\n      description: |-\n        Configurable items at the global, physical interface\n        level\n      properties:\n        description:\n          description: |-\n            A textual description of the interface.\n\n            A server implementation MAY map this leaf to the ifAlias\n            MIB object.  Such an implementation needs to use some\n            mechanism to handle the differences in size and characters\n            allowed between this leaf and ifAlias.  The definition of\n            such a mechanism is outside the scope of this document.\n\n            Since ifAlias is defined to be stored in non-volatile\n            storage, the MIB implementation MUST map ifAlias to the\n            value of 'description' in the persistently stored\n            datastore.\n\n            Specifically, if the device supports ':startup', when\n            ifAlias is read the device MUST return the value of\n            'description' in the 'startup' datastore, and when it is\n            written, it MUST be written to the 'running' and 'startup'\n            datastores.  Note that it is up to the implementation to\n\n            decide whether to modify this single leaf in 'startup' or\n            perform an implicit copy-config from 'running' to\n            'startup'.\n\n            If the device does not support ':startup', ifAlias MUST\n            be mapped to the 'description' leaf in the 'running'\n            datastore.\n          title: description\n          type: string\n        enabled:\n          default: true\n          description: |-\n            This leaf contains the configured, desired state of the\n            interface.\n\n            Systems that implement the IF-MIB use the value of this\n            leaf in the 'running' datastore to set\n            IF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry\n            has been initialized, as described in RFC 2863.\n\n            Changes in this leaf in the 'running' datastore are\n            reflected in ifAdminStatus, but if ifAdminStatus is\n            changed over SNMP, this leaf is not affected.\n          title: enabled\n          type: boolean\n        mtu:\n          description: |-\n            Set the max transmission unit size in octets\n            for the physical interface.  If this is not set, the mtu is\n            set to the operational default -- e.g., 1514 bytes on an\n            Ethernet interface.\n          maximum: 65535\n          minimum: 0\n          title: mtu\n          type: integer\n        name:\n          description: |-\n            The name of the interface.\n\n            A device MAY restrict the allowed values for this leaf,\n            possibly depending on the type of the interface.\n            For system-controlled interfaces, this leaf is the\n            device-specific name of the interface.  The 'config false'\n            list interfaces/interface[name]/state contains the currently\n            existing interfaces on the device.\n\n            If a client tries to create configuration for a\n            system-controlled interface that is not present in the\n            corresponding state list, the server MAY reject\n            the request if the implementation does not support\n            pre-provisioning of interfaces or if the name refers to\n            an interface that can never exist in the system.  A\n            NETCONF server MUST reply with an rpc-error with the\n            error-tag 'invalid-value' in this case.\n\n            The IETF model in RFC 7223 provides YANG features for the\n            following (i.e., pre-provisioning and arbitrary-names),\n            however they are omitted here:\n\n             If the device supports pre-provisioning of interface\n             configuration, the 'pre-provisioning' feature is\n             advertised.\n\n             If the device allows arbitrarily named user-controlled\n             interfaces, the 'arbitrary-names' feature is advertised.\n\n            When a configured user-controlled interface is created by\n            the system, it is instantiated with the same name in the\n            /interfaces/interface[name]/state list.\n          title: name\n          type: string\n        type:\n          description: |-\n            The type of the interface.\n\n            When an interface entry is created, a server MAY\n            initialize the type leaf with a valid value, e.g., if it\n            is possible to derive the type from the name of the\n            interface.\n\n            If a client tries to set the type of an interface to a\n            value that can never be used by the system, e.g., if the\n            type is not supported or if the type does not match the\n            name of the interface, the server MUST reject the request.\n            A NETCONF server MUST reply with an rpc-error with the\n            error-tag 'invalid-value' in this case.\n          title: type\n          type: string\n      required:\n      - type\n      title: Interfaces_Interface_Config\n      type: object\n    Interfaces_Interface_Hold-time:\n      description: |-\n        Top-level container for hold-time settings to enable\n        dampening advertisements of interface transitions.\n      properties:\n        config:\n          $ref: '#/components/schemas/Interfaces_Interface_Hold-time_Config'\n        state:\n          $ref: '#/components/schemas/Interfaces_Interface_Hold-time_State'\n      title: Interfaces_Interface_Hold-time\n      type: object\n    Interfaces_Interface_Hold-time_Config:\n      description: Configuration data for interface hold-time settings.\n      properties:\n        down:\n          description: |-\n            Dampens advertisement when the interface transitions from\n            up to down.  A zero value means dampening is turned off,\n            i.e., immediate notification.\n          format: int32\n          minimum: 0\n          title: down\n          type: integer\n        up:\n          description: |-\n            Dampens advertisement when the interface\n            transitions from down to up.  A zero value means dampening\n            is turned off, i.e., immediate notification.\n          format: int32\n          minimum: 0\n          title: up\n          type: integer\n      title: Interfaces_Interface_Hold-time_Config\n      type: object\n    Interfaces_Interface_Hold-time_State:\n      description: Operational state data for interface hold-time.\n      properties:\n        down:\n          description: |-\n            Dampens advertisement when the interface transitions from\n            up to down.  A zero value means dampening is turned off,\n            i.e., immediate notification.\n          format: int32\n          minimum: 0\n          title: down\n          type: integer\n        up:\n          description: |-\n            Dampens advertisement when the interface\n            transitions from down to up.  A zero value means dampening\n            is turned off, i.e., immediate notification.\n          format: int32\n          minimum: 0\n          title: up\n          type: integer\n      title: Interfaces_Interface_Hold-time_State\n      type: object\n    Interfaces_Interface_List:\n      description: The list of named interfaces on the device. (list)\n      items:\n        $ref: '#/components/schemas/Interfaces_Interface'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - name\n      x-list-multiple: true\n    Interfaces_Interface_State:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyUnchanged'\n      description: Operational state data at the global interface level\n      properties:\n        admin-status:\n          description: |-\n            The desired state of the interface.  In RFC 7223 this leaf\n            has the same read semantics as ifAdminStatus.  Here, it\n            reflects the administrative state as set by enabling or\n            disabling the interface.\n          title: admin-status\n          type: string\n        counters:\n          $ref: '#/components/schemas/Interfaces_Interface_State_Counters'\n        description:\n          description: |-\n            A textual description of the interface.\n\n            A server implementation MAY map this leaf to the ifAlias\n            MIB object.  Such an implementation needs to use some\n            mechanism to handle the differences in size and characters\n            allowed between this leaf and ifAlias.  The definition of\n            such a mechanism is outside the scope of this document.\n\n            Since ifAlias is defined to be stored in non-volatile\n            storage, the MIB implementation MUST map ifAlias to the\n            value of 'description' in the persistently stored\n            datastore.\n\n            Specifically, if the device supports ':startup', when\n            ifAlias is read the device MUST return the value of\n            'description' in the 'startup' datastore, and when it is\n            written, it MUST be written to the 'running' and 'startup'\n            datastores.  Note that it is up to the implementation to\n\n            decide whether to modify this single leaf in 'startup' or\n            perform an implicit copy-config from 'running' to\n            'startup'.\n\n            If the device does not support ':startup', ifAlias MUST\n            be mapped to the 'description' leaf in the 'running'\n            datastore.\n          title: description\n          type: string\n        enabled:\n          default: true\n          description: |-\n            This leaf contains the configured, desired state of the\n            interface.\n\n            Systems that implement the IF-MIB use the value of this\n            leaf in the 'running' datastore to set\n            IF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry\n            has been initialized, as described in RFC 2863.\n\n            Changes in this leaf in the 'running' datastore are\n            reflected in ifAdminStatus, but if ifAdminStatus is\n            changed over SNMP, this leaf is not affected.\n          title: enabled\n          type: boolean\n        hardware-port:\n          description: References the hardware port in the device inventory\n          title: hardware-port\n          type: string\n          x-leafref: /oc-platform:components/oc-platform:component/oc-platform:name\n        ifindex:\n          description: |-\n            System assigned number for each interface.  Corresponds to\n            ifIndex object in SNMP Interface MIB\n          format: int32\n          minimum: 0\n          title: ifindex\n          type: integer\n        last-change:\n          description: |-\n            This timestamp indicates the time of the last state change\n            of the interface (e.g., up-to-down transition). This\n            corresponds to the ifLastChange object in the standard\n            interface MIB.\n\n            The value is the timestamp in nanoseconds relative to\n            the Unix Epoch (Jan 1, 1970 00:00:00 UTC).\n          format: int64\n          minimum: 0\n          title: last-change\n          type: integer\n        mtu:\n          description: |-\n            Set the max transmission unit size in octets\n            for the physical interface.  If this is not set, the mtu is\n            set to the operational default -- e.g., 1514 bytes on an\n            Ethernet interface.\n          maximum: 65535\n          minimum: 0\n          title: mtu\n          type: integer\n        name:\n          description: |-\n            The name of the interface.\n\n            A device MAY restrict the allowed values for this leaf,\n            possibly depending on the type of the interface.\n            For system-controlled interfaces, this leaf is the\n            device-specific name of the interface.  The 'config false'\n            list interfaces/interface[name]/state contains the currently\n            existing interfaces on the device.\n\n            If a client tries to create configuration for a\n            system-controlled interface that is not present in the\n            corresponding state list, the server MAY reject\n            the request if the implementation does not support\n            pre-provisioning of interfaces or if the name refers to\n            an interface that can never exist in the system.  A\n            NETCONF server MUST reply with an rpc-error with the\n            error-tag 'invalid-value' in this case.\n\n            The IETF model in RFC 7223 provides YANG features for the\n            following (i.e., pre-provisioning and arbitrary-names),\n            however they are omitted here:\n\n             If the device supports pre-provisioning of interface\n             configuration, the 'pre-provisioning' feature is\n             advertised.\n\n             If the device allows arbitrarily named user-controlled\n             interfaces, the 'arbitrary-names' feature is advertised.\n\n            When a configured user-controlled interface is created by\n            the system, it is instantiated with the same name in the\n            /interfaces/interface[name]/state list.\n          title: name\n          type: string\n        oper-status:\n          description: |-\n            The current operational state of the interface.\n\n            This leaf has the same semantics as ifOperStatus.\n          title: oper-status\n          type: string\n        type:\n          description: |-\n            The type of the interface.\n\n            When an interface entry is created, a server MAY\n            initialize the type leaf with a valid value, e.g., if it\n            is possible to derive the type from the name of the\n            interface.\n\n            If a client tries to set the type of an interface to a\n            value that can never be used by the system, e.g., if the\n            type is not supported or if the type does not match the\n            name of the interface, the server MUST reject the request.\n            A NETCONF server MUST reply with an rpc-error with the\n            error-tag 'invalid-value' in this case.\n          title: type\n          type: string\n      required:\n      - admin-status\n      - oper-status\n      - type\n      title: Interfaces_Interface_State\n      type: object\n    Interfaces_Interface_State_Counters:\n      description: A collection of interface-related statistics objects.\n      properties:\n        carrier-transitions:\n          description: |-\n            Number of times the interface state has transitioned\n            between up and down since the time the device restarted\n            or the last-clear time, whichever is most recent.\n          format: int64\n          minimum: 0\n          title: carrier-transitions\n          type: integer\n        in-broadcast-pkts:\n          description: |-\n            The number of packets, delivered by this sub-layer to a\n            higher (sub-)layer, that were addressed to a broadcast\n            address at this sub-layer.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: in-broadcast-pkts\n          type: integer\n        in-discards:\n          description: |-\n            The number of inbound packets that were chosen to be\n            discarded even though no errors had been detected to\n            prevent their being deliverable to a higher-layer\n            protocol.  One possible reason for discarding such a\n            packet could be to free up buffer space.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: in-discards\n          type: integer\n        in-errors:\n          description: |-\n            For packet-oriented interfaces, the number of inbound\n            packets that contained errors preventing them from being\n            deliverable to a higher-layer protocol.  For character-\n            oriented or fixed-length interfaces, the number of\n            inbound transmission units that contained errors\n            preventing them from being deliverable to a higher-layer\n            protocol.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: in-errors\n          type: integer\n        in-fcs-errors:\n          description: |-\n            Number of received packets which had errors in the\n            frame check sequence (FCS), i.e., framing errors.\n\n            Discontinuities in the value of this counter can occur\n            when the device is re-initialization as indicated by the\n            value of 'last-clear'.\n          format: int64\n          minimum: 0\n          title: in-fcs-errors\n          type: integer\n        in-multicast-pkts:\n          description: |-\n            The number of packets, delivered by this sub-layer to a\n            higher (sub-)layer, that were addressed to a multicast\n            address at this sub-layer.  For a MAC-layer protocol,\n            this includes both Group and Functional addresses.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: in-multicast-pkts\n          type: integer\n        in-octets:\n          description: |-\n            The total number of octets received on the interface,\n            including framing characters.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: in-octets\n          type: integer\n        in-unicast-pkts:\n          description: |-\n            The number of packets, delivered by this sub-layer to a\n            higher (sub-)layer, that were not addressed to a\n            multicast or broadcast address at this sub-layer.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: in-unicast-pkts\n          type: integer\n        in-unknown-protos:\n          description: |-\n            For packet-oriented interfaces, the number of packets\n            received via the interface that were discarded because\n            of an unknown or unsupported protocol.  For\n            character-oriented or fixed-length interfaces that\n            support protocol multiplexing, the number of\n            transmission units received via the interface that were\n            discarded because of an unknown or unsupported protocol.\n            For any interface that does not support protocol\n            multiplexing, this counter is not present.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: in-unknown-protos\n          type: integer\n        last-clear:\n          description: |-\n            Timestamp of the last time the interface counters were\n            cleared.\n\n            The value is the timestamp in nanoseconds relative to\n            the Unix Epoch (Jan 1, 1970 00:00:00 UTC).\n          format: int64\n          minimum: 0\n          title: last-clear\n          type: integer\n        out-broadcast-pkts:\n          description: |-\n            The total number of packets that higher-level protocols\n            requested be transmitted, and that were addressed to a\n            broadcast address at this sub-layer, including those\n            that were discarded or not sent.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: out-broadcast-pkts\n          type: integer\n        out-discards:\n          description: |-\n            The number of outbound packets that were chosen to be\n            discarded even though no errors had been detected to\n            prevent their being transmitted.  One possible reason\n            for discarding such a packet could be to free up buffer\n            space.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: out-discards\n          type: integer\n        out-errors:\n          description: |-\n            For packet-oriented interfaces, the number of outbound\n            packets that could not be transmitted because of errors.\n            For character-oriented or fixed-length interfaces, the\n            number of outbound transmission units that could not be\n            transmitted because of errors.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: out-errors\n          type: integer\n        out-multicast-pkts:\n          description: |-\n            The total number of packets that higher-level protocols\n            requested be transmitted, and that were addressed to a\n            multicast address at this sub-layer, including those\n            that were discarded or not sent.  For a MAC-layer\n            protocol, this includes both Group and Functional\n            addresses.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: out-multicast-pkts\n          type: integer\n        out-octets:\n          description: |-\n            The total number of octets transmitted out of the\n            interface, including framing characters.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: out-octets\n          type: integer\n        out-unicast-pkts:\n          description: |-\n            The total number of packets that higher-level protocols\n            requested be transmitted, and that were not addressed\n            to a multicast or broadcast address at this sub-layer,\n            including those that were discarded or not sent.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: out-unicast-pkts\n          type: integer\n      title: Interfaces_Interface_State_Counters\n      type: object\n    Interfaces_Interface_Subinterfaces:\n      description: |-\n        Enclosing container for the list of subinterfaces associated\n        with a physical interface\n      properties:\n        subinterface:\n          $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface_List'\n      title: Interfaces_Interface_Subinterfaces\n      type: object\n    Interfaces_Interface_Subinterfaces_Subinterface:\n      description: |-\n        The list of subinterfaces (logical interfaces) associated\n        with a physical interface (single)\n      properties:\n        config:\n          $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface_Config'\n        index:\n          description: |-\n            The index number of the subinterface -- used to address\n            the logical interface\n          title: index\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../config/index\n        state:\n          $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface_State'\n      required:\n      - index\n      title: Interfaces_Interface_Subinterfaces_Subinterface\n      type: object\n      x-list-multiple: true\n    Interfaces_Interface_Subinterfaces_Subinterface_Config:\n      description: Configurable items at the subinterface level\n      properties:\n        description:\n          description: |-\n            A textual description of the interface.\n\n            A server implementation MAY map this leaf to the ifAlias\n            MIB object.  Such an implementation needs to use some\n            mechanism to handle the differences in size and characters\n            allowed between this leaf and ifAlias.  The definition of\n            such a mechanism is outside the scope of this document.\n\n            Since ifAlias is defined to be stored in non-volatile\n            storage, the MIB implementation MUST map ifAlias to the\n            value of 'description' in the persistently stored\n            datastore.\n\n            Specifically, if the device supports ':startup', when\n            ifAlias is read the device MUST return the value of\n            'description' in the 'startup' datastore, and when it is\n            written, it MUST be written to the 'running' and 'startup'\n            datastores.  Note that it is up to the implementation to\n\n            decide whether to modify this single leaf in 'startup' or\n            perform an implicit copy-config from 'running' to\n            'startup'.\n\n            If the device does not support ':startup', ifAlias MUST\n            be mapped to the 'description' leaf in the 'running'\n            datastore.\n          title: description\n          type: string\n        enabled:\n          default: true\n          description: |-\n            This leaf contains the configured, desired state of the\n            interface.\n\n            Systems that implement the IF-MIB use the value of this\n            leaf in the 'running' datastore to set\n            IF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry\n            has been initialized, as described in RFC 2863.\n\n            Changes in this leaf in the 'running' datastore are\n            reflected in ifAdminStatus, but if ifAdminStatus is\n            changed over SNMP, this leaf is not affected.\n          title: enabled\n          type: boolean\n        index:\n          description: |-\n            The index of the subinterface, or logical interface number.\n            On systems with no support for subinterfaces, or not using\n            subinterfaces, this value should default to 0, i.e., the\n            default subinterface.\n          format: int32\n          minimum: 0\n          title: index\n          type: integer\n      title: Interfaces_Interface_Subinterfaces_Subinterface_Config\n      type: object\n    Interfaces_Interface_Subinterfaces_Subinterface_List:\n      description: |-\n        The list of subinterfaces (logical interfaces) associated\n        with a physical interface (list)\n      items:\n        $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - index\n      x-list-multiple: true\n    Interfaces_Interface_Subinterfaces_Subinterface_State:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyUnchanged'\n      description: Operational state data for logical interfaces\n      properties:\n        admin-status:\n          description: |-\n            The desired state of the interface.  In RFC 7223 this leaf\n            has the same read semantics as ifAdminStatus.  Here, it\n            reflects the administrative state as set by enabling or\n            disabling the interface.\n          title: admin-status\n          type: string\n        counters:\n          $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface_State_Counters'\n        description:\n          description: |-\n            A textual description of the interface.\n\n            A server implementation MAY map this leaf to the ifAlias\n            MIB object.  Such an implementation needs to use some\n            mechanism to handle the differences in size and characters\n            allowed between this leaf and ifAlias.  The definition of\n            such a mechanism is outside the scope of this document.\n\n            Since ifAlias is defined to be stored in non-volatile\n            storage, the MIB implementation MUST map ifAlias to the\n            value of 'description' in the persistently stored\n            datastore.\n\n            Specifically, if the device supports ':startup', when\n            ifAlias is read the device MUST return the value of\n            'description' in the 'startup' datastore, and when it is\n            written, it MUST be written to the 'running' and 'startup'\n            datastores.  Note that it is up to the implementation to\n\n            decide whether to modify this single leaf in 'startup' or\n            perform an implicit copy-config from 'running' to\n            'startup'.\n\n            If the device does not support ':startup', ifAlias MUST\n            be mapped to the 'description' leaf in the 'running'\n            datastore.\n          title: description\n          type: string\n        enabled:\n          default: true\n          description: |-\n            This leaf contains the configured, desired state of the\n            interface.\n\n            Systems that implement the IF-MIB use the value of this\n            leaf in the 'running' datastore to set\n            IF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry\n            has been initialized, as described in RFC 2863.\n\n            Changes in this leaf in the 'running' datastore are\n            reflected in ifAdminStatus, but if ifAdminStatus is\n            changed over SNMP, this leaf is not affected.\n          title: enabled\n          type: boolean\n        ifindex:\n          description: |-\n            System assigned number for each interface.  Corresponds to\n            ifIndex object in SNMP Interface MIB\n          format: int32\n          minimum: 0\n          title: ifindex\n          type: integer\n        index:\n          description: |-\n            The index of the subinterface, or logical interface number.\n            On systems with no support for subinterfaces, or not using\n            subinterfaces, this value should default to 0, i.e., the\n            default subinterface.\n          format: int32\n          minimum: 0\n          title: index\n          type: integer\n        last-change:\n          description: |-\n            This timestamp indicates the time of the last state change\n            of the interface (e.g., up-to-down transition). This\n            corresponds to the ifLastChange object in the standard\n            interface MIB.\n\n            The value is the timestamp in nanoseconds relative to\n            the Unix Epoch (Jan 1, 1970 00:00:00 UTC).\n          format: int64\n          minimum: 0\n          title: last-change\n          type: integer\n        name:\n          description: |-\n            The system-assigned name for the sub-interface.  This MAY\n            be a combination of the base interface name and the\n            subinterface index, or some other convention used by the\n            system.\n          title: name\n          type: string\n        oper-status:\n          description: |-\n            The current operational state of the interface.\n\n            This leaf has the same semantics as ifOperStatus.\n          title: oper-status\n          type: string\n      required:\n      - admin-status\n      - oper-status\n      title: Interfaces_Interface_Subinterfaces_Subinterface_State\n      type: object\n    Interfaces_Interface_Subinterfaces_Subinterface_State_Counters:\n      description: A collection of interface-related statistics objects.\n      properties:\n        carrier-transitions:\n          description: |-\n            Number of times the interface state has transitioned\n            between up and down since the time the device restarted\n            or the last-clear time, whichever is most recent.\n          format: int64\n          minimum: 0\n          title: carrier-transitions\n          type: integer\n        in-broadcast-pkts:\n          description: |-\n            The number of packets, delivered by this sub-layer to a\n            higher (sub-)layer, that were addressed to a broadcast\n            address at this sub-layer.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: in-broadcast-pkts\n          type: integer\n        in-discards:\n          description: |-\n            The number of inbound packets that were chosen to be\n            discarded even though no errors had been detected to\n            prevent their being deliverable to a higher-layer\n            protocol.  One possible reason for discarding such a\n            packet could be to free up buffer space.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: in-discards\n          type: integer\n        in-errors:\n          description: |-\n            For packet-oriented interfaces, the number of inbound\n            packets that contained errors preventing them from being\n            deliverable to a higher-layer protocol.  For character-\n            oriented or fixed-length interfaces, the number of\n            inbound transmission units that contained errors\n            preventing them from being deliverable to a higher-layer\n            protocol.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: in-errors\n          type: integer\n        in-fcs-errors:\n          description: |-\n            Number of received packets which had errors in the\n            frame check sequence (FCS), i.e., framing errors.\n\n            Discontinuities in the value of this counter can occur\n            when the device is re-initialization as indicated by the\n            value of 'last-clear'.\n          format: int64\n          minimum: 0\n          title: in-fcs-errors\n          type: integer\n        in-multicast-pkts:\n          description: |-\n            The number of packets, delivered by this sub-layer to a\n            higher (sub-)layer, that were addressed to a multicast\n            address at this sub-layer.  For a MAC-layer protocol,\n            this includes both Group and Functional addresses.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: in-multicast-pkts\n          type: integer\n        in-octets:\n          description: |-\n            The total number of octets received on the interface,\n            including framing characters.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: in-octets\n          type: integer\n        in-unicast-pkts:\n          description: |-\n            The number of packets, delivered by this sub-layer to a\n            higher (sub-)layer, that were not addressed to a\n            multicast or broadcast address at this sub-layer.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: in-unicast-pkts\n          type: integer\n        in-unknown-protos:\n          description: |-\n            For packet-oriented interfaces, the number of packets\n            received via the interface that were discarded because\n            of an unknown or unsupported protocol.  For\n            character-oriented or fixed-length interfaces that\n            support protocol multiplexing, the number of\n            transmission units received via the interface that were\n            discarded because of an unknown or unsupported protocol.\n            For any interface that does not support protocol\n            multiplexing, this counter is not present.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: in-unknown-protos\n          type: integer\n        last-clear:\n          description: |-\n            Timestamp of the last time the interface counters were\n            cleared.\n\n            The value is the timestamp in nanoseconds relative to\n            the Unix Epoch (Jan 1, 1970 00:00:00 UTC).\n          format: int64\n          minimum: 0\n          title: last-clear\n          type: integer\n        out-broadcast-pkts:\n          description: |-\n            The total number of packets that higher-level protocols\n            requested be transmitted, and that were addressed to a\n            broadcast address at this sub-layer, including those\n            that were discarded or not sent.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: out-broadcast-pkts\n          type: integer\n        out-discards:\n          description: |-\n            The number of outbound packets that were chosen to be\n            discarded even though no errors had been detected to\n            prevent their being transmitted.  One possible reason\n            for discarding such a packet could be to free up buffer\n            space.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: out-discards\n          type: integer\n        out-errors:\n          description: |-\n            For packet-oriented interfaces, the number of outbound\n            packets that could not be transmitted because of errors.\n            For character-oriented or fixed-length interfaces, the\n            number of outbound transmission units that could not be\n            transmitted because of errors.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: out-errors\n          type: integer\n        out-multicast-pkts:\n          description: |-\n            The total number of packets that higher-level protocols\n            requested be transmitted, and that were addressed to a\n            multicast address at this sub-layer, including those\n            that were discarded or not sent.  For a MAC-layer\n            protocol, this includes both Group and Functional\n            addresses.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: out-multicast-pkts\n          type: integer\n        out-octets:\n          description: |-\n            The total number of octets transmitted out of the\n            interface, including framing characters.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: out-octets\n          type: integer\n        out-unicast-pkts:\n          description: |-\n            The total number of packets that higher-level protocols\n            requested be transmitted, and that were not addressed\n            to a multicast or broadcast address at this sub-layer,\n            including those that were discarded or not sent.\n\n            Discontinuities in the value of this counter can occur\n            at re-initialization of the management system, and at\n            other times as indicated by the value of\n            'last-clear'.\n          format: int64\n          minimum: 0\n          title: out-unicast-pkts\n          type: integer\n      title: Interfaces_Interface_Subinterfaces_Subinterface_State_Counters\n      type: object\n    System:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyTarget'\n      description: |-\n        Enclosing container for system-related configuration and\n        operational state data\n      properties:\n        aaa:\n          $ref: '#/components/schemas/System_Aaa'\n        clock:\n          $ref: '#/components/schemas/System_Clock'\n        config:\n          $ref: '#/components/schemas/System_Config'\n        dns:\n          $ref: '#/components/schemas/System_Dns'\n        logging:\n          $ref: '#/components/schemas/System_Logging'\n        memory:\n          $ref: '#/components/schemas/System_Memory'\n        ntp:\n          $ref: '#/components/schemas/System_Ntp'\n        openflow:\n          $ref: '#/components/schemas/System_Openflow'\n        processes:\n          $ref: '#/components/schemas/System_Processes'\n        ssh-server:\n          $ref: '#/components/schemas/System_Ssh-server'\n        state:\n          $ref: '#/components/schemas/System_State'\n        telnet-server:\n          $ref: '#/components/schemas/System_Telnet-server'\n      title: System\n      type: object\n    System_Aaa:\n      description: Top-level container for AAA services\n      properties:\n        accounting:\n          $ref: '#/components/schemas/System_Aaa_Accounting'\n        authentication:\n          $ref: '#/components/schemas/System_Aaa_Authentication'\n        authorization:\n          $ref: '#/components/schemas/System_Aaa_Authorization'\n        config:\n          $ref: '#/components/schemas/System_Aaa_Config'\n        server-groups:\n          $ref: '#/components/schemas/System_Aaa_Server-groups'\n        state:\n          $ref: '#/components/schemas/System_Aaa_State'\n      title: System_Aaa\n      type: object\n    System_Aaa_Accounting:\n      description: Top-level container for AAA accounting\n      properties:\n        config:\n          $ref: '#/components/schemas/System_Aaa_Accounting_Config'\n        events:\n          $ref: '#/components/schemas/System_Aaa_Accounting_Events'\n        state:\n          $ref: '#/components/schemas/System_Aaa_Accounting_State'\n      title: System_Aaa_Accounting\n      type: object\n    System_Aaa_Accounting_Config:\n      description: Configuration data for user activity accounting.\n      properties:\n        leaf-list-accounting-method:\n          items:\n            description: |-\n              The method used for AAA accounting for this event\n              type.  The method is defined by the destination for\n              accounting data, which may be specified as the group of\n              all TACACS+/RADIUS servers, a defined server group, or\n              the local system.\n            title: accounting-method\n            type: string\n          title: leaf-list-accounting-method\n          type: array\n      title: System_Aaa_Accounting_Config\n      type: object\n    System_Aaa_Accounting_Events:\n      description: |-\n        Enclosing container for defining handling of events\n        for accounting\n      properties:\n        event:\n          $ref: '#/components/schemas/System_Aaa_Accounting_Events_Event_List'\n      title: System_Aaa_Accounting_Events\n      type: object\n    System_Aaa_Accounting_Events_Event:\n      description: List of events subject to accounting (single)\n      properties:\n        config:\n          $ref: '#/components/schemas/System_Aaa_Accounting_Events_Event_Config'\n        event-type:\n          description: |-\n            Reference to the event-type being logged at the\n            accounting server\n          title: event-type\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../config/event-type\n        state:\n          $ref: '#/components/schemas/System_Aaa_Accounting_Events_Event_State'\n      required:\n      - event-type\n      title: System_Aaa_Accounting_Events_Event\n      type: object\n      x-list-multiple: true\n    System_Aaa_Accounting_Events_Event_Config:\n      description: Configuration data for accounting events\n      properties:\n        event-type:\n          description: |-\n            The type of activity to record at the AAA accounting\n            server\n          enum:\n          - AAA_ACCOUNTING_EVENT_COMMAND\n          - AAA_ACCOUNTING_EVENT_LOGIN\n          - AAA_AUTHORIZATION_EVENT_COMMAND\n          - AAA_AUTHORIZATION_EVENT_CONFIG\n          title: event-type\n          type: string\n        record:\n          description: |-\n            Type of record to send to the accounting server for this\n            activity type\n          title: record\n          type: string\n      title: System_Aaa_Accounting_Events_Event_Config\n      type: object\n    System_Aaa_Accounting_Events_Event_List:\n      description: List of events subject to accounting (list)\n      items:\n        $ref: '#/components/schemas/System_Aaa_Accounting_Events_Event'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - event-type\n      x-list-multiple: true\n    System_Aaa_Accounting_Events_Event_State:\n      description: Operational state data for accounting events\n      properties:\n        event-type:\n          description: |-\n            The type of activity to record at the AAA accounting\n            server\n          enum:\n          - AAA_ACCOUNTING_EVENT_COMMAND\n          - AAA_ACCOUNTING_EVENT_LOGIN\n          - AAA_AUTHORIZATION_EVENT_COMMAND\n          - AAA_AUTHORIZATION_EVENT_CONFIG\n          title: event-type\n          type: string\n        record:\n          description: |-\n            Type of record to send to the accounting server for this\n            activity type\n          title: record\n          type: string\n      title: System_Aaa_Accounting_Events_Event_State\n      type: object\n    System_Aaa_Accounting_State:\n      description: Operational state data for user accounting.\n      properties:\n        leaf-list-accounting-method:\n          items:\n            description: |-\n              The method used for AAA accounting for this event\n              type.  The method is defined by the destination for\n              accounting data, which may be specified as the group of\n              all TACACS+/RADIUS servers, a defined server group, or\n              the local system.\n            title: accounting-method\n            type: string\n          title: leaf-list-accounting-method\n          type: array\n      title: System_Aaa_Accounting_State\n      type: object\n    System_Aaa_Authentication:\n      description: Top-level container for global authentication data\n      properties:\n        admin-user:\n          $ref: '#/components/schemas/System_Aaa_Authentication_Admin-user'\n        config:\n          $ref: '#/components/schemas/System_Aaa_Authentication_Config'\n        state:\n          $ref: '#/components/schemas/System_Aaa_Authentication_State'\n        users:\n          $ref: '#/components/schemas/System_Aaa_Authentication_Users'\n      title: System_Aaa_Authentication\n      type: object\n    System_Aaa_Authentication_Admin-user:\n      description: |-\n        Top-level container for the system root or admin user\n        configuration and operational state\n      properties:\n        config:\n          $ref: '#/components/schemas/System_Aaa_Authentication_Admin-user_Config'\n        state:\n          $ref: '#/components/schemas/System_Aaa_Authentication_Admin-user_State'\n      title: System_Aaa_Authentication_Admin-user\n      type: object\n    System_Aaa_Authentication_Admin-user_Config:\n      description: Configuration data for the root user account\n      properties:\n        admin-password:\n          description: |-\n            The admin/root password, supplied as a cleartext string.\n            The system should hash and only store the password as a\n            hashed value.\n          title: admin-password\n          type: string\n        admin-password-hashed:\n          description: |-\n            The admin/root password, supplied as a hashed value\n            using the notation described in the definition of the\n            crypt-password-type.\n          title: admin-password-hashed\n          type: string\n      title: System_Aaa_Authentication_Admin-user_Config\n      type: object\n    System_Aaa_Authentication_Admin-user_State:\n      description: Operational state data for the root user account\n      properties:\n        admin-password:\n          description: |-\n            The admin/root password, supplied as a cleartext string.\n            The system should hash and only store the password as a\n            hashed value.\n          title: admin-password\n          type: string\n        admin-password-hashed:\n          description: |-\n            The admin/root password, supplied as a hashed value\n            using the notation described in the definition of the\n            crypt-password-type.\n          title: admin-password-hashed\n          type: string\n        admin-username:\n          description: |-\n            Name of the administrator user account, e.g., admin, root,\n            etc.\n          title: admin-username\n          type: string\n      title: System_Aaa_Authentication_Admin-user_State\n      type: object\n    System_Aaa_Authentication_Config:\n      description: Configuration data for global authentication services\n      properties:\n        leaf-list-authentication-method:\n          items:\n            description: |-\n              Ordered list of authentication methods for users.  This\n              can be either a reference to a server group, or a well-\n              defined designation in the AAA_METHOD_TYPE identity.  If\n              authentication fails with one method, the next defined\n              method is tried -- failure of all methods results in the\n              user being denied access.\n            title: authentication-method\n            type: string\n          title: leaf-list-authentication-method\n          type: array\n      title: System_Aaa_Authentication_Config\n      type: object\n    System_Aaa_Authentication_State:\n      description: |-\n        Operational state data for global authentication\n        services\n      properties:\n        leaf-list-authentication-method:\n          items:\n            description: |-\n              Ordered list of authentication methods for users.  This\n              can be either a reference to a server group, or a well-\n              defined designation in the AAA_METHOD_TYPE identity.  If\n              authentication fails with one method, the next defined\n              method is tried -- failure of all methods results in the\n              user being denied access.\n            title: authentication-method\n            type: string\n          title: leaf-list-authentication-method\n          type: array\n      title: System_Aaa_Authentication_State\n      type: object\n    System_Aaa_Authentication_Users:\n      description: Enclosing container list of local users\n      properties:\n        user:\n          $ref: '#/components/schemas/System_Aaa_Authentication_Users_User_List'\n      title: System_Aaa_Authentication_Users\n      type: object\n    System_Aaa_Authentication_Users_User:\n      description: List of local users on the system (single)\n      properties:\n        config:\n          $ref: '#/components/schemas/System_Aaa_Authentication_Users_User_Config'\n        state:\n          $ref: '#/components/schemas/System_Aaa_Authentication_Users_User_State'\n        username:\n          description: References the configured username for the user\n          title: username\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../config/username\n      required:\n      - username\n      title: System_Aaa_Authentication_Users_User\n      type: object\n      x-list-multiple: true\n    System_Aaa_Authentication_Users_User_Config:\n      description: Configuration data for local users\n      properties:\n        password:\n          description: |-\n            The user password, supplied as cleartext.  The system\n            must hash the value and only store the hashed value.\n          title: password\n          type: string\n        password-hashed:\n          description: |-\n            The user password, supplied as a hashed value\n            using the notation described in the definition of the\n            crypt-password-type.\n          title: password-hashed\n          type: string\n        role:\n          description: |-\n            Role assigned to the user.  The role may be supplied\n            as a string or a role defined by the SYSTEM_DEFINED_ROLES\n            identity.\n          title: role\n          type: string\n        ssh-key:\n          description: SSH public key for the user (RSA or DSA)\n          title: ssh-key\n          type: string\n        username:\n          description: Assigned username for this user\n          title: username\n          type: string\n      title: System_Aaa_Authentication_Users_User_Config\n      type: object\n    System_Aaa_Authentication_Users_User_List:\n      description: List of local users on the system (list)\n      items:\n        $ref: '#/components/schemas/System_Aaa_Authentication_Users_User'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - username\n      x-list-multiple: true\n    System_Aaa_Authentication_Users_User_State:\n      description: Operational state data for local users\n      properties:\n        password:\n          description: |-\n            The user password, supplied as cleartext.  The system\n            must hash the value and only store the hashed value.\n          title: password\n          type: string\n        password-hashed:\n          description: |-\n            The user password, supplied as a hashed value\n            using the notation described in the definition of the\n            crypt-password-type.\n          title: password-hashed\n          type: string\n        role:\n          description: |-\n            Role assigned to the user.  The role may be supplied\n            as a string or a role defined by the SYSTEM_DEFINED_ROLES\n            identity.\n          title: role\n          type: string\n        ssh-key:\n          description: SSH public key for the user (RSA or DSA)\n          title: ssh-key\n          type: string\n        username:\n          description: Assigned username for this user\n          title: username\n          type: string\n      title: System_Aaa_Authentication_Users_User_State\n      type: object\n    System_Aaa_Authorization:\n      description: |-\n        Top-level container for AAA authorization configuration\n        and operational state data\n      properties:\n        config:\n          $ref: '#/components/schemas/System_Aaa_Authorization_Config'\n        events:\n          $ref: '#/components/schemas/System_Aaa_Authorization_Events'\n        state:\n          $ref: '#/components/schemas/System_Aaa_Authorization_State'\n      title: System_Aaa_Authorization\n      type: object\n    System_Aaa_Authorization_Config:\n      description: |-\n        Configuration data for authorization based on AAA\n        methods\n      properties:\n        leaf-list-authorization-method:\n          items:\n            description: |-\n              Ordered list of methods for authorizing commands.  The first\n              method that provides a response (positive or negative) should\n              be used.  The list may contain a well-defined method such\n              as the set of all TACACS or RADIUS servers, or the name of\n              a defined AAA server group.  The system must validate\n              that the named server group exists.\n            title: authorization-method\n            type: string\n          title: leaf-list-authorization-method\n          type: array\n      title: System_Aaa_Authorization_Config\n      type: object\n    System_Aaa_Authorization_Events:\n      description: |-\n        Enclosing container for the set of events subject\n        to authorization\n      properties:\n        event:\n          $ref: '#/components/schemas/System_Aaa_Authorization_Events_Event_List'\n      title: System_Aaa_Authorization_Events\n      type: object\n    System_Aaa_Authorization_Events_Event:\n      description: List of events subject to AAA authorization (single)\n      properties:\n        config:\n          $ref: '#/components/schemas/System_Aaa_Authorization_Events_Event_Config'\n        event-type:\n          description: Reference to the event-type list key\n          title: event-type\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../config/event-type\n        state:\n          $ref: '#/components/schemas/System_Aaa_Authorization_Events_Event_State'\n      required:\n      - event-type\n      title: System_Aaa_Authorization_Events_Event\n      type: object\n      x-list-multiple: true\n    System_Aaa_Authorization_Events_Event_Config:\n      description: Configuration data for each authorized event\n      properties:\n        event-type:\n          description: |-\n            The type of event to record at the AAA authorization\n            server\n          title: event-type\n          type: string\n      title: System_Aaa_Authorization_Events_Event_Config\n      type: object\n    System_Aaa_Authorization_Events_Event_List:\n      description: List of events subject to AAA authorization (list)\n      items:\n        $ref: '#/components/schemas/System_Aaa_Authorization_Events_Event'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - event-type\n      x-list-multiple: true\n    System_Aaa_Authorization_Events_Event_State:\n      description: Operational state data for each authorized activity\n      properties:\n        event-type:\n          description: |-\n            The type of event to record at the AAA authorization\n            server\n          title: event-type\n          type: string\n      title: System_Aaa_Authorization_Events_Event_State\n      type: object\n    System_Aaa_Authorization_State:\n      description: Operational state data for authorization based on AAA\n      properties:\n        leaf-list-authorization-method:\n          items:\n            description: |-\n              Ordered list of methods for authorizing commands.  The first\n              method that provides a response (positive or negative) should\n              be used.  The list may contain a well-defined method such\n              as the set of all TACACS or RADIUS servers, or the name of\n              a defined AAA server group.  The system must validate\n              that the named server group exists.\n            title: authorization-method\n            type: string\n          title: leaf-list-authorization-method\n          type: array\n      title: System_Aaa_Authorization_State\n      type: object\n    System_Aaa_Config:\n      description: Configuration data for top level AAA services\n      title: System_Aaa_Config\n      type: object\n    System_Aaa_Server-groups:\n      description: Enclosing container for AAA server groups\n      properties:\n        server-group:\n          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_List'\n      title: System_Aaa_Server-groups\n      type: object\n    System_Aaa_Server-groups_Server-group:\n      description: |-\n        List of AAA server groups.  All servers in a group\n        must have the same type as indicated by the server\n        type. (single)\n      properties:\n        config:\n          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Config'\n        name:\n          description: Reference to configured name of the server group\n          title: name\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../config/name\n        servers:\n          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers'\n        state:\n          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_State'\n      required:\n      - name\n      title: System_Aaa_Server-groups_Server-group\n      type: object\n      x-list-multiple: true\n    System_Aaa_Server-groups_Server-group_Config:\n      description: Configuration data for each server group\n      properties:\n        name:\n          description: Name for the server group\n          title: name\n          type: string\n        type:\n          description: |-\n            AAA server type -- all servers in the group must be of this\n            type\n          enum:\n          - RADIUS\n          - TACACS\n          title: type\n          type: string\n      title: System_Aaa_Server-groups_Server-group_Config\n      type: object\n    System_Aaa_Server-groups_Server-group_List:\n      description: |-\n        List of AAA server groups.  All servers in a group\n        must have the same type as indicated by the server\n        type. (list)\n      items:\n        $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - name\n      x-list-multiple: true\n    System_Aaa_Server-groups_Server-group_Servers:\n      description: Enclosing container the list of servers\n      properties:\n        server:\n          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_List'\n      title: System_Aaa_Server-groups_Server-group_Servers\n      type: object\n    System_Aaa_Server-groups_Server-group_Servers_Server:\n      description: List of AAA servers (single)\n      properties:\n        address:\n          description: Reference to the configured address of the AAA server\n          title: address\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../config/address\n        config:\n          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Config'\n        radius:\n          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius'\n        state:\n          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_State'\n        tacacs:\n          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs'\n      required:\n      - address\n      title: System_Aaa_Server-groups_Server-group_Servers_Server\n      type: object\n      x-list-multiple: true\n    System_Aaa_Server-groups_Server-group_Servers_Server_Config:\n      description: 'Configuration data '\n      properties:\n        address:\n          description: Address of the authentication server\n          title: address\n          type: string\n        name:\n          description: Name assigned to the server\n          title: name\n          type: string\n        timeout:\n          description: |-\n            Set the timeout in seconds on responses from the AAA\n            server\n          maximum: 65535\n          minimum: 0\n          title: timeout\n          type: integer\n      title: System_Aaa_Server-groups_Server-group_Servers_Server_Config\n      type: object\n    System_Aaa_Server-groups_Server-group_Servers_Server_List:\n      description: List of AAA servers (list)\n      items:\n        $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - address\n      x-list-multiple: true\n    System_Aaa_Server-groups_Server-group_Servers_Server_Radius:\n      description: Top-level container for RADIUS server data\n      properties:\n        config:\n          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius_Config'\n        state:\n          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State'\n      title: System_Aaa_Server-groups_Server-group_Servers_Server_Radius\n      type: object\n    System_Aaa_Server-groups_Server-group_Servers_Server_Radius_Config:\n      description: Configuration data for RADIUS servers\n      properties:\n        acct-port:\n          description: Port number for accounting requests\n          maximum: 65535\n          minimum: 0\n          title: acct-port\n          type: integer\n        auth-port:\n          description: Port number for authentication requests\n          maximum: 65535\n          minimum: 0\n          title: auth-port\n          type: integer\n        retransmit-attempts:\n          description: |-\n            Number of times the system may resend a request to the\n            RADIUS server when it is unresponsive\n          maximum: 255\n          minimum: 0\n          title: retransmit-attempts\n          type: integer\n        secret-key:\n          description: |-\n            The unencrypted shared key used between the authentication\n            server and the device.\n          title: secret-key\n          type: string\n        source-address:\n          description: Source IP address to use in messages to the RADIUS server\n          title: source-address\n          type: string\n      title: System_Aaa_Server-groups_Server-group_Servers_Server_Radius_Config\n      type: object\n    System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State:\n      description: Operational state data for RADIUS servers\n      properties:\n        acct-port:\n          description: Port number for accounting requests\n          maximum: 65535\n          minimum: 0\n          title: acct-port\n          type: integer\n        auth-port:\n          description: Port number for authentication requests\n          maximum: 65535\n          minimum: 0\n          title: auth-port\n          type: integer\n        counters:\n          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State_Counters'\n        retransmit-attempts:\n          description: |-\n            Number of times the system may resend a request to the\n            RADIUS server when it is unresponsive\n          maximum: 255\n          minimum: 0\n          title: retransmit-attempts\n          type: integer\n        secret-key:\n          description: |-\n            The unencrypted shared key used between the authentication\n            server and the device.\n          title: secret-key\n          type: string\n        source-address:\n          description: Source IP address to use in messages to the RADIUS server\n          title: source-address\n          type: string\n      title: System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State\n      type: object\n    System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State_Counters:\n      description: A collection of RADIUS related state objects.\n      properties:\n        access-accepts:\n          description: Received Access-Accept messages.\n          format: int64\n          minimum: 0\n          title: access-accepts\n          type: integer\n        access-rejects:\n          description: Received Access-Reject messages.\n          format: int64\n          minimum: 0\n          title: access-rejects\n          type: integer\n        retried-access-requests:\n          description: Retransmitted Access-Request messages.\n          format: int64\n          minimum: 0\n          title: retried-access-requests\n          type: integer\n        timeout-access-requests:\n          description: |-\n            Access-Request messages that have timed-out,\n            requiring retransmission.\n          format: int64\n          minimum: 0\n          title: timeout-access-requests\n          type: integer\n      title: System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State_Counters\n      type: object\n    System_Aaa_Server-groups_Server-group_Servers_Server_State:\n      description: 'Operational state data '\n      properties:\n        address:\n          description: Address of the authentication server\n          title: address\n          type: string\n        connection-aborts:\n          description: |-\n            Number of aborted connections to the server.  These do\n            not include connections that are close gracefully.\n          format: int64\n          minimum: 0\n          title: connection-aborts\n          type: integer\n        connection-closes:\n          description: |-\n            Number of connection close requests sent to the server, e.g.\n            socket close\n          format: int64\n          minimum: 0\n          title: connection-closes\n          type: integer\n        connection-failures:\n          description: Number of connection failures to the server\n          format: int64\n          minimum: 0\n          title: connection-failures\n          type: integer\n        connection-opens:\n          description: |-\n            Number of new connection requests sent to the server, e.g.\n            socket open\n          format: int64\n          minimum: 0\n          title: connection-opens\n          type: integer\n        connection-timeouts:\n          description: Number of connection timeouts to the server\n          format: int64\n          minimum: 0\n          title: connection-timeouts\n          type: integer\n        errors-received:\n          description: Number of error messages received from the server\n          format: int64\n          minimum: 0\n          title: errors-received\n          type: integer\n        messages-received:\n          description: Number of messages received by the server\n          format: int64\n          minimum: 0\n          title: messages-received\n          type: integer\n        messages-sent:\n          description: Number of messages sent to the server\n          format: int64\n          minimum: 0\n          title: messages-sent\n          type: integer\n        name:\n          description: Name assigned to the server\n          title: name\n          type: string\n        timeout:\n          description: |-\n            Set the timeout in seconds on responses from the AAA\n            server\n          maximum: 65535\n          minimum: 0\n          title: timeout\n          type: integer\n      title: System_Aaa_Server-groups_Server-group_Servers_Server_State\n      type: object\n    System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs:\n      description: Top-level container for TACACS+ server data\n      properties:\n        config:\n          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_Config'\n        state:\n          $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_State'\n      title: System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs\n      type: object\n    System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_Config:\n      description: Configuration data for TACACS+ server\n      properties:\n        port:\n          description: The port number on which to contact the TACACS server\n          maximum: 65535\n          minimum: 0\n          title: port\n          type: integer\n        secret-key:\n          description: |-\n            The unencrypted shared key used between the authentication\n            server and the device.\n          title: secret-key\n          type: string\n        source-address:\n          description: Source IP address to use in messages to the TACACS server\n          title: source-address\n          type: string\n      title: System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_Config\n      type: object\n    System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_State:\n      description: Operational state data for TACACS+ server\n      properties:\n        port:\n          description: The port number on which to contact the TACACS server\n          maximum: 65535\n          minimum: 0\n          title: port\n          type: integer\n        secret-key:\n          description: |-\n            The unencrypted shared key used between the authentication\n            server and the device.\n          title: secret-key\n          type: string\n        source-address:\n          description: Source IP address to use in messages to the TACACS server\n          title: source-address\n          type: string\n      title: System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_State\n      type: object\n    System_Aaa_Server-groups_Server-group_State:\n      description: Operational state data for each server group\n      properties:\n        name:\n          description: Name for the server group\n          title: name\n          type: string\n        type:\n          description: |-\n            AAA server type -- all servers in the group must be of this\n            type\n          enum:\n          - RADIUS\n          - TACACS\n          title: type\n          type: string\n      title: System_Aaa_Server-groups_Server-group_State\n      type: object\n    System_Aaa_State:\n      description: 'Operational state data for top level AAA services '\n      title: System_Aaa_State\n      type: object\n    System_Clock:\n      description: Top-level container for clock configuration data\n      properties:\n        config:\n          $ref: '#/components/schemas/System_Clock_Config'\n        state:\n          $ref: '#/components/schemas/System_Clock_State'\n      title: System_Clock\n      type: object\n    System_Clock_Config:\n      description: Configuration data for system clock\n      properties:\n        timezone-name:\n          description: |-\n            The TZ database name to use for the system, such\n            as 'Europe/Stockholm'.\n          title: timezone-name\n          type: string\n      title: System_Clock_Config\n      type: object\n    System_Clock_State:\n      description: Operational state data for system clock\n      properties:\n        timezone-name:\n          description: |-\n            The TZ database name to use for the system, such\n            as 'Europe/Stockholm'.\n          title: timezone-name\n          type: string\n      title: System_Clock_State\n      type: object\n    System_Config:\n      description: Global configuration data for the system\n      properties:\n        domain-name:\n          description: |-\n            Specifies the domain name used to form fully qualified name\n            for unqualified hostnames.\n          maxLength: 253\n          minLength: 1\n          pattern: ((([a-zA-Z0-9_]([a-zA-Z0-9\\-_]){0,61})?[a-zA-Z0-9]\\.)*([a-zA-Z0-9_]([a-zA-Z0-9\\-_]){0,61})?[a-zA-Z0-9]\\.?)|\\.\n          title: domain-name\n          type: string\n        hostname:\n          description: |-\n            The hostname of the device -- should be a single domain\n            label, without the domain.\n          maxLength: 253\n          minLength: 1\n          pattern: ((([a-zA-Z0-9_]([a-zA-Z0-9\\-_]){0,61})?[a-zA-Z0-9]\\.)*([a-zA-Z0-9_]([a-zA-Z0-9\\-_]){0,61})?[a-zA-Z0-9]\\.?)|\\.\n          title: hostname\n          type: string\n        login-banner:\n          description: |-\n            The console login message displayed before the login prompt,\n            i.e., before a user logs into the system.\n          title: login-banner\n          type: string\n        motd-banner:\n          description: |-\n            The console message displayed after a user logs into the\n            system.  They system may append additional standard\n            information such as the current system date and time, uptime,\n            last login timestamp, etc.\n          title: motd-banner\n          type: string\n      title: System_Config\n      type: object\n    System_Dns:\n      description: Enclosing container for DNS resolver data\n      properties:\n        config:\n          $ref: '#/components/schemas/System_Dns_Config'\n        host-entries:\n          $ref: '#/components/schemas/System_Dns_Host-entries'\n        servers:\n          $ref: '#/components/schemas/System_Dns_Servers'\n        state:\n          $ref: '#/components/schemas/System_Dns_State'\n      title: System_Dns\n      type: object\n    System_Dns_Config:\n      description: Configuration data for the DNS resolver\n      properties:\n        leaf-list-search:\n          items:\n            description: |-\n              An ordered list of domains to search when resolving\n              a host name.\n            maxLength: 253\n            minLength: 1\n            pattern: ((([a-zA-Z0-9_]([a-zA-Z0-9\\-_]){0,61})?[a-zA-Z0-9]\\.)*([a-zA-Z0-9_]([a-zA-Z0-9\\-_]){0,61})?[a-zA-Z0-9]\\.?)|\\.\n            title: search\n            type: string\n          title: leaf-list-search\n          type: array\n      title: System_Dns_Config\n      type: object\n    System_Dns_Host-entries:\n      description: Enclosing container for list of static host entries\n      properties:\n        host-entry:\n          $ref: '#/components/schemas/System_Dns_Host-entries_Host-entry_List'\n      title: System_Dns_Host-entries\n      type: object\n    System_Dns_Host-entries_Host-entry:\n      description: List of static host entries (single)\n      properties:\n        config:\n          $ref: '#/components/schemas/System_Dns_Host-entries_Host-entry_Config'\n        hostname:\n          description: Reference to the hostname list key\n          title: hostname\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../config/hostname\n        state:\n          $ref: '#/components/schemas/System_Dns_Host-entries_Host-entry_State'\n      required:\n      - hostname\n      title: System_Dns_Host-entries_Host-entry\n      type: object\n      x-list-multiple: true\n    System_Dns_Host-entries_Host-entry_Config:\n      description: Configuration data for static host entries\n      properties:\n        hostname:\n          description: Hostname for the static DNS entry\n          title: hostname\n          type: string\n        leaf-list-alias:\n          items:\n            description: Additional aliases for the hostname\n            title: alias\n            type: string\n          title: leaf-list-alias\n          type: array\n        leaf-list-ipv4-address:\n          items:\n            description: List of IPv4 addressses for the host entry\n            pattern: ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$\n            title: ipv4-address\n            type: string\n          title: leaf-list-ipv4-address\n          type: array\n        leaf-list-ipv6-address:\n          items:\n            description: List of IPv6 addresses for the host entry\n            pattern: ^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$\n            title: ipv6-address\n            type: string\n          title: leaf-list-ipv6-address\n          type: array\n      title: System_Dns_Host-entries_Host-entry_Config\n      type: object\n    System_Dns_Host-entries_Host-entry_List:\n      description: List of static host entries (list)\n      items:\n        $ref: '#/components/schemas/System_Dns_Host-entries_Host-entry'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - hostname\n      x-list-multiple: true\n    System_Dns_Host-entries_Host-entry_State:\n      description: Operational state data for static host entries\n      properties:\n        hostname:\n          description: Hostname for the static DNS entry\n          title: hostname\n          type: string\n        leaf-list-alias:\n          items:\n            description: Additional aliases for the hostname\n            title: alias\n            type: string\n          title: leaf-list-alias\n          type: array\n        leaf-list-ipv4-address:\n          items:\n            description: List of IPv4 addressses for the host entry\n            pattern: ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$\n            title: ipv4-address\n            type: string\n          title: leaf-list-ipv4-address\n          type: array\n        leaf-list-ipv6-address:\n          items:\n            description: List of IPv6 addresses for the host entry\n            pattern: ^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$\n            title: ipv6-address\n            type: string\n          title: leaf-list-ipv6-address\n          type: array\n      title: System_Dns_Host-entries_Host-entry_State\n      type: object\n    System_Dns_Servers:\n      description: Enclosing container for DNS resolver list\n      properties:\n        server:\n          $ref: '#/components/schemas/System_Dns_Servers_Server_List'\n      title: System_Dns_Servers\n      type: object\n    System_Dns_Servers_Server:\n      description: |-\n        List of the DNS servers that the resolver should query.\n\n        When the resolver is invoked by a calling application, it\n        sends the query to the first name server in this list.  If\n        no response has been received within 'timeout' seconds,\n        the resolver continues with the next server in the list.\n        If no response is received from any server, the resolver\n        continues with the first server again.  When the resolver\n        has traversed the list 'attempts' times without receiving\n        any response, it gives up and returns an error to the\n        calling application.\n\n        Implementations MAY limit the number of entries in this\n        list. (single)\n      properties:\n        address:\n          description: References the configured address of the DNS server\n          title: address\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../config/address\n        config:\n          $ref: '#/components/schemas/System_Dns_Servers_Server_Config'\n        state:\n          $ref: '#/components/schemas/System_Dns_Servers_Server_State'\n      required:\n      - address\n      title: System_Dns_Servers_Server\n      type: object\n      x-list-multiple: true\n      x-must: []\n    System_Dns_Servers_Server_Config:\n      description: Configuration data for each DNS resolver\n      properties:\n        address:\n          description: |-\n            The address of the DNS server, can be either IPv4\n            or IPv6.\n          title: address\n          type: string\n        port:\n          description: The port number of the DNS server.\n          maximum: 65535\n          minimum: 0\n          title: port\n          type: integer\n      title: System_Dns_Servers_Server_Config\n      type: object\n    System_Dns_Servers_Server_List:\n      description: |-\n        List of the DNS servers that the resolver should query.\n\n        When the resolver is invoked by a calling application, it\n        sends the query to the first name server in this list.  If\n        no response has been received within 'timeout' seconds,\n        the resolver continues with the next server in the list.\n        If no response is received from any server, the resolver\n        continues with the first server again.  When the resolver\n        has traversed the list 'attempts' times without receiving\n        any response, it gives up and returns an error to the\n        calling application.\n\n        Implementations MAY limit the number of entries in this\n        list. (list)\n      items:\n        $ref: '#/components/schemas/System_Dns_Servers_Server'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - address\n      x-list-multiple: true\n    System_Dns_Servers_Server_State:\n      description: Operational state data for each DNS resolver\n      properties:\n        address:\n          description: |-\n            The address of the DNS server, can be either IPv4\n            or IPv6.\n          title: address\n          type: string\n        port:\n          description: The port number of the DNS server.\n          maximum: 65535\n          minimum: 0\n          title: port\n          type: integer\n      title: System_Dns_Servers_Server_State\n      type: object\n    System_Dns_State:\n      description: Operational state data for the DNS resolver\n      properties:\n        leaf-list-search:\n          items:\n            description: |-\n              An ordered list of domains to search when resolving\n              a host name.\n            maxLength: 253\n            minLength: 1\n            pattern: ((([a-zA-Z0-9_]([a-zA-Z0-9\\-_]){0,61})?[a-zA-Z0-9]\\.)*([a-zA-Z0-9_]([a-zA-Z0-9\\-_]){0,61})?[a-zA-Z0-9]\\.?)|\\.\n            title: search\n            type: string\n          title: leaf-list-search\n          type: array\n      title: System_Dns_State\n      type: object\n    System_Logging:\n      description: Top-level container for data related to logging / syslog\n      properties:\n        console:\n          $ref: '#/components/schemas/System_Logging_Console'\n        remote-servers:\n          $ref: '#/components/schemas/System_Logging_Remote-servers'\n      title: System_Logging\n      type: object\n    System_Logging_Console:\n      description: |-\n        Top-level container for data related to console-based\n        logging\n      properties:\n        config:\n          $ref: '#/components/schemas/System_Logging_Console_Config'\n        selectors:\n          $ref: '#/components/schemas/System_Logging_Console_Selectors'\n        state:\n          $ref: '#/components/schemas/System_Logging_Console_State'\n      title: System_Logging_Console\n      type: object\n    System_Logging_Console_Config:\n      description: Configuration data for console logging\n      title: System_Logging_Console_Config\n      type: object\n    System_Logging_Console_Selectors:\n      description: 'Enclosing container '\n      properties:\n        selector:\n          $ref: '#/components/schemas/System_Logging_Console_Selectors_Selector_List'\n      title: System_Logging_Console_Selectors\n      type: object\n    System_Logging_Console_Selectors_Selector:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyUnchanged'\n      description: List of selectors for log messages (single)\n      properties:\n        config:\n          $ref: '#/components/schemas/System_Logging_Console_Selectors_Selector_Config'\n        facility:\n          description: Reference to facility list key\n          title: facility\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../config/facility\n        severity:\n          description: Reference to severity list key\n          title: severity\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../config/severity\n        state:\n          $ref: '#/components/schemas/System_Logging_Console_Selectors_Selector_State'\n      required:\n      - facility\n      - severity\n      title: System_Logging_Console_Selectors_Selector\n      type: object\n      x-list-multiple: true\n    System_Logging_Console_Selectors_Selector_Config:\n      description: 'Configuration data '\n      properties:\n        facility:\n          description: Specifies the facility, or class of messages to log\n          enum:\n          - ALL\n          - AUDIT\n          - AUTH\n          - AUTHPRIV\n          - CONSOLE\n          - KERNEL\n          - LOCAL0\n          - LOCAL1\n          - LOCAL2\n          - LOCAL3\n          - LOCAL4\n          - LOCAL5\n          - LOCAL6\n          - LOCAL7\n          - MAIL\n          - NTP\n          - SYSLOG\n          - SYSTEM_DAEMON\n          - USER\n          title: facility\n          type: string\n        severity:\n          description: |-\n            Specifies that only messages of the given severity (or\n            greater severity) for the corresonding facility are logged\n          title: severity\n          type: string\n      title: System_Logging_Console_Selectors_Selector_Config\n      type: object\n    System_Logging_Console_Selectors_Selector_List:\n      description: List of selectors for log messages (list)\n      items:\n        $ref: '#/components/schemas/System_Logging_Console_Selectors_Selector'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - facility\n      - severity\n      x-list-multiple: true\n    System_Logging_Console_Selectors_Selector_State:\n      description: 'Operational state data '\n      properties:\n        facility:\n          description: Specifies the facility, or class of messages to log\n          enum:\n          - ALL\n          - AUDIT\n          - AUTH\n          - AUTHPRIV\n          - CONSOLE\n          - KERNEL\n          - LOCAL0\n          - LOCAL1\n          - LOCAL2\n          - LOCAL3\n          - LOCAL4\n          - LOCAL5\n          - LOCAL6\n          - LOCAL7\n          - MAIL\n          - NTP\n          - SYSLOG\n          - SYSTEM_DAEMON\n          - USER\n          title: facility\n          type: string\n        severity:\n          description: |-\n            Specifies that only messages of the given severity (or\n            greater severity) for the corresonding facility are logged\n          title: severity\n          type: string\n      title: System_Logging_Console_Selectors_Selector_State\n      type: object\n    System_Logging_Console_State:\n      description: Operational state data for console logging\n      title: System_Logging_Console_State\n      type: object\n    System_Logging_Remote-servers:\n      description: Enclosing container for the list of remote log servers\n      properties:\n        remote-server:\n          $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_List'\n      title: System_Logging_Remote-servers\n      type: object\n    System_Logging_Remote-servers_Remote-server:\n      description: List of remote log servers (single)\n      properties:\n        config:\n          $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Config'\n        host:\n          description: Reference to the host list key\n          title: host\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../config/host\n        selectors:\n          $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors'\n        state:\n          $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_State'\n      required:\n      - host\n      title: System_Logging_Remote-servers_Remote-server\n      type: object\n      x-list-multiple: true\n    System_Logging_Remote-servers_Remote-server_Config:\n      description: Configuration data for remote log servers\n      properties:\n        host:\n          description: IP address or hostname of the remote log server\n          title: host\n          type: string\n        remote-port:\n          description: |-\n            Sets the destination port number for syslog UDP messages to\n            the server.  The default for syslog is 514.\n          maximum: 65535\n          minimum: 0\n          title: remote-port\n          type: integer\n        source-address:\n          description: Source IP address for packets to the log server\n          title: source-address\n          type: string\n      title: System_Logging_Remote-servers_Remote-server_Config\n      type: object\n    System_Logging_Remote-servers_Remote-server_List:\n      description: List of remote log servers (list)\n      items:\n        $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - host\n      x-list-multiple: true\n    System_Logging_Remote-servers_Remote-server_Selectors:\n      description: 'Enclosing container '\n      properties:\n        selector:\n          $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors_Selector_List'\n      title: System_Logging_Remote-servers_Remote-server_Selectors\n      type: object\n    System_Logging_Remote-servers_Remote-server_Selectors_Selector:\n      additionalProperties:\n        $ref: '#/components/schemas/AdditionalPropertyUnchanged'\n      description: List of selectors for log messages (single)\n      properties:\n        config:\n          $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors_Selector_Config'\n        facility:\n          description: Reference to facility list key\n          title: facility\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../config/facility\n        severity:\n          description: Reference to severity list key\n          title: severity\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../config/severity\n        state:\n          $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors_Selector_State'\n      required:\n      - facility\n      - severity\n      title: System_Logging_Remote-servers_Remote-server_Selectors_Selector\n      type: object\n      x-list-multiple: true\n    System_Logging_Remote-servers_Remote-server_Selectors_Selector_Config:\n      description: 'Configuration data '\n      properties:\n        facility:\n          description: Specifies the facility, or class of messages to log\n          enum:\n          - ALL\n          - AUDIT\n          - AUTH\n          - AUTHPRIV\n          - CONSOLE\n          - KERNEL\n          - LOCAL0\n          - LOCAL1\n          - LOCAL2\n          - LOCAL3\n          - LOCAL4\n          - LOCAL5\n          - LOCAL6\n          - LOCAL7\n          - MAIL\n          - NTP\n          - SYSLOG\n          - SYSTEM_DAEMON\n          - USER\n          title: facility\n          type: string\n        severity:\n          description: |-\n            Specifies that only messages of the given severity (or\n            greater severity) for the corresonding facility are logged\n          title: severity\n          type: string\n      title: System_Logging_Remote-servers_Remote-server_Selectors_Selector_Config\n      type: object\n    System_Logging_Remote-servers_Remote-server_Selectors_Selector_List:\n      description: List of selectors for log messages (list)\n      items:\n        $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors_Selector'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - facility\n      - severity\n      x-list-multiple: true\n    System_Logging_Remote-servers_Remote-server_Selectors_Selector_State:\n      description: 'Operational state data '\n      properties:\n        facility:\n          description: Specifies the facility, or class of messages to log\n          enum:\n          - ALL\n          - AUDIT\n          - AUTH\n          - AUTHPRIV\n          - CONSOLE\n          - KERNEL\n          - LOCAL0\n          - LOCAL1\n          - LOCAL2\n          - LOCAL3\n          - LOCAL4\n          - LOCAL5\n          - LOCAL6\n          - LOCAL7\n          - MAIL\n          - NTP\n          - SYSLOG\n          - SYSTEM_DAEMON\n          - USER\n          title: facility\n          type: string\n        severity:\n          description: |-\n            Specifies that only messages of the given severity (or\n            greater severity) for the corresonding facility are logged\n          title: severity\n          type: string\n      title: System_Logging_Remote-servers_Remote-server_Selectors_Selector_State\n      type: object\n    System_Logging_Remote-servers_Remote-server_State:\n      description: Operational state data for remote log servers\n      properties:\n        host:\n          description: IP address or hostname of the remote log server\n          title: host\n          type: string\n        remote-port:\n          description: |-\n            Sets the destination port number for syslog UDP messages to\n            the server.  The default for syslog is 514.\n          maximum: 65535\n          minimum: 0\n          title: remote-port\n          type: integer\n        source-address:\n          description: Source IP address for packets to the log server\n          title: source-address\n          type: string\n      title: System_Logging_Remote-servers_Remote-server_State\n      type: object\n    System_Memory:\n      description: Top-level container for system memory data\n      properties:\n        config:\n          $ref: '#/components/schemas/System_Memory_Config'\n        state:\n          $ref: '#/components/schemas/System_Memory_State'\n      title: System_Memory\n      type: object\n    System_Memory_Config:\n      description: Configuration data for system memory\n      title: System_Memory_Config\n      type: object\n    System_Memory_State:\n      description: Operational state data for system memory\n      properties:\n        physical:\n          description: |-\n            Reports the total physical memory available on the\n            system.\n          format: int64\n          minimum: 0\n          title: physical\n          type: integer\n        reserved:\n          description: Memory reserved for system use\n          format: int64\n          minimum: 0\n          title: reserved\n          type: integer\n      title: System_Memory_State\n      type: object\n    System_Ntp:\n      description: Top-level container for NTP configuration and state\n      properties:\n        config:\n          $ref: '#/components/schemas/System_Ntp_Config'\n        ntp-keys:\n          $ref: '#/components/schemas/System_Ntp_Ntp-keys'\n        servers:\n          $ref: '#/components/schemas/System_Ntp_Servers'\n        state:\n          $ref: '#/components/schemas/System_Ntp_State'\n      title: System_Ntp\n      type: object\n    System_Ntp_Config:\n      description: Configuration data for NTP client.\n      properties:\n        enable-ntp-auth:\n          default: false\n          description: |-\n            Enable or disable NTP authentication -- when enabled, the\n            system will only use packets containing a trusted\n            authentication key to synchronize the time.\n          title: enable-ntp-auth\n          type: boolean\n        enabled:\n          default: false\n          description: |-\n            Enables the NTP protocol and indicates that the system should\n            attempt to synchronize the system clock with an NTP server\n            from the servers defined in the 'ntp/server' list.\n          title: enabled\n          type: boolean\n        ntp-source-address:\n          description: Source address to use on outgoing NTP packets\n          title: ntp-source-address\n          type: string\n      title: System_Ntp_Config\n      type: object\n    System_Ntp_Ntp-keys:\n      description: Enclosing container for list of NTP authentication keys\n      properties:\n        ntp-key:\n          $ref: '#/components/schemas/System_Ntp_Ntp-keys_Ntp-key_List'\n      title: System_Ntp_Ntp-keys\n      type: object\n    System_Ntp_Ntp-keys_Ntp-key:\n      description: List of NTP authentication keys (single)\n      properties:\n        config:\n          $ref: '#/components/schemas/System_Ntp_Ntp-keys_Ntp-key_Config'\n        key-id:\n          description: Reference to auth key-id list key\n          title: key-id\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../config/key-id\n        state:\n          $ref: '#/components/schemas/System_Ntp_Ntp-keys_Ntp-key_State'\n      required:\n      - key-id\n      title: System_Ntp_Ntp-keys_Ntp-key\n      type: object\n      x-list-multiple: true\n    System_Ntp_Ntp-keys_Ntp-key_Config:\n      description: Configuration data for NTP auth keys\n      properties:\n        key-id:\n          description: |-\n            Integer identifier used by the client and server to\n            designate a secret key.  The client and server must use\n            the same key id.\n          maximum: 65535\n          minimum: 0\n          title: key-id\n          type: integer\n        key-type:\n          description: Encryption type used for the NTP authentication key\n          enum:\n          - NTP_AUTH_MD5\n          title: key-type\n          type: string\n        key-value:\n          description: NTP authentication key value\n          title: key-value\n          type: string\n      title: System_Ntp_Ntp-keys_Ntp-key_Config\n      type: object\n    System_Ntp_Ntp-keys_Ntp-key_List:\n      description: List of NTP authentication keys (list)\n      items:\n        $ref: '#/components/schemas/System_Ntp_Ntp-keys_Ntp-key'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - key-id\n      x-list-multiple: true\n    System_Ntp_Ntp-keys_Ntp-key_State:\n      description: Operational state data for NTP auth keys\n      properties:\n        key-id:\n          description: |-\n            Integer identifier used by the client and server to\n            designate a secret key.  The client and server must use\n            the same key id.\n          maximum: 65535\n          minimum: 0\n          title: key-id\n          type: integer\n        key-type:\n          description: Encryption type used for the NTP authentication key\n          enum:\n          - NTP_AUTH_MD5\n          title: key-type\n          type: string\n        key-value:\n          description: NTP authentication key value\n          title: key-value\n          type: string\n      title: System_Ntp_Ntp-keys_Ntp-key_State\n      type: object\n    System_Ntp_Servers:\n      description: Enclosing container for the list of NTP servers\n      properties:\n        server:\n          $ref: '#/components/schemas/System_Ntp_Servers_Server_List'\n      title: System_Ntp_Servers\n      type: object\n    System_Ntp_Servers_Server:\n      description: |-\n        List of NTP servers to use for system clock\n        synchronization.  If '/system/ntp/enabled'\n        is 'true', then the system will attempt to\n        contact and utilize the specified NTP servers. (single)\n      properties:\n        address:\n          description: |-\n            References the configured address or hostname of the\n            NTP server.\n          title: address\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../config/address\n        config:\n          $ref: '#/components/schemas/System_Ntp_Servers_Server_Config'\n        state:\n          $ref: '#/components/schemas/System_Ntp_Servers_Server_State'\n      required:\n      - address\n      title: System_Ntp_Servers_Server\n      type: object\n      x-list-multiple: true\n    System_Ntp_Servers_Server_Config:\n      description: Configuration data for an NTP server.\n      properties:\n        address:\n          description: The address or hostname of the NTP server.\n          title: address\n          type: string\n        association-type:\n          description: The desired association type for this NTP server.\n          title: association-type\n          type: string\n        iburst:\n          default: false\n          description: |-\n            Indicates whether this server should enable burst\n            synchronization or not.\n          title: iburst\n          type: boolean\n        port:\n          description: The port number of the NTP server.\n          maximum: 65535\n          minimum: 0\n          title: port\n          type: integer\n        prefer:\n          default: false\n          description: |-\n            Indicates whether this server should be preferred\n            or not.\n          title: prefer\n          type: boolean\n        version:\n          description: Version number to put in outgoing NTP packets\n          maximum: 4\n          minimum: 1\n          title: version\n          type: integer\n      title: System_Ntp_Servers_Server_Config\n      type: object\n    System_Ntp_Servers_Server_List:\n      description: |-\n        List of NTP servers to use for system clock\n        synchronization.  If '/system/ntp/enabled'\n        is 'true', then the system will attempt to\n        contact and utilize the specified NTP servers. (list)\n      items:\n        $ref: '#/components/schemas/System_Ntp_Servers_Server'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - address\n      x-list-multiple: true\n    System_Ntp_Servers_Server_State:\n      description: Operational state data for an NTP server.\n      properties:\n        address:\n          description: The address or hostname of the NTP server.\n          title: address\n          type: string\n        association-type:\n          description: The desired association type for this NTP server.\n          title: association-type\n          type: string\n        iburst:\n          default: false\n          description: |-\n            Indicates whether this server should enable burst\n            synchronization or not.\n          title: iburst\n          type: boolean\n        offset:\n          description: |-\n            Estimate of the current time offset from the peer.  This is\n            the time difference between the local and reference clock.\n          format: int64\n          minimum: 0\n          title: offset\n          type: integer\n        poll-interval:\n          description: Polling interval of the peer\n          format: int32\n          minimum: 0\n          title: poll-interval\n          type: integer\n        port:\n          description: The port number of the NTP server.\n          maximum: 65535\n          minimum: 0\n          title: port\n          type: integer\n        prefer:\n          default: false\n          description: |-\n            Indicates whether this server should be preferred\n            or not.\n          title: prefer\n          type: boolean\n        root-delay:\n          description: The round-trip delay to the server, in milliseconds.\n          format: int32\n          minimum: 0\n          title: root-delay\n          type: integer\n        root-dispersion:\n          description: |-\n            Dispersion (epsilon) represents the maximum error inherent\n            in the measurement\n          format: int64\n          minimum: 0\n          title: root-dispersion\n          type: integer\n        stratum:\n          description: |-\n            Indicates the level of the server in the NTP hierarchy. As\n            stratum number increases, the accuracy is degraded.  Primary\n            servers are stratum while a maximum value of 16 indicates\n            unsynchronized.  The values have the following specific\n            semantics:\n\n            | 0      | unspecified or invalid\n            | 1      | primary server (e.g., equipped with a GPS receiver)\n            | 2-15   | secondary server (via NTP)\n            | 16     | unsynchronized\n            | 17-255 | reserved\n          maximum: 255\n          minimum: 0\n          title: stratum\n          type: integer\n        version:\n          description: Version number to put in outgoing NTP packets\n          maximum: 4\n          minimum: 1\n          title: version\n          type: integer\n      title: System_Ntp_Servers_Server_State\n      type: object\n    System_Ntp_State:\n      description: Operational state data for NTP services.\n      properties:\n        auth-mismatch:\n          description: |-\n            Count of the number of NTP packets received that were not\n            processed due to authentication mismatch.\n          format: int64\n          minimum: 0\n          title: auth-mismatch\n          type: integer\n        enable-ntp-auth:\n          default: false\n          description: |-\n            Enable or disable NTP authentication -- when enabled, the\n            system will only use packets containing a trusted\n            authentication key to synchronize the time.\n          title: enable-ntp-auth\n          type: boolean\n        enabled:\n          default: false\n          description: |-\n            Enables the NTP protocol and indicates that the system should\n            attempt to synchronize the system clock with an NTP server\n            from the servers defined in the 'ntp/server' list.\n          title: enabled\n          type: boolean\n        ntp-source-address:\n          description: Source address to use on outgoing NTP packets\n          title: ntp-source-address\n          type: string\n      title: System_Ntp_State\n      type: object\n    System_Openflow:\n      description: Container for Openflow model\n      properties:\n        agent:\n          $ref: '#/components/schemas/System_Openflow_Agent'\n        controllers:\n          $ref: '#/components/schemas/System_Openflow_Controllers'\n      title: System_Openflow\n      type: object\n    System_Openflow_Agent:\n      description: Container for the Openflow agent model.\n      properties:\n        config:\n          $ref: '#/components/schemas/System_Openflow_Agent_Config'\n        state:\n          $ref: '#/components/schemas/System_Openflow_Agent_State'\n      title: System_Openflow_Agent\n      type: object\n    System_Openflow_Agent_Config:\n      description: Container for the Openflow agent config.\n      properties:\n        backoff-interval:\n          description: Openflow agent connection backoff interval.\n          format: int32\n          minimum: 0\n          title: backoff-interval\n          type: integer\n        datapath-id:\n          description: |-\n            Datapath unique ID. The lower 48-bits are for\n            a MAC address, while the upper 16-bits are\n            implementer-defined.\n          pattern: ^[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){7}$\n          title: datapath-id\n          type: string\n        failure-mode:\n          description: Failure mode for Openflow.\n          title: failure-mode\n          type: string\n        inactivity-probe:\n          description: Openflow agent inactivity probe period.\n          format: int32\n          minimum: 0\n          title: inactivity-probe\n          type: integer\n        max-backoff:\n          description: Openflow agent max backoff time.\n          format: int32\n          minimum: 0\n          title: max-backoff\n          type: integer\n      title: System_Openflow_Agent_Config\n      type: object\n    System_Openflow_Agent_State:\n      description: Container for the Openflow agent state.\n      properties:\n        backoff-interval:\n          description: Openflow agent connection backoff interval.\n          format: int32\n          minimum: 0\n          title: backoff-interval\n          type: integer\n        datapath-id:\n          description: |-\n            Datapath unique ID. The lower 48-bits are for\n            a MAC address, while the upper 16-bits are\n            implementer-defined.\n          pattern: ^[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){7}$\n          title: datapath-id\n          type: string\n        failure-mode:\n          description: Failure mode for Openflow.\n          title: failure-mode\n          type: string\n        inactivity-probe:\n          description: Openflow agent inactivity probe period.\n          format: int32\n          minimum: 0\n          title: inactivity-probe\n          type: integer\n        max-backoff:\n          description: Openflow agent max backoff time.\n          format: int32\n          minimum: 0\n          title: max-backoff\n          type: integer\n      title: System_Openflow_Agent_State\n      type: object\n    System_Openflow_Controllers:\n      description: Container for the Openflow controllers model\n      properties:\n        controller:\n          $ref: '#/components/schemas/System_Openflow_Controllers_Controller_List'\n      title: System_Openflow_Controllers\n      type: object\n    System_Openflow_Controllers_Controller:\n      description: |-\n        The Openflow Switch connects to all Openflow controllers\n        configured (single)\n      properties:\n        config:\n          $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Config'\n        connections:\n          $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections'\n        name:\n          description: The name identifies the controller.\n          title: name\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../config/name\n        state:\n          $ref: '#/components/schemas/System_Openflow_Controllers_Controller_State'\n      required:\n      - name\n      title: System_Openflow_Controllers_Controller\n      type: object\n      x-list-multiple: true\n    System_Openflow_Controllers_Controller_Config:\n      description: Container for the Openflow controller config.\n      properties:\n        name:\n          description: |-\n            Name of this Openflow controller. All connections\n            for the same controller need to have the same name.\n          title: name\n          type: string\n      title: System_Openflow_Controllers_Controller_Config\n      type: object\n    System_Openflow_Controllers_Controller_Connections:\n      description: Enclosing container for list of controller connections\n      properties:\n        connection:\n          $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections_Connection_List'\n      title: System_Openflow_Controllers_Controller_Connections\n      type: object\n    System_Openflow_Controllers_Controller_Connections_Connection:\n      description: |-\n        List of connections to the OpenFlow controller.\n        The Openflow switch always connects to configured Openflow\n        controllers. Each controller can have more than one\n        connection, called auxiliary Openflow connections. (single)\n      properties:\n        aux-id:\n          description: Reference to auxiliary id list key\n          title: aux-id\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../config/aux-id\n        config:\n          $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections_Connection_Config'\n        state:\n          $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections_Connection_State'\n      required:\n      - aux-id\n      title: System_Openflow_Controllers_Controller_Connections_Connection\n      type: object\n      x-list-multiple: true\n    System_Openflow_Controllers_Controller_Connections_Connection_Config:\n      description: Configuration data for OpenFlow controller connections\n      properties:\n        address:\n          description: The IP address of the controller.\n          title: address\n          type: string\n        aux-id:\n          description: |-\n            Controller auxiliary ID. Must be 0 for the main controller.\n            One controller may have multiple auxiliary connections as\n            specified by the Openflow protocol. Besides configuring the\n            main controller, it is also possible to configure auxiliary\n            connections. The main controller must have the aux-id\n            set to zero. All others must have an aux-id different\n            from 0.\n          maximum: 15\n          minimum: 0\n          title: aux-id\n          type: integer\n        port:\n          description: Controller port to use.\n          maximum: 65535\n          minimum: 0\n          title: port\n          type: integer\n        priority:\n          description: |-\n            Optional value for servicing auxiliary connections with\n            different priorities.\n          maximum: 255\n          minimum: 0\n          title: priority\n          type: integer\n        source-interface:\n          description: |-\n            Optionally specify the source interface for the\n            controller connection.\n          title: source-interface\n          type: string\n          x-leafref: /oc-if:interfaces/oc-if:interface/oc-if:name\n        transport:\n          description: Controller transport protocol used.\n          title: transport\n          type: string\n      title: System_Openflow_Controllers_Controller_Connections_Connection_Config\n      type: object\n    System_Openflow_Controllers_Controller_Connections_Connection_List:\n      description: |-\n        List of connections to the OpenFlow controller.\n        The Openflow switch always connects to configured Openflow\n        controllers. Each controller can have more than one\n        connection, called auxiliary Openflow connections. (list)\n      items:\n        $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections_Connection'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - aux-id\n      x-list-multiple: true\n    System_Openflow_Controllers_Controller_Connections_Connection_State:\n      description: |-\n        Operational state data for OpenFlow controller\n        connections\n      properties:\n        address:\n          description: The IP address of the controller.\n          title: address\n          type: string\n        aux-id:\n          description: |-\n            Controller auxiliary ID. Must be 0 for the main controller.\n            One controller may have multiple auxiliary connections as\n            specified by the Openflow protocol. Besides configuring the\n            main controller, it is also possible to configure auxiliary\n            connections. The main controller must have the aux-id\n            set to zero. All others must have an aux-id different\n            from 0.\n          maximum: 15\n          minimum: 0\n          title: aux-id\n          type: integer\n        connected:\n          description: |-\n            When set to true, indicates the connection between the\n            switch and controller is established.\n          title: connected\n          type: boolean\n        port:\n          description: Controller port to use.\n          maximum: 65535\n          minimum: 0\n          title: port\n          type: integer\n        priority:\n          description: |-\n            Optional value for servicing auxiliary connections with\n            different priorities.\n          maximum: 255\n          minimum: 0\n          title: priority\n          type: integer\n        source-interface:\n          description: |-\n            Optionally specify the source interface for the\n            controller connection.\n          title: source-interface\n          type: string\n          x-leafref: /oc-if:interfaces/oc-if:interface/oc-if:name\n        transport:\n          description: Controller transport protocol used.\n          title: transport\n          type: string\n      title: System_Openflow_Controllers_Controller_Connections_Connection_State\n      type: object\n    System_Openflow_Controllers_Controller_List:\n      description: |-\n        The Openflow Switch connects to all Openflow controllers\n        configured (list)\n      items:\n        $ref: '#/components/schemas/System_Openflow_Controllers_Controller'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - name\n      x-list-multiple: true\n    System_Openflow_Controllers_Controller_State:\n      description: Container for the Openflow controller state.\n      properties:\n        name:\n          description: |-\n            Name of this Openflow controller. All connections\n            for the same controller need to have the same name.\n          title: name\n          type: string\n      title: System_Openflow_Controllers_Controller_State\n      type: object\n    System_Processes:\n      description: Parameters related to all monitored processes\n      properties:\n        process:\n          $ref: '#/components/schemas/System_Processes_Process_List'\n      title: System_Processes\n      type: object\n    System_Processes_Process:\n      description: List of monitored processes (single)\n      properties:\n        pid:\n          description: Reference to the process pid key\n          title: pid\n          type: string\n          x-go-type: ListKey\n          x-leafref: ../state/pid\n        state:\n          $ref: '#/components/schemas/System_Processes_Process_State'\n      required:\n      - pid\n      title: System_Processes_Process\n      type: object\n      x-list-multiple: true\n    System_Processes_Process_List:\n      description: List of monitored processes (list)\n      items:\n        $ref: '#/components/schemas/System_Processes_Process'\n      type: array\n      uniqueItems: true\n      x-keys:\n      - pid\n      x-list-multiple: true\n    System_Processes_Process_State:\n      description: State parameters related to monitored processes\n      properties:\n        cpu-usage-system:\n          description: CPU time consumed by this process in kernel mode.\n          format: int64\n          minimum: 0\n          title: cpu-usage-system\n          type: integer\n        cpu-usage-user:\n          description: CPU time consumed by this process in user mode.\n          format: int64\n          minimum: 0\n          title: cpu-usage-user\n          type: integer\n        cpu-utilization:\n          description: The percentage of CPU that is being used by the process.\n          maximum: 100\n          minimum: 0\n          title: cpu-utilization\n          type: integer\n        leaf-list-args:\n          items:\n            description: |-\n              Current process command line arguments.  Arguments with\n              a parameter (e.g., --option 10  or -option=10) should be\n              represented as a single element of the list with the\n              argument name and parameter together.  Flag arguments, i.e.,\n              those without a parameter should also be in their own list\n              element.\n            title: args\n            type: string\n          title: leaf-list-args\n          type: array\n        memory-usage:\n          description: Bytes allocated and still in use by the process\n          format: int64\n          minimum: 0\n          title: memory-usage\n          type: integer\n        memory-utilization:\n          description: The percentage of RAM that is being used by the process.\n          maximum: 100\n          minimum: 0\n          title: memory-utilization\n          type: integer\n        name:\n          description: The process name\n          title: name\n          type: string\n        pid:\n          description: The process pid\n          format: int64\n          minimum: 0\n          title: pid\n          type: integer\n        start-time:\n          description: |-\n            The time at which this process started,\n            reported as nanoseconds since the UNIX epoch.  The\n            system must be synchronized such that the start-time\n            can be reported accurately, otherwise it should not be\n            reported.\n          format: int64\n          minimum: 0\n          title: start-time\n          type: integer\n        uptime:\n          description: Amount of time elapsed since this process started.\n          format: int64\n          minimum: 0\n          title: uptime\n          type: integer\n      title: System_Processes_Process_State\n      type: object\n    System_Ssh-server:\n      description: Top-level container for ssh server\n      properties:\n        config:\n          $ref: '#/components/schemas/System_Ssh-server_Config'\n        state:\n          $ref: '#/components/schemas/System_Ssh-server_State'\n      title: System_Ssh-server\n      type: object\n    System_Ssh-server_Config:\n      description: Configuration data for the system ssh server\n      properties:\n        enable:\n          default: true\n          description: |-\n            Enables the ssh server.  The ssh server is enabled by\n            default.\n          title: enable\n          type: boolean\n        protocol-version:\n          description: Set the protocol version for SSH connections to the system\n          title: protocol-version\n          type: string\n        rate-limit:\n          description: |-\n            Set a limit on the number of connection attempts per\n            minute to the system for the protocol.\n          maximum: 65535\n          minimum: 0\n          title: rate-limit\n          type: integer\n        session-limit:\n          description: \"Set a limit on the number of simultaneous active terminal\\nsessions\n            to the system for the protocol (e.g., ssh,\\ntelnet, ...) \"\n          maximum: 65535\n          minimum: 0\n          title: session-limit\n          type: integer\n        timeout:\n          description: |-\n            Set the idle timeout in seconds on terminal connections to\n            the system for the protocol.\n          maximum: 65535\n          minimum: 0\n          title: timeout\n          type: integer\n      title: System_Ssh-server_Config\n      type: object\n    System_Ssh-server_State:\n      description: Operational state data for the system ssh server\n      properties:\n        enable:\n          default: true\n          description: |-\n            Enables the ssh server.  The ssh server is enabled by\n            default.\n          title: enable\n          type: boolean\n        protocol-version:\n          description: Set the protocol version for SSH connections to the system\n          title: protocol-version\n          type: string\n        rate-limit:\n          description: |-\n            Set a limit on the number of connection attempts per\n            minute to the system for the protocol.\n          maximum: 65535\n          minimum: 0\n          title: rate-limit\n          type: integer\n        session-limit:\n          description: \"Set a limit on the number of simultaneous active terminal\\nsessions\n            to the system for the protocol (e.g., ssh,\\ntelnet, ...) \"\n          maximum: 65535\n          minimum: 0\n          title: session-limit\n          type: integer\n        timeout:\n          description: |-\n            Set the idle timeout in seconds on terminal connections to\n            the system for the protocol.\n          maximum: 65535\n          minimum: 0\n          title: timeout\n          type: integer\n      title: System_Ssh-server_State\n      type: object\n    System_State:\n      description: Global operational state data for the system\n      properties:\n        boot-time:\n          description: |-\n            This timestamp indicates the time that the system was last\n            restarted.  The value is the timestamp in seconds relative\n            to the Unix Epoch (Jan 1, 1970 00:00:00 UTC).\n          format: int64\n          minimum: 0\n          title: boot-time\n          type: integer\n        current-datetime:\n          description: The current system date and time.\n          pattern: \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[\\+\\-]\\d{2}:\\d{2})\n          title: current-datetime\n          type: string\n        domain-name:\n          description: |-\n            Specifies the domain name used to form fully qualified name\n            for unqualified hostnames.\n          maxLength: 253\n          minLength: 1\n          pattern: ((([a-zA-Z0-9_]([a-zA-Z0-9\\-_]){0,61})?[a-zA-Z0-9]\\.)*([a-zA-Z0-9_]([a-zA-Z0-9\\-_]){0,61})?[a-zA-Z0-9]\\.?)|\\.\n          title: domain-name\n          type: string\n        hostname:\n          description: |-\n            The hostname of the device -- should be a single domain\n            label, without the domain.\n          maxLength: 253\n          minLength: 1\n          pattern: ((([a-zA-Z0-9_]([a-zA-Z0-9\\-_]){0,61})?[a-zA-Z0-9]\\.)*([a-zA-Z0-9_]([a-zA-Z0-9\\-_]){0,61})?[a-zA-Z0-9]\\.?)|\\.\n          title: hostname\n          type: string\n        login-banner:\n          description: |-\n            The console login message displayed before the login prompt,\n            i.e., before a user logs into the system.\n          title: login-banner\n          type: string\n        motd-banner:\n          description: |-\n            The console message displayed after a user logs into the\n            system.  They system may append additional standard\n            information such as the current system date and time, uptime,\n            last login timestamp, etc.\n          title: motd-banner\n          type: string\n      title: System_State\n      type: object\n    System_Telnet-server:\n      description: Top-level container for telnet terminal servers\n      properties:\n        config:\n          $ref: '#/components/schemas/System_Telnet-server_Config'\n        state:\n          $ref: '#/components/schemas/System_Telnet-server_State'\n      title: System_Telnet-server\n      type: object\n    System_Telnet-server_Config:\n      description: Configuration data for telnet\n      properties:\n        enable:\n          default: false\n          description: |-\n            Enables the telnet server.  Telnet is disabled by\n            default\n          title: enable\n          type: boolean\n        rate-limit:\n          description: |-\n            Set a limit on the number of connection attempts per\n            minute to the system for the protocol.\n          maximum: 65535\n          minimum: 0\n          title: rate-limit\n          type: integer\n        session-limit:\n          description: \"Set a limit on the number of simultaneous active terminal\\nsessions\n            to the system for the protocol (e.g., ssh,\\ntelnet, ...) \"\n          maximum: 65535\n          minimum: 0\n          title: session-limit\n          type: integer\n        timeout:\n          description: |-\n            Set the idle timeout in seconds on terminal connections to\n            the system for the protocol.\n          maximum: 65535\n          minimum: 0\n          title: timeout\n          type: integer\n      title: System_Telnet-server_Config\n      type: object\n    System_Telnet-server_State:\n      description: Operational state data for telnet\n      properties:\n        enable:\n          default: false\n          description: |-\n            Enables the telnet server.  Telnet is disabled by\n            default\n          title: enable\n          type: boolean\n        rate-limit:\n          description: |-\n            Set a limit on the number of connection attempts per\n            minute to the system for the protocol.\n          maximum: 65535\n          minimum: 0\n          title: rate-limit\n          type: integer\n        session-limit:\n          description: \"Set a limit on the number of simultaneous active terminal\\nsessions\n            to the system for the protocol (e.g., ssh,\\ntelnet, ...) \"\n          maximum: 65535\n          minimum: 0\n          title: session-limit\n          type: integer\n        timeout:\n          description: |-\n            Set the idle timeout in seconds on terminal connections to\n            the system for the protocol.\n          maximum: 65535\n          minimum: 0\n          title: timeout\n          type: integer\n      title: System_Telnet-server_State\n      type: object\ninfo:\n  contact:\n    email: info@opennetworking.org\n    name: Open Networking Foundation\n    url: https://opennetworking.org\n  description: OpenAPI 3 specification is generated from devicesim onos-config model\n    plugin\n  license:\n    name: Apache-2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0\n  title: devicesim-1.0.0\n  version: 1.0.0\nopenapi: 3.0.0\npaths:\n  /devicesim/v1.0.0/{target}/components:\n    delete:\n      operationId: deleteComponents\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /components\n    description: Enclosing container for the components in the system.\n    get:\n      operationId: getComponents\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Components'\n          description: GET OK 200\n      summary: GET /components Container\n      tags:\n      - \"\"\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postComponents\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Components'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /components\n  /devicesim/v1.0.0/{target}/components/component:\n    description: List of components, keyed by component name.\n    get:\n      operationId: getComponents_Component_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Components_Component_List'\n          description: GET OK 200\n      summary: GET /components/component List\n      tags:\n      - Components_Component\n      - List\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/components/component/{name}:\n    delete:\n      operationId: deleteComponents_Component\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /components/component\n    description: List of components, keyed by component name.\n    get:\n      operationId: getComponents_Component\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Components_Component'\n          description: GET OK 200\n      summary: GET /components/component Container\n      tags:\n      - Components_Component\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    post:\n      operationId: postComponents_Component\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Components_Component'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /components/component\n  /devicesim/v1.0.0/{target}/components/component/{name}/config:\n    delete:\n      operationId: deleteComponents_Component_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /components/component/{name}/config\n    description: Configuration data for each component\n    get:\n      operationId: getComponents_Component_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Components_Component_Config'\n          description: GET OK 200\n      summary: GET /components/component/{name}/config Container\n      tags:\n      - Components_Component\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    post:\n      operationId: postComponents_Component_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Components_Component_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /components/component/{name}/config\n  /devicesim/v1.0.0/{target}/components/component/{name}/properties:\n    delete:\n      operationId: deleteComponents_Component_Properties\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /components/component/{name}/properties\n    description: 'Enclosing container '\n    get:\n      operationId: getComponents_Component_Properties\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Components_Component_Properties'\n          description: GET OK 200\n      summary: GET /components/component/{name}/properties Container\n      tags:\n      - Components_Component\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    post:\n      operationId: postComponents_Component_Properties\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Components_Component_Properties'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /components/component/{name}/properties\n  /devicesim/v1.0.0/{target}/components/component/{name}/properties/property:\n    description: List of system properties for the component\n    get:\n      operationId: getComponents_Component_Properties_Property_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Components_Component_Properties_Property_List'\n          description: GET OK 200\n      summary: GET /components/component/{name}/properties/property List\n      tags:\n      - Components_Component_Properties_Property\n      - List\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n  /devicesim/v1.0.0/{target}/components/component/{name}/properties/property/{name}:\n    delete:\n      operationId: deleteComponents_Component_Properties_Property\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /components/component/{name}/properties/property\n    description: List of system properties for the component\n    get:\n      operationId: getComponents_Component_Properties_Property\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Components_Component_Properties_Property'\n          description: GET OK 200\n      summary: GET /components/component/{name}/properties/property Container\n      tags:\n      - Components_Component_Properties_Property\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name_1}\n      in: path\n      name: name_1\n      required: true\n    post:\n      operationId: postComponents_Component_Properties_Property\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Components_Component_Properties_Property'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /components/component/{name}/properties/property\n  /devicesim/v1.0.0/{target}/components/component/{name}/properties/property/{name}/config:\n    delete:\n      operationId: deleteComponents_Component_Properties_Property_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /components/component/{name}/properties/property/{name}/config\n    description: Configuration data for each property\n    get:\n      operationId: getComponents_Component_Properties_Property_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Components_Component_Properties_Property_Config'\n          description: GET OK 200\n      summary: GET /components/component/{name}/properties/property/{name}/config\n        Container\n      tags:\n      - Components_Component_Properties_Property\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name_1}\n      in: path\n      name: name_1\n      required: true\n    post:\n      operationId: postComponents_Component_Properties_Property_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Components_Component_Properties_Property_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /components/component/{name}/properties/property/{name}/config\n  /devicesim/v1.0.0/{target}/components/component/{name}/properties/property/{name}/state:\n    description: Operational state data for each property\n    get:\n      operationId: getComponents_Component_Properties_Property_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Components_Component_Properties_Property_State'\n          description: GET OK 200\n      summary: GET /components/component/{name}/properties/property/{name}/state Container\n      tags:\n      - Components_Component_Properties_Property\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name_1}\n      in: path\n      name: name_1\n      required: true\n  /devicesim/v1.0.0/{target}/components/component/{name}/state:\n    description: Operational state data for each component\n    get:\n      operationId: getComponents_Component_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Components_Component_State'\n          description: GET OK 200\n      summary: GET /components/component/{name}/state Container\n      tags:\n      - Components_Component\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n  /devicesim/v1.0.0/{target}/components/component/{name}/state/temperature:\n    description: |-\n      Temperature in degrees Celsius of the component. Values include\n      the instantaneous, average, minimum, and maximum statistics. If\n      avg/min/max statistics are not supported, the target is expected\n      to just supply the instant value\n    get:\n      operationId: getComponents_Component_State_Temperature\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Components_Component_State_Temperature'\n          description: GET OK 200\n      summary: GET /components/component/{name}/state/temperature Container\n      tags:\n      - Components_Component_State\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n  /devicesim/v1.0.0/{target}/components/component/{name}/subcomponents:\n    delete:\n      operationId: deleteComponents_Component_Subcomponents\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /components/component/{name}/subcomponents\n    description: Enclosing container for subcomponent references\n    get:\n      operationId: getComponents_Component_Subcomponents\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Components_Component_Subcomponents'\n          description: GET OK 200\n      summary: GET /components/component/{name}/subcomponents Container\n      tags:\n      - Components_Component\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    post:\n      operationId: postComponents_Component_Subcomponents\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Components_Component_Subcomponents'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /components/component/{name}/subcomponents\n  /devicesim/v1.0.0/{target}/components/component/{name}/subcomponents/subcomponent:\n    description: List of subcomponent references\n    get:\n      operationId: getComponents_Component_Subcomponents_Subcomponent_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Components_Component_Subcomponents_Subcomponent_List'\n          description: GET OK 200\n      summary: GET /components/component/{name}/subcomponents/subcomponent List\n      tags:\n      - Components_Component_Subcomponents_Subcomponent\n      - List\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n  /devicesim/v1.0.0/{target}/components/component/{name}/subcomponents/subcomponent/{name}:\n    delete:\n      operationId: deleteComponents_Component_Subcomponents_Subcomponent\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /components/component/{name}/subcomponents/subcomponent\n    description: List of subcomponent references\n    get:\n      operationId: getComponents_Component_Subcomponents_Subcomponent\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Components_Component_Subcomponents_Subcomponent'\n          description: GET OK 200\n      summary: GET /components/component/{name}/subcomponents/subcomponent Container\n      tags:\n      - Components_Component_Subcomponents_Subcomponent\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name_1}\n      in: path\n      name: name_1\n      required: true\n    post:\n      operationId: postComponents_Component_Subcomponents_Subcomponent\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Components_Component_Subcomponents_Subcomponent'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /components/component/{name}/subcomponents/subcomponent\n  /devicesim/v1.0.0/{target}/components/component/{name}/subcomponents/subcomponent/{name}/config:\n    delete:\n      operationId: deleteComponents_Component_Subcomponents_Subcomponent_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /components/component/{name}/subcomponents/subcomponent/{name}/config\n    description: 'Configuration data '\n    get:\n      operationId: getComponents_Component_Subcomponents_Subcomponent_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Components_Component_Subcomponents_Subcomponent_Config'\n          description: GET OK 200\n      summary: GET /components/component/{name}/subcomponents/subcomponent/{name}/config\n        Container\n      tags:\n      - Components_Component_Subcomponents_Subcomponent\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name_1}\n      in: path\n      name: name_1\n      required: true\n    post:\n      operationId: postComponents_Component_Subcomponents_Subcomponent_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Components_Component_Subcomponents_Subcomponent_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /components/component/{name}/subcomponents/subcomponent/{name}/config\n  /devicesim/v1.0.0/{target}/components/component/{name}/subcomponents/subcomponent/{name}/state:\n    description: 'Operational state data '\n    get:\n      operationId: getComponents_Component_Subcomponents_Subcomponent_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Components_Component_Subcomponents_Subcomponent_State'\n          description: GET OK 200\n      summary: GET /components/component/{name}/subcomponents/subcomponent/{name}/state\n        Container\n      tags:\n      - Components_Component_Subcomponents_Subcomponent\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name_1}\n      in: path\n      name: name_1\n      required: true\n  /devicesim/v1.0.0/{target}/interfaces:\n    delete:\n      operationId: deleteInterfaces\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /interfaces\n    description: |-\n      Top level container for interfaces, including configuration\n      and state data.\n    get:\n      operationId: getInterfaces\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Interfaces'\n          description: GET OK 200\n      summary: GET /interfaces Container\n      tags:\n      - \"\"\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postInterfaces\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Interfaces'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /interfaces\n  /devicesim/v1.0.0/{target}/interfaces/interface:\n    description: The list of named interfaces on the device.\n    get:\n      operationId: getInterfaces_Interface_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Interfaces_Interface_List'\n          description: GET OK 200\n      summary: GET /interfaces/interface List\n      tags:\n      - Interfaces_Interface\n      - List\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/interfaces/interface/{name}:\n    delete:\n      operationId: deleteInterfaces_Interface\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /interfaces/interface\n    description: The list of named interfaces on the device.\n    get:\n      operationId: getInterfaces_Interface\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Interfaces_Interface'\n          description: GET OK 200\n      summary: GET /interfaces/interface Container\n      tags:\n      - Interfaces_Interface\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    post:\n      operationId: postInterfaces_Interface\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Interfaces_Interface'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /interfaces/interface\n  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/config:\n    delete:\n      operationId: deleteInterfaces_Interface_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /interfaces/interface/{name}/config\n    description: |-\n      Configurable items at the global, physical interface\n      level\n    get:\n      operationId: getInterfaces_Interface_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Interfaces_Interface_Config'\n          description: GET OK 200\n      summary: GET /interfaces/interface/{name}/config Container\n      tags:\n      - Interfaces_Interface\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    post:\n      operationId: postInterfaces_Interface_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Interfaces_Interface_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /interfaces/interface/{name}/config\n  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/hold-time:\n    delete:\n      operationId: deleteInterfaces_Interface_Hold-time\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /interfaces/interface/{name}/hold-time\n    description: |-\n      Top-level container for hold-time settings to enable\n      dampening advertisements of interface transitions.\n    get:\n      operationId: getInterfaces_Interface_Hold-time\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Interfaces_Interface_Hold-time'\n          description: GET OK 200\n      summary: GET /interfaces/interface/{name}/hold-time Container\n      tags:\n      - Interfaces_Interface\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    post:\n      operationId: postInterfaces_Interface_Hold-time\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Interfaces_Interface_Hold-time'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /interfaces/interface/{name}/hold-time\n  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/hold-time/config:\n    delete:\n      operationId: deleteInterfaces_Interface_Hold-time_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /interfaces/interface/{name}/hold-time/config\n    description: Configuration data for interface hold-time settings.\n    get:\n      operationId: getInterfaces_Interface_Hold-time_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Interfaces_Interface_Hold-time_Config'\n          description: GET OK 200\n      summary: GET /interfaces/interface/{name}/hold-time/config Container\n      tags:\n      - Interfaces_Interface_Hold-time\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    post:\n      operationId: postInterfaces_Interface_Hold-time_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Interfaces_Interface_Hold-time_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /interfaces/interface/{name}/hold-time/config\n  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/hold-time/state:\n    description: Operational state data for interface hold-time.\n    get:\n      operationId: getInterfaces_Interface_Hold-time_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Interfaces_Interface_Hold-time_State'\n          description: GET OK 200\n      summary: GET /interfaces/interface/{name}/hold-time/state Container\n      tags:\n      - Interfaces_Interface_Hold-time\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/state:\n    description: Operational state data at the global interface level\n    get:\n      operationId: getInterfaces_Interface_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Interfaces_Interface_State'\n          description: GET OK 200\n      summary: GET /interfaces/interface/{name}/state Container\n      tags:\n      - Interfaces_Interface\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/state/counters:\n    description: A collection of interface-related statistics objects.\n    get:\n      operationId: getInterfaces_Interface_State_Counters\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Interfaces_Interface_State_Counters'\n          description: GET OK 200\n      summary: GET /interfaces/interface/{name}/state/counters Container\n      tags:\n      - Interfaces_Interface_State\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/subinterfaces:\n    delete:\n      operationId: deleteInterfaces_Interface_Subinterfaces\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /interfaces/interface/{name}/subinterfaces\n    description: |-\n      Enclosing container for the list of subinterfaces associated\n      with a physical interface\n    get:\n      operationId: getInterfaces_Interface_Subinterfaces\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces'\n          description: GET OK 200\n      summary: GET /interfaces/interface/{name}/subinterfaces Container\n      tags:\n      - Interfaces_Interface\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    post:\n      operationId: postInterfaces_Interface_Subinterfaces\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Interfaces_Interface_Subinterfaces'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /interfaces/interface/{name}/subinterfaces\n  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/subinterfaces/subinterface:\n    description: |-\n      The list of subinterfaces (logical interfaces) associated\n      with a physical interface\n    get:\n      operationId: getInterfaces_Interface_Subinterfaces_Subinterface_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface_List'\n          description: GET OK 200\n      summary: GET /interfaces/interface/{name}/subinterfaces/subinterface List\n      tags:\n      - Interfaces_Interface_Subinterfaces_Subinterface\n      - List\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/subinterfaces/subinterface/{index}:\n    delete:\n      operationId: deleteInterfaces_Interface_Subinterfaces_Subinterface\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /interfaces/interface/{name}/subinterfaces/subinterface\n    description: |-\n      The list of subinterfaces (logical interfaces) associated\n      with a physical interface\n    get:\n      operationId: getInterfaces_Interface_Subinterfaces_Subinterface\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface'\n          description: GET OK 200\n      summary: GET /interfaces/interface/{name}/subinterfaces/subinterface Container\n      tags:\n      - Interfaces_Interface_Subinterfaces_Subinterface\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {index}\n      in: path\n      name: index\n      required: true\n    post:\n      operationId: postInterfaces_Interface_Subinterfaces_Subinterface\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Interfaces_Interface_Subinterfaces_Subinterface'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /interfaces/interface/{name}/subinterfaces/subinterface\n  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/subinterfaces/subinterface/{index}/config:\n    delete:\n      operationId: deleteInterfaces_Interface_Subinterfaces_Subinterface_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /interfaces/interface/{name}/subinterfaces/subinterface/{index}/config\n    description: Configurable items at the subinterface level\n    get:\n      operationId: getInterfaces_Interface_Subinterfaces_Subinterface_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface_Config'\n          description: GET OK 200\n      summary: GET /interfaces/interface/{name}/subinterfaces/subinterface/{index}/config\n        Container\n      tags:\n      - Interfaces_Interface_Subinterfaces_Subinterface\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {index}\n      in: path\n      name: index\n      required: true\n    post:\n      operationId: postInterfaces_Interface_Subinterfaces_Subinterface_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_Interfaces_Interface_Subinterfaces_Subinterface_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /interfaces/interface/{name}/subinterfaces/subinterface/{index}/config\n  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/subinterfaces/subinterface/{index}/state:\n    description: Operational state data for logical interfaces\n    get:\n      operationId: getInterfaces_Interface_Subinterfaces_Subinterface_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface_State'\n          description: GET OK 200\n      summary: GET /interfaces/interface/{name}/subinterfaces/subinterface/{index}/state\n        Container\n      tags:\n      - Interfaces_Interface_Subinterfaces_Subinterface\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {index}\n      in: path\n      name: index\n      required: true\n  /devicesim/v1.0.0/{target}/interfaces/interface/{name}/subinterfaces/subinterface/{index}/state/counters:\n    description: A collection of interface-related statistics objects.\n    get:\n      operationId: getInterfaces_Interface_Subinterfaces_Subinterface_State_Counters\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Interfaces_Interface_Subinterfaces_Subinterface_State_Counters'\n          description: GET OK 200\n      summary: GET /interfaces/interface/{name}/subinterfaces/subinterface/{index}/state/counters\n        Container\n      tags:\n      - Interfaces_Interface_Subinterfaces_Subinterface_State\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {index}\n      in: path\n      name: index\n      required: true\n  /devicesim/v1.0.0/{target}/system:\n    delete:\n      operationId: deleteSystem\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system\n    description: |-\n      Enclosing container for system-related configuration and\n      operational state data\n    get:\n      operationId: getSystem\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System'\n          description: GET OK 200\n      summary: GET /system Container\n      tags:\n      - \"\"\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system\n  /devicesim/v1.0.0/{target}/system/aaa:\n    delete:\n      operationId: deleteSystem_Aaa\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa\n    description: Top-level container for AAA services\n    get:\n      operationId: getSystem_Aaa\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa'\n          description: GET OK 200\n      summary: GET /system/aaa Container\n      tags:\n      - System\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Aaa\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa\n  /devicesim/v1.0.0/{target}/system/aaa/accounting:\n    delete:\n      operationId: deleteSystem_Aaa_Accounting\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/accounting\n    description: Top-level container for AAA accounting\n    get:\n      operationId: getSystem_Aaa_Accounting\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Accounting'\n          description: GET OK 200\n      summary: GET /system/aaa/accounting Container\n      tags:\n      - System_Aaa\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Aaa_Accounting\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Accounting'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/accounting\n  /devicesim/v1.0.0/{target}/system/aaa/accounting/config:\n    delete:\n      operationId: deleteSystem_Aaa_Accounting_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/accounting/config\n    description: Configuration data for user activity accounting.\n    get:\n      operationId: getSystem_Aaa_Accounting_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Accounting_Config'\n          description: GET OK 200\n      summary: GET /system/aaa/accounting/config Container\n      tags:\n      - System_Aaa_Accounting\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Aaa_Accounting_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Accounting_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/accounting/config\n  /devicesim/v1.0.0/{target}/system/aaa/accounting/events:\n    delete:\n      operationId: deleteSystem_Aaa_Accounting_Events\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/accounting/events\n    description: |-\n      Enclosing container for defining handling of events\n      for accounting\n    get:\n      operationId: getSystem_Aaa_Accounting_Events\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Accounting_Events'\n          description: GET OK 200\n      summary: GET /system/aaa/accounting/events Container\n      tags:\n      - System_Aaa_Accounting\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Aaa_Accounting_Events\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Accounting_Events'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/accounting/events\n  /devicesim/v1.0.0/{target}/system/aaa/accounting/events/event:\n    description: List of events subject to accounting\n    get:\n      operationId: getSystem_Aaa_Accounting_Events_Event_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Accounting_Events_Event_List'\n          description: GET OK 200\n      summary: GET /system/aaa/accounting/events/event List\n      tags:\n      - System_Aaa_Accounting_Events_Event\n      - List\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/aaa/accounting/events/event/{event-type}:\n    delete:\n      operationId: deleteSystem_Aaa_Accounting_Events_Event\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/accounting/events/event\n    description: List of events subject to accounting\n    get:\n      operationId: getSystem_Aaa_Accounting_Events_Event\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Accounting_Events_Event'\n          description: GET OK 200\n      summary: GET /system/aaa/accounting/events/event Container\n      tags:\n      - System_Aaa_Accounting_Events_Event\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {event-type}\n      in: path\n      name: event-type\n      required: true\n    post:\n      operationId: postSystem_Aaa_Accounting_Events_Event\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Accounting_Events_Event'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/accounting/events/event\n  /devicesim/v1.0.0/{target}/system/aaa/accounting/events/event/{event-type}/config:\n    delete:\n      operationId: deleteSystem_Aaa_Accounting_Events_Event_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/accounting/events/event/{event-type}/config\n    description: Configuration data for accounting events\n    get:\n      operationId: getSystem_Aaa_Accounting_Events_Event_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Accounting_Events_Event_Config'\n          description: GET OK 200\n      summary: GET /system/aaa/accounting/events/event/{event-type}/config Container\n      tags:\n      - System_Aaa_Accounting_Events_Event\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {event-type}\n      in: path\n      name: event-type\n      required: true\n    post:\n      operationId: postSystem_Aaa_Accounting_Events_Event_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Accounting_Events_Event_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/accounting/events/event/{event-type}/config\n  /devicesim/v1.0.0/{target}/system/aaa/accounting/events/event/{event-type}/state:\n    description: Operational state data for accounting events\n    get:\n      operationId: getSystem_Aaa_Accounting_Events_Event_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Accounting_Events_Event_State'\n          description: GET OK 200\n      summary: GET /system/aaa/accounting/events/event/{event-type}/state Container\n      tags:\n      - System_Aaa_Accounting_Events_Event\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {event-type}\n      in: path\n      name: event-type\n      required: true\n  /devicesim/v1.0.0/{target}/system/aaa/accounting/state:\n    description: Operational state data for user accounting.\n    get:\n      operationId: getSystem_Aaa_Accounting_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Accounting_State'\n          description: GET OK 200\n      summary: GET /system/aaa/accounting/state Container\n      tags:\n      - System_Aaa_Accounting\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/aaa/authentication:\n    delete:\n      operationId: deleteSystem_Aaa_Authentication\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/authentication\n    description: Top-level container for global authentication data\n    get:\n      operationId: getSystem_Aaa_Authentication\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Authentication'\n          description: GET OK 200\n      summary: GET /system/aaa/authentication Container\n      tags:\n      - System_Aaa\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Aaa_Authentication\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authentication'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/authentication\n  /devicesim/v1.0.0/{target}/system/aaa/authentication/admin-user:\n    delete:\n      operationId: deleteSystem_Aaa_Authentication_Admin-user\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/authentication/admin-user\n    description: |-\n      Top-level container for the system root or admin user\n      configuration and operational state\n    get:\n      operationId: getSystem_Aaa_Authentication_Admin-user\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Authentication_Admin-user'\n          description: GET OK 200\n      summary: GET /system/aaa/authentication/admin-user Container\n      tags:\n      - System_Aaa_Authentication\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Aaa_Authentication_Admin-user\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authentication_Admin-user'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/authentication/admin-user\n  /devicesim/v1.0.0/{target}/system/aaa/authentication/admin-user/config:\n    delete:\n      operationId: deleteSystem_Aaa_Authentication_Admin-user_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/authentication/admin-user/config\n    description: Configuration data for the root user account\n    get:\n      operationId: getSystem_Aaa_Authentication_Admin-user_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Authentication_Admin-user_Config'\n          description: GET OK 200\n      summary: GET /system/aaa/authentication/admin-user/config Container\n      tags:\n      - System_Aaa_Authentication_Admin-user\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Aaa_Authentication_Admin-user_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authentication_Admin-user_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/authentication/admin-user/config\n  /devicesim/v1.0.0/{target}/system/aaa/authentication/admin-user/state:\n    description: Operational state data for the root user account\n    get:\n      operationId: getSystem_Aaa_Authentication_Admin-user_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Authentication_Admin-user_State'\n          description: GET OK 200\n      summary: GET /system/aaa/authentication/admin-user/state Container\n      tags:\n      - System_Aaa_Authentication_Admin-user\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/aaa/authentication/config:\n    delete:\n      operationId: deleteSystem_Aaa_Authentication_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/authentication/config\n    description: Configuration data for global authentication services\n    get:\n      operationId: getSystem_Aaa_Authentication_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Authentication_Config'\n          description: GET OK 200\n      summary: GET /system/aaa/authentication/config Container\n      tags:\n      - System_Aaa_Authentication\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Aaa_Authentication_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authentication_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/authentication/config\n  /devicesim/v1.0.0/{target}/system/aaa/authentication/state:\n    description: |-\n      Operational state data for global authentication\n      services\n    get:\n      operationId: getSystem_Aaa_Authentication_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Authentication_State'\n          description: GET OK 200\n      summary: GET /system/aaa/authentication/state Container\n      tags:\n      - System_Aaa_Authentication\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/aaa/authentication/users:\n    delete:\n      operationId: deleteSystem_Aaa_Authentication_Users\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/authentication/users\n    description: Enclosing container list of local users\n    get:\n      operationId: getSystem_Aaa_Authentication_Users\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Authentication_Users'\n          description: GET OK 200\n      summary: GET /system/aaa/authentication/users Container\n      tags:\n      - System_Aaa_Authentication\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Aaa_Authentication_Users\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authentication_Users'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/authentication/users\n  /devicesim/v1.0.0/{target}/system/aaa/authentication/users/user:\n    description: List of local users on the system\n    get:\n      operationId: getSystem_Aaa_Authentication_Users_User_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Authentication_Users_User_List'\n          description: GET OK 200\n      summary: GET /system/aaa/authentication/users/user List\n      tags:\n      - System_Aaa_Authentication_Users_User\n      - List\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/aaa/authentication/users/user/{username}:\n    delete:\n      operationId: deleteSystem_Aaa_Authentication_Users_User\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/authentication/users/user\n    description: List of local users on the system\n    get:\n      operationId: getSystem_Aaa_Authentication_Users_User\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Authentication_Users_User'\n          description: GET OK 200\n      summary: GET /system/aaa/authentication/users/user Container\n      tags:\n      - System_Aaa_Authentication_Users_User\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {username}\n      in: path\n      name: username\n      required: true\n    post:\n      operationId: postSystem_Aaa_Authentication_Users_User\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authentication_Users_User'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/authentication/users/user\n  /devicesim/v1.0.0/{target}/system/aaa/authentication/users/user/{username}/config:\n    delete:\n      operationId: deleteSystem_Aaa_Authentication_Users_User_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/authentication/users/user/{username}/config\n    description: Configuration data for local users\n    get:\n      operationId: getSystem_Aaa_Authentication_Users_User_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Authentication_Users_User_Config'\n          description: GET OK 200\n      summary: GET /system/aaa/authentication/users/user/{username}/config Container\n      tags:\n      - System_Aaa_Authentication_Users_User\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {username}\n      in: path\n      name: username\n      required: true\n    post:\n      operationId: postSystem_Aaa_Authentication_Users_User_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authentication_Users_User_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/authentication/users/user/{username}/config\n  /devicesim/v1.0.0/{target}/system/aaa/authentication/users/user/{username}/state:\n    description: Operational state data for local users\n    get:\n      operationId: getSystem_Aaa_Authentication_Users_User_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Authentication_Users_User_State'\n          description: GET OK 200\n      summary: GET /system/aaa/authentication/users/user/{username}/state Container\n      tags:\n      - System_Aaa_Authentication_Users_User\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {username}\n      in: path\n      name: username\n      required: true\n  /devicesim/v1.0.0/{target}/system/aaa/authorization:\n    delete:\n      operationId: deleteSystem_Aaa_Authorization\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/authorization\n    description: |-\n      Top-level container for AAA authorization configuration\n      and operational state data\n    get:\n      operationId: getSystem_Aaa_Authorization\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Authorization'\n          description: GET OK 200\n      summary: GET /system/aaa/authorization Container\n      tags:\n      - System_Aaa\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Aaa_Authorization\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authorization'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/authorization\n  /devicesim/v1.0.0/{target}/system/aaa/authorization/config:\n    delete:\n      operationId: deleteSystem_Aaa_Authorization_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/authorization/config\n    description: |-\n      Configuration data for authorization based on AAA\n      methods\n    get:\n      operationId: getSystem_Aaa_Authorization_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Authorization_Config'\n          description: GET OK 200\n      summary: GET /system/aaa/authorization/config Container\n      tags:\n      - System_Aaa_Authorization\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Aaa_Authorization_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authorization_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/authorization/config\n  /devicesim/v1.0.0/{target}/system/aaa/authorization/events:\n    delete:\n      operationId: deleteSystem_Aaa_Authorization_Events\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/authorization/events\n    description: |-\n      Enclosing container for the set of events subject\n      to authorization\n    get:\n      operationId: getSystem_Aaa_Authorization_Events\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Authorization_Events'\n          description: GET OK 200\n      summary: GET /system/aaa/authorization/events Container\n      tags:\n      - System_Aaa_Authorization\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Aaa_Authorization_Events\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authorization_Events'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/authorization/events\n  /devicesim/v1.0.0/{target}/system/aaa/authorization/events/event:\n    description: List of events subject to AAA authorization\n    get:\n      operationId: getSystem_Aaa_Authorization_Events_Event_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Authorization_Events_Event_List'\n          description: GET OK 200\n      summary: GET /system/aaa/authorization/events/event List\n      tags:\n      - System_Aaa_Authorization_Events_Event\n      - List\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/aaa/authorization/events/event/{event-type}:\n    delete:\n      operationId: deleteSystem_Aaa_Authorization_Events_Event\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/authorization/events/event\n    description: List of events subject to AAA authorization\n    get:\n      operationId: getSystem_Aaa_Authorization_Events_Event\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Authorization_Events_Event'\n          description: GET OK 200\n      summary: GET /system/aaa/authorization/events/event Container\n      tags:\n      - System_Aaa_Authorization_Events_Event\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {event-type}\n      in: path\n      name: event-type\n      required: true\n    post:\n      operationId: postSystem_Aaa_Authorization_Events_Event\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authorization_Events_Event'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/authorization/events/event\n  /devicesim/v1.0.0/{target}/system/aaa/authorization/events/event/{event-type}/config:\n    delete:\n      operationId: deleteSystem_Aaa_Authorization_Events_Event_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/authorization/events/event/{event-type}/config\n    description: Configuration data for each authorized event\n    get:\n      operationId: getSystem_Aaa_Authorization_Events_Event_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Authorization_Events_Event_Config'\n          description: GET OK 200\n      summary: GET /system/aaa/authorization/events/event/{event-type}/config Container\n      tags:\n      - System_Aaa_Authorization_Events_Event\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {event-type}\n      in: path\n      name: event-type\n      required: true\n    post:\n      operationId: postSystem_Aaa_Authorization_Events_Event_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Authorization_Events_Event_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/authorization/events/event/{event-type}/config\n  /devicesim/v1.0.0/{target}/system/aaa/authorization/events/event/{event-type}/state:\n    description: Operational state data for each authorized activity\n    get:\n      operationId: getSystem_Aaa_Authorization_Events_Event_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Authorization_Events_Event_State'\n          description: GET OK 200\n      summary: GET /system/aaa/authorization/events/event/{event-type}/state Container\n      tags:\n      - System_Aaa_Authorization_Events_Event\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {event-type}\n      in: path\n      name: event-type\n      required: true\n  /devicesim/v1.0.0/{target}/system/aaa/authorization/state:\n    description: Operational state data for authorization based on AAA\n    get:\n      operationId: getSystem_Aaa_Authorization_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Authorization_State'\n          description: GET OK 200\n      summary: GET /system/aaa/authorization/state Container\n      tags:\n      - System_Aaa_Authorization\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/aaa/config:\n    delete:\n      operationId: deleteSystem_Aaa_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/config\n    description: Configuration data for top level AAA services\n    get:\n      operationId: getSystem_Aaa_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Config'\n          description: GET OK 200\n      summary: GET /system/aaa/config Container\n      tags:\n      - System_Aaa\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Aaa_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/config\n  /devicesim/v1.0.0/{target}/system/aaa/server-groups:\n    delete:\n      operationId: deleteSystem_Aaa_Server-groups\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/server-groups\n    description: Enclosing container for AAA server groups\n    get:\n      operationId: getSystem_Aaa_Server-groups\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Server-groups'\n          description: GET OK 200\n      summary: GET /system/aaa/server-groups Container\n      tags:\n      - System_Aaa\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Aaa_Server-groups\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Server-groups'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/server-groups\n  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group:\n    description: |-\n      List of AAA server groups.  All servers in a group\n      must have the same type as indicated by the server\n      type.\n    get:\n      operationId: getSystem_Aaa_Server-groups_Server-group_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_List'\n          description: GET OK 200\n      summary: GET /system/aaa/server-groups/server-group List\n      tags:\n      - System_Aaa_Server-groups_Server-group\n      - List\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}:\n    delete:\n      operationId: deleteSystem_Aaa_Server-groups_Server-group\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/server-groups/server-group\n    description: |-\n      List of AAA server groups.  All servers in a group\n      must have the same type as indicated by the server\n      type.\n    get:\n      operationId: getSystem_Aaa_Server-groups_Server-group\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group'\n          description: GET OK 200\n      summary: GET /system/aaa/server-groups/server-group Container\n      tags:\n      - System_Aaa_Server-groups_Server-group\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    post:\n      operationId: postSystem_Aaa_Server-groups_Server-group\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Server-groups_Server-group'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/server-groups/server-group\n  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/config:\n    delete:\n      operationId: deleteSystem_Aaa_Server-groups_Server-group_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/server-groups/server-group/{name}/config\n    description: Configuration data for each server group\n    get:\n      operationId: getSystem_Aaa_Server-groups_Server-group_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Config'\n          description: GET OK 200\n      summary: GET /system/aaa/server-groups/server-group/{name}/config Container\n      tags:\n      - System_Aaa_Server-groups_Server-group\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    post:\n      operationId: postSystem_Aaa_Server-groups_Server-group_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Server-groups_Server-group_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/server-groups/server-group/{name}/config\n  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers:\n    delete:\n      operationId: deleteSystem_Aaa_Server-groups_Server-group_Servers\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/server-groups/server-group/{name}/servers\n    description: Enclosing container the list of servers\n    get:\n      operationId: getSystem_Aaa_Server-groups_Server-group_Servers\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers'\n          description: GET OK 200\n      summary: GET /system/aaa/server-groups/server-group/{name}/servers Container\n      tags:\n      - System_Aaa_Server-groups_Server-group\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    post:\n      operationId: postSystem_Aaa_Server-groups_Server-group_Servers\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Server-groups_Server-group_Servers'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/server-groups/server-group/{name}/servers\n  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers/server:\n    description: List of AAA servers\n    get:\n      operationId: getSystem_Aaa_Server-groups_Server-group_Servers_Server_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_List'\n          description: GET OK 200\n      summary: GET /system/aaa/server-groups/server-group/{name}/servers/server List\n      tags:\n      - System_Aaa_Server-groups_Server-group_Servers_Server\n      - List\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers/server/{address}:\n    delete:\n      operationId: deleteSystem_Aaa_Server-groups_Server-group_Servers_Server\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/server-groups/server-group/{name}/servers/server\n    description: List of AAA servers\n    get:\n      operationId: getSystem_Aaa_Server-groups_Server-group_Servers_Server\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server'\n          description: GET OK 200\n      summary: GET /system/aaa/server-groups/server-group/{name}/servers/server Container\n      tags:\n      - System_Aaa_Server-groups_Server-group_Servers_Server\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {address}\n      in: path\n      name: address\n      required: true\n    post:\n      operationId: postSystem_Aaa_Server-groups_Server-group_Servers_Server\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/server-groups/server-group/{name}/servers/server\n  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers/server/{address}/config:\n    delete:\n      operationId: deleteSystem_Aaa_Server-groups_Server-group_Servers_Server_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/server-groups/server-group/{name}/servers/server/{address}/config\n    description: 'Configuration data '\n    get:\n      operationId: getSystem_Aaa_Server-groups_Server-group_Servers_Server_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Config'\n          description: GET OK 200\n      summary: GET /system/aaa/server-groups/server-group/{name}/servers/server/{address}/config\n        Container\n      tags:\n      - System_Aaa_Server-groups_Server-group_Servers_Server\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {address}\n      in: path\n      name: address\n      required: true\n    post:\n      operationId: postSystem_Aaa_Server-groups_Server-group_Servers_Server_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/server-groups/server-group/{name}/servers/server/{address}/config\n  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius:\n    delete:\n      operationId: deleteSystem_Aaa_Server-groups_Server-group_Servers_Server_Radius\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius\n    description: Top-level container for RADIUS server data\n    get:\n      operationId: getSystem_Aaa_Server-groups_Server-group_Servers_Server_Radius\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius'\n          description: GET OK 200\n      summary: GET /system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius\n        Container\n      tags:\n      - System_Aaa_Server-groups_Server-group_Servers_Server\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {address}\n      in: path\n      name: address\n      required: true\n    post:\n      operationId: postSystem_Aaa_Server-groups_Server-group_Servers_Server_Radius\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Radius'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius\n  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius/config:\n    delete:\n      operationId: deleteSystem_Aaa_Server-groups_Server-group_Servers_Server_Radius_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius/config\n    description: Configuration data for RADIUS servers\n    get:\n      operationId: getSystem_Aaa_Server-groups_Server-group_Servers_Server_Radius_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius_Config'\n          description: GET OK 200\n      summary: GET /system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius/config\n        Container\n      tags:\n      - System_Aaa_Server-groups_Server-group_Servers_Server_Radius\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {address}\n      in: path\n      name: address\n      required: true\n    post:\n      operationId: postSystem_Aaa_Server-groups_Server-group_Servers_Server_Radius_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Radius_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius/config\n  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius/state:\n    description: Operational state data for RADIUS servers\n    get:\n      operationId: getSystem_Aaa_Server-groups_Server-group_Servers_Server_Radius_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State'\n          description: GET OK 200\n      summary: GET /system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius/state\n        Container\n      tags:\n      - System_Aaa_Server-groups_Server-group_Servers_Server_Radius\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {address}\n      in: path\n      name: address\n      required: true\n  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius/state/counters:\n    description: A collection of RADIUS related state objects.\n    get:\n      operationId: getSystem_Aaa_Server-groups_Server-group_Servers_Server_Radius_State_Counters\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State_Counters'\n          description: GET OK 200\n      summary: GET /system/aaa/server-groups/server-group/{name}/servers/server/{address}/radius/state/counters\n        Container\n      tags:\n      - System_Aaa_Server-groups_Server-group_Servers_Server_Radius_State\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {address}\n      in: path\n      name: address\n      required: true\n  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers/server/{address}/state:\n    description: 'Operational state data '\n    get:\n      operationId: getSystem_Aaa_Server-groups_Server-group_Servers_Server_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_State'\n          description: GET OK 200\n      summary: GET /system/aaa/server-groups/server-group/{name}/servers/server/{address}/state\n        Container\n      tags:\n      - System_Aaa_Server-groups_Server-group_Servers_Server\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {address}\n      in: path\n      name: address\n      required: true\n  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers/server/{address}/tacacs:\n    delete:\n      operationId: deleteSystem_Aaa_Server-groups_Server-group_Servers_Server_Tacacs\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/server-groups/server-group/{name}/servers/server/{address}/tacacs\n    description: Top-level container for TACACS+ server data\n    get:\n      operationId: getSystem_Aaa_Server-groups_Server-group_Servers_Server_Tacacs\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs'\n          description: GET OK 200\n      summary: GET /system/aaa/server-groups/server-group/{name}/servers/server/{address}/tacacs\n        Container\n      tags:\n      - System_Aaa_Server-groups_Server-group_Servers_Server\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {address}\n      in: path\n      name: address\n      required: true\n    post:\n      operationId: postSystem_Aaa_Server-groups_Server-group_Servers_Server_Tacacs\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/server-groups/server-group/{name}/servers/server/{address}/tacacs\n  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers/server/{address}/tacacs/config:\n    delete:\n      operationId: deleteSystem_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/aaa/server-groups/server-group/{name}/servers/server/{address}/tacacs/config\n    description: Configuration data for TACACS+ server\n    get:\n      operationId: getSystem_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_Config'\n          description: GET OK 200\n      summary: GET /system/aaa/server-groups/server-group/{name}/servers/server/{address}/tacacs/config\n        Container\n      tags:\n      - System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {address}\n      in: path\n      name: address\n      required: true\n    post:\n      operationId: postSystem_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/aaa/server-groups/server-group/{name}/servers/server/{address}/tacacs/config\n  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/servers/server/{address}/tacacs/state:\n    description: Operational state data for TACACS+ server\n    get:\n      operationId: getSystem_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs_State'\n          description: GET OK 200\n      summary: GET /system/aaa/server-groups/server-group/{name}/servers/server/{address}/tacacs/state\n        Container\n      tags:\n      - System_Aaa_Server-groups_Server-group_Servers_Server_Tacacs\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {address}\n      in: path\n      name: address\n      required: true\n  /devicesim/v1.0.0/{target}/system/aaa/server-groups/server-group/{name}/state:\n    description: Operational state data for each server group\n    get:\n      operationId: getSystem_Aaa_Server-groups_Server-group_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_Server-groups_Server-group_State'\n          description: GET OK 200\n      summary: GET /system/aaa/server-groups/server-group/{name}/state Container\n      tags:\n      - System_Aaa_Server-groups_Server-group\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n  /devicesim/v1.0.0/{target}/system/aaa/state:\n    description: 'Operational state data for top level AAA services '\n    get:\n      operationId: getSystem_Aaa_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Aaa_State'\n          description: GET OK 200\n      summary: GET /system/aaa/state Container\n      tags:\n      - System_Aaa\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/clock:\n    delete:\n      operationId: deleteSystem_Clock\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/clock\n    description: Top-level container for clock configuration data\n    get:\n      operationId: getSystem_Clock\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Clock'\n          description: GET OK 200\n      summary: GET /system/clock Container\n      tags:\n      - System\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Clock\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Clock'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/clock\n  /devicesim/v1.0.0/{target}/system/clock/config:\n    delete:\n      operationId: deleteSystem_Clock_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/clock/config\n    description: Configuration data for system clock\n    get:\n      operationId: getSystem_Clock_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Clock_Config'\n          description: GET OK 200\n      summary: GET /system/clock/config Container\n      tags:\n      - System_Clock\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Clock_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Clock_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/clock/config\n  /devicesim/v1.0.0/{target}/system/clock/state:\n    description: Operational state data for system clock\n    get:\n      operationId: getSystem_Clock_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Clock_State'\n          description: GET OK 200\n      summary: GET /system/clock/state Container\n      tags:\n      - System_Clock\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/config:\n    delete:\n      operationId: deleteSystem_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/config\n    description: Global configuration data for the system\n    get:\n      operationId: getSystem_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Config'\n          description: GET OK 200\n      summary: GET /system/config Container\n      tags:\n      - System\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/config\n  /devicesim/v1.0.0/{target}/system/dns:\n    delete:\n      operationId: deleteSystem_Dns\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/dns\n    description: Enclosing container for DNS resolver data\n    get:\n      operationId: getSystem_Dns\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Dns'\n          description: GET OK 200\n      summary: GET /system/dns Container\n      tags:\n      - System\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Dns\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Dns'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/dns\n  /devicesim/v1.0.0/{target}/system/dns/config:\n    delete:\n      operationId: deleteSystem_Dns_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/dns/config\n    description: Configuration data for the DNS resolver\n    get:\n      operationId: getSystem_Dns_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Dns_Config'\n          description: GET OK 200\n      summary: GET /system/dns/config Container\n      tags:\n      - System_Dns\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Dns_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Dns_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/dns/config\n  /devicesim/v1.0.0/{target}/system/dns/host-entries:\n    delete:\n      operationId: deleteSystem_Dns_Host-entries\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/dns/host-entries\n    description: Enclosing container for list of static host entries\n    get:\n      operationId: getSystem_Dns_Host-entries\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Dns_Host-entries'\n          description: GET OK 200\n      summary: GET /system/dns/host-entries Container\n      tags:\n      - System_Dns\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Dns_Host-entries\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Dns_Host-entries'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/dns/host-entries\n  /devicesim/v1.0.0/{target}/system/dns/host-entries/host-entry:\n    description: List of static host entries\n    get:\n      operationId: getSystem_Dns_Host-entries_Host-entry_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Dns_Host-entries_Host-entry_List'\n          description: GET OK 200\n      summary: GET /system/dns/host-entries/host-entry List\n      tags:\n      - System_Dns_Host-entries_Host-entry\n      - List\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/dns/host-entries/host-entry/{hostname}:\n    delete:\n      operationId: deleteSystem_Dns_Host-entries_Host-entry\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/dns/host-entries/host-entry\n    description: List of static host entries\n    get:\n      operationId: getSystem_Dns_Host-entries_Host-entry\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Dns_Host-entries_Host-entry'\n          description: GET OK 200\n      summary: GET /system/dns/host-entries/host-entry Container\n      tags:\n      - System_Dns_Host-entries_Host-entry\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {hostname}\n      in: path\n      name: hostname\n      required: true\n    post:\n      operationId: postSystem_Dns_Host-entries_Host-entry\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Dns_Host-entries_Host-entry'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/dns/host-entries/host-entry\n  /devicesim/v1.0.0/{target}/system/dns/host-entries/host-entry/{hostname}/config:\n    delete:\n      operationId: deleteSystem_Dns_Host-entries_Host-entry_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/dns/host-entries/host-entry/{hostname}/config\n    description: Configuration data for static host entries\n    get:\n      operationId: getSystem_Dns_Host-entries_Host-entry_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Dns_Host-entries_Host-entry_Config'\n          description: GET OK 200\n      summary: GET /system/dns/host-entries/host-entry/{hostname}/config Container\n      tags:\n      - System_Dns_Host-entries_Host-entry\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {hostname}\n      in: path\n      name: hostname\n      required: true\n    post:\n      operationId: postSystem_Dns_Host-entries_Host-entry_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Dns_Host-entries_Host-entry_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/dns/host-entries/host-entry/{hostname}/config\n  /devicesim/v1.0.0/{target}/system/dns/host-entries/host-entry/{hostname}/state:\n    description: Operational state data for static host entries\n    get:\n      operationId: getSystem_Dns_Host-entries_Host-entry_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Dns_Host-entries_Host-entry_State'\n          description: GET OK 200\n      summary: GET /system/dns/host-entries/host-entry/{hostname}/state Container\n      tags:\n      - System_Dns_Host-entries_Host-entry\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {hostname}\n      in: path\n      name: hostname\n      required: true\n  /devicesim/v1.0.0/{target}/system/dns/servers:\n    delete:\n      operationId: deleteSystem_Dns_Servers\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/dns/servers\n    description: Enclosing container for DNS resolver list\n    get:\n      operationId: getSystem_Dns_Servers\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Dns_Servers'\n          description: GET OK 200\n      summary: GET /system/dns/servers Container\n      tags:\n      - System_Dns\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Dns_Servers\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Dns_Servers'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/dns/servers\n  /devicesim/v1.0.0/{target}/system/dns/servers/server:\n    description: |-\n      List of the DNS servers that the resolver should query.\n\n      When the resolver is invoked by a calling application, it\n      sends the query to the first name server in this list.  If\n      no response has been received within 'timeout' seconds,\n      the resolver continues with the next server in the list.\n      If no response is received from any server, the resolver\n      continues with the first server again.  When the resolver\n      has traversed the list 'attempts' times without receiving\n      any response, it gives up and returns an error to the\n      calling application.\n\n      Implementations MAY limit the number of entries in this\n      list.\n    get:\n      operationId: getSystem_Dns_Servers_Server_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Dns_Servers_Server_List'\n          description: GET OK 200\n      summary: GET /system/dns/servers/server List\n      tags:\n      - System_Dns_Servers_Server\n      - List\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/dns/servers/server/{address}:\n    delete:\n      operationId: deleteSystem_Dns_Servers_Server\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/dns/servers/server\n    description: |-\n      List of the DNS servers that the resolver should query.\n\n      When the resolver is invoked by a calling application, it\n      sends the query to the first name server in this list.  If\n      no response has been received within 'timeout' seconds,\n      the resolver continues with the next server in the list.\n      If no response is received from any server, the resolver\n      continues with the first server again.  When the resolver\n      has traversed the list 'attempts' times without receiving\n      any response, it gives up and returns an error to the\n      calling application.\n\n      Implementations MAY limit the number of entries in this\n      list.\n    get:\n      operationId: getSystem_Dns_Servers_Server\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Dns_Servers_Server'\n          description: GET OK 200\n      summary: GET /system/dns/servers/server Container\n      tags:\n      - System_Dns_Servers_Server\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {address}\n      in: path\n      name: address\n      required: true\n    post:\n      operationId: postSystem_Dns_Servers_Server\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Dns_Servers_Server'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/dns/servers/server\n  /devicesim/v1.0.0/{target}/system/dns/servers/server/{address}/config:\n    delete:\n      operationId: deleteSystem_Dns_Servers_Server_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/dns/servers/server/{address}/config\n    description: Configuration data for each DNS resolver\n    get:\n      operationId: getSystem_Dns_Servers_Server_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Dns_Servers_Server_Config'\n          description: GET OK 200\n      summary: GET /system/dns/servers/server/{address}/config Container\n      tags:\n      - System_Dns_Servers_Server\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {address}\n      in: path\n      name: address\n      required: true\n    post:\n      operationId: postSystem_Dns_Servers_Server_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Dns_Servers_Server_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/dns/servers/server/{address}/config\n  /devicesim/v1.0.0/{target}/system/dns/servers/server/{address}/state:\n    description: Operational state data for each DNS resolver\n    get:\n      operationId: getSystem_Dns_Servers_Server_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Dns_Servers_Server_State'\n          description: GET OK 200\n      summary: GET /system/dns/servers/server/{address}/state Container\n      tags:\n      - System_Dns_Servers_Server\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {address}\n      in: path\n      name: address\n      required: true\n  /devicesim/v1.0.0/{target}/system/dns/state:\n    description: Operational state data for the DNS resolver\n    get:\n      operationId: getSystem_Dns_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Dns_State'\n          description: GET OK 200\n      summary: GET /system/dns/state Container\n      tags:\n      - System_Dns\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/logging:\n    delete:\n      operationId: deleteSystem_Logging\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/logging\n    description: Top-level container for data related to logging / syslog\n    get:\n      operationId: getSystem_Logging\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Logging'\n          description: GET OK 200\n      summary: GET /system/logging Container\n      tags:\n      - System\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Logging\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Logging'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/logging\n  /devicesim/v1.0.0/{target}/system/logging/console:\n    delete:\n      operationId: deleteSystem_Logging_Console\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/logging/console\n    description: |-\n      Top-level container for data related to console-based\n      logging\n    get:\n      operationId: getSystem_Logging_Console\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Logging_Console'\n          description: GET OK 200\n      summary: GET /system/logging/console Container\n      tags:\n      - System_Logging\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Logging_Console\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Logging_Console'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/logging/console\n  /devicesim/v1.0.0/{target}/system/logging/console/config:\n    delete:\n      operationId: deleteSystem_Logging_Console_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/logging/console/config\n    description: Configuration data for console logging\n    get:\n      operationId: getSystem_Logging_Console_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Logging_Console_Config'\n          description: GET OK 200\n      summary: GET /system/logging/console/config Container\n      tags:\n      - System_Logging_Console\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Logging_Console_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Logging_Console_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/logging/console/config\n  /devicesim/v1.0.0/{target}/system/logging/console/selectors:\n    delete:\n      operationId: deleteSystem_Logging_Console_Selectors\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/logging/console/selectors\n    description: 'Enclosing container '\n    get:\n      operationId: getSystem_Logging_Console_Selectors\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Logging_Console_Selectors'\n          description: GET OK 200\n      summary: GET /system/logging/console/selectors Container\n      tags:\n      - System_Logging_Console\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Logging_Console_Selectors\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Logging_Console_Selectors'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/logging/console/selectors\n  /devicesim/v1.0.0/{target}/system/logging/console/selectors/selector:\n    description: List of selectors for log messages\n    get:\n      operationId: getSystem_Logging_Console_Selectors_Selector_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Logging_Console_Selectors_Selector_List'\n          description: GET OK 200\n      summary: GET /system/logging/console/selectors/selector List\n      tags:\n      - System_Logging_Console_Selectors_Selector\n      - List\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/logging/console/selectors/selector/{facility}/{severity}:\n    delete:\n      operationId: deleteSystem_Logging_Console_Selectors_Selector\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/logging/console/selectors/selector\n    description: List of selectors for log messages\n    get:\n      operationId: getSystem_Logging_Console_Selectors_Selector\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Logging_Console_Selectors_Selector'\n          description: GET OK 200\n      summary: GET /system/logging/console/selectors/selector Container\n      tags:\n      - System_Logging_Console_Selectors_Selector\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {facility}\n      in: path\n      name: facility\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {severity}\n      in: path\n      name: severity\n      required: true\n    post:\n      operationId: postSystem_Logging_Console_Selectors_Selector\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Logging_Console_Selectors_Selector'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/logging/console/selectors/selector\n  /devicesim/v1.0.0/{target}/system/logging/console/selectors/selector/{facility}/{severity}/config:\n    delete:\n      operationId: deleteSystem_Logging_Console_Selectors_Selector_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/logging/console/selectors/selector/{facility}/{severity}/config\n    description: 'Configuration data '\n    get:\n      operationId: getSystem_Logging_Console_Selectors_Selector_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Logging_Console_Selectors_Selector_Config'\n          description: GET OK 200\n      summary: GET /system/logging/console/selectors/selector/{facility}/{severity}/config\n        Container\n      tags:\n      - System_Logging_Console_Selectors_Selector\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {facility}\n      in: path\n      name: facility\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {severity}\n      in: path\n      name: severity\n      required: true\n    post:\n      operationId: postSystem_Logging_Console_Selectors_Selector_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Logging_Console_Selectors_Selector_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/logging/console/selectors/selector/{facility}/{severity}/config\n  /devicesim/v1.0.0/{target}/system/logging/console/selectors/selector/{facility}/{severity}/state:\n    description: 'Operational state data '\n    get:\n      operationId: getSystem_Logging_Console_Selectors_Selector_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Logging_Console_Selectors_Selector_State'\n          description: GET OK 200\n      summary: GET /system/logging/console/selectors/selector/{facility}/{severity}/state\n        Container\n      tags:\n      - System_Logging_Console_Selectors_Selector\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {facility}\n      in: path\n      name: facility\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {severity}\n      in: path\n      name: severity\n      required: true\n  /devicesim/v1.0.0/{target}/system/logging/console/state:\n    description: Operational state data for console logging\n    get:\n      operationId: getSystem_Logging_Console_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Logging_Console_State'\n          description: GET OK 200\n      summary: GET /system/logging/console/state Container\n      tags:\n      - System_Logging_Console\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/logging/remote-servers:\n    delete:\n      operationId: deleteSystem_Logging_Remote-servers\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/logging/remote-servers\n    description: Enclosing container for the list of remote log servers\n    get:\n      operationId: getSystem_Logging_Remote-servers\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Logging_Remote-servers'\n          description: GET OK 200\n      summary: GET /system/logging/remote-servers Container\n      tags:\n      - System_Logging\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Logging_Remote-servers\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Logging_Remote-servers'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/logging/remote-servers\n  /devicesim/v1.0.0/{target}/system/logging/remote-servers/remote-server:\n    description: List of remote log servers\n    get:\n      operationId: getSystem_Logging_Remote-servers_Remote-server_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_List'\n          description: GET OK 200\n      summary: GET /system/logging/remote-servers/remote-server List\n      tags:\n      - System_Logging_Remote-servers_Remote-server\n      - List\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/logging/remote-servers/remote-server/{host}:\n    delete:\n      operationId: deleteSystem_Logging_Remote-servers_Remote-server\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/logging/remote-servers/remote-server\n    description: List of remote log servers\n    get:\n      operationId: getSystem_Logging_Remote-servers_Remote-server\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server'\n          description: GET OK 200\n      summary: GET /system/logging/remote-servers/remote-server Container\n      tags:\n      - System_Logging_Remote-servers_Remote-server\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {host}\n      in: path\n      name: host\n      required: true\n    post:\n      operationId: postSystem_Logging_Remote-servers_Remote-server\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Logging_Remote-servers_Remote-server'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/logging/remote-servers/remote-server\n  /devicesim/v1.0.0/{target}/system/logging/remote-servers/remote-server/{host}/config:\n    delete:\n      operationId: deleteSystem_Logging_Remote-servers_Remote-server_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/logging/remote-servers/remote-server/{host}/config\n    description: Configuration data for remote log servers\n    get:\n      operationId: getSystem_Logging_Remote-servers_Remote-server_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Config'\n          description: GET OK 200\n      summary: GET /system/logging/remote-servers/remote-server/{host}/config Container\n      tags:\n      - System_Logging_Remote-servers_Remote-server\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {host}\n      in: path\n      name: host\n      required: true\n    post:\n      operationId: postSystem_Logging_Remote-servers_Remote-server_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Logging_Remote-servers_Remote-server_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/logging/remote-servers/remote-server/{host}/config\n  /devicesim/v1.0.0/{target}/system/logging/remote-servers/remote-server/{host}/selectors:\n    delete:\n      operationId: deleteSystem_Logging_Remote-servers_Remote-server_Selectors\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/logging/remote-servers/remote-server/{host}/selectors\n    description: 'Enclosing container '\n    get:\n      operationId: getSystem_Logging_Remote-servers_Remote-server_Selectors\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors'\n          description: GET OK 200\n      summary: GET /system/logging/remote-servers/remote-server/{host}/selectors Container\n      tags:\n      - System_Logging_Remote-servers_Remote-server\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {host}\n      in: path\n      name: host\n      required: true\n    post:\n      operationId: postSystem_Logging_Remote-servers_Remote-server_Selectors\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Logging_Remote-servers_Remote-server_Selectors'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/logging/remote-servers/remote-server/{host}/selectors\n  /devicesim/v1.0.0/{target}/system/logging/remote-servers/remote-server/{host}/selectors/selector:\n    description: List of selectors for log messages\n    get:\n      operationId: getSystem_Logging_Remote-servers_Remote-server_Selectors_Selector_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors_Selector_List'\n          description: GET OK 200\n      summary: GET /system/logging/remote-servers/remote-server/{host}/selectors/selector\n        List\n      tags:\n      - System_Logging_Remote-servers_Remote-server_Selectors_Selector\n      - List\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {host}\n      in: path\n      name: host\n      required: true\n  /devicesim/v1.0.0/{target}/system/logging/remote-servers/remote-server/{host}/selectors/selector/{facility}/{severity}:\n    delete:\n      operationId: deleteSystem_Logging_Remote-servers_Remote-server_Selectors_Selector\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/logging/remote-servers/remote-server/{host}/selectors/selector\n    description: List of selectors for log messages\n    get:\n      operationId: getSystem_Logging_Remote-servers_Remote-server_Selectors_Selector\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors_Selector'\n          description: GET OK 200\n      summary: GET /system/logging/remote-servers/remote-server/{host}/selectors/selector\n        Container\n      tags:\n      - System_Logging_Remote-servers_Remote-server_Selectors_Selector\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {host}\n      in: path\n      name: host\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {facility}\n      in: path\n      name: facility\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {severity}\n      in: path\n      name: severity\n      required: true\n    post:\n      operationId: postSystem_Logging_Remote-servers_Remote-server_Selectors_Selector\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Logging_Remote-servers_Remote-server_Selectors_Selector'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/logging/remote-servers/remote-server/{host}/selectors/selector\n  /devicesim/v1.0.0/{target}/system/logging/remote-servers/remote-server/{host}/selectors/selector/{facility}/{severity}/config:\n    delete:\n      operationId: deleteSystem_Logging_Remote-servers_Remote-server_Selectors_Selector_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/logging/remote-servers/remote-server/{host}/selectors/selector/{facility}/{severity}/config\n    description: 'Configuration data '\n    get:\n      operationId: getSystem_Logging_Remote-servers_Remote-server_Selectors_Selector_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors_Selector_Config'\n          description: GET OK 200\n      summary: GET /system/logging/remote-servers/remote-server/{host}/selectors/selector/{facility}/{severity}/config\n        Container\n      tags:\n      - System_Logging_Remote-servers_Remote-server_Selectors_Selector\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {host}\n      in: path\n      name: host\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {facility}\n      in: path\n      name: facility\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {severity}\n      in: path\n      name: severity\n      required: true\n    post:\n      operationId: postSystem_Logging_Remote-servers_Remote-server_Selectors_Selector_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Logging_Remote-servers_Remote-server_Selectors_Selector_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/logging/remote-servers/remote-server/{host}/selectors/selector/{facility}/{severity}/config\n  /devicesim/v1.0.0/{target}/system/logging/remote-servers/remote-server/{host}/selectors/selector/{facility}/{severity}/state:\n    description: 'Operational state data '\n    get:\n      operationId: getSystem_Logging_Remote-servers_Remote-server_Selectors_Selector_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_Selectors_Selector_State'\n          description: GET OK 200\n      summary: GET /system/logging/remote-servers/remote-server/{host}/selectors/selector/{facility}/{severity}/state\n        Container\n      tags:\n      - System_Logging_Remote-servers_Remote-server_Selectors_Selector\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {host}\n      in: path\n      name: host\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {facility}\n      in: path\n      name: facility\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {severity}\n      in: path\n      name: severity\n      required: true\n  /devicesim/v1.0.0/{target}/system/logging/remote-servers/remote-server/{host}/state:\n    description: Operational state data for remote log servers\n    get:\n      operationId: getSystem_Logging_Remote-servers_Remote-server_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Logging_Remote-servers_Remote-server_State'\n          description: GET OK 200\n      summary: GET /system/logging/remote-servers/remote-server/{host}/state Container\n      tags:\n      - System_Logging_Remote-servers_Remote-server\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {host}\n      in: path\n      name: host\n      required: true\n  /devicesim/v1.0.0/{target}/system/memory:\n    delete:\n      operationId: deleteSystem_Memory\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/memory\n    description: Top-level container for system memory data\n    get:\n      operationId: getSystem_Memory\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Memory'\n          description: GET OK 200\n      summary: GET /system/memory Container\n      tags:\n      - System\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Memory\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Memory'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/memory\n  /devicesim/v1.0.0/{target}/system/memory/config:\n    delete:\n      operationId: deleteSystem_Memory_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/memory/config\n    description: Configuration data for system memory\n    get:\n      operationId: getSystem_Memory_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Memory_Config'\n          description: GET OK 200\n      summary: GET /system/memory/config Container\n      tags:\n      - System_Memory\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Memory_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Memory_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/memory/config\n  /devicesim/v1.0.0/{target}/system/memory/state:\n    description: Operational state data for system memory\n    get:\n      operationId: getSystem_Memory_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Memory_State'\n          description: GET OK 200\n      summary: GET /system/memory/state Container\n      tags:\n      - System_Memory\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/ntp:\n    delete:\n      operationId: deleteSystem_Ntp\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/ntp\n    description: Top-level container for NTP configuration and state\n    get:\n      operationId: getSystem_Ntp\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Ntp'\n          description: GET OK 200\n      summary: GET /system/ntp Container\n      tags:\n      - System\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Ntp\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Ntp'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/ntp\n  /devicesim/v1.0.0/{target}/system/ntp/config:\n    delete:\n      operationId: deleteSystem_Ntp_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/ntp/config\n    description: Configuration data for NTP client.\n    get:\n      operationId: getSystem_Ntp_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Ntp_Config'\n          description: GET OK 200\n      summary: GET /system/ntp/config Container\n      tags:\n      - System_Ntp\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Ntp_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Ntp_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/ntp/config\n  /devicesim/v1.0.0/{target}/system/ntp/ntp-keys:\n    delete:\n      operationId: deleteSystem_Ntp_Ntp-keys\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/ntp/ntp-keys\n    description: Enclosing container for list of NTP authentication keys\n    get:\n      operationId: getSystem_Ntp_Ntp-keys\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Ntp_Ntp-keys'\n          description: GET OK 200\n      summary: GET /system/ntp/ntp-keys Container\n      tags:\n      - System_Ntp\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Ntp_Ntp-keys\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Ntp_Ntp-keys'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/ntp/ntp-keys\n  /devicesim/v1.0.0/{target}/system/ntp/ntp-keys/ntp-key:\n    description: List of NTP authentication keys\n    get:\n      operationId: getSystem_Ntp_Ntp-keys_Ntp-key_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Ntp_Ntp-keys_Ntp-key_List'\n          description: GET OK 200\n      summary: GET /system/ntp/ntp-keys/ntp-key List\n      tags:\n      - System_Ntp_Ntp-keys_Ntp-key\n      - List\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/ntp/ntp-keys/ntp-key/{key-id}:\n    delete:\n      operationId: deleteSystem_Ntp_Ntp-keys_Ntp-key\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/ntp/ntp-keys/ntp-key\n    description: List of NTP authentication keys\n    get:\n      operationId: getSystem_Ntp_Ntp-keys_Ntp-key\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Ntp_Ntp-keys_Ntp-key'\n          description: GET OK 200\n      summary: GET /system/ntp/ntp-keys/ntp-key Container\n      tags:\n      - System_Ntp_Ntp-keys_Ntp-key\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {key-id}\n      in: path\n      name: key-id\n      required: true\n    post:\n      operationId: postSystem_Ntp_Ntp-keys_Ntp-key\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Ntp_Ntp-keys_Ntp-key'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/ntp/ntp-keys/ntp-key\n  /devicesim/v1.0.0/{target}/system/ntp/ntp-keys/ntp-key/{key-id}/config:\n    delete:\n      operationId: deleteSystem_Ntp_Ntp-keys_Ntp-key_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/ntp/ntp-keys/ntp-key/{key-id}/config\n    description: Configuration data for NTP auth keys\n    get:\n      operationId: getSystem_Ntp_Ntp-keys_Ntp-key_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Ntp_Ntp-keys_Ntp-key_Config'\n          description: GET OK 200\n      summary: GET /system/ntp/ntp-keys/ntp-key/{key-id}/config Container\n      tags:\n      - System_Ntp_Ntp-keys_Ntp-key\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {key-id}\n      in: path\n      name: key-id\n      required: true\n    post:\n      operationId: postSystem_Ntp_Ntp-keys_Ntp-key_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Ntp_Ntp-keys_Ntp-key_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/ntp/ntp-keys/ntp-key/{key-id}/config\n  /devicesim/v1.0.0/{target}/system/ntp/ntp-keys/ntp-key/{key-id}/state:\n    description: Operational state data for NTP auth keys\n    get:\n      operationId: getSystem_Ntp_Ntp-keys_Ntp-key_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Ntp_Ntp-keys_Ntp-key_State'\n          description: GET OK 200\n      summary: GET /system/ntp/ntp-keys/ntp-key/{key-id}/state Container\n      tags:\n      - System_Ntp_Ntp-keys_Ntp-key\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {key-id}\n      in: path\n      name: key-id\n      required: true\n  /devicesim/v1.0.0/{target}/system/ntp/servers:\n    delete:\n      operationId: deleteSystem_Ntp_Servers\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/ntp/servers\n    description: Enclosing container for the list of NTP servers\n    get:\n      operationId: getSystem_Ntp_Servers\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Ntp_Servers'\n          description: GET OK 200\n      summary: GET /system/ntp/servers Container\n      tags:\n      - System_Ntp\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Ntp_Servers\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Ntp_Servers'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/ntp/servers\n  /devicesim/v1.0.0/{target}/system/ntp/servers/server:\n    description: |-\n      List of NTP servers to use for system clock\n      synchronization.  If '/system/ntp/enabled'\n      is 'true', then the system will attempt to\n      contact and utilize the specified NTP servers.\n    get:\n      operationId: getSystem_Ntp_Servers_Server_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Ntp_Servers_Server_List'\n          description: GET OK 200\n      summary: GET /system/ntp/servers/server List\n      tags:\n      - System_Ntp_Servers_Server\n      - List\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/ntp/servers/server/{address}:\n    delete:\n      operationId: deleteSystem_Ntp_Servers_Server\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/ntp/servers/server\n    description: |-\n      List of NTP servers to use for system clock\n      synchronization.  If '/system/ntp/enabled'\n      is 'true', then the system will attempt to\n      contact and utilize the specified NTP servers.\n    get:\n      operationId: getSystem_Ntp_Servers_Server\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Ntp_Servers_Server'\n          description: GET OK 200\n      summary: GET /system/ntp/servers/server Container\n      tags:\n      - System_Ntp_Servers_Server\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {address}\n      in: path\n      name: address\n      required: true\n    post:\n      operationId: postSystem_Ntp_Servers_Server\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Ntp_Servers_Server'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/ntp/servers/server\n  /devicesim/v1.0.0/{target}/system/ntp/servers/server/{address}/config:\n    delete:\n      operationId: deleteSystem_Ntp_Servers_Server_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/ntp/servers/server/{address}/config\n    description: Configuration data for an NTP server.\n    get:\n      operationId: getSystem_Ntp_Servers_Server_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Ntp_Servers_Server_Config'\n          description: GET OK 200\n      summary: GET /system/ntp/servers/server/{address}/config Container\n      tags:\n      - System_Ntp_Servers_Server\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {address}\n      in: path\n      name: address\n      required: true\n    post:\n      operationId: postSystem_Ntp_Servers_Server_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Ntp_Servers_Server_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/ntp/servers/server/{address}/config\n  /devicesim/v1.0.0/{target}/system/ntp/servers/server/{address}/state:\n    description: Operational state data for an NTP server.\n    get:\n      operationId: getSystem_Ntp_Servers_Server_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Ntp_Servers_Server_State'\n          description: GET OK 200\n      summary: GET /system/ntp/servers/server/{address}/state Container\n      tags:\n      - System_Ntp_Servers_Server\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {address}\n      in: path\n      name: address\n      required: true\n  /devicesim/v1.0.0/{target}/system/ntp/state:\n    description: Operational state data for NTP services.\n    get:\n      operationId: getSystem_Ntp_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Ntp_State'\n          description: GET OK 200\n      summary: GET /system/ntp/state Container\n      tags:\n      - System_Ntp\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/openflow:\n    delete:\n      operationId: deleteSystem_Openflow\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/openflow\n    description: Container for Openflow model\n    get:\n      operationId: getSystem_Openflow\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Openflow'\n          description: GET OK 200\n      summary: GET /system/openflow Container\n      tags:\n      - System\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Openflow\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Openflow'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/openflow\n  /devicesim/v1.0.0/{target}/system/openflow/agent:\n    delete:\n      operationId: deleteSystem_Openflow_Agent\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/openflow/agent\n    description: Container for the Openflow agent model.\n    get:\n      operationId: getSystem_Openflow_Agent\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Openflow_Agent'\n          description: GET OK 200\n      summary: GET /system/openflow/agent Container\n      tags:\n      - System_Openflow\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Openflow_Agent\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Openflow_Agent'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/openflow/agent\n  /devicesim/v1.0.0/{target}/system/openflow/agent/config:\n    delete:\n      operationId: deleteSystem_Openflow_Agent_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/openflow/agent/config\n    description: Container for the Openflow agent config.\n    get:\n      operationId: getSystem_Openflow_Agent_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Openflow_Agent_Config'\n          description: GET OK 200\n      summary: GET /system/openflow/agent/config Container\n      tags:\n      - System_Openflow_Agent\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Openflow_Agent_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Openflow_Agent_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/openflow/agent/config\n  /devicesim/v1.0.0/{target}/system/openflow/agent/state:\n    description: Container for the Openflow agent state.\n    get:\n      operationId: getSystem_Openflow_Agent_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Openflow_Agent_State'\n          description: GET OK 200\n      summary: GET /system/openflow/agent/state Container\n      tags:\n      - System_Openflow_Agent\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/openflow/controllers:\n    delete:\n      operationId: deleteSystem_Openflow_Controllers\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/openflow/controllers\n    description: Container for the Openflow controllers model\n    get:\n      operationId: getSystem_Openflow_Controllers\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Openflow_Controllers'\n          description: GET OK 200\n      summary: GET /system/openflow/controllers Container\n      tags:\n      - System_Openflow\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Openflow_Controllers\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Openflow_Controllers'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/openflow/controllers\n  /devicesim/v1.0.0/{target}/system/openflow/controllers/controller:\n    description: |-\n      The Openflow Switch connects to all Openflow controllers\n      configured\n    get:\n      operationId: getSystem_Openflow_Controllers_Controller_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Openflow_Controllers_Controller_List'\n          description: GET OK 200\n      summary: GET /system/openflow/controllers/controller List\n      tags:\n      - System_Openflow_Controllers_Controller\n      - List\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/openflow/controllers/controller/{name}:\n    delete:\n      operationId: deleteSystem_Openflow_Controllers_Controller\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/openflow/controllers/controller\n    description: |-\n      The Openflow Switch connects to all Openflow controllers\n      configured\n    get:\n      operationId: getSystem_Openflow_Controllers_Controller\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Openflow_Controllers_Controller'\n          description: GET OK 200\n      summary: GET /system/openflow/controllers/controller Container\n      tags:\n      - System_Openflow_Controllers_Controller\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    post:\n      operationId: postSystem_Openflow_Controllers_Controller\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Openflow_Controllers_Controller'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/openflow/controllers/controller\n  /devicesim/v1.0.0/{target}/system/openflow/controllers/controller/{name}/config:\n    delete:\n      operationId: deleteSystem_Openflow_Controllers_Controller_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/openflow/controllers/controller/{name}/config\n    description: Container for the Openflow controller config.\n    get:\n      operationId: getSystem_Openflow_Controllers_Controller_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Config'\n          description: GET OK 200\n      summary: GET /system/openflow/controllers/controller/{name}/config Container\n      tags:\n      - System_Openflow_Controllers_Controller\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    post:\n      operationId: postSystem_Openflow_Controllers_Controller_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Openflow_Controllers_Controller_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/openflow/controllers/controller/{name}/config\n  /devicesim/v1.0.0/{target}/system/openflow/controllers/controller/{name}/connections:\n    delete:\n      operationId: deleteSystem_Openflow_Controllers_Controller_Connections\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/openflow/controllers/controller/{name}/connections\n    description: Enclosing container for list of controller connections\n    get:\n      operationId: getSystem_Openflow_Controllers_Controller_Connections\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections'\n          description: GET OK 200\n      summary: GET /system/openflow/controllers/controller/{name}/connections Container\n      tags:\n      - System_Openflow_Controllers_Controller\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    post:\n      operationId: postSystem_Openflow_Controllers_Controller_Connections\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Openflow_Controllers_Controller_Connections'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/openflow/controllers/controller/{name}/connections\n  /devicesim/v1.0.0/{target}/system/openflow/controllers/controller/{name}/connections/connection:\n    description: |-\n      List of connections to the OpenFlow controller.\n      The Openflow switch always connects to configured Openflow\n      controllers. Each controller can have more than one\n      connection, called auxiliary Openflow connections.\n    get:\n      operationId: getSystem_Openflow_Controllers_Controller_Connections_Connection_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections_Connection_List'\n          description: GET OK 200\n      summary: GET /system/openflow/controllers/controller/{name}/connections/connection\n        List\n      tags:\n      - System_Openflow_Controllers_Controller_Connections_Connection\n      - List\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n  /devicesim/v1.0.0/{target}/system/openflow/controllers/controller/{name}/connections/connection/{aux-id}:\n    delete:\n      operationId: deleteSystem_Openflow_Controllers_Controller_Connections_Connection\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/openflow/controllers/controller/{name}/connections/connection\n    description: |-\n      List of connections to the OpenFlow controller.\n      The Openflow switch always connects to configured Openflow\n      controllers. Each controller can have more than one\n      connection, called auxiliary Openflow connections.\n    get:\n      operationId: getSystem_Openflow_Controllers_Controller_Connections_Connection\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections_Connection'\n          description: GET OK 200\n      summary: GET /system/openflow/controllers/controller/{name}/connections/connection\n        Container\n      tags:\n      - System_Openflow_Controllers_Controller_Connections_Connection\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {aux-id}\n      in: path\n      name: aux-id\n      required: true\n    post:\n      operationId: postSystem_Openflow_Controllers_Controller_Connections_Connection\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Openflow_Controllers_Controller_Connections_Connection'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/openflow/controllers/controller/{name}/connections/connection\n  /devicesim/v1.0.0/{target}/system/openflow/controllers/controller/{name}/connections/connection/{aux-id}/config:\n    delete:\n      operationId: deleteSystem_Openflow_Controllers_Controller_Connections_Connection_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/openflow/controllers/controller/{name}/connections/connection/{aux-id}/config\n    description: Configuration data for OpenFlow controller connections\n    get:\n      operationId: getSystem_Openflow_Controllers_Controller_Connections_Connection_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections_Connection_Config'\n          description: GET OK 200\n      summary: GET /system/openflow/controllers/controller/{name}/connections/connection/{aux-id}/config\n        Container\n      tags:\n      - System_Openflow_Controllers_Controller_Connections_Connection\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {aux-id}\n      in: path\n      name: aux-id\n      required: true\n    post:\n      operationId: postSystem_Openflow_Controllers_Controller_Connections_Connection_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Openflow_Controllers_Controller_Connections_Connection_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/openflow/controllers/controller/{name}/connections/connection/{aux-id}/config\n  /devicesim/v1.0.0/{target}/system/openflow/controllers/controller/{name}/connections/connection/{aux-id}/state:\n    description: |-\n      Operational state data for OpenFlow controller\n      connections\n    get:\n      operationId: getSystem_Openflow_Controllers_Controller_Connections_Connection_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Openflow_Controllers_Controller_Connections_Connection_State'\n          description: GET OK 200\n      summary: GET /system/openflow/controllers/controller/{name}/connections/connection/{aux-id}/state\n        Container\n      tags:\n      - System_Openflow_Controllers_Controller_Connections_Connection\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {aux-id}\n      in: path\n      name: aux-id\n      required: true\n  /devicesim/v1.0.0/{target}/system/openflow/controllers/controller/{name}/state:\n    description: Container for the Openflow controller state.\n    get:\n      operationId: getSystem_Openflow_Controllers_Controller_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Openflow_Controllers_Controller_State'\n          description: GET OK 200\n      summary: GET /system/openflow/controllers/controller/{name}/state Container\n      tags:\n      - System_Openflow_Controllers_Controller\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {name}\n      in: path\n      name: name\n      required: true\n  /devicesim/v1.0.0/{target}/system/processes:\n    delete:\n      operationId: deleteSystem_Processes\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/processes\n    description: Parameters related to all monitored processes\n    get:\n      operationId: getSystem_Processes\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Processes'\n          description: GET OK 200\n      summary: GET /system/processes Container\n      tags:\n      - System\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Processes\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Processes'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/processes\n  /devicesim/v1.0.0/{target}/system/processes/process:\n    description: List of monitored processes\n    get:\n      operationId: getSystem_Processes_Process_List\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Processes_Process_List'\n          description: GET OK 200\n      summary: GET /system/processes/process List\n      tags:\n      - System_Processes_Process\n      - List\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/processes/process/{pid}:\n    description: List of monitored processes\n    get:\n      operationId: getSystem_Processes_Process\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Processes_Process'\n          description: GET OK 200\n      summary: GET /system/processes/process Container\n      tags:\n      - System_Processes_Process\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {pid}\n      in: path\n      name: pid\n      required: true\n  /devicesim/v1.0.0/{target}/system/processes/process/{pid}/state:\n    description: State parameters related to monitored processes\n    get:\n      operationId: getSystem_Processes_Process_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Processes_Process_State'\n          description: GET OK 200\n      summary: GET /system/processes/process/{pid}/state Container\n      tags:\n      - System_Processes_Process\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    - content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n      description: key {pid}\n      in: path\n      name: pid\n      required: true\n  /devicesim/v1.0.0/{target}/system/ssh-server:\n    delete:\n      operationId: deleteSystem_Ssh-server\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/ssh-server\n    description: Top-level container for ssh server\n    get:\n      operationId: getSystem_Ssh-server\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Ssh-server'\n          description: GET OK 200\n      summary: GET /system/ssh-server Container\n      tags:\n      - System\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Ssh-server\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Ssh-server'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/ssh-server\n  /devicesim/v1.0.0/{target}/system/ssh-server/config:\n    delete:\n      operationId: deleteSystem_Ssh-server_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/ssh-server/config\n    description: Configuration data for the system ssh server\n    get:\n      operationId: getSystem_Ssh-server_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Ssh-server_Config'\n          description: GET OK 200\n      summary: GET /system/ssh-server/config Container\n      tags:\n      - System_Ssh-server\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Ssh-server_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Ssh-server_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/ssh-server/config\n  /devicesim/v1.0.0/{target}/system/ssh-server/state:\n    description: Operational state data for the system ssh server\n    get:\n      operationId: getSystem_Ssh-server_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Ssh-server_State'\n          description: GET OK 200\n      summary: GET /system/ssh-server/state Container\n      tags:\n      - System_Ssh-server\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/state:\n    description: Global operational state data for the system\n    get:\n      operationId: getSystem_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_State'\n          description: GET OK 200\n      summary: GET /system/state Container\n      tags:\n      - System\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n  /devicesim/v1.0.0/{target}/system/telnet-server:\n    delete:\n      operationId: deleteSystem_Telnet-server\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/telnet-server\n    description: Top-level container for telnet terminal servers\n    get:\n      operationId: getSystem_Telnet-server\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Telnet-server'\n          description: GET OK 200\n      summary: GET /system/telnet-server Container\n      tags:\n      - System\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Telnet-server\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Telnet-server'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/telnet-server\n  /devicesim/v1.0.0/{target}/system/telnet-server/config:\n    delete:\n      operationId: deleteSystem_Telnet-server_Config\n      responses:\n        \"200\":\n          description: DELETE 200 OK\n      summary: DELETE /system/telnet-server/config\n    description: Configuration data for telnet\n    get:\n      operationId: getSystem_Telnet-server_Config\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Telnet-server_Config'\n          description: GET OK 200\n      summary: GET /system/telnet-server/config Container\n      tags:\n      - System_Telnet-server\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n    post:\n      operationId: postSystem_Telnet-server_Config\n      requestBody:\n        $ref: '#/components/requestBodies/RequestBody_System_Telnet-server_Config'\n      responses:\n        \"201\":\n          description: created\n      summary: POST /system/telnet-server/config\n  /devicesim/v1.0.0/{target}/system/telnet-server/state:\n    description: Operational state data for telnet\n    get:\n      operationId: getSystem_Telnet-server_State\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/System_Telnet-server_State'\n          description: GET OK 200\n      summary: GET /system/telnet-server/state Container\n      tags:\n      - System_Telnet-server\n      - Container\n    parameters:\n    - $ref: '#/components/parameters/target'\n",
			"canonicalURL": "/github.com/onosproject/config-models@0465131d69b10ae82b3b7ba617d24e5d46173fe8/-/blob/models/devicesim-1.0.x/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/onosproject/config-models/blob/0465131d69b10ae82b3b7ba617d24e5d46173fe8/models/devicesim-1.0.x/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: \"target\": \"text/plain; charset=utf-8\": parameter content encoding not implemented",
	"NotImplemented": [
		"parameter content encoding"
	]
}