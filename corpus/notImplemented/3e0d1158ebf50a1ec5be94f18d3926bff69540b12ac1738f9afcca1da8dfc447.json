{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Nexmo/nexmo-oas-renderer"
		},
		"file": {
			"name": "account.yml",
			"size": 0,
			"path": "samples/vonage/account.yml",
			"byteSize": 24501,
			"content": "openapi: \"3.0.2\"\ninfo:\n  title: \"Nexmo Account API\"\n  version: \"1.0.1\"\n  description: \u003e-\n    Enables users to manage their Nexmo Account by programmable means. More information is available here: \u003chttps://developer.nexmo.com/account/overview\u003e.\n  contact:\n    name: Nexmo.com\n    url: \"https://developer.nexmo.com\"\nservers:\n  - url: \"https://api.nexmo.com\"\npaths:\n  /account/get-balance:\n    servers:\n      - url: \"https://rest.nexmo.com\"\n    get:\n      operationId: getAccountBalance\n      summary: Get Account Balance\n      description: Retrieve the current balance of your Nexmo account\n      parameters:\n        - $ref: \"#/components/parameters/api_key_for_auth\"\n        - $ref: \"#/components/parameters/api_secret_for_auth\"\n      tags:\n        - Balance\n      responses:\n        \"200\":\n          description: The current balance of your account\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/accountBalance\"\n              example: { \"value\": 10.17127500, \"autoReload\": false }\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/accountBalance\"\n              example: \u003e-\n                \u003c?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?\u003e\n                \u003caccountBalance\u003e\n                  \u003cvalue\u003e10.17127500\u003c/value\u003e\n                  \u003cautoReload\u003efalse\u003c/autoReload\u003e\n                \u003c/accountBalance\u003e\n        \"401\":\n          description: Not Authorised. You must supply your `api_key` and `api_secret` as query parameters to this request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorAuthenticationFailedAccountBalance\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorAuthenticationFailedAccountBalance\"\n\n  /account/top-up:\n    servers:\n      - url: \"https://rest.nexmo.com\"\n    post:\n      operationId: topUpAccountBalance\n      summary: Top Up Account Balance\n      description: \u003e-\n        You can top up your account using this API when you have enabled auto-reload in the\n        dashboard. The amount added by the top-up operation will be the same amount as was\n        added in the payment when auto-reload was enabled.\n\n        Your account balance is checked every 5-10 minutes and if it falls below the threshold\n        and auto-reload is enabled, then it will be topped up automatically. Use this endpoint \n        if you need to top up at times when your credit may be exhausted more quickly than the\n        auto-reload may occur.\n      externalDocs:\n        url: \"https://help.nexmo.com/hc/en-us/articles/205603248-How-do-I-set-up-automatic-payments-using-PayPal-or-credit-card-\"\n        description: Read more about automatic payments on the Knowledgebase\n      parameters:\n        - $ref: \"#/components/parameters/api_key_for_auth\"\n        - $ref: \"#/components/parameters/api_secret_for_auth\"\n      tags:\n        - Balance\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - trx\n              properties:\n                trx:\n                  type: string\n                  description: The transaction reference of the transaction when balance was added and auto-reload was enabled on your account.\n                  example: 8ef2447e69604f642ae59363aa5f781b\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/success\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/success\"\n        \"401\":\n          description: Not Authorised\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/ErrorAuthenticationFailed\"\n                  - $ref: \"#/components/schemas/ErrorAutoReloadNotEnabled\"\n            application/xml:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/ErrorAuthenticationFailed\"\n                  - $ref: \"#/components/schemas/ErrorAutoReloadNotEnabled\"\n\n  /account/settings:\n    servers:\n      - url: \"https://rest.nexmo.com\"\n    post:\n      operationId: changeAccountSettings\n      summary: Change Account Settings\n      description: \u003e-\n        Update the default callback URLs (where the webhooks are sent to) associated with your account:\n          * Callback URL for incoming SMS messages\n          * Callback URL for delivery receipts\n\n        Note that the URLs you provide must be valid and active. Nexmo will check that they\n        return a 200 OK response before the setting is saved.\n      parameters:\n        - $ref: \"#/components/parameters/api_key_for_auth\"\n        - $ref: \"#/components/parameters/api_secret_for_auth\"\n      tags:\n        - Configuration\n      requestBody:\n        required: false\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                moCallBackUrl:\n                  description: \u003e-\n                    The URL where Nexmo will send a webhook when an SMS is received\n                    to a Nexmo number that does not have SMS handling configured.\n\n                    Send an empty string to unset this value.\n                  type: string\n                  format: url\n                  example: https://example.com/webhooks/inbound-sms\n                drCallBackUrl:\n                  description: \u003e-\n                    The URL where Nexmo will send a webhook when an delivery\n                    receipt is received without a specific callback URL configured.\n\n                    Send an empty string to unset this value.\n                  type: string\n                  format: url\n                  example: https://example.com/webhooks/delivery-receipt\n      responses:\n        \"200\":\n          description: OK. Settings were updated if supplied, the details of the current settings are included in the response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/accountSettings\"\n              example: \u003e-\n                {\n                  \"mo-callback-url\": \"https:\\/\\/example.com\\/webhooks\\/inbound-sms\",\n                  \"dr-callback-url\": \"https:\\/\\/example.com\\/webhooks\\/delivery-receipt\",\n                  \"max-outbound-request\": 30,\n                  \"max-inbound-request\": 30,\n                  \"max-calls-per-second\": 30\n                }\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/accountSettings\"\n              example: \u003e-\n                \u003c?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?\u003e\n                \u003caccount-settings\u003e\n                  \u003cmo-callback-url\u003ehttps://example.com/webhooks/inbound-sms\u003c/mo-callback-url\u003e\n                  \u003cdr-callback-url\u003ehttps://example.com/webhooks/delivery-receipt\u003c/dr-callback-url\u003e\n                  \u003cmax-outbound-request\u003e30\u003c/max-outbound-request\u003e\n                  \u003cmax-inbound-request\u003e30\u003c/max-inbound-request\u003e\n                  \u003cmax-calls-per-second\u003e30\u003c/max-calls-per-second\u003e\n                \u003c/account-settings\u003e\n        \"401\":\n          description: Not Authorised. You must supply your `api_key` and `api_secret` as query parameters to this request\n\n  /accounts/{api_key}/secrets:\n    get:\n      summary: Retrieve API Secrets\n      operationId: retrieveAPISecrets\n      tags:\n        - Secret Management\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/APIKey\"\n      responses:\n        \"200\":\n          description: The list of your current API secrets\n          content:\n            application/json:\n              schema:\n                properties:\n                  _links:\n                    $ref: \"#/components/schemas/secretMgmtLinks\"\n                  _embedded:\n                    type: object\n                    description: The single `secrets` key returns an array of API secrets\n                    properties:\n                      secrets:\n                        type: array\n                        description: Array of API secrets\n                        items:\n                          $ref: \"#/components/schemas/secretInfo\"\n              example: \u003e-\n                {\n                  \"_links\": {\n                    \"self\": {\n                      \"href\": \"/accounts/abcd1234/secrets\"\n                    }\n                  },\n                  \"_embedded\": {\n                    \"secrets\": [\n                      {\n                        \"_links\": {\n                          \"self\": {\n                            \"href\": \"/accounts/abcd1234/secrets/01234567-aaaa-bbbb-cccc-defdefdefdef\"\n                          }\n                        },\n                        \"id\": \"01234567-aaaa-bbbb-cccc-defdefdefdef\",\n                        \"created_at\": \"2018-12-03T10:07:23Z\"\n                      }\n                    ]\n                  }\n                }\n        \"401\":\n          $ref: \"#/components/responses/BadCredentialsError\"\n        \"404\":\n          description: \"Item not found\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorAPIKeyNotFound\"\n    post:\n      summary: Create API Secret\n      operationId: createAPISecret\n      tags:\n        - Secret Management\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/APIKey\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - secret\n              properties:\n                secret:\n                  description: |\n                    The new secret must follow these rules:\n\n                    * minimum 8 characters\n                    * maximum 25 characters\n                    * minimum 1 lower case character\n                    * minimum 1 upper case character\n                    * minimum 1 digit\n\n                  type: string\n                  example: \"example-4PI-secret\"\n      responses:\n        \"201\":\n          description: Secret created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/secretInfo\"\n              example: \u003e-\n                {\n                  \"_links\": {\n                    \"self\": {\n                      \"href\": \"/accounts/abcd1234/secrets/01234567-aaaa-bbbb-cccc-defdefdefdef\"\n                    }\n                  },\n                  \"id\": \"01234567-aaaa-bbbb-cccc-defdefdefdef\",\n                  \"created_at\": \"2018-12-03T10:07:23Z\"\n                }\n        \"400\":\n          description: Bad request. This usually indicates valid data but can also occur when a user has exceeded the allowed number of secrets on their account.\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    description: URL for further information\n                    example: https://developer.nexmo.com/api-errors/account/secret-management#validation\n                  title:\n                    type: string\n                    description: Description of the error\n                    example: Bad Request\n                  detail:\n                    type: string\n                    description: More detail regarding this error, including the API key supplied\n                    example: The request failed due to secret validation errors\n                  instance:\n                    type: string\n                    description: Internal Trace ID\n                    example: bf0ca0bf927b3b52e3cb03217e1a1ddf\n                  invalid_parameters:\n                    type: array\n                    description: Array of the parameters that are considered invalid, and explanations of why\n                    items:\n                      type: object\n                      properties:\n                        name:\n                          type: string\n                          description: Field name\n                          example: secret\n                        reason:\n                          type: string\n                          description: Explanation of why parameter is considered invalid\n                          example: Does not meet complexity requirements\n        \"401\":\n          $ref: \"#/components/responses/BadCredentialsError\"\n        \"404\":\n          description: \"Item not found\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorAPIKeyNotFound\"\n\n  /accounts/{api_key}/secrets/{secret_id}:\n    get:\n      summary: Retrieve one API Secret\n      operationId: retrieveAPISecret\n      tags:\n        - Secret Management\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/APIKey\"\n        - $ref: \"#/components/parameters/secretId\"\n      responses:\n        \"200\":\n          description: API secret response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/secretInfo\"\n              example: \u003e-\n                {\n                  \"_links\": {\n                    \"self\": {\n                      \"href\": \"/accounts/abcd1234/secrets/01234567-aaaa-bbbb-cccc-defdefdefdef\"\n                    }\n                  },\n                  \"id\": \"01234567-aaaa-bbbb-cccc-defdefdefdef\",\n                  \"created_at\": \"2018-12-03T10:07:23Z\"\n                }\n        \"401\":\n          $ref: \"#/components/responses/BadCredentialsError\"\n        \"404\":\n          description: \"Item not found\"\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/ErrorAPIKeyNotFound\"\n                  - $ref: \"#/components/schemas/ErrorSecretIDNotFound\"\n    delete:\n      summary: Revoke an API Secret\n      operationId: revokeAPISecret\n      tags:\n        - Secret Management\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/APIKey\"\n        - $ref: \"#/components/parameters/secretId\"\n      responses:\n        \"204\":\n          description: Revoked secret response (without body content)\n        \"401\":\n          $ref: \"#/components/responses/BadCredentialsError\"\n        \"403\":\n          description: Operation forbidden by permissions or because this is the only API secret and you are required to have at least one.\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    description: URL for further information\n                    example: https://developer.nexmo.com/api-errors/account/secret-management#delete-last-secret\n                  title:\n                    type: string\n                    description: Description of the error\n                    example: Secret Deletion Forbidden\n                  detail:\n                    type: string\n                    description: More detail regarding this error\n                    example: Can not delete the last secret. The account must always have at least 1 secret active at any time\n                  instance:\n                    type: string\n                    description: Internal Trace ID\n                    example: bf0ca0bf927b3b52e3cb03217e1a1ddf\n        \"404\":\n          description: \"Item not found\"\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/ErrorAPIKeyNotFound\"\n                  - $ref: \"#/components/schemas/ErrorSecretIDNotFound\"\n\ntags:\n  - name: Balance\n    description: This section shows how you can query the current balance of your account, and if you have auto-reload enabled how to trigger a top-up to your account without waiting for the next balance check.\n  - name: Configuration\n    description: Manage the settings on your account\n  - name: Secret Management\n    description: \u003e-\n      Many of Nexmo's APIs are accessed using an API key and secret. It is recommended that you change or \"rotate\" your secrets from time to time for security purposes. This section provides the API interface for achieving this.\n\n      Note: to work on secrets for your secondary accounts, you may authenticate with your primary credentials and supply the secondary API keys as URL parameters to these API endpoints.\n\ncomponents:\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n      description: \u003e-\n        Provide an `Authorization` header, with a value of \"Basic\" followed by the result of base64-encoding your Nexmo API key and secret separated by a colon. You can find your API key and secret on the [dashboard](https://dashboard.nexmo.com) and more information is available [on the developer portal](https://developer.nexmo.com/concepts/guides/authentication#header-based-api-key-and-secret-authentication).\n\n        If your API key were aaa012 and your API secret were abc123456789 then your HTTP header would be: `Authorization: Basic YWFhMDEyOmFiYzEyMzQ1Njc4OQ==`\n\n  parameters:\n    api_key_for_auth:\n      name: api_key\n      description: Your Nexmo API key. You can find this in the [dashboard](https://dashboard.nexmo.com)\n      in: query\n      required: true\n      schema:\n        type: string\n        example: abcd1234\n    api_secret_for_auth:\n      name: api_secret\n      description: Your Nexmo API secret. You can find this in the [dashboard](https://dashboard.nexmo.com)\n      in: query\n      required: true\n      schema:\n        type: string\n        example: ABCDEFGH01234abc\n    APIKey:\n      name: api_key\n      in: path\n      description: The API key to manage secrets for\n      example: abcd1234\n      required: true\n      schema:\n        type: string\n    secretId:\n      name: secret_id\n      in: path\n      description: ID of the API Secret\n      example: 01234567-aaaa-bbbb-cccc-defdefdefdef\n      required: true\n      schema:\n        type: string\n  schemas:\n    success:\n      type: object\n      xml:\n        name: response\n      properties:\n        \"error-code\":\n          example: \"200\"\n        \"error-code-label\":\n          example: \"success\"\n    accountBalance:\n      type: object\n      xml:\n        name: accountBalance\n      properties:\n        value:\n          type: number\n          description: The balance of the account, in EUR\n          example: 10.28\n        autoReload:\n          type: boolean\n          enum: [true, false]\n          example: false\n          description: Whether the account has auto-reloading enabled\n    accountSettings:\n      type: object\n      xml:\n        name: account-settings\n      properties:\n        mo-callback-url:\n          type: string\n          format: url\n          description: The current or updated inbound message URI\n          example: https://example.com/webhooks/inbound-sms\n        dr-callback-url:\n          type: string\n          format: url\n          description: The current or updated delivery receipt URI\n          example: https://example.com/webhooks/delivery-receipt\n        max-outbound-request:\n          type: integer\n          description: The maximum number of outbound messages per second.\n          example: 30\n        max-inbound-request:\n          type: integer\n          description: The maximum number of inbound messages per second.\n          example: 30\n        max-calls-per-second:\n          type: integer\n          description: The maximum number of API calls per second.\n          example: 30\n    secretInfo:\n      type: object\n      properties:\n        _links:\n          $ref: \"#/components/schemas/secretMgmtLinks\"\n        id:\n          type: string\n          description: Secret ID\n          example: ad6dc56f-07b5-46e1-a527-85530e625800\n        created_at:\n          type: string\n          description: Creation date/time for this secret\n          example: \"2017-03-02T16:34:49Z\"\n    secretMgmtLinks:\n      type: object\n      description: Links related to this resource\n      properties:\n        self:\n          type: object\n          description: This resource\n          properties:\n            href:\n              type: string\n              description: The URI for this resource\n    ErrorAPIKeyNotFound:\n      description: This API key was not recognised\n      type: object\n      required:\n        - type\n        - title\n        - detail\n        - instance\n      properties:\n        type:\n          type: string\n          description: URL for further information\n          # example: https://developer.nexmo.com/api-errors#invalid-id\n          example: https://developer.nexmo.com/api-errors#invalid-api-key\n        title:\n          type: string\n          description: Description of the error\n          example: Invalid API Key\n        detail:\n          type: string\n          description: More detail regarding this error, including the API key supplied\n          example: API key 'abc123' not found\n        instance:\n          type: string\n          description: Internal Trace ID\n          example: bf0ca0bf927b3b52e3cb03217e1a1ddf\n\n    ErrorAuthenticationFailedAccountBalance:\n      description: Authentication Failed\n      type: object\n      xml:\n        name: accountBalance\n      properties:\n        \"error-code\":\n          example: \"401\"\n        \"error-code-label\":\n          example: \"authentication failed\"\n\n    ErrorAuthenticationFailed:\n      description: Authentication Failed\n      type: object\n      xml:\n        name: response\n      properties:\n        \"error-code\":\n          example: \"401\"\n        \"error-code-label\":\n          example: \"authentication failed\"\n\n    ErrorAutoReloadNotEnabled:\n      description: Auto-Reload not enabled\n      type: object\n      xml:\n        name: response\n      properties:\n        \"error-code\":\n          example: \"401\"\n        \"error-code-label\":\n          example: \"not auto-reload enabled\"\n\n    ErrorSecretIDNotFound:\n      description: This secret ID was not recognised\n      type: object\n      required:\n        - type\n        - title\n        - detail\n        - instance\n      properties:\n        type:\n          type: string\n          description: URL for further information\n          example: https://developer.nexmo.com/api-errors#invalid-id\n        title:\n          type: string\n          description: Description of the error\n          example: Invalid ID\n        detail:\n          type: string\n          description: More detail regarding this error, including the secret ID supplied\n          example: ID '07239aeb-d756-4c32-a1de-cf64f8b21827' could not be found\n        instance:\n          type: string\n          description: Internal Trace ID\n          example: bf0ca0bf927b3b52e3cb03217e1a1ddf\n\n  responses:\n    BadCredentialsError:\n      description: Credentials are missing or invalid\n      content:\n        application/json:\n          schema:\n            properties:\n              type:\n                type: string\n                description: URL for further information\n                example: https://developer.nexmo.com/\n              title:\n                type: string\n                description: Description of the error\n                example: Unauthorized\n              detail:\n                type: string\n                description: More detail regarding this error, including the expected value\n                example: 'Invalid credentials format. Expected: \"Authorization: (Base64(UTF-8(apiKey:secret)))\"'\n              instance:\n                type: string\n                description: Internal Trace ID\n                example: bf0ca0bf927b3b52e3cb03217e1a1ddf\n\nx-errors:\n  validation:\n    description: The provided payload is invalid\n    resolution: |\n      Modify your request to provide a valid payload.\n      * Minimum 8 characters\n      * Maximum 25 characters\n      * Minimum 1 lower case character\n      * Minimum 1 upper case character\n      * Minimum 1 digit\n    link:\n      text: View API reference\n      url: /api/account/api-secret-management#createSecret\n\n  delete-last-secret:\n    description: You can not delete your only API secret\n    resolution: Add another API secret before deleting this one\n",
			"canonicalURL": "/github.com/Nexmo/nexmo-oas-renderer@d655f943ea0ff0dcae56a3b34228a971798aa877/-/blob/samples/vonage/account.yml",
			"externalURLs": [
				{
					"url": "https://github.com/Nexmo/nexmo-oas-renderer/blob/d655f943ea0ff0dcae56a3b34228a971798aa877/samples/vonage/account.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/account/top-up\": post: responses: 401: contents: application/json: generate schema: oneOf: oneOf TopUpAccountBalanceUnauthorizedApplicationJSON: variant ErrorAutoReloadNotEnabled: no unique fields, unable to parse without discriminator: discriminator inference not implemented",
	"NotImplemented": [
		"discriminator inference"
	]
}