{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/botblock/data"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi.yml",
			"byteSize": 27638,
			"content": "openapi: 3.0.0\n\ninfo:\n  title: BotBlock API\n  version: 1.0.0\n\nservers:\n  - url: https://botblock.org\n    description: Production\n\npaths:\n  /api/count:\n    post:\n      summary: Update guild count\n      description: |\n        The `POST /api/count` endpoint of the BotBlock API is the core endpoint that bots and libraries integrate with, allowing a bot to make a single POST call to send their guild count to all supported lists, based on the API keys passed for lists.\n\n        _Note: This ratelimit has a 1 / 120s ratelimit for successful requests. Requests that return a 400 or 429 status code are not ratelimited._\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                server_count:\n                  description: |\n                    The server/guild count for the bot.\n\n                    _Note: Value is required but will not be sent to a list if 'shards' is provided and the list accepts a 'shards' value._\n                  type: integer\n                bot_id:\n                  description: The ID of the bot.\n                  type: string\n                  format: snowflake\n                shard_id:\n                  description: |\n                    The shard ID for the current count being posted.\n\n                    _Note: This information is only sent to bot lists that support it._\n                  type: integer\n                  nullable: true\n                shard_count:\n                  description: |\n                    The total number of shards for the bot.\n\n                    _Note: This information is only sent to bot lists that support it._\n                  type: integer\n                  nullable: true\n                shards:\n                  description: |\n                    The server/guild count for each shard.\n\n                    _Note: This information is only sent to bot lists that support it._\n                  type: array\n                  nullable: true\n                  items:\n                    type: integer\n              additionalProperties:\n                description: Provide keys for each list ID to post to, with the value being the API key for the list.\n                type: string\n              required:\n                - server_count\n                - bot_id\n            examples:\n              bot:\n                value:\n                  server_count: 10000\n                  bot_id: \"123456789123456789\"\n                  thelist.org: abcDEFghi.JKLmnoPQR.stuVWXyz1\n                  listofbots.com: abcDEFghi.JKLmnoPQR.stuVWXyz1\n                  otherlist.xyz: abcDEFghi.JKLmnoPQR.stuVWXyz1\n              shard:\n                value:\n                  server_count: 1000\n                  bot_id: \"123456789123456789\"\n                  shard_id: 1\n                  shard_count: 10\n                  thelist.org: abcDEFghi.JKLmnoPQR.stuVWXyz1\n                  listofbots.com: abcDEFghi.JKLmnoPQR.stuVWXyz1\n                  otherlist.xyz: abcDEFghi.JKLmnoPQR.stuVWXyz1\n              shards:\n                value:\n                  server_count: 10000\n                  bot_id: \"123456789123456789\"\n                  shards: [ 800, 1100, 1200, 900, 1000, 1100, 900, 800, 1200, 1000 ]\n                  thelist.org: abcDEFghi.JKLmnoPQR.stuVWXyz1\n                  listofbots.com: abcDEFghi.JKLmnoPQR.stuVWXyz1\n                  otherlist.xyz: abcDEFghi.JKLmnoPQR.stuVWXyz1\n\n      responses:\n        \"200\":\n          description: Guild count forwarded to provided lists.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    description: Properties for each list that returned a successful response.\n                    type: object\n                    additionalProperties:\n                      type: array\n                      minItems: 3\n                      maxItems: 3\n                      items:\n                        description: Integer response status code from list, followed by string response from list, followed by JSON stringified data sent to list.\n                        oneOf:\n                          - type: string\n                          - type: integer\n                  failure:\n                    description: Properties for each list that returned a failure response.\n                    type: object\n                    additionalProperties:\n                      type: array\n                      minItems: 3\n                      maxItems: 3\n                      items:\n                        description: Integer response status code from list, followed by string response from list, followed by JSON stringified data sent to list.\n                        oneOf:\n                          - type: string\n                          - type: integer\n              examples:\n                bot:\n                  value:\n                    success:\n                      thelist.org:\n                        - 200\n                        - \"{\\\"message\\\":\\\"OK\\\"}\"\n                        - \"{\\\"server_count\\\":10000}\"\n                      listofbots.com:\n                        - 200\n                        - \"\"\n                        - \"{\\\"count\\\":10000}\"\n                    failure:\n                      otherlist.xyz:\n                        - 404\n                        - \"Bot not found\"\n                        - \"{\\\"guilds\\\":10000}\"\n\n        \"400\":\n          description: Request validation failed.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: boolean\n                    enum:\n                      - true\n                  status:\n                    type: integer\n                    enum:\n                      - 400\n                  message:\n                    description: An error message explaining why request validation failed.\n                    type: string\n              examples:\n                error:\n                  value:\n                    error: true\n                    status: 400\n                    message: \"'bot_id' must be a snowflake\"\n\n        \"429\":\n          $ref: \"#/components/responses/Ratelimit\"\n\n  /api/bots/{id}:\n    get:\n      summary: Get bot information\n      description: |\n        Fetch aggregated information about a Discord bot based on data returned by bot lists that BotBlock tracks that support getting bot information.\n\n        _Note: This ratelimit has a 1 / 30s ratelimit for successful requests. Requests that return a 400 or 429 status code are not ratelimited._\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n            format: snowflake\n          required: true\n          description: Discord bot ID to fetch\n\n      responses:\n        \"200\":\n          description: Guild count forwarded to provided lists.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    description: The ID of the bot being fetched.\n                    type: string\n                    format: snowflake\n                  username:\n                    description: |\n                      The username of the bot fetched.\n\n                      _Note: Based on the most common value returned from list data, defaults to `Unknown`._\n                    type: string\n                  discriminator:\n                    description: |\n                      The discriminator of the bot fetched.\n\n                      _Note: Based on the most common value returned from list data, defaults to `0000`._\n                    type: string\n                  owners:\n                    description: The IDs of all known owners of the bot.\n                    type: array\n                    items:\n                      type: string\n                      format: snowflake\n                  server_count:\n                    description: |\n                      The server/guild count for the bot.\n\n                      _Note: Based on the maximum value returned from list data, defaults to `0`._\n                    type: integer\n                  invite:\n                    description: |\n                      The invite URL for the bot (Discord or custom), if known.\n\n                      _Note: Based on the most common value returned from list data, defaults to an empty string._\n                    type: string\n                  prefix:\n                    description: |\n                      The command prefix for the bot, if known.\n\n                      _Note: Based on the most common value returned from list data, defaults to an empty string._\n                    type: string\n                  website:\n                    description: |\n                      The website link for the bot, if known.\n\n                      _Note: Based on the most common value returned from list data, defaults to an empty string._\n                    type: string\n                  github:\n                    description: |\n                      The open-source GitHub URL for the bot, if known.\n\n                      _Note: Based on the most common value returned from list data, defaults to an empty string._\n                    type: string\n                  support:\n                    description: |\n                      The support link for the bot (Discord or custom), if known.\n\n                      _Note: Based on the most common value returned from list data, defaults to an empty string._\n                    type: string\n                  library:\n                    description: |\n                      The library/language the bot was developed in, if known.\n\n                      _Note: Based on the most common value returned from list data, defaults to an empty string._\n                    type: string\n                  list_data:\n                    description: Response from each BotBlock-tracked list that has a endpoint for fetching bot information.\n                    type: object\n                    additionalProperties:\n                      type: array\n                      minItems: 2\n                      maxItems: 2\n                      items:\n                        description: Data response from the list (parsed JSON, or raw text respose), followed by the integer response status code.\n                        oneOf:\n                          - $ref: '#/components/schemas/AnyJSON'\n                          - type: integer\n              examples:\n                bot:\n                  value:\n                    id: \"123456789123456789\"\n                    username: My Bot\n                    discriminator: \"1234\"\n                    owners:\n                      - \"123456789123456789\"\n                    server_count: 10000\n                    invite: https://discord.com/oauth2/authorize?client_id=123456789123456789\u0026scope=bot\n                    prefix: \"!\"\n                    website: https://my-bot.com/\n                    github: https://github.com/hello/my-bot\n                    support: https://discord.gg/discord-developers\n                    library: discord.js\n                    list_data:\n                      thelist.org:\n                        - bot_id: \"123456789123456789\"\n                          ...: ...\n                        - 200\n                      listofbots.com:\n                        - bot:\n                            id: \"123456789123456789\"\n                            guilds: 10000\n                            ...: ...\n                        - 200\n                      otherlist.xyz:\n                        - Bot not found\n                        - 404\n\n        \"400\":\n          description: Request validation failed.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: boolean\n                    enum:\n                      - true\n                  status:\n                    type: integer\n                    enum:\n                      - 400\n                  message:\n                    description: An error message explaining why request validation failed.\n                    type: string\n              examples:\n                error:\n                  value:\n                    error: true\n                    status: 400\n                    message: \"'id' must be a snowflake\"\n\n        \"429\":\n          $ref: \"#/components/responses/Ratelimit\"\n\n  /api/lists:\n    get:\n      summary: Get all known bot lists\n      description: Fetch information about all bot lists that BotBlock tracks, including core information as well as API details and known features.\n      parameters:\n        - in: query\n          name: filter\n          schema:\n            type: boolean\n          description: Set to true to only return API information for each lists. Lists with no API data will be excluded from the response.\n\n      responses:\n        \"200\":\n          description: Lists tracked by BotBlock.\n          content:\n            application/json:\n              schema:\n                description: Properties for each list.\n                type: object\n                additionalProperties:\n                  $ref: \"#/components/schemas/List\"\n              examples:\n                all:\n                  value:\n                    thelist.org:\n                      id: thelist.org\n                      added: 1609459200\n                      name: The List\n                      url: https://thelist.org/\n                      icon: https://thelist.org/favicon.png\n                      language: English\n                      display: 1\n                      defunct: 0\n                      discord_only: 1\n                      description: The List\n                      api_docs: https://thelist.org/api/docs\n                      api_post: https://thelist.org/api/bot/:id\n                      api_field: server_count\n                      api_shard_id: shard_id\n                      api_shard_count: shard_count\n                      api_shards: null\n                      api_get: https://thelist.org/api/bot/:id\n                      api_all: null\n                      view_bot: https://thelist.org/bot/:id\n                      bot_widget: https://thelist.org/bot/:id/widget\n                      content: null\n                      owners: \"123456789123456789\"\n                      discord: https://discord.gg/discord-developers\n                      features:\n                        - name: Guild count API\n                          id: guild-count-api\n                          display: 5\n                          type: 0\n                          description: Has an API endpoint for guild count\n                          value: 1\n                    listofbots.com:\n                      id: listofbots.com\n                      added: 1609459200\n                      name: List of Bots\n                      url: https://listofbots.com/\n                      icon: https://listofbots.com/assets/icon.png\n                      language: English\n                      display: 1\n                      defunct: 0\n                      discord_only: 0\n                      description: List of Bots for chat platforms\n                      api_docs: null\n                      api_post: null\n                      api_field: null\n                      api_shard_id: null\n                      api_shard_count: null\n                      api_shards: null\n                      api_get: null\n                      api_all: null\n                      view_bot: https://listofbots.com/bots/:id\n                      bot_widget: null\n                      content: null\n                      owners: \"123456789123456789\"\n                      discord: https://discord.gg/discord-developers\n                      features:\n                        - name: Guild count API\n                          id: guild-count-api\n                          display: 5\n                          type: 0\n                          description: Has an API endpoint for guild count\n                          value: 0\n                filtered:\n                  value:\n                    thelist.org:\n                      api_docs: https://thelist.org/api/docs\n                      api_post: https://thelist.org/api/bot/:id\n                      api_field: server_count\n                      api_shard_id: shard_id\n                      api_shard_count: shard_count\n                      api_shards: null\n                      api_get: https://thelist.org/api/bot/:id\n                      api_all: null\n\n  /api/lists/{id}:\n    get:\n      summary: Get a specific bot list\n      description: Fetch information about a given bot lists that BotBlock tracks, including core information as well as API details and known features.\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the list on BotBlock to fetch.\n\n      responses:\n        \"200\":\n          description: Requested list on BotBlock.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/List\"\n              examples:\n                list:\n                  value:\n                    id: thelist.org\n                    added: 1609459200\n                    name: The List\n                    url: https://thelist.org/\n                    icon: https://thelist.org/favicon.png\n                    language: English\n                    display: 1\n                    defunct: 0\n                    discord_only: 1\n                    description: The List\n                    api_docs: https://thelist.org/api/docs\n                    api_post: https://thelist.org/api/bot/:id\n                    api_field: server_count\n                    api_shard_id: shard_id\n                    api_shard_count: shard_count\n                    api_shards: null\n                    api_get: https://thelist.org/api/bot/:id\n                    api_all: null\n                    view_bot: https://thelist.org/bot/:id\n                    bot_widget: https://thelist.org/bot/:id/widget\n                    content: null\n                    owners: \"123456789123456789\"\n                    discord: https://discord.gg/discord-developers\n                    features:\n                      - name: Guild count API\n                        id: guild-count-api\n                        display: 5\n                        type: 0\n                        description: Has an API endpoint for guild count\n                        value: 1\n\n        \"404\":\n          description: Requested list not found.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: boolean\n                    enum:\n                      - true\n                  status:\n                    type: integer\n                    enum:\n                      - 404\n                  message:\n                    description: An error message explaining the list wasn't found.\n                    type: string\n              examples:\n                error:\n                  value:\n                    error: true\n                    status: 404\n                    message: \"List not found\"\n\n  /api/legacy-ids:\n    get:\n      summary: Get legacy list IDs\n      description: Fetch the map of legacy bot list IDs to the current list IDs.\n\n      responses:\n        \"200\":\n          description: Map of old IDs to new IDs.\n          content:\n            application/json:\n              schema:\n                description: Object mapping legacy IDs as keys to current list IDs as values.\n                type: object\n                additionalProperties:\n                  type: string\n\n              examples:\n                map:\n                  value:\n                    oldlist.com: thelist.org\n                    botlist.xyz: botlist.com\n\ncomponents:\n  schemas:\n    AnyJSON:\n      description: Can be any JSON-able value - string, number, boolean, array or object.\n    Feature:\n      type: object\n      properties:\n        name:\n          description: The displayed name of the feature.\n          type: string\n        id:\n          description: The sluggified name of the feature.\n          type: string\n        display:\n          description: A value used to rank features. Sorted in descending order.\n          type: integer\n        type:\n          description: The type the feature is, with 0 = positive, 1 = neutral, 2 = negative.\n          type: integer\n          enum:\n            - 0\n            - 1\n            - 2\n        description:\n          description: The displayed description of the feature.\n          type: string\n    List:\n      type: object\n      properties:\n        id:\n          description: The ID of the list on BotBlock.\n          type: string\n        added:\n          description: The unix timestamp for when the list was added to BotBlock.\n          type: integer\n        name:\n          description: The displayed name of the list.\n          type: string\n        url:\n          description: The main URL to access the bot list.\n          type: string\n          format: uri\n        icon:\n          description: A URL for an icon for the list.\n          type: string\n          format: uri\n        language:\n          description: The languages the list has support for.\n          type: string\n        display:\n          description: A flag for if the list is displayed on BotBlock, with 0 = hidden, 1 = displayed.\n          type: integer\n          enum:\n            - 0\n            - 1\n        defunct:\n          description: A flag for if the list is known to be defunct, with 0 = active, 1 = defunct.\n          type: integer\n          enum:\n            - 0\n            - 1\n        discord_only:\n          description: A flag for if the list holds Discord bots only, with 0 = includes non-Discord, 1 = Discord-only.\n          type: integer\n          enum:\n            - 0\n            - 1\n        description:\n          description: The displayed description of the list.\n          type: string\n        api_docs:\n          description: The URL to the API docs for the list, if known.\n          type: string\n          format: uri\n          nullable: true\n        api_post:\n          description: The endpoint URL for posting a bot's guild count to the list, if known, with `:id` as placeholder for bot Id.\n          type: string\n          format: uri\n          nullable: true\n        api_field:\n          description: The field name for guild count when posting a bot's guild count to the list, if known.\n          type: string\n          nullable: true\n        api_shard_id:\n          description: The field name for shard Id when posting a bot's guild count to the list, if known.\n          type: string\n          nullable: true\n        api_shard_count:\n          description: The field name for shard count when posting a bot's guild count to the list, if known.\n          type: string\n          nullable: true\n        api_shards:\n          description: The field name for shards when posting a bot's guild count to the list, if known.\n          type: string\n          nullable: true\n        api_get:\n          description: The endpoint URL for getting a bot from the list, if known, with `:id` as placeholder for bot Id.\n          type: string\n          format: uri\n          nullable: true\n        api_all:\n          description: The endpoint URL for getting all bots from the list, if known.\n          type: string\n          format: uri\n          nullable: true\n        view_bot:\n          description: The URL to the view a bot on the list, if known, with `:id` as placeholder for bot Id.\n          type: string\n          format: uri\n          nullable: true\n        bot_widget:\n          description: The URL to get a bot widget from the list, if known, with `:id` as placeholder for bot Id.\n          type: string\n          format: uri\n          nullable: true\n        content:\n          description: The displayed notice content for the list, if any.\n          type: string\n          nullable: true\n        owners:\n          description: Names of the list owners, if known.\n          type: string\n          nullable: true\n        discord:\n          description: The URL invite for the list's Discord server, if known.\n          type: string\n          format: uri\n          nullable: true\n        features:\n          description: A list of features that the list has\n          type: array\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/Feature\"\n              - type: object\n                properties:\n                  value:\n                    description: A flag for if the list is known to have this feature or not, with 0 = does not have feature, 1 = has feature.\n                    type: integer\n                    enum:\n                      - 0\n                      - 1\n\n  responses:\n    Ratelimit:\n      description: Request ratelimited.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                type: boolean\n                enum:\n                  - true\n              status:\n                type: integer\n                enum:\n                  - 429\n              retry_after:\n                description: How many seconds until the API can be used again.\n                type: integer\n              ratelimit_reset:\n                description: The unix timestamp when the API can be used again.\n                type: integer\n              ratelimit_method:\n                description: Ratelimit scope - the HTTP method.\n                type: string\n              ratelimit_route:\n                description: Ratelimit scope - the API route.\n                type: string\n              ratelimit_ip:\n                description: Ratelimit scope - the requesting IP address.\n                type: string\n              ratelimit_bot_id:\n                description: Ratelimit scope - the provided bot ID.\n                type: string\n          examples:\n            error:\n              value:\n                error: true\n                status: 429\n                retry_after: 80\n                ratelimit_reset: 1609459320\n                ratelimit_method: GET\n                ratelimit_route: /api/path/name\n                ratelimit_ip: 12.45.67.89\n                ratelimit_bot_id: \"123456789123456789\"\n      headers:\n        Retry-After:\n          description: How many seconds until the API can be used again.\n          schema:\n            type: integer\n        X-Rate-Limit-Reset:\n          description: The unix timestamp when the API can be used again.\n          schema:\n            type: integer\n        X-Rate-Limit-Method:\n          description: Ratelimit scope - the HTTP method.\n          schema:\n            type: string\n        X-Rate-Limit-Route:\n          description: Ratelimit scope - the API route.\n          schema:\n            type: string\n        X-Rate-Limit-IP:\n          description: Ratelimit scope - the requesting IP address.\n          schema:\n            type: string\n        X-Rate-Limit-Bot-ID:\n          description: Ratelimit scope - the provided bot ID.\n          schema:\n            type: string\n",
			"canonicalURL": "/github.com/botblock/data@84a00abae968556bd8794cf49bb5b3b071d568d7/-/blob/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/botblock/data/blob/84a00abae968556bd8794cf49bb5b3b071d568d7/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/bots/{id}\": get: responses: 200: contents: application/json: generate schema: field list_data: item: item: oneOf: oneOf APIBotsIDGetOKListDataItemItem: variant AnyJSON: no unique fields, unable to parse without discriminator: discriminator inference not implemented",
	"NotImplemented": [
		"discriminator inference"
	]
}