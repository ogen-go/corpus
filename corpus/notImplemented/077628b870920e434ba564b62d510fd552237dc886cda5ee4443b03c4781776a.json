{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/agile-lab-dev/wasp"
		},
		"file": {
			"name": "wasp-openapi.yaml",
			"size": 0,
			"path": "documentation/wasp-openapi.yaml",
			"byteSize": 120677,
			"content": "openapi: 3.0.1\ninfo:\n  title: wasp-api\n  version: 2.27.0-436-refactor-plugin-in-order-to-allow-plugin-defined-models-SNAPSHOT\nservers:\n- url: http://localhost:2891\n  description: default development server, beware of CORS\ntags:\n- name: batchjobs\n  description: operation related to batchjobs management\n- name: pipegraphs\n  description: operation related to pipegraphs management\n- name: producers\n  description: operation related to producers management\n- name: documents\n  description: operation related to documents management\n- name: topics\n  description: operation related to topics management\n- name: indices\n  description: operation related to indices management\n- name: mlmodels\n  description: operation related to machine learning models management\n- name: configuration\n  description: operation related to configurations management\n- name: logs\n  description: operation related to logs inspection\n- name: events\n  description: operation related to events inspection\n- name: telemetry\n  description: operation related to telemetry inspection\n- name: keyvalue\n  description: operation related to keyvalue models management\n- name: raw\n  description: operation related to raw models management\n- name: stats\n  description: Statistics about logs events and metrics\n- name: editor\n  description: operation related to stateless nifi, used as editor and pipegraphs\n    creation\n- name: freeCode\n  description: operation related to free code strategy management\n- name: generic\n  description: operation related to generic models management\npaths:\n  /pipegraphs/{pipegraphname}:\n    delete:\n      tags:\n      - pipegraphs\n      description: Deletes a pipegraph\n      operationId: delete-pipegraph\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: pipegraphname\n        in: path\n        description: The name of the pipegraph to delete\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Outcome of the operation\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: string\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /freeCode/instance/{modelname}:\n    get:\n      tags:\n      - freeCode\n      description: Retrieves the models used to create a free code strategy\n      operationId: get-freeCode\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: modelname\n        in: path\n        description: The name of the freeCode model to retrieve\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Outcome of the operation\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/FreeCodeModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /keyvalue:\n    get:\n      tags:\n      - keyvalue\n      description: Retrieves all models used to write or read from KeyValue Stores\n      operationId: list-keyvalue\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          description: All key value models\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/KeyValueModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /events:\n    get:\n      tags:\n      - events\n      description: Retrieves events entries\n      operationId: events\n      parameters:\n      - name: search\n        in: query\n        required: true\n        schema:\n          type: string\n      - name: startTimestamp\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: endTimestamp\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: page\n        in: query\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: size\n        in: query\n        required: true\n        schema:\n          type: integer\n          format: int32\n      responses:\n        \"200\":\n          description: All event entries matching query\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/Events'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /generic/{modelname}:\n    get:\n      tags:\n      - generic\n      description: Retrieves the model used to write or read from Generic Stores\n      operationId: get-generic\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: modelname\n        in: path\n        description: The name of the Generic model to retrieve\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Outcome of the operation\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/GenericModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /freeCode:\n    get:\n      tags:\n      - freeCode\n      description: Retrieves the models used to create a free code strategy\n      operationId: list-freeCode\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          description: All free code strategy\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/FreeCodeModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n    post:\n      tags:\n      - freeCode\n      description: Inserts a freeCode model\n      operationId: insert-freeCode\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - name\n              - code\n              type: object\n              properties:\n                name:\n                  type: string\n                code:\n                  type: string\n              xml:\n                name: FreeCodeModel\n                namespace: java://it.agilelab.bigdata.wasp.models\n      responses:\n        \"200\":\n          description: Result of insert\n          content:\n            text/json:\n              schema:\n                oneOf:\n                - $ref: '#/components/schemas/ErrorModel'\n                - type: string\n  /producers/{producername}:\n    delete:\n      tags:\n      - producers\n      description: Deletes a producer\n      operationId: delete-producer\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: producername\n        in: path\n        description: The name of the producer to delete\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Outcome of the operation\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: string\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /producers/{producername}/start:\n    post:\n      tags:\n      - producers\n      description: Start a producer\n      operationId: start-producer\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: producername\n        in: path\n        description: The name of the producer to start\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Outcome of the producer start operation\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: string\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /stats:\n    get:\n      tags:\n      - stats\n      description: Retrieve stats about logs, events and metrics\n      operationId: stats\n      parameters:\n      - name: startTimestamp\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: endTimestamp\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: size\n        in: query\n        required: true\n        schema:\n          type: integer\n          format: int32\n      responses:\n        \"200\":\n          description: stats matching query\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/Counts'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /batchjobs/{batchjobname}/instances/{instance}:\n    get:\n      tags:\n      - batchjobs\n      description: Get a batch job instance\n      operationId: get-batch-job-instance\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: batchjobname\n        in: path\n        description: The name of the batch job to list instance for\n        required: true\n        schema:\n          type: string\n      - name: instance\n        in: path\n        description: The name of the batch job instance to list\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: The instance of the batch job\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/BatchJobInstanceModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /freeCode/complete/{position}:\n    post:\n      tags:\n      - freeCode\n      description: complete the code of a freeCode model\n      operationId: complete-freeCode\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: position\n        in: path\n        description: The position on the code to complete\n        required: true\n        schema:\n          type: integer\n          format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - code\n              type: object\n              properties:\n                code:\n                  type: string\n              xml:\n                name: FreeCode\n                namespace: java://it.agilelab.bigdata.wasp.models\n      responses:\n        \"200\":\n          description: complete the code of a freeCode model\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/CompletionModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /mlmodels/{mlmodelname}/{mlmodelversion}:\n    get:\n      tags:\n      - mlmodels\n      description: Retrieves data on a specific Machine Learning model\n      operationId: get-mlmodel\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: mlmodelname\n        in: path\n        description: The name of the ml model to retrieve\n        required: true\n        schema:\n          type: string\n      - name: mlmodelversion\n        in: path\n        description: The name of the mlmodel to retrieve\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: The instance of the MlModel\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/MlModelOnlyInfo'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n    delete:\n      tags:\n      - mlmodels\n      description: Delete a Machine learning model\n      operationId: delete-mlmodel\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: mlmodelname\n        in: path\n        description: The name of the ml model to retrieve\n        required: true\n        schema:\n          type: string\n      - name: mlmodelversion\n        in: path\n        description: The name of the mlmodel to retrieve\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: The instance of the MlModel\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: string\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /topics/{topicname}:\n    get:\n      tags:\n      - topics\n      description: Retrieves the model used to write or read from message queues\n      operationId: get-topic\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: topicname\n        in: path\n        description: The name of the topic to retrieve\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Outcome of the operation\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    oneOf:\n                    - $ref: '#/components/schemas/MultiTopicModel'\n                    - $ref: '#/components/schemas/TopicModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /pipegraphs/{pipegraphname}/stop:\n    post:\n      tags:\n      - pipegraphs\n      description: Stops the running instance of a pipegrah\n      operationId: stop-pipegraph\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: pipegraphname\n        in: path\n        description: The name of the pipegraph to stop\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Outcome of the pipegraph stop operation\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: string\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /indexes:\n    get:\n      tags:\n      - indices\n      description: Retrieve all models used to read or write indexed Data Stores\n      operationId: list-index\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          description: All indices model\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/IndexModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /mlmodels:\n    get:\n      tags:\n      - mlmodels\n      description: Retrieve all machine learning models info\n      operationId: list-mlmodel\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          description: All mlmodels\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/MlModelOnlyInfo'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n    put:\n      tags:\n      - mlmodels\n      description: Updates a machine learning model\n      operationId: update-mlmodel\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          text/json:\n            schema:\n              required:\n              - name\n              - version\n              - favorite\n              - description\n              type: object\n              properties:\n                name:\n                  type: string\n                version:\n                  type: string\n                className:\n                  type: string\n                  nullable: true\n                timestamp:\n                  type: integer\n                  format: int64\n                  nullable: true\n                modelFileId:\n                  type: string\n                  description: Should be a valid mongodb bsonobject formatted as hex\n                    string\n                  nullable: true\n                  example: 507f1f77bcf86cd799439011\n                favorite:\n                  type: boolean\n                description:\n                  type: string\n              xml:\n                name: MlModelOnlyInfo\n                namespace: java://it.agilelab.bigdata.wasp.models\n      responses:\n        \"200\":\n          description: Result of insert\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: string\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n    post:\n      tags:\n      - mlmodels\n      description: Inserts a new MlModel\n      operationId: insert-mlmodel\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          text/json:\n            schema:\n              required:\n              - name\n              - version\n              - favorite\n              - description\n              type: object\n              properties:\n                name:\n                  type: string\n                version:\n                  type: string\n                className:\n                  type: string\n                  nullable: true\n                timestamp:\n                  type: integer\n                  format: int64\n                  nullable: true\n                modelFileId:\n                  type: string\n                  description: Should be a valid mongodb bsonobject formatted as hex\n                    string\n                  nullable: true\n                  example: 507f1f77bcf86cd799439011\n                favorite:\n                  type: boolean\n                description:\n                  type: string\n              xml:\n                name: MlModelOnlyInfo\n                namespace: java://it.agilelab.bigdata.wasp.models\n      responses:\n        \"200\":\n          description: Result of insert\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: string\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /pipegraphs/{pipegraphname}/instances:\n    get:\n      tags:\n      - pipegraphs\n      description: List all instances of a pipegraph\n      operationId: list-pipegraph-instance\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: pipegraphname\n        in: path\n        description: The name of the pipegraph whose instances should be listed\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: All the instances for the requested pipegraph\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/PipegraphInstanceModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /documents:\n    get:\n      tags:\n      - documents\n      description: Retrieves all models used to write or read from Document Stores\n      operationId: list-document\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          description: All documents\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/DocumentModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /logs:\n    get:\n      tags:\n      - logs\n      description: Retrieves logs entries\n      operationId: logs\n      parameters:\n      - name: search\n        in: query\n        required: true\n        schema:\n          type: string\n      - name: startTimestamp\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: endTimestamp\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: page\n        in: query\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: size\n        in: query\n        required: true\n        schema:\n          type: integer\n          format: int32\n      responses:\n        \"200\":\n          description: All log entries matching query\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/Logs'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /telemetry/metrics:\n    get:\n      tags:\n      - telemetry\n      description: List top telemetry metrics for source matching search\n      operationId: list-telemetry-metric\n      parameters:\n      - name: search\n        in: query\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        required: true\n        schema:\n          type: string\n      - name: size\n        in: query\n        required: true\n        schema:\n          type: integer\n          format: int32\n      responses:\n        \"200\":\n          description: Top sources matching query\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/Metrics'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /topics:\n    get:\n      tags:\n      - topics\n      description: Lists all models used to write or read from message queues\n      operationId: list-topic\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          description: All topics\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: array\n                    items:\n                      oneOf:\n                      - $ref: '#/components/schemas/MultiTopicModel'\n                      - $ref: '#/components/schemas/TopicModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /pipegraphs:\n    get:\n      tags:\n      - pipegraphs\n      description: Lists all pipegraphs\n      operationId: list-pipegraph\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          description: All pipegraphs\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/PipegraphModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n    put:\n      tags:\n      - pipegraphs\n      description: updateds a pipegraph\n      operationId: update-pipegraph\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          text/json:\n            schema:\n              required:\n              - name\n              - description\n              - owner\n              - isSystem\n              - creationTime\n              - legacyStreamingComponents\n              - structuredStreamingComponents\n              - rtComponents\n              - labels\n              - enrichmentSources\n              type: object\n              properties:\n                name:\n                  type: string\n                description:\n                  type: string\n                owner:\n                  type: string\n                isSystem:\n                  type: boolean\n                creationTime:\n                  type: integer\n                  format: int64\n                legacyStreamingComponents:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/LegacyStreamingETLModel'\n                structuredStreamingComponents:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/StructuredStreamingETLModel'\n                rtComponents:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/RTModel'\n                dashboard:\n                  $ref: '#/components/schemas/DashboardModel'\n                labels:\n                  type: array\n                  items:\n                    type: string\n                enrichmentSources:\n                  $ref: '#/components/schemas/RestEnrichmentConfigModel'\n              xml:\n                name: PipegraphModel\n                namespace: java://it.agilelab.bigdata.wasp.models\n      responses:\n        \"200\":\n          description: Result of insert\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: string\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n    post:\n      tags:\n      - pipegraphs\n      description: Inserts a pipegraph\n      operationId: insert-pipegraph\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          text/json:\n            schema:\n              required:\n              - name\n              - description\n              - owner\n              - isSystem\n              - creationTime\n              - legacyStreamingComponents\n              - structuredStreamingComponents\n              - rtComponents\n              - labels\n              - enrichmentSources\n              type: object\n              properties:\n                name:\n                  type: string\n                description:\n                  type: string\n                owner:\n                  type: string\n                isSystem:\n                  type: boolean\n                creationTime:\n                  type: integer\n                  format: int64\n                legacyStreamingComponents:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/LegacyStreamingETLModel'\n                structuredStreamingComponents:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/StructuredStreamingETLModel'\n                rtComponents:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/RTModel'\n                dashboard:\n                  $ref: '#/components/schemas/DashboardModel'\n                labels:\n                  type: array\n                  items:\n                    type: string\n                enrichmentSources:\n                  $ref: '#/components/schemas/RestEnrichmentConfigModel'\n              xml:\n                name: PipegraphModel\n                namespace: java://it.agilelab.bigdata.wasp.models\n      responses:\n        \"200\":\n          description: Result of insert\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: string\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /config/sparkbatch:\n    get:\n      tags:\n      - configuration\n      description: Retrieves the configuration of the Spark Batch context\n      operationId: get-spark-batch-config\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          description: spark batch configuration\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/SparkBatchConfigModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /producers:\n    get:\n      tags:\n      - producers\n      description: Retrieves all producers\n      operationId: get-producer\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          description: All producers\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ProducerModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n    put:\n      tags:\n      - producers\n      description: Updates a new producer\n      operationId: update-producer\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          text/json:\n            schema:\n              required:\n              - name\n              - className\n              - isActive\n              - isRemote\n              - isSystem\n              type: object\n              properties:\n                name:\n                  type: string\n                className:\n                  type: string\n                topicName:\n                  type: string\n                  nullable: true\n                isActive:\n                  type: boolean\n                configuration:\n                  type: string\n                  nullable: true\n                isRemote:\n                  type: boolean\n                isSystem:\n                  type: boolean\n              xml:\n                name: ProducerModel\n                namespace: java://it.agilelab.bigdata.wasp.models\n      responses:\n        \"200\":\n          description: Result of insert\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: string\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n    post:\n      tags:\n      - producers\n      description: Inserts a producer\n      operationId: insert-producer\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          text/json:\n            schema:\n              required:\n              - name\n              - className\n              - isActive\n              - isRemote\n              - isSystem\n              type: object\n              properties:\n                name:\n                  type: string\n                className:\n                  type: string\n                topicName:\n                  type: string\n                  nullable: true\n                isActive:\n                  type: boolean\n                configuration:\n                  type: string\n                  nullable: true\n                isRemote:\n                  type: boolean\n                isSystem:\n                  type: boolean\n              xml:\n                name: ProducerModel\n                namespace: java://it.agilelab.bigdata.wasp.models\n      responses:\n        \"200\":\n          description: Result of insert\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: string\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /editor/nifi/{processGroupId}:\n    put:\n      tags:\n      - editor\n      description: Confirm that a process group edited on a editor instance it's ready\n        to be stored.\n      operationId: commit-processgroup\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: processGroupId\n        in: path\n        description: The process group id to commit\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Result of the commit and the processGroup data\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/ProcessGroupResponse'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /producers/{producername}/stop:\n    post:\n      tags:\n      - producers\n      description: Stop a producerj\n      operationId: stop-producer\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: producername\n        in: path\n        description: The name of the producer to stop\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Outcome of the producer stop operation\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: string\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /editor/nifi/{processGroupName}:\n    post:\n      tags:\n      - editor\n      description: Create a new processGroup on a stateless nifi instance with name\n        processGroupName, returns a processgroupId and the instance url.\n      operationId: new-processgroup\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: processGroupName\n        in: path\n        description: The name of the new processGroup\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: The new editor instance\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/NifiStatelessInstanceModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /batchjobs:\n    get:\n      tags:\n      - batchjobs\n      description: Lists all barch jobs\n      operationId: list-batch-job\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          description: All batch jobs\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/BatchJobModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n    put:\n      tags:\n      - batchjobs\n      description: Inserts a new batch job\n      operationId: update-batch-job\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          text/json:\n            schema:\n              required:\n              - name\n              - description\n              - owner\n              - system\n              - creationTime\n              - etl\n              - exclusivityConfig\n              type: object\n              properties:\n                name:\n                  type: string\n                description:\n                  type: string\n                owner:\n                  type: string\n                system:\n                  type: boolean\n                creationTime:\n                  type: integer\n                  format: int64\n                etl:\n                  discriminator:\n                    propertyName: type\n                  oneOf:\n                  - $ref: '#/components/schemas/BatchETLModel'\n                  - $ref: '#/components/schemas/BatchGdprETLModel'\n                exclusivityConfig:\n                  $ref: '#/components/schemas/BatchJobExclusionConfig'\n              xml:\n                name: BatchJobModel\n                namespace: java://it.agilelab.bigdata.wasp.models\n      responses:\n        \"200\":\n          description: Result of insert\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: string\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n    post:\n      tags:\n      - batchjobs\n      description: Inserts a new batch job\n      operationId: insert-batch-job\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          text/json:\n            schema:\n              required:\n              - name\n              - description\n              - owner\n              - system\n              - creationTime\n              - etl\n              - exclusivityConfig\n              type: object\n              properties:\n                name:\n                  type: string\n                description:\n                  type: string\n                owner:\n                  type: string\n                system:\n                  type: boolean\n                creationTime:\n                  type: integer\n                  format: int64\n                etl:\n                  discriminator:\n                    propertyName: type\n                  oneOf:\n                  - $ref: '#/components/schemas/BatchETLModel'\n                  - $ref: '#/components/schemas/BatchGdprETLModel'\n                exclusivityConfig:\n                  $ref: '#/components/schemas/BatchJobExclusionConfig'\n              xml:\n                name: BatchJobModel\n                namespace: java://it.agilelab.bigdata.wasp.models\n      responses:\n        \"200\":\n          description: Result of insert\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: string\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /batchjobs/{batchjobname}:\n    delete:\n      tags:\n      - batchjobs\n      description: Deletes a Batch Job\n      operationId: delete-batch-job\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: batchjobname\n        in: path\n        description: The name of the batch job to delete\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Outcome of the batch job start operation\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: string\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /editor/pipegraph/{pipegraphName}:\n    get:\n      tags:\n      - editor\n      description: Gets specific Pipegraph created by FE editor\n      operationId: select-pipegraph\n      parameters:\n      - name: pipegraphName\n        in: path\n        description: The pipegraph name to search\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Pipegraph extraction result\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/PipegraphDTO'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /pipegraphs/{pipegraphname}/start:\n    post:\n      tags:\n      - pipegraphs\n      description: Starts a new instance of pipegraph\n      operationId: start-pipegraph\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: pipegraphname\n        in: path\n        description: The name of the pipegraph to start\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Outcome of the pipegraph start operation\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: string\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /batchjobs/{batchjobname}/start:\n    post:\n      tags:\n      - batchjobs\n      description: Starts a batch job\n      operationId: start-batch-job\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: batchjobname\n        in: path\n        description: The name of the batch job to start\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Outcome of the batch job start operation\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/BatchJobStartResult'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /pipegraphs/{pipegraphname}/instances/{instance}:\n    get:\n      tags:\n      - pipegraphs\n      description: Retrieves a pipegraph instance\n      operationId: get-pipegraph-instance\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: pipegraphname\n        in: path\n        description: The name of the pipegraph to list instance for\n        required: true\n        schema:\n          type: string\n      - name: instance\n        in: path\n        description: The name of the pipegraph instance to list\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: The instance of the pipegraph\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/PipegraphInstanceModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /generic:\n    get:\n      tags:\n      - generic\n      description: Retrieves all models used to write or read from Generic Stores\n      operationId: list-generic\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          description: All Generic models\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/GenericModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /config/telemetry:\n    get:\n      tags:\n      - configuration\n      description: Retrieves the configuration of the telemetry subsystem\n      operationId: get-telemetry-config\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          description: telemetry configuration\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/TelemetryConfigModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /telemetry/sources:\n    get:\n      tags:\n      - telemetry\n      description: List top telemetry sources matching search\n      operationId: list-telemetry-source\n      parameters:\n      - name: search\n        in: query\n        required: true\n        schema:\n          type: string\n      - name: size\n        in: query\n        required: true\n        schema:\n          type: integer\n          format: int32\n      responses:\n        \"200\":\n          description: Top sources matching query\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/Sources'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /indexes/{indexname}:\n    get:\n      tags:\n      - indices\n      description: Retrieves all models used to read or write Indexed data stores\n      operationId: get-index\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: indexname\n        in: path\n        description: The name of the index model to retrieve\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Outcome of the operation\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/IndexModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /telemetry/series:\n    get:\n      tags:\n      - telemetry\n      description: Retrieves series data pre aggregated by the server for display\n      operationId: get-telemetry-series\n      parameters:\n      - name: metric\n        in: query\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        required: true\n        schema:\n          type: string\n      - name: size\n        in: query\n        description: 'The number of buckets to aggregate data in, the start and end\n          timestamp will be divided in [size] number buckets '\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: startTimestamp\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: endTimestamp\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: aggregate\n        in: query\n        required: true\n        schema:\n          $ref: '#/components/schemas/Aggregate'\n      responses:\n        \"200\":\n          description: Series data matching query\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/TelemetrySeries'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /batchjobs/{batchjobname}/instances:\n    get:\n      tags:\n      - batchjobs\n      description: Lists all instances of a batch job\n      operationId: list-batch-job-instance\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: batchjobname\n        in: path\n        description: The name of the batch job to start\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: All the instances for the requested batchjob\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/BatchJobInstanceModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /freeCode/validate:\n    post:\n      tags:\n      - freeCode\n      description: Validates a freeCode model\n      operationId: validate-freeCode\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - code\n              type: object\n              properties:\n                code:\n                  type: string\n              xml:\n                name: FreeCode\n                namespace: java://it.agilelab.bigdata.wasp.models\n      responses:\n        \"200\":\n          description: Result of validate\n          content:\n            text/json:\n              schema:\n                oneOf:\n                - $ref: '#/components/schemas/ErrorModel'\n                - type: string\n  /config/kafka:\n    get:\n      tags:\n      - configuration\n      description: Retrieves the configuration used to connect to Kafka\n      operationId: get-kafka-config\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          description: kafka configuration\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/KafkaConfigModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /editor/pipegraph:\n    get:\n      tags:\n      - editor\n      description: Gets all Pipegraphs created by FE editor\n      operationId: get-pipegraph\n      responses:\n        \"200\":\n          description: Pipegraph extraction result\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/PipegraphDTO'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n    put:\n      tags:\n      - editor\n      description: Validates and updates an existing Pipegraph generated by FE Editor\n      operationId: put-pipegraph\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          text/json:\n            schema:\n              required:\n              - name\n              - description\n              - structuredStreamingComponents\n              type: object\n              properties:\n                name:\n                  type: string\n                description:\n                  type: string\n                owner:\n                  type: string\n                  nullable: true\n                structuredStreamingComponents:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/StructuredStreamingETLDTO'\n              xml:\n                name: PipegraphDTO\n                namespace: java://it.agilelab.bigdata.wasp.models.editor\n      responses:\n        \"200\":\n          description: Successful Pipegraph update result\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: string\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n    post:\n      tags:\n      - editor\n      description: Validates and inserts a Pipegraph generated by FE Editor\n      operationId: post-pipegraph\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          text/json:\n            schema:\n              required:\n              - name\n              - description\n              - structuredStreamingComponents\n              type: object\n              properties:\n                name:\n                  type: string\n                description:\n                  type: string\n                owner:\n                  type: string\n                  nullable: true\n                structuredStreamingComponents:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/StructuredStreamingETLDTO'\n              xml:\n                name: PipegraphDTO\n                namespace: java://it.agilelab.bigdata.wasp.models.editor\n      responses:\n        \"200\":\n          description: Successful Pipegraph generation result\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: string\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /documents/{documentname}:\n    get:\n      tags:\n      - documents\n      description: Retrieves the model used to write or read from Document Stores\n      operationId: get-document\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: documentname\n        in: path\n        description: The name of the document model to retrieve\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Outcome of the operation\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/DocumentModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /config/sparkstreaming:\n    get:\n      tags:\n      - configuration\n      description: Retrieves the configuration of the Spark Streaming context\n      operationId: get-spark-streaming-config\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          description: spark streaming configuration\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/SparkStreamingConfigModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /keyvalue/{modelname}:\n    get:\n      tags:\n      - keyvalue\n      description: Retrieves the model used to write or read from KeyValue Stores\n      operationId: get-keyvalue\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: modelname\n        in: path\n        description: The name of the KeyValue model to retrieve\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Outcome of the operation\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/KeyValueModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /strategy:\n    get:\n      tags:\n      - strategy\n      description: Retrieves the possible strategies\n      operationId: list-strategies\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          description: All strategies\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: array\n                    items:\n                      type: string\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /raw/{modelname}:\n    get:\n      tags:\n      - raw\n      description: Retrieves the model used to write or read from Raw Stores\n      operationId: get-raw\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: modelname\n        in: path\n        description: The name of the Raw model to retrieve\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Outcome of the operation\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/RawModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /config/sorl:\n    get:\n      tags:\n      - configuration\n      description: Retrieves the configuration used to connect to solr\n      operationId: get-solr-config\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          description: solr configuration\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/SolrConfigModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /raw:\n    get:\n      tags:\n      - raw\n      description: Retrieves all models used to write or read from Raw Stores\n      operationId: list-raw\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          description: All key value models\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/RawModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n  /config/es:\n    get:\n      tags:\n      - configuration\n      description: Retrieves the configuration used to connect to elastic\n      operationId: get-elastic-config\n      parameters:\n      - name: pretty\n        in: query\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          description: elastic configuration\n          content:\n            text/json:\n              schema:\n                required:\n                - Result\n                - data\n                type: object\n                properties:\n                  Result:\n                    $ref: '#/components/schemas/ResultIndicator'\n                  data:\n                    $ref: '#/components/schemas/ElasticConfigModel'\n                xml:\n                  name: AngularResponse\n                  namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\ncomponents:\n  schemas:\n    RawOptions:\n      required:\n      - saveMode\n      - format\n      type: object\n      properties:\n        saveMode:\n          type: string\n        format:\n          type: string\n        extraOptions:\n          type: object\n          additionalProperties:\n            type: string\n          nullable: true\n        partitionBy:\n          type: array\n          nullable: true\n          items:\n            type: string\n      xml:\n        name: RawOptions\n        namespace: java://it.agilelab.bigdata.wasp.models\n    CountEntry:\n      required:\n      - timestamp\n      - count\n      type: object\n      properties:\n        timestamp:\n          type: string\n          format: date-time\n        count:\n          type: object\n          additionalProperties:\n            type: integer\n            format: int32\n      xml:\n        name: CountEntry\n        namespace: java://it.agilelab.bigdata.wasp.models\n    LegacyStreamingETLModel:\n      required:\n      - name\n      - inputs\n      - output\n      - mlModels\n      - kafkaAccessType\n      - group\n      - isActive\n      type: object\n      properties:\n        name:\n          type: string\n        inputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReaderModel'\n        output:\n          $ref: '#/components/schemas/WriterModel'\n        mlModels:\n          type: array\n          items:\n            $ref: '#/components/schemas/MlModelOnlyInfo'\n        strategy:\n          $ref: '#/components/schemas/StrategyModel'\n        kafkaAccessType:\n          type: string\n        group:\n          type: string\n        isActive:\n          type: boolean\n      xml:\n        name: LegacyStreamingETLModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    Sources:\n      required:\n      - found\n      - entries\n      type: object\n      properties:\n        found:\n          type: integer\n          format: int64\n        entries:\n          type: array\n          items:\n            $ref: '#/components/schemas/SourceEntry'\n      xml:\n        name: Sources\n        namespace: java://it.agilelab.bigdata.wasp.models\n    RawModelDTO:\n      required:\n      - name\n      type: object\n      properties:\n        name:\n          type: string\n        config:\n          $ref: '#/components/schemas/RawModel'\n      xml:\n        name: RawModelDTO\n        namespace: java://it.agilelab.bigdata.wasp.models.editor\n    GenericOptions:\n      type: object\n      properties:\n        options:\n          type: object\n          additionalProperties:\n            type: string\n          nullable: true\n      xml:\n        name: GenericOptions\n        namespace: java://it.agilelab.bigdata.wasp.models\n    CompletionModel:\n      required:\n      - toComplete\n      - info\n      type: object\n      properties:\n        toComplete:\n          type: string\n        info:\n          type: string\n      xml:\n        name: CompletionModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    BatchJobModel:\n      required:\n      - name\n      - description\n      - owner\n      - system\n      - creationTime\n      - etl\n      - exclusivityConfig\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        owner:\n          type: string\n        system:\n          type: boolean\n        creationTime:\n          type: integer\n          format: int64\n        etl:\n          discriminator:\n            propertyName: type\n          oneOf:\n          - $ref: '#/components/schemas/BatchETLModel'\n          - $ref: '#/components/schemas/BatchGdprETLModel'\n        exclusivityConfig:\n          $ref: '#/components/schemas/BatchJobExclusionConfig'\n      xml:\n        name: BatchJobModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    WriterModelDTO:\n      required:\n      - name\n      - datastoreModel\n      - options\n      type: object\n      properties:\n        name:\n          type: string\n        datastoreModel:\n          discriminator:\n            propertyName: modelType\n          oneOf:\n          - $ref: '#/components/schemas/TopicModelDTO'\n          - $ref: '#/components/schemas/IndexModelDTO'\n          - $ref: '#/components/schemas/KeyValueModelDTO'\n          - $ref: '#/components/schemas/RawModelDTO'\n        options:\n          type: object\n          additionalProperties:\n            type: string\n      xml:\n        name: WriterModelDTO\n        namespace: java://it.agilelab.bigdata.wasp.models.editor\n    FreeCodeModel:\n      required:\n      - name\n      - code\n      type: object\n      properties:\n        name:\n          type: string\n        code:\n          type: string\n      xml:\n        name: FreeCodeModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    KeyValueModel:\n      required:\n      - name\n      - tableCatalog\n      - useAvroSchemaManager\n      type: object\n      properties:\n        name:\n          type: string\n        tableCatalog:\n          type: string\n        dataFrameSchema:\n          type: string\n          nullable: true\n        options:\n          type: array\n          nullable: true\n          items:\n            $ref: '#/components/schemas/KeyValueOption'\n        useAvroSchemaManager:\n          type: boolean\n        avroSchemas:\n          type: object\n          additionalProperties:\n            type: string\n          nullable: true\n      xml:\n        name: KeyValueModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    RawDataStoreConf:\n      required:\n      - inputKeyColumn\n      - correlationIdColumn\n      - rawModel\n      - rawMatchingStrategy\n      - partitionPruningStrategy\n      - missingPathFailure\n      type: object\n      properties:\n        inputKeyColumn:\n          type: string\n        correlationIdColumn:\n          type: string\n        rawModel:\n          $ref: '#/components/schemas/RawModel'\n        rawMatchingStrategy:\n          discriminator:\n            propertyName: type\n          oneOf:\n          - $ref: '#/components/schemas/ExactRawMatchingStrategy'\n          - $ref: '#/components/schemas/PrefixRawMatchingStrategy'\n          - $ref: '#/components/schemas/ContainsRawMatchingStrategy'\n        partitionPruningStrategy:\n          discriminator:\n            propertyName: type\n          oneOf:\n          - $ref: '#/components/schemas/ExactKeyValueMatchingStrategy'\n          - $ref: '#/components/schemas/TimeBasedBetweenPartitionPruningStrategy'\n        missingPathFailure:\n          type: boolean\n      xml:\n        name: RawDataStoreConf\n        namespace: java://it.agilelab.bigdata.wasp.models\n    DashboardModel:\n      required:\n      - url\n      - needsFilterBox\n      type: object\n      properties:\n        url:\n          type: string\n        needsFilterBox:\n          type: boolean\n      nullable: true\n      xml:\n        name: DashboardModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    NifiStatelessInstanceModel:\n      required:\n      - name\n      - url\n      - processGroupId\n      type: object\n      properties:\n        name:\n          type: string\n        url:\n          type: string\n        processGroupId:\n          type: string\n      xml:\n        name: NifiStatelessInstanceModel\n        namespace: java://it.agilelab.bigdata.wasp.models.editor\n    StrategyClassDTO:\n      required:\n      - className\n      type: object\n      properties:\n        className:\n          type: string\n        config:\n          type: string\n          nullable: true\n      xml:\n        name: StrategyClassDTO\n        namespace: java://it.agilelab.bigdata.wasp.models.editor\n    MultiTopicModel:\n      required:\n      - name\n      - topicNameField\n      - topicModelNames\n      type: object\n      properties:\n        name:\n          type: string\n        topicNameField:\n          type: string\n        topicModelNames:\n          type: array\n          items:\n            type: string\n      xml:\n        name: MultiTopicModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    EventEntry:\n      required:\n      - eventType\n      - eventId\n      - severity\n      - payload\n      - timestamp\n      - source\n      - sourceId\n      - eventRuleName\n      type: object\n      properties:\n        eventType:\n          type: string\n        eventId:\n          type: string\n        severity:\n          type: string\n        payload:\n          type: string\n        timestamp:\n          type: string\n          format: date-time\n        source:\n          type: string\n        sourceId:\n          type: string\n        eventRuleName:\n          type: string\n      xml:\n        name: EventEntry\n        namespace: java://it.agilelab.bigdata.wasp.models\n    BatchJobInstanceModel:\n      required:\n      - name\n      - instanceOf\n      - startTimestamp\n      - currentStatusTimestamp\n      - status\n      - restConfig\n      type: object\n      properties:\n        name:\n          type: string\n        instanceOf:\n          type: string\n        startTimestamp:\n          type: integer\n          format: int64\n        currentStatusTimestamp:\n          type: integer\n          format: int64\n        status:\n          $ref: '#/components/schemas/JobStatus'\n        restConfig:\n          type: object\n        error:\n          type: string\n          nullable: true\n      xml:\n        name: BatchJobInstanceModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    KafkaEntryConfig:\n      required:\n      - key\n      - value\n      type: object\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n      xml:\n        name: KafkaEntryConfig\n        namespace: java://it.agilelab.bigdata.wasp.models.configuration\n    GenericModel:\n      required:\n      - name\n      - kind\n      - value\n      - options\n      type: object\n      properties:\n        name:\n          type: string\n        kind:\n          type: string\n        value:\n          $ref: '#/components/schemas/BsonDocument'\n        options:\n          $ref: '#/components/schemas/GenericOptions'\n      xml:\n        name: GenericModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    SubjectStrategyEnum:\n      type: string\n      enum:\n      - none\n      - topic\n      - record\n      - topic-and-record\n    DocumentModel:\n      required:\n      - name\n      - connectionString\n      - schema\n      type: object\n      properties:\n        name:\n          type: string\n        connectionString:\n          type: string\n        schema:\n          type: string\n      xml:\n        name: DocumentModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    Metrics:\n      required:\n      - found\n      - entries\n      type: object\n      properties:\n        found:\n          type: integer\n          format: int64\n        entries:\n          type: array\n          items:\n            $ref: '#/components/schemas/MetricEntry'\n      xml:\n        name: Metrics\n        namespace: java://it.agilelab.bigdata.wasp.models\n    IndexModelDTO:\n      required:\n      - name\n      type: object\n      properties:\n        name:\n          type: string\n      xml:\n        name: IndexModelDTO\n        namespace: java://it.agilelab.bigdata.wasp.models.editor\n    RawModel:\n      required:\n      - name\n      - uri\n      - timed\n      - schema\n      - options\n      type: object\n      properties:\n        name:\n          type: string\n        uri:\n          type: string\n        timed:\n          type: boolean\n        schema:\n          type: string\n        options:\n          $ref: '#/components/schemas/RawOptions'\n      nullable: true\n      xml:\n        name: RawModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    JMXTelemetryConfigModel:\n      required:\n      - query\n      - metricGroupAttribute\n      - sourceIdAttribute\n      - metricGroupFallback\n      - sourceIdFallback\n      type: object\n      properties:\n        query:\n          type: string\n        metricGroupAttribute:\n          type: string\n        sourceIdAttribute:\n          type: string\n        metricGroupFallback:\n          type: string\n        sourceIdFallback:\n          type: string\n      xml:\n        name: JMXTelemetryConfigModel\n        namespace: java://it.agilelab.bigdata.wasp.models.configuration\n    SparkDriverConfig:\n      required:\n      - submitDeployMode\n      - cores\n      - memory\n      - host\n      - bindAddress\n      - port\n      - killDriverProcessIfSparkContextStops\n      type: object\n      properties:\n        submitDeployMode:\n          type: string\n        cores:\n          type: integer\n          format: int32\n        memory:\n          type: string\n        host:\n          type: string\n        bindAddress:\n          type: string\n        port:\n          type: integer\n          format: int32\n        killDriverProcessIfSparkContextStops:\n          type: boolean\n      xml:\n        name: SparkDriverConfig\n        namespace: java://it.agilelab.bigdata.wasp.models.configuration\n    PipegraphInstanceModel:\n      required:\n      - name\n      - instanceOf\n      - startTimestamp\n      - currentStatusTimestamp\n      - status\n      type: object\n      properties:\n        name:\n          type: string\n        instanceOf:\n          type: string\n        startTimestamp:\n          type: integer\n          format: int64\n        currentStatusTimestamp:\n          type: integer\n          format: int64\n        status:\n          $ref: '#/components/schemas/PipegraphStatus'\n        executedByNode:\n          type: string\n          nullable: true\n        peerActor:\n          type: string\n          nullable: true\n        error:\n          type: string\n          nullable: true\n      xml:\n        name: PipegraphInstanceModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    ContainsRawMatchingStrategy:\n      required:\n      - dataframeKeyMatchingExpression\n      type: object\n      properties:\n        dataframeKeyMatchingExpression:\n          type: string\n      xml:\n        name: ContainsRawMatchingStrategy\n        namespace: java://it.agilelab.bigdata.wasp.models\n    ReaderModelDTO:\n      required:\n      - name\n      - datastoreModel\n      - options\n      type: object\n      properties:\n        name:\n          type: string\n        datastoreModel:\n          discriminator:\n            propertyName: modelType\n          oneOf:\n          - $ref: '#/components/schemas/TopicModelDTO'\n          - $ref: '#/components/schemas/IndexModelDTO'\n          - $ref: '#/components/schemas/KeyValueModelDTO'\n          - $ref: '#/components/schemas/RawModelDTO'\n        options:\n          type: object\n          additionalProperties:\n            type: string\n        rateLimit:\n          type: integer\n          format: int32\n          nullable: true\n      xml:\n        name: ReaderModelDTO\n        namespace: java://it.agilelab.bigdata.wasp.models.editor\n    SparkEntryConfig:\n      required:\n      - key\n      - value\n      type: object\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n      xml:\n        name: SparkEntryConfig\n        namespace: java://it.agilelab.bigdata.wasp.models.configuration\n    StrategyModel:\n      required:\n      - className\n      type: object\n      properties:\n        className:\n          type: string\n        configuration:\n          type: string\n          nullable: true\n      nullable: true\n      xml:\n        name: StrategyModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    PipegraphDTO:\n      required:\n      - name\n      - description\n      - structuredStreamingComponents\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        owner:\n          type: string\n          nullable: true\n        structuredStreamingComponents:\n          type: array\n          items:\n            $ref: '#/components/schemas/StructuredStreamingETLDTO'\n      xml:\n        name: PipegraphDTO\n        namespace: java://it.agilelab.bigdata.wasp.models.editor\n    ResultIndicator:\n      type: string\n      enum:\n      - OK\n      - KO\n    BatchGdprETLModel:\n      required:\n      - name\n      - dataStores\n      - strategyConfig\n      - inputs\n      - output\n      - group\n      - isActive\n      type: object\n      properties:\n        name:\n          type: string\n        dataStores:\n          type: array\n          items:\n            discriminator:\n              propertyName: type\n            oneOf:\n            - $ref: '#/components/schemas/RawDataStoreConf'\n            - $ref: '#/components/schemas/KeyValueDataStoreConf'\n        strategyConfig:\n          type: string\n        inputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReaderModel'\n        output:\n          $ref: '#/components/schemas/WriterModel'\n        group:\n          type: string\n        isActive:\n          type: boolean\n        type:\n          type: string\n      xml:\n        name: BatchGdprETLModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    TopicCompressionEnum:\n      type: string\n      enum:\n      - disabled\n      - gzip\n      - snappy\n      - lz4\n    Counts:\n      required:\n      - logs\n      - telemetry\n      - events\n      type: object\n      properties:\n        logs:\n          type: array\n          items:\n            $ref: '#/components/schemas/CountEntry'\n        telemetry:\n          type: array\n          items:\n            $ref: '#/components/schemas/CountEntry'\n        events:\n          type: array\n          items:\n            $ref: '#/components/schemas/CountEntry'\n      xml:\n        name: Counts\n        namespace: java://it.agilelab.bigdata.wasp.models\n    NifiStatelessConfigModel:\n      required:\n      - bootstrapJars\n      - systemJars\n      - statelessJars\n      - extensions\n      type: object\n      properties:\n        bootstrapJars:\n          type: string\n        systemJars:\n          type: string\n        statelessJars:\n          type: string\n        extensions:\n          type: string\n      nullable: true\n      xml:\n        name: NifiStatelessConfigModel\n        namespace: java://it.agilelab.bigdata.wasp.models.configuration\n    MlModelOnlyInfo:\n      required:\n      - name\n      - version\n      - favorite\n      - description\n      type: object\n      properties:\n        name:\n          type: string\n        version:\n          type: string\n        className:\n          type: string\n          nullable: true\n        timestamp:\n          type: integer\n          format: int64\n          nullable: true\n        modelFileId:\n          type: string\n          description: Should be a valid mongodb bsonobject formatted as hex string\n          nullable: true\n          example: 507f1f77bcf86cd799439011\n        favorite:\n          type: boolean\n        description:\n          type: string\n      xml:\n        name: MlModelOnlyInfo\n        namespace: java://it.agilelab.bigdata.wasp.models\n    SparkBatchConfigModel:\n      required:\n      - appName\n      - master\n      - driver\n      - executorCores\n      - executorMemory\n      - coresMax\n      - executorInstances\n      - additionalJarsPath\n      - yarnJar\n      - blockManagerPort\n      - retained\n      - kryoSerializer\n      - others\n      - name\n      type: object\n      properties:\n        appName:\n          type: string\n        master:\n          $ref: '#/components/schemas/ConnectionConfig'\n        driver:\n          $ref: '#/components/schemas/SparkDriverConfig'\n        executorCores:\n          type: integer\n          format: int32\n        executorMemory:\n          type: string\n        coresMax:\n          type: integer\n          format: int32\n        executorInstances:\n          type: integer\n          format: int32\n        additionalJarsPath:\n          type: string\n        yarnJar:\n          type: string\n        blockManagerPort:\n          type: integer\n          format: int32\n        retained:\n          $ref: '#/components/schemas/RetainedConfigModel'\n        kryoSerializer:\n          $ref: '#/components/schemas/KryoSerializerConfig'\n        others:\n          type: array\n          items:\n            $ref: '#/components/schemas/SparkEntryConfig'\n        name:\n          type: string\n      xml:\n        name: SparkBatchConfigModel\n        namespace: java://it.agilelab.bigdata.wasp.models.configuration\n    Logs:\n      required:\n      - found\n      - entries\n      type: object\n      properties:\n        found:\n          type: integer\n          format: int64\n        entries:\n          type: array\n          items:\n            $ref: '#/components/schemas/LogEntry'\n      xml:\n        name: Logs\n        namespace: java://it.agilelab.bigdata.wasp.models\n    JobStatus:\n      type: string\n      enum:\n      - PENDING\n      - PROCESSING\n      - SUCCESSFUL\n      - FAILED\n      - STOPPED\n    KryoSerializerConfig:\n      required:\n      - enabled\n      - registrators\n      - strict\n      type: object\n      properties:\n        enabled:\n          type: boolean\n        registrators:\n          type: string\n        strict:\n          type: boolean\n      xml:\n        name: KryoSerializerConfig\n        namespace: java://it.agilelab.bigdata.wasp.models.configuration\n    StructuredStreamingETLDTO:\n      required:\n      - name\n      - group\n      - streamingInput\n      - streamingOutput\n      - strategy\n      - options\n      type: object\n      properties:\n        name:\n          type: string\n        group:\n          type: string\n        streamingInput:\n          $ref: '#/components/schemas/ReaderModelDTO'\n        streamingOutput:\n          $ref: '#/components/schemas/WriterModelDTO'\n        strategy:\n          discriminator:\n            propertyName: strategyType\n          oneOf:\n          - $ref: '#/components/schemas/FreeCodeDTO'\n          - $ref: '#/components/schemas/FlowNifiDTO'\n          - $ref: '#/components/schemas/StrategyClassDTO'\n        triggerIntervalMs:\n          type: integer\n          format: int64\n          nullable: true\n        options:\n          type: object\n          additionalProperties:\n            type: string\n      xml:\n        name: StructuredStreamingETLDTO\n        namespace: java://it.agilelab.bigdata.wasp.models.editor\n    WriterModel:\n      required:\n      - name\n      - datastoreModelName\n      - datastoreProduct\n      - options\n      type: object\n      properties:\n        name:\n          type: string\n        datastoreModelName:\n          type: string\n        datastoreProduct:\n          type: string\n        options:\n          type: object\n          additionalProperties:\n            type: string\n      nullable: true\n      xml:\n        name: WriterModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    PipegraphModel:\n      required:\n      - name\n      - description\n      - owner\n      - isSystem\n      - creationTime\n      - legacyStreamingComponents\n      - structuredStreamingComponents\n      - rtComponents\n      - labels\n      - enrichmentSources\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        owner:\n          type: string\n        isSystem:\n          type: boolean\n        creationTime:\n          type: integer\n          format: int64\n        legacyStreamingComponents:\n          type: array\n          items:\n            $ref: '#/components/schemas/LegacyStreamingETLModel'\n        structuredStreamingComponents:\n          type: array\n          items:\n            $ref: '#/components/schemas/StructuredStreamingETLModel'\n        rtComponents:\n          type: array\n          items:\n            $ref: '#/components/schemas/RTModel'\n        dashboard:\n          $ref: '#/components/schemas/DashboardModel'\n        labels:\n          type: array\n          items:\n            type: string\n        enrichmentSources:\n          $ref: '#/components/schemas/RestEnrichmentConfigModel'\n      xml:\n        name: PipegraphModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    TimeBasedBetweenPartitionPruningStrategy:\n      required:\n      - columnName\n      - isDateNumeric\n      - pattern\n      - granularity\n      type: object\n      properties:\n        columnName:\n          type: string\n        isDateNumeric:\n          type: boolean\n        pattern:\n          type: string\n        granularity:\n          type: string\n      xml:\n        name: TimeBasedBetweenPartitionPruningStrategy\n        namespace: java://it.agilelab.bigdata.wasp.models\n    ConnectionConfig:\n      required:\n      - protocol\n      - host\n      - port\n      type: object\n      properties:\n        protocol:\n          type: string\n        host:\n          type: string\n        port:\n          type: integer\n          format: int32\n        timeout:\n          type: integer\n          format: int64\n          nullable: true\n        metadata:\n          type: object\n          additionalProperties:\n            type: string\n          nullable: true\n      xml:\n        name: ConnectionConfig\n        namespace: java://it.agilelab.bigdata.wasp.models.configuration\n    SparkStreamingConfigModel:\n      required:\n      - appName\n      - master\n      - driver\n      - executorCores\n      - executorMemory\n      - coresMax\n      - executorInstances\n      - additionalJarsPath\n      - yarnJar\n      - blockManagerPort\n      - retained\n      - kryoSerializer\n      - streamingBatchIntervalMs\n      - checkpointDir\n      - others\n      - schedulingStrategy\n      - name\n      type: object\n      properties:\n        appName:\n          type: string\n        master:\n          $ref: '#/components/schemas/ConnectionConfig'\n        driver:\n          $ref: '#/components/schemas/SparkDriverConfig'\n        executorCores:\n          type: integer\n          format: int32\n        executorMemory:\n          type: string\n        coresMax:\n          type: integer\n          format: int32\n        executorInstances:\n          type: integer\n          format: int32\n        additionalJarsPath:\n          type: string\n        yarnJar:\n          type: string\n        blockManagerPort:\n          type: integer\n          format: int32\n        retained:\n          $ref: '#/components/schemas/RetainedConfigModel'\n        kryoSerializer:\n          $ref: '#/components/schemas/KryoSerializerConfig'\n        streamingBatchIntervalMs:\n          type: integer\n          format: int32\n        checkpointDir:\n          type: string\n        triggerIntervalMs:\n          type: integer\n          format: int64\n          nullable: true\n        others:\n          type: array\n          items:\n            $ref: '#/components/schemas/SparkEntryConfig'\n        nifiStateless:\n          $ref: '#/components/schemas/NifiStatelessConfigModel'\n        schedulingStrategy:\n          $ref: '#/components/schemas/SchedulingStrategyConfigModel'\n        name:\n          type: string\n      xml:\n        name: SparkStreamingConfigModel\n        namespace: java://it.agilelab.bigdata.wasp.models.configuration\n    KeyValueDataStoreConf:\n      required:\n      - inputKeyColumn\n      - correlationIdColumn\n      - keyValueModel\n      - keyValueMatchingStrategy\n      type: object\n      properties:\n        inputKeyColumn:\n          type: string\n        correlationIdColumn:\n          type: string\n        keyValueModel:\n          $ref: '#/components/schemas/KeyValueModel'\n        keyValueMatchingStrategy:\n          discriminator:\n            propertyName: type\n          oneOf:\n          - $ref: '#/components/schemas/ExactKeyValueMatchingStrategy'\n          - $ref: '#/components/schemas/PrefixAndTimeBoundKeyValueMatchingStrategy'\n          - $ref: '#/components/schemas/PrefixKeyValueMatchingStrategy'\n      xml:\n        name: KeyValueDataStoreConf\n        namespace: java://it.agilelab.bigdata.wasp.models\n    StructuredStreamingETLModel:\n      required:\n      - name\n      - group\n      - streamingInput\n      - staticInputs\n      - streamingOutput\n      - mlModels\n      - options\n      type: object\n      properties:\n        name:\n          type: string\n        group:\n          type: string\n        streamingInput:\n          $ref: '#/components/schemas/StreamingReaderModel'\n        staticInputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReaderModel'\n        streamingOutput:\n          $ref: '#/components/schemas/WriterModel'\n        mlModels:\n          type: array\n          items:\n            $ref: '#/components/schemas/MlModelOnlyInfo'\n        strategy:\n          $ref: '#/components/schemas/StrategyModel'\n        triggerIntervalMs:\n          type: integer\n          format: int64\n          nullable: true\n        options:\n          type: object\n          additionalProperties:\n            type: string\n      xml:\n        name: StructuredStreamingETLModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    SchedulingStrategyConfigModel:\n      required:\n      - factoryClass\n      - factoryParams\n      type: object\n      properties:\n        factoryClass:\n          type: string\n        factoryParams:\n          type: object\n          additionalProperties:\n            type: string\n      xml:\n        name: SchedulingStrategyConfigModel\n        namespace: java://it.agilelab.bigdata.wasp.models.configuration\n    PrefixKeyValueMatchingStrategy:\n      type: object\n    LogEntry:\n      required:\n      - log_source\n      - log_level\n      - message\n      - timestamp\n      - thread\n      type: object\n      properties:\n        log_source:\n          type: string\n        log_level:\n          type: string\n        message:\n          type: string\n        timestamp:\n          type: string\n          format: date-time\n        thread:\n          type: string\n        cause:\n          type: string\n          nullable: true\n        stacktrace:\n          type: string\n          nullable: true\n      xml:\n        name: LogEntry\n        namespace: java://it.agilelab.bigdata.wasp.models\n    RestEnrichmentConfigModel:\n      required:\n      - sources\n      type: object\n      properties:\n        sources:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/RestEnrichmentSource'\n      xml:\n        name: RestEnrichmentConfigModel\n        namespace: java://it.agilelab.bigdata.wasp.models.configuration\n    BatchJobStartResult:\n      required:\n      - startResult\n      - instance\n      type: object\n      properties:\n        startResult:\n          type: string\n        instance:\n          type: string\n      xml:\n        name: BatchJobStartResult\n        namespace: java://it.agilelab.bigdata.wasp.master.web.openapi\n    SourceEntry:\n      required:\n      - name\n      type: object\n      properties:\n        name:\n          type: string\n      xml:\n        name: SourceEntry\n        namespace: java://it.agilelab.bigdata.wasp.models\n    ProcessGroupResponse:\n      required:\n      - id\n      - content\n      type: object\n      properties:\n        id:\n          type: string\n        content:\n          $ref: '#/components/schemas/JObject'\n      xml:\n        name: ProcessGroupResponse\n        namespace: java://it.agilelab.bigdata.wasp.models.editor\n    BsonDocument:\n      type: object\n    ElasticConfigModel:\n      required:\n      - connections\n      - name\n      type: object\n      properties:\n        connections:\n          type: array\n          items:\n            $ref: '#/components/schemas/ConnectionConfig'\n        name:\n          type: string\n      xml:\n        name: ElasticConfigModel\n        namespace: java://it.agilelab.bigdata.wasp.models.configuration\n    ErrorModel:\n      required:\n      - fileName\n      - where\n      - errorType\n      - msg\n      - content\n      - indicator\n      type: object\n      properties:\n        fileName:\n          type: string\n        where:\n          type: string\n        errorType:\n          type: string\n        msg:\n          type: string\n        content:\n          type: string\n        indicator:\n          type: string\n      xml:\n        name: ErrorModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    PrefixAndTimeBoundKeyValueMatchingStrategy:\n      required:\n      - separator\n      - pattern\n      - locale\n      type: object\n      properties:\n        separator:\n          type: string\n        pattern:\n          type: string\n        locale:\n          type: string\n      xml:\n        name: PrefixAndTimeBoundKeyValueMatchingStrategy\n        namespace: java://it.agilelab.bigdata.wasp.models\n    JObject:\n      type: object\n      xml:\n        name: JObject\n        namespace: java://org.json4s\n    ReaderModel:\n      required:\n      - name\n      - datastoreModelName\n      - datastoreProduct\n      - options\n      type: object\n      properties:\n        name:\n          type: string\n        datastoreModelName:\n          type: string\n        datastoreProduct:\n          type: string\n        options:\n          type: object\n          additionalProperties:\n            type: string\n      xml:\n        name: ReaderModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    PrefixRawMatchingStrategy:\n      required:\n      - dataframeKeyMatchingExpression\n      type: object\n      properties:\n        dataframeKeyMatchingExpression:\n          type: string\n      xml:\n        name: PrefixRawMatchingStrategy\n        namespace: java://it.agilelab.bigdata.wasp.models\n    MetricEntry:\n      required:\n      - source\n      - name\n      type: object\n      properties:\n        source:\n          $ref: '#/components/schemas/SourceEntry'\n        name:\n          type: string\n      xml:\n        name: MetricEntry\n        namespace: java://it.agilelab.bigdata.wasp.models\n    IndexModel:\n      required:\n      - name\n      - creationTime\n      - rollingIndex\n      - options\n      type: object\n      properties:\n        name:\n          type: string\n        creationTime:\n          type: integer\n          format: int64\n        schema:\n          type: string\n          nullable: true\n        query:\n          type: string\n          nullable: true\n        numShards:\n          type: integer\n          format: int32\n          nullable: true\n        replicationFactor:\n          type: integer\n          format: int32\n          nullable: true\n        rollingIndex:\n          type: boolean\n        idField:\n          type: string\n          nullable: true\n        options:\n          type: object\n          additionalProperties:\n            type: string\n      xml:\n        name: IndexModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    KafkaConfigModel:\n      required:\n      - connections\n      - ingest_rate\n      - zookeeperConnections\n      - broker_id\n      - partitioner_fqcn\n      - default_encoder\n      - key_encoder_fqcn\n      - encoder_fqcn\n      - decoder_fqcn\n      - batch_send_size\n      - acks\n      - others\n      - name\n      type: object\n      properties:\n        connections:\n          type: array\n          items:\n            $ref: '#/components/schemas/ConnectionConfig'\n        ingest_rate:\n          type: string\n        zookeeperConnections:\n          $ref: '#/components/schemas/ZookeeperConnectionsConfig'\n        broker_id:\n          type: string\n        partitioner_fqcn:\n          type: string\n        default_encoder:\n          type: string\n        key_encoder_fqcn:\n          type: string\n        encoder_fqcn:\n          type: string\n        decoder_fqcn:\n          type: string\n        batch_send_size:\n          type: integer\n          format: int32\n        acks:\n          type: string\n        others:\n          type: array\n          items:\n            $ref: '#/components/schemas/KafkaEntryConfig'\n        name:\n          type: string\n      xml:\n        name: KafkaConfigModel\n        namespace: java://it.agilelab.bigdata.wasp.models.configuration\n    RetainedConfigModel:\n      required:\n      - retainedStagesJobs\n      - retainedTasks\n      - retainedJobs\n      - retainedExecutions\n      - retainedBatches\n      type: object\n      properties:\n        retainedStagesJobs:\n          type: integer\n          format: int32\n        retainedTasks:\n          type: integer\n          format: int32\n        retainedJobs:\n          type: integer\n          format: int32\n        retainedExecutions:\n          type: integer\n          format: int32\n        retainedBatches:\n          type: integer\n          format: int32\n      xml:\n        name: RetainedConfigModel\n        namespace: java://it.agilelab.bigdata.wasp.models.configuration\n    FreeCodeDTO:\n      required:\n      - code\n      - name\n      type: object\n      properties:\n        code:\n          type: string\n        name:\n          type: string\n        config:\n          type: string\n          nullable: true\n      xml:\n        name: FreeCodeDTO\n        namespace: java://it.agilelab.bigdata.wasp.models.editor\n    TopicModel:\n      required:\n      - name\n      - creationTime\n      - partitions\n      - replicas\n      - topicDataType\n      - useAvroSchemaManager\n      - schema\n      - topicCompression\n      - subjectStrategy\n      type: object\n      properties:\n        name:\n          type: string\n        creationTime:\n          type: integer\n          format: int64\n        partitions:\n          type: integer\n          format: int32\n        replicas:\n          type: integer\n          format: int32\n        topicDataType:\n          type: string\n        keyFieldName:\n          type: string\n          nullable: true\n        headersFieldName:\n          type: string\n          nullable: true\n        valueFieldsNames:\n          type: array\n          nullable: true\n          items:\n            type: string\n        useAvroSchemaManager:\n          type: boolean\n        schema:\n          $ref: '#/components/schemas/BsonDocument'\n        topicCompression:\n          $ref: '#/components/schemas/TopicCompressionEnum'\n        subjectStrategy:\n          $ref: '#/components/schemas/SubjectStrategyEnum'\n        keySchema:\n          type: string\n          nullable: true\n      xml:\n        name: TopicModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    BatchETLModel:\n      required:\n      - name\n      - inputs\n      - output\n      - mlModels\n      - kafkaAccessType\n      - group\n      - isActive\n      type: object\n      properties:\n        name:\n          type: string\n        inputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReaderModel'\n        output:\n          $ref: '#/components/schemas/WriterModel'\n        mlModels:\n          type: array\n          items:\n            $ref: '#/components/schemas/MlModelOnlyInfo'\n        strategy:\n          $ref: '#/components/schemas/StrategyModel'\n        kafkaAccessType:\n          type: string\n        group:\n          type: string\n        isActive:\n          type: boolean\n        type:\n          type: string\n      xml:\n        name: BatchETLModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    BatchJobExclusionConfig:\n      required:\n      - isFullyExclusive\n      - restConfigExclusiveParams\n      type: object\n      properties:\n        isFullyExclusive:\n          type: boolean\n        restConfigExclusiveParams:\n          type: array\n          items:\n            type: string\n      xml:\n        name: BatchJobExclusionConfig\n        namespace: java://it.agilelab.bigdata.wasp.models\n    SolrConfigModel:\n      required:\n      - zookeeperConnections\n      - name\n      type: object\n      properties:\n        zookeeperConnections:\n          $ref: '#/components/schemas/ZookeeperConnectionsConfig'\n        name:\n          type: string\n      xml:\n        name: SolrConfigModel\n        namespace: java://it.agilelab.bigdata.wasp.models.configuration\n    RTModel:\n      required:\n      - name\n      - inputs\n      - isActive\n      type: object\n      properties:\n        name:\n          type: string\n        inputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReaderModel'\n        isActive:\n          type: boolean\n        strategy:\n          $ref: '#/components/schemas/StrategyModel'\n        endpoint:\n          $ref: '#/components/schemas/WriterModel'\n      xml:\n        name: RTModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    Events:\n      required:\n      - found\n      - entries\n      type: object\n      properties:\n        found:\n          type: integer\n          format: int64\n        entries:\n          type: array\n          items:\n            $ref: '#/components/schemas/EventEntry'\n      xml:\n        name: Events\n        namespace: java://it.agilelab.bigdata.wasp.models\n    TelemetryPoint:\n      required:\n      - timestamp\n      - value\n      type: object\n      properties:\n        timestamp:\n          type: string\n          format: date-time\n        value:\n          type: number\n          format: double\n      xml:\n        name: TelemetryPoint\n        namespace: java://it.agilelab.bigdata.wasp.models\n    ProducerModel:\n      required:\n      - name\n      - className\n      - isActive\n      - isRemote\n      - isSystem\n      type: object\n      properties:\n        name:\n          type: string\n        className:\n          type: string\n        topicName:\n          type: string\n          nullable: true\n        isActive:\n          type: boolean\n        configuration:\n          type: string\n          nullable: true\n        isRemote:\n          type: boolean\n        isSystem:\n          type: boolean\n      xml:\n        name: ProducerModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    Aggregate:\n      type: string\n      enum:\n      - max\n      - min\n      - avg\n      - sum\n    TopicModelDTO:\n      required:\n      - name\n      type: object\n      properties:\n        name:\n          type: string\n      xml:\n        name: TopicModelDTO\n        namespace: java://it.agilelab.bigdata.wasp.models.editor\n    ExactKeyValueMatchingStrategy:\n      type: object\n    StreamingReaderModel:\n      required:\n      - name\n      - datastoreModelName\n      - datastoreProduct\n      - options\n      type: object\n      properties:\n        name:\n          type: string\n        datastoreModelName:\n          type: string\n        datastoreProduct:\n          type: string\n        rateLimit:\n          type: integer\n          format: int32\n          nullable: true\n        options:\n          type: object\n          additionalProperties:\n            type: string\n      xml:\n        name: StreamingReaderModel\n        namespace: java://it.agilelab.bigdata.wasp.models\n    TelemetrySeries:\n      required:\n      - source\n      - metric\n      - series\n      type: object\n      properties:\n        source:\n          $ref: '#/components/schemas/SourceEntry'\n        metric:\n          $ref: '#/components/schemas/MetricEntry'\n        series:\n          type: array\n          items:\n            $ref: '#/components/schemas/TelemetryPoint'\n      xml:\n        name: TelemetrySeries\n        namespace: java://it.agilelab.bigdata.wasp.models\n    RestEnrichmentSource:\n      required:\n      - kind\n      - parameters\n      - headers\n      type: object\n      properties:\n        kind:\n          type: string\n        parameters:\n          type: object\n          additionalProperties:\n            type: string\n        headers:\n          type: object\n          additionalProperties:\n            type: string\n      xml:\n        name: RestEnrichmentSource\n        namespace: java://it.agilelab.bigdata.wasp.models.configuration\n    KeyValueModelDTO:\n      required:\n      - name\n      type: object\n      properties:\n        name:\n          type: string\n      xml:\n        name: KeyValueModelDTO\n        namespace: java://it.agilelab.bigdata.wasp.models.editor\n    TelemetryTopicConfigModel:\n      required:\n      - topicName\n      - partitions\n      - replica\n      - kafkaSettings\n      - jmx\n      type: object\n      properties:\n        topicName:\n          type: string\n        partitions:\n          type: integer\n          format: int32\n        replica:\n          type: integer\n          format: int32\n        kafkaSettings:\n          type: array\n          items:\n            $ref: '#/components/schemas/KafkaEntryConfig'\n        jmx:\n          type: array\n          items:\n            $ref: '#/components/schemas/JMXTelemetryConfigModel'\n      xml:\n        name: TelemetryTopicConfigModel\n        namespace: java://it.agilelab.bigdata.wasp.models.configuration\n    ZookeeperConnectionsConfig:\n      required:\n      - connections\n      - chRoot\n      type: object\n      properties:\n        connections:\n          type: array\n          items:\n            $ref: '#/components/schemas/ConnectionConfig'\n        chRoot:\n          type: string\n      xml:\n        name: ZookeeperConnectionsConfig\n        namespace: java://it.agilelab.bigdata.wasp.models.configuration\n    TelemetryConfigModel:\n      required:\n      - name\n      - writer\n      - sampleOneMessageEvery\n      - telemetryTopicConfigModel\n      type: object\n      properties:\n        name:\n          type: string\n        writer:\n          type: string\n        sampleOneMessageEvery:\n          type: integer\n          format: int32\n        telemetryTopicConfigModel:\n          $ref: '#/components/schemas/TelemetryTopicConfigModel'\n      xml:\n        name: TelemetryConfigModel\n        namespace: java://it.agilelab.bigdata.wasp.models.configuration\n    FlowNifiDTO:\n      required:\n      - processGroup\n      - name\n      type: object\n      properties:\n        processGroup:\n          type: string\n        name:\n          type: string\n        config:\n          type: string\n          nullable: true\n      xml:\n        name: FlowNifiDTO\n        namespace: java://it.agilelab.bigdata.wasp.models.editor\n    ExactRawMatchingStrategy:\n      required:\n      - dataframeKeyMatchingExpression\n      type: object\n      properties:\n        dataframeKeyMatchingExpression:\n          type: string\n      xml:\n        name: ExactRawMatchingStrategy\n        namespace: java://it.agilelab.bigdata.wasp.models\n    KeyValueOption:\n      required:\n      - key\n      - value\n      type: object\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n      xml:\n        name: KeyValueOption\n        namespace: java://it.agilelab.bigdata.wasp.models\n    PipegraphStatus:\n      type: string\n      enum:\n      - PENDING\n      - PROCESSING\n      - STOPPING\n      - FAILED\n      - STOPPED\n      - UNSCHEDULABLE\n",
			"canonicalURL": "/github.com/agile-lab-dev/wasp@0dfebbb12501841111eaffcaab371391a685a4a9/-/blob/documentation/wasp-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/agile-lab-dev/wasp/blob/0dfebbb12501841111eaffcaab371391a685a4a9/documentation/wasp-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/config/kafka\": get: responses: 200: contents: unsupported content types: [text/json]",
	"NotImplemented": [
		"unsupported content types"
	]
}