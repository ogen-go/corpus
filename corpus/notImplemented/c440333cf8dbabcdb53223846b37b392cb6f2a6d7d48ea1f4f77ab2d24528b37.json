{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cloudtrust/keycloak-bridge"
		},
		"file": {
			"name": "swagger-api_account.yaml",
			"size": 0,
			"path": "api/account/swagger-api_account.yaml",
			"byteSize": 8552,
			"content": "openapi: 3.0.1\ninfo:\n  title: Swagger Cloudtrust Management\n  description: 'API Self service for Cloudtrust.'\n  version: 1.0.0\nservers:\n- url: http://localhost:8888\npaths:\n  /account:\n    get:\n      tags:\n      - Account\n      summary: Get account representation of the current user\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n    post:\n      tags:\n      - Account\n      summary: Update account representation of the current user\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Account'\n      responses:\n        200:\n          description: successful operation\n    delete:\n      tags:\n      - Account\n      summary: Delete account\n      responses:\n        200:\n          description: successful operation\n  /account/credentials:\n    get:\n      tags:\n      - Credentials\n      summary: Get list of credentials of the user.\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n                  credentials:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Credential'\n  /account/credentials/password:\n    post:\n      tags:\n      - Credentials\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdatePassword'\n      summary: Update password\n      responses:\n        200:\n          description: The password has been updated\n        400:\n          description: Bad parameters (same old and new passwords, different new and confirm passwords, ...)\n        403:\n          description: Caller is not allowed to change the password\n  /account/configuration:\n    get:\n      tags:\n      - Credentials\n      summary: Get self-service configuration. Realm query parameter is used to override some configuration parameters with the value specified for the realm\n      parameters:\n      - name: realm_id\n        in: query\n        schema:\n          type: string\n        allowEmptyValue: true\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Configuration'\n  /account/credentials/registrators:\n    get:\n      tags:\n      - Credentials\n      summary: Get all registrators available for the user\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RegistratorId'\n  /account/credentials/{credentialId}:\n    put:\n      tags:\n      - Credentials\n      summary: Update UserLabel of credential (all other attributes will be ignored)\n      parameters:\n      - name: credentialId\n        in: path\n        description: id of the credential\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Credential'\n      responses:\n        200:\n          description: Successfuly updated.\n    delete:\n      tags:\n      - Credentials\n      summary: Delete the credential\n      parameters:\n      - name: credentialId\n        in: path\n        description: id of the credential\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n  /account/credentials/{credentialId}/after/{previousCredentialId}:\n    post:\n      tags:\n      - Credentials\n      summary: Change priority order among credentials\n      parameters:\n      - name: credentialId\n        in: path\n        description: id of the credential to move\n        required: true\n        schema:\n          type: string\n      - name: previousCredentialId\n        in: path\n        description: id of the credential before the moved one. Use 'null' to move the credential at the top of the list.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful operation.\n  /account/verify-email:\n    put:\n      tags:\n      - Account\n      summary: Request an email verification\n      responses:\n        200:\n          description: successful operation\n  /account/verify-phone-number:\n    put:\n      tags:\n      - Account\n      summary: Request a phone number verification\n      responses:\n        200:\n          description: successful operation\ncomponents:\n  schemas:\n    UpdatePassword:\n      type: object\n      properties:\n        currentPassword:\n          type: string\n        newPassword:\n          type: string\n        confirmPassword:\n          type: string\n    Credential:\n      type: object\n      properties:\n        id:\n          type: string\n        type:\n          type: string\n        userLabel:\n          type: string\n        createdDate:\n          type: integer\n        credentialData:\n          type: object\n        temporary:\n          type: boolean\n    RegistratorId:\n      type: string\n    Account:\n      type: object\n      properties:\n        username:\n          type: string\n        email:\n          type: string\n        emailVerified:\n          type: boolean\n          description: only returned by /account\n        gender:\n          type: string\n          description: only returned by /account\n        firstName:\n          type: string\n        lastName:\n          type: string\n        phoneNumber:\n          type: string\n        phoneNumberVerified:\n          type: boolean\n          description: only returned by /account\n        birthDate:\n          type: string\n          description: only returned by /account. format is DD.MM.YYYY\n        birthLocation:\n          type: string\n          description: only returned by /account\n        nationality:\n          type: string\n          description: ISO 3166 Alpha-2 country code\n        idDocumentType:\n          type: string\n          enum: [ID_CARD, PASSPORT, RESIDENCE_PERMIT]\n          description: only returned by /account\n        idDocumentNumber:\n          type: string\n          description: only returned by /account\n        idDocumentExpiration:\n          type: string\n          description: only returned by /account\n        idDocumentCountry:\n          type: string\n          description: ISO 3166 Alpha-2 country code\n        locale:\n          type: string\n        businessId:\n          type: string\n          description: Business identifier (can be GLN)\n        accreditations:\n          type: array\n          description: only returned by /account\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                description: accreditation type\n              expiryDate:\n                type: string\n                description: expiry date. format is DD.MM.YYYY\n              expired:\n                type: boolean\n                description: true if the expiry date has passed\n              revoked:\n                type: boolean\n                description: true if the accreditation has been revoked\n        pendingChecks:\n          type: array\n          description: Used only by getUser\n          items:\n            type: string\n    Configuration:\n      type: object\n      properties:\n        editing_enabled:\n          type: boolean\n        show_authenticators_tab:\n          type: boolean\n        show_password_tab:\n          type: boolean\n        show_profile:\n          type: boolean\n        show_account_deletion_button:\n          type: boolean\n        self_service_default_tab:\n          type: string\n        redirect_successful_registration_url:\n          type: string\n        available-checks:\n          type: object\n          additionalProperties:\n            type: boolean\n        barcode_type:\n          type: string\n          enum: [CODE128]\n        theme:\n          type: string\n        supportedLocales:\n          type: array\n          items:\n            type: string\n        show_gln_editing:\n          type: boolean\n  securitySchemes:\n    openId:\n      type: openIdConnect\n      openIdConnectUrl: http://toto.com/.well-known/openid-configuration\nsecurity:\n  - openId:\n    - todo",
			"canonicalURL": "/github.com/cloudtrust/keycloak-bridge@9ba93092766b60c67c76b3432b8df605e4f7d8a7/-/blob/api/account/swagger-api_account.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/cloudtrust/keycloak-bridge/blob/9ba93092766b60c67c76b3432b8df605e4f7d8a7/api/account/swagger-api_account.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/account/configuration\": get: security: security \"openId\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}