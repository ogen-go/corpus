{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Financial-Times/concept-search-api"
		},
		"file": {
			"name": "api.yml",
			"size": 0,
			"path": "_ft/api.yml",
			"byteSize": 12048,
			"content": "openapi: 3.0.0\ninfo:\n  title: Concept Search API\n  description: A microservice that provides endpoints to query for UPP V2 Concepts\n  version: 0.0.1\n  license:\n    name: MIT\n  contact:\n    name: Universal Publishing\n    email: universal.publishing@ft.com\n\nsecurity:\n  - ApiKeyAuth: []\n\npaths:\n  /concepts:\n    get:\n      summary: Concept Query\n      description: Get all Concepts by type or search for concepts using a query.\n      tags:\n        - Public API\n      parameters:\n        - name: type\n          in: query\n          description: \u003e\n            The type of Concept to search for as a URI. When used without a\n            mode, only a single value for type can be used. The results will be\n            the first 50 concepts of that type - this is only useful for small\n            collections such as Genres. When used in combination with other\n            modes such as `mode=search`, this will restrict queries to search\n            for concepts by the given type. Multiple types can be specified in\n            the request.\n          required: true\n          example:\n            - http://www.ft.com/ontology/person/Person\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n              minimum: 1\n              uniqueItems: true\n              enum:\n                - http://www.ft.com/ontology/Genre\n                - http://www.ft.com/ontology/product/Brand\n                - http://www.ft.com/ontology/person/Person\n                - http://www.ft.com/ontology/organisation/Organisation\n                - http://www.ft.com/ontology/Location\n                - http://www.ft.com/ontology/Topic\n                - http://www.ft.com/ontology/AlphavilleSeries\n                - http://www.ft.com/ontology/company/PublicCompany\n        - name: q\n          in: query\n          description: The query text to use to find concepts. Must be set if the `mode` is\n            set.\n          required: false\n          example: Fred\n          schema:\n            type: string\n        - name: mode\n          in: query\n          description: \u003e\n            The mode for the search request. Currently only supports a value\n            'search' which provides an intuitive search experience. If mode is\n            set, then a value for `q` is required.\n          required: false\n          schema:\n            type: string\n            enum:\n              - search\n        - name: boost\n          in: query\n          description: \u003e\n            The boost to apply to the request. Currently only supports boosting\n            by FT Author, which requires a query\n            `type=http://www.ft.com/ontology/person/Person`, `mode=search` and a\n            value for `q`.\n          required: false\n          schema:\n            type: string\n            enum:\n              - authors\n        - name: ids\n          in: query\n          description: \u003e\n            returns concepts by id (i.e. a valid uuid). This is the only\n            parameter required for this type of query.\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n              minimum: 1\n              uniqueItems: true\n        - name: include_deprecated\n          in: query\n          required: false\n          description: Include the deprecated concepts too.\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Returns concepts based on the provided query parameters.\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    concepts:\n                      - id: http://www.ft.com/thing/61d707b5-6fab-3541-b017-49b72de80772\n                        apiUrl: http://api.ft.com/things/61d707b5-6fab-3541-b017-49b72de80772\n                        prefLabel: Analysis\n                        type: http://www.ft.com/ontology/Genre\n        \"400\":\n          description: Incorrect request parameters or invalid concept type.\n        \"500\":\n          description: Failed to search for concepts, usually caused by issues with ES.\n  /concept/search:\n    post:\n      summary: Concept Search by Terms\n      description: Search for Concepts using ES query terms.\n      tags:\n        - Public API\n      parameters:\n        - name: include_score\n          in: query\n          required: false\n          description: Include the ES scores for each item in the response.\n          schema:\n            type: boolean\n        - name: include_deprecated\n          in: query\n          required: false\n          description: Include the deprecated concepts too.\n          schema:\n            type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                term:\n                  type: string\n              required:\n                - term\n              example:\n                term: donald trump\n        description: The concept search term to query for.\n        required: true\n      responses:\n        \"200\":\n          description: Returns concepts based on the provided query parameters.\n          content:\n            \"*/*\":\n              schema:\n                type: object\n                properties:\n                  results:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        id:\n                          type: string\n                        apiUrl:\n                          type: string\n                        prefLabel:\n                          type: string\n                        types:\n                          nullable: true\n                          type: array\n                          items: {}\n                        items:\n                          type: string\n                        directType:\n                          type: string\n                required:\n                  - results\n                example:\n                  results:\n                    - id: http://api.ft.com/things/61d707b5-6fab-3541-b017-49b72de80772\n                      apiUrl: http://api.ft.com/things/61d707b5-6fab-3541-b017-49b72de80772\n                      prefLabel: Analysis\n        \"400\":\n          description: Incorrect request body.\n        \"404\":\n          description: Incorrect request parameters or invalid concept type.\n        \"500\":\n          description: Failed to search for concepts, usually caused by issues with ES.\n  /__health:\n    servers:\n      - url: https://upp-prod-delivery-glb.upp.ft.com/__concept-search-api/\n      - url: https://upp-staging-delivery-glb.upp.ft.com/__concept-search-api/\n    get:\n      summary: Healthchecks\n      description: Runs application healthchecks and returns FT Healthcheck style json.\n      security:\n        - BasicAuth: []\n      tags:\n        - Health\n      responses:\n        \"200\":\n          description: \u003e\n            Should always return 200 along with the output of the healthchecks -\n            regardless of whether the healthchecks failed or not. Please inspect\n            the overall ok property to see whether or not the application is\n            healthy.\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    checks:\n                      - businessImpact: No Business Impact.\n                        checkOutput: OK\n                        lastUpdated: 2017-01-16T10:26:47.222805121Z\n                        name: ExampleHealthcheck\n                        ok: true\n                        panicGuide: https://dewey.ft.com/some-app.html\n                        severity: 1\n                        technicalSummary: Some engaging technical summary\n                    description: A concise description.\n                    name: app-name\n                    ok: true\n                    schemaVersion: 1\n  /__health-details:\n    servers:\n      - url: https://upp-prod-delivery-glb.upp.ft.com/__concept-search-api/\n      - url: https://upp-staging-delivery-glb.upp.ft.com/__concept-search-api/\n    get:\n      summary: Healthcheck Details\n      description: Returns healthcheck data for the external ES cluster.\n      security:\n        - BasicAuth: []\n      tags:\n        - Health\n      responses:\n        \"200\":\n          description: Returns ES style status information.\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    cluster_name: a-cluster-name\n                    status: green\n                    timed_out: false\n                    number_of_nodes: 6\n                    number_of_data_nodes: 3\n                    active_primary_shards: 16\n                    active_shards: 32\n                    relocating_shards: 0\n                    initializing_shards: 0\n                    unassigned_shards: 0\n                    delayed_unassigned_shards: 0\n                    number_of_pending_tasks: 0\n                    number_of_in_flight_fetch: 0\n                    task_max_waiting_in_queue_millis: 0\n                    active_shards_percent_as_number: 100\n                    validation_failures: null\n                    indices: null\n  /__build-info:\n    servers:\n      - url: https://upp-prod-delivery-glb.upp.ft.com/__concept-search-api/\n      - url: https://upp-staging-delivery-glb.upp.ft.com/__concept-search-api/\n    get:\n      summary: Build Information\n      description: \u003e\n        Returns application build info, such as the git repository and revision,\n        the golang version it was built with, and the app release version.\n      security:\n        - BasicAuth: []\n      tags:\n        - Info\n      responses:\n        \"200\":\n          description: Outputs build information as described in the summary.\n          content:\n            application/json; charset=UTF-8:\n              examples:\n                response:\n                  value:\n                    version: 0.0.1\n                    repository: https://github.com/Financial-Times/concept-search-api.git\n                    revision: 7cdbdb18b4a518eef3ebb1b545fc124612f9d7cd\n                    builder: go version go1.6.3 linux/amd64\n                    dateTime: \"20161123122615\"\n  /__gtg:\n    servers:\n      - url: https://upp-prod-delivery-glb.upp.ft.com/__concept-search-api/\n      - url: https://upp-staging-delivery-glb.upp.ft.com/__concept-search-api/\n    get:\n      summary: Good To Go\n      description: Lightly healthchecks the application, and returns a 200 if it's\n        Good-To-Go.\n      security:\n        - BasicAuth: []\n      tags:\n        - Health\n      responses:\n        \"200\":\n          description: The application is healthy enough to perform all its functions\n            correctly - i.e. good to go.\n          content:\n            text/plain; charset=US-ASCII:\n              examples:\n                response:\n                  value: OK\n        \"503\":\n          description: \u003e\n            One or more of the applications healthchecks have failed, so please\n            do not use the app. See the /__health endpoint for more detailed\n            information.\n  /__api:\n    servers:\n      - url: https://upp-prod-delivery-glb.upp.ft.com/__concept-search-api/\n      - url: https://upp-staging-delivery-glb.upp.ft.com/__concept-search-api/\n    get:\n      summary: API Documentation\n      description: Returns OpenAPI documentation for the application.\n      security:\n        - BasicAuth: []\n      tags:\n        - Info\n      responses:\n        \"200\":\n          description: Returns OpenAPI information.\n          content:\n            text/plain;charset=utf-8:\n              schema:\n                type: string\n\nservers:\n  - url: https://api.ft.com/\n  - url: https://api-t.ft.com/\n\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: x-api-key\n    BasicAuth:\n      type: http\n      scheme: basic\n",
			"canonicalURL": "/github.com/Financial-Times/concept-search-api@1ee5a5889160ab8f44a1dc4ca7ec989f1cd19376/-/blob/_ft/api.yml",
			"externalURLs": [
				{
					"url": "https://github.com/Financial-Times/concept-search-api/blob/1ee5a5889160ab8f44a1dc4ca7ec989f1cd19376/_ft/api.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/__api\": get: responses: 200: contents: unsupported content types: [text/plain;charset=utf-8]",
	"NotImplemented": [
		"empty schema",
		"unsupported content types"
	]
}