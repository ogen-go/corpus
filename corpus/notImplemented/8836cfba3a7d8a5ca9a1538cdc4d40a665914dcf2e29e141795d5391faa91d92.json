{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dracor-org/dracor-api"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "api.yaml",
			"byteSize": 42113,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 0.83.1\n  title: DraCor API\n  contact:\n    email: \"fr.fischer@fu-berlin.de\"\n  termsOfService: \"https://dracor.org\"\n  license:\n    name: \"Apache 2.0\"\n    url: \"http://www.apache.org/licenses/LICENSE-2.0.html\"\nservers:\n  - url: https://dracor.org/api\npaths:\n  /info:\n    get:\n      summary: API info\n      description: \u003e-\n        Shows version numbers of the dracor-api app and the underlying\n        eXist-db.\n      operationId: api-info\n      tags: [public]\n      responses:\n        '200':\n          description: Returns JSON object\n          content:\n            application/json:\n              example:\n                {\n                  \"existdb\": \"6.0.1\",\n                  \"name\": \"DraCor\",\n                  \"status\": \"beta\",\n                  \"version\": \"0.83.0\"\n                }\n\n  /corpora:\n    get:\n      summary: List available corpora\n      operationId: list-corpora\n      tags: [public]\n      parameters:\n        - name: include\n          in: query\n          description: Include metrics for each corpus\n          required: false\n          schema:\n            type: string\n            enum: [metrics]\n      responses:\n        '200':\n          description: Returns list of available corpora\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n\n              example:\n                [\n                  {\n                    \"name\": \"ger\",\n                    \"title\": \"German Drama Corpus\",\n                    \"repository\": \"https://github.com/dracor-org/gerdracor\",\n                    \"uri\": \"https://dracor.org/api/corpora/ger\",\n                    \"description\": \"Edited by Frank Fischer and Peer Trilcke. Features 501 German-language plays from the 1730s to the 1940s.\",\n                    \"licence\": \"CC0\",\n                    \"licenceUrl\": \"https://creativecommons.org/share-your-work/public-domain/cc0/\",\n                    \"metrics\": {\n                      \"characters\": 10001,\n                      \"female\": 1308,\n                      \"male\": 3953,\n                      \"plays\": 471,\n                      \"sp\": 327696,\n                      \"stage\": 139169,\n                      \"text\": 471,\n                      \"updated\": \"2019-01-12T00:55:59.145+01:00\",\n                      \"wordcount\": {\n                        \"sp\": 7909927.0,\n                        \"stage\": 880356,\n                        \"text\": 8275863.0\n                      }\n                    },\n                  },\n                  {\n                    \"name\": \"rus\",\n                    \"title\": \"Russian Drama Corpus\",\n                    \"repository\": \"https://github.com/dracor-org/rusdracor\",\n                    \"uri\": \"https://dracor.org/api/corpora/rus\",\n                    \"metrics\": {\n                      \"characters\": 2440,\n                      \"female\": 564,\n                      \"male\": 1789,\n                      \"plays\": 141,\n                      \"sp\": 73485,\n                      \"stage\": 31949,\n                      \"text\": 141,\n                      \"updated\": \"2019-01-11T22:48:53.865+01:00\",\n                      \"wordcount\": {\n                        \"sp\": 1388515.0,\n                        \"stage\": 140415,\n                        \"text\": 1468669.0\n                      }\n                    }\n                  },\n                  {\n                    \"name\": \"shake\",\n                    \"title\": \"Shakespeare Drama Corpus\",\n                    \"repository\": \"https://github.com/dracor-org/shakedracor\",\n                    \"uri\": \"https://dracor.org/api/corpora/shake\",\n                    \"metrics\": {\n                      \"characters\": 1433,\n                      \"female\": 0,\n                      \"male\": 0,\n                      \"plays\": 37,\n                      \"sp\": 31066,\n                      \"stage\": 10450,\n                      \"text\": 37,\n                      \"updated\": \"2019-01-11T22:53:29.419+01:00\",\n                      \"wordcount\": {\n                        \"sp\": 876744,\n                        \"stage\": 41230,\n                        \"text\": 908286\n                      }\n                    }\n                  }\n                ]\n    post:\n      summary: Add new corpus\n      operationId: post-corpora\n      tags: [admin]\n      requestBody:\n        description: |\n          The meta data for the new corpus can be provided in either JSON or XML\n          format. The JSON structure is a straightforward object providing\n          corpus name, title and (optionally) a repository URL. The XML format\n          needs to be a TEI document with `teiCorpus` as its root element. The\n          corpus title needs to be provided in the `titleStmt` while the name\n          and repo URL are encoded in particular `idno` elements in the\n          `publicationStmt` (see example).\n\n          NB: Contrary to the TEI schema our teiCorpus document must not contain\n          the `TEI` elements for individual plays.\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - title\n              properties:\n                name:\n                  type: string\n                  description: corpus name\n                title:\n                  type: string\n                  description: corpus title\n                repository:\n                  type: string\n                  description: repository URL\n                archive:\n                  type: string\n                  description: \u003e\n                    URL of ZIP archive containing TEI files of the corpus\n\n                    The TEI files are expected to be placed in a `tei`\n                    subdirectory. Other files will be ignored when loading the\n                    archive.\n            example: |\n              {\n                \"name\": \"rus\",\n                \"title\": \"Russian Drama Corpus\",\n                \"repository\": \"https://github.com/dracor-org/rusdracor\"\n              }\n          application/xml:\n            schema:\n              type: string\n            example: |\n              \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n              \u003cteiCorpus xmlns=\"http://www.tei-c.org/ns/1.0\"\u003e\n                \u003cteiHeader\u003e\n                  \u003cfileDesc\u003e\n                    \u003ctitleStmt\u003e\n                      \u003ctitle\u003eTest Drama Corpus\u003c/title\u003e\n                    \u003c/titleStmt\u003e\n                    \u003cpublicationStmt\u003e\n                      \u003cpublisher\u003eDraCor\u003c/publisher\u003e\n                      \u003cidno type=\"URI\" xml:base=\"https://dracor.org/\"\u003etest\u003c/idno\u003e\n                      \u003cidno type=\"repo\"\u003ehttps://github.com/dracor-org/testdracor\u003c/idno\u003e\n                    \u003c/publicationStmt\u003e\n                  \u003c/fileDesc\u003e\n                \u003c/teiHeader\u003e\n              \u003c/teiCorpus\u003e\n      responses:\n        '200':\n          description: Returns corpus metadata\n          content:\n            application/json:\n              schema:\n                type: object\n        '409':\n          description: Corpus already exists\n        '400':\n          description: Posted data lacks required properties or is malformed\n\n  /corpora/{corpusname}:\n    get:\n      summary: List corpus content\n      description: \u003e-\n        Lists all plays available in the corpus including the id, title,\n        author(s) and other meta data.\n      operationId: list-corpus-content\n      tags: [public]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns object representing corpus contents\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - title\n                  - dramas\n                properties:\n                  title:\n                    type: string\n                    description: corpus title\n                  dramas:\n                    type: array\n                    description: array of plays\n                    items:\n                      type: object\n        '404':\n          description: Corpus not found\n    post:\n      summary: Load corpus data from its repository\n      description: \u003e-\n        This endpoint requires authorization.\n\n        Posting `{\"load\": true}` to the corpus URI reloads the data for this\n        corpus from its repository (if defined).\n      operationId: load-corpus\n      tags: [admin]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - load\n              properties:\n                load:\n                  type: boolean\n            example: |\n              {\"load\": true}\n      responses:\n        '202':\n          description: Corpus update has been scheduled\n          content:\n            application/json:\n              schema:\n                type: object\n              example: |\n                {\n                  \"message\": \"corpus update scheduled\"\n                }\n        '404':\n          description: Corpus not found\n        '409':\n          description: \u003e-\n            Corpus update could not be scheduled.\n\n            This is the response when another update has not yet finished.\n    delete:\n      summary: Remove corpus from database\n      operationId: delete-corpus\n      tags: [admin]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Corpus deleted\n        '404':\n          description: Corpus not found\n\n\n  /corpora/{corpusname}/metadata:\n    get:\n      summary: List of metadata for all plays in a corpus\n      operationId: corpus-metadata\n      tags: [public]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns a list of metadata for all plays\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n            text/csv:\n              schema:\n                type: string\n\n  /corpora/{corpusname}/metadata/csv:\n    get:\n      summary: List of metadata for all plays in a corpus\n      operationId: corpus-metadata-csv-endpoint\n      tags: [public]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns a comma separated list of metadata for all plays\n          content:\n            text/csv:\n              schema:\n                type: string\n\n  /corpora/{corpusname}/metadata.csv:\n    get:\n      summary: List of metadata for all plays in a corpus\n      description: \u003e-\n        This endpoint is deprecated. Please use `/corpora/{corpusname}/metadata`\n        with an appropriate `Accept` header instead.\n      operationId: corpus-metadata-csv\n      tags: [public]\n      deprecated: true\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns a comma separated list of metadata for all plays\n          content:\n            text/csv:\n              schema:\n                type: string\n\n  /corpora/{corpusname}/play/{playname}:\n    get:\n      summary: Get metadata and network metrics for a single play\n      operationId: play-info\n      tags: [public]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: playname\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns an object with play meta data\n          content:\n            application/json:\n              schema:\n                type: object\n    delete:\n      summary: Remove a single play from the corpus\n      operationId: play-delete\n      tags: [admin]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: playname\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Play has been removed\n        '404':\n          description: No such play under this URI\n\n  /corpora/{corpusname}/play/{playname}/metrics:\n    get:\n      summary: Get network metrics for a single play\n      operationId: play-metrics\n      tags: [public]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: playname\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns an object with metrics data\n          content:\n            application/json:\n              schema:\n                type: object\n\n  /corpora/{corpusname}/play/{playname}/tei:\n    get:\n      summary: Get TEI document of a single play\n      operationId: play-tei\n      tags: [public]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: playname\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns TEI document\n          content:\n            application/xml:\n              schema:\n                type: string\n    put:\n      summary: Add new or update existing TEI document\n      description: |\n        When sending a PUT request to a new play URI, the request body is stored\n        in the database as a new document accessible under that URI. If the URI\n        already exists the corresponding TEI document is updated with the\n        request body.\n\n        The `playname` parameter of a new URI must consist of lower case ASCII\n        characters, digits and/or dashes only.\n      operationId: play-tei-put\n      tags: [admin]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: playname\n          in: path\n          required: true\n          schema:\n            type: string\n            pattern: \"[a-z0-9]+([-a-z0-9]?[a-z0-9])?\"\n      requestBody:\n        description: TEI document\n        content:\n          application/xml:\n            schema:\n              type: string\n      responses:\n        '200':\n          description: TEI document has been stored\n          content:\n            application/xml:\n              schema:\n                type: string\n        '400':\n          description: \u003e-\n            The request body is not a valid TEI document or the `playname` is\n            invalid.\n        '404':\n          description: \u003e-\n            There is no corpus with the given `corpusname`.\n\n  /corpora/{corpusname}/play/{playname}/rdf:\n    get:\n      summary: Get RDF document for a single play\n      operationId: play-rdf\n      tags: [public]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: playname\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns RDF document\n          content:\n            application/xml:\n              schema:\n                type: string\n\n  /corpora/{corpusname}/play/{playname}/cast:\n    get:\n      summary: Get a list of characters of a play\n      operationId: get-cast\n      tags: [public]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: playname\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns list of characters\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n              example: |\n                [\n                  {\n                    \"numOfSpeechActs\": 171,\n                    \"gender\": \"MALE\",\n                    \"numOfScenes\": 21,\n                    \"name\": \"Городничий\",\n                    \"numOfWords\": 4985,\n                    \"isGroup\": false,\n                    \"id\": \"gorodnichij\"\n                  },\n                  {\n                    \"numOfSpeechActs\": 49,\n                    \"gender\": \"MALE\",\n                    \"numOfScenes\": 8,\n                    \"name\": \"Аммос Федорович\",\n                    \"numOfWords\": 748,\n                    \"isGroup\": false,\n                    \"id\": \"ammos_fedorovich_ljapkin_tjapkin\"\n                  },\n                  {\n                    \"numOfSpeechActs\": 50,\n                    \"gender\": \"MALE\",\n                    \"numOfScenes\": 9,\n                    \"name\": \"Артемий Филиппович Земляника\",\n                    \"numOfWords\": 735,\n                    \"isGroup\": false,\n                    \"id\": \"artemij_filippovich_zemljanika\"\n                  },\n                  {\n                    \"numOfSpeechActs\": 24,\n                    \"gender\": \"MALE\",\n                    \"numOfScenes\": 8,\n                    \"name\": \"Лука Лукич\",\n                    \"numOfWords\": 291,\n                    \"isGroup\": false,\n                    \"id\": \"luka_lukich\"\n                  }\n                ]\n            text/csv:\n              schema:\n                type: string\n              example: |\n                id,name,gender,isGroup,numOfScenes,numOfSpeechActs,numOfWords\n                \"gorodnichij\",\"Городничий\",\"MALE\",\"false\",\"21\",\"171\",\"4985\"\n                \"ammos_fedorovich_ljapkin_tjapkin\",\"Аммос Федорович\",\"MALE\",\"false\",\"8\",\"49\",\"748\"\n                \"artemij_filippovich_zemljanika\",\"Артемий Филиппович Земляника\",\"MALE\",\"false\",\"9\",\"50\",\"735\"\n                \"luka_lukich\",\"Лука Лукич\",\"MALE\",\"false\",\"8\",\"24\",\"291\"\n\n  /corpora/{corpusname}/play/{playname}/cast/csv:\n    get:\n      summary: Get a list of characters of a play (CSV)\n      operationId: get-cast-csv\n      tags: [public]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: playname\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns list of characters as CSV\n          content:\n            text/csv:\n              schema:\n                type: string\n              example: |\n                id,name,gender,isGroup,numOfScenes,numOfSpeechActs,numOfWords\n                \"gorodnichij\",\"Городничий\",\"MALE\",\"false\",\"21\",\"171\",\"4985\"\n                \"ammos_fedorovich_ljapkin_tjapkin\",\"Аммос Федорович\",\"MALE\",\"false\",\"8\",\"49\",\"748\"\n                \"artemij_filippovich_zemljanika\",\"Артемий Филиппович Земляника\",\"MALE\",\"false\",\"9\",\"50\",\"735\"\n                \"luka_lukich\",\"Лука Лукич\",\"MALE\",\"false\",\"8\",\"24\",\"291\"\n\n  /corpora/{corpusname}/play/{playname}/networkdata/csv:\n    get:\n      summary: Get network data of a play as CSV\n      operationId: network-csv\n      tags: [public]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: playname\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns CSV file\n          content:\n            text/csv:\n              schema:\n                type: string\n\n  /corpora/{corpusname}/play/{playname}/networkdata/gexf:\n    get:\n      summary: Get network data of a play as GEXF\n      operationId: network-gexf\n      tags: [public]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: playname\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns GEXF file\n          content:\n            application/xml:\n              schema:\n                type: string\n\n  /corpora/{corpusname}/play/{playname}/networkdata/graphml:\n    get:\n      summary: Get network data of a play as GraphML\n      operationId: network-graphml\n      tags: [public]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: playname\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns GraphML file\n          content:\n            application/xml:\n              schema:\n                type: string\n\n  /corpora/{corpusname}/play/{playname}/relations/csv:\n    get:\n      summary: Get relation data of a play as CSV\n      operationId: relations-csv\n      tags: [public]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: playname\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns CSV file\n          content:\n            text/csv:\n              schema:\n                type: string\n              example: |\n                Source,Type,Target,Label\n                amaryllis,Undirected,atalanta,siblings\n                amaryllis,Undirected,menalkas,siblings\n                atalanta,Undirected,menalkas,siblings\n                myrtillus,Undirected,doris,siblings\n                amaryllis,Directed,corydon,lover_of\n                damoetas,Directed,atalanta,parent_of\n                damoetas,Directed,amaryllis,parent_of\n                damoetas,Directed,menalkas,parent_of\n                nisus,Directed,doris,lover_of\n                corydon,Directed,atalanta,lover_of\n        '404':\n          description: Unknown play or play does not provide relation data\n\n  /corpora/{corpusname}/play/{playname}/relations/gexf:\n    get:\n      summary: Get relation data of a play as GEXF\n      operationId: relations-gexf\n      tags: [public]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: playname\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns GEXF file\n          content:\n            application/xml:\n              schema:\n                type: string\n              example: |\n                \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n                \u003cgexf xmlns=\"http://www.gexf.net/1.2draft\" version=\"1.2\"\u003e\n                  \u003cmeta\u003e\n                    \u003ccreator\u003edracor.org\u003c/creator\u003e\n                    \u003cdescription\u003eRelations for Gottsched, Johann Christoph: Atalanta oder die bezwungene Sprödigkeit\u003c/description\u003e\n                  \u003c/meta\u003e\n                  \u003cgraph mode=\"static\"\u003e\n                    \u003cattributes class=\"node\" mode=\"static\"\u003e\n                      \u003cattribute id=\"gender\" title=\"Gender\" type=\"string\"/\u003e\n                      \u003cattribute id=\"person-group\" title=\"Person group\" type=\"boolean\"/\u003e\n                      \u003cattribute id=\"number-of-words\" title=\"Number of spoken words\" type=\"integer\"/\u003e\n                    \u003c/attributes\u003e\n                    \u003cattributes class=\"edge\" mode=\"static\"\u003e\n                      \u003cattribute id=\"label\" title=\"Label\" type=\"string\"/\u003e\n                    \u003c/attributes\u003e\n                    \u003cnodes\u003e\n                      \u003cnode id=\"doris\" label=\"Doris\"\u003e\n                        \u003cattvalues\u003e\n                          \u003cattvalue for=\"person-group\" value=\"0\"/\u003e\n                          \u003cattvalue for=\"number-of-words\" value=\"1037\"/\u003e\n                          \u003cattvalue for=\"gender\" value=\"FEMALE\"/\u003e\n                        \u003c/attvalues\u003e\n                      \u003c/node\u003e\n                      \u003cnode id=\"menalkas\" label=\"Menalkas\"\u003e\n                        \u003cattvalues\u003e\n                          \u003cattvalue for=\"person-group\" value=\"0\"/\u003e\n                          \u003cattvalue for=\"number-of-words\" value=\"1509\"/\u003e\n                          \u003cattvalue for=\"gender\" value=\"MALE\"/\u003e\n                        \u003c/attvalues\u003e\n                      \u003c/node\u003e\n                      \u003cnode id=\"nisus\" label=\"Nisus\"\u003e\n                        \u003cattvalues\u003e\n                          \u003cattvalue for=\"person-group\" value=\"0\"/\u003e\n                          \u003cattvalue for=\"number-of-words\" value=\"2203\"/\u003e\n                          \u003cattvalue for=\"gender\" value=\"MALE\"/\u003e\n                        \u003c/attvalues\u003e\n                      \u003c/node\u003e\n                      \u003cnode id=\"atalanta\" label=\"Atalanta\"\u003e\n                        \u003cattvalues\u003e\n                          \u003cattvalue for=\"person-group\" value=\"0\"/\u003e\n                          \u003cattvalue for=\"number-of-words\" value=\"2307\"/\u003e\n                          \u003cattvalue for=\"gender\" value=\"FEMALE\"/\u003e\n                        \u003c/attvalues\u003e\n                      \u003c/node\u003e\n                      \u003cnode id=\"corydon\" label=\"Corydon\"\u003e\n                        \u003cattvalues\u003e\n                          \u003cattvalue for=\"person-group\" value=\"0\"/\u003e\n                          \u003cattvalue for=\"number-of-words\" value=\"1373\"/\u003e\n                          \u003cattvalue for=\"gender\" value=\"MALE\"/\u003e\n                        \u003c/attvalues\u003e\n                      \u003c/node\u003e\n                      \u003cnode id=\"damon\" label=\"Damon\"\u003e\n                        \u003cattvalues\u003e\n                          \u003cattvalue for=\"person-group\" value=\"0\"/\u003e\n                          \u003cattvalue for=\"number-of-words\" value=\"2674\"/\u003e\n                          \u003cattvalue for=\"gender\" value=\"MALE\"/\u003e\n                        \u003c/attvalues\u003e\n                      \u003c/node\u003e\n                      \u003cnode id=\"amaryllis\" label=\"Amaryllis\"\u003e\n                        \u003cattvalues\u003e\n                          \u003cattvalue for=\"person-group\" value=\"0\"/\u003e\n                          \u003cattvalue for=\"number-of-words\" value=\"823\"/\u003e\n                          \u003cattvalue for=\"gender\" value=\"FEMALE\"/\u003e\n                        \u003c/attvalues\u003e\n                      \u003c/node\u003e\n                      \u003cnode id=\"myrtillus\" label=\"Myrtillus\"\u003e\n                        \u003cattvalues\u003e\n                          \u003cattvalue for=\"person-group\" value=\"0\"/\u003e\n                          \u003cattvalue for=\"number-of-words\" value=\"1720\"/\u003e\n                          \u003cattvalue for=\"gender\" value=\"MALE\"/\u003e\n                        \u003c/attvalues\u003e\n                      \u003c/node\u003e\n                      \u003cnode id=\"damoetas\" label=\"Damötas\"\u003e\n                        \u003cattvalues\u003e\n                          \u003cattvalue for=\"person-group\" value=\"0\"/\u003e\n                          \u003cattvalue for=\"number-of-words\" value=\"679\"/\u003e\n                          \u003cattvalue for=\"gender\" value=\"MALE\"/\u003e\n                        \u003c/attvalues\u003e\n                      \u003c/node\u003e\n                    \u003c/nodes\u003e\n                    \u003cedges\u003e\n                      \u003cedge id=\"1\" source=\"amaryllis\" target=\"atalanta\" type=\"undirected\" label=\"siblings\"/\u003e\n                      \u003cedge id=\"2\" source=\"amaryllis\" target=\"menalkas\" type=\"undirected\" label=\"siblings\"/\u003e\n                      \u003cedge id=\"3\" source=\"atalanta\" target=\"menalkas\" type=\"undirected\" label=\"siblings\"/\u003e\n                      \u003cedge id=\"4\" source=\"myrtillus\" target=\"doris\" type=\"undirected\" label=\"siblings\"/\u003e\n                      \u003cedge id=\"5\" source=\"amaryllis\" target=\"corydon\" type=\"directed\" label=\"lover_of\"/\u003e\n                      \u003cedge id=\"6\" source=\"damoetas\" target=\"atalanta\" type=\"directed\" label=\"parent_of\"/\u003e\n                      \u003cedge id=\"7\" source=\"damoetas\" target=\"amaryllis\" type=\"directed\" label=\"parent_of\"/\u003e\n                      \u003cedge id=\"8\" source=\"damoetas\" target=\"menalkas\" type=\"directed\" label=\"parent_of\"/\u003e\n                      \u003cedge id=\"9\" source=\"nisus\" target=\"doris\" type=\"directed\" label=\"lover_of\"/\u003e\n                      \u003cedge id=\"10\" source=\"corydon\" target=\"atalanta\" type=\"directed\" label=\"lover_of\"/\u003e\n                    \u003c/edges\u003e\n                  \u003c/graph\u003e\n                \u003c/gexf\u003e\n        '404':\n          description: Unknown play or play does not provide relation data\n\n  /corpora/{corpusname}/play/{playname}/relations/graphml:\n    get:\n      summary: Get relation data of a play as GraphML\n      operationId: relations-graphml\n      tags: [public]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: playname\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns GraphML file\n          content:\n            application/xml:\n              schema:\n                type: string\n              example: |\n                \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n                \u003cgraphml xmlns=\"http://graphml.graphdrawing.org/xmlns\"\u003e\n                  \u003ckey attr.name=\"label\" attr.type=\"string\" for=\"node\" id=\"label\"/\u003e\n                  \u003ckey attr.name=\"Relation\" attr.type=\"string\" for=\"edge\" id=\"relation\"/\u003e\n                  \u003ckey attr.name=\"Gender\" attr.type=\"string\" for=\"node\" id=\"gender\"/\u003e\n                  \u003ckey attr.name=\"Person group\" attr.type=\"boolean\" for=\"node\" id=\"person-group\"/\u003e\n                  \u003cgraph edgedefault=\"undirected\"\u003e\n                    \u003cnode id=\"doris\"\u003e\n                      \u003cdata key=\"label\"\u003eDoris\u003c/data\u003e\n                      \u003cdata key=\"gender\"\u003eFEMALE\u003c/data\u003e\n                      \u003cdata key=\"person-group\"\u003efalse\u003c/data\u003e\n                    \u003c/node\u003e\n                    \u003cnode id=\"menalkas\"\u003e\n                      \u003cdata key=\"label\"\u003eMenalkas\u003c/data\u003e\n                      \u003cdata key=\"gender\"\u003eMALE\u003c/data\u003e\n                      \u003cdata key=\"person-group\"\u003efalse\u003c/data\u003e\n                    \u003c/node\u003e\n                    \u003cnode id=\"nisus\"\u003e\n                      \u003cdata key=\"label\"\u003eNisus\u003c/data\u003e\n                      \u003cdata key=\"gender\"\u003eMALE\u003c/data\u003e\n                      \u003cdata key=\"person-group\"\u003efalse\u003c/data\u003e\n                    \u003c/node\u003e\n                    \u003cnode id=\"atalanta\"\u003e\n                      \u003cdata key=\"label\"\u003eAtalanta\u003c/data\u003e\n                      \u003cdata key=\"gender\"\u003eFEMALE\u003c/data\u003e\n                      \u003cdata key=\"person-group\"\u003efalse\u003c/data\u003e\n                    \u003c/node\u003e\n                    \u003cnode id=\"corydon\"\u003e\n                      \u003cdata key=\"label\"\u003eCorydon\u003c/data\u003e\n                      \u003cdata key=\"gender\"\u003eMALE\u003c/data\u003e\n                      \u003cdata key=\"person-group\"\u003efalse\u003c/data\u003e\n                    \u003c/node\u003e\n                    \u003cnode id=\"damon\"\u003e\n                      \u003cdata key=\"label\"\u003eDamon\u003c/data\u003e\n                      \u003cdata key=\"gender\"\u003eMALE\u003c/data\u003e\n                      \u003cdata key=\"person-group\"\u003efalse\u003c/data\u003e\n                    \u003c/node\u003e\n                    \u003cnode id=\"amaryllis\"\u003e\n                      \u003cdata key=\"label\"\u003eAmaryllis\u003c/data\u003e\n                      \u003cdata key=\"gender\"\u003eFEMALE\u003c/data\u003e\n                      \u003cdata key=\"person-group\"\u003efalse\u003c/data\u003e\n                    \u003c/node\u003e\n                    \u003cnode id=\"myrtillus\"\u003e\n                      \u003cdata key=\"label\"\u003eMyrtillus\u003c/data\u003e\n                      \u003cdata key=\"gender\"\u003eMALE\u003c/data\u003e\n                      \u003cdata key=\"person-group\"\u003efalse\u003c/data\u003e\n                    \u003c/node\u003e\n                    \u003cnode id=\"damoetas\"\u003e\n                      \u003cdata key=\"label\"\u003eDamötas\u003c/data\u003e\n                      \u003cdata key=\"gender\"\u003eMALE\u003c/data\u003e\n                      \u003cdata key=\"person-group\"\u003efalse\u003c/data\u003e\n                    \u003c/node\u003e\n                    \u003cedge id=\"1\" directed=\"false\" source=\"amaryllis\" target=\"atalanta\"\u003e\n                      \u003cdata key=\"relation\"\u003esiblings\u003c/data\u003e\n                    \u003c/edge\u003e\n                    \u003cedge id=\"2\" directed=\"false\" source=\"amaryllis\" target=\"menalkas\"\u003e\n                      \u003cdata key=\"relation\"\u003esiblings\u003c/data\u003e\n                    \u003c/edge\u003e\n                    \u003cedge id=\"3\" directed=\"false\" source=\"atalanta\" target=\"menalkas\"\u003e\n                      \u003cdata key=\"relation\"\u003esiblings\u003c/data\u003e\n                    \u003c/edge\u003e\n                    \u003cedge id=\"4\" directed=\"false\" source=\"myrtillus\" target=\"doris\"\u003e\n                      \u003cdata key=\"relation\"\u003esiblings\u003c/data\u003e\n                    \u003c/edge\u003e\n                    \u003cedge id=\"5\" directed=\"true\" source=\"amaryllis\" target=\"corydon\"\u003e\n                      \u003cdata key=\"relation\"\u003elover_of\u003c/data\u003e\n                    \u003c/edge\u003e\n                    \u003cedge id=\"6\" directed=\"true\" source=\"damoetas\" target=\"atalanta\"\u003e\n                      \u003cdata key=\"relation\"\u003eparent_of\u003c/data\u003e\n                    \u003c/edge\u003e\n                    \u003cedge id=\"7\" directed=\"true\" source=\"damoetas\" target=\"amaryllis\"\u003e\n                      \u003cdata key=\"relation\"\u003eparent_of\u003c/data\u003e\n                    \u003c/edge\u003e\n                    \u003cedge id=\"8\" directed=\"true\" source=\"damoetas\" target=\"menalkas\"\u003e\n                      \u003cdata key=\"relation\"\u003eparent_of\u003c/data\u003e\n                    \u003c/edge\u003e\n                    \u003cedge id=\"9\" directed=\"true\" source=\"nisus\" target=\"doris\"\u003e\n                      \u003cdata key=\"relation\"\u003elover_of\u003c/data\u003e\n                    \u003c/edge\u003e\n                    \u003cedge id=\"10\" directed=\"true\" source=\"corydon\" target=\"atalanta\"\u003e\n                      \u003cdata key=\"relation\"\u003elover_of\u003c/data\u003e\n                    \u003c/edge\u003e\n                  \u003c/graph\u003e\n                \u003c/graphml\u003e\n        '404':\n          description: Unknown play or play does not provide relation data\n\n  /corpora/{corpusname}/play/{playname}/segmentation:\n    get:\n      summary: Get a list of segments and characters of a play\n      description: |\n        This endpoint is deprecated. All the information is now available as\n        JSON from `/corpora/{corpusname}/play/{playname}`. Please use that\n        endpoint instead.\n      operationId: play-segments-xml\n      deprecated: true\n      tags: [public]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: playname\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns list of segments\n          content:\n            application/xml:\n              schema:\n                type: string\n            text/csv:\n              schema:\n                type: string\n\n  /corpora/{corpusname}/play/{playname}/spoken-text:\n    get:\n      summary: Get spoken text of a play (excluding stage directions)\n      operationId: play-spoken-text\n      tags: [public]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: playname\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: gender\n          in: query\n          required: false\n          schema:\n            type: string\n            enum: [FEMALE, MALE, UNKNOWN]\n        - name: relation\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - siblings\n              - friends\n              - spouses\n              - parent_of_active\n              - parent_of_passive\n              - lover_of_active\n              - lover_of_passive\n              - related_with_active\n              - related_with_passive\n              - associated_with_active\n              - associated_with_passive\n        - name: role\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns plain text document\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /corpora/{corpusname}/play/{playname}/spoken-text-by-character:\n    get:\n      summary: Get spoken text for each character of a play\n      operationId: play-spoken-text-by-character\n      tags: [public]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: playname\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns texts per character\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                    label:\n                      type: string\n                    isGroup:\n                      type: boolean\n                    gender:\n                      type: string\n                      enum: [FEMALE, MALE, UNKNOWN]\n                    text:\n                      type: array\n                      items:\n                        type: string\n            text/csv:\n              schema:\n                type: string\n\n  /corpora/{corpusname}/play/{playname}/stage-directions:\n    get:\n      summary: Get all stage directions of a play\n      operationId: play-stage-directions\n      tags: [public]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: playname\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns plain text document\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /corpora/{corpusname}/play/{playname}/stage-directions-with-speakers:\n    get:\n      summary: Get all stage directions of a play including speakers\n      operationId: play-stage-directions-with-speakers\n      tags: [public]\n      parameters:\n        - name: corpusname\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: playname\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns plain text document\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /id/{id}:\n    get:\n      summary: Resolve DraCor play ID\n      description: |\n        Depending on the `Accept` header this endpoint redirects to either the\n        RDF representation [play-rdf], the JSON meta data [play-info] or the\n        dracor.org URL of the play identified by the `id` parameter.\n      operationId: resolve-id\n      tags: [public]\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n          example: ger000023\n      responses:\n        '303':\n          description: Redirect to RDF or JSON resource or dracor.org URL.\n        '404':\n          description: No play found for this ID\n\n  /character/{id}:\n    get:\n      summary: List plays having a character identified by Wikidata ID\n      operationId: plays-with-character\n      tags: [public]\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n          example: Q131412\n      responses:\n        '200':\n          description: List of plays.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                    uri:\n                      type: string\n                    title:\n                      type: string\n                    authors:\n                      type: array\n                      items:\n                        type: string\n                    characterName:\n                      type: string\n        '400':\n          description: Invalid character ID.\n\n  /webhook/github:\n    post:\n      summary: GitHub Webhook\n      description: \u003e-\n        Endpoint accepting POST requests from Github (see\n        https://developer.github.com/webhooks/). We currently only handle push\n        events on the main branch.\n      operationId: github-webhook\n      tags: [webhook]\n      parameters:\n        - in: header\n          name: User-Agent\n          required: true\n          schema:\n            type: string\n            pattern: \"GitHub-Hookshot/.*\"\n        - in: header\n          name: X-GitHub-Delivery\n          required: true\n          schema:\n            type: string\n          example: \"4e16d4dc-1d87-11e9-830d-68e2a0832130\"\n        - in: header\n          name: X-GitHub-Event\n          required: true\n          schema:\n            type: string\n            enum: [\"push\"]\n        - in: header\n          name: X-Hub-Signature\n          required: true\n          schema:\n            type: string\n          example: \"sha1=6da21762fada5c1d0205c6e42xxxxxxxxxx357c0\"\n      requestBody:\n        description: \u003e-\n          Webhook payload (see https://developer.github.com/webhooks/#payloads)\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        '200':\n          description: \u003e-\n            Webhook delivery has been recieved, a status message is being\n            returned.\n          content:\n            application/json:\n              schema:\n                type: object\n              example: |\n                {\n                  \"message\": \"Delivery accepted.\",\n                  \"result\": \"/db/data/dracor/webhook/20190121213010-xxx.xml\",\n                  \"scheduled\": true\n                }\n",
			"canonicalURL": "/github.com/dracor-org/dracor-api@ac5a6816ce68efc845aef19a80558f6f956b3cc8/-/blob/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dracor-org/dracor-api/blob/ac5a6816ce68efc845aef19a80558f6f956b3cc8/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/corpora/{corpusname}/metadata.csv\": get: responses: 200: contents: unsupported content types: [text/csv]",
	"NotImplemented": [
		"empty schema",
		"unsupported content types"
	]
}