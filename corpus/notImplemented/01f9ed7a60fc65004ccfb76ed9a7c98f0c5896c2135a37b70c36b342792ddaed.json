{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/swaggest/rest"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "web/_testdata/openapi.json",
			"byteSize": 4786,
			"content": "{\n  \"openapi\":\"3.0.3\",\n  \"info\":{\n    \"title\":\"Albums API\",\n    \"description\":\"This service provides API to manage albums.\",\n    \"version\":\"v1.0.0\"\n  },\n  \"paths\":{\n    \"/albums\":{\n      \"options\":{\n        \"tags\":[\"Album\"],\"summary\":\"Post Albums\",\n        \"operationId\":\"rest/web_test.postAlbums5\",\n        \"parameters\":[{\"name\":\"locale\",\"in\":\"query\",\"schema\":{\"type\":\"string\"}}],\n        \"requestBody\":{\n          \"content\":{\n            \"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/WebTestAlbum\"}}\n          }\n        },\n        \"responses\":{\n          \"201\":{\n            \"description\":\"Created\",\n            \"content\":{\n              \"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/WebTestAlbum\"}}\n            }\n          }\n        }\n      },\n      \"patch\":{\n        \"tags\":[\"Album\"],\"summary\":\"Post Albums\",\n        \"operationId\":\"rest/web_test.postAlbums2\",\n        \"parameters\":[{\"name\":\"locale\",\"in\":\"query\",\"schema\":{\"type\":\"string\"}}],\n        \"requestBody\":{\n          \"content\":{\n            \"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/WebTestAlbum\"}}\n          }\n        },\n        \"responses\":{\n          \"201\":{\n            \"description\":\"Created\",\n            \"content\":{\n              \"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/WebTestAlbum\"}}\n            }\n          }\n        }\n      },\n      \"post\":{\n        \"tags\":[\"Album\"],\"summary\":\"Post Albums\",\n        \"operationId\":\"rest/web_test.postAlbums\",\n        \"parameters\":[{\"name\":\"locale\",\"in\":\"query\",\"schema\":{\"type\":\"string\"}}],\n        \"requestBody\":{\n          \"content\":{\n            \"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/WebTestAlbum\"}}\n          }\n        },\n        \"responses\":{\n          \"201\":{\n            \"description\":\"Created\",\n            \"content\":{\n              \"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/WebTestAlbum\"}}\n            }\n          }\n        }\n      },\n      \"put\":{\n        \"tags\":[\"Album\"],\"summary\":\"Post Albums\",\n        \"operationId\":\"rest/web_test.postAlbums3\",\n        \"parameters\":[{\"name\":\"locale\",\"in\":\"query\",\"schema\":{\"type\":\"string\"}}],\n        \"requestBody\":{\n          \"content\":{\n            \"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/WebTestAlbum\"}}\n          }\n        },\n        \"responses\":{\n          \"201\":{\n            \"description\":\"Created\",\n            \"content\":{\n              \"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/WebTestAlbum\"}}\n            }\n          }\n        }\n      },\n      \"trace\":{\n        \"tags\":[\"Album\"],\"summary\":\"Post Albums\",\n        \"operationId\":\"rest/web_test.postAlbums4\",\n        \"parameters\":[{\"name\":\"locale\",\"in\":\"query\",\"schema\":{\"type\":\"string\"}}],\n        \"responses\":{\n          \"201\":{\n            \"description\":\"Created\",\n            \"content\":{\n              \"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/WebTestAlbum\"}}\n            }\n          }\n        }\n      }\n    },\n    \"/albums/{id}\":{\n      \"delete\":{\n        \"tags\":[\"Album\"],\"summary\":\"Album By ID\",\n        \"operationId\":\"rest/web_test.albumByID\",\n        \"parameters\":[\n          {\"name\":\"locale\",\"in\":\"query\",\"schema\":{\"type\":\"string\"}},\n          {\n            \"name\":\"id\",\"in\":\"path\",\"required\":true,\"schema\":{\"type\":\"integer\"}\n          }\n        ],\n        \"responses\":{\n          \"200\":{\n            \"description\":\"OK\",\n            \"content\":{\n              \"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/WebTestAlbum\"}}\n            }\n          }\n        }\n      },\n      \"get\":{\n        \"tags\":[\"Album\"],\"summary\":\"Album By ID\",\n        \"operationId\":\"rest/web_test.albumByID3\",\n        \"parameters\":[\n          {\"name\":\"locale\",\"in\":\"query\",\"schema\":{\"type\":\"string\"}},\n          {\n            \"name\":\"id\",\"in\":\"path\",\"required\":true,\"schema\":{\"type\":\"integer\"}\n          }\n        ],\n        \"responses\":{\n          \"200\":{\n            \"description\":\"OK\",\n            \"content\":{\n              \"application/json\":{\"schema\":{\"$ref\":\"#/components/schemas/WebTestAlbum\"}}\n            }\n          }\n        }\n      },\n      \"head\":{\n        \"tags\":[\"Album\"],\"summary\":\"Album By ID\",\n        \"operationId\":\"rest/web_test.albumByID2\",\n        \"parameters\":[\n          {\"name\":\"locale\",\"in\":\"query\",\"schema\":{\"type\":\"string\"}},\n          {\n            \"name\":\"id\",\"in\":\"path\",\"required\":true,\"schema\":{\"type\":\"integer\"}\n          }\n        ],\n        \"responses\":{\"200\":{\"description\":\"OK\",\"content\":{\"application/json\":{}}}}\n      }\n    }\n  },\n  \"components\":{\n    \"schemas\":{\n      \"WebTestAlbum\":{\n        \"type\":\"object\",\n        \"properties\":{\n          \"artist\":{\"type\":\"string\"},\"id\":{\"type\":\"integer\"},\n          \"price\":{\"type\":\"number\"},\"title\":{\"type\":\"string\"}\n        }\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/swaggest/rest@594b2d23e65e109db8fce337762291921ba17cfc/-/blob/web/_testdata/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/swaggest/rest/blob/594b2d23e65e109db8fce337762291921ba17cfc/web/_testdata/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/albums/{id}\": head: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}