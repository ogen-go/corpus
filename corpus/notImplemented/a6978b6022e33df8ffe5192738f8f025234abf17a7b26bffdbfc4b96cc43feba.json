{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/FIWARE/CanisMajor"
		},
		"file": {
			"name": "broker-client.yaml",
			"size": 0,
			"path": "api/broker-client.yaml",
			"byteSize": 60712,
			"content": "openapi: 3.0.3\ninfo:\n  description: 'This OAS file describes the NGSI-LD API defined by the ETSI ISG CIM group. This Cross-domain Context Information Management API allows to provide, consume and subscribe to context information in multiple scenarios and involving multiple stakeholders'\n  version: latest\n  title: ETSI ISG CIM / NGSI-LD API\n  contact:\n    email: NGSI-LD@etsi.org\nexternalDocs:\n  description: Find out more about the ETSI ISG Context Information Management\n  url: 'https://portal.etsi.org/tb.aspx?tbid=854\u0026SubTB=854'\ntags:\n  - name: ETSI\n    description: European Telecommunications Standards Institute\n    externalDocs:\n      description: Find out more\n      url: 'http://www.etsi.org'\n  - name: CIM\n    description: Context Information Management\n    externalDocs:\n      description: Find out more\n      url: 'https://portal.etsi.org/tb.aspx?tbid=854\u0026SubTB=854'\n  - name: JSON-LD\n    description: JSON for Linked Data\n    externalDocs:\n      description: Find out more\n      url: 'https://json-ld.org/'\n  - name: NGSI-LD API\n    description: API defined by the ETSI ISG CIM\n    externalDocs:\n      description: Preliminary Specification\n      url: 'http://www.etsi.org/deliver/etsi_gs/CIM/001_099/004/01.01.01_60/gs_CIM004v010101p.pdf'\npaths:\n  '/entities/':\n    parameters:\n      - $ref: '#/components/parameters/tenantHeader'\n    get:\n      description: Retrieve a set of entities which matches a specific query from an NGSI-LD system\n      operationId: queryEntities\n      tags:\n        - Context Information\n        - Entities\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/idPattern'\n        - $ref: '#/components/parameters/type'\n        - $ref: '#/components/parameters/attrs'\n        - $ref: '#/components/parameters/q'\n        - $ref: '#/components/parameters/georel'\n        - $ref: '#/components/parameters/geometry'\n        - $ref: '#/components/parameters/coordinates'\n        - $ref: '#/components/parameters/geoproperty'\n        - $ref: '#/components/parameters/csf'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/options'\n        - $ref: '#/components/parameters/link'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/EntityList'\n              examples:\n                simple:\n                  externalValue: 'http://localhost:8090/examples/EntityList-example.json'\n        '400':\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    post:\n      description: Create a new Entity within an NGSI-LD system\n      operationId: createEntity\n      tags:\n        - Context Information\n        - Entities\n      requestBody:\n        required: true\n        content:\n          application/ld+json:\n            schema:\n              $ref: '#/components/schemas/Entity'\n      responses:\n        '201':\n          description: Created. Contains the resource URI of the created Entity\n        '400':\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '409':\n          description: Already exists\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '422':\n          description: Unprocessable Entity\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  '/entities/{entityId}':\n    parameters:\n      - $ref: '#/components/parameters/tenantHeader'\n    get:\n      description: Retrieve an specific Entity from an NGSI-LD system. It's possible to specify the Entity attributes to be retrieved by using query parameters\n      operationId: retrieveEntityById\n      tags:\n        - Context Information\n        - Entities\n      parameters:\n        - $ref: '#/components/parameters/entityId'\n        - $ref: '#/components/parameters/attrs'\n        - $ref: '#/components/parameters/parameters-type'\n        - $ref: '#/components/parameters/options'\n        - $ref: '#/components/parameters/link'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/Entity'\n              examples:\n                simple:\n                  externalValue: 'http://localhost:8090/examples/Entity-example.json'\n        '400':\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: Not Found\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    delete:\n      description: Removes an specific Entity from an NGSI-LD system\n      operationId: removeEntityById\n      tags:\n        - Context Information\n        - Entities\n      parameters:\n        - $ref: '#/components/parameters/entityId'\n        - $ref: '#/components/parameters/parameters-type'\n      responses:\n        '204':\n          description: No Content. The entity was removed successfully\n        '400':\n          description: Bad Request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: Not Found\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  '/entities/{entityId}/attrs/':\n    parameters:\n      - $ref: '#/components/parameters/tenantHeader'\n    post:\n      description: Append new Entity attributes to an existing Entity within an NGSI-LD system\n      operationId: appendEntityAttrs\n      tags:\n        - Context Information\n        - Entities\n      parameters:\n        - $ref: '#/components/parameters/entityId'\n        - $ref: '#/components/parameters/parameters-options'\n      requestBody:\n        required: true\n        content:\n          application/ld+json:\n            schema:\n              $ref: '#/components/schemas/EntityFragment'\n      responses:\n        '204':\n          description: No Content\n        '207':\n          description: Partial Success. Only the attributes included in the response payload were successfully appended\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/UpdateResult'\n        '400':\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: Not Found\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    patch:\n      description: Update existing Entity attributes within an NGSI-LD system\n      operationId: updateEntityAttrs\n      tags:\n        - Context Information\n        - Entities\n      parameters:\n        - $ref: '#/components/parameters/entityId'\n      requestBody:\n        required: true\n        content:\n          application/ld+json:\n            schema:\n              $ref: '#/components/schemas/EntityFragment'\n      responses:\n        '204':\n          description: No Content.\n        '207':\n          description: Partial Success. Only the attributes included in the response payload were successfully updated\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/UpdateResult'\n        '400':\n          description: Bad Request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: Not Found\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  '/entities/{entityId}/attrs/{attrId}':\n    parameters:\n      - $ref: '#/components/parameters/tenantHeader'\n    patch:\n      description: Update existing Entity attributes within an NGSI-LD system\n      operationId: partialAttrUpdate\n      tags:\n        - Context Information\n        - Entities\n      parameters:\n        - $ref: '#/components/parameters/entityId'\n        - $ref: '#/components/parameters/attrId'\n      requestBody:\n        required: true\n        content:\n          application/ld+json:\n            schema:\n              $ref: '#/components/schemas/EntityFragment'\n      responses:\n        '204':\n          description: No Content.\n        '400':\n          description: Bad Request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: Not Found\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    delete:\n      description: Removes an existing Entity attribute within an NGSI-LD system\n      operationId: removeEntityAttr\n      tags:\n        - Context Information\n        - Entities\n      parameters:\n        - $ref: '#/components/parameters/entityId'\n        - $ref: '#/components/parameters/attrId'\n      responses:\n        '204':\n          description: No Content.\n        '400':\n          description: Bad Request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: Not Found\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  /subscriptions/:\n    get:\n      description: Retrieves the subscriptions available in an NGSI-LD system\n      operationId: retrieveSubscriptions\n      tags:\n        - Context Subscription\n        - Subscriptions\n      parameters:\n        - $ref: '#/components/parameters/limit'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionList'\n              examples:\n                simple:\n                  externalValue: 'http://localhost:8090/examples/SubscriptionList-example.json'\n        '400':\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    post:\n      parameters:\n        - $ref: '#/components/parameters/tenantHeader'\n      description: Creates a new Subscription within an NGSI-LD system\n      operationId: createSubscription\n      tags:\n        - Context Subscription\n        - Subscriptions\n      requestBody:\n        required: true\n        content:\n          application/ld+json:\n            schema:\n              $ref: '#/components/schemas/Subscription'\n      responses:\n        '201':\n          description: Created. Contains the resource URI of the created Subscription\n        '400':\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '409':\n          description: Already exists\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  '/subscriptions/{subscriptionId}':\n    get:\n      description: Retrieves a specific Subscription from an NGSI-LD system\n      operationId: retrieveSubscriptionById\n      tags:\n        - Context Subscription\n        - Subscriptions\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n              examples:\n                simple:\n                  externalValue: 'http://localhost:8090/examples/Subscription-example_C.4.json'\n        '400':\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: Not Found\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    patch:\n      description: Updates a specific Subscription within an NGSI-LD system\n      operationId: updateSubscription\n      tags:\n        - Context Subscription\n        - Subscriptions\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n      requestBody:\n        required: true\n        content:\n          application/ld+json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionFragment'\n      responses:\n        '204':\n          description: No Content. The Subscription was updated successfully\n        '400':\n          description: Bad Request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: Not Found\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    delete:\n      description: Removes a specific Subscription from an NGSI-LD system\n      operationId: removeSubscription\n      tags:\n        - Context Subscription\n        - Subscriptions\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n      responses:\n        '204':\n          description: No Content. The Subscription was removed successfully\n        '400':\n          description: Bad Request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: Not Found\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  /csourceRegistrations/:\n    get:\n      description: Retrieve a set of context sources which matches a specific query from an NGSI-LD system\n      operationId: queryCsources\n      tags:\n        - Context Sources\n        - CSourceRegistrations\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/idPattern'\n        - $ref: '#/components/parameters/type'\n        - $ref: '#/components/parameters/attrs'\n        - $ref: '#/components/parameters/q'\n        - $ref: '#/components/parameters/georel'\n        - $ref: '#/components/parameters/geometry'\n        - $ref: '#/components/parameters/coordinates'\n        - $ref: '#/components/parameters/geoproperty'\n        - $ref: '#/components/parameters/limit'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ContextSourceRegistrationList'\n              examples:\n                simple:\n                  externalValue: 'http://localhost:8090/examples/ContextSourceRegistrationList-example.json'\n        '400':\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    post:\n      description: Registers a new context source within an NGSI-LD system\n      operationId: registerCsource\n      tags:\n        - Context Sources\n        - CSourceRegistrations\n      requestBody:\n        required: true\n        content:\n          application/ld+json:\n            schema:\n              $ref: '#/components/schemas/ContextSourceRegistration'\n      responses:\n        '201':\n          description: Created. Contains the resource URI of the created Registration\n        '400':\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '409':\n          description: Already exists\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  '/csourceRegistrations/{registrationId}':\n    get:\n      description: Retrieves a specific context source registration from an NGSI-LD system\n      operationId: retrieveCsource\n      tags:\n        - Context Sources\n        - CSourceRegistrations\n      parameters:\n        - $ref: '#/components/parameters/registrationId'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ContextSourceRegistration'\n              examples:\n                simple:\n                  externalValue: 'http://localhost:8090/examples/'\n        '400':\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: Not Found\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    delete:\n      description: Removes an specific context source registration within an NGSI-LD system\n      operationId: removeCsource\n      tags:\n        - Context Sources\n        - CSourceRegistrations\n      parameters:\n        - $ref: '#/components/parameters/registrationId'\n      responses:\n        '204':\n          description: No Content. The Registration was removed successfully\n        '400':\n          description: Bad Request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: Not Found\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  /csourceSubscriptions/:\n    get:\n      description: Retrieves the context source discovery subscriptions available in an NGSI-LD system\n      operationId: retrieveCSourceSubscriptions\n      tags:\n        - Context Sources\n        - CSourceSubscriptions\n      parameters:\n        - $ref: '#/components/parameters/limit'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionList'\n              examples:\n                simple:\n                  externalValue: 'http://localhost:8090/examples/SubscriptionList-example.json'\n        '400':\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    post:\n      description: Creates a context source discovery Subscription within an NGSI-LD system\n      operationId: createCSourceSubscription\n      tags:\n        - Context Sources\n        - CSourceSubscriptions\n      requestBody:\n        required: true\n        content:\n          application/ld+json:\n            schema:\n              $ref: '#/components/schemas/Subscription'\n      responses:\n        '201':\n          description: Created. Contains the resource URI of the created Subscription\n        '400':\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '409':\n          description: Already exists\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  '/csourceSubscriptions/{subscriptionId}':\n    get:\n      description: Retrieves a specific Subscription from an NGSI-LD system\n      operationId: retrieveCSourceSubscriptionsById\n      tags:\n        - Context Sources\n        - CSourceSubscriptions\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n              examples:\n                simple:\n                  externalValue: 'http://localhost:8090/examples/Subscription-example_C.4.json'\n        '400':\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: Not Found\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    patch:\n      description: Updates a specific context source discovery Subscription within an NGSI-LD system\n      operationId: updateCSourceSubscription\n      tags:\n        - Context Sources\n        - CSourceSubscriptions\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n      requestBody:\n        required: true\n        content:\n          application/ld+json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionFragment'\n      responses:\n        '204':\n          description: No Content. The Subscription was updated successfully\n        '400':\n          description: Bad Request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: Not Found\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    delete:\n      description: Removes a specific Context Source Subscription from an NGSI-LD system\n      operationId: removeCSourceSubscription\n      tags:\n        - Context Sources\n        - CSourceSubscriptions\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n      responses:\n        '204':\n          description: No Content. The Subscription was removed successfully\n        '400':\n          description: Bad Request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: Not Found\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  /entityOperations/create:\n    post:\n      description: Batch Entity creation\n      operationId: batchEntityCreation\n      tags:\n        - Batch Operations\n        - Entities\n      requestBody:\n        required: true\n        content:\n          application/ld+json:\n            schema:\n              $ref: '#/components/schemas/EntityList'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/BatchOperationResult'\n        '400':\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  /entityOperations/update:\n    post:\n      description: Batch Entity update\n      operationId: batchEntityUpdate\n      tags:\n        - Batch Operations\n        - Entities\n      parameters:\n        - name: options\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - noOverwrite\n      requestBody:\n        required: true\n        content:\n          application/ld+json:\n            schema:\n              $ref: '#/components/schemas/EntityList'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/BatchOperationResult'\n        '400':\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  /entityOperations/upsert:\n    post:\n      description: Batch Entity upsert\n      operationId: batchEntityUpsert\n      tags:\n        - Batch Operations\n        - Entities\n      parameters:\n        - name: options\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - replace\n              - update\n      requestBody:\n        required: true\n        content:\n          application/ld+json:\n            schema:\n              $ref: '#/components/schemas/EntityList'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/BatchOperationResult'\n        '400':\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  /entityOperations/delete:\n    post:\n      description: Batch Entity delete\n      operationId: batchEntityDelete\n      tags:\n        - Batch Operations\n        - Entities\n      requestBody:\n        required: true\n        content:\n          application/ld+json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uri\n              minItems: 1\n      responses:\n        '200':\n          description: Success\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/BatchOperationResult'\n        '400':\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  /temporal/entities/:\n    get:\n      description: Query temporal evolution of Entities from an NGSI-LD system\n      operationId: queryTemporalEntities\n      tags:\n        - Temporal Evolution\n        - Temporal\n        - Temporal Retrieval\n      parameters:\n        - $ref: '#/components/parameters/link'\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/idPattern'\n        - $ref: '#/components/parameters/type'\n        - $ref: '#/components/parameters/attrs'\n        - $ref: '#/components/parameters/q'\n        - $ref: '#/components/parameters/georel'\n        - $ref: '#/components/parameters/geometry'\n        - $ref: '#/components/parameters/coordinates'\n        - $ref: '#/components/parameters/geoproperty'\n        - $ref: '#/components/parameters/timerel'\n        - $ref: '#/components/parameters/timeproperty'\n        - $ref: '#/components/parameters/time'\n        - $ref: '#/components/parameters/endTime'\n        - $ref: '#/components/parameters/csf'\n        - $ref: '#/components/parameters/pageSize'\n        - $ref: '#/components/parameters/pageAnchor'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/components-parameters-options'\n        - $ref: '#/components/parameters/lastN'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/EntityTemporalList'\n              examples:\n                simple:\n                  externalValue: 'http://localhost:8090/examples/EntityTemporalList-example.json'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityTemporalList'\n        '400':\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    post:\n      description: Create or update temporal representation of an Entity within an NGSI-LD system\n      operationId: createUpdateEntityTemporal\n      tags:\n        - Temporal Evolution\n        - Temporal\n      requestBody:\n        required: true\n        content:\n          application/ld+json:\n            schema:\n              $ref: '#/components/schemas/EntityTemporal'\n            examples:\n              simple:\n                externalValue: 'http://localhost:8090/examples/EntityTemporal-example_C5.5.3.json'\n      responses:\n        '201':\n          description: Created. Contains the resource URI of the created Entity\n        '204':\n          description: Updated. No Content\n        '400':\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '409':\n          description: Already exists\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '422':\n          description: Unprocessable Entity\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  '/temporal/entities/{entityId}':\n    get:\n      description: Retrieve the temporal representation of an specific Entity from an NGSI-LD system. It's possible to specify the Entity attributes to be retrieved by using query parameters\n      operationId: retrieveEntityTemporalById\n      tags:\n        - Temporal Evolution\n        - Temporal\n        - Temporal Retrieval\n      parameters:\n        - $ref: '#/components/parameters/entityId'\n        - $ref: '#/components/parameters/link'\n        - $ref: '#/components/parameters/attrs'\n        - $ref: '#/components/parameters/components-parameters-options'\n        - $ref: '#/components/parameters/timerel'\n        - $ref: '#/components/parameters/timeproperty'\n        - $ref: '#/components/parameters/time'\n        - $ref: '#/components/parameters/endTime'\n        - $ref: '#/components/parameters/lastN'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/EntityTemporal'\n              examples:\n                simple:\n                  externalValue: 'http://localhost:8090/examples/EntityTemporal-example_C5.5.3.json'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityTemporal'\n        '400':\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: Not Found\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    delete:\n      description: Removes the temporal representation of an Entity from an NGSI-LD system\n      operationId: removeEntityTemporalById\n      tags:\n        - Temporal Evolution\n        - Temporal\n      parameters:\n        - $ref: '#/components/parameters/entityId'\n        - $ref: '#/components/parameters/parameters-type'\n      responses:\n        '204':\n          description: No Content. The entity was removed successfully\n        '400':\n          description: Bad Request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: Not Found\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  '/temporal/entities/{entityId}/attrs/':\n    post:\n      description: Add new attributes to an existing Temporal Entity within an NGSI-LD system\n      operationId: addTemporalEntityAttrs\n      tags:\n        - Temporal Evolution\n        - Temporal\n      parameters:\n        - $ref: '#/components/parameters/entityId'\n      requestBody:\n        required: true\n        content:\n          application/ld+json:\n            schema:\n              $ref: '#/components/schemas/EntityTemporalFragment'\n      responses:\n        '204':\n          description: No Content\n        '400':\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: Not Found\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  '/temporal/entities/{entityId}/attrs/{attrId}':\n    delete:\n      description: Attribute from Temporal Representation of Entity deletion\n      operationId: removeEntityTemporalAttr\n      tags:\n        - Temporal Evolution\n        - Temporal\n      parameters:\n        - $ref: '#/components/parameters/entityId'\n        - $ref: '#/components/parameters/attrId'\n      responses:\n        '204':\n          description: No Content.\n        '400':\n          description: Bad Request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: Not Found\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  '/temporal/entities/{entityId}/attrs/{attrId}/{instanceId}':\n    patch:\n      description: 'Allows modifying a specific Attribute (Property or Relationship) instance, identified by its instanceId, of a Temporal Representation of an Entity.'\n      operationId: modifyEntityTemporalAttrInstance\n      tags:\n        - Temporal Evolution\n        - Temporal\n      parameters:\n        - $ref: '#/components/parameters/entityId'\n        - $ref: '#/components/parameters/attrId'\n        - $ref: '#/components/parameters/instanceId'\n      requestBody:\n        required: true\n        content:\n          application/ld+json:\n            schema:\n              $ref: '#/components/schemas/EntityTemporalFragment'\n      responses:\n        '204':\n          description: No Content\n        '400':\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: Not Found\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    delete:\n      description: Attribute Instance deletion by instance id.\n      operationId: removeEntityTemporalAttrInstance\n      tags:\n        - Temporal Evolution\n        - Temporal\n      parameters:\n        - $ref: '#/components/parameters/entityId'\n        - $ref: '#/components/parameters/attrId'\n        - $ref: '#/components/parameters/instanceId'\n      responses:\n        '204':\n          description: No Content.\n        '400':\n          description: Bad Request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        '404':\n          description: Not Found\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  '/temporal/entityOperations/query':\n    post:\n      description: Query temporal evolution of Entities from an NGSI-LD system\n      operationId: queryTemporalEntitiesOnPost\n      tags:\n        - Temporal Evolution\n        - Temporal\n        - Temporal Retrieval\n      parameters:\n        - $ref: '#/components/parameters/link'\n        - $ref: '#/components/parameters/pageSize'\n        - $ref: '#/components/parameters/pageAnchor'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/components-parameters-options'\n        - $ref: '#/components/parameters/lastN'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/EntityTemporalList'\n              examples:\n                simple:\n                  externalValue: 'http://localhost:8090/examples/EntityTemporalList-example.json'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityTemporalList'\n        '400':\n          description: Bad request\n          content:\n            application/ld+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\ncomponents:\n  parameters:\n    id:\n      name: id\n      description: Comma separated list of URIs to be retrieved\n      in: query\n      required: false\n      schema:\n        type: string\n    idPattern:\n      name: idPattern\n      description: Regular expression that must be matched by Entity ids\n      in: query\n      required: false\n      schema:\n        type: string\n        format: regexp\n    type:\n      name: type\n      description: Comma separated list of Entity type names to be retrieved\n      in: query\n      required: false\n      schema:\n        type: string\n        minLength: 1\n    attrs:\n      name: attrs\n      description: Comma separated list of attribute names (properties or relationships) to be retrieved\n      in: query\n      required: false\n      schema:\n        type: string\n        minLength: 1\n    q:\n      name: q\n      description: Query\n      in: query\n      required: false\n      schema:\n        type: string\n        minLength: 1\n    georel:\n      name: georel\n      description: Geo-relationship\n      in: query\n      required: false\n      schema:\n        $ref: '#/components/schemas/georel'\n    geometry:\n      name: geometry\n      description: Geometry\n      in: query\n      required: false\n      schema:\n        $ref: '#/components/schemas/geometryEnum'\n    tenantHeader:\n      name: NGSILD-Tenant\n      in: header\n      schema:\n        type: string\n        default: \"orion\"\n      required: true\n    coordinates:\n      name: coordinates\n      description: Coordinates serialized as a string\n      in: query\n      required: false\n      schema:\n        type: string\n        minLength: 1\n    geoproperty:\n      name: geoproperty\n      description: The name of the property that contains the geo-spatial data that will be used to resolve the geoquery\n      in: query\n      required: false\n      schema:\n        type: string\n        minLength: 1\n    csf:\n      name: csf\n      description: Context Source Filter\n      in: query\n      required: false\n      schema:\n        type: string\n        minLength: 1\n    limit:\n      name: limit\n      description: Pagination limit\n      in: query\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n        maximum: 100\n    pageAnchor:\n      name: pageAnchor\n      description: Size of the page to be returned\n      in: query\n      required: false\n      schema:\n        type: string\n        format: uri\n    pageSize:\n      name: pageSize\n      description: Size of the page to be returned\n      in: query\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n        maximum: 100\n    offset:\n      name: offset\n      description: Pagination offset\n      in: query\n      required: false\n      schema:\n        type: integer\n        default: 0\n    options:\n      name: options\n      description: Options dictionary\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - keyValues\n          - sysAttrs\n    entityId:\n      name: entityId\n      description: Entity Id\n      in: path\n      required: true\n      schema:\n        type: string\n        format: uri\n    parameters-type:\n      name: type\n      description: Entity Type\n      in: query\n      required: false\n      schema:\n        $ref: '#/components/schemas/Name'\n    parameters-options:\n      name: options\n      description: Indicates that no attribute overwrite shall be performed\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - noOverwrite\n    attrId:\n      name: attrId\n      description: Attribute Id\n      in: path\n      required: true\n      schema:\n        $ref: '#/components/schemas/Name'\n    subscriptionId:\n      name: subscriptionId\n      description: Subscription Id\n      in: path\n      required: true\n      schema:\n        type: string\n        format: uri\n    registrationId:\n      name: registrationId\n      description: Registration Id\n      in: path\n      required: true\n      schema:\n        type: string\n        format: uri\n    link:\n      name: Link\n      description: Link header to be used as described in the json-ld spec.\n      in: header\n      required: false\n      schema:\n        type: string\n    timerel:\n      name: timerel\n      description: Time relationship\n      in: query\n      required: false\n      schema:\n        $ref: '#/components/schemas/timerel'\n    timeproperty:\n      name: timeproperty\n      description: The name of the property that contains the temporal data that will be used to resolve the temporal query\n      in: query\n      required: false\n      schema:\n        $ref: '#/components/schemas/Name'\n    time:\n      name: timeAt\n      description: start time for temporal query\n      in: query\n      required: false\n      schema:\n        type: string\n        format: date-time\n    endTime:\n      name: endTimeAt\n      description: end time for temporal query\n      in: query\n      required: false\n      schema:\n        type: string\n        format: date-time\n    components-parameters-options:\n      name: options\n      description: Options dictionary\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - temporalValues\n          - sysAttrs\n    lastN:\n      name: lastN\n      description: Only retrieve last N instances\n      in: query\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n    instanceId:\n      name: instanceId\n      description: Instance Id\n      in: path\n      required: true\n      schema:\n        type: string\n        format: uri\n  schemas:\n    georelEnum:\n      type: string\n      enum:\n        - equals\n        - disjoint\n        - intersects\n        - within\n        - contains\n        - overlaps\n        - ^near;((maxDistance==\\d+)|(minDistance==\\d+))$\n    georel:\n      type: string\n    geometryEnum:\n      type: string\n    geometryType:\n      type: string\n    positionDefinition:\n      description: A single position\n      type: array\n      minItems: 2\n      maxItems: 2\n      items:\n        type: number\n      additionalProperties: false\n    positionArrayDefinition:\n      description: An array of positions\n      type: array\n      items:\n        $ref: '#/components/schemas/positionDefinition'\n    lineStringDefinition:\n      description: An array of two or more positions\n      type: array\n      items:\n        $ref: '#/components/schemas/positionDefinition'\n      minItems: 2\n    linearRingDefinition:\n      description: An array of four positions where the first equals the last\n      type: array\n      items:\n        $ref: '#/components/schemas/positionDefinition'\n      minItems: 4\n    polygonDefinition:\n      description: An array of linear rings\n      type: array\n      items:\n        $ref: '#/components/schemas/linearRingDefinition'\n    coordinates:\n      oneOf:\n        - $ref: '#/components/schemas/positionDefinition'\n        - $ref: '#/components/schemas/positionArrayDefinition'\n        - $ref: '#/components/schemas/polygonDefinition'\n        - $ref: '#/components/schemas/lineStringDefinition'\n    LdContext:\n      type: object\n    Point:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - Point\n        coordinates:\n          $ref: '#/components/schemas/positionDefinition'\n    MultiPoint:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - MultiPoint\n        coordinates:\n          $ref: '#/components/schemas/positionArrayDefinition'\n    Polygon:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - Polygon\n        coordinates:\n          $ref: '#/components/schemas/polygonDefinition'\n    LineString:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - LineString\n        coordinates:\n          $ref: '#/components/schemas/lineStringDefinition'\n    MultiLineString:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - MultiLineString\n        coordinates:\n          type: array\n          items:\n            $ref: '#/components/schemas/lineStringDefinition'\n    MultiPolygon:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - MultiPolygon\n        coordinates:\n          type: array\n          items:\n            $ref: '#/components/schemas/polygonDefinition'\n    Geometry:\n      description: ' Avalid GeoJSON geometry object'\n      oneOf:\n        - $ref: '#/components/schemas/Point'\n        - $ref: '#/components/schemas/MultiPoint'\n        - $ref: '#/components/schemas/Polygon'\n        - $ref: '#/components/schemas/LineString'\n        - $ref: '#/components/schemas/MultiLineString'\n        - $ref: '#/components/schemas/MultiPolygon'\n    observedAt:\n      type: string\n      format: date-time\n    createdAt:\n      type: string\n      format: date-time\n    modifiedAt:\n      type: string\n      format: date-time\n    datasetId:\n      type: string\n      format: uri\n    instanceId:\n      type: string\n      format: uri\n    Property:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - Property\n        value:\n          oneOf:\n            - type: string\n            - type: number\n            - type: boolean\n            - type: object\n            - type: array\n              items:\n                oneOf:\n                  - type: string\n                  - type: number\n                  - type: boolean\n                  - type: object\n        observedAt:\n          $ref: '#/components/schemas/observedAt'\n        createdAt:\n          $ref: '#/components/schemas/createdAt'\n        modifiedAt:\n          $ref: '#/components/schemas/modifiedAt'\n        datasetId:\n          $ref: '#/components/schemas/datasetId'\n        instanceId:\n          $ref: '#/components/schemas/instanceId'\n        unitCode:\n          type: string\n      required:\n        - type\n        - value\n      additionalProperties:\n        oneOf:\n          - $ref: '#/components/schemas/Property'\n          - $ref: '#/components/schemas/Relationship'\n    Relationship:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - Relationship\n        object:\n          type: string\n          format: uri\n        observedAt:\n          $ref: '#/components/schemas/observedAt'\n        createdAt:\n          $ref: '#/components/schemas/createdAt'\n        modifiedAt:\n          $ref: '#/components/schemas/modifiedAt'\n        datasetId:\n          $ref: '#/components/schemas/datasetId'\n        instanceId:\n          $ref: '#/components/schemas/instanceId'\n      required:\n        - type\n        - object\n      additionalProperties:\n        oneOf:\n          - $ref: '#/components/schemas/Property'\n          - $ref: '#/components/schemas/Relationship'\n    GeoProperty:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - GeoProperty\n        value:\n          type: object\n        observedAt:\n          $ref: '#/components/schemas/observedAt'\n        createdAt:\n          $ref: '#/components/schemas/createdAt'\n        modifiedAt:\n          $ref: '#/components/schemas/modifiedAt'\n        datasetId:\n          $ref: '#/components/schemas/datasetId'\n        instanceId:\n          $ref: '#/components/schemas/instanceId'\n        unitCode:\n          type: string\n      required:\n        - type\n        - value\n      additionalProperties:\n        oneOf:\n          - $ref: '#/components/schemas/Geometry'\n          - $ref: '#/components/schemas/Property'\n          - $ref: '#/components/schemas/Relationship'\n    Name:\n      type: string\n      pattern: '^((\\d|[a-zA-Z]|_)+(:(\\d|[a-zA-Z]|_)+)?(#\\d+)?)$'\n      minLength: 1\n      description: NGSI-LD Name\n    EntityFragment:\n      type: object\n      properties:\n        '@context':\n          $ref: '#/components/schemas/LdContext'\n        location:\n          $ref: '#/components/schemas/GeoProperty'\n        observationSpace:\n          $ref: '#/components/schemas/GeoProperty'\n        operationSpace:\n          $ref: '#/components/schemas/GeoProperty'\n        id:\n          type: string\n          format: uri\n        type:\n          $ref: '#/components/schemas/Name'\n        createdAt:\n          $ref: '#/components/schemas/createdAt'\n        modifiedAt:\n          $ref: '#/components/schemas/modifiedAt'\n      additionalProperties:\n        oneOf:\n          - $ref: '#/components/schemas/Property'\n          - $ref: '#/components/schemas/Relationship'\n          - $ref: '#/components/schemas/GeoProperty'\n    Entity:\n      type: object\n      properties:\n        '@context':\n          $ref: '#/components/schemas/LdContext'\n        location:\n          $ref: '#/components/schemas/GeoProperty'\n        observationSpace:\n          $ref: '#/components/schemas/GeoProperty'\n        operationSpace:\n          $ref: '#/components/schemas/GeoProperty'\n        id:\n          type: string\n          format: uri\n        type:\n          $ref: '#/components/schemas/Name'\n        createdAt:\n          $ref: '#/components/schemas/createdAt'\n        modifiedAt:\n          $ref: '#/components/schemas/modifiedAt'\n      additionalProperties:\n        oneOf:\n          - $ref: '#/components/schemas/Property'\n          - $ref: '#/components/schemas/Relationship'\n          - $ref: '#/components/schemas/GeoProperty'\n    EntityList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Entity'\n    ProblemDetails:\n      type: object\n      properties:\n        type:\n          type: string\n          format: uri\n        title:\n          type: string\n        detail:\n          type: string\n      required:\n        - type\n    NotUpdatedDetails:\n      type: object\n      properties:\n        attributeName:\n          type: string\n          pattern: ''\n        reason:\n          type: string\n          minLength: 1\n    UpdateResult:\n      type: object\n      properties:\n        updated:\n          type: array\n          items:\n            type: string\n            pattern: ''\n        notUpdated:\n          type: array\n          items:\n            $ref: '#/components/schemas/NotUpdatedDetails'\n    EntityInfo:\n      type: object\n      properties:\n        id:\n          type: object\n        type:\n          type: string\n        idPattern:\n          type: string\n          format: regex\n      required:\n        - type\n    GeoQuery:\n      type: object\n      required:\n        - geometry\n        - coordinates\n        - georel\n      properties:\n        georel:\n          $ref: '#/components/schemas/georel'\n        coordinates:\n          type: array\n          items:\n            oneOf:\n              - type: integer\n              - $ref: '#/components/schemas/coordinates'\n        geometry:\n          $ref: '#/components/schemas/geometryType'\n        geoproperty:\n          type: string\n    SubscriptionFragment:\n      type: object\n      properties:\n        '@context':\n          $ref: '#/components/schemas/LdContext'\n        entities:\n          type: array\n          items:\n            $ref: '#/components/schemas/EntityInfo'\n          minItems: 1\n        name:\n          type: string\n          minLength: 1\n        description:\n          type: string\n          minLength: 1\n        watchedAttributes:\n          type: array\n          minItems: 1\n          items:\n            $ref: '#/components/schemas/Name'\n          uniqueItems: true\n        timeInterval:\n          type: number\n          minimum: 0\n        expires:\n          type: string\n          format: date-time\n        isActive:\n          type: boolean\n        throttling:\n          type: number\n          minimum: 1\n        q:\n          type: string\n        geoQ:\n          $ref: '#/components/schemas/GeoQuery'\n        csf:\n          type: string\n    Endpoint:\n      type: object\n      required:\n        - uri\n      properties:\n        uri:\n          type: string\n          format: uri\n        accept:\n          type: string\n          enum:\n            - application/ld+json\n    NotificationParams:\n      type: object\n      properties:\n        attributes:\n          type: array\n          minItems: 1\n          items:\n            type: string\n            minLength: 1\n          uniqueItems: true\n        format:\n          type: string\n        endpoint:\n          $ref: '#/components/schemas/Endpoint'\n        status:\n          type: string\n          enum:\n            - ok\n            - failed\n        timesSent:\n          type: number\n          minimum: 1\n        lastNotification:\n          type: string\n          format: date-time\n        lastFailure:\n          type: string\n          format: date-time\n        lastSuccess:\n          type: string\n          format: date-time\n      required:\n        - endpoint\n    Subscription:\n      allOf:\n        - $ref: '#/components/schemas/SubscriptionFragment'\n        - type: object\n          properties:\n            id:\n              type: string\n              format: uri\n            type:\n              type: string\n              enum:\n                - Subscription\n            notification:\n              $ref: '#/components/schemas/NotificationParams'\n            status:\n              type: string\n              enum:\n                - active\n                - paused\n                - expired\n            createdAt:\n              $ref: '#/components/schemas/createdAt'\n            modifiedAt:\n              $ref: '#/components/schemas/modifiedAt'\n          allOf:\n            - required:\n                - id\n                - type\n                - notification\n            - anyOf:\n                - required:\n                    - entities\n                - required:\n                    - watchedAttributes\n    SubscriptionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Subscription'\n    RegistrationInfo:\n      type: object\n      properties:\n        entities:\n          type: array\n          minItems: 1\n          items:\n            $ref: '#/components/schemas/EntityInfo'\n        properties:\n          type: array\n          minItems: 1\n          items:\n            $ref: '#/components/schemas/Name'\n          uniqueItems: true\n        relationships:\n          type: array\n          minItems: 1\n          items:\n            $ref: '#/components/schemas/Name'\n          uniqueItems: true\n    TimeInterval:\n      type: object\n      required:\n        - start\n      properties:\n        start:\n          type: string\n          format: date-time\n        end:\n          type: string\n          format: date-time\n    ContextSourceRegistrationFragment:\n      type: object\n      properties:\n        '@context':\n          $ref: '#/components/schemas/LdContext'\n        information:\n          type: array\n          minItems: 1\n          items:\n            $ref: '#/components/schemas/RegistrationInfo'\n        observationInterval:\n          $ref: '#/components/schemas/TimeInterval'\n        managementInterval:\n          $ref: '#/components/schemas/TimeInterval'\n        location:\n          $ref: '#/components/schemas/Geometry'\n        observationSpace:\n          $ref: '#/components/schemas/Geometry'\n        operationSpace:\n          $ref: '#/components/schemas/Geometry'\n        expires:\n          type: string\n          format: date-time\n        name:\n          type: string\n          minLength: 1\n        description:\n          type: string\n          minLength: 1\n        endpoint:\n          type: string\n          format: uri\n      additionalProperties: true\n    ContextSourceRegistration:\n      allOf:\n        - $ref: '#/components/schemas/ContextSourceRegistrationFragment'\n        - type: object\n          properties:\n            id:\n              type: string\n              format: uri\n            type:\n              type: string\n              enum:\n                - ContextSourceRegistration\n            createdAt:\n              $ref: '#/components/schemas/createdAt'\n            modifiedAt:\n              $ref: '#/components/schemas/modifiedAt'\n          required:\n            - id\n            - type\n            - endpoint\n            - information\n    ContextSourceRegistrationList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ContextSourceRegistration'\n    BatchEntityError:\n      type: object\n      properties:\n        entityId:\n          type: string\n          format: uri\n        error:\n          $ref: '#/components/schemas/ProblemDetails'\n    BatchOperationResult:\n      type: object\n      properties:\n        success:\n          type: array\n          items:\n            type: string\n            format: uri\n        error:\n          type: array\n          items:\n            $ref: '#/components/schemas/BatchEntityError'\n    timerel:\n      type: string\n      enum:\n        - before\n        - after\n        - between\n    EntityTemporalFragment:\n      type: object\n      properties:\n        '@context':\n          $ref: '#/components/schemas/LdContext'\n        location:\n          type: array\n          items:\n            $ref: '#/components/schemas/GeoProperty'\n          minItems: 1\n        observationSpace:\n          type: array\n          items:\n            $ref: '#/components/schemas/GeoProperty'\n          minItems: 1\n        operationSpace:\n          type: array\n          items:\n            $ref: '#/components/schemas/GeoProperty'\n          minItems: 1\n        id:\n          type: string\n          format: uri\n        type:\n          $ref: '#/components/schemas/Name'\n      additionalProperties:\n        oneOf:\n          - type: array\n            items:\n              $ref: '#/components/schemas/Property'\n            minItems: 1\n          - type: array\n            items:\n              $ref: '#/components/schemas/Relationship'\n            minItems: 1\n          - type: array\n            items:\n              $ref: '#/components/schemas/GeoProperty'\n            minItems: 1\n    EntityTemporal:\n      type: object\n      properties:\n        '@context':\n          $ref: '#/components/schemas/LdContext'\n        location:\n          type: array\n          items:\n            $ref: '#/components/schemas/GeoProperty'\n          minItems: 1\n        observationSpace:\n          type: array\n          items:\n            $ref: '#/components/schemas/GeoProperty'\n          minItems: 1\n        operationSpace:\n          type: array\n          items:\n            $ref: '#/components/schemas/GeoProperty'\n          minItems: 1\n        id:\n          type: string\n          format: uri\n        type:\n          $ref: '#/components/schemas/Name'\n        createdAt:\n          $ref: '#/components/schemas/createdAt'\n        modifiedAt:\n          $ref: '#/components/schemas/modifiedAt'\n      additionalProperties:\n        oneOf:\n          - type: array\n            items:\n              $ref: '#/components/schemas/Property'\n            minItems: 1\n          - type: array\n            items:\n              $ref: '#/components/schemas/Relationship'\n            minItems: 1\n          - type: array\n            items:\n              $ref: '#/components/schemas/GeoProperty'\n            minItems: 1\n      required:\n        - type\n        - id\n    EntityTemporalList:\n      type: array\n      items:\n        $ref: '#/components/schemas/EntityTemporal'\n    TemporalQuery:\n      type: object\n      properties:\n        timerel:\n          type: string\n        timeAt:\n          type: string\n          format: date-time\n        endTimeAt:\n          type: string\n          format: date-time\n        timeproperty:\n          type: string\n    Query:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - Query\n        entities:\n          $ref: '#/components/schemas/EntityInfo'\n        attrs:\n          type: array\n          items:\n            type: string\n        q:\n          type: string\n        geoQ:\n          $ref: '#/components/schemas/GeoQuery'\n        temporalQ:\n          $ref: '#/components/schemas/TemporalQuery'\n        csf:\n          type: string",
			"canonicalURL": "/github.com/FIWARE/CanisMajor@f7e5a0c65764cf39c2e57e13d364ed51b8bb93d3/-/blob/api/broker-client.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/FIWARE/CanisMajor/blob/f7e5a0c65764cf39c2e57e13d364ed51b8bb93d3/api/broker-client.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/entities/\": get: responses: 200: contents: unsupported content types: [application/ld+json]",
	"NotImplemented": [
		"discriminator inference",
		"unsupported content types"
	]
}