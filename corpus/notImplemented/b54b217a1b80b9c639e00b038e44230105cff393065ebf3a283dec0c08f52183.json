{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hack-as-a-service/api"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/openapi.yaml",
			"byteSize": 15228,
			"content": "openapi: 3.0.0\ninfo:\n  title: Hack as a Service API\n  version: 1.0.0\nservers:\n  - url: https://haas.hackclub.com/api\n    description: Production\n  - url: http://localhost:3000/api\n    description: Local development\nsecurity:\n  - cookieAuth: []\n  - bearerAuth: []\n\npaths:\n  /users/me:\n    get:\n      summary: Fetch the current user\n      tags:\n        - Users\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"500\":\n          description: Internal server error\n        \"401\":\n          description: Unauthorized\n  /users/me/teams:\n    get:\n      summary: Fetch the current user's teams\n      tags:\n        - Users\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Team\"\n                example:\n                  - id: 1\n                    name: Zach Latta's team\n                    slug: zach-latta-4852\n                    personal: true\n                  - id: 8\n                    name: Hack as a Service\n                    slug: hack-as-a-service\n                    avatar: https://doggo.ninja/dzippy.png\n                    personal: false\n                  - id: 5\n                    name: Hack Club HQ\n                    slug: hackclub\n                    avatar: https://assets.hackclub.com/icon-progress-square.svg\n                    personal: false\n        \"500\":\n          description: Internal server error\n        \"401\":\n          description: Unauthorized\n  /teams:\n    post:\n      summary: Create a team\n      tags:\n        - Teams\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Team\"\n            example:\n              slug: hack-as-a-service\n              name: Hack as a Service\n              avatar: https://doggo.ninja/dzippy.png\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Team\"\n        \"500\":\n          description: Internal server error\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          description: Conflict\n  /teams/{slug}:\n    get:\n      summary: Fetch a team\n      tags:\n        - Teams\n      parameters:\n        - in: path\n          name: slug\n          schema:\n            type: string\n          required: true\n          example: hack-as-a-service\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Team\"\n        \"500\":\n          description: Internal server error\n        \"404\":\n          description: Team not found\n        \"401\":\n          description: Unauthorized\n    patch:\n      summary: Update a team\n      tags:\n        - Teams\n      parameters:\n        - in: path\n          name: slug\n          schema:\n            type: string\n          required: true\n          example: hack-as-a-service\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Team\"\n            example:\n              slug: hack-as-a-service\n              name: Hack as a Service\n              avatar: https://doggo.ninja/dzippy.png\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Team\"\n        \"500\":\n          description: Internal server error\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Team not found\n        \"409\":\n          description: Conflict\n    delete:\n      summary: Delete a team\n      description: Requires that all apps are first deleted.\n      tags:\n        - Teams\n      parameters:\n        - in: path\n          name: slug\n          schema:\n            type: string\n          required: true\n          example: hack-as-a-service\n      responses:\n        \"204\":\n          description: OK\n        \"500\":\n          description: Internal server error\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Team not found\n        \"409\":\n          description: Conflict (all apps must be deleted)\n  /teams/{slug}/users:\n    get:\n      summary: Fetch a team's users\n      tags:\n        - Teams\n      parameters:\n        - in: path\n          name: slug\n          schema:\n            type: string\n          required: true\n          example: hack-as-a-service\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/User\"\n                example:\n                  - id: 5\n                    slack_user_id: U0266FRGP\n                    name: Zach Latta\n                    avatar: https://ca.slack-edge.com/T0266FRGM-U0266FRGP-db89498acd5d-192\n                  - id: 4\n                    slack_user_id: U013B6CPV62\n                    name: Caleb Denio\n                    avatar: https://avatars.slack-edge.com/2021-09-02/2437082298583_2f2915106fbaf3a01afc_512.png\n        \"500\":\n          description: Internal server error\n        \"404\":\n          description: Team not found\n        \"401\":\n          description: Unauthorized\n  /teams/{slug}/apps:\n    get:\n      summary: Fetch a team's apps\n      tags:\n        - Teams\n      parameters:\n        - in: path\n          name: slug\n          schema:\n            type: string\n          required: true\n          example: hack-as-a-service\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/App\"\n                example:\n                  - id: 5\n                    team_id: 6\n                    created_at: \"2021-09-07T22:52:53.381574\"\n                    slug: dinopoll\n                    enabled: true\n                  - id: 8\n                    team_id: 6\n                    created_at: \"2021-09-07T22:52:53.381574\"\n                    slug: scrappy\n                    enabled: true\n        \"500\":\n          description: Internal server error\n        \"404\":\n          description: Team not found\n        \"401\":\n          description: Unauthorized\n    post:\n      summary: Create an app\n      tags:\n        - Apps\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                slug:\n                  type: string\n              required:\n                - slug\n              example:\n                slug: dinopoll\n      parameters:\n        - in: path\n          name: slug\n          schema:\n            type: string\n          required: true\n          example: hack-as-a-service\n      responses:\n        \"200\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/App\"\n        \"500\":\n          description: Internal server error\n        \"404\":\n          description: Team not found\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          description: Conflict\n  /apps/{slug}:\n    get:\n      summary: Fetch an app\n      tags:\n        - Apps\n      parameters:\n        - in: path\n          name: slug\n          schema:\n            type: string\n          required: true\n          example: dinopoll\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/App\"\n        \"500\":\n          description: Internal server error\n        \"404\":\n          description: App not found\n        \"401\":\n          description: Unauthorized\n  /apps/{slug}/domains:\n    get:\n      summary: Fetch an app's domains\n      tags:\n        - Apps\n      parameters:\n        - in: path\n          name: slug\n          schema:\n            type: string\n          required: true\n          example: dinopoll\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Domain\"\n        \"500\":\n          description: Internal server error\n        \"404\":\n          description: App not found\n        \"401\":\n          description: Unauthorized\n    post:\n      summary: Add a custom domain to an app\n      tags:\n        - Apps\n      parameters:\n        - in: path\n          name: slug\n          schema:\n            type: string\n          required: true\n          example: dinopoll\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                domain:\n                  type: string\n              required:\n                - domain\n              example:\n                domain: hackclub.com\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Domain\"\n        \"500\":\n          description: Internal server error\n        \"409\":\n          description: Conflict\n        \"404\":\n          description: App not found\n        \"401\":\n          description: Unauthorized\n  /apps/{slug}/deploy:\n    post:\n      summary: Deploy an app\n      tags:\n        - Apps\n      parameters:\n        - in: path\n          name: slug\n          schema:\n            type: string\n          required: true\n          example: dinopoll\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                git_repository:\n                  type: string\n                  format: uri\n              required:\n                - git_repository\n              example:\n                git_repository: https://github.com/docker/getting-started\n      responses:\n        # FIXME: change to 303, also see source\n        \"200\":\n          description: Deploy already in progress\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Build\"\n        \"202\":\n          description: Deploy has started\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Build\"\n        \"500\":\n          description: Internal server error\n        \"409\":\n          description: Conflict\n        \"404\":\n          description: App not found\n        \"401\":\n          description: Unauthorized\n  /builds/{id}:\n    get:\n      summary: Fetch a build\n      tags:\n        - Builds\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n          example: 7\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Build\"\n        \"500\":\n          description: Internal server error\n        \"404\":\n          description: Build not found\n        \"401\":\n          description: Unauthorized\n  /domains/{id}/verify:\n    post:\n      summary: Attempt to verify a domain\n      tags:\n        - Domains\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n          example: 7\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Domain\"\n        \"500\":\n          description: Internal server error\n        \"409\":\n          description: Conflict (domain already verified on another app)\n        \"404\":\n          description: Domain not found\n        \"401\":\n          description: Unauthorized\n\ncomponents:\n  securitySchemes:\n    cookieAuth:\n      type: apiKey\n      in: cookie\n      name: haas_token\n    bearerAuth:\n      type: http\n      scheme: bearer\n  schemas:\n    User:\n      type: object\n      properties:\n        id:\n          type: integer\n        slack_user_id:\n          type: string\n        name:\n          type: string\n        avatar:\n          type: string\n      required:\n        - id\n        - slack_user_id\n        - name\n      example:\n        id: 5\n        slack_user_id: U0266FRGP\n        name: Zach Latta\n        avatar: https://ca.slack-edge.com/T0266FRGM-U0266FRGP-db89498acd5d-192\n    Team:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        name:\n          type: string\n        slug:\n          type: string\n        avatar:\n          type: string\n        personal:\n          type: boolean\n          readOnly: true\n      required:\n        - id\n        - slug\n        - personal\n      example:\n        id: 8\n        name: Hack as a Service\n        slug: hack-as-a-service\n        avatar: https://doggo.ninja/dzippy.png\n        personal: false\n    App:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        team_id:\n          type: integer\n        created_at:\n          type: string\n          format: date-time\n        slug:\n          type: string\n        enabled:\n          type: boolean\n      required:\n        - id\n        - team_id\n        - created_at\n        - slug\n        - enabled\n      example:\n        id: 5\n        team_id: 6\n        created_at: \"2021-09-07T22:52:53.381574\"\n        slug: dinopoll\n        enabled: true\n    Domain:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        domain:\n          type: string\n        verified:\n          type: boolean\n          readOnly: true\n        app_id:\n          type: integer\n          readOnly: true\n      required:\n        - id\n        - domain\n        - verified\n        - app_id\n      example:\n        id: 7\n        app_id: 5\n        domain: dinopoll.hackclub.app\n        verified: true\n    Build:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        started_at:\n          type: string\n          format: date-time\n          readOnly: true\n        ended_at:\n          type: string\n          format: date-time\n          nullable: true\n          readOnly: true\n        events:\n          type: array\n          items:\n            type: string\n            format: json\n          readOnly: true\n        app_id:\n          type: integer\n          readOnly: true\n      # No properties are required, since all are read only\n    example:\n      id: 3\n      started_at: 2021-12-30T21:32:01+00:00\n      ended_at: null\n      events: []\n      app_id: 2\n",
			"canonicalURL": "/github.com/hack-as-a-service/api@93aa237fa027e8ee59a6c1d702892af26406c22f/-/blob/openapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/hack-as-a-service/api/blob/93aa237fa027e8ee59a6c1d702892af26406c22f/openapi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/apps/{slug}/domains\": get: security: security \"cookieAuth\" (index 0): cookie security not implemented",
	"NotImplemented": [
		"cookie security"
	]
}