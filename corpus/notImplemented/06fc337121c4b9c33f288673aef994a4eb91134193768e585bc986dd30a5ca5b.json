{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "orgs.yaml",
			"size": 0,
			"path": "providers/src/github/v0.3.1/services/orgs.yaml",
			"byteSize": 175991,
			"content": "paths:\n  /organizations:\n    get:\n      summary: List organizations\n      description: |-\n        Lists all organizations, in the order that they were created on GitHub.\n\n        **Note:** Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of organizations.\n      tags:\n        - orgs\n      operationId: orgs/list\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#list-organizations\n      parameters:\n        - $ref: '#/components/parameters/since-org'\n        - $ref: '#/components/parameters/per-page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/organization-simple'\n              examples:\n                default:\n                  $ref: '#/components/examples/organization-simple-items'\n          headers:\n            Link:\n              example: \u003chttps://api.github.com/organizations?since=135\u003e; rel=\"next\"\n              schema:\n                type: string\n        '304':\n          $ref: '#/components/responses/not_modified'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: null\n  /organizations/{organization_id}/custom_roles:\n    get:\n      summary: List custom repository roles in an organization\n      description: |-\n        List the custom repository roles available in this organization. In order to see custom\n        repository roles in an organization, the authenticated user must be an organization owner.\n\n        For more information on custom repository roles, see \"[Managing custom repository roles for an organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-custom-repository-roles-for-an-organization)\".\n      tags:\n        - orgs\n      operationId: orgs/list-custom-roles\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#list-custom-repository-roles-in-an-organization\n      parameters:\n        - name: organization_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Response - list of custom role names\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  total_count:\n                    description: The number of custom roles in this organization\n                    example: 3\n                    type: integer\n                  custom_roles:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/organization-custom-repository-role'\n              examples:\n                default:\n                  $ref: '#/components/examples/organization-custom-repository-role-example'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: custom_roles\n  /orgs/{org}:\n    get:\n      summary: Get an organization\n      description: |-\n        To see many of the organization response values, you need to be an authenticated organization owner with the `admin:org` scope. When the value of `two_factor_requirement_enabled` is `true`, the organization requires all members, billing managers, and outside collaborators to enable [two-factor authentication](https://docs.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/).\n\n        GitHub Apps with the `Organization plan` permission can use this endpoint to retrieve information about an organization's GitHub plan. See \"[Authenticating with GitHub Apps](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/)\" for details. For an example response, see 'Response with GitHub plan information' below.\"\n      tags:\n        - orgs\n      operationId: orgs/get\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#get-an-organization\n      parameters:\n        - $ref: '#/components/parameters/org'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/organization-full'\n              examples:\n                default-response:\n                  $ref: '#/components/examples/organization-full-default-response'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: null\n    patch:\n      summary: Update an organization\n      description: |-\n        **Parameter Deprecation Notice:** GitHub will replace and discontinue `members_allowed_repository_creation_type` in favor of more granular permissions. The new input parameters are `members_can_create_public_repositories`, `members_can_create_private_repositories` for all organizations and `members_can_create_internal_repositories` for organizations associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes).\n\n        Enables an authenticated organization owner with the `admin:org` scope to update the organization's profile and member privileges.\n      tags:\n        - orgs\n      operationId: orgs/update\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs/#update-an-organization\n      parameters:\n        - $ref: '#/components/parameters/org'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                billing_email:\n                  type: string\n                  description: Billing email address. This address is not publicized.\n                company:\n                  type: string\n                  description: The company name.\n                email:\n                  type: string\n                  description: The publicly visible email address.\n                twitter_username:\n                  type: string\n                  description: The Twitter username of the company.\n                location:\n                  type: string\n                  description: The location.\n                name:\n                  type: string\n                  description: The shorthand name of the company.\n                description:\n                  type: string\n                  description: The description of the company.\n                has_organization_projects:\n                  type: boolean\n                  description: Toggles whether an organization can use organization projects.\n                has_repository_projects:\n                  type: boolean\n                  description: Toggles whether repositories that belong to the organization can use repository projects.\n                default_repository_permission:\n                  type: string\n                  description: |-\n                    Default permission level members have for organization repositories:  \n                    \\* `read` - can pull, but not push to or administer this repository.  \n                    \\* `write` - can pull and push, but not administer this repository.  \n                    \\* `admin` - can pull, push, and administer this repository.  \n                    \\* `none` - no permissions granted by default.\n                  enum:\n                    - read\n                    - write\n                    - admin\n                    - none\n                  default: read\n                members_can_create_repositories:\n                  type: boolean\n                  description: |-\n                    Toggles the ability of non-admin organization members to create repositories. Can be one of:  \n                    \\* `true` - all organization members can create repositories.  \n                    \\* `false` - only organization owners can create repositories.  \n                    Default: `true`  \n                    **Note:** A parameter can override this parameter. See `members_allowed_repository_creation_type` in this table for details. **Note:** A parameter can override this parameter. See `members_allowed_repository_creation_type` in this table for details.\n                  default: true\n                members_can_create_internal_repositories:\n                  type: boolean\n                  description: |-\n                    Toggles whether organization members can create internal repositories, which are visible to all enterprise members. You can only allow members to create internal repositories if your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. Can be one of:  \n                    \\* `true` - all organization members can create internal repositories.  \n                    \\* `false` - only organization owners can create internal repositories.  \n                    Default: `true`. For more information, see \"[Restricting repository creation in your organization](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)\" in the GitHub Help documentation.\n                members_can_create_private_repositories:\n                  type: boolean\n                  description: |-\n                    Toggles whether organization members can create private repositories, which are visible to organization members with permission. Can be one of:  \n                    \\* `true` - all organization members can create private repositories.  \n                    \\* `false` - only organization owners can create private repositories.  \n                    Default: `true`. For more information, see \"[Restricting repository creation in your organization](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)\" in the GitHub Help documentation.\n                members_can_create_public_repositories:\n                  type: boolean\n                  description: |-\n                    Toggles whether organization members can create public repositories, which are visible to anyone. Can be one of:  \n                    \\* `true` - all organization members can create public repositories.  \n                    \\* `false` - only organization owners can create public repositories.  \n                    Default: `true`. For more information, see \"[Restricting repository creation in your organization](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)\" in the GitHub Help documentation.\n                members_allowed_repository_creation_type:\n                  type: string\n                  description: |-\n                    Specifies which types of repositories non-admin organization members can create. Can be one of:  \n                    \\* `all` - all organization members can create public and private repositories.  \n                    \\* `private` - members can create private repositories. This option is only available to repositories that are part of an organization on GitHub Enterprise Cloud.  \n                    \\* `none` - only admin members can create repositories.  \n                    **Note:** This parameter is deprecated and will be removed in the future. Its return value ignores internal repositories. Using this parameter overrides values set in `members_can_create_repositories`. See the parameter deprecation notice in the operation description for details.\n                  enum:\n                    - all\n                    - private\n                    - none\n                members_can_create_pages:\n                  type: boolean\n                  description: |-\n                    Toggles whether organization members can create GitHub Pages sites. Can be one of:  \n                    \\* `true` - all organization members can create GitHub Pages sites.  \n                    \\* `false` - no organization members can create GitHub Pages sites. Existing published sites will not be impacted.\n                  default: true\n                members_can_create_public_pages:\n                  type: boolean\n                  description: |-\n                    Toggles whether organization members can create public GitHub Pages sites. Can be one of:  \n                    \\* `true` - all organization members can create public GitHub Pages sites.  \n                    \\* `false` - no organization members can create public GitHub Pages sites. Existing published sites will not be impacted.\n                  default: true\n                members_can_create_private_pages:\n                  type: boolean\n                  description: |-\n                    Toggles whether organization members can create private GitHub Pages sites. Can be one of:  \n                    \\* `true` - all organization members can create private GitHub Pages sites.  \n                    \\* `false` - no organization members can create private GitHub Pages sites. Existing published sites will not be impacted.\n                  default: true\n                members_can_fork_private_repositories:\n                  type: boolean\n                  description: |-\n                    Toggles whether organization members can fork private organization repositories. Can be one of:  \n                    \\* `true` - all organization members can fork private repositories within the organization.  \n                    \\* `false` - no organization members can fork private repositories within the organization.\n                  default: false\n                blog:\n                  type: string\n                  example: '\"http://github.blog\"'\n            example:\n              billing_email: mona@github.com\n              company: GitHub\n              email: mona@github.com\n              twitter_username: github\n              location: San Francisco\n              name: github\n              description: GitHub, the company.\n              default_repository_permission: read\n              members_can_create_repositories: true\n              members_allowed_repository_creation_type: all\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/organization-full'\n              examples:\n                default:\n                  $ref: '#/components/examples/organization-full'\n        '409':\n          $ref: '#/components/responses/conflict'\n        '422':\n          description: Validation failed\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/validation-error'\n                  - $ref: '#/components/schemas/validation-error-simple'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: null\n  /orgs/{org}/audit-log:\n    get:\n      summary: Get the audit log for an organization\n      description: |-\n        Gets the audit log for an organization. For more information, see \"[Reviewing the audit log for your organization](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization).\"\n\n        This endpoint is available for organizations on GitHub Enterprise Cloud. To use this endpoint, you must be an organization owner, and you must use an access token with the `admin:org` scope. GitHub Apps must have the `organization_administration` read permission to use this endpoint.\n      operationId: orgs/get-audit-log\n      tags:\n        - orgs\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#get-audit-log\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/audit-log-phrase'\n        - $ref: '#/components/parameters/audit-log-include'\n        - $ref: '#/components/parameters/audit-log-after'\n        - $ref: '#/components/parameters/audit-log-before'\n        - $ref: '#/components/parameters/audit-log-order'\n        - $ref: '#/components/parameters/per-page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/audit-log-event'\n              examples:\n                default:\n                  $ref: '#/components/examples/audit-log'\n      x-github:\n        githubCloudOnly: true\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: null\n  /orgs/{org}/blocks:\n    get:\n      summary: List users blocked by an organization\n      description: List the users blocked by an organization.\n      tags:\n        - orgs\n      operationId: orgs/list-blocked-users\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#list-users-blocked-by-an-organization\n      parameters:\n        - $ref: '#/components/parameters/org'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/simple-user'\n              examples:\n                default:\n                  $ref: '#/components/examples/simple-user-items'\n        '415':\n          $ref: '#/components/responses/preview_header_missing'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: blocking\n  /orgs/{org}/blocks/{username}:\n    get:\n      summary: Check if a user is blocked by an organization\n      description: ''\n      tags:\n        - orgs\n      operationId: orgs/check-blocked-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#check-if-a-user-is-blocked-by-an-organization\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: 'If the user is blocked:'\n        '404':\n          description: 'If the user is not blocked:'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/basic-error'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: blocking\n    put:\n      summary: Block a user from an organization\n      description: ''\n      tags:\n        - orgs\n      operationId: orgs/block-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#block-a-user-from-an-organization\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: Response\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: blocking\n    delete:\n      summary: Unblock a user from an organization\n      description: ''\n      tags:\n        - orgs\n      operationId: orgs/unblock-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#unblock-a-user-from-an-organization\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: blocking\n  /orgs/{org}/credential-authorizations:\n    get:\n      summary: List SAML SSO authorizations for an organization\n      description: |-\n        Listing and deleting credential authorizations is available to organizations with GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\n\n        An authenticated organization owner with the `read:org` scope can list all credential authorizations for an organization that uses SAML single sign-on (SSO). The credentials are either personal access tokens or SSH keys that organization members have authorized for the organization. For more information, see [About authentication with SAML single sign-on](https://docs.github.com/en/articles/about-authentication-with-saml-single-sign-on).\n      tags:\n        - orgs\n      operationId: orgs/list-saml-sso-authorizations\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#list-saml-sso-authorizations-for-an-organization\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/per-page'\n        - name: page\n          description: Page token\n          in: query\n          schema:\n            type: integer\n        - name: login\n          description: Limits the list of credentials authorizations for an organization to a specific login\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/credential-authorization'\n              examples:\n                default:\n                  $ref: '#/components/examples/credential-authorization-items'\n      x-github:\n        githubCloudOnly: true\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: null\n  /orgs/{org}/credential-authorizations/{credential_id}:\n    delete:\n      summary: Remove a SAML SSO authorization for an organization\n      description: |-\n        Listing and deleting credential authorizations is available to organizations with GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\n\n        An authenticated organization owner with the `admin:org` scope can remove a credential authorization for an organization that uses SAML SSO. Once you remove someone's credential authorization, they will need to create a new personal access token or SSH key and authorize it for the organization they want to access.\n      tags:\n        - orgs\n      operationId: orgs/remove-saml-sso-authorization\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#remove-a-saml-sso-authorization-for-an-organization\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - name: credential_id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        '204':\n          description: Response\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: true\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: null\n  /orgs/{org}/failed_invitations:\n    get:\n      summary: List failed organization invitations\n      description: The return hash contains `failed_at` and `failed_reason` fields which represent the time at which the invitation failed and the reason for the failure.\n      tags:\n        - orgs\n      operationId: orgs/list-failed-invitations\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#list-failed-organization-invitations\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/organization-invitation'\n              examples:\n                default:\n                  $ref: '#/components/examples/organization-invitation-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: members\n  /orgs/{org}/hooks:\n    get:\n      summary: List organization webhooks\n      description: ''\n      tags:\n        - orgs\n      operationId: orgs/list-webhooks\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#list-organization-webhooks\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/org-hook'\n              examples:\n                default:\n                  $ref: '#/components/examples/org-hook-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: webhooks\n    post:\n      summary: Create an organization webhook\n      description: 'Here''s how you can create a hook that posts payloads in JSON format:'\n      tags:\n        - orgs\n      operationId: orgs/create-webhook\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#create-an-organization-webhook\n      parameters:\n        - $ref: '#/components/parameters/org'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: Must be passed as \"web\".\n                config:\n                  type: object\n                  description: Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/rest/reference/orgs#create-hook-config-params).\n                  properties:\n                    url:\n                      $ref: '#/components/schemas/webhook-config-url'\n                    content_type:\n                      $ref: '#/components/schemas/webhook-config-content-type'\n                    secret:\n                      $ref: '#/components/schemas/webhook-config-secret'\n                    insecure_ssl:\n                      $ref: '#/components/schemas/webhook-config-insecure-ssl'\n                    username:\n                      type: string\n                      example: '\"kdaigle\"'\n                    password:\n                      type: string\n                      example: '\"password\"'\n                  required:\n                    - url\n                events:\n                  type: array\n                  description: Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for.\n                  default:\n                    - push\n                  items:\n                    type: string\n                active:\n                  type: boolean\n                  description: Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.\n                  default: true\n              required:\n                - name\n                - config\n            example:\n              name: web\n              active: true\n              events:\n                - push\n                - pull_request\n              config:\n                url: http://example.com/webhook\n                content_type: json\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/org-hook'\n              examples:\n                default:\n                  $ref: '#/components/examples/org-hook'\n          headers:\n            Location:\n              example: https://api.github.com/orgs/octocat/hooks/1\n              schema:\n                type: string\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: webhooks\n  /orgs/{org}/hooks/{hook_id}:\n    get:\n      summary: Get an organization webhook\n      description: Returns a webhook configured in an organization. To get only the webhook `config` properties, see \"[Get a webhook configuration for an organization](/rest/reference/orgs#get-a-webhook-configuration-for-an-organization).\"\n      tags:\n        - orgs\n      operationId: orgs/get-webhook\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#get-an-organization-webhook\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/hook-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/org-hook'\n              examples:\n                default:\n                  $ref: '#/components/examples/org-hook'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: webhooks\n    patch:\n      summary: Update an organization webhook\n      description: Updates a webhook configured in an organization. When you update a webhook, the `secret` will be overwritten. If you previously had a `secret` set, you must provide the same `secret` or set a new `secret` or the secret will be removed. If you are only updating individual webhook `config` properties, use \"[Update a webhook configuration for an organization](/rest/reference/orgs#update-a-webhook-configuration-for-an-organization).\"\n      tags:\n        - orgs\n      operationId: orgs/update-webhook\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#update-an-organization-webhook\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/hook-id'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                config:\n                  type: object\n                  description: Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/rest/reference/orgs#update-hook-config-params).\n                  properties:\n                    url:\n                      $ref: '#/components/schemas/webhook-config-url'\n                    content_type:\n                      $ref: '#/components/schemas/webhook-config-content-type'\n                    secret:\n                      $ref: '#/components/schemas/webhook-config-secret'\n                    insecure_ssl:\n                      $ref: '#/components/schemas/webhook-config-insecure-ssl'\n                  required:\n                    - url\n                events:\n                  type: array\n                  description: Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for.\n                  default:\n                    - push\n                  items:\n                    type: string\n                active:\n                  type: boolean\n                  description: Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.\n                  default: true\n                name:\n                  type: string\n                  example: '\"web\"'\n            example:\n              active: true\n              events:\n                - pull_request\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/org-hook'\n              examples:\n                default:\n                  $ref: '#/components/examples/org-hook-2'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: webhooks\n    delete:\n      summary: Delete an organization webhook\n      description: ''\n      tags:\n        - orgs\n      operationId: orgs/delete-webhook\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#delete-an-organization-webhook\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/hook-id'\n      responses:\n        '204':\n          description: Response\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: webhooks\n  /orgs/{org}/hooks/{hook_id}/config:\n    get:\n      summary: Get a webhook configuration for an organization\n      description: |-\n        Returns the webhook configuration for an organization. To get more information about the webhook, including the `active` state and `events`, use \"[Get an organization webhook ](/rest/reference/orgs#get-an-organization-webhook).\"\n\n        Access tokens must have the `admin:org_hook` scope, and GitHub Apps must have the `organization_hooks:read` permission.\n      tags:\n        - orgs\n      operationId: orgs/get-webhook-config-for-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#get-a-webhook-configuration-for-an-organization\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/hook-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/webhook-config'\n              examples:\n                default:\n                  $ref: '#/components/examples/webhook-config'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: webhooks\n    patch:\n      summary: Update a webhook configuration for an organization\n      description: |-\n        Updates the webhook configuration for an organization. To update more information about the webhook, including the `active` state and `events`, use \"[Update an organization webhook ](/rest/reference/orgs#update-an-organization-webhook).\"\n\n        Access tokens must have the `admin:org_hook` scope, and GitHub Apps must have the `organization_hooks:write` permission.\n      tags:\n        - orgs\n      operationId: orgs/update-webhook-config-for-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#update-a-webhook-configuration-for-an-organization\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/hook-id'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                url:\n                  $ref: '#/components/schemas/webhook-config-url'\n                content_type:\n                  $ref: '#/components/schemas/webhook-config-content-type'\n                secret:\n                  $ref: '#/components/schemas/webhook-config-secret'\n                insecure_ssl:\n                  $ref: '#/components/schemas/webhook-config-insecure-ssl'\n              example:\n                content_type: json\n                insecure_ssl: '0'\n                secret: '********'\n                url: https://example.com/webhook\n              additionalProperties: false\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/webhook-config'\n              examples:\n                default:\n                  $ref: '#/components/examples/webhook-config'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: webhooks\n  /orgs/{org}/hooks/{hook_id}/deliveries:\n    get:\n      summary: List deliveries for an organization webhook\n      description: Returns a list of webhook deliveries for a webhook configured in an organization.\n      tags:\n        - orgs\n      operationId: orgs/list-webhook-deliveries\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#list-deliveries-for-an-organization-webhook\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/hook-id'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/cursor'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/hook-delivery-item'\n              examples:\n                default:\n                  $ref: '#/components/examples/hook-delivery-items'\n        '400':\n          $ref: '#/components/responses/bad_request'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: webhooks\n  /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}:\n    get:\n      summary: Get a webhook delivery for an organization webhook\n      description: Returns a delivery for a webhook configured in an organization.\n      tags:\n        - orgs\n      operationId: orgs/get-webhook-delivery\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#get-a-webhook-delivery-for-an-organization-webhook\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/hook-id'\n        - $ref: '#/components/parameters/delivery-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/hook-delivery'\n              examples:\n                default:\n                  $ref: '#/components/examples/hook-delivery'\n        '400':\n          $ref: '#/components/responses/bad_request'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: webhooks\n  /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts:\n    post:\n      summary: Redeliver a delivery for an organization webhook\n      description: Redeliver a delivery for a webhook configured in an organization.\n      tags:\n        - orgs\n      operationId: orgs/redeliver-webhook-delivery\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#redeliver-a-delivery-for-an-organization-webhook\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/hook-id'\n        - $ref: '#/components/parameters/delivery-id'\n      responses:\n        '202':\n          $ref: '#/components/responses/accepted'\n        '400':\n          $ref: '#/components/responses/bad_request'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: webhooks\n  /orgs/{org}/hooks/{hook_id}/pings:\n    post:\n      summary: Ping an organization webhook\n      description: This will trigger a [ping event](https://docs.github.com/webhooks/#ping-event) to be sent to the hook.\n      tags:\n        - orgs\n      operationId: orgs/ping-webhook\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#ping-an-organization-webhook\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/hook-id'\n      responses:\n        '204':\n          description: Response\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: webhooks\n  /orgs/{org}/installations:\n    get:\n      summary: List app installations for an organization\n      description: Lists all GitHub Apps in an organization. The installation count includes all GitHub Apps installed on repositories in the organization. You must be an organization owner with `admin:read` scope to use this endpoint.\n      tags:\n        - orgs\n      operationId: orgs/list-app-installations\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#list-app-installations-for-an-organization\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - total_count\n                  - installations\n                properties:\n                  total_count:\n                    type: integer\n                  installations:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/installation'\n              examples:\n                default:\n                  $ref: '#/components/examples/installation-paginated'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: null\n  /orgs/{org}/invitations:\n    get:\n      summary: List pending organization invitations\n      description: 'The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.'\n      tags:\n        - orgs\n      operationId: orgs/list-pending-invitations\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#list-pending-organization-invitations\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/organization-invitation'\n              examples:\n                default:\n                  $ref: '#/components/examples/organization-invitation-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: members\n    post:\n      summary: Create an organization invitation\n      description: |-\n        Invite people to an organization by using their GitHub user ID or their email address. In order to create invitations in an organization, the authenticated user must be an organization owner.\n\n        This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" and \"[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)\" for details.\n      tags:\n        - orgs\n      operationId: orgs/create-invitation\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#create-an-organization-invitation\n      parameters:\n        - $ref: '#/components/parameters/org'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                invitee_id:\n                  type: integer\n                  description: '**Required unless you provide `email`**. GitHub user ID for the person you are inviting.'\n                email:\n                  type: string\n                  description: '**Required unless you provide `invitee_id`**. Email address of the person you are inviting, which can be an existing GitHub user.'\n                role:\n                  type: string\n                  description: |-\n                    Specify role for new member. Can be one of:  \n                    \\* `admin` - Organization owners with full administrative rights to the organization and complete access to all repositories and teams.  \n                    \\* `direct_member` - Non-owner organization members with ability to see other members and join teams by invitation.  \n                    \\* `billing_manager` - Non-owner organization members with ability to manage the billing settings of your organization.\n                  enum:\n                    - admin\n                    - direct_member\n                    - billing_manager\n                  default: direct_member\n                team_ids:\n                  type: array\n                  description: Specify IDs for the teams you want to invite new members to.\n                  items:\n                    type: integer\n            example:\n              email: octocat@github.com\n              role: direct_member\n              team_ids:\n                - 12\n                - 26\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/organization-invitation'\n              examples:\n                default:\n                  $ref: '#/components/examples/organization-invitation'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        triggersNotification: true\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: members\n  /orgs/{org}/invitations/{invitation_id}:\n    delete:\n      summary: Cancel an organization invitation\n      description: |-\n        Cancel an organization invitation. In order to cancel an organization invitation, the authenticated user must be an organization owner.\n\n        This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications).\n      tags:\n        - orgs\n      operationId: orgs/cancel-invitation\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#cancel-an-organization-invitation\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/invitation-id'\n      responses:\n        '204':\n          description: Response\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        triggersNotification: true\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: members\n  /orgs/{org}/invitations/{invitation_id}/teams:\n    get:\n      summary: List organization invitation teams\n      description: List all teams associated with an invitation. In order to see invitations in an organization, the authenticated user must be an organization owner.\n      tags:\n        - orgs\n      operationId: orgs/list-invitation-teams\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#list-organization-invitation-teams\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/invitation-id'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/team'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: members\n  /orgs/{org}/members:\n    get:\n      summary: List organization members\n      description: List all users who are members of an organization. If the authenticated user is also a member of this organization then both concealed and public members will be returned.\n      tags:\n        - orgs\n      operationId: orgs/list-members\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#list-organization-members\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - name: filter\n          description: |-\n            Filter members returned in the list. Can be one of:  \n            \\* `2fa_disabled` - Members without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled. Available for organization owners.  \n            \\* `all` - All members the authenticated user can see.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - 2fa_disabled\n              - all\n            default: all\n        - name: role\n          description: |-\n            Filter members returned by their role. Can be one of:  \n            \\* `all` - All members of the organization, regardless of role.  \n            \\* `admin` - Organization owners.  \n            \\* `member` - Non-owner organization members.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - all\n              - admin\n              - member\n            default: all\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/simple-user'\n              examples:\n                default:\n                  $ref: '#/components/examples/simple-user-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '302':\n          description: Response if requester is not an organization member\n          headers:\n            Location:\n              example: https://api.github.com/orgs/github/public_members\n              schema:\n                type: string\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: members\n  /orgs/{org}/members/{username}:\n    get:\n      summary: Check organization membership for a user\n      description: Check if a user is, publicly or privately, a member of the organization.\n      tags:\n        - orgs\n      operationId: orgs/check-membership-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#check-organization-membership-for-a-user\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: Response if requester is an organization member and user is a member\n        '302':\n          description: Response if requester is not an organization member\n          headers:\n            Location:\n              example: https://api.github.com/orgs/github/public_members/pezra\n              schema:\n                type: string\n        '404':\n          description: Not Found if requester is an organization member and user is not a member\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: members\n    delete:\n      summary: Remove an organization member\n      description: Removing a user from this list will remove them from all teams and they will no longer have any access to the organization's repositories.\n      tags:\n        - orgs\n      operationId: orgs/remove-member\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#remove-an-organization-member\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: Response\n        '403':\n          $ref: '#/components/responses/forbidden'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: members\n  /orgs/{org}/memberships/{username}:\n    get:\n      summary: Get organization membership for a user\n      description: In order to get a user's membership with an organization, the authenticated user must be an organization member. The `state` parameter in the response can be used to identify the user's membership status.\n      tags:\n        - orgs\n      operationId: orgs/get-membership-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#get-organization-membership-for-a-user\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/org-membership'\n              examples:\n                response-if-user-has-an-active-admin-membership-with-organization:\n                  $ref: '#/components/examples/org-membership-response-if-user-has-an-active-admin-membership-with-organization'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: members\n    put:\n      summary: Set organization membership for a user\n      description: |-\n        Only authenticated organization owners can add a member to the organization or update the member's role.\n\n        *   If the authenticated user is _adding_ a member to the organization, the invited user will receive an email inviting them to the organization. The user's [membership status](https://docs.github.com/rest/reference/orgs#get-organization-membership-for-a-user) will be `pending` until they accept the invitation.\n            \n        *   Authenticated users can _update_ a user's membership by passing the `role` parameter. If the authenticated user changes a member's role to `admin`, the affected user will receive an email notifying them that they've been made an organization owner. If the authenticated user changes an owner's role to `member`, no email will be sent.\n\n        **Rate limits**\n\n        To prevent abuse, the authenticated user is limited to 50 organization invitations per 24 hour period. If the organization is more than one month old or on a paid plan, the limit is 500 invitations per 24 hour period.\n      tags:\n        - orgs\n      operationId: orgs/set-membership-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#set-organization-membership-for-a-user\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/username'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                role:\n                  type: string\n                  description: |-\n                    The role to give the user in the organization. Can be one of:  \n                    \\* `admin` - The user will become an owner of the organization.  \n                    \\* `member` - The user will become a non-owner member of the organization.\n                  enum:\n                    - admin\n                    - member\n                  default: member\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/org-membership'\n              examples:\n                response-if-user-already-had-membership-with-organization:\n                  $ref: '#/components/examples/org-membership-response-if-user-has-an-active-admin-membership-with-organization'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: members\n    delete:\n      summary: Remove organization membership for a user\n      description: |-\n        In order to remove a user's membership with an organization, the authenticated user must be an organization owner.\n\n        If the specified user is an active member of the organization, this will remove them from the organization. If the specified user has been invited to the organization, this will cancel their invitation. The specified user will receive an email notification in both cases.\n      tags:\n        - orgs\n      operationId: orgs/remove-membership-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#remove-organization-membership-for-a-user\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: Response\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: members\n  /orgs/{org}/outside_collaborators:\n    get:\n      summary: List outside collaborators for an organization\n      description: List all users who are outside collaborators of an organization.\n      tags:\n        - orgs\n      operationId: orgs/list-outside-collaborators\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#list-outside-collaborators-for-an-organization\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - name: filter\n          description: |-\n            Filter the list of outside collaborators. Can be one of:  \n            \\* `2fa_disabled`: Outside collaborators without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled.  \n            \\* `all`: All outside collaborators.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - 2fa_disabled\n              - all\n            default: all\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/simple-user'\n              examples:\n                default:\n                  $ref: '#/components/examples/simple-user-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: outside-collaborators\n  /orgs/{org}/outside_collaborators/{username}:\n    put:\n      summary: Convert an organization member to outside collaborator\n      description: When an organization member is converted to an outside collaborator, they'll only have access to the repositories that their current team membership allows. The user will no longer be a member of the organization. For more information, see \"[Converting an organization member to an outside collaborator](https://docs.github.com/articles/converting-an-organization-member-to-an-outside-collaborator/)\".\n      tags:\n        - orgs\n      operationId: orgs/convert-member-to-outside-collaborator\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#convert-an-organization-member-to-outside-collaborator\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '202':\n          description: User is getting converted asynchronously\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n                additionalProperties: false\n        '204':\n          description: User was converted\n        '403':\n          description: Forbidden if user is the last owner of the organization or not a member of the organization\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: outside-collaborators\n    delete:\n      summary: Remove outside collaborator from an organization\n      description: Removing a user from this list will remove them from all the organization's repositories.\n      tags:\n        - orgs\n      operationId: orgs/remove-outside-collaborator\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#remove-outside-collaborator-from-an-organization\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: Response\n        '422':\n          description: Unprocessable Entity if user is a member of the organization\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                  documentation_url:\n                    type: string\n              examples:\n                response-if-user-is-a-member-of-the-organization:\n                  value:\n                    message: You cannot specify an organization member to remove as an outside collaborator.\n                    documentation_url: https://docs.github.com/rest/reference/orgs#remove-outside-collaborator\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: outside-collaborators\n  /orgs/{org}/public_members:\n    get:\n      summary: List public organization members\n      description: Members of an organization can choose to have their membership publicized or not.\n      tags:\n        - orgs\n      operationId: orgs/list-public-members\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#list-public-organization-members\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/simple-user'\n              examples:\n                default:\n                  $ref: '#/components/examples/simple-user-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: members\n  /orgs/{org}/public_members/{username}:\n    get:\n      summary: Check public organization membership for a user\n      description: ''\n      tags:\n        - orgs\n      operationId: orgs/check-public-membership-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#check-public-organization-membership-for-a-user\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: Response if user is a public member\n        '404':\n          description: Not Found if user is not a public member\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: members\n    put:\n      summary: Set public organization membership for the authenticated user\n      description: |-\n        The user can publicize their own membership. (A user cannot publicize the membership for another user.)\n\n        Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"\n      tags:\n        - orgs\n      operationId: orgs/set-public-membership-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#set-public-organization-membership-for-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: Response\n        '403':\n          $ref: '#/components/responses/forbidden'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: orgs\n        subcategory: members\n    delete:\n      summary: Remove public organization membership for the authenticated user\n      description: ''\n      tags:\n        - orgs\n      operationId: orgs/remove-public-membership-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#remove-public-organization-membership-for-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: orgs\n        subcategory: members\n  /user/memberships/orgs:\n    get:\n      summary: List organization memberships for the authenticated user\n      description: ''\n      tags:\n        - orgs\n      operationId: orgs/list-memberships-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#list-organization-memberships-for-the-authenticated-user\n      parameters:\n        - name: state\n          description: Indicates the state of the memberships to return. Can be either `active` or `pending`. If not specified, the API returns both active and pending memberships.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - active\n              - pending\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/org-membership'\n              examples:\n                default:\n                  $ref: '#/components/examples/org-membership-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: orgs\n        subcategory: members\n  /user/memberships/orgs/{org}:\n    get:\n      summary: Get an organization membership for the authenticated user\n      description: ''\n      tags:\n        - orgs\n      operationId: orgs/get-membership-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#get-an-organization-membership-for-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/org'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/org-membership'\n              examples:\n                default:\n                  $ref: '#/components/examples/org-membership'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: orgs\n        subcategory: members\n    patch:\n      summary: Update an organization membership for the authenticated user\n      description: ''\n      tags:\n        - orgs\n      operationId: orgs/update-membership-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#update-an-organization-membership-for-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/org'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                state:\n                  type: string\n                  description: The state that the membership should be in. Only `\"active\"` will be accepted.\n                  enum:\n                    - active\n              required:\n                - state\n            example:\n              state: active\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/org-membership'\n              examples:\n                default:\n                  $ref: '#/components/examples/org-membership-2'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: orgs\n        subcategory: members\n  /user/orgs:\n    get:\n      summary: List organizations for the authenticated user\n      description: |-\n        List organizations for the authenticated user.\n\n        **OAuth scope requirements**\n\n        This only lists organizations that your authorization allows you to operate on in some way (e.g., you can list teams with `read:org` scope, you can publicize your organization membership with `user` scope, etc.). Therefore, this API requires at least `user` or `read:org` scope. OAuth requests with insufficient scope receive a `403 Forbidden` response.\n      tags:\n        - orgs\n      operationId: orgs/list-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#list-organizations-for-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/organization-simple'\n              examples:\n                default:\n                  $ref: '#/components/examples/organization-simple-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: orgs\n        subcategory: null\n  /users/{username}/orgs:\n    get:\n      summary: List organizations for a user\n      description: |-\n        List [public organization memberships](https://docs.github.com/articles/publicizing-or-concealing-organization-membership) for the specified user.\n\n        This method only lists _public_ memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the [List organizations for the authenticated user](https://docs.github.com/rest/reference/orgs#list-organizations-for-the-authenticated-user) API instead.\n      tags:\n        - orgs\n      operationId: orgs/list-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/orgs#list-organizations-for-a-user\n      parameters:\n        - $ref: '#/components/parameters/username'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/organization-simple'\n              examples:\n                default:\n                  $ref: '#/components/examples/organization-simple-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: orgs\n        subcategory: null\ncomponents:\n  schemas:\n    organization-simple:\n      title: Organization Simple\n      description: Organization Simple\n      type: object\n      properties:\n        login:\n          type: string\n          example: github\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDEyOk9yZ2FuaXphdGlvbjE=\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/orgs/github\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/orgs/github/repos\n        events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/orgs/github/events\n        hooks_url:\n          type: string\n          example: https://api.github.com/orgs/github/hooks\n        issues_url:\n          type: string\n          example: https://api.github.com/orgs/github/issues\n        members_url:\n          type: string\n          example: https://api.github.com/orgs/github/members{/member}\n        public_members_url:\n          type: string\n          example: https://api.github.com/orgs/github/public_members{/member}\n        avatar_url:\n          type: string\n          example: https://github.com/images/error/octocat_happy.gif\n        description:\n          type: string\n          example: A great organization\n          nullable: true\n      required:\n        - login\n        - url\n        - id\n        - node_id\n        - repos_url\n        - events_url\n        - hooks_url\n        - issues_url\n        - members_url\n        - public_members_url\n        - avatar_url\n        - description\n    organization-custom-repository-role:\n      title: Organization Custom Repository Role\n      description: Custom repository roles created by organization administrators\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n      required:\n        - id\n        - name\n    organization-full:\n      title: Organization Full\n      description: Organization Full\n      type: object\n      properties:\n        login:\n          type: string\n          example: github\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDEyOk9yZ2FuaXphdGlvbjE=\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/orgs/github\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/orgs/github/repos\n        events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/orgs/github/events\n        hooks_url:\n          type: string\n          example: https://api.github.com/orgs/github/hooks\n        issues_url:\n          type: string\n          example: https://api.github.com/orgs/github/issues\n        members_url:\n          type: string\n          example: https://api.github.com/orgs/github/members{/member}\n        public_members_url:\n          type: string\n          example: https://api.github.com/orgs/github/public_members{/member}\n        avatar_url:\n          type: string\n          example: https://github.com/images/error/octocat_happy.gif\n        description:\n          type: string\n          example: A great organization\n          nullable: true\n        name:\n          type: string\n          example: github\n        company:\n          type: string\n          example: GitHub\n        blog:\n          type: string\n          format: uri\n          example: https://github.com/blog\n        location:\n          type: string\n          example: San Francisco\n        email:\n          type: string\n          format: email\n          example: octocat@github.com\n        twitter_username:\n          type: string\n          example: github\n          nullable: true\n        is_verified:\n          type: boolean\n          example: true\n        has_organization_projects:\n          type: boolean\n          example: true\n        has_repository_projects:\n          type: boolean\n          example: true\n        public_repos:\n          type: integer\n          example: 2\n        public_gists:\n          type: integer\n          example: 1\n        followers:\n          type: integer\n          example: 20\n        following:\n          type: integer\n          example: 0\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        created_at:\n          type: string\n          format: date-time\n          example: '2008-01-14T04:33:35Z'\n        type:\n          type: string\n          example: Organization\n        total_private_repos:\n          type: integer\n          example: 100\n        owned_private_repos:\n          type: integer\n          example: 100\n        private_gists:\n          type: integer\n          example: 81\n          nullable: true\n        disk_usage:\n          type: integer\n          example: 10000\n          nullable: true\n        collaborators:\n          type: integer\n          example: 8\n          nullable: true\n        billing_email:\n          type: string\n          format: email\n          example: org@example.com\n          nullable: true\n        plan:\n          type: object\n          properties:\n            name:\n              type: string\n            space:\n              type: integer\n            private_repos:\n              type: integer\n            filled_seats:\n              type: integer\n            seats:\n              type: integer\n          required:\n            - name\n            - space\n            - private_repos\n        default_repository_permission:\n          type: string\n          nullable: true\n        members_can_create_repositories:\n          type: boolean\n          example: true\n          nullable: true\n        two_factor_requirement_enabled:\n          type: boolean\n          example: true\n          nullable: true\n        members_allowed_repository_creation_type:\n          type: string\n          example: all\n        members_can_create_public_repositories:\n          type: boolean\n          example: true\n        members_can_create_private_repositories:\n          type: boolean\n          example: true\n        members_can_create_internal_repositories:\n          type: boolean\n          example: true\n        members_can_create_pages:\n          type: boolean\n          example: true\n        members_can_create_public_pages:\n          type: boolean\n          example: true\n        members_can_create_private_pages:\n          type: boolean\n          example: true\n        members_can_fork_private_repositories:\n          type: boolean\n          example: false\n          nullable: true\n        updated_at:\n          type: string\n          format: date-time\n      required:\n        - login\n        - url\n        - id\n        - node_id\n        - repos_url\n        - events_url\n        - hooks_url\n        - issues_url\n        - members_url\n        - public_members_url\n        - avatar_url\n        - description\n        - html_url\n        - has_organization_projects\n        - has_repository_projects\n        - public_repos\n        - public_gists\n        - followers\n        - following\n        - type\n        - created_at\n        - updated_at\n    basic-error:\n      title: Basic Error\n      description: Basic Error\n      type: object\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        url:\n          type: string\n        status:\n          type: string\n    validation-error:\n      title: Validation Error\n      description: Validation Error\n      type: object\n      required:\n        - message\n        - documentation_url\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        errors:\n          type: array\n          items:\n            type: object\n            required:\n              - code\n            properties:\n              resource:\n                type: string\n              field:\n                type: string\n              message:\n                type: string\n              code:\n                type: string\n              index:\n                type: integer\n              value:\n                oneOf:\n                  - type: string\n                    nullable: true\n                  - type: integer\n                    nullable: true\n                  - type: array\n                    nullable: true\n                    items:\n                      type: string\n    validation-error-simple:\n      title: Validation Error Simple\n      description: Validation Error Simple\n      type: object\n      required:\n        - message\n        - documentation_url\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        errors:\n          type: array\n          items:\n            type: string\n    audit-log-event:\n      type: object\n      properties:\n        '@timestamp':\n          type: integer\n          description: The time the audit log event occurred, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).\n        action:\n          type: string\n          description: The name of the action that was performed, for example `user.login` or `repo.create`.\n        active:\n          type: boolean\n        active_was:\n          type: boolean\n        actor:\n          type: string\n          description: The actor who performed the action.\n        actor_id:\n          type: integer\n          description: The id of the actor who performed the action.\n        actor_location:\n          type: object\n          properties:\n            country_name:\n              type: string\n        data:\n          type: object\n          additionalProperties: true\n        org_id:\n          type: integer\n        blocked_user:\n          type: string\n          description: The username of the account being blocked.\n        business:\n          type: string\n        config:\n          type: array\n          items:\n            type: object\n        config_was:\n          type: array\n          items:\n            type: object\n        content_type:\n          type: string\n        created_at:\n          type: integer\n          description: The time the audit log event was recorded, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).\n        deploy_key_fingerprint:\n          type: string\n        _document_id:\n          type: string\n          description: A unique identifier for an audit event.\n        emoji:\n          type: string\n        events:\n          type: array\n          items:\n            type: object\n        events_were:\n          type: array\n          items:\n            type: object\n        explanation:\n          type: string\n        fingerprint:\n          type: string\n        hook_id:\n          type: integer\n        limited_availability:\n          type: boolean\n        message:\n          type: string\n        name:\n          type: string\n        old_user:\n          type: string\n        openssh_public_key:\n          type: string\n        org:\n          type: string\n        previous_visibility:\n          type: string\n        read_only:\n          type: boolean\n        repo:\n          type: string\n          description: The name of the repository.\n        repository:\n          type: string\n          description: The name of the repository.\n        repository_public:\n          type: boolean\n        target_login:\n          type: string\n        team:\n          type: string\n        transport_protocol:\n          type: integer\n          description: The type of protocol (for example, HTTP or SSH) used to transfer Git data.\n        transport_protocol_name:\n          type: string\n          description: A human readable name for the protocol (for example, HTTP or SSH) used to transfer Git data.\n        user:\n          type: string\n          description: The user that was affected by the action performed (if available).\n        visibility:\n          type: string\n          description: The repository visibility, for example `public` or `private`.\n    simple-user:\n      title: Simple User\n      description: Simple User\n      type: object\n      properties:\n        name:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:55Z\"'\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n    credential-authorization:\n      title: Credential Authorization\n      description: Credential Authorization\n      type: object\n      properties:\n        login:\n          type: string\n          example: monalisa\n          description: User login that owns the underlying credential.\n        credential_id:\n          type: integer\n          example: 1\n          description: Unique identifier for the credential.\n        credential_type:\n          type: string\n          example: SSH Key\n          description: Human-readable description of the credential type.\n        token_last_eight:\n          type: string\n          example: '12345678'\n          description: Last eight characters of the credential. Only included in responses with credential_type of personal access token.\n        credential_authorized_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:06:43Z'\n          description: Date when the credential was authorized for use.\n        scopes:\n          type: array\n          example:\n            - user\n            - repo\n          description: List of oauth scopes the token has been granted.\n          items:\n            type: string\n        fingerprint:\n          type: string\n          example: jklmnop12345678\n          description: Unique string to distinguish the credential. Only included in responses with credential_type of SSH Key.\n        credential_accessed_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:06:43Z'\n          description: Date when the credential was last accessed. May be null if it was never accessed\n          nullable: true\n        authorized_credential_id:\n          type: integer\n          nullable: true\n          example: 12345678\n        authorized_credential_title:\n          type: string\n          nullable: true\n          example: my ssh key\n          description: The title given to the ssh key. This will only be present when the credential is an ssh key.\n        authorized_credential_note:\n          type: string\n          nullable: true\n          example: my token\n          description: The note given to the token. This will only be present when the credential is a token.\n        authorized_credential_expires_at:\n          type: string\n          format: date-time\n          nullable: true\n          description: The expiry for the token. This will only be present when the credential is a token.\n      required:\n        - login\n        - credential_id\n        - credential_type\n        - credential_authorized_at\n        - credential_accessed_at\n        - authorized_credential_id\n    organization-invitation:\n      title: Organization Invitation\n      description: Organization Invitation\n      type: object\n      properties:\n        id:\n          type: integer\n        login:\n          type: string\n          nullable: true\n        email:\n          type: string\n          nullable: true\n        role:\n          type: string\n        created_at:\n          type: string\n        failed_at:\n          type: string\n          nullable: true\n        failed_reason:\n          type: string\n          nullable: true\n        inviter:\n          $ref: '#/components/schemas/simple-user'\n        team_count:\n          type: integer\n        node_id:\n          type: string\n          example: '\"MDIyOk9yZ2FuaXphdGlvbkludml0YXRpb24x\"'\n        invitation_teams_url:\n          type: string\n          example: '\"https://api.github.com/organizations/16/invitations/1/teams\"'\n      required:\n        - id\n        - login\n        - email\n        - role\n        - created_at\n        - inviter\n        - team_count\n        - invitation_teams_url\n        - node_id\n    org-hook:\n      title: Org Hook\n      description: Org Hook\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/orgs/octocat/hooks/1\n        ping_url:\n          type: string\n          format: uri\n          example: https://api.github.com/orgs/octocat/hooks/1/pings\n        deliveries_url:\n          type: string\n          format: uri\n          example: https://api.github.com/orgs/octocat/hooks/1/deliveries\n        name:\n          type: string\n          example: web\n        events:\n          type: array\n          example:\n            - push\n            - pull_request\n          items:\n            type: string\n        active:\n          type: boolean\n          example: true\n        config:\n          type: object\n          properties:\n            url:\n              type: string\n              example: '\"http://example.com/2\"'\n            insecure_ssl:\n              type: string\n              example: '\"0\"'\n            content_type:\n              type: string\n              example: '\"form\"'\n            secret:\n              type: string\n              example: '\"********\"'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2011-09-06T20:39:23Z'\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-09-06T17:26:27Z'\n        type:\n          type: string\n      required:\n        - id\n        - url\n        - type\n        - name\n        - active\n        - events\n        - config\n        - ping_url\n        - created_at\n        - updated_at\n    webhook-config-url:\n      type: string\n      description: The URL to which the payloads will be delivered.\n      example: https://example.com/webhook\n      format: uri\n    webhook-config-content-type:\n      type: string\n      description: The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.\n      example: '\"json\"'\n    webhook-config-secret:\n      type: string\n      description: If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).\n      example: '\"********\"'\n    webhook-config-insecure-ssl:\n      oneOf:\n        - type: string\n          description: Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**\n          example: '\"0\"'\n        - type: number\n    webhook-config:\n      title: Webhook Configuration\n      description: Configuration object of the webhook\n      type: object\n      properties:\n        url:\n          $ref: '#/components/schemas/webhook-config-url'\n        content_type:\n          $ref: '#/components/schemas/webhook-config-content-type'\n        secret:\n          $ref: '#/components/schemas/webhook-config-secret'\n        insecure_ssl:\n          $ref: '#/components/schemas/webhook-config-insecure-ssl'\n    hook-delivery-item:\n      title: Simple webhook delivery\n      description: Delivery made by a webhook, without request and response information.\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the webhook delivery.\n          type: integer\n          example: 42\n        guid:\n          description: Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).\n          type: string\n          example: 58474f00-b361-11eb-836d-0e4f3503ccbe\n        delivered_at:\n          description: Time when the webhook delivery occurred.\n          type: string\n          format: date-time\n          example: '2021-05-12T20:33:44Z'\n        redelivery:\n          description: Whether the webhook delivery is a redelivery.\n          type: boolean\n          example: false\n        duration:\n          description: Time spent delivering.\n          type: number\n          example: 0.03\n        status:\n          description: Describes the response returned after attempting the delivery.\n          type: string\n          example: failed to connect\n        status_code:\n          description: Status code received when delivery was made.\n          type: integer\n          example: 502\n        event:\n          description: The event that triggered the delivery.\n          type: string\n          example: issues\n        action:\n          description: The type of activity for the event that triggered the delivery.\n          type: string\n          example: opened\n          nullable: true\n        installation_id:\n          description: The id of the GitHub App installation associated with this event.\n          type: integer\n          example: 123\n          nullable: true\n        repository_id:\n          description: The id of the repository associated with this event.\n          type: integer\n          example: 123\n          nullable: true\n      required:\n        - id\n        - guid\n        - delivered_at\n        - redelivery\n        - duration\n        - status\n        - status_code\n        - event\n        - action\n        - installation_id\n        - repository_id\n    scim-error:\n      title: Scim Error\n      description: Scim Error\n      type: object\n      properties:\n        message:\n          type: string\n          nullable: true\n        documentation_url:\n          type: string\n          nullable: true\n        detail:\n          type: string\n          nullable: true\n        status:\n          type: integer\n        scimType:\n          type: string\n          nullable: true\n        schemas:\n          type: array\n          items:\n            type: string\n    hook-delivery:\n      title: Webhook delivery\n      description: Delivery made by a webhook.\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the delivery.\n          type: integer\n          example: 42\n        guid:\n          description: Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).\n          type: string\n          example: 58474f00-b361-11eb-836d-0e4f3503ccbe\n        delivered_at:\n          description: Time when the delivery was delivered.\n          type: string\n          format: date-time\n          example: '2021-05-12T20:33:44Z'\n        redelivery:\n          description: Whether the delivery is a redelivery.\n          type: boolean\n          example: false\n        duration:\n          description: Time spent delivering.\n          type: number\n          example: 0.03\n        status:\n          description: Description of the status of the attempted delivery\n          type: string\n          example: failed to connect\n        status_code:\n          description: Status code received when delivery was made.\n          type: integer\n          example: 502\n        event:\n          description: The event that triggered the delivery.\n          type: string\n          example: issues\n        action:\n          description: The type of activity for the event that triggered the delivery.\n          type: string\n          example: opened\n          nullable: true\n        installation_id:\n          description: The id of the GitHub App installation associated with this event.\n          type: integer\n          example: 123\n          nullable: true\n        repository_id:\n          description: The id of the repository associated with this event.\n          type: integer\n          example: 123\n          nullable: true\n        url:\n          description: The URL target of the delivery.\n          type: string\n          example: https://www.example.com\n        request:\n          type: object\n          properties:\n            headers:\n              description: The request headers sent with the webhook delivery.\n              type: object\n              nullable: true\n              additionalProperties: true\n            payload:\n              description: The webhook payload.\n              type: object\n              nullable: true\n              additionalProperties: true\n          required:\n            - headers\n            - payload\n        response:\n          type: object\n          properties:\n            headers:\n              description: The response headers received when the delivery was made.\n              type: object\n              nullable: true\n              additionalProperties: true\n            payload:\n              description: The response payload received.\n              type: string\n              nullable: true\n              additionalProperties: true\n          required:\n            - headers\n            - payload\n      required:\n        - id\n        - guid\n        - delivered_at\n        - redelivery\n        - duration\n        - status\n        - status_code\n        - event\n        - action\n        - installation_id\n        - repository_id\n        - request\n        - response\n    installation:\n      title: Installation\n      description: Installation\n      type: object\n      properties:\n        id:\n          description: The ID of the installation.\n          type: integer\n          example: 1\n        account:\n          nullable: true\n          anyOf:\n            - $ref: '#/components/schemas/simple-user'\n            - $ref: '#/components/schemas/enterprise'\n        repository_selection:\n          description: Describe whether all repositories have been selected or there's a selection involved\n          type: string\n          enum:\n            - all\n            - selected\n        access_tokens_url:\n          type: string\n          format: uri\n          example: https://api.github.com/installations/1/access_tokens\n        repositories_url:\n          type: string\n          format: uri\n          example: https://api.github.com/installation/repositories\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/organizations/github/settings/installations/1\n        app_id:\n          type: integer\n          example: 1\n        target_id:\n          description: The ID of the user or organization this token is being scoped to.\n          type: integer\n        target_type:\n          type: string\n          example: Organization\n        permissions:\n          $ref: '#/components/schemas/app-permissions'\n        events:\n          type: array\n          items:\n            type: string\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n        single_file_name:\n          type: string\n          example: config.yaml\n          nullable: true\n        has_multiple_single_files:\n          type: boolean\n          example: true\n        single_file_paths:\n          type: array\n          items:\n            type: string\n          example:\n            - config.yml\n            - .github/issue_TEMPLATE.md\n        app_slug:\n          type: string\n          example: github-actions\n        suspended_by:\n          $ref: '#/components/schemas/nullable-simple-user'\n        suspended_at:\n          type: string\n          format: date-time\n          nullable: true\n        contact_email:\n          type: string\n          example: '\"test_13f1e99741e3e004@d7e1eb0bc0a1ba12.com\"'\n          nullable: true\n      required:\n        - id\n        - app_id\n        - app_slug\n        - target_id\n        - target_type\n        - single_file_name\n        - repository_selection\n        - access_tokens_url\n        - html_url\n        - repositories_url\n        - events\n        - account\n        - permissions\n        - created_at\n        - updated_at\n        - suspended_by\n        - suspended_at\n    enterprise:\n      title: Enterprise\n      description: An enterprise account\n      type: object\n      properties:\n        description:\n          description: A short description of the enterprise.\n          type: string\n          nullable: true\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/enterprises/octo-business\n        website_url:\n          description: The enterprise's website URL.\n          type: string\n          nullable: true\n          format: uri\n        id:\n          description: Unique identifier of the enterprise\n          example: 42\n          type: integer\n        node_id:\n          type: string\n          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n        name:\n          description: The name of the enterprise.\n          type: string\n          example: Octo Business\n        slug:\n          description: The slug url identifier for the enterprise.\n          type: string\n          example: octo-business\n        created_at:\n          type: string\n          nullable: true\n          format: date-time\n          example: '2019-01-26T19:01:12Z'\n        updated_at:\n          type: string\n          nullable: true\n          format: date-time\n          example: '2019-01-26T19:14:43Z'\n        avatar_url:\n          type: string\n          format: uri\n      required:\n        - id\n        - node_id\n        - name\n        - slug\n        - html_url\n        - created_at\n        - updated_at\n        - avatar_url\n    app-permissions:\n      title: App Permissions\n      type: object\n      description: The permissions granted to the user-to-server access token.\n      properties:\n        actions:\n          type: string\n          description: 'The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        administration:\n          type: string\n          description: 'The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        checks:\n          type: string\n          description: 'The level of permission to grant the access token for checks on code. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        contents:\n          type: string\n          description: 'The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        deployments:\n          type: string\n          description: 'The level of permission to grant the access token for deployments and deployment statuses. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        environments:\n          type: string\n          description: 'The level of permission to grant the access token for managing repository environments. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        issues:\n          type: string\n          description: 'The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        metadata:\n          type: string\n          description: 'The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        packages:\n          type: string\n          description: 'The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        pages:\n          type: string\n          description: 'The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        pull_requests:\n          type: string\n          description: 'The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        repository_hooks:\n          type: string\n          description: 'The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        repository_projects:\n          type: string\n          description: 'The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.'\n          enum:\n            - read\n            - write\n            - admin\n        secret_scanning_alerts:\n          type: string\n          description: 'The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        secrets:\n          type: string\n          description: 'The level of permission to grant the access token to manage repository secrets. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        security_events:\n          type: string\n          description: 'The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        single_file:\n          type: string\n          description: 'The level of permission to grant the access token to manage just a single file. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        statuses:\n          type: string\n          description: 'The level of permission to grant the access token for commit statuses. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        vulnerability_alerts:\n          type: string\n          description: 'The level of permission to grant the access token to manage Dependabot alerts. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        workflows:\n          type: string\n          description: 'The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: `write`.'\n          enum:\n            - write\n        members:\n          type: string\n          description: 'The level of permission to grant the access token for organization teams and members. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        organization_administration:\n          type: string\n          description: 'The level of permission to grant the access token to manage access to an organization. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        organization_hooks:\n          type: string\n          description: 'The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        organization_plan:\n          type: string\n          description: 'The level of permission to grant the access token for viewing an organization''s plan. Can be one of: `read`.'\n          enum:\n            - read\n        organization_projects:\n          type: string\n          description: 'The level of permission to grant the access token to manage organization projects and projects beta (where available). Can be one of: `read`, `write`, or `admin`.'\n          enum:\n            - read\n            - write\n            - admin\n        organization_packages:\n          type: string\n          description: 'The level of permission to grant the access token for organization packages published to GitHub Packages. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        organization_secrets:\n          type: string\n          description: 'The level of permission to grant the access token to manage organization secrets. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        organization_self_hosted_runners:\n          type: string\n          description: 'The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        organization_user_blocking:\n          type: string\n          description: 'The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        team_discussions:\n          type: string\n          description: 'The level of permission to grant the access token to manage team discussions and related comments. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n      example:\n        contents: read\n        issues: read\n        deployments: write\n        single_file: read\n    nullable-simple-user:\n      title: Simple User\n      description: Simple User\n      type: object\n      properties:\n        name:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:55Z\"'\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n      nullable: true\n    team:\n      title: Team\n      description: Groups of organization members that gives permissions on specified repositories.\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        name:\n          type: string\n        slug:\n          type: string\n        description:\n          type: string\n          nullable: true\n        privacy:\n          type: string\n        permission:\n          type: string\n        permissions:\n          type: object\n          properties:\n            pull:\n              type: boolean\n            triage:\n              type: boolean\n            push:\n              type: boolean\n            maintain:\n              type: boolean\n            admin:\n              type: boolean\n          required:\n            - pull\n            - triage\n            - push\n            - maintain\n            - admin\n        url:\n          type: string\n          format: uri\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/orgs/rails/teams/core\n        members_url:\n          type: string\n        repositories_url:\n          type: string\n          format: uri\n        parent:\n          $ref: '#/components/schemas/nullable-team-simple'\n      required:\n        - id\n        - node_id\n        - url\n        - members_url\n        - name\n        - description\n        - permission\n        - html_url\n        - repositories_url\n        - slug\n        - parent\n    nullable-team-simple:\n      title: Team Simple\n      description: Groups of organization members that gives permissions on specified repositories.\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the team\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VGVhbTE=\n        url:\n          description: URL for the team\n          type: string\n          format: uri\n          example: https://api.github.com/organizations/1/team/1\n        members_url:\n          type: string\n          example: https://api.github.com/organizations/1/team/1/members{/member}\n        name:\n          description: Name of the team\n          type: string\n          example: Justice League\n        description:\n          description: Description of the team\n          type: string\n          nullable: true\n          example: A great team.\n        permission:\n          description: Permission that the team will have for its repositories\n          type: string\n          example: admin\n        privacy:\n          description: The level of privacy this team should have\n          type: string\n          example: closed\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/orgs/rails/teams/core\n        repositories_url:\n          type: string\n          format: uri\n          example: https://api.github.com/organizations/1/team/1/repos\n        slug:\n          type: string\n          example: justice-league\n        ldap_dn:\n          description: Distinguished Name (DN) that team maps to within LDAP environment\n          example: uid=example,ou=users,dc=github,dc=com\n          type: string\n      required:\n        - id\n        - node_id\n        - url\n        - members_url\n        - name\n        - description\n        - permission\n        - html_url\n        - repositories_url\n        - slug\n      nullable: true\n    org-membership:\n      title: Org Membership\n      description: Org Membership\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/orgs/octocat/memberships/defunkt\n        state:\n          type: string\n          description: The state of the member in the organization. The `pending` state indicates the user has not yet accepted an invitation.\n          example: active\n          enum:\n            - active\n            - pending\n        role:\n          type: string\n          description: The user's membership type in the organization.\n          example: admin\n          enum:\n            - admin\n            - member\n            - billing_manager\n        organization_url:\n          type: string\n          format: uri\n          example: https://api.github.com/orgs/octocat\n        organization:\n          $ref: '#/components/schemas/organization-simple'\n        user:\n          $ref: '#/components/schemas/nullable-simple-user'\n        permissions:\n          type: object\n          properties:\n            can_create_repository:\n              type: boolean\n          required:\n            - can_create_repository\n      required:\n        - state\n        - role\n        - organization_url\n        - url\n        - organization\n        - user\n  parameters:\n    since-org:\n      name: since\n      description: An organization ID. Only return organizations with an ID greater than this ID.\n      in: query\n      required: false\n      schema:\n        type: integer\n    per-page:\n      name: per_page\n      description: Results per page (max 100)\n      in: query\n      schema:\n        type: integer\n        default: 30\n    org:\n      name: org\n      in: path\n      required: true\n      schema:\n        type: string\n    audit-log-phrase:\n      name: phrase\n      description: A search phrase. For more information, see [Searching the audit log](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization#searching-the-audit-log).\n      in: query\n      required: false\n      schema:\n        type: string\n    audit-log-include:\n      name: include\n      description: |-\n        The event types to include:\n\n        - `web` - returns web (non-Git) events.\n        - `git` - returns Git events.\n        - `all` - returns both web and Git events.\n\n        The default is `web`.\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - web\n          - git\n          - all\n    audit-log-after:\n      name: after\n      description: A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events after this cursor.\n      in: query\n      required: false\n      schema:\n        type: string\n    audit-log-before:\n      name: before\n      description: A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events before this cursor.\n      in: query\n      required: false\n      schema:\n        type: string\n    audit-log-order:\n      name: order\n      description: |-\n        The order of audit log events. To list newest events first, specify `desc`. To list oldest events first, specify `asc`.\n\n        The default is `desc`.\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - desc\n          - asc\n    username:\n      name: username\n      in: path\n      required: true\n      schema:\n        type: string\n    page:\n      name: page\n      description: Page number of the results to fetch.\n      in: query\n      schema:\n        type: integer\n        default: 1\n    hook-id:\n      name: hook_id\n      in: path\n      required: true\n      schema:\n        type: integer\n    cursor:\n      name: cursor\n      description: 'Used for pagination: the starting delivery from which the page of deliveries is fetched. Refer to the `link` header for the next and previous page cursors.'\n      in: query\n      required: false\n      schema:\n        type: string\n    delivery-id:\n      name: delivery_id\n      in: path\n      required: true\n      schema:\n        type: integer\n    invitation-id:\n      name: invitation_id\n      description: invitation_id parameter\n      in: path\n      required: true\n      schema:\n        type: integer\n  responses:\n    not_modified:\n      description: Not modified\n    not_found:\n      description: Resource not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    conflict:\n      description: Conflict\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    preview_header_missing:\n      description: Preview header missing\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - message\n              - documentation_url\n            properties:\n              message:\n                type: string\n              documentation_url:\n                type: string\n    validation_failed:\n      description: Validation failed\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/validation-error'\n    bad_request:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/scim-error'\n    accepted:\n      description: Accepted\n      content:\n        application/json:\n          schema:\n            type: object\n    forbidden:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    requires_authentication:\n      description: Requires authentication\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n  securitySchemes: {}\n  callbacks: {}\n  examples:\n    organization-simple-items:\n      value:\n        - login: github\n          id: 1\n          node_id: MDEyOk9yZ2FuaXphdGlvbjE=\n          url: https://api.github.com/orgs/github\n          repos_url: https://api.github.com/orgs/github/repos\n          events_url: https://api.github.com/orgs/github/events\n          hooks_url: https://api.github.com/orgs/github/hooks\n          issues_url: https://api.github.com/orgs/github/issues\n          members_url: https://api.github.com/orgs/github/members{/member}\n          public_members_url: https://api.github.com/orgs/github/public_members{/member}\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          description: A great organization\n    organization-custom-repository-role-example:\n      value:\n        total_count: 2\n        custom_roles:\n          - id: 8030\n            name: Developer\n          - id: 8031\n            name: Designer\n    organization-full-default-response:\n      summary: Default response\n      value:\n        login: github\n        id: 1\n        node_id: MDEyOk9yZ2FuaXphdGlvbjE=\n        url: https://api.github.com/orgs/github\n        repos_url: https://api.github.com/orgs/github/repos\n        events_url: https://api.github.com/orgs/github/events\n        hooks_url: https://api.github.com/orgs/github/hooks\n        issues_url: https://api.github.com/orgs/github/issues\n        members_url: https://api.github.com/orgs/github/members{/member}\n        public_members_url: https://api.github.com/orgs/github/public_members{/member}\n        avatar_url: https://github.com/images/error/octocat_happy.gif\n        description: A great organization\n        name: github\n        company: GitHub\n        blog: https://github.com/blog\n        location: San Francisco\n        email: octocat@github.com\n        twitter_username: github\n        is_verified: true\n        has_organization_projects: true\n        has_repository_projects: true\n        public_repos: 2\n        public_gists: 1\n        followers: 20\n        following: 0\n        html_url: https://github.com/octocat\n        created_at: '2008-01-14T04:33:35Z'\n        updated_at: '2014-03-03T18:58:10Z'\n        type: Organization\n        total_private_repos: 100\n        owned_private_repos: 100\n        private_gists: 81\n        disk_usage: 10000\n        collaborators: 8\n        billing_email: mona@github.com\n        plan:\n          name: Medium\n          space: 400\n          private_repos: 20\n          filled_seats: 4\n          seats: 5\n        default_repository_permission: read\n        members_can_create_repositories: true\n        two_factor_requirement_enabled: true\n        members_allowed_repository_creation_type: all\n        members_can_create_public_repositories: false\n        members_can_create_private_repositories: false\n        members_can_create_internal_repositories: false\n        members_can_create_pages: true\n        members_can_fork_private_repositories: false\n    organization-full:\n      value:\n        login: github\n        id: 1\n        node_id: MDEyOk9yZ2FuaXphdGlvbjE=\n        url: https://api.github.com/orgs/github\n        repos_url: https://api.github.com/orgs/github/repos\n        events_url: https://api.github.com/orgs/github/events\n        hooks_url: https://api.github.com/orgs/github/hooks\n        issues_url: https://api.github.com/orgs/github/issues\n        members_url: https://api.github.com/orgs/github/members{/member}\n        public_members_url: https://api.github.com/orgs/github/public_members{/member}\n        avatar_url: https://github.com/images/error/octocat_happy.gif\n        description: A great organization\n        name: github\n        company: GitHub\n        blog: https://github.com/blog\n        location: San Francisco\n        email: octocat@github.com\n        twitter_username: github\n        is_verified: true\n        has_organization_projects: true\n        has_repository_projects: true\n        public_repos: 2\n        public_gists: 1\n        followers: 20\n        following: 0\n        html_url: https://github.com/octocat\n        created_at: '2008-01-14T04:33:35Z'\n        type: Organization\n        total_private_repos: 100\n        owned_private_repos: 100\n        private_gists: 81\n        disk_usage: 10000\n        collaborators: 8\n        billing_email: mona@github.com\n        plan:\n          name: Medium\n          space: 400\n          private_repos: 20\n        default_repository_permission: read\n        members_can_create_repositories: true\n        two_factor_requirement_enabled: true\n        members_allowed_repository_creation_type: all\n        members_can_create_public_repositories: false\n        members_can_create_private_repositories: false\n        members_can_create_internal_repositories: false\n        members_can_create_pages: true\n        members_can_create_public_pages: true\n        members_can_create_private_pages: true\n        members_can_fork_private_repositories: false\n        updated_at: '2014-03-03T18:58:10Z'\n    audit-log:\n      value:\n        - '@timestamp': 1606929874512\n          action: team.add_member\n          actor: octocat\n          created_at: 1606929874512\n          _document_id: xJJFlFOhQ6b-5vaAFy9Rjw\n          org: octo-corp\n          team: octo-corp/example-team\n          user: monalisa\n        - '@timestamp': 1606507117008\n          action: org.create\n          actor: octocat\n          created_at: 1606507117008\n          _document_id: Vqvg6kZ4MYqwWRKFDzlMoQ\n          org: octocat-test-org\n        - '@timestamp': 1605719148837\n          action: repo.destroy\n          actor: monalisa\n          created_at: 1605719148837\n          _document_id: LwW2vpJZCDS-WUmo9Z-ifw\n          org: mona-org\n          repo: mona-org/mona-test-repo\n          visibility: private\n    simple-user-items:\n      value:\n        - login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n    credential-authorization-items:\n      value:\n        - login: octocat\n          credential_id: 161195\n          credential_type: personal access token\n          token_last_eight: 71c3fc11\n          credential_authorized_at: '2011-01-26T19:06:43Z'\n          authorized_credential_expires_at: '2011-02-25T19:06:43Z'\n          scopes:\n            - user\n            - repo\n        - login: hubot\n          credential_id: 161196\n          credential_type: personal access token\n          token_last_eight: Ae178B4a\n          credential_authorized_at: '2019-03-29T19:06:43Z'\n          authorized_credential_expires_at: '2019-04-28T19:06:43Z'\n          scopes:\n            - repo\n    organization-invitation-items:\n      value:\n        - id: 1\n          login: monalisa\n          node_id: MDQ6VXNlcjE=\n          email: octocat@github.com\n          role: direct_member\n          created_at: '2016-11-30T06:46:10-08:00'\n          failed_at: ''\n          failed_reason: ''\n          inviter:\n            login: other_user\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/other_user_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/other_user\n            html_url: https://github.com/other_user\n            followers_url: https://api.github.com/users/other_user/followers\n            following_url: https://api.github.com/users/other_user/following{/other_user}\n            gists_url: https://api.github.com/users/other_user/gists{/gist_id}\n            starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/other_user/subscriptions\n            organizations_url: https://api.github.com/users/other_user/orgs\n            repos_url: https://api.github.com/users/other_user/repos\n            events_url: https://api.github.com/users/other_user/events{/privacy}\n            received_events_url: https://api.github.com/users/other_user/received_events\n            type: User\n            site_admin: false\n          team_count: 2\n          invitation_teams_url: https://api.github.com/organizations/2/invitations/1/teams\n    org-hook-items:\n      value:\n        - id: 1\n          url: https://api.github.com/orgs/octocat/hooks/1\n          ping_url: https://api.github.com/orgs/octocat/hooks/1/pings\n          deliveries_url: https://api.github.com/orgs/octocat/hooks/1/deliveries\n          name: web\n          events:\n            - push\n            - pull_request\n          active: true\n          config:\n            url: http://example.com\n            content_type: json\n          updated_at: '2011-09-06T20:39:23Z'\n          created_at: '2011-09-06T17:26:27Z'\n          type: Organization\n    org-hook:\n      value:\n        id: 1\n        url: https://api.github.com/orgs/octocat/hooks/1\n        ping_url: https://api.github.com/orgs/octocat/hooks/1/pings\n        deliveries_url: https://api.github.com/orgs/octocat/hooks/1/deliveries\n        name: web\n        events:\n          - push\n          - pull_request\n        active: true\n        config:\n          url: http://example.com\n          content_type: json\n        updated_at: '2011-09-06T20:39:23Z'\n        created_at: '2011-09-06T17:26:27Z'\n        type: Organization\n    org-hook-2:\n      value:\n        id: 1\n        url: https://api.github.com/orgs/octocat/hooks/1\n        ping_url: https://api.github.com/orgs/octocat/hooks/1/pings\n        deliveries_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/deliveries\n        name: web\n        events:\n          - pull_request\n        active: true\n        config:\n          url: http://example.com\n          content_type: json\n        updated_at: '2011-09-06T20:39:23Z'\n        created_at: '2011-09-06T17:26:27Z'\n        type: Organization\n    webhook-config:\n      value:\n        content_type: json\n        insecure_ssl: '0'\n        secret: '********'\n        url: https://example.com/webhook\n    hook-delivery-items:\n      value:\n        - id: 12345678\n          guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516\n          delivered_at: '2019-06-03T00:57:16Z'\n          redelivery: false\n          duration: 0.27\n          status: OK\n          status_code: 200\n          event: issues\n          action: opened\n          installation_id: 123\n          repository_id: 456\n        - id: 123456789\n          guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516\n          delivered_at: '2019-06-04T00:57:16Z'\n          redelivery: true\n          duration: 0.28\n          status: OK\n          status_code: 200\n          event: issues\n          action: opened\n          installation_id: 123\n          repository_id: 456\n    hook-delivery:\n      value:\n        id: 12345678\n        guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516\n        delivered_at: '2019-06-03T00:57:16Z'\n        redelivery: false\n        duration: 0.27\n        status: OK\n        status_code: 200\n        event: issues\n        action: opened\n        installation_id: 123\n        repository_id: 456\n        url: https://www.example.com\n        request:\n          headers:\n            X-GitHub-Delivery: 0b989ba4-242f-11e5-81e1-c7b6966d2516\n            X-Hub-Signature-256: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e\n            Accept: '*/*'\n            X-GitHub-Hook-ID: '42'\n            User-Agent: GitHub-Hookshot/b8c71d8\n            X-GitHub-Event: issues\n            X-GitHub-Hook-Installation-Target-ID: '123'\n            X-GitHub-Hook-Installation-Target-Type: repository\n            content-type: application/json\n            X-Hub-Signature: sha1=a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\n          payload:\n            action: opened\n            issue:\n              body: foo\n            repository:\n              id: 123\n        response:\n          headers:\n            Content-Type: text/html;charset=utf-8\n          payload: ok\n    installation-paginated:\n      value:\n        total_count: 1\n        installations:\n          - id: 25381\n            account:\n              login: octo-org\n              id: 6811672\n              node_id: MDEyOk9yZ2FuaXphdGlvbjY4MTE2NzI=\n              avatar_url: https://avatars3.githubusercontent.com/u/6811672?v=4\n              gravatar_id: ''\n              url: https://api.github.com/users/octo-org\n              html_url: https://github.com/octo-org\n              followers_url: https://api.github.com/users/octo-org/followers\n              following_url: https://api.github.com/users/octo-org/following{/other_user}\n              gists_url: https://api.github.com/users/octo-org/gists{/gist_id}\n              starred_url: https://api.github.com/users/octo-org/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/octo-org/subscriptions\n              organizations_url: https://api.github.com/users/octo-org/orgs\n              repos_url: https://api.github.com/users/octo-org/repos\n              events_url: https://api.github.com/users/octo-org/events{/privacy}\n              received_events_url: https://api.github.com/users/octo-org/received_events\n              type: Organization\n              site_admin: false\n            repository_selection: selected\n            access_tokens_url: https://api.github.com/app/installations/25381/access_tokens\n            repositories_url: https://api.github.com/installation/repositories\n            html_url: https://github.com/organizations/octo-org/settings/installations/25381\n            app_id: 2218\n            target_id: 6811672\n            target_type: Organization\n            permissions:\n              deployments: write\n              metadata: read\n              pull_requests: read\n              statuses: read\n            events:\n              - deployment\n              - deployment_status\n            created_at: '2017-05-16T08:47:09.000-07:00'\n            updated_at: '2017-06-06T11:23:23.000-07:00'\n            single_file_name: config.yml\n            has_multiple_single_files: true\n            single_file_paths:\n              - config.yml\n              - .github/issue_TEMPLATE.md\n            app_slug: github-actions\n            suspended_at: null\n            suspended_by: null\n    organization-invitation:\n      value:\n        id: 1\n        login: monalisa\n        node_id: MDQ6VXNlcjE=\n        email: octocat@github.com\n        role: direct_member\n        created_at: '2016-11-30T06:46:10-08:00'\n        inviter:\n          login: other_user\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/other_user_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/other_user\n          html_url: https://github.com/other_user\n          followers_url: https://api.github.com/users/other_user/followers\n          following_url: https://api.github.com/users/other_user/following{/other_user}\n          gists_url: https://api.github.com/users/other_user/gists{/gist_id}\n          starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/other_user/subscriptions\n          organizations_url: https://api.github.com/users/other_user/orgs\n          repos_url: https://api.github.com/users/other_user/repos\n          events_url: https://api.github.com/users/other_user/events{/privacy}\n          received_events_url: https://api.github.com/users/other_user/received_events\n          type: User\n          site_admin: false\n        team_count: 2\n        invitation_teams_url: https://api.github.com/organizations/2/invitations/1/teams\n    team-items:\n      value:\n        - id: 1\n          node_id: MDQ6VGVhbTE=\n          url: https://api.github.com/teams/1\n          html_url: https://github.com/orgs/github/teams/justice-league\n          name: Justice League\n          slug: justice-league\n          description: A great team.\n          privacy: closed\n          permission: admin\n          members_url: https://api.github.com/teams/1/members{/member}\n          repositories_url: https://api.github.com/teams/1/repos\n          parent: null\n    org-membership-response-if-user-has-an-active-admin-membership-with-organization:\n      summary: Response if user has an active admin membership with organization\n      value:\n        url: https://api.github.com/orgs/octocat/memberships/defunkt\n        state: active\n        role: admin\n        organization_url: https://api.github.com/orgs/octocat\n        organization:\n          login: github\n          id: 1\n          node_id: MDEyOk9yZ2FuaXphdGlvbjE=\n          url: https://api.github.com/orgs/github\n          repos_url: https://api.github.com/orgs/github/repos\n          events_url: https://api.github.com/orgs/github/events\n          hooks_url: https://api.github.com/orgs/github/hooks\n          issues_url: https://api.github.com/orgs/github/issues\n          members_url: https://api.github.com/orgs/github/members{/member}\n          public_members_url: https://api.github.com/orgs/github/public_members{/member}\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          description: A great organization\n        user:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n    org-membership-items:\n      value:\n        - url: https://api.github.com/orgs/octocat/memberships/defunkt\n          state: active\n          role: admin\n          organization_url: https://api.github.com/orgs/octocat\n          organization:\n            login: github\n            id: 1\n            node_id: MDEyOk9yZ2FuaXphdGlvbjE=\n            url: https://api.github.com/orgs/github\n            repos_url: https://api.github.com/orgs/github/repos\n            events_url: https://api.github.com/orgs/github/events\n            hooks_url: https://api.github.com/orgs/github/hooks\n            issues_url: https://api.github.com/orgs/github/issues\n            members_url: https://api.github.com/orgs/github/members{/member}\n            public_members_url: https://api.github.com/orgs/github/public_members{/member}\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            description: A great organization\n          user:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n        - url: https://api.github.com/orgs/invitocat/memberships/defunkt\n          state: pending\n          role: admin\n          organization_url: https://api.github.com/orgs/invitocat\n          organization:\n            login: github\n            id: 1\n            node_id: MDEyOk9yZ2FuaXphdGlvbjE=\n            url: https://api.github.com/orgs/github\n            repos_url: https://api.github.com/orgs/github/repos\n            events_url: https://api.github.com/orgs/github/events\n            hooks_url: https://api.github.com/orgs/github/hooks\n            issues_url: https://api.github.com/orgs/github/issues\n            members_url: https://api.github.com/orgs/github/members{/member}\n            public_members_url: https://api.github.com/orgs/github/public_members{/member}\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            description: A great organization\n          user:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n    org-membership:\n      value:\n        url: https://api.github.com/orgs/invitocat/memberships/defunkt\n        state: pending\n        role: admin\n        organization_url: https://api.github.com/orgs/invitocat\n        organization:\n          login: github\n          id: 1\n          node_id: MDEyOk9yZ2FuaXphdGlvbjE=\n          url: https://api.github.com/orgs/github\n          repos_url: https://api.github.com/orgs/github/repos\n          events_url: https://api.github.com/orgs/github/events\n          hooks_url: https://api.github.com/orgs/github/hooks\n          issues_url: https://api.github.com/orgs/github/issues\n          members_url: https://api.github.com/orgs/github/members{/member}\n          public_members_url: https://api.github.com/orgs/github/public_members{/member}\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          description: A great organization\n        user:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n    org-membership-2:\n      value:\n        url: https://api.github.com/orgs/octocat/memberships/defunkt\n        state: active\n        role: admin\n        organization_url: https://api.github.com/orgs/octocat\n        organization:\n          login: github\n          id: 1\n          node_id: MDEyOk9yZ2FuaXphdGlvbjE=\n          url: https://api.github.com/orgs/github\n          repos_url: https://api.github.com/orgs/github/repos\n          events_url: https://api.github.com/orgs/github/events\n          hooks_url: https://api.github.com/orgs/github/hooks\n          issues_url: https://api.github.com/orgs/github/issues\n          members_url: https://api.github.com/orgs/github/members{/member}\n          public_members_url: https://api.github.com/orgs/github/public_members{/member}\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          description: A great organization\n        user:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n  requestBodies: {}\n  headers:\n    link:\n      example: \u003chttps://api.github.com/resource?page=2\u003e; rel=\"next\", \u003chttps://api.github.com/resource?page=5\u003e; rel=\"last\"\n      schema:\n        type: string\n  links: {}\n  x-stackQL-resources:\n    credential_authorizations:\n      id: github.orgs.credential_authorizations\n      name: credential_authorizations\n      title: Credential Authorizations\n      methods:\n        list_saml_sso_authorizations:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1credential-authorizations/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        remove_saml_sso_authorization:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1credential-authorizations~1{credential_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/credential_authorizations/methods/list_saml_sso_authorizations'\n        insert: []\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/credential_authorizations/methods/remove_saml_sso_authorization'\n    installations:\n      id: github.orgs.installations\n      name: installations\n      title: Installations\n      methods:\n        list_app_installations:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1installations/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/installations/methods/list_app_installations'\n        insert: []\n        update: []\n        delete: []\n    audit_log_events:\n      id: github.orgs.audit_log_events\n      name: audit_log_events\n      title: Organization Audit Log Events\n      methods:\n        get_audit_log:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1audit-log/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/audit_log_events/methods/get_audit_log'\n        insert: []\n        update: []\n        delete: []\n    orgs:\n      id: github.orgs.orgs\n      name: orgs\n      title: Orgs\n      methods:\n        list:\n          operation:\n            $ref: '#/paths/~1organizations/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1orgs/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list_for_user:\n          operation:\n            $ref: '#/paths/~1users~1{username}~1orgs/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/orgs/methods/get'\n          - $ref: '#/components/x-stackQL-resources/orgs/methods/list_for_user'\n          - $ref: '#/components/x-stackQL-resources/orgs/methods/list'\n        insert: []\n        update: []\n        delete: []\n    custom_roles:\n      id: github.orgs.custom_roles\n      name: custom_roles\n      title: Custom_roles\n      methods:\n        list_custom_roles:\n          operation:\n            $ref: '#/paths/~1organizations~1{organization_id}~1custom_roles/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/custom_roles/methods/list_custom_roles'\n        insert: []\n        update: []\n        delete: []\n    blocking:\n      id: github.orgs.blocking\n      name: blocking\n      title: Blocking\n      methods:\n        list_blocked_users:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1blocks/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        check_blocked_user:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1blocks~1{username}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        block_user:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1blocks~1{username}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        unblock_user:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1blocks~1{username}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/blocking/methods/list_blocked_users'\n        insert: []\n        update: []\n        delete: []\n    invitation_teams:\n      id: github.orgs.invitation_teams\n      name: invitation_teams\n      title: Invitation Teams\n      methods:\n        list_invitation_teams:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1invitations~1{invitation_id}~1teams/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/invitation_teams/methods/list_invitation_teams'\n        insert: []\n        update: []\n        delete: []\n    memberships:\n      id: github.orgs.memberships\n      name: memberships\n      title: Organization memberships\n      methods:\n        check_membership_for_user:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1members~1{username}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        get_membership_for_user:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1memberships~1{username}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        set_membership_for_user:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1memberships~1{username}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        remove_membership_for_user:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1memberships~1{username}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        list_memberships_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1memberships~1orgs/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_membership_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1memberships~1orgs~1{org}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_membership_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1memberships~1orgs~1{org}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/memberships/methods/get_membership_for_user'\n          - $ref: '#/components/x-stackQL-resources/memberships/methods/get_membership_for_authenticated_user'\n          - $ref: '#/components/x-stackQL-resources/memberships/methods/list_memberships_for_authenticated_user'\n        insert: []\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/memberships/methods/remove_membership_for_user'\n    failed_invitations:\n      id: github.orgs.failed_invitations\n      name: failed_invitations\n      title: Failed Invitations\n      methods:\n        list_failed_invitations:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1failed_invitations/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/failed_invitations/methods/list_failed_invitations'\n        insert: []\n        update: []\n        delete: []\n    invitations:\n      id: github.orgs.invitations\n      name: invitations\n      title: Invitations\n      methods:\n        list_pending_invitations:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1invitations/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_invitation:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1invitations/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        cancel_invitation:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1invitations~1{invitation_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/invitations/methods/list_pending_invitations'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/invitations/methods/create_invitation'\n        update: []\n        delete: []\n    public_members:\n      id: github.orgs.public_members\n      name: public_members\n      title: Public Members\n      methods:\n        list_public_members:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1public_members/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/public_members/methods/list_public_members'\n        insert: []\n        update: []\n        delete: []\n    public_memberships:\n      id: github.orgs.public_memberships\n      name: public_memberships\n      title: Organization Public memberships\n      methods:\n        check_public_membership_for_user:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1public_members~1{username}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        set_public_membership_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1public_members~1{username}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        remove_public_membership_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1public_members~1{username}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select: []\n        insert: []\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/public_memberships/methods/remove_public_membership_for_authenticated_user'\n    members:\n      id: github.orgs.members\n      name: members\n      title: Members\n      methods:\n        list_members:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1members/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        remove_member:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1members~1{username}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/members/methods/list_members'\n        insert: []\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/members/methods/remove_member'\n    webhook_deliveries:\n      id: github.orgs.webhook_deliveries\n      name: webhook_deliveries\n      title: Webhook Deliveries\n      methods:\n        list_webhook_deliveries:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1hooks~1{hook_id}~1deliveries/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_webhook_delivery:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1hooks~1{hook_id}~1deliveries~1{delivery_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        redeliver_webhook_delivery:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1hooks~1{hook_id}~1deliveries~1{delivery_id}~1attempts/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/webhook_deliveries/methods/get_webhook_delivery'\n          - $ref: '#/components/x-stackQL-resources/webhook_deliveries/methods/list_webhook_deliveries'\n        insert: []\n        update: []\n        delete: []\n    webhook_config:\n      id: github.orgs.webhook_config\n      name: webhook_config\n      title: Webhook Config\n      methods:\n        get_webhook_config_for_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1hooks~1{hook_id}~1config/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_webhook_config_for_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1hooks~1{hook_id}~1config/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/webhook_config/methods/get_webhook_config_for_org'\n        insert: []\n        update: []\n        delete: []\n    webhooks:\n      id: github.orgs.webhooks\n      name: webhooks\n      title: Webhooks\n      methods:\n        list_webhooks:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1hooks/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_webhook:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1hooks/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        get_webhook:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1hooks~1{hook_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_webhook:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1hooks~1{hook_id}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_webhook:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1hooks~1{hook_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        ping_webhook:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1hooks~1{hook_id}~1pings/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/webhooks/methods/get_webhook'\n          - $ref: '#/components/x-stackQL-resources/webhooks/methods/list_webhooks'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/webhooks/methods/create_webhook'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/webhooks/methods/delete_webhook'\n    outside_collaborators:\n      id: github.orgs.outside_collaborators\n      name: outside_collaborators\n      title: Outside_collaborators\n      methods:\n        list_outside_collaborators:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1outside_collaborators/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        convert_member_to_outside_collaborator:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1outside_collaborators~1{username}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        remove_outside_collaborator:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1outside_collaborators~1{username}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/outside_collaborators/methods/list_outside_collaborators'\n        insert: []\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/outside_collaborators/methods/remove_outside_collaborator'\nopenapi: 3.0.3\nservers:\n  - url: https://api.github.com\ntags:\n  - name: actions\n    description: Endpoints to manage GitHub Actions using the REST API.\n  - name: activity\n    description: Activity APIs provide access to notifications, subscriptions, and timelines.\n  - name: apps\n    description: Information for integrations and installations.\n  - name: billing\n    description: Monitor charges and usage from Actions and Packages.\n  - name: checks\n    description: Rich interactions with checks run by your integrations.\n  - name: code-scanning\n    description: Retrieve code scanning alerts from a repository.\n  - name: codes-of-conduct\n    description: Insight into codes of conduct for your communities.\n  - name: codespaces\n    description: Endpoints to manage Codespaces using the REST API.\n  - name: emojis\n    description: List emojis available to use on GitHub.\n  - name: enterprise-admin\n    description: Administer a GitHub enterprise.\n  - name: dependabot\n    description: Endpoints to manage Dependabot.\n  - name: gists\n    description: View, modify your gists.\n  - name: git\n    description: Raw Git functionality.\n  - name: gitignore\n    description: View gitignore templates\n  - name: interactions\n    description: Owner or admin management of users interactions.\n  - name: issues\n    description: Interact with GitHub Issues.\n  - name: licenses\n    description: View various OSS licenses.\n  - name: markdown\n    description: Render GitHub flavored markdown\n  - name: meta\n    description: Endpoints that give information about the API.\n  - name: migrations\n    description: Move projects to or from GitHub.\n  - name: oauth-authorizations\n    description: Manage access of OAuth applications\n  - name: orgs\n    description: Interact with GitHub Orgs.\n  - name: packages\n    description: Manage packages for authenticated users and organizations.\n  - name: projects\n    description: Interact with GitHub Projects.\n  - name: pulls\n    description: Interact with GitHub Pull Requests.\n  - name: rate-limit\n    description: Check your current rate limit status\n  - name: reactions\n    description: Interact with reactions to various GitHub entities.\n  - name: repos\n    description: Interact with GitHub Repos.\n  - name: scim\n    description: Provisioning of GitHub organization membership for SCIM-enabled providers.\n  - name: search\n    description: Look for stuff on GitHub.\n  - name: secret-scanning\n    description: Retrieve secret scanning alerts from a repository.\n  - name: server-statistics\n    description: GHES statistics\n  - name: teams\n    description: Interact with GitHub Teams.\n  - name: users\n    description: Interact with and view information about users and also current user.\nexternalDocs:\n  description: GitHub v3 REST API\n  url: https://docs.github.com/rest/\ninfo:\n  version: 1.1.4\n  title: GitHub v3 REST API - orgs\n  description: Interact with GitHub Orgs.\n  license:\n    name: MIT\n    url: https://spdx.org/licenses/MIT\n  termsOfService: https://docs.github.com/articles/github-terms-of-service\n  contact:\n    name: Support\n    url: https://support.github.com/contact?tags=dotcom-rest-api\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/github/v0.3.1/services/orgs.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/github/v0.3.1/services/orgs.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/orgs/{org}\": patch: responses: 422: contents: application/json: generate schema: oneOf: oneOf OrgsUpdateUnprocessableEntity: variant ValidationErrorSimple: no unique fields, unable to parse without discriminator: discriminator inference not implemented",
	"NotImplemented": [
		"complex anyOf",
		"discriminator inference"
	]
}