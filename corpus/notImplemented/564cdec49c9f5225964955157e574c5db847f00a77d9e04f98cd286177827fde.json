{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/anz-bank/sysl"
		},
		"file": {
			"name": "path_one.yaml",
			"size": 0,
			"path": "pkg/importer/tests/openapi3/path_one.yaml",
			"byteSize": 3350,
			"content": "# One paths only\n\nopenapi: 3.0.0\n\ninfo:\n  title: Path API Test\n  description: Random APIs that don't make any sense apart from testing\n  version: 1.0.0\n\npaths:\n  /endpoint-1:\n    post:\n      summary: Just a post endpoint\n      description: |\n        Here's a description\n      operationId: \"POST_ENDPOINT_1\"\n      tags: [\"Test\"]\n\n      parameters:\n        - $ref: \"#/components/parameters/content-type\"\n        - $ref: \"#/components/parameters/custom-parameter\"\n        - $ref: \"#/components/parameters/accept\"\n\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/req_body\"\n\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            content-type:\n              $ref: \"#/components/headers/content-type\"\n          content:\n            application/json:\n              examples:\n                just an example content:\n                  $ref: \"#/components/examples/resp_create\"\n        \"401\":\n          description: UNAUTHORISED\n          headers:\n            content-type:\n              $ref: \"#/components/headers/content-type\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_401\"\n              examples:\n                Too many attempts:\n                  $ref: \"#/components/examples/error_too_many_attempts\"\n\ncomponents:\n  schemas:\n    req_body:\n      required:\n        - placeholder\n      properties:\n        placeholder:\n          type: string\n          example: \"anjkdansjkdnadjkansd\"\n        placeholder2:\n          type: string\n          example: \"ckzlxmczklmcfa\"\n    error_401:\n      type: object\n      properties:\n        error:\n          type: object\n          properties:\n            code:\n              type: string\n            description:\n              type: string\n              example: Too many OTP attempts\n\n  headers:\n    content-type:\n      schema:\n        type: string\n        example: application/json\n    x-request-id:\n      schema:\n        type: string\n        example: 12345678-1234-1234-1234-123456789012\n    auth-id:\n      schema:\n        type: string\n        example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdXRoSW.........\n    set-cookie:\n      schema:\n        type: string\n        example: anzssotoken=%JWT%\n  securitySchemes:\n    BearerJWT:\n      description: |\n        Bearer token JWT\n      type: http\n      scheme: bearer\n      bearerFormat: \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdXRoSW.........\"\n\n  parameters:\n    content-type:\n      in: header\n      name: content-type\n      required: true\n      schema:\n        type: string\n        enum:\n          [\n            \"application/json\",\n            \"application/x-www-form-urlencoded\",\n            \"application/x-www-form-urlencoded; charset=utf-8\",\n          ]\n    custom-parameter:\n      in: header\n      name: custom-parameter\n      required: true\n      schema:\n        type: string\n        example: hello im just a placeholder\n    accept:\n      in: header\n      name: accept\n      required: true\n      schema:\n        type: string\n        example: application/json\n\n  examples:\n    resp_create:\n      value:\n        authId: string\n\n    error_too_many_attempts:\n      value:\n        error:\n          code: \"12345\"\n          description: Too many attempts\n",
			"canonicalURL": "/github.com/anz-bank/sysl@ed832ffbbebdb8970241347dfda3c8d6cf3eb638/-/blob/pkg/importer/tests/openapi3/path_one.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/anz-bank/sysl/blob/ed832ffbbebdb8970241347dfda3c8d6cf3eb638/pkg/importer/tests/openapi3/path_one.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/endpoint-1\": post: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}