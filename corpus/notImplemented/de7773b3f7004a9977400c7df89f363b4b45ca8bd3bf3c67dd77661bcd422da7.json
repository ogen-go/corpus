{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "googleapis.com-cloudtrace-v2-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/googleapis.com-cloudtrace-v2-swagger.yaml",
			"byteSize": 22874,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n  description: \u003e\n    Sends application trace data to Stackdriver Trace for viewing. Trace data is\n    collected for all App Engine applications by default. Trace data from other\n    applications can be provided using this API. This library is used to\n    interact with the Trace API directly. If you are looking to instrument your\n    application for Stackdriver Trace, we recommend using OpenCensus.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Stackdriver Trace\n  version: v2\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-logo:\n    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: google\n      url: https://cloudtrace.googleapis.com/$discovery/rest?version=v2\n      version: v1\n  x-preferred: true\n  x-providerName: googleapis.com\n  x-serviceName: cloudtrace\nexternalDocs:\n  url: https://cloud.google.com/trace\ntags:\n  - name: projects\npaths:\n  \"/v2/{name}\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: Creates a new span.\n      operationId: cloudtrace.projects.traces.spans.createSpan\n      parameters:\n        - description: \u003e-\n            The resource name of the span in the following format:\n\n                projects/[PROJECT_ID]/traces/[TRACE_ID]/spans/SPAN_ID is a unique identifier for a trace within a project;\n            it is a 32-character hexadecimal encoding of a 16-byte array.\n\n\n            [SPAN_ID] is a unique identifier for a span within a trace; it\n\n            is a 16-character hexadecimal encoding of an 8-byte array.\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Span\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Span\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/trace.append\n          Oauth2c:\n            - https://www.googleapis.com/auth/trace.append\n      tags:\n        - projects\n  \"/v2/{name}/traces:batchWrite\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: |-\n        Sends new spans to new or existing traces. You cannot update\n        existing spans.\n      operationId: cloudtrace.projects.traces.batchWrite\n      parameters:\n        - description: \u003e-\n            Required. The name of the project where the spans belong. The format\n            is\n\n            `projects/[PROJECT_ID]`.\n          in: path\n          name: name\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchWriteSpansRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n        - Oauth2:\n            - https://www.googleapis.com/auth/trace.append\n          Oauth2c:\n            - https://www.googleapis.com/auth/trace.append\n      tags:\n        - projects\nservers:\n  - url: https://cloudtrace.googleapis.com/\ncomponents:\n  parameters:\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        type: string\n        enum:\n          - json\n          - media\n          - proto\n        default: json\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API\n        access, quota, and reports. Required unless you provide an OAuth 2.0\n        token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n        default: true\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications. Can be\n        any arbitrary string assigned to a user, but should not exceed 40\n        characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        type: string\n        enum:\n          - \"1\"\n          - \"2\"\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services\n            https://www.googleapis.com/auth/trace.append: Write Trace data for a project or application\n    Oauth2c:\n      description: Oauth 2.0 accessCode authentication\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services\n            https://www.googleapis.com/auth/trace.append: Write Trace data for a project or application\n  schemas:\n    Annotation:\n      description: Text annotation with a set of attributes.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/Attributes\"\n        description:\n          $ref: \"#/components/schemas/TruncatableString\"\n      type: object\n    AttributeValue:\n      description: The allowed types for [VALUE] in a `[KEY]:[VALUE]` attribute.\n      properties:\n        boolValue:\n          description: A Boolean value represented by `true` or `false`.\n          type: boolean\n        intValue:\n          description: A 64-bit signed integer.\n          format: int64\n          type: string\n        stringValue:\n          $ref: \"#/components/schemas/TruncatableString\"\n      type: object\n    Attributes:\n      description: A set of attributes, each in the format `[KEY]:[VALUE]`.\n      properties:\n        attributeMap:\n          additionalProperties:\n            $ref: \"#/components/schemas/AttributeValue\"\n          description: \u003e-\n            The set of attributes. Each attribute's key can be up to 128 bytes\n\n            long. The value can be a string up to 256 bytes, a signed 64-bit integer,\n\n            or the Boolean values `true` and `false`. For example:\n\n                \"/instance_id\": \"my-instance\"\n                \"/http/user_agent\": \"\"\n                \"/http/request_bytes\": 300\n                \"abc.com/myattribute\": true\n          type: object\n        droppedAttributesCount:\n          description: \u003e-\n            The number of attributes that were discarded. Attributes can be\n            discarded\n\n            because their keys are too long or because there are too many attributes.\n\n            If this value is 0 then all attributes are valid.\n          format: int32\n          type: integer\n      type: object\n    BatchWriteSpansRequest:\n      description: The request message for the `BatchWriteSpans` method.\n      properties:\n        spans:\n          description: \u003e-\n            Required. A list of new spans. The span names must not match\n            existing\n\n            spans, or the results are undefined.\n          items:\n            $ref: \"#/components/schemas/Span\"\n          type: array\n      type: object\n    Empty:\n      description: \u003e-\n        A generic empty message that you can re-use to avoid defining duplicated\n\n        empty messages in your APIs. A typical example is to use it as the request\n\n        or the response type of an API method. For instance:\n\n            service Foo {\n              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n            }\n\n        The JSON representation for `Empty` is empty JSON object `{}`.\n      properties: {}\n      type: object\n    Link:\n      description: \u003e-\n        A pointer from the current span to another span in the same trace or in\n        a\n\n        different trace. For example, this can be used in batching operations,\n\n        where a single batch handler processes multiple requests from different\n\n        traces or when the handler receives a request from a different project.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/Attributes\"\n        spanId:\n          description: The [SPAN_ID] for a span within a trace.\n          type: string\n        traceId:\n          description: The [TRACE_ID] for a trace within a project.\n          type: string\n        type:\n          description: The relationship of the current span relative to the linked span.\n          enum:\n            - TYPE_UNSPECIFIED\n            - CHILD_LINKED_SPAN\n            - PARENT_LINKED_SPAN\n          type: string\n      type: object\n    Links:\n      description: |-\n        A collection of links, which are references from this span to a span\n        in the same or different trace.\n      properties:\n        droppedLinksCount:\n          description: |-\n            The number of dropped links after the maximum size was enforced. If\n            this value is 0, then no links were dropped.\n          format: int32\n          type: integer\n        link:\n          description: A collection of links.\n          items:\n            $ref: \"#/components/schemas/Link\"\n          type: array\n      type: object\n    MessageEvent:\n      description: An event describing a message sent/received between Spans.\n      properties:\n        compressedSizeBytes:\n          description: \u003e-\n            The number of compressed bytes sent or received. If missing assumed\n            to\n\n            be the same size as uncompressed.\n          format: int64\n          type: string\n        id:\n          description: \u003e-\n            An identifier for the MessageEvent's message that can be used to\n            match\n\n            SENT and RECEIVED MessageEvents. It is recommended to be unique within\n\n            a Span.\n          format: int64\n          type: string\n        type:\n          description: |-\n            Type of MessageEvent. Indicates whether the message was sent or\n            received.\n          enum:\n            - TYPE_UNSPECIFIED\n            - SENT\n            - RECEIVED\n          type: string\n        uncompressedSizeBytes:\n          description: The number of uncompressed bytes sent or received.\n          format: int64\n          type: string\n      type: object\n    Module:\n      description: Binary module.\n      properties:\n        buildId:\n          $ref: \"#/components/schemas/TruncatableString\"\n        module:\n          $ref: \"#/components/schemas/TruncatableString\"\n      type: object\n    Span:\n      description: |-\n        A span represents a single operation within a trace. Spans can be\n        nested to form a trace tree. Often, a trace contains a root span\n        that describes the end-to-end latency, and one or more subspans for\n        its sub-operations. A trace can also contain multiple root spans,\n        or none at all. Spans do not need to be contiguous\u0026mdash;there may be\n        gaps or overlaps between spans in a trace.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/Attributes\"\n        childSpanCount:\n          description: \u003e-\n            Optional. The number of child spans that were generated while this\n            span\n\n            was active. If set, allows implementation to detect missing child spans.\n          format: int32\n          type: integer\n        displayName:\n          $ref: \"#/components/schemas/TruncatableString\"\n        endTime:\n          description: \u003e-\n            The end time of the span. On the client side, this is the time kept\n            by\n\n            the local machine where the span execution ends. On the server side, this\n\n            is the time when the server application handler stops running.\n          format: google-datetime\n          type: string\n        links:\n          $ref: \"#/components/schemas/Links\"\n        name:\n          description: \u003e-\n            The resource name of the span in the following format:\n\n                projects/[PROJECT_ID]/traces/[TRACE_ID]/spans/SPAN_ID is a unique identifier for a trace within a project;\n            it is a 32-character hexadecimal encoding of a 16-byte array.\n\n\n            [SPAN_ID] is a unique identifier for a span within a trace; it\n\n            is a 16-character hexadecimal encoding of an 8-byte array.\n          type: string\n        parentSpanId:\n          description: |-\n            The [SPAN_ID] of this span's parent span. If this is a root span,\n            then this field must be empty.\n          type: string\n        sameProcessAsParentSpan:\n          description: |-\n            Optional. Set this parameter to indicate whether this span is in\n            the same process as its parent. If you do not set this parameter,\n            Stackdriver Trace is unable to take advantage of this helpful\n            information.\n          type: boolean\n        spanId:\n          description: The [SPAN_ID] portion of the span's resource name.\n          type: string\n        spanKind:\n          description: \u003e-\n            Distinguishes between spans generated in a particular context. For\n            example,\n\n            two spans with the same name may be distinguished using `CLIENT` (caller)\n\n            and `SERVER` (callee) to identify an RPC call.\n          enum:\n            - SPAN_KIND_UNSPECIFIED\n            - INTERNAL\n            - SERVER\n            - CLIENT\n            - PRODUCER\n            - CONSUMER\n          type: string\n        stackTrace:\n          $ref: \"#/components/schemas/StackTrace\"\n        startTime:\n          description: \u003e-\n            The start time of the span. On the client side, this is the time\n            kept by\n\n            the local machine where the span execution starts. On the server side, this\n\n            is the time when the server's application handler starts running.\n          format: google-datetime\n          type: string\n        status:\n          $ref: \"#/components/schemas/Status\"\n        timeEvents:\n          $ref: \"#/components/schemas/TimeEvents\"\n      type: object\n    StackFrame:\n      description: Represents a single stack frame in a stack trace.\n      properties:\n        columnNumber:\n          description: |-\n            The column number where the function call appears, if available.\n            This is important in JavaScript because of its anonymous functions.\n          format: int64\n          type: string\n        fileName:\n          $ref: \"#/components/schemas/TruncatableString\"\n        functionName:\n          $ref: \"#/components/schemas/TruncatableString\"\n        lineNumber:\n          description: The line number in `file_name` where the function call appears.\n          format: int64\n          type: string\n        loadModule:\n          $ref: \"#/components/schemas/Module\"\n        originalFunctionName:\n          $ref: \"#/components/schemas/TruncatableString\"\n        sourceVersion:\n          $ref: \"#/components/schemas/TruncatableString\"\n      type: object\n    StackFrames:\n      description: A collection of stack frames, which can be truncated.\n      properties:\n        droppedFramesCount:\n          description: |-\n            The number of stack frames that were dropped because there\n            were too many stack frames.\n            If this value is 0, then no stack frames were dropped.\n          format: int32\n          type: integer\n        frame:\n          description: Stack frames in this call stack.\n          items:\n            $ref: \"#/components/schemas/StackFrame\"\n          type: array\n      type: object\n    StackTrace:\n      description: A call stack appearing in a trace.\n      properties:\n        stackFrames:\n          $ref: \"#/components/schemas/StackFrames\"\n        stackTraceHashId:\n          description: |-\n            The hash ID is used to conserve network bandwidth for duplicate\n            stack traces within a single trace.\n\n            Often multiple spans will have identical stack traces.\n            The first occurrence of a stack trace should contain both the\n            `stackFrame` content and a value in `stackTraceHashId`.\n\n            Subsequent spans within the same request can refer\n            to that stack trace by only setting `stackTraceHashId`.\n          format: int64\n          type: string\n      type: object\n    Status:\n      description: \u003e-\n        The `Status` type defines a logical error model that is suitable for\n\n        different programming environments, including REST APIs and RPC APIs. It is\n\n        used by [gRPC](https://github.com/grpc). Each `Status` message contains\n\n        three pieces of data: error code, error message, and error details.\n\n\n        You can find out more about this error model and how to work with it in the\n\n        [API Design Guide](https://cloud.google.com/apis/design/errors).\n      properties:\n        code:\n          description: The status code, which should be an enum value of google.rpc.Code.\n          format: int32\n          type: integer\n        details:\n          description: \u003e-\n            A list of messages that carry the error details.  There is a common\n            set of\n\n            message types for APIs to use.\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type URL.\n            type: object\n          type: array\n        message:\n          description: |-\n            A developer-facing error message, which should be in English. Any\n            user-facing error message should be localized and sent in the\n            google.rpc.Status.details field, or localized by the client.\n          type: string\n      type: object\n    TimeEvent:\n      description: A time-stamped annotation or message event in the Span.\n      properties:\n        annotation:\n          $ref: \"#/components/schemas/Annotation\"\n        messageEvent:\n          $ref: \"#/components/schemas/MessageEvent\"\n        time:\n          description: The timestamp indicating the time the event occurred.\n          format: google-datetime\n          type: string\n      type: object\n    TimeEvents:\n      description: |-\n        A collection of `TimeEvent`s. A `TimeEvent` is a time-stamped annotation\n        on the span, consisting of either user-supplied key:value pairs, or\n        details of a message sent/received between Spans.\n      properties:\n        droppedAnnotationsCount:\n          description: |-\n            The number of dropped annotations in all the included time events.\n            If the value is 0, then no annotations were dropped.\n          format: int32\n          type: integer\n        droppedMessageEventsCount:\n          description: \u003e-\n            The number of dropped message events in all the included time\n            events.\n\n            If the value is 0, then no message events were dropped.\n          format: int32\n          type: integer\n        timeEvent:\n          description: A collection of `TimeEvent`s.\n          items:\n            $ref: \"#/components/schemas/TimeEvent\"\n          type: array\n      type: object\n    TruncatableString:\n      description: Represents a string that might be shortened to a specified length.\n      properties:\n        truncatedByteCount:\n          description: |-\n            The number of bytes removed from the original string. If this\n            value is 0, then the string was not shortened.\n          format: int32\n          type: integer\n        value:\n          description: |-\n            The shortened string. For example, if the original string is 500\n            bytes long and the limit of the string is 128 bytes, then\n            `value` contains the first 128 bytes of the 500-byte string.\n\n            Truncation always happens on a UTF8 character boundary. If there\n            are multi-byte characters in the string, then the length of the\n            shortened string might be less than the size limit.\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/googleapis.com-cloudtrace-v2-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/googleapis.com-cloudtrace-v2-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v2/{name}\": post: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}