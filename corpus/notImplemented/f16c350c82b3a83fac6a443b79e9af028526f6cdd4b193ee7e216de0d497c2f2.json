{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/codingsoo/REST_Go"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "services/user-management/openapi.yaml",
			"byteSize": 24271,
			"content": "openapi: 3.0.1\ninfo:\n  title: Api Documentation\n  description: Api Documentation\n  termsOfService: urn:tos\n  contact: {}\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0\n  version: \"1.0\"\nservers:\n- url: http://localhost:50115/\ntags:\n- name: basic-error-controller\n  description: Basic Error Controller\n- name: login-rest-controller\n  description: Login Rest Controller\n- name: rbac-rest-controller\n  description: RBAC Rest Controller\n- name: register-rest-controller\n  description: Register Rest Controller\n- name: user-rest-controller\n  description: User Rest Controller\npaths:\n  /error:\n    get:\n      tags:\n      - basic-error-controller\n      summary: error\n      operationId: errorUsingGET\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n                  properties: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n    put:\n      tags:\n      - basic-error-controller\n      summary: error\n      operationId: errorUsingPUT\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n                  properties: {}\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n    post:\n      tags:\n      - basic-error-controller\n      summary: error\n      operationId: errorUsingPOST\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n                  properties: {}\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n    delete:\n      tags:\n      - basic-error-controller\n      summary: error\n      operationId: errorUsingDELETE\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n                  properties: {}\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      deprecated: false\n    options:\n      tags:\n      - basic-error-controller\n      summary: error\n      operationId: errorUsingOPTIONS\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n                  properties: {}\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      deprecated: false\n    head:\n      tags:\n      - basic-error-controller\n      summary: error\n      operationId: errorUsingHEAD\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n                  properties: {}\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      deprecated: false\n    patch:\n      tags:\n      - basic-error-controller\n      summary: error\n      operationId: errorUsingPATCH\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n                  properties: {}\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      deprecated: false\n  /login:\n    post:\n      tags:\n      - login-rest-controller\n      summary: login\n      operationId: loginUsingPOST\n      requestBody:\n        description: loginRequestDTO\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LoginRequestDTO'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/UserDTO'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: loginRequestDTO\n  /users:\n    get:\n      tags:\n      - user-rest-controller\n      summary: getUserPresentationList\n      operationId: getUserPresentationListUsingGET\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/UserListDTO'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n    post:\n      tags:\n      - user-rest-controller\n      summary: createUser\n      operationId: createUserUsingPOST\n      requestBody:\n        description: createOrUpdateUserDTO\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateOrUpdateUserDTO'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/UserDTO'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: createOrUpdateUserDTO\n  /users/rbac/permissions:\n    get:\n      tags:\n      - rbac-rest-controller\n      summary: getPermissionPresentationList\n      operationId: getPermissionPresentationListUsingGET\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PermissionDTO'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n  /users/rbac/roles:\n    get:\n      tags:\n      - rbac-rest-controller\n      summary: getRolePresentationList\n      operationId: getRolePresentationListUsingGET\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RoleDTO'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n    post:\n      tags:\n      - rbac-rest-controller\n      summary: createRole\n      operationId: createRoleUsingPOST\n      requestBody:\n        description: role\n        content:\n          application/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RoleDTO'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: role\n  /users/rbac/roles/{roleId}:\n    get:\n      tags:\n      - rbac-rest-controller\n      summary: getRoleById\n      operationId: getRoleByIdUsingGET\n      parameters:\n      - name: roleId\n        in: path\n        description: roleId\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RoleDTO'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n    delete:\n      tags:\n      - rbac-rest-controller\n      summary: deleteRoleById\n      operationId: deleteRoleByIdUsingDELETE\n      parameters:\n      - name: roleId\n        in: path\n        description: roleId\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: object\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      deprecated: false\n  /users/rbac/roles/{roleId}/permissions/{permissionKey}:\n    post:\n      tags:\n      - rbac-rest-controller\n      summary: addPermissionOnRole\n      operationId: addPermissionOnRoleUsingPOST\n      parameters:\n      - name: permissionKey\n        in: path\n        description: permissionKey\n        required: true\n        schema:\n          type: string\n        example: abc\n      - name: roleId\n        in: path\n        description: roleId\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RoleDTO'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n    delete:\n      tags:\n      - rbac-rest-controller\n      summary: removePermissionOnRole\n      operationId: removePermissionOnRoleUsingDELETE\n      parameters:\n      - name: permissionKey\n        in: path\n        description: permissionKey\n        required: true\n        schema:\n          type: string\n        example: abc\n      - name: roleId\n        in: path\n        description: roleId\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RoleDTO'\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      deprecated: false\n  /users/register:\n    post:\n      tags:\n      - register-rest-controller\n      summary: registerNewUserAccount\n      operationId: registerNewUserAccountUsingPOST\n      requestBody:\n        description: registerUserAccountDTO\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterUserAccountDTO'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/UserDTO'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: registerUserAccountDTO\n  /users/{id}:\n    get:\n      tags:\n      - user-rest-controller\n      summary: getUserById\n      operationId: getUserByIdUsingGET\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/UserDTO'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n    put:\n      tags:\n      - user-rest-controller\n      summary: updateUser\n      operationId: updateUserUsingPUT\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: updateUserDTO\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateOrUpdateUserDTO'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/UserDTO'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: updateUserDTO\n    delete:\n      tags:\n      - user-rest-controller\n      summary: deleteById\n      operationId: deleteByIdUsingDELETE\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: object\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      deprecated: false\n  /users/{id}/roles/{roleId}:\n    post:\n      tags:\n      - user-rest-controller\n      summary: addRole\n      operationId: addRoleUsingPOST\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      - name: roleId\n        in: path\n        description: roleId\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/UserDTO'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n    delete:\n      tags:\n      - user-rest-controller\n      summary: removeRole\n      operationId: removeRoleUsingDELETE\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      - name: roleId\n        in: path\n        description: roleId\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/UserDTO'\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      deprecated: false\ncomponents:\n  schemas:\n    AddressDTO:\n      title: AddressDTO\n      type: object\n      properties:\n        address:\n          type: string\n        address2:\n          type: string\n        city:\n          type: string\n        country:\n          type: string\n        zipCode:\n          type: string\n    ContactDTO:\n      title: ContactDTO\n      type: object\n      properties:\n        contactNote:\n          type: string\n        email:\n          type: string\n        facebook:\n          type: string\n        linkedin:\n          type: string\n        phone:\n          type: string\n        skype:\n          type: string\n        website:\n          type: string\n    CreateOrUpdateUserDTO:\n      title: CreateOrUpdateUserDTO\n      type: object\n      properties:\n        address:\n          type: string\n        address2:\n          type: string\n        birthDate:\n          type: string\n          format: date\n        city:\n          type: string\n        contactNote:\n          type: string\n        country:\n          type: string\n        email:\n          type: string\n        enabled:\n          type: boolean\n        facebook:\n          type: string\n        gender:\n          type: string\n        linkedin:\n          type: string\n        mobile:\n          type: string\n        name:\n          type: string\n        note:\n          type: string\n        password:\n          type: string\n        secured:\n          type: boolean\n        skype:\n          type: string\n        surname:\n          type: string\n        username:\n          type: string\n        website:\n          type: string\n        zipCode:\n          type: string\n    LoginRequestDTO:\n      title: LoginRequestDTO\n      type: object\n      properties:\n        password:\n          type: string\n        username:\n          type: string\n    ModelAndView:\n      title: ModelAndView\n      type: object\n      properties:\n        empty:\n          type: boolean\n        model:\n          type: object\n          properties: {}\n        modelMap:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n        reference:\n          type: boolean\n        status:\n          type: string\n          enum:\n          - 100 CONTINUE\n          - 101 SWITCHING_PROTOCOLS\n          - 102 PROCESSING\n          - 103 CHECKPOINT\n          - 200 OK\n          - 201 CREATED\n          - 202 ACCEPTED\n          - 203 NON_AUTHORITATIVE_INFORMATION\n          - 204 NO_CONTENT\n          - 205 RESET_CONTENT\n          - 206 PARTIAL_CONTENT\n          - 207 MULTI_STATUS\n          - 208 ALREADY_REPORTED\n          - 226 IM_USED\n          - 300 MULTIPLE_CHOICES\n          - 301 MOVED_PERMANENTLY\n          - 302 FOUND\n          - 302 MOVED_TEMPORARILY\n          - 303 SEE_OTHER\n          - 304 NOT_MODIFIED\n          - 305 USE_PROXY\n          - 307 TEMPORARY_REDIRECT\n          - 308 PERMANENT_REDIRECT\n          - 400 BAD_REQUEST\n          - 401 UNAUTHORIZED\n          - 402 PAYMENT_REQUIRED\n          - 403 FORBIDDEN\n          - 404 NOT_FOUND\n          - 405 METHOD_NOT_ALLOWED\n          - 406 NOT_ACCEPTABLE\n          - 407 PROXY_AUTHENTICATION_REQUIRED\n          - 408 REQUEST_TIMEOUT\n          - 409 CONFLICT\n          - 410 GONE\n          - 411 LENGTH_REQUIRED\n          - 412 PRECONDITION_FAILED\n          - 413 PAYLOAD_TOO_LARGE\n          - 413 REQUEST_ENTITY_TOO_LARGE\n          - 414 URI_TOO_LONG\n          - 414 REQUEST_URI_TOO_LONG\n          - 415 UNSUPPORTED_MEDIA_TYPE\n          - 416 REQUESTED_RANGE_NOT_SATISFIABLE\n          - 417 EXPECTATION_FAILED\n          - 418 I_AM_A_TEAPOT\n          - 419 INSUFFICIENT_SPACE_ON_RESOURCE\n          - 420 METHOD_FAILURE\n          - 421 DESTINATION_LOCKED\n          - 422 UNPROCESSABLE_ENTITY\n          - 423 LOCKED\n          - 424 FAILED_DEPENDENCY\n          - 425 TOO_EARLY\n          - 426 UPGRADE_REQUIRED\n          - 428 PRECONDITION_REQUIRED\n          - 429 TOO_MANY_REQUESTS\n          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE\n          - 451 UNAVAILABLE_FOR_LEGAL_REASONS\n          - 500 INTERNAL_SERVER_ERROR\n          - 501 NOT_IMPLEMENTED\n          - 502 BAD_GATEWAY\n          - 503 SERVICE_UNAVAILABLE\n          - 504 GATEWAY_TIMEOUT\n          - 505 HTTP_VERSION_NOT_SUPPORTED\n          - 506 VARIANT_ALSO_NEGOTIATES\n          - 507 INSUFFICIENT_STORAGE\n          - 508 LOOP_DETECTED\n          - 509 BANDWIDTH_LIMIT_EXCEEDED\n          - 510 NOT_EXTENDED\n          - 511 NETWORK_AUTHENTICATION_REQUIRED\n        view:\n          $ref: '#/components/schemas/View'\n        viewName:\n          type: string\n    PermissionDTO:\n      title: PermissionDTO\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        permission:\n          type: string\n    RegisterUserAccountDTO:\n      title: RegisterUserAccountDTO\n      type: object\n      properties:\n        email:\n          type: string\n        gender:\n          type: string\n        name:\n          type: string\n        password:\n          type: string\n        surname:\n          type: string\n        username:\n          type: string\n    RoleDTO:\n      title: RoleDTO\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        permissions:\n          type: array\n          items:\n            $ref: '#/components/schemas/PermissionDTO'\n        role:\n          type: string\n    UserDTO:\n      title: UserDTO\n      type: object\n      properties:\n        addressDTO:\n          $ref: '#/components/schemas/AddressDTO'\n        birthDate:\n          type: string\n          format: date\n        contactDTO:\n          $ref: '#/components/schemas/ContactDTO'\n        creationDt:\n          type: string\n          format: date-time\n        enabled:\n          type: boolean\n        gender:\n          type: string\n        id:\n          type: integer\n          format: int64\n        loginDt:\n          type: string\n          format: date-time\n        name:\n          type: string\n        note:\n          type: string\n        permissions:\n          type: array\n          items:\n            type: string\n        roles:\n          type: array\n          items:\n            type: string\n        secured:\n          type: boolean\n        surname:\n          type: string\n        updatedDt:\n          type: string\n          format: date-time\n        username:\n          type: string\n    UserListDTO:\n      title: UserListDTO\n      type: object\n      properties:\n        userList:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserDTO'\n    View:\n      title: View\n      type: object\n      properties:\n        contentType:\n          type: string\n",
			"canonicalURL": "/github.com/codingsoo/REST_Go@ed67007a3d9cc852de4c47d395991f602a381c67/-/blob/services/user-management/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/codingsoo/REST_Go/blob/ed67007a3d9cc852de4c47d395991f602a381c67/services/user-management/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/users/rbac/permissions\": get: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}