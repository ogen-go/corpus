{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/phenoscape/owlery"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "src/main/resources/docs/swagger.yaml",
			"byteSize": 19936,
			"content": "openapi: 3.0.0\ninfo:\n  description: 'Owlery provides a web API for an [OWL API](http://owlapi.sourceforge.net)-based\n    reasoner containing a configurable set of ontologies (a \"knowledgebase\"). '\n  version: 1.0.0\n  title: Owlery API\n  contact:\n    email: balhoff@renci.org\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\nservers:\n  - url: \"{{basePathToReplace}}\"\ntags:\n  - name: Knowledgebases\n  - name: DL queries\n  - name: SPARQL\npaths:\n  \"/kbs\":\n    get:\n      tags:\n        - Knowledgebases\n      summary: List available knowledgebases\n      description: List names of available knowledgebases in this instance of Owlery\n      responses:\n        '200':\n          description: knowledgebase names\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    - phenoscape\n                    - obo-ontologies\n                    - monarch\n  \"/kbs/{kb}\":\n    get:\n      tags:\n        - Knowledgebases\n      summary: Knowledgebase\n      description: Display Knowledgebase information and status\n      parameters:\n        - name: kb\n          in: path\n          description: the knowledgebase name\n          required: true\n          schema:\n            type: string\n            example: uberon\n      responses:\n        '200':\n          description: KB info\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    label: uberon\n                    isConsistent: true\n                    logicalAxiomsCount: 43938\n  \"/kbs/{kb}/subclasses\":\n    get:\n      tags:\n        - DL queries\n      summary: Subclasses\n      description: Get subclasses of a named class or class expression\n      parameters:\n        - name: kb\n          in: path\n          description: label for a knowledgebase in this Owlery\n          required: true\n          schema:\n            type: string\n            example: uberon\n        - name: object\n          in: query\n          description: Manchester-syntax OWL class expression\n          required: true\n          schema:\n            type: string\n          examples:\n            named:\n              value: \"\u003chttp://purl.obolibrary.org/obo/UBERON_0002101\u003e\"\n              summary: a named class with absolute IRI\n            prefixed:\n              value: obo:UBERON_02101\n              summary: a named class using a prefix definition\n            expression:\n              value: 'part_of: some obo:UBERON_0002101'\n              summary: an anonymous expression, using prefix definitions\n        - name: prefixes\n          in: query\n          description: JSON format prefix map, used to expand prefixes in the 'object'\n            expression\n          required: false\n          schema:\n            type: string\n            format: JSON\n            example: '{\"obo\": \"http://purl.obolibrary.org/obo/\", \"part_of\": \"http://purl.obolibrary.org/obo/BFO_0000050\"}'\n        - name: direct\n          in: query\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - name: includeEquivalent\n          in: query\n          description: Also query for equivalent classes\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - name: includeNothing\n          in: query\n          description: owl:Nothing is filtered by default because it is by definition\n            a subclass of everything.\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - name: includeDeprecated\n          in: query\n          description: Include `owl:deprecated` terms in the result\n          required: false\n          schema:\n            type: boolean\n            default: true\n      responses:\n        '200':\n          description: subclasses\n          content:\n            application/json:\n              examples:\n                named class:\n                  value:\n                    \"@id\": http://purl.obolibrary.org/obo/UBERON_0002101\n                    superClassOf:\n                      - http://purl.obolibrary.org/obo/UBERON_0002103\n                      - http://purl.obolibrary.org/obo/XAO_0003027\n                      - http://purl.obolibrary.org/obo/UBERON_0002102\n                      - http://purl.obolibrary.org/obo/EMAPA_16405\n                anonymous expression:\n                  value:\n                    \"@id\": _:b0\n                    value: ObjectSomeValuesFrom(\u003chttp://purl.obolibrary.org/obo/BFO_0000050\u003e\n                      \u003chttp://purl.obolibrary.org/obo/UBERON_0002101\u003e)\n                    superClassOf:\n                      - http://purl.obolibrary.org/obo/UBERON_0002103\n                      - http://purl.obolibrary.org/obo/XAO_0003027\n                      - http://purl.obolibrary.org/obo/UBERON_0002102\n                      - http://purl.obolibrary.org/obo/EMAPA_16405\n  \"/kbs/{kb}/superclasses\":\n    get:\n      tags:\n        - DL queries\n      summary: Superclasses\n      description: Get superclasses of a named class or class expression\n      parameters:\n        - name: kb\n          in: path\n          description: label for a knowledgebase in this Owlery\n          required: true\n          schema:\n            type: string\n            example: uberon\n        - name: object\n          in: query\n          description: Manchester-syntax OWL class expression\n          required: true\n          schema:\n            type: string\n          examples:\n            named:\n              value: \"\u003chttp://purl.obolibrary.org/obo/UBERON_0002101\u003e\"\n              summary: a named class with absolute IRI\n            prefixed:\n              value: obo:UBERON_02101\n              summary: a named class using a prefix definition\n            expression:\n              value: 'part_of: some obo:UBERON_0002101'\n              summary: an anonymous expression, using prefix definitions\n        - name: prefixes\n          in: query\n          description: JSON format prefix map, used to expand prefixes in the 'object'\n            expression\n          required: false\n          schema:\n            type: string\n            format: JSON\n            example: '{\"obo\": \"http://purl.obolibrary.org/obo/\", \"part_of\": \"http://purl.obolibrary.org/obo/BFO_0000050\"}'\n        - name: direct\n          in: query\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - name: includeEquivalent\n          in: query\n          description: Also query for equivalent classes\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - name: includeThing\n          in: query\n          description: owl:Thing is filtered by default because it is by definition\n            a superclass of everything.\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - name: includeDeprecated\n          in: query\n          description: Include `owl:deprecated` terms in the result\n          required: false\n          schema:\n            type: boolean\n            default: true\n      responses:\n        '200':\n          description: superclasses\n          content:\n            application/json:\n              examples:\n                named class:\n                  value:\n                    \"@id\": http://purl.obolibrary.org/obo/UBERON_0002101\n                    subClassOf:\n                      - http://purl.obolibrary.org/obo/UBERON_0002103\n                      - http://purl.obolibrary.org/obo/XAO_0003027\n                      - http://purl.obolibrary.org/obo/UBERON_0002102\n                      - http://purl.obolibrary.org/obo/EMAPA_16405\n                anonymous expression:\n                  value:\n                    \"@id\": _:b0\n                    value: ObjectSomeValuesFrom(\u003chttp://purl.obolibrary.org/obo/BFO_0000050\u003e\n                      \u003chttp://purl.obolibrary.org/obo/UBERON_0002101\u003e)\n                    subClassOf:\n                      - http://purl.obolibrary.org/obo/UBERON_0002103\n                      - http://purl.obolibrary.org/obo/XAO_0003027\n                      - http://purl.obolibrary.org/obo/UBERON_0002102\n                      - http://purl.obolibrary.org/obo/EMAPA_16405\n  \"/kbs/{kb}/equivalent\":\n    get:\n      tags:\n        - DL queries\n      summary: Equivalent classes\n      description: Get equivalent classes of a named class or class expression\n      parameters:\n        - name: kb\n          in: path\n          description: label for a knowledgebase in this Owlery\n          required: true\n          schema:\n            type: string\n            example: uberon\n        - name: object\n          in: query\n          description: Manchester-syntax OWL class expression\n          required: true\n          schema:\n            type: string\n          examples:\n            named:\n              value: \"\u003chttp://purl.obolibrary.org/obo/UBERON_0002101\u003e\"\n              summary: a named class with absolute IRI\n            prefixed:\n              value: obo:UBERON_02101\n              summary: a named class using a prefix definition\n            expression:\n              value: 'part_of: some obo:UBERON_0002101'\n              summary: an anonymous expression, using prefix definitions\n        - name: prefixes\n          in: query\n          description: JSON format prefix map, used to expand prefixes in the 'object'\n            expression\n          required: false\n          schema:\n            type: string\n            format: JSON\n            example: '{\"obo\": \"http://purl.obolibrary.org/obo/\", \"part_of\": \"http://purl.obolibrary.org/obo/BFO_0000050\"}'\n        - name: direct\n          in: query\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - name: includeDeprecated\n          in: query\n          description: Include `owl:deprecated` terms in the result\n          required: false\n          schema:\n            type: boolean\n            default: true\n      responses:\n        '200':\n          description: equivalent classes\n          content:\n            application/json:\n              examples:\n                named class:\n                  value:\n                    \"@id\": http://purl.obolibrary.org/obo/UBERON_0002101\n                    equivalentClass:\n                      - http://purl.obolibrary.org/obo/UBERON_0002103\n                      - http://purl.obolibrary.org/obo/XAO_0003027\n                      - http://purl.obolibrary.org/obo/UBERON_0002102\n                      - http://purl.obolibrary.org/obo/EMAPA_16405\n                anonymous expression:\n                  value:\n                    \"@id\": _:b0\n                    value: ObjectSomeValuesFrom(\u003chttp://purl.obolibrary.org/obo/BFO_0000050\u003e\n                      \u003chttp://purl.obolibrary.org/obo/UBERON_0002101\u003e)\n                    equivalentClass:\n                      - http://purl.obolibrary.org/obo/UBERON_0002103\n                      - http://purl.obolibrary.org/obo/XAO_0003027\n                      - http://purl.obolibrary.org/obo/UBERON_0002102\n                      - http://purl.obolibrary.org/obo/EMAPA_16405\n  \"/kbs/{kb}/satisfiable\":\n    get:\n      tags:\n        - DL queries\n      summary: Satisfiability\n      description: Returns whether the given named class or expression is satisfiable\n      parameters:\n        - name: kb\n          in: path\n          description: label for a knowledgebase in this Owlery\n          required: true\n          schema:\n            type: string\n            example: uberon\n        - name: object\n          in: query\n          description: Manchester-syntax OWL class expression\n          required: true\n          schema:\n            type: string\n          examples:\n            named:\n              value: \"\u003chttp://purl.obolibrary.org/obo/UBERON_0002101\u003e\"\n              summary: a named class with absolute IRI\n            prefixed:\n              value: obo:UBERON_02101\n              summary: a named class using a prefix definition\n            expression:\n              value: 'part_of: some obo:UBERON_0002101'\n              summary: an anonymous expression, using prefix definitions\n        - name: prefixes\n          in: query\n          description: JSON format prefix map, used to expand prefixes in the 'object'\n            expression\n          required: false\n          schema:\n            type: string\n            format: JSON\n            example: '{\"obo\": \"http://purl.obolibrary.org/obo/\", \"part_of\": \"http://purl.obolibrary.org/obo/BFO_0000050\"}'\n      responses:\n        '200':\n          description: satisfiability\n          content:\n            application/json:\n              examples:\n                named class:\n                  value:\n                    \"@id\": http://purl.obolibrary.org/obo/UBERON_0002101\n                    isSatisfiable: true\n                anonymous expression:\n                  value:\n                    \"@id\": _:b0\n                    value: ObjectSomeValuesFrom(\u003chttp://purl.obolibrary.org/obo/BFO_0000050\u003e\n                      \u003chttp://purl.obolibrary.org/obo/UBERON_0002101\u003e)\n                    isSatisfiable: true\n  \"/kbs/{kb}/instances\":\n    get:\n      tags:\n        - DL queries\n      summary: Instances\n      description: Get instances of a named class or class expression\n      parameters:\n        - name: kb\n          in: path\n          description: label for a knowledgebase in this Owlery\n          required: true\n          schema:\n            type: string\n            example: uberon\n        - name: object\n          in: query\n          description: Manchester-syntax OWL class expression\n          required: true\n          schema:\n            type: string\n        - name: prefixes\n          in: query\n          description: JSON format prefix map\n          required: false\n          schema:\n            type: string\n            format: JSON\n        - name: direct\n          in: query\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - name: includeDeprecated\n          in: query\n          description: Include `owl:deprecated` terms in the result\n          required: false\n          schema:\n            type: boolean\n            default: true\n      responses:\n        '200':\n          description: instances\n          content:\n            application/json:\n              examples:\n                named class:\n                  value:\n                    \"@id\": http://purl.obolibrary.org/obo/UBERON_0002101\n                    hasInstance:\n                      - http://example.org/obo/UBERON_0002101#1\n                      - http://example.org/obo/UBERON_0002101#2\n  \"/kbs/{kb}/types\":\n    get:\n      tags:\n        - DL queries\n      summary: Types\n      description: Get types of a named individual\n      parameters:\n        - name: kb\n          in: path\n          description: label for a knowledgebase in this Owlery\n          required: true\n          schema:\n            type: string\n        - name: object\n          in: query\n          description: Individual IRI\n          required: true\n          schema:\n            type: string\n            example: \"\u003chttp://example.org/person/1234\u003e\"\n        - name: prefixes\n          in: query\n          description: JSON format prefix map\n          required: false\n          schema:\n            type: string\n            format: JSON\n        - name: direct\n          in: query\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - name: includeThing\n          in: query\n          description: owl:Thing is filtered by default because it is by definition\n            a type of everything.\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - name: includeDeprecated\n          in: query\n          description: Include `owl:deprecated` terms in the result\n          required: false\n          schema:\n            type: boolean\n            default: true\n      responses:\n        '200':\n          description: types\n          content:\n            application/json:\n              schema:\n                example:\n                  \"@id\": http://example.org/person/1234\n                  \"@type\":\n                    - http://www.w3.org/2002/07/owl#Thing\n  \"/kbs/{kb}/sparql\":\n    get:\n      tags:\n        - SPARQL\n      summary: Perform SPARQL query encoded in URL parameter\n      description: Perform SPARQL query using Owlet-style embedded class expression.\n        This is not a complete SPARQL endpoint. It is for using Owlery as a federated\n        query endpoint for a single Owlet triple pattern.\n      parameters:\n        - name: kb\n          in: path\n          description: label for a knowledgebase in this Owlery\n          required: true\n          schema:\n            type: string\n        - name: query\n          in: query\n          description: SPARQL query\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: SPARQL results\n          content:\n            application/sparql-results+xml: {}\n    post:\n      tags:\n        - SPARQL\n      summary: Perform SPARQL query contained in request body\n      description: Perform SPARQL query using Owlet-style embedded class expression.\n        This is not a complete SPARQL endpoint. It is for using Owlery as a federated\n        query endpoint for a single Owlet triple pattern.\n      parameters:\n        - name: kb\n          in: path\n          description: label for a knowledgebase in this Owlery\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/sparql-query:\n            schema:\n              type: string\n              format: SPARQL query\n              example: SELECT ?x WHERE { ?x a \"blah\"}\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                query:\n                  type: string\n                  format: SPARQL query\n              required:\n                - query\n      responses:\n        '200':\n          description: SPARQL results\n  \"/kbs/{kb}/expand\":\n    get:\n      tags:\n        - SPARQL\n      summary: Expand SPARQL query encoded in URL parameter\n      description: Expand a SPARQL query, transforming Owlet-style embedded class\n        expressions into `FILTER`s\n      parameters:\n        - name: kb\n          in: path\n          description: label for a knowledgebase in this Owlery\n          required: true\n          schema:\n            type: string\n        - name: query\n          in: query\n          description: SPARQL query\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Expanded SPARQL query\n          content:\n            application/sparql-query: {}\n    post:\n      tags:\n        - SPARQL\n      summary: Expand SPARQL query contained in request body\n      description: Expand a SPARQL query, transforming Owlet-style embedded class\n        expressions into `FILTER`s\n      parameters:\n        - name: kb\n          in: path\n          description: label for a knowledgebase in this Owlery\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/sparql-query:\n            schema:\n              type: string\n              format: SPARQL query\n              example: SELECT ?x WHERE { ?x a \"blah\"}\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                query:\n                  type: string\n                  format: SPARQL query\n              required:\n                - query\n      responses:\n        '200':\n          description: SPARQL results\ncomponents:\n  schemas: {}\n",
			"canonicalURL": "/github.com/phenoscape/owlery@89e2717f30546dafd61d4c789d3458fcc53a90b5/-/blob/src/main/resources/docs/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/phenoscape/owlery/blob/89e2717f30546dafd61d4c789d3458fcc53a90b5/src/main/resources/docs/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/kbs/{kb}\": get: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema",
		"unsupported content types"
	]
}