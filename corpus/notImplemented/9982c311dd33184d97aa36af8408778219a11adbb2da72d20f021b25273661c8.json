{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/readmeio/oas"
		},
		"file": {
			"name": "complex-nesting.json",
			"size": 0,
			"path": "__tests__/__datasets__/complex-nesting.json",
			"byteSize": 3615,
			"content": "{\n  \"openapi\": \"3.0.3\",\n  \"info\": {\n    \"title\": \"Responses with various schema formats\",\n    \"description\": \"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#schema-object\",\n    \"version\": \"1.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://httpbin.org\"\n    }\n  ],\n  \"paths\": {\n    \"/multischema/of-everything\": {\n      \"post\": {\n        \"summary\": \"Multischema of Everything\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MultischemaOfEverything\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MultischemaOfEverything\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"MultischemaOfEverything\": {\n        \"oneOf\": [\n          {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/ArrayOfObjectsOfObjectsAndArrays\"\n              },\n              {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"objEverything\": {\n                    \"$ref\": \"#/components/schemas/ObjectOfEverything\"\n                  },\n                  \"flatObj\": {\n                    \"$ref\": \"#/components/schemas/FlatObject\"\n                  }\n                }\n              }\n            ]\n          },\n          {\n            \"$ref\": \"#/components/schemas/ArrayOfPrimitives\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ArrayOfFlatObjects\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/FlatObject\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ObjectOfEverything\"\n          }\n        ]\n      },\n      \"ArrayOfObjectsOfObjectsAndArrays\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/ObjectOfObjectsAndArrays\"\n        }\n      },\n      \"ObjectOfEverything\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"ObjectOfObjectsAndArrays\": {\n            \"$ref\": \"#/components/schemas/ObjectOfObjectsAndArrays\"\n          },\n          \"ArrayOfObjectsOfObjectsAndArrays\": {\n            \"$ref\": \"#/components/schemas/ArrayOfObjectsOfObjectsAndArrays\"\n          },\n          \"StringPrimitive\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ArrayOfPrimitives\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"string\"\n        }\n      },\n      \"ArrayOfFlatObjects\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/FlatObject\"\n        }\n      },\n      \"ObjectOfObjectsAndArrays\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"ObjectPropInArray\": {\n            \"$ref\": \"#/components/schemas/FlatObject\"\n          },\n          \"PrimitiveArrayPropInArray\": {\n            \"$ref\": \"#/components/schemas/ArrayOfPrimitives\"\n          },\n          \"ObjectArrayPropInArray\": {\n            \"$ref\": \"#/components/schemas/ArrayOfFlatObjects\"\n          },\n          \"StringPrimitive\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"FlatObject\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"StringProp\": {\n            \"type\": \"string\"\n          },\n          \"BoolProp\": {\n            \"type\": \"boolean\"\n          },\n          \"NumProp\": {\n            \"type\": \"number\"\n          }\n        }\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/readmeio/oas@e398cd99d6ab60f08b65b94de6d2c9a4c9406085/-/blob/__tests__/__datasets__/complex-nesting.json",
			"externalURLs": [
				{
					"url": "https://github.com/readmeio/oas/blob/e398cd99d6ab60f08b65b94de6d2c9a4c9406085/__tests__/__datasets__/complex-nesting.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/multischema/of-everything\": post: requestBody: contents: application/json: generate schema: oneOf: oneOf MultischemaOfEverything: variant MultischemaOfEverything0: no unique fields, unable to parse without discriminator: discriminator inference not implemented",
	"NotImplemented": [
		"discriminator inference"
	]
}