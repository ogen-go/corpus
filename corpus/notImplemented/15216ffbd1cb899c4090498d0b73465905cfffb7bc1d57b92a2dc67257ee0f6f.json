{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/clarkmcc/go-hubspot"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "generated/tags/api/openapi.yaml",
			"byteSize": 21570,
			"content": "openapi: 3.0.1\ninfo:\n  description: '\"Use these endpoints for interacting with Blog Posts, Blog Authors,\n    and Blog Tags\"'\n  title: Blog Post endpoints\n  version: v3\nservers:\n- url: https://api.hubapi.com/\ntags:\n- name: Tag\npaths:\n  /cms/v3/blogs/tags:\n    get:\n      description: |\n        Get the list of blog tags. Supports paging and filtering. This method would be useful for an integration that examined these models and used an external service to suggest edits.\n      operationId: get-/cms/v3/blogs/tags_getPage\n      parameters:\n      - description: Only return Blog Tags created at exactly the specified time.\n        explode: true\n        in: query\n        name: createdAt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: Only return Blog Tags created after the specified time.\n        explode: true\n        in: query\n        name: createdAfter\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: Only return Blog Tags created before the specified time.\n        explode: true\n        in: query\n        name: createdBefore\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: Only return Blog Tags last updated at exactly the specified time.\n        explode: true\n        in: query\n        name: updatedAt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: Only return Blog Tags last updated after the specified time.\n        explode: true\n        in: query\n        name: updatedAfter\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: Only return Blog Tags last updated before the specified time.\n        explode: true\n        in: query\n        name: updatedBefore\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: Specifies which fields to use for sorting results. Valid fields\n          are `name`, `createdAt`, `updatedAt`, `createdBy`, `updatedBy`. `createdAt`\n          will be used by default.\n        explode: true\n        in: query\n        name: sort\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: The cursor token value to get the next set of results. You can\n          get this from the `paging.next.after` JSON property of a paged response\n          containing more results.\n        explode: true\n        in: query\n        name: after\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The maximum number of results to return. Default is 100.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: Specifies whether to return archived Blog Tags. Defaults to `false`.\n        explode: true\n        in: query\n        name: archived\n        required: false\n        schema:\n          type: boolean\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CollectionResponseWithTotalTagForwardPaging'\n          description: successful operation\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - hapikey: []\n      - oauth2_legacy:\n        - content\n      summary: Get all Blog Tags\n      tags:\n      - Tag\n    post:\n      description: Create a new Blog Tag.\n      operationId: post-/cms/v3/blogs/tags_create\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Tag'\n        description: The JSON representation of a new Blog Tag.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n          description: successful operation\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - hapikey: []\n      - oauth2_legacy:\n        - content\n      summary: Create a new Blog Tag\n      tags:\n      - Tag\n  /cms/v3/blogs/tags/batch/archive:\n    post:\n      description: |-\n        Delete the Blog Tag objects identified in the request body.\n        Note: This is not the same as the in-app `archive` function.\n      operationId: post-/cms/v3/blogs/tags/batch/archive_archiveBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchInputString'\n        description: The JSON array of Blog Tag ids.\n        required: true\n      responses:\n        \"204\":\n          content: {}\n          description: No content\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - hapikey: []\n      - oauth2_legacy:\n        - content\n      summary: Archive a batch of Blog Tags\n      tags:\n      - Tag\n  /cms/v3/blogs/tags/batch/create:\n    post:\n      description: Create the Blog Tag objects detailed in the request body.\n      operationId: post-/cms/v3/blogs/tags/batch/create_createBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchInputTag'\n        description: The JSON array of new Blog Tags to create.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchResponseTag'\n          description: successful operation\n        \"207\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchResponseTagWithErrors'\n          description: multiple statuses\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - hapikey: []\n      - oauth2_legacy:\n        - content\n      summary: Create a batch of Blog Tags\n      tags:\n      - Tag\n  /cms/v3/blogs/tags/batch/read:\n    post:\n      description: Retrieve the Blog Tag objects identified in the request body.\n      operationId: post-/cms/v3/blogs/tags/batch/read_readBatch\n      parameters:\n      - description: Specifies whether to return archived Blog Tags. Defaults to `false`.\n        explode: true\n        in: query\n        name: archived\n        required: false\n        schema:\n          type: boolean\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchInputString'\n        description: The JSON array of Blog Tag ids.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchResponseTag'\n          description: successful operation\n        \"207\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchResponseTagWithErrors'\n          description: multiple statuses\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - hapikey: []\n      - oauth2_legacy:\n        - content\n      summary: Retrieve a batch of Blog Tags\n      tags:\n      - Tag\n  /cms/v3/blogs/tags/batch/update:\n    post:\n      description: Update the Blog Tag objects identified in the request body.\n      operationId: post-/cms/v3/blogs/tags/batch/update_updateBatch\n      parameters:\n      - description: Specifies whether to update archived Blog Tags. Defaults to `false`.\n        explode: true\n        in: query\n        name: archived\n        required: false\n        schema:\n          type: boolean\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchInputJsonNode'\n        description: A JSON array of the JSON representations of the updated Blog\n          Tags.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchResponseTag'\n          description: successful operation\n        \"207\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchResponseTagWithErrors'\n          description: multiple statuses\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - hapikey: []\n      - oauth2_legacy:\n        - content\n      summary: Update a batch of Blog Tags\n      tags:\n      - Tag\n  /cms/v3/blogs/tags/{objectId}:\n    delete:\n      description: Delete the Blog Tag object identified by the id in the path.\n      operationId: delete-/cms/v3/blogs/tags/{objectId}_archive\n      parameters:\n      - description: The Blog Tag id.\n        explode: false\n        in: path\n        name: objectId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Whether to return only results that have been archived.\n        explode: true\n        in: query\n        name: archived\n        required: false\n        schema:\n          type: boolean\n        style: form\n      responses:\n        \"204\":\n          content: {}\n          description: No content\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - hapikey: []\n      - oauth2_legacy:\n        - content\n      summary: Delete a Blog Tag\n      tags:\n      - Tag\n    get:\n      description: Retrieve the Blog Tag object identified by the id in the path.\n      operationId: get-/cms/v3/blogs/tags/{objectId}_getById\n      parameters:\n      - description: The Blog Tag id.\n        explode: false\n        in: path\n        name: objectId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Specifies whether to return archived Blog Tags. Defaults to `false`.\n        explode: true\n        in: query\n        name: archived\n        required: false\n        schema:\n          type: boolean\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n          description: successful operation\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - hapikey: []\n      - oauth2_legacy:\n        - content\n      summary: Retrieve a Blog Tag\n      tags:\n      - Tag\n    patch:\n      description: |\n        Sparse updates a single Blog Tag object identified by the id in the path.\n        All the column values need not be specified. Only the that need to be modified can be specified.\n      operationId: patch-/cms/v3/blogs/tags/{objectId}_update\n      parameters:\n      - description: The Blog Tag id.\n        explode: false\n        in: path\n        name: objectId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Specifies whether to update archived Blog Tags. Defaults to `false`.\n        explode: true\n        in: query\n        name: archived\n        required: false\n        schema:\n          type: boolean\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Tag'\n        description: The JSON representation of the updated Blog Tag.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n          description: successful operation\n        default:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An error occurred.\n      security:\n      - hapikey: []\n      - oauth2_legacy:\n        - content\n      summary: Update a Blog Tag\n      tags:\n      - Tag\ncomponents:\n  responses:\n    Error:\n      content:\n        '*/*':\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: An error occurred.\n  schemas:\n    BatchInputJsonNode:\n      example:\n        inputs:\n        - '{}'\n        - '{}'\n      properties:\n        inputs:\n          items:\n            properties: {}\n            type: object\n          type: array\n      required:\n      - inputs\n      type: object\n    BatchInputString:\n      example:\n        inputs:\n        - inputs\n        - inputs\n      properties:\n        inputs:\n          items:\n            type: string\n          type: array\n      required:\n      - inputs\n      type: object\n    BatchInputTag:\n      example:\n        inputs:\n        - createdAt: 2000-01-23T04:56:07.000+00:00\n          deletedAt: 2000-01-23T04:56:07.000+00:00\n          name: name\n          id: id\n          updatedAt: 2000-01-23T04:56:07.000+00:00\n        - createdAt: 2000-01-23T04:56:07.000+00:00\n          deletedAt: 2000-01-23T04:56:07.000+00:00\n          name: name\n          id: id\n          updatedAt: 2000-01-23T04:56:07.000+00:00\n      properties:\n        inputs:\n          items:\n            $ref: '#/components/schemas/Tag'\n          type: array\n      required:\n      - inputs\n      type: object\n    BatchResponseTag:\n      type: object\n    BatchResponseTagWithErrors:\n      properties:\n        status:\n          enum:\n          - PENDING\n          - PROCESSING\n          - CANCELED\n          - COMPLETE\n          type: string\n        results:\n          items:\n            $ref: '#/components/schemas/Tag'\n          type: array\n        numErrors:\n          format: int32\n          type: integer\n        errors:\n          items:\n            $ref: '#/components/schemas/StandardError'\n          type: array\n        requestedAt:\n          format: date-time\n          type: string\n        startedAt:\n          format: date-time\n          type: string\n        completedAt:\n          format: date-time\n          type: string\n        links:\n          additionalProperties:\n            type: string\n          type: object\n      required:\n      - completedAt\n      - results\n      - startedAt\n      - status\n      type: object\n    CollectionResponseWithTotalTagForwardPaging:\n      example:\n        total: 0\n        paging:\n          next:\n            link: link\n            after: after\n        results:\n        - createdAt: 2000-01-23T04:56:07.000+00:00\n          deletedAt: 2000-01-23T04:56:07.000+00:00\n          name: name\n          id: id\n          updatedAt: 2000-01-23T04:56:07.000+00:00\n        - createdAt: 2000-01-23T04:56:07.000+00:00\n          deletedAt: 2000-01-23T04:56:07.000+00:00\n          name: name\n          id: id\n          updatedAt: 2000-01-23T04:56:07.000+00:00\n      properties:\n        total:\n          format: int32\n          type: integer\n        results:\n          items:\n            $ref: '#/components/schemas/Tag'\n          type: array\n        paging:\n          $ref: '#/components/schemas/ForwardPaging'\n      required:\n      - results\n      - total\n      type: object\n    Error:\n      example:\n        message: Invalid input (details will vary based on the error)\n        correlationId: aeb5f871-7f07-4993-9211-075dc63e7cbf\n        category: VALIDATION_ERROR\n        links:\n          knowledge-base: https://www.hubspot.com/products/service/knowledge-base\n      properties:\n        message:\n          description: A human readable message describing the error along with remediation\n            steps where appropriate\n          example: An error occurred\n          type: string\n        correlationId:\n          description: A unique identifier for the request. Include this value with\n            any error reports or support tickets\n          example: aeb5f871-7f07-4993-9211-075dc63e7cbf\n          format: uuid\n          type: string\n        category:\n          description: The error category\n          type: string\n        subCategory:\n          description: A specific category that contains more specific detail about\n            the error\n          type: string\n        errors:\n          description: further information about the error\n          items:\n            $ref: '#/components/schemas/ErrorDetail'\n          type: array\n        context:\n          additionalProperties:\n            items:\n              type: string\n            type: array\n          description: Context about the error condition\n          example:\n            invalidPropertyName:\n            - propertyValue\n            missingScopes:\n            - scope1\n            - scope2\n          type: object\n        links:\n          additionalProperties:\n            type: string\n          description: A map of link names to associated URIs containing documentation\n            about the error or recommended remediation steps\n          type: object\n      required:\n      - category\n      - correlationId\n      - message\n      type: object\n    ErrorCategory:\n      type: object\n    ErrorDetail:\n      properties:\n        message:\n          description: A human readable message describing the error along with remediation\n            steps where appropriate\n          type: string\n        in:\n          description: The name of the field or parameter in which the error was found.\n          type: string\n        code:\n          description: The status code associated with the error detail\n          type: string\n        subCategory:\n          description: A specific category that contains more specific detail about\n            the error\n          type: string\n        context:\n          additionalProperties:\n            items:\n              type: string\n            type: array\n          description: Context about the error condition\n          example:\n            missingScopes:\n            - scope1\n            - scope2\n          type: object\n      required:\n      - message\n      type: object\n    ForwardPaging:\n      example:\n        next:\n          link: link\n          after: after\n      properties:\n        next:\n          $ref: '#/components/schemas/NextPage'\n      type: object\n    NextPage:\n      example:\n        link: link\n        after: after\n      properties:\n        after:\n          type: string\n        link:\n          type: string\n      required:\n      - after\n      type: object\n    StandardError:\n      properties:\n        status:\n          type: string\n        id:\n          type: string\n        category:\n          type: object\n        subCategory:\n          properties: {}\n          type: object\n        message:\n          type: string\n        errors:\n          items:\n            $ref: '#/components/schemas/ErrorDetail'\n          type: array\n        context:\n          additionalProperties:\n            items:\n              type: string\n            type: array\n          type: object\n        links:\n          additionalProperties:\n            type: string\n          type: object\n      required:\n      - category\n      - context\n      - errors\n      - links\n      - message\n      - status\n      type: object\n    Tag:\n      description: Model definition for a Tag.\n      example:\n        createdAt: 2000-01-23T04:56:07.000+00:00\n        deletedAt: 2000-01-23T04:56:07.000+00:00\n        name: name\n        id: id\n        updatedAt: 2000-01-23T04:56:07.000+00:00\n      properties:\n        id:\n          description: The unique ID of the Blog Tag.\n          type: string\n        name:\n          description: The name of the tag.\n          type: string\n        deletedAt:\n          description: The timestamp (ISO8601 format) when this Blog Tag was deleted.\n          format: date-time\n          type: string\n        createdAt:\n          description: The timestamp (ISO8601 format) when this Blog Tag was created.\n          format: date-time\n          type: string\n        updatedAt:\n          description: The timestamp (ISO8601 format) when this Blog Tag was last\n            updated.\n          format: date-time\n          type: string\n      required:\n      - createdAt\n      - deletedAt\n      - id\n      - name\n      - updatedAt\n      type: object\n  securitySchemes:\n    oauth2_legacy:\n      flows:\n        authorizationCode:\n          authorizationUrl: https://app.hubspot.com/oauth/authorize\n          scopes:\n            content: Read from and write to my Content\n          tokenUrl: https://api.hubapi.com/oauth/v1/token\n      type: oauth2\n    hapikey:\n      in: query\n      name: hapikey\n      type: apiKey\nx-hubspot-available-client-libraries:\n- PHP\n- Node\n- Python\n- Ruby\n",
			"canonicalURL": "/github.com/clarkmcc/go-hubspot@8c0e4f75dbeb3e9a84b11fb2d18ddc3e8b4c9e7e/-/blob/generated/tags/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/clarkmcc/go-hubspot/blob/8c0e4f75dbeb3e9a84b11fb2d18ddc3e8b4c9e7e/generated/tags/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/cms/v3/blogs/tags/batch/archive\": post: responses: default: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}