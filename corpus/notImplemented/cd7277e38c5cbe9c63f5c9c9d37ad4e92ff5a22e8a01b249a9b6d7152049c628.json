{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/InterDigitalInc/AdvantEDGE"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "go-packages/meep-app-support-client/api/swagger.yaml",
			"byteSize": 67893,
			"content": "openapi: 3.0.2\ninfo:\n  title: AdvantEDGE MEC Application Support API\n  description: \"MEC Application Support Service is AdvantEDGE's implementation of\\\n    \\ [ETSI MEC ISG MEC011 Application Enablement API](https://www.etsi.org/deliver/etsi_gs/MEC/001_099/011/02.01.01_60/gs_MEC011v020101p.pdf)\\\n    \\ \u003cp\u003e[Copyright (c) ETSI 2017](https://forge.etsi.org/etsi-forge-copyright-notice.txt)\\\n    \\ \u003cp\u003e**Micro-service**\u003cbr\u003e[meep-app-enablement](https://github.com/InterDigitalInc/AdvantEDGE/tree/master/go-apps/meep-app-enablement/server/app-support)\\\n    \\ \u003cp\u003e**Type \u0026 Usage**\u003cbr\u003eEdge Service used by edge applications that want to get\\\n    \\ information about applications in the network \u003cp\u003e**Note**\u003cbr\u003eAdvantEDGE supports\\\n    \\ a selected subset of Application Support API endpoints (see below).\"\n  contact:\n    name: InterDigital AdvantEDGE Support\n    email: AdvantEDGE@InterDigital.com\n  license:\n    name: Apache 2.0\n    url: https://github.com/InterDigitalInc/AdvantEDGE/blob/master/LICENSE\n  version: 2.1.1\nexternalDocs:\n  description: \"ETSI GS MEC011 Application Enablement API, V2.1.1\"\n  url: https://www.etsi.org/deliver/etsi_gs/MEC/001_099/011/02.01.01_60/gs_MEC011v020101p.pdf\nservers:\n- url: https://localhost/sandboxname/mec_app_support/v1\ntags:\n- name: mec_app_support\n- name: unsupported\npaths:\n  /applications/{appInstanceId}/traffic_rules:\n    get:\n      tags:\n      - unsupported\n      description: This method retrieves information about all the traffic rules associated\n        with a MEC application instance.\n      operationId: ApplicationsTrafficRules_GET\n      parameters:\n      - name: appInstanceId\n        in: path\n        description: Represents a MEC application instance. Note that the appInstanceId\n          is allocated by the MEC platform manager.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: It is used to indicate nonspecific success. The response body\n            contains a representation of the resource.\n          content:\n            application/json:\n              schema:\n                minItems: 0\n                type: array\n                items:\n                  $ref: '#/components/schemas/TrafficRule'\n                x-content-type: application/json\n              examples:\n                TrafficRules:\n                  $ref: '#/components/examples/TrafficRules'\n          links:\n            getIndividualMeTrafficRule:\n              $ref: '#/components/links/GetIndividualMeTrafficRule'\n            putIndividualMeTrafficRule:\n              $ref: '#/components/links/PutIndividualMeTrafficRule'\n        \"400\":\n          description: Bad Request. It is used to indicate that incorrect parameters\n            were passed to the request.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  /applications/{appInstanceId}/traffic_rules/{trafficRuleId}:\n    get:\n      tags:\n      - unsupported\n      description: This method retrieves information about all the traffic rules associated\n        with a MEC application instance.\n      operationId: ApplicationsTrafficRule_GET\n      parameters:\n      - name: appInstanceId\n        in: path\n        description: Represents a MEC application instance. Note that the appInstanceId\n          is allocated by the MEC platform manager.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: trafficRuleId\n        in: path\n        description: Represents a traffic rule.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: It is used to indicate nonspecific success. The response body\n            contains a representation of the resource.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TrafficRule'\n              examples:\n                TrafficRule:\n                  $ref: '#/components/examples/TrafficRule'\n        \"400\":\n          description: Bad Request. It is used to indicate that incorrect parameters\n            were passed to the request.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    put:\n      tags:\n      - unsupported\n      description: This method retrieves information about all the traffic rules associated\n        with a MEC application instance.\n      operationId: ApplicationsTrafficRule_PUT\n      parameters:\n      - name: appInstanceId\n        in: path\n        description: Represents a MEC application instance. Note that the appInstanceId\n          is allocated by the MEC platform manager.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: trafficRuleId\n        in: path\n        description: Represents a traffic rule.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/ApplicationsTrafficRule'\n      responses:\n        \"200\":\n          description: It is used to indicate nonspecific success. The response body\n            contains a representation of the resource.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TrafficRule'\n              examples:\n                TrafficRule:\n                  $ref: '#/components/examples/TrafficRule'\n        \"400\":\n          description: Bad Request. It is used to indicate that incorrect parameters\n            were passed to the request.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"412\":\n          description: \"Precondition Failed. It is used when a condition has failed\\\n            \\ during conditional requests,  e.g. when using ETags to avoid write conflicts.\"\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  /applications/{appInstanceId}/dns_rules:\n    get:\n      tags:\n      - unsupported\n      description: This method retrieves information about all the DNS rules associated\n        with a MEC application instance.\n      operationId: ApplicationsDnsRules_GET\n      parameters:\n      - name: appInstanceId\n        in: path\n        description: Represents a MEC application instance. Note that the appInstanceId\n          is allocated by the MEC platform manager.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: It is used to indicate nonspecific success. The response body\n            contains a representation of the resource.\n          content:\n            application/json:\n              schema:\n                minItems: 0\n                type: array\n                items:\n                  $ref: '#/components/schemas/DnsRule'\n                x-content-type: application/json\n              examples:\n                DnsRules:\n                  $ref: '#/components/examples/DnsRules'\n          links:\n            getIndividualMeDNSRule:\n              $ref: '#/components/links/GetIndividualMeDNSRule'\n            putIndividualMeDNSRule:\n              $ref: '#/components/links/PutIndividualMeDNSRule'\n        \"400\":\n          description: Bad Request. It is used to indicate that incorrect parameters\n            were passed to the request.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  /applications/{appInstanceId}/dns_rules/{dnsRuleId}:\n    get:\n      tags:\n      - unsupported\n      description: This method retrieves information about a DNS rule associated with\n        a MEC application instance.\n      operationId: ApplicationsDnsRule_GET\n      parameters:\n      - name: appInstanceId\n        in: path\n        description: Represents a MEC application instance. Note that the appInstanceId\n          is allocated by the MEC platform manager.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: dnsRuleId\n        in: path\n        description: Represents a DNS rule.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: It is used to indicate nonspecific success. The response body\n            contains a representation of the resource.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DnsRule'\n              examples:\n                DnsRule:\n                  $ref: '#/components/examples/DnsRule'\n        \"400\":\n          description: Bad Request. It is used to indicate that incorrect parameters\n            were passed to the request.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    put:\n      tags:\n      - unsupported\n      description: \"This method activates, de-activates or updates a traffic rule.\"\n      operationId: ApplicationsDnsRule_PUT\n      parameters:\n      - name: appInstanceId\n        in: path\n        description: Represents a MEC application instance. Note that the appInstanceId\n          is allocated by the MEC platform manager.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: dnsRuleId\n        in: path\n        description: Represents a DNS rule.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/ApplicationsDnsRule'\n      responses:\n        \"200\":\n          description: It is used to indicate nonspecific success. The response body\n            contains a representation of the resource.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DnsRule'\n              examples:\n                DnsRule:\n                  $ref: '#/components/examples/DnsRule'\n        \"400\":\n          description: Bad Request. It is used to indicate that incorrect parameters\n            were passed to the request.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"412\":\n          description: \"Precondition Failed. It is used when a condition has failed\\\n            \\ during conditional requests,  e.g. when using ETags to avoid write conflicts.\"\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  /applications/{appInstanceId}/subscriptions:\n    get:\n      tags:\n      - mec_app_support\n      description: \"The GET method may be used to request information about all subscriptions\\\n        \\ for this requestor. Upon success, the response contains entity body with\\\n        \\ all the subscriptions for the requestor.\"\n      operationId: ApplicationsSubscriptions_GET\n      parameters:\n      - name: appInstanceId\n        in: path\n        description: Represents a MEC application instance. Note that the appInstanceId\n          is allocated by the MEC platform manager.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: \"Upon success, a response body containing the list of links\\\n            \\ to the requested subscriptions is returned.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionLinkList'\n          links:\n            getIndividualmecAppSuptApiSubscriptionLinkList:\n              $ref: '#/components/links/GetIndividualmecAppSuptApiSubscriptionLinkList'\n            delIndividualmecAppSuptApiSubscriptionLinkList:\n              $ref: '#/components/links/DelIndividualmecAppSuptApiSubscriptionLinkList'\n        \"400\":\n          description: Bad Request. It is used to indicate that incorrect parameters\n            were passed to the request.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    post:\n      tags:\n      - mec_app_support\n      description: \"The POST method may be used to create a new subscription. One\\\n        \\ example use case is to create a new subscription to the MEC service availability\\\n        \\ notifications. Upon success, the response contains entity body describing\\\n        \\ the created subscription.\"\n      operationId: ApplicationsSubscriptions_POST\n      parameters:\n      - name: appInstanceId\n        in: path\n        description: Represents a MEC application instance. Note that the appInstanceId\n          is allocated by the MEC platform manager.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/ApplicationsSubscriptions'\n      responses:\n        \"201\":\n          description: Entity body in the request contains a subscription to the  MEC\n            service availability notifications that is to be created.\n          headers:\n            location:\n              description: The resource URI of the created resource\n              style: simple\n              explode: false\n              schema:\n                type: string\n                format: uri\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppTerminationNotificationSubscription'\n          links:\n            getIndividualmecAppSuptApiSubscription:\n              $ref: '#/components/links/GetIndividualmecAppSuptApiSubscription'\n            delIndividualmecAppSuptApiSubscription:\n              $ref: '#/components/links/DelIndividualmecAppSuptApiSubscription'\n        \"400\":\n          description: Bad Request. It is used to indicate that incorrect parameters\n            were passed to the request.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      callbacks:\n        appTerminationNotification:\n          $ref: '#/components/callbacks/AppTerminationNotification'\n  /applications/{appInstanceId}/subscriptions/{subscriptionId}:\n    get:\n      tags:\n      - mec_app_support\n      description: \"The GET method requests information about a subscription for this\\\n        \\ requestor. Upon success, the response contains entity body with the subscription\\\n        \\ for the requestor.\"\n      operationId: ApplicationsSubscription_GET\n      parameters:\n      - name: appInstanceId\n        in: path\n        description: Represents a MEC application instance. Note that the appInstanceId\n          is allocated by the MEC platform manager.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: subscriptionId\n        in: path\n        description: Represents a subscription to the notifications from the MEC platform.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: \"Upon success, a response body containing the requested subscription\\\n            \\ is returned.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppTerminationNotificationSubscription'\n        \"400\":\n          description: Bad Request. It is used to indicate that incorrect parameters\n            were passed to the request.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n    delete:\n      tags:\n      - mec_app_support\n      description: This method deletes a mecAppSuptApiSubscription. This method is\n        typically used in \"Unsubscribing from service availability event notifications\"\n        procedure.\n      operationId: ApplicationsSubscription_DELETE\n      parameters:\n      - name: appInstanceId\n        in: path\n        description: Represents a MEC application instance. Note that the appInstanceId\n          is allocated by the MEC platform manager.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: subscriptionId\n        in: path\n        description: Represents a subscription to the notifications from the MEC platform.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  /applications/{appInstanceId}/confirm_termination:\n    post:\n      tags:\n      - mec_app_support\n      description: This method is used to confirm the application level termination  of\n        an application instance.\n      operationId: ApplicationsConfirmTermination_POST\n      parameters:\n      - name: appInstanceId\n        in: path\n        description: Represents a MEC application instance. Note that the appInstanceId\n          is allocated by the MEC platform manager.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/ApplicationsConfirmTermination'\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized. It is used when the client did not submit the\n            appropriate credentials.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"409\":\n          description: \"Conflict. The operation cannot be executed currently, due\\\n            \\ to a conflict with  the state of the resource. Typically, this is because\\\n            \\ the application  instance resource is in NOT_INSTANTIATED state.\"\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: Too Many Requests. It is used when a rate limiter has triggered.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  /applications/{appInstanceId}/confirm_ready:\n    post:\n      tags:\n      - mec_app_support\n      description: 'This method may be used by the MEC application instance to notify\n        the MEC platform that it is up and running. '\n      operationId: ApplicationsConfirmReady_POST\n      parameters:\n      - name: appInstanceId\n        in: path\n        description: Represents a MEC application instance. Note that the appInstanceId\n          is allocated by the MEC platform manager.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        $ref: '#/components/requestBodies/ApplicationsConfirmReady'\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized. It is used when the client did not submit the\n            appropriate credentials.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"409\":\n          description: \"Conflict. The operation cannot be executed currently, due\\\n            \\ to a conflict with  the state of the resource. Typically, this is because\\\n            \\ the application  instance resource is in NOT_INSTANTIATED state.\"\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: Too Many Requests. It is used when a rate limiter has triggered.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  /timing/timing_caps:\n    get:\n      tags:\n      - mec_app_support\n      description: This method retrieves the information of the platform's timing\n        capabilities which corresponds to the timing capabilities query\n      operationId: TimingCaps_GET\n      responses:\n        \"200\":\n          description: It is used to indicate nonspecific success. The response body\n            contains a representation of the resource.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimingCaps'\n        \"400\":\n          description: Bad Request. It is used to indicate that incorrect parameters\n            were passed to the request.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n  /timing/current_time:\n    get:\n      tags:\n      - mec_app_support\n      description: This method retrieves the information of the platform's current\n        time which corresponds to the get platform time procedure\n      operationId: TimingCurrentTime_GET\n      responses:\n        \"200\":\n          description: It is used to indicate nonspecific success. The response body\n            contains a representation of the resource.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CurrentTime'\n        \"400\":\n          description: Bad Request. It is used to indicate that incorrect parameters\n            were passed to the request.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: 'Forbidden. The operation is not allowed given the current\n            status of the resource. '\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: Not Found. It is used when a client provided a URI that cannot\n            be mapped  to a valid resource URI.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\ncomponents:\n  schemas:\n    AppReadyConfirmation:\n      required:\n      - indication\n      type: object\n      properties:\n        indication:\n          type: string\n          description: Indication about the MEC application instance.\n          enum:\n          - READY\n      description: This type represents the information that the MEC application instance\n        indicates to the MEC platform that it is up and running.\n    AppTerminationConfirmation:\n      required:\n      - operationAction\n      type: object\n      properties:\n        operationAction:\n          $ref: '#/components/schemas/OperationActionType'\n      description: \"This type represents the information that the MEC application\\\n        \\ instance provides to the MEC platform when informing it that the application\\\n        \\ has completed its application level related terminate/stop actions, e.g.\\\n        \\ retention of application state in the case of stop.\"\n    AppTerminationNotification:\n      required:\n      - _links\n      - maxGracefulTimeout\n      - notificationType\n      - operationAction\n      type: object\n      properties:\n        notificationType:\n          type: string\n          description: Shall be set to AppTerminationNotification.\n        operationAction:\n          $ref: '#/components/schemas/OperationActionType'\n        maxGracefulTimeout:\n          type: integer\n          description: Maximum timeout value in seconds for graceful termination or\n            graceful stop of an application instance.\n          format: uint32\n        _links:\n          $ref: '#/components/schemas/AppTerminationNotification__links'\n      description: This type represents the information that the MEC platform notifies\n        the subscribed application instance about  the corresponding application instance\n        termination/stop.\n    AppTerminationNotificationSubscription:\n      required:\n      - _links\n      - appInstanceId\n      - callbackReference\n      - subscriptionType\n      type: object\n      properties:\n        subscriptionType:\n          type: string\n          description: Shall be set to AppTerminationNotificationSubscription.\n        callbackReference:\n          type: string\n          description: URI selected by the MEC application instance to receive notifications\n            on the subscribed MEC application instance management information. This\n            shall be included in both the request and the response.\n          format: uri\n        _links:\n          $ref: '#/components/schemas/AppTerminationNotificationSubscription__links'\n        appInstanceId:\n          type: string\n          description: It is used as the filtering criterion for the subscribed events.\n      description: This type represents the information that the MEC platform notifies\n        the subscribed application instance about  the corresponding application instance\n        termination/stop.\n      example:\n        appInstanceId: appInstanceId\n        subscriptionType: subscriptionType\n        _links:\n          self:\n            href: http://example.com/aeiou\n        callbackReference: http://example.com/aeiou\n    CurrentTime:\n      required:\n      - nanoSeconds\n      - seconds\n      - timeSourceStatus\n      type: object\n      properties:\n        seconds:\n          type: integer\n          description: \"The seconds part of the time. Time is defined as Unix-time\\\n            \\ since January 1, 1970, 00:00:00 UTC\"\n          format: uint32\n        nanoSeconds:\n          type: integer\n          description: \"The nanoseconds part of the time. Time is defined as Unix-time\\\n            \\ since January 1, 1970, 00:00:00 UTC\"\n          format: uint32\n        timeSourceStatus:\n          type: string\n          description: Platform Time Source status. 1 = TRACEABLE - time source is\n            locked to the UTC time source. 2 = NONTRACEABLE - time source is not locked\n            to the UTC time source\n          enum:\n          - TRACEABLE\n          - NONTRACEABLE\n      description: This type represents the information provided by the MEC platform\n        in response to the Get Platform Time Request message.\n      example:\n        seconds: 0\n        nanoSeconds: 6\n        timeSourceStatus: TRACEABLE\n    DestinationInterface:\n      required:\n      - interfaceType\n      type: object\n      properties:\n        interfaceType:\n          type: string\n          description: Type of the interface\n          enum:\n          - TUNNEL\n          - MAC\n          - IP\n        tunnelInfo:\n          $ref: '#/components/schemas/TunnelInfo'\n        srcMacAddress:\n          type: string\n          description: Source address identifies the MAC address of the interface\n        dstMacAddress:\n          type: string\n          description: Destination address identifies the MAC address of the interface\n        dstIpAddress:\n          type: string\n          description: IP address of the remote destination\n      description: \"This type represents the destination interface. If the action\\\n        \\ is FORWARD_DECAPSULATED, FORWARD_ENCAPSULATED or PASSTHROUGH one value shall\\\n        \\ be provided. If the action is DUPLICATE_DECAPSULATED or DUPLICATE_ENCAPSULATED,\\\n        \\ two values shall be provided. If the action is DROP, no value shall be provided.\"\n      example:\n        interfaceType: TUNNEL\n        dstIpAddress: dstIpAddress\n        srcMacAddress: srcMacAddress\n        tunnelInfo:\n          tunnelSrcAddress: tunnelSrcAddress\n          tunnelType: GTP_U\n          tunnelDstAddress: tunnelDstAddress\n        dstMacAddress: dstMacAddress\n    DnsRule:\n      required:\n      - dnsRuleId\n      - domainName\n      - ipAddress\n      - ipAddressType\n      - state\n      type: object\n      properties:\n        dnsRuleId:\n          type: string\n          description: Identifies the DNS Rule\n        domainName:\n          type: string\n          description: FQDN resolved by the DNS rule\n        ipAddressType:\n          type: string\n          description: IP address type\n          enum:\n          - IP_V6\n          - IP_V4\n        ipAddress:\n          type: string\n          description: IP address associated with the FQDN resolved by the DNS rule\n        ttl:\n          type: integer\n          description: Time to live value\n          format: uint32\n        state:\n          type: string\n          description: DNS rule state. This attribute may be updated using HTTP PUT\n            method\n          example: ACTIVE\n          enum:\n          - ACTIVE\n          - INACTIVE\n      description: This type represents the general information of a DNS rule.\n      example:\n        domainName: domainName\n        ipAddress: ipAddress\n        dnsRuleId: dnsRuleId\n        state: ACTIVE\n        ttl: 0\n        ipAddressType: IP_V6\n    LinkType:\n      type: object\n      properties:\n        href:\n          type: string\n          description: URI referring to a resource\n          format: uri\n      description: This type represents a type of link and may be referenced from\n        data structures\n      example:\n        href: http://example.com/aeiou\n    SubscriptionLinkList:\n      required:\n      - _links\n      type: object\n      properties:\n        _links:\n          $ref: '#/components/schemas/SubscriptionLinkList__links'\n      description: This type represents a list of links related to currently existing\n        subscriptions for a MEC application instance. This information is returned\n        when sending a request to receive current subscriptions.\n      example:\n        _links:\n          subscriptions:\n          - subscriptionType: subscriptionType\n            href: http://example.com/aeiou\n          - subscriptionType: subscriptionType\n            href: http://example.com/aeiou\n          self:\n            href: http://example.com/aeiou\n    OperationActionType:\n      type: string\n      description: Operation that is being performed on the MEC application instance.\n      enum:\n      - STOPPING\n      - TERMINATING\n    ProblemDetails:\n      type: object\n      properties:\n        type:\n          type: string\n          description: A URI reference according to IETF RFC 3986 that identifies\n            the problem type\n          format: uri\n        title:\n          type: string\n          description: \"A short, human-readable summary of the problem type\"\n        status:\n          type: integer\n          description: The HTTP status code for this occurrence of the problem\n          format: uint32\n        detail:\n          type: string\n          description: A human-readable explanation specific to this occurrence of\n            the problem\n        instance:\n          type: string\n          description: A URI reference that identifies the specific occurrence of\n            the problem\n          format: uri\n    TimingCaps:\n      type: object\n      properties:\n        timeStamp:\n          $ref: '#/components/schemas/TimingCaps_timeStamp'\n        ntpServers:\n          type: array\n          description: Available NTP servers\n          items:\n            $ref: '#/components/schemas/TimingCaps_ntpServers'\n        ptpMasters:\n          type: array\n          description: Available PTP Masters\n          items:\n            $ref: '#/components/schemas/TimingCaps_ptpMasters'\n      description: This type represents the information provided by the MEC platform\n        in response to the Timing capabilities Query message.\n      example:\n        timeStamp:\n          seconds: 0\n          nanoSeconds: 6\n        ntpServers:\n        - ntpServerAddr: ntpServerAddr\n          maxPollingInterval: 5\n          authenticationKeyNum: 2\n          localPriority: 5\n          authenticationOption: NONE\n          ntpServerAddrType: IP_ADDRESS\n          minPollingInterval: 1\n        - ntpServerAddr: ntpServerAddr\n          maxPollingInterval: 5\n          authenticationKeyNum: 2\n          localPriority: 5\n          authenticationOption: NONE\n          ntpServerAddrType: IP_ADDRESS\n          minPollingInterval: 1\n        ptpMasters:\n        - ptpMasterLocalPriority: 7\n          ptpMasterIpAddress: ptpMasterIpAddress\n          delayReqMaxRate: 9\n        - ptpMasterLocalPriority: 7\n          ptpMasterIpAddress: ptpMasterIpAddress\n          delayReqMaxRate: 9\n    TrafficFilter:\n      type: object\n      properties:\n        srcAddress:\n          type: array\n          description: \"An IP address or a range of IP address. For IPv4, the IP address\\\n            \\ could be an IP address plus mask, or an individual IP address, or a\\\n            \\ range of IP addresses. For IPv6, the IP address could be an IP prefix,\\\n            \\ or a range of IP prefixes.\"\n          items:\n            type: string\n            description: Identify the traffic ip address.\n        dstAddress:\n          type: array\n          description: \"An IP address or a range of IP address. For IPv4, the IP address\\\n            \\ could be an IP address plus mask, or an individual IP address, or a\\\n            \\ range of IP addresses. For IPv6, the IP address could be an IP prefix,\\\n            \\ or a range of IP prefixes.\"\n          items:\n            type: string\n            description: Identify the traffic ip address.\n        srcPort:\n          type: array\n          description: A port or a range of ports\n          items:\n            type: string\n            description: A port\n        dstPort:\n          type: array\n          description: A port or a range of ports\n          items:\n            type: string\n            description: A port\n        protocol:\n          type: array\n          description: Specify the protocol of the traffic filter\n          items:\n            type: string\n            description: Protocol of the traffic filter\n        token:\n          type: array\n          description: Used for token based traffic rule\n          items:\n            type: string\n            description: Used for token based traffic rule\n        srcTunnelAddress:\n          type: array\n          description: Used for GTP tunnel based traffic rule\n          items:\n            type: string\n            description: Used for GTP tunnel based traffic rule\n        tgtTunnelAddress:\n          type: array\n          description: Used for GTP tunnel based traffic rule\n          items:\n            type: string\n            description: Used for GTP tunnel based traffic rule\n        srcTunnelPort:\n          type: array\n          description: Used for GTP tunnel based traffic rule\n          items:\n            type: string\n            description: Used for GTP tunnel based traffic rule\n        dstTunnelPort:\n          type: array\n          description: Used for GTP tunnel based traffic rule\n          items:\n            type: string\n            description: Used for GTP tunnel based traffic rule\n        qCI:\n          type: integer\n          description: Used to match all packets that have the same Quality Class\n            Indicator (QCI).\n          format: uint32\n        dSCP:\n          type: integer\n          description: Used to match all IPv4 packets that have the same Differentiated\n            Services Code Point (DSCP)\n          format: uint32\n        tC:\n          type: integer\n          description: Used to match all IPv6 packets that have the same Traffic Class.\n          format: uint32\n      description: This type represents the traffic filter.\n      example:\n        srcTunnelPort:\n        - srcTunnelPort\n        - srcTunnelPort\n        dstAddress:\n        - dstAddress\n        - dstAddress\n        srcAddress:\n        - srcAddress\n        - srcAddress\n        srcPort:\n        - srcPort\n        - srcPort\n        token:\n        - token\n        - token\n        tC: 5\n        protocol:\n        - protocol\n        - protocol\n        dstTunnelPort:\n        - dstTunnelPort\n        - dstTunnelPort\n        dSCP: 1\n        dstPort:\n        - dstPort\n        - dstPort\n        qCI: 6\n        srcTunnelAddress:\n        - srcTunnelAddress\n        - srcTunnelAddress\n        tgtTunnelAddress:\n        - tgtTunnelAddress\n        - tgtTunnelAddress\n    TrafficRule:\n      required:\n      - action\n      - filterType\n      - priority\n      - state\n      - trafficFilter\n      - trafficRuleId\n      type: object\n      properties:\n        trafficRuleId:\n          type: string\n          description: Identify the traffic rule.\n        filterType:\n          type: string\n          description: Definition of filter per FLOW or PACKET. If flow the filter\n            match UE-\u003eEPC packet and the reverse packet is handled in the same context\n          enum:\n          - FLOW\n          - PACKET\n        priority:\n          type: integer\n          description: \"Priority of this traffic rule. If traffic rule conflicts,\\\n            \\ the one with higher priority take precedence\"\n          format: uint32\n        trafficFilter:\n          type: array\n          items:\n            $ref: '#/components/schemas/TrafficFilter'\n        action:\n          type: string\n          description: The action of the MEC host data plane when a packet matches\n            the trafficFilter\n          enum:\n          - DROP\n          - FORWARD_DECAPSULATED\n          - FORWARD_ENCAPSULATED\n          - PASSTHROUGH\n          - DUPLICATE_DECAPSULATED\n          - DUPLICATE_ENCAPSULATED\n        dstInterface:\n          $ref: '#/components/schemas/DestinationInterface'\n        state:\n          type: string\n          description: Contains the traffic rule state. This attribute may be updated\n            using HTTP PUT   method\n          enum:\n          - ACTIVE\n          - INACTIVE\n      description: This type represents the general information of a traffic rule.\n      example:\n        action: DROP\n        trafficRuleId: trafficRuleId\n        dstInterface:\n          interfaceType: TUNNEL\n          dstIpAddress: dstIpAddress\n          srcMacAddress: srcMacAddress\n          tunnelInfo:\n            tunnelSrcAddress: tunnelSrcAddress\n            tunnelType: GTP_U\n            tunnelDstAddress: tunnelDstAddress\n          dstMacAddress: dstMacAddress\n        state: ACTIVE\n        filterType: FLOW\n        priority: 0\n        trafficFilter:\n        - srcTunnelPort:\n          - srcTunnelPort\n          - srcTunnelPort\n          dstAddress:\n          - dstAddress\n          - dstAddress\n          srcAddress:\n          - srcAddress\n          - srcAddress\n          srcPort:\n          - srcPort\n          - srcPort\n          token:\n          - token\n          - token\n          tC: 5\n          protocol:\n          - protocol\n          - protocol\n          dstTunnelPort:\n          - dstTunnelPort\n          - dstTunnelPort\n          dSCP: 1\n          dstPort:\n          - dstPort\n          - dstPort\n          qCI: 6\n          srcTunnelAddress:\n          - srcTunnelAddress\n          - srcTunnelAddress\n          tgtTunnelAddress:\n          - tgtTunnelAddress\n          - tgtTunnelAddress\n        - srcTunnelPort:\n          - srcTunnelPort\n          - srcTunnelPort\n          dstAddress:\n          - dstAddress\n          - dstAddress\n          srcAddress:\n          - srcAddress\n          - srcAddress\n          srcPort:\n          - srcPort\n          - srcPort\n          token:\n          - token\n          - token\n          tC: 5\n          protocol:\n          - protocol\n          - protocol\n          dstTunnelPort:\n          - dstTunnelPort\n          - dstTunnelPort\n          dSCP: 1\n          dstPort:\n          - dstPort\n          - dstPort\n          qCI: 6\n          srcTunnelAddress:\n          - srcTunnelAddress\n          - srcTunnelAddress\n          tgtTunnelAddress:\n          - tgtTunnelAddress\n          - tgtTunnelAddress\n    TunnelInfo:\n      required:\n      - tunnelType\n      type: object\n      properties:\n        tunnelType:\n          type: string\n          description: This type represents the tunnel information.\n          enum:\n          - GTP_U\n          - GRE\n        tunnelDstAddress:\n          type: string\n          description: Destination address of the tunnel\n        tunnelSrcAddress:\n          type: string\n          description: Source address of the tunnel\n      description: This type represents the tunnel information.\n      example:\n        tunnelSrcAddress: tunnelSrcAddress\n        tunnelType: GTP_U\n        tunnelDstAddress: tunnelDstAddress\n    AppTerminationNotification__links:\n      required:\n      - subscription\n      type: object\n      properties:\n        subscription:\n          $ref: '#/components/schemas/LinkType'\n        confirmTermination:\n          $ref: '#/components/schemas/LinkType'\n      description: Object containing hyperlinks related to the resource.\n    AppTerminationNotificationSubscription__links:\n      required:\n      - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/LinkType'\n      description: Self-referring URI.\n      readOnly: true\n      example:\n        self:\n          href: http://example.com/aeiou\n    SubscriptionLinkList__links_subscriptions:\n      required:\n      - href\n      - subscriptionType\n      type: object\n      properties:\n        href:\n          type: string\n          description: URI referring to a resource\n          format: uri\n        subscriptionType:\n          type: string\n          description: Type of the subscription. The values are as defined in the\n            \"subscriptionType\" attribute for each different Mp1 event subscription\n            data type.\n      description: A link to a subscription.\n      example:\n        subscriptionType: subscriptionType\n        href: http://example.com/aeiou\n    SubscriptionLinkList__links:\n      required:\n      - self\n      type: object\n      properties:\n        self:\n          $ref: '#/components/schemas/LinkType'\n        subscriptions:\n          type: array\n          description: The MEC application instance's subscriptions\n          items:\n            $ref: '#/components/schemas/SubscriptionLinkList__links_subscriptions'\n      description: Self-referring URI.\n      example:\n        subscriptions:\n        - subscriptionType: subscriptionType\n          href: http://example.com/aeiou\n        - subscriptionType: subscriptionType\n          href: http://example.com/aeiou\n        self:\n          href: http://example.com/aeiou\n    TimingCaps_timeStamp:\n      required:\n      - nanoSeconds\n      - seconds\n      type: object\n      properties:\n        seconds:\n          type: integer\n          description: \"The seconds part of the time. Time is defined as Unix-time\\\n            \\ since January 1, 1970, 00:00:00 UTC\"\n          format: uint32\n        nanoSeconds:\n          type: integer\n          description: \"The nanoseconds part of the time. Time is defined as Unix-time\\\n            \\ since January 1, 1970, 00:00:00 UTC\"\n          format: uint32\n      description: time\n      example:\n        seconds: 0\n        nanoSeconds: 6\n    TimingCaps_ntpServers:\n      required:\n      - authenticationKeyNum\n      - authenticationOption\n      - localPriority\n      - maxPollingInterval\n      - minPollingInterval\n      - ntpServerAddr\n      - ntpServerAddrType\n      type: object\n      properties:\n        ntpServerAddrType:\n          type: string\n          description: Address type of NTP server\n          enum:\n          - IP_ADDRESS\n          - DNS_NAME\n        ntpServerAddr:\n          type: string\n          description: NTP server address\n        minPollingInterval:\n          type: integer\n          description: \"Minimum poll interval for NTP messages, in seconds as a power\\\n            \\ of two. Range 3...17\"\n          format: uint32\n        maxPollingInterval:\n          type: integer\n          description: \"Maximum poll interval for NTP messages, in seconds as a power\\\n            \\ of two. Range 3...17\"\n          format: uint32\n        localPriority:\n          type: integer\n          description: NTP server local priority\n          format: uint32\n        authenticationOption:\n          type: string\n          description: NTP authentication option\n          enum:\n          - NONE\n          - SYMMETRIC_KEY\n          - AUTO_KEY\n        authenticationKeyNum:\n          type: integer\n          description: Authentication key number\n          format: uint32\n      description: NTP server detail.\n      example:\n        ntpServerAddr: ntpServerAddr\n        maxPollingInterval: 5\n        authenticationKeyNum: 2\n        localPriority: 5\n        authenticationOption: NONE\n        ntpServerAddrType: IP_ADDRESS\n        minPollingInterval: 1\n    TimingCaps_ptpMasters:\n      required:\n      - delayReqMaxRate\n      - ptpMasterIpAddress\n      - ptpMasterLocalPriority\n      type: object\n      properties:\n        ptpMasterIpAddress:\n          type: string\n          description: PTP Master IP Address\n        ptpMasterLocalPriority:\n          type: integer\n          description: PTP Master local priority\n          format: uint32\n        delayReqMaxRate:\n          type: integer\n          description: Acceptable maximum rate of the Delay_Req messages in packets\n            per second\n          format: uint32\n      description: NTP server detail.\n      example:\n        ptpMasterLocalPriority: 7\n        ptpMasterIpAddress: ptpMasterIpAddress\n        delayReqMaxRate: 9\n  responses:\n    ApplicationsDnsRules200:\n      description: It is used to indicate nonspecific success. The response body contains\n        a representation of the resource.\n      content:\n        application/json:\n          schema:\n            minItems: 0\n            type: array\n            items:\n              $ref: '#/components/schemas/DnsRule'\n            x-content-type: application/json\n          examples:\n            DnsRules:\n              $ref: '#/components/examples/DnsRules'\n      links:\n        getIndividualMeDNSRule:\n          $ref: '#/components/links/GetIndividualMeDNSRule'\n        putIndividualMeDNSRule:\n          $ref: '#/components/links/PutIndividualMeDNSRule'\n    ApplicationsDnsRule200:\n      description: It is used to indicate nonspecific success. The response body contains\n        a representation of the resource.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DnsRule'\n          examples:\n            DnsRule:\n              $ref: '#/components/examples/DnsRule'\n    ApplicationsSubscriptions200:\n      description: \"Upon success, a response body containing the list of links to\\\n        \\ the requested subscriptions is returned.\"\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SubscriptionLinkList'\n      links:\n        getIndividualmecAppSuptApiSubscriptionLinkList:\n          $ref: '#/components/links/GetIndividualmecAppSuptApiSubscriptionLinkList'\n        delIndividualmecAppSuptApiSubscriptionLinkList:\n          $ref: '#/components/links/DelIndividualmecAppSuptApiSubscriptionLinkList'\n    ApplicationsSubscriptions201:\n      description: Entity body in the request contains a subscription to the  MEC\n        service availability notifications that is to be created.\n      headers:\n        location:\n          description: The resource URI of the created resource\n          style: simple\n          explode: false\n          schema:\n            type: string\n            format: uri\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AppTerminationNotificationSubscription'\n      links:\n        getIndividualmecAppSuptApiSubscription:\n          $ref: '#/components/links/GetIndividualmecAppSuptApiSubscription'\n        delIndividualmecAppSuptApiSubscription:\n          $ref: '#/components/links/DelIndividualmecAppSuptApiSubscription'\n    ApplicationsSubscription200:\n      description: \"Upon success, a response body containing the requested subscription\\\n        \\ is returned.\"\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AppTerminationNotificationSubscription'\n    ApplicationsTrafficRules200:\n      description: It is used to indicate nonspecific success. The response body contains\n        a representation of the resource.\n      content:\n        application/json:\n          schema:\n            minItems: 0\n            type: array\n            items:\n              $ref: '#/components/schemas/TrafficRule'\n            x-content-type: application/json\n          examples:\n            TrafficRules:\n              $ref: '#/components/examples/TrafficRules'\n      links:\n        getIndividualMeTrafficRule:\n          $ref: '#/components/links/GetIndividualMeTrafficRule'\n        putIndividualMeTrafficRule:\n          $ref: '#/components/links/PutIndividualMeTrafficRule'\n    ApplicationsTrafficRule200:\n      description: It is used to indicate nonspecific success. The response body contains\n        a representation of the resource.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TrafficRule'\n          examples:\n            TrafficRule:\n              $ref: '#/components/examples/TrafficRule'\n    TimingCurrentTime200:\n      description: It is used to indicate nonspecific success. The response body contains\n        a representation of the resource.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CurrentTime'\n    TimingCaps200:\n      description: It is used to indicate nonspecific success. The response body contains\n        a representation of the resource.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TimingCaps'\n    \"400\":\n      description: Bad Request. It is used to indicate that incorrect parameters were\n        passed to the request.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    \"401\":\n      description: Unauthorized. It is used when the client did not submit the appropriate\n        credentials.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    \"403\":\n      description: 'Forbidden. The operation is not allowed given the current status\n        of the resource. '\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    \"404\":\n      description: Not Found. It is used when a client provided a URI that cannot\n        be mapped  to a valid resource URI.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    \"409\":\n      description: \"Conflict. The operation cannot be executed currently, due to a\\\n        \\ conflict with  the state of the resource. Typically, this is because the\\\n        \\ application  instance resource is in NOT_INSTANTIATED state.\"\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    \"412\":\n      description: \"Precondition Failed. It is used when a condition has failed during\\\n        \\ conditional requests,  e.g. when using ETags to avoid write conflicts.\"\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    \"429\":\n      description: Too Many Requests. It is used when a rate limiter has triggered.\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n  parameters:\n    Path.AppInstanceId:\n      name: appInstanceId\n      in: path\n      description: Represents a MEC application instance. Note that the appInstanceId\n        is allocated by the MEC platform manager.\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    Path.DnsRuleId:\n      name: dnsRuleId\n      in: path\n      description: Represents a DNS rule.\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    Path.SubscriptionId:\n      name: subscriptionId\n      in: path\n      description: Represents a subscription to the notifications from the MEC platform.\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    Path.TrafficRuleId:\n      name: trafficRuleId\n      in: path\n      description: Represents a traffic rule.\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n  examples:\n    DnsRule:\n      value:\n        dnsRuleId: DnsRule1\n        domainName: www.example.com\n        ipAddressType: IP_V4\n        ipAddress: 146.241.7.3\n        ttl: 300\n        state: ACTIVE\n    DnsRules:\n      value:\n      - dnsRuleId: DnsRule1\n        domainName: www.example.com\n        ipAddressType: IP_V4\n        ipAddress: 146.241.7.3\n        ttl: 300\n        state: ACTIVE\n      - dnsRuleId: DnsRule2\n        domainName: www.example.com\n        ipAddressType: IP_V4\n        ipAddress: 146.241.7.4\n        ttl: 300\n        state: INACTIVE\n    TrafficRule:\n      value:\n        trafficRuleId: TrafficRule123\n        serName: ExampleService\n        filterType: FLOW\n        priority: 1\n        trafficFilter:\n        - srcAddress:\n          - 192.168.2.0/24\n          - 192.168.3.0/24\n          dstAddress:\n          - 192.127.4.100/32\n          dstPort:\n          - \"80\"\n        action: FORWARD_DECAPSULATED\n        dstInterface:\n          interfaceType: IP\n          dstIpAddress: 20.1.1.1\n        state: ACTIVE\n    TrafficRules:\n      value:\n      - trafficRuleId: TrafficRule123\n        serName: ExampleService\n        filterType: FLOW\n        priority: 1\n        trafficFilter:\n        - srcAddress:\n          - 192.168.2.0/24\n          - 192.168.3.0/24\n          dstAddress:\n          - 192.127.4.100/32\n          dstPort:\n          - \"80\"\n        action: FORWARD_DECAPSULATED\n        dstInterface:\n          interfaceType: IP\n          dstIpAddress: 20.1.1.1\n        state: ACTIVE\n  requestBodies:\n    ApplicationsConfirmReady:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AppReadyConfirmation'\n          example:\n            indication: READY\n      required: true\n    ApplicationsConfirmTermination:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AppTerminationConfirmation'\n          example:\n            operationAction: TERMINATING\n      required: true\n    ApplicationsDnsRule:\n      description: The updated state is included in the entity body of the request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DnsRule'\n      required: true\n    ApplicationsSubscriptions:\n      description: Entity body in the request contains a subscription to the MEC application\n        termination notifications that is to be created.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AppTerminationNotificationSubscription'\n          example:\n            subscriptionType: AppTerminationNotificationSubscription\n            callbackReference: https://my.callback.com/sandboxname/mep1/rni/v2/\n            appInstanceId: myAppInstanceId\n      required: true\n    ApplicationsTrafficRule:\n      description: One or more updated attributes that are allowed to be changed\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TrafficRule'\n      required: true\n    AppTerminationNotification:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AppTerminationNotification'\n      required: true\n  links:\n    GetIndividualMeDNSRule:\n      operationId: As_ApplicationsDnsRule_GET\n      parameters:\n        dnsRuleId: $response.body#/dnsRuleId\n      description: \"The `dnsRuleId` value returned in the response can be used as\\\n        \\ the `dnsRuleId` parameter in `GET /applications/{appInstanceId}/dns_rules/{dnsRuleId}`\"\n    PutIndividualMeDNSRule:\n      operationId: As_ApplicationsDnsRule_PUT\n      parameters:\n        dnsRuleId: $response.body#/dnsRuleId\n      description: \"The `dnsRuleId` value returned in the response can be used as\\\n        \\ the `dnsRuleId` parameter in `PUT /applications/{appInstanceId}/dns_rules/{dnsRuleId}`\"\n    GetIndividualMeTrafficRule:\n      operationId: As_ApplicationsTrafficRule_GET\n      parameters:\n        trafficRuleId: $response.body#/trafficRuleId\n      description: \"The `trafficRuleId` value returned in the response can be used\\\n        \\ as the `trafficRuleId` parameter in `GET /applications/{appInstanceId}/traffic_rules/{trafficRuleId}`\"\n    PutIndividualMeTrafficRule:\n      operationId: As_ApplicationsTrafficRule_PUT\n      parameters:\n        trafficRuleId: $response.body#/trafficRuleId\n      description: \"The `trafficRuleId` value returned in the response can be used\\\n        \\ as the `trafficRuleId` parameter in `PUT /applications/{appInstanceId}/traffic_rules/{trafficRuleId}`\"\n    GetIndividualmecAppSuptApiSubscription:\n      operationId: As_ApplicationsSubscription_GET\n      parameters:\n        description: \"regex = \\\\/mec_app_support\\\\/v1\\\\/applications\\\\/.*\\\\/subscriptions\\\\\\\n          /.*\\\\/(.*);subscriptionId = href.match(regex)[1];// where \\\"href\\\" is an\\\n          \\ attribute within the subscription attribute within the _links attribute\"\n        subscriptionId: TBC\n      description: \"The `subscriptionId` value returned in the response can be used\\\n        \\ as the `subscriptionId` parameter in `GET /applications/{appInstanceId}/subscriptions/{subscriptionId}`\"\n    DelIndividualmecAppSuptApiSubscription:\n      operationId: As_ApplicationsSubscription_DELETE\n      parameters:\n        description: \"regex = \\\\/mec_app_support\\\\/v1\\\\/applications\\\\/.*\\\\/subscriptions\\\\\\\n          /(.*);subscriptionId = href.match(regex)[1];// where \\\"href\\\" is an attribute\\\n          \\ within the subscription attribute within the _links attribute\"\n        subscriptionId: TBC\n      description: \"The `subscriptionId` value returned in the response can be used\\\n        \\ as the `subscriptionId` parameter in `DELETE /applications/{appInstanceId}/subscriptions/{subscriptionId}`\"\n    GetIndividualmecAppSuptApiSubscriptionLinkList:\n      operationId: As_ApplicationsSubscription_GET\n      parameters:\n        description: \"regex = \\\\/mec_app_support\\\\/v1\\\\/applications\\\\/.*\\\\/subscriptions\\\\\\\n          /(.*);subscriptionId = href.match(regex)[1];// where \\\"href\\\" is an attribute\\\n          \\ within the subscription attribute within the _links attribute\"\n        subscriptionId: TBC\n      description: \"The `subscriptionId` value returned in the response can be used\\\n        \\ as the `subscriptionId` parameter in `GET /applications/{appInstanceId}/subscriptions/{subscriptionId}`\"\n    DelIndividualmecAppSuptApiSubscriptionLinkList:\n      operationId: As_ApplicationsSubscription_DELETE\n      parameters:\n        description: \"regex = \\\\/mec_app_support\\\\/v1\\\\/applications\\\\/.*\\\\/subscriptions\\\\\\\n          /(.*);subscriptionId = href.match(regex)[1];// where \\\"href\\\" is an attribute\\\n          \\ within the subscription attribute within the _links attribute\"\n        subscriptionId: TBC\n      description: \"The `subscriptionId` value returned in the response can be used\\\n        \\ as the `subscriptionId` parameter in `DELETE /applications/{appInstanceId}/subscriptions/{subscriptionId}`\"\n  callbacks:\n    AppTerminationNotification:\n      '{$request.body#/callbackReference}':\n        post:\n          tags:\n          - callbacks\n          description: Represents the information that the MEP notifies the subscribed\n            application instance about the corresponding  application instance termination/stop\n          operationId: As_AppTerminationNotification_POST\n          requestBody:\n            $ref: '#/components/requestBodies/AppTerminationNotification'\n          responses:\n            \"200\":\n              description: \"Expected responses from callback consumer, if it accepts\\\n                \\ the callback\"\n",
			"canonicalURL": "/github.com/InterDigitalInc/AdvantEDGE@f203f7ab4f1cd5983fbbe2963ff72092b6e9b107/-/blob/go-packages/meep-app-support-client/api/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/InterDigitalInc/AdvantEDGE/blob/f203f7ab4f1cd5983fbbe2963ff72092b6e9b107/go-packages/meep-app-support-client/api/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/applications/{appInstanceId}/confirm_termination\": post: responses: 401: contents: unsupported content types: [application/problem+json]",
	"NotImplemented": [
		"unsupported content types"
	]
}