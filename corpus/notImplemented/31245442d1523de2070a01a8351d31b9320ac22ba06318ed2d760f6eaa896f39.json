{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/apache/incubator-ponymail-foal"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "server/openapi.yaml",
			"byteSize": 23199,
			"content": "\nopenapi: 3.0.0\ninfo:\n  version: 1.0.0\n  description: This is the API specifications for interacting with the Pony Mail (Foal) server backend\n  title: Apache Pony Mail Foal API\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\ncomponents:\n  schemas:\n    ActionResponse:\n      properties:\n        message:\n          description: Response text in human readable format\n          example: Email dispatched\n          type: string\n        okay:\n          description: Boolean indicating whether the desired action was completed or not\n          type: boolean\n          example: true\n      required:\n      - message\n      - okay\n    SearchRequest:\n      properties:\n        list:\n          description: The list part of the mailing list(s) to search. Can be * for wildcard search\n          example: dev\n          type: string\n        domain:\n          description: The domain part of the mailing list(s) to search.  Can be * for wildcard search\n          type: string\n          example: lists.example.org\n        date:\n          description: Optional year-month date to search within\n          type: string\n          example: \"2020-08\"\n        s:\n          description: Optional start year-month date to search from\n          type: string\n          example: \"2019-01\"\n        e:\n          description: Optional end year-month date to search to\n          type: string\n          example: \"2021-12\"\n        d:\n          description: |\n            Optional advanced date parameters. There are various options for specifying the date range:\n            - a single month: yyyy-mm\n            - gte (greater than or equal) or lte (less than or equal) a number of Months, weeks, years or days (Mwyd)\n            - dfr=yyyy-mm-dd|dto=yyy-mm-dd - a range of days (inclusive)\n          example: |\n            - \"2019-01\"\n            - \"lte=10d\", \"gte=2y\"\n            - \"dfr=2021-9-21|dto=2021-10-31\"\n          type: string\n        dfrom:\n          description: Optional start date, expressed as days ago. Used with dto.\n          type: string\n          example: 31\n        dto:\n          description: Optional start date, expressed as days to capture starting from dfrom\n          type: string\n          example: 10\n        q:\n          description: \"Free text query to search for. Can use + or - to denote mandatory presence or absence of words\"\n          type: string\n          example: \"apples +oranges -bananas\"\n        header_from:\n          description: \"Optional From: header search for narrowing down results\"\n          type: string\n          example: janedoe@example.org\n        header_subject:\n          description: \"Optional Subject: header search for narrowing down results\"\n          type: string\n          example: \"weekly meeting on friday\"\n        header_body:\n          description: \"Optional body-only search parameters\"\n          type: string\n          example: \"This was a great idea\"\n        header_to:\n          description: \"Optional To: header search for narrowing down results\"\n          type: string\n          example: janedoe@example.org\n      required:\n      - list\n      - domain\n    SingleEmailRequest:\n      properties:\n        id:\n          description: The ID (document id or message-id) of the email to fetch\n          example: \"5wnbldtbbcog0p259jnhvqbkc7nhjt71\"\n          type: string\n        listid:\n          description: The List ID the email must adhere to (only if searching by Message-ID header)\n          example: \"\u003cusers.httpd.apache.org\u003e\"\n          type: string\n      required:\n      - id\n    SingleEmailResponse:\n      properties:\n        attachments:\n          description: List of attachments, if any\n          example: [TBA]\n          type: array\n        cc:\n          description: List of Cc email addresses\n          example: \"\\\"announce@tomcat.apache.org\\\" \u003cannounce@tomcat.apache.org\u003e, \\\"dev@tomcat.apache.org\\\" \u003cdev@tomcat.apache.org\u003e, announce@apache.org\"\n          type: string\n        from:\n          description: The sender address of the email\n          example: \"Asterix build server  \u003cjenkins@asterix-jenkins.ics.uci.edu\u003e\"\n          type: string\n        from_raw:\n          description: The sender address of the email (unedited by Foal)\n          example: \"Asterix build server  \u003cjenkins@asterix-jenkins.ics.uci.edu\u003e\"\n          type: string\n        to:\n          description: The recipient address of the email\n          example: dev@asterixdb.apache.org\n          type: string\n        subject:\n          description: The email subject\n          example: \"Jenkins build is still unstable: asterix-integration-tests ab8375ea\"\n          type: string\n        message-id:\n          description: The original (user-provided) Message-ID of the email\n          example: \"\u003c521062724.28.1506761839312.JavaMail.jenkins@unhygienix.ics.uci.edu\u003e\"\n          type: string\n        id:\n          description: The internal document ID of the email\n          example: r8cmj7vm5n8z5r3xda5ebd\n          type: string\n        mid:\n          description: The internal document ID of the email (backwards compat item)\n          example: r8cmj7vm5n8z5r3xda5ebd\n          type: string\n        epoch:\n          description: The timestamp of the email in UNIX epoch format\n          example: 1506761839\n          type: integer\n        list:\n          description: The list-ID header value\n          example: \"\u003cdev.asterixdb.apache.org\u003e\"\n          type: string\n        list_raw:\n          description: The unedited list-ID header value\n          example: \"\u003cdev.asterixdb.apache.org\u003e\"\n          type: string\n        date:\n          description: The Datetime of the email\n          example: \"2017/09/30 08:57:19\"\n          type: string\n        private:\n          description: Whether the email is privately archived or not\n          example: false\n          type: boolean\n        references:\n          description: \"The References: header of the email\"\n          example: \"\u003c1538859253.27.1506747931378.JavaMail.jenkins@unhygienix.ics.uci.edu\u003e\"\n          type: string\n        in-reply-to:\n          description: \"The In-Reply-To: header of the email\"\n          example: \"\u003c1538859253.27.1506747931378.JavaMail.jenkins@unhygienix.ics.uci.edu\u003e\"\n          type: string\n        body:\n          description: The message body of the email\n          example: \"I like cakes.\\nThe joke you made really made me laugh.\\nBest,\\nJess.\"\n          type: string\n        body_short:\n          description: The message body of the email, truncated to 201 chars\n          example: \"I like cakes.\\nThe joke you made really made me laugh.\\nBest,\\nJess.\"\n          type: string\n        permalinks:\n          description: All IDs that this document is filed and accessible under\n          type: array\n          example: [\"r8cmj7vm5n8z5r3xda5ebd\",\"r67a4b2148dcb782e68da95e2601cce677ad9902ecc87d640508ed9be@\u003cdev.asterixdb.apache.org\u003e\"]\n        dbid:\n          description: \"The Unique (non-deduplicated) identifier for this email, SHA3-256 digest of the raw message\"\n          example: \"08c4e61930db221d869b186707c7177248d227d7372e8d1e4028880b9d214cf1\"\n          type: string\n        gravatar:\n          description: The Gravatar ID (lowercased md5 digest of the sender address) of the sender\n          example: \"69eea47c5083c2e4945a2704fc7b658c\"\n          type: string\n    CompactEmailResponse:\n      properties:\n        from:\n          description: The sender address of the email\n          example: \"Asterix build server  \u003cjenkins@asterix-jenkins.ics.uci.edu\u003e\"\n          type: string\n        subject:\n          description: The email subject\n          example: \"Jenkins build is still unstable: asterix-integration-tests ab8375ea\"\n          type: string\n        message-id:\n          description: The original (user-provided) Message-ID of the email\n          example: \"\u003c521062724.28.1506761839312.JavaMail.jenkins@unhygienix.ics.uci.edu\u003e\"\n          type: string\n        id:\n          description: The internal document ID of the email\n          example: r8cmj7vm5n8z5r3xda5ebd\n          type: string\n        mid:\n          description: The internal document ID of the email (backwards compat item)\n          example: r8cmj7vm5n8z5r3xda5ebd\n          type: string\n        epoch:\n          description: The timestamp of the email in UNIX epoch format\n          example: 1506761839\n          type: integer\n        list:\n          description: The list-ID header value\n          example: \"\u003cdev.asterixdb.apache.org\u003e\"\n          type: string\n        list_raw:\n          description: The unedited list-ID header value\n          example: \"\u003cdev.asterixdb.apache.org\u003e\"\n          type: string\n        private:\n          description: Whether the email is privately archived or not\n          example: false\n          type: boolean\n        body:\n          description: The message body of the email, tuncated to 201 chars\n          example: \"I like cakes.\\nThe joke you made really made me laugh.\\nBest,\\nJess.\"\n          type: string\n        gravatar:\n          description: The Gravatar ID (lowercased md5 digest of the sender address) of the sender\n          example: \"69eea47c5083c2e4945a2704fc7b658c\"\n          type: string\n        children:\n          description: Any child emails (replies)\n          items:\n            $ref: '#/components/schemas/CompactEmailResponse'\n          example: []\n          type: array\n    ThreadResponse:\n      properties:\n        thread:\n          type: object\n          description: The thread as a nested dictionary\n          $ref: '#/components/schemas/CompactEmailResponse'\n        emails:\n          type: array\n          description: Every single email in the thread, as an array\n          items:\n            $ref: '#/components/schemas/CompactEmailResponse'\n    StatsResponse:\n      properties:\n        active_months:\n          description: List of months with activity\n          type: array\n          example:\n            - \n              \"2017-01\": 1\n            - \n              \"2017-02\": 1\n        firstYear:\n          description: The first year found in the search results\n          type: integer\n          example: 2018\n        firstMonth:\n          description: The first month found in the search results\n          type: integer\n          example: 1\n        lastYear:\n          description: The last (most recent) year found within the search results\n          type: integer\n          example: 2021\n        lastMonth:\n          description: The last (most recent) month found in the search results\n          type: integer\n          example: 11\n        hits:\n          description: The total number of emails found in this search\n          type: integer\n          example: 134\n        numparts:\n          description: The total number of participants (authors) within the search result\n          type: integer\n          example: 28\n        no_threads:\n          description: The total number of distinct threads found within the search results\n          type: integer\n          example: 35\n        emails:\n          description: The emails found in this search, as a list of CompactEmailResponse objects\n          type: array\n          items:\n            $ref: '#/components/schemas/CompactEmailResponse'\n        cloud:\n          description: Word cloud as a word=count dictionary\n          type: object\n          example:\n            foo: 25\n            bar: 10\n            baz: 4\n        participants:\n          description: The participants (authors) within the search results, ranked by number of emails authored\n          type: array\n          example:\n            - \n              email: foo@bar.baz\n              name: FOo Bar\n              count: 10\n              gravatar: \"4fa3f0e42e603e5ae1ab627d6690e365\"\n            -\n              email: jane@doe.example.org\n              name: Jane Doe\n              count: 5\n              gravatar: \"7ddfb840a4db40a01ac99d29e82267b0\"\n        searchlist:\n          description: The raw List-ID (if any) of the search parameters\n          type: string\n          example: \"\u003cdev.lists.example.org\u003e\"\n        name:\n          description: The listname part of the search parameters\n          type: string\n          example: dev\n        domain:\n          description: The domain part of the search parameters\n          type: string\n          example: lists.example.org\n        list:\n          description: The full list, in human readable format, of the search parameters\n          type: string\n          example: dev@lists.example.org\n        searchParams:\n          description: The search parameters used in this search\n          type: object\n          example:\n            d: \"gte=2018-01\"\n            q: \"i like cake\"\n            list: dev\n            domain: lists.example.irg\n        thread_struct:\n          description: The threaded representation of the search results, as a list of threads\n          type: array\n          example:\n            -\n              children: []\n              tid: \"1ng5htgrhkbzwzzb\"\n              subject: \"Errored: apache/httpd#1037 (trunk - bafd719)\"\n              tsubject: \"apache/httpd#1037 (trunk…_\u003cdev.httpd.apache.org\u003e\"\n              epoch: 1596279300\n              nest: 1\n          unixtime:\n            description: The server time in UNIX epoch format\n            example: 1506761839\n            type: integer\n    ErrorResponse:\n      properties:\n        okay:\n          description: Whether the action completed (will be false)\n          example: false\n          type: boolean\n        message:\n          description: Response text in human readable format\n          example: The requested action could not be completed...\n          type: string\n      required:\n      - error\n    EmailComposition:\n      properties:\n        to:\n          description: Recipient address\n          example: dev@lists.example.org\n          type: string\n        subject:\n          description: Email subject\n          type: string\n          example: \"RE: advanced debugging\"\n        body:\n          description: Email message body\n          type: string\n          example: |\n            I think this is a great idea.\n            Let's chat on Monday.\n            With regards, Charles.\n        references:\n          description: Message ID of email this reply references (if not direct reply)\n          type: string\n          example: \"\u003cfoo1234@dev.lists.example.org\u003e\"\n        in-reply-to:\n          description: Message ID of the email this is a direct reply to (if any)\n          type: string\n          example: \"\u003cfoo1234@dev.lists.example.org\u003e\"\n      required:\n      - to\n      - subject\n      - body\n  securitySchemes:\n    cookieAuth:\n      in: cookie\n      name: ponymail\n      type: apiKey\npaths:\n  /api/compose.json:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmailComposition'\n        description: Email details\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ActionResponse'\n          description: 200 response\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Unexpected error\n      summary: Compose and dispatch an email to a list\n      security:\n      - cookieAuth: []\n  /api/email.json:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SingleEmailRequest'\n        description: Email details\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SingleEmailResponse'\n          description: 200 Response\n        '404':\n          content:\n            text/plain:\n              example: \"Email not found!\"\n          description: 404 response if email not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: unexpected error\n      security:\n      - cookieAuth: []\n      summary: Fetches a single email and returns it as a JSON object\n  /api/mbox.json:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchRequest'\n        description: Search parameters\n        required: true\n      responses:\n        '200':\n          content:\n            text/plain:\n              example: \"[mbox file contents]\"\n          description: 200 Response\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: unexpected error\n      security:\n      - cookieAuth: []\n      summary: Returns a list or a search result in mbox file format\n  # /api/mgmt.json:\n  #   TBA\n  # /api/oauth.json:\n  #   TBA\n  # /api/pminfo.json:\n  #   TBA\n  # /api/preferences.json:\n  #   TBA\n  /api/source.json:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SingleEmailRequest'\n        description: Email details\n        required: true\n      responses:\n        '200':\n          content:\n            text/plain:\n              example: |\n                From dev-return-5233-apmail-asterixdb-dev-archive=asterixdb.apache.org@asterixdb.apache.org  Sat Sep 30 08:58:08 2017\n                Return-Path: \u003cdev-return-5233-apmail-asterixdb-dev-archive=asterixdb.apache.org@asterixdb.apache.org\u003e\n                Received: (qmail 50072 invoked by uid 500); 30 Sep 2017 08:58:08 -0000\n                Mailing-List: contact dev-help@asterixdb.apache.org; run by ezmlm\n                Precedence: bulk\n                List-Help: \u003cmailto:dev-help@asterixdb.apache.org\u003e\n                List-Unsubscribe: \u003cmailto:dev-unsubscribe@asterixdb.apache.org\u003e\n                List-Post: \u003cmailto:dev@asterixdb.apache.org\u003e\n                List-Id: \u003cdev.asterixdb.apache.org\u003e\n                Reply-To: dev@asterixdb.apache.org\n                Delivered-To: mailing list dev@asterixdb.apache.org\n                Received: (qmail 50057 invoked by uid 99); 30 Sep 2017 08:58:07 -0000\n                Received: from pnap-us-west-generic-nat.apache.org (HELO spamd3-us-west.apache.org) (209.188.14.142)\n                    by apache.org (qpsmtpd/0.29) with ESMTP; Sat, 30 Sep 2017 08:58:07 +0000\n                Received: from localhost (localhost [127.0.0.1])\n                \tby spamd3-us-west.apache.org (ASF Mail Server at spamd3-us-west.apache.org) with ESMTP id 3A2C21808B9\n                \tfor \u003cdev@asterixdb.apache.org\u003e; Sat, 30 Sep 2017 08:58:07 +0000 (UTC)\n                X-Virus-Scanned: Debian amavisd-new at spamd3-us-west.apache.org\n                X-Spam-Flag: NO\n                X-Spam-Score: 1.5\n                X-Spam-Level: *\n                X-Spam-Status: No, score=1.5 tagged_above=-999 required=6.31\n                \ttests=[KAM_LAZY_DOMAIN_SECURITY=1, KAM_LINKBAIT=0.5,\n                \tRP_MATCHES_RCVD=-0.001, URIBL_BLOCKED=0.001] autolearn=disabled\n                Received: from mx1-lw-us.apache.org ([10.40.0.8])\n                \tby localhost (spamd3-us-west.apache.org [10.40.0.10]) (amavisd-new, port 10024)\n                \twith ESMTP id 3VgxbDG3zW9E for \u003cdev@asterixdb.apache.org\u003e;\n                \tSat, 30 Sep 2017 08:58:06 +0000 (UTC)\n                Received: from unhygienix.ics.uci.edu (unhygienix.ics.uci.edu [128.195.14.130])\n                \tby mx1-lw-us.apache.org (ASF Mail Server at mx1-lw-us.apache.org) with ESMTP id 4D7025FCC1\n                \tfor \u003cdev@asterixdb.apache.org\u003e; Sat, 30 Sep 2017 08:58:06 +0000 (UTC)\n                Received: from obelix.ics.uci.edu (localhost [127.0.0.1])\n                \tby unhygienix.ics.uci.edu (Postfix) with ESMTP id 539A4240E6E;\n                \tSat, 30 Sep 2017 01:57:19 -0700 (PDT)\n                Date: Sat, 30 Sep 2017 01:57:19 -0700 (PDT)\n                From: Asterix build server  \u003cjenkins@asterix-jenkins.ics.uci.edu\u003e\n                To: dev@asterixdb.apache.org\n                Message-ID: \u003c521062724.28.1506761839312.JavaMail.jenkins@unhygienix.ics.uci.edu\u003e\n                In-Reply-To: \u003c1538859253.27.1506747931378.JavaMail.jenkins@unhygienix.ics.uci.edu\u003e\n                References: \u003c1538859253.27.1506747931378.JavaMail.jenkins@unhygienix.ics.uci.edu\u003e\n                Subject: Jenkins build is still unstable: asterix-integration-tests ab8375ea\n                MIME-Version: 1.0\n                Content-Type: text/plain; charset=UTF-8\n                Content-Transfer-Encoding: 7bit\n                X-Instance-Identity: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0nz/YYRm0UEuhP+TWwX2ST1fizEpF7HpM4sPcYz2NS87f/HwLueejqBmJC4+jeepHXZ+Jv8mx/RZqsiFpmGNadfrVj5xdvYYYhL+LX6IsquitcGo4czObwwWQ3wInopyASEIqxRi7J6UytN3Fsh6s61qMC7piY42C6FKuqDH3vbnDkTLc8SDdMT9gWSyP9hQTcqcZ76QizLXas6NwvHmUjtNTpxcEsiEcY41b9rUv3810LUs6FQymbPzyZPhTmcRS8841AjfVUbWiSc3ElmKHNxrFA2JmK5S1/xyEeESEaeYHT7daGi2aR1P2G9XtRj5Oj4n7dKo/Xo3cznIN3NNtQIDAQAB\n                X-Jenkins-Job: asterix-integration-tests\n                X-Jenkins-Result: UNSTABLE\n                \n                See \u003chttps://asterix-jenkins.ics.uci.edu/job/asterix-integration-tests/changes\u003e\n          description: 200 Response\n        '404':\n          content:\n            text/plain:\n              example: \"Email not found!\"\n          description: 404 response if email not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: unexpected error\n      security:\n      - cookieAuth: []\n      summary: Fetches the raw mbox source of an email\n  /api/stats.json:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchRequest'\n        description: Search parameters\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatsResponse'\n          description: 200 Response\n        '500':\n          content:\n            text/plain:\n              example: \"The search could not be completed\"\n      security:\n      - cookieAuth: []\n      summary: Searches the archives and returns the results that match\n  /api/thread.json:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SingleEmailRequest'\n        description: Email details\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThreadResponse'\n          description: 200 Response\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: unexpected error\n      security:\n      - cookieAuth: []\n      summary: Fetches an email thread based on a parent email\n",
			"canonicalURL": "/github.com/apache/incubator-ponymail-foal@45a3265015d9a5e565ccfd320075078b7b2c21fe/-/blob/server/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/apache/incubator-ponymail-foal/blob/45a3265015d9a5e565ccfd320075078b7b2c21fe/server/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/source.json\": post: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"cookie security",
		"unsupported content types"
	]
}