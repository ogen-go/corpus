{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/earthref.fiesta/openapi.yaml",
			"byteSize": 16909,
			"content": "openapi: 3.0.1\ninfo:\n  title: EarthRef.org FIESTA API\n  description: |\n    This is a generated connector for [EarthRef.org's FIESTA API v1.2.0](https://api.earthref.org/v1) OpenAPI Specification.\n\n    [EarthRef.org](https://earthref.org) is a geoscience umbrella website for several data repositories.\n    These repositories, unified under the mandate to preserve their respective data and promote scientific collaboration \n    in their fields, are also disparate in their schemata.\n    The Framework for Integrated Earth Science and Technology Applications (FIESTA) project is creating the tools to \n    easily customize and manage these geoscience repositories and the FIESTA API is a core component of that solution.\n\n    # Authentication\n  \n    The API is served over HTTPS thereby making HTTP Basic Authentication secure.\n    The credentials are the username and password of an active EarthRef.org user account and provide access to that user's \n    private workspace in any of EarthRef.org FIESTA repositories.\n  \n  x-ballerina-init-description: |\n    The connector initialization requires setting the API credentials.\n    Create [an EarthRef.org user account](https://earthref.org/) and obtain tokens following [this guide](https://www2.earthref.org/log-in).\n\n  x-ballerina-display:\n    label: EarthRef FIESTA\n    iconPath: \"icon.png\"\n    \n  contact:\n    email: webmaster@earthref.org\n  license:\n    name: MIT License\n    url: https://opensource.org/licenses/MIT\n  version: '1.2.0'\nservers:\n- url: https://api.earthref.org\n\ncomponents:\n  securitySchemes:\n    EarthRef.orgUserAccountCredentials:\n      type: http\n      scheme: basic\n  parameters:\n    repository:\n      name: repository\n      in: path\n      description: Repository\n      required: true\n      schema:\n        type: string\n        enum: [MagIC]\n    contributionID:\n      name: id\n      in: query\n      description: Contribution IDs\n      required: true\n      schema:\n        type: integer\n        minimum: 1\n  responses:\n    unauthorizedError:\n      description: Authentication information is missing or invalid\n      headers:\n        Authenticate:\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorReponse'\n    serverError:\n      description: Server error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorReponse'\n    noMatches:\n      description: No matches found\n      content:\n        {}\n  schemas:\n    messageResponse:\n      type: object\n      required:\n      - message\n      properties:\n        message:\n          type: string\n      example:\n        message: 'Here is a message.'\n    errorReponse:\n      type: object\n      properties:\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/messageResponse'\n      example:\n        errors:\n        - message: 'There was an error.'\n\npaths:\n  /v1/health-check:\n    get:\n      tags:\n      - System\n      summary: Check the health of the API\n      operationId: checkHealth\n      responses:\n        200:\n          description: Health check passed\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                - message\n                properties:\n                  message:\n                    type: string\n                example:\n                  message: 'Healthy'\n        500:\n          description: Health check failed\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                - errors\n                properties:\n                  errors:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                      - message\n                      properties:\n                        message:\n                          type: string\n                      example:\n                        message: 'Health check failed'\n  /v1/authenticate:\n    get:\n      tags:\n      - People\n      summary: Authenticate a username and password\n      operationId: authenticate\n      security: \n      - EarthRef.orgUserAccountCredentials: []\n      responses:\n        200:\n          description: User Record\n          content:\n            text/plain:\n              schema:\n                type: string\n            application/json:\n              schema:\n                required:\n                - name\n        401:\n          $ref: '#/components/responses/unauthorizedError'\n        500:\n          $ref: '#/components/responses/serverError'\n  /v1/{repository}/download:\n    get:\n      tags:\n      - Public Data\n      summary: Download the zip archive of files for one or more public contributions\n      operationId: downloadPublicFiles\n      parameters:\n      - $ref: '#/components/parameters/repository'\n      - name: n_max_contributions\n        in: query\n        description: Maximum number of contributions to download in descending timestamp order\n        schema:\n          type: integer\n          minimum: 1\n          maximum: 100\n          default: 10\n      - name: query\n        in: query\n        description: One or more Elasticsearch query strings to match any data model text field\n          (https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html#query-string-syntax)\n        schema:\n          type: string\n      - name: id\n        in: query\n        description: One or more contribution IDs to match\n        schema:\n          type: array\n          items:\n            type: integer\n            minimum: 1\n      - name: doi\n        in: query\n        description: One or more reference DOIs to match\n        schema:\n          type: array\n          items:\n            type: string\n      - name: contributor_name\n        in: query\n        description: One or more contributor names to match\n        schema:\n          type: array\n          items:\n            type: string\n      responses:\n        200:\n          description: A zip archive of files for the public contributions\n          content:\n            application/zip: {}\n        204:\n          $ref: '#/components/responses/noMatches'\n        500:\n          $ref: '#/components/responses/serverError'\n  /v1/{repository}/data:\n    get:\n      tags:\n      - Public Data\n      summary: Retrieve the data for a public or shared private contribution\n      operationId: getPublicContributionData\n      parameters:\n      - $ref: '#/components/parameters/repository'\n      - name: id\n        in: query\n        description: The ID of the contribution to retrieve\n        schema:\n          type: integer\n          minimum: 1\n      - name: key\n        in: query\n        description: The private key for retrieving a shared contribution\n        schema:\n          type: string\n      responses:\n        200:\n          description: Rows are returned in the format requested by the accept header\n          content:\n            text/plain: {}\n            application/json: {}\n            application/vnd.ms-excel: {}\n        204:\n          $ref: '#/components/responses/noMatches'\n        401:\n          description: Contribution ID and private key do not match\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorReponse'\n        500:\n          $ref: '#/components/responses/serverError'\n  /v1/{repository}/search/{table}:\n    get:\n      tags:\n      - Public Data\n      summary: Retrieve public data rows\n      operationId: getPublicTable\n      parameters:\n      - $ref: '#/components/parameters/repository'\n      - name: table\n        in: path\n        required: true\n        description: Table name\n        schema:\n          type: string\n      - name: n_max_rows\n        in: query\n        description: Max number of rows to return\n        schema:\n          type: integer\n          minimum: 1\n          maximum: 10000\n      - name: from\n        in: query\n        description: Starting record number for paging\n        schema:\n          type: integer\n          minimum: 1\n      - name: query\n        in: query\n        description: One or more Elasticsearch query strings to match any data model text field\n          (https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html)\n        schema:\n          type: array\n          items:\n            type: string\n      responses:\n        200:\n          description: Rows are returned in the format requested by the accept header\n          content:\n            text/plain: {}\n            application/json: {}\n            application/vnd.ms-excel: {}\n        204:\n          $ref: '#/components/responses/noMatches'\n        500:\n          $ref: '#/components/responses/serverError'\n  /v1/{repository}/validate:\n    post:\n      tags:\n      - Public Data\n      summary: Validate a contribution\n      operationId: validateContribution\n      parameters:\n      - $ref: '#/components/parameters/repository'\n      requestBody:\n        description: Request payload\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                filename:\n                  type: array\n                  items:\n                    type: string\n                    format: binary\n      responses:\n        200:\n          description: The validation result was returned.\n          content:\n            application/json:\n              schema:\n                type: object\n        500:\n          $ref: '#/components/responses/serverError'\n  /v1/{repository}/private/download:\n    get:\n      tags:\n      - Private Data\n      summary: Download the zip archive of the files for a private contribution\n      operationId: downloadPrivateFiles\n      security: \n      - EarthRef.orgUserAccountCredentials: []\n      parameters:\n      - $ref: '#/components/parameters/repository'\n      - name: id\n        in: query\n        required: true\n        description: The ID of the contribution to download\n        schema:\n          type: integer\n          minimum: 1\n      responses:\n        200:\n          description: A zip archive of files for the private contribution\n          content:\n            application/zip: {}\n        204:\n          $ref: '#/components/responses/noMatches'\n        401:\n          $ref: '#/components/responses/unauthorizedError'\n        500:\n          $ref: '#/components/responses/serverError'\n  /v1/{repository}/private/data:\n    get:\n      tags:\n      - Private Data\n      summary: Retrieve the data for a private contribution\n      operationId: getPrivateContributionData\n      security: \n      - EarthRef.orgUserAccountCredentials: []\n      parameters:\n      - $ref: '#/components/parameters/repository'\n      - name: id\n        in: query\n        required: true\n        description: The ID of the contribution data to retrieve\n        schema:\n          type: integer\n          minimum: 1\n      responses:\n        200:\n          description: Rows are returned in the format requested by the accept header\n          content:\n            text/plain: {}\n            application/json: {}\n            application/vnd.ms-excel: {}\n        204:\n          $ref: '#/components/responses/noMatches'\n        500:\n          $ref: '#/components/responses/serverError'\n  /v1/{repository}/private/validate:\n    put:\n      tags:\n      - Private Data\n      summary: Validate a private contribution\n      operationId: validatePrivateContribution\n      security: \n      - EarthRef.orgUserAccountCredentials: []\n      parameters:\n      - $ref: '#/components/parameters/repository'\n      - name: id\n        in: query\n        required: true\n        description: The ID of the contribution data to validate\n        schema:\n          type: integer\n          minimum: 1\n      responses:\n        200:\n          description: The validation result was returned.\n          content:\n            application/json:\n              schema:\n                type: object\n        204:\n          $ref: '#/components/responses/noMatches'\n        401:\n          $ref: '#/components/responses/unauthorizedError'\n        500:\n          $ref: '#/components/responses/serverError'\n  /v1/{repository}/private/search/{table}:\n    get:\n      tags:\n      - Private Data\n      summary: Retrieve private data rows\n      operationId: getPrivateTable\n      security: \n      - EarthRef.orgUserAccountCredentials: []\n      parameters:\n      - $ref: '#/components/parameters/repository'\n      - name: table\n        in: path\n        description: Table name\n        required: true\n        schema:\n          type: string\n      - name: n_max_rows\n        in: query\n        description: Max number of rows to return\n        schema:\n          type: integer\n          minimum: 1\n          maximum: 10000\n      - name: from\n        in: query\n        description: Starting record number for paging\n        schema:\n          type: integer\n          minimum: 1\n      - name: query\n        in: query\n        description: One or more Elasticsearch query strings to match any data model text field\n          (https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html)\n        schema:\n          type: array\n          items:\n            type: string\n      responses:\n        200:\n          description: Rows are returned in the format requested by the accept header.\n        204:\n          $ref: '#/components/responses/noMatches'\n        401:\n          $ref: '#/components/responses/unauthorizedError'\n        500:\n          $ref: '#/components/responses/serverError'\n  /v1/{repository}/private:\n    post:\n      tags:\n      - Private Data\n      summary: Create a private contribution\n      operationId: createPrivateContribution\n      security: \n      - EarthRef.orgUserAccountCredentials: []\n      parameters:\n      - $ref: '#/components/parameters/repository'\n      responses:\n        201:\n          description: The private contribution was created.\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                - id\n                properties:\n                  id:\n                    type: integer\n                    minimum: 1\n        204:\n          $ref: '#/components/responses/noMatches'\n        401:\n          $ref: '#/components/responses/unauthorizedError'\n        500:\n          $ref: '#/components/responses/serverError'\n    put:\n      tags:\n      - Private Data\n      summary: Update a private contribution\n      operationId: updatePrivateContribution\n      security: \n      - EarthRef.orgUserAccountCredentials: []\n      parameters:\n      - $ref: '#/components/parameters/repository'\n      - $ref: '#/components/parameters/contributionID'\n      requestBody:\n        description: Request payload        \n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                filename:\n                  type: array\n                  items:\n                    type: string\n                    format: binary\n      responses:\n        202:\n          description: The file(s) were uploaded to the contribution and are being processed.\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                - rowsAdded\n                - rowsChanged\n                - rowsDeleted\n                properties:\n                  rowsAdded:\n                    type: integer\n                    minimum: 0\n                  rowsChanged:\n                    type: integer\n                    minimum: 0\n                  rowsDeleted:\n                    type: integer\n                    minimum: 0\n        204:\n          $ref: '#/components/responses/noMatches'\n        401:\n          $ref: '#/components/responses/unauthorizedError'\n        500:\n          $ref: '#/components/responses/serverError'\n    delete:\n      tags:\n      - Private Data\n      summary: Delete a private contribution\n      operationId: deletePrivateContribution\n      security: \n      - EarthRef.orgUserAccountCredentials: []\n      parameters:\n      - $ref: '#/components/parameters/repository'\n      - $ref: '#/components/parameters/contributionID'\n      responses:\n        200:\n          description: The contribution was deleted.\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                - rowsDeleted\n                properties:\n                  rowsDeleted:\n                    type: integer\n                    minimum: 0\n        204:\n          $ref: '#/components/responses/noMatches'\n        401:\n          $ref: '#/components/responses/unauthorizedError'\n        500:\n          $ref: '#/components/responses/serverError'",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/earthref.fiesta/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/earthref.fiesta/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/{repository}/download\": get: responses: 200: contents: unsupported content types: [application/zip]",
	"NotImplemented": [
		"empty schema",
		"unsupported content types"
	]
}