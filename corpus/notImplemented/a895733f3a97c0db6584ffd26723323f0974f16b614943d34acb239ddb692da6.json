{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/codingsoo/REST_Go"
		},
		"file": {
			"name": "person_openapi.yaml",
			"size": 0,
			"path": "doc/person_openapi.yaml",
			"byteSize": 10477,
			"content": "openapi: 3.0.1\ninfo:\n  title: Quick start project\n  description: Quick start project using Java, Spring boot and MongoDB\n  contact:\n    name: Maxime Beugnet\n    url: https://github.com/MaBeuLux88\n    email: maxime.beugnet@gmail.com\n  license:\n    name: Apache License Version 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0\n  version: 1.0.0\nservers:\n- url: http://localhost:50111/\ntags:\n- name: person-controller\n  description: Person Controller\npaths:\n  /api/person:\n    put:\n      tags:\n      - person-controller\n      summary: putPerson\n      operationId: putPersonUsingPUT\n      requestBody:\n        description: person\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PersonReq'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PersonRes'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: person\n    post:\n      tags:\n      - person-controller\n      summary: postPerson\n      operationId: postPersonUsingPOST\n      requestBody:\n        description: person\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PersonReq'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PersonRes'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: person\n  /api/person/{id}:\n    get:\n      tags:\n      - person-controller\n      summary: getPerson\n      operationId: getPersonUsingGET\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PersonRes'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n    delete:\n      tags:\n      - person-controller\n      summary: deletePerson\n      operationId: deletePersonUsingDELETE\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: integer\n                format: int64\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n  /api/persons:\n    get:\n      tags:\n      - person-controller\n      summary: getPersons\n      operationId: getPersonsUsingGET\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PersonRes'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n    put:\n      tags:\n      - person-controller\n      summary: putPerson\n      operationId: putPersonUsingPUT_1\n      requestBody:\n        description: persons\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/PersonReq'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: integer\n                format: int64\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: persons\n    post:\n      tags:\n      - person-controller\n      summary: postPersons\n      operationId: postPersonsUsingPOST\n      requestBody:\n        description: persons\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/PersonReq'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            '*/*':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PersonRes'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: persons\n    delete:\n      tags:\n      - person-controller\n      summary: deletePersons\n      operationId: deletePersonsUsingDELETE\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: integer\n                format: int64\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n  /api/persons/averageAge:\n    get:\n      tags:\n      - person-controller\n      summary: averageAge\n      operationId: averageAgeUsingGET\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: number\n                format: double\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /api/persons/count:\n    get:\n      tags:\n      - person-controller\n      summary: getCount\n      operationId: getCountUsingGET\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: integer\n                format: int64\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /api/persons/{ids}:\n    get:\n      tags:\n      - person-controller\n      summary: getPersons\n      operationId: getPersonsUsingGET_1\n      parameters:\n      - name: ids\n        in: path\n        description: ids\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PersonRes'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n    delete:\n      tags:\n      - person-controller\n      summary: deletePersons\n      operationId: deletePersonsUsingDELETE_1\n      parameters:\n      - name: ids\n        in: path\n        description: ids\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: integer\n                format: int64\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\ncomponents:\n  schemas:\n    Address:\n      title: Address\n      type: object\n      properties:\n        city:\n          type: string\n        country:\n          type: string\n        number:\n          type: integer\n          format: int32\n        postcode:\n          type: string\n        street:\n          type: string\n    Car:\n      title: Car\n      type: object\n      properties:\n        brand:\n          type: string\n        maxSpeedKmH:\n          type: number\n          format: float\n        model:\n          type: string\n    ObjectIdReq:\n      title: ObjectIdReq\n      type: object\n      properties:\n        timestamp:\n          type: integer\n          format: int32\n    ObjectIdRes:\n      title: ObjectIdRes\n      type: object\n      properties:\n        date:\n          type: string\n          format: date-time\n        timestamp:\n          type: integer\n          format: int32\n    PersonReq:\n      title: PersonReq\n      type: object\n      properties:\n        address:\n          $ref: '#/components/schemas/Address'\n        age:\n          type: integer\n          format: int32\n        cars:\n          type: array\n          items:\n            $ref: '#/components/schemas/Car'\n        createdAt:\n          type: string\n          format: date-time\n        firstName:\n          type: string\n        id:\n          $ref: '#/components/schemas/ObjectIdReq'\n        insurance:\n          type: boolean\n        lastName:\n          type: string\n    PersonRes:\n      title: PersonRes\n      type: object\n      properties:\n        address:\n          $ref: '#/components/schemas/Address'\n        age:\n          type: integer\n          format: int32\n        cars:\n          type: array\n          items:\n            $ref: '#/components/schemas/Car'\n        createdAt:\n          type: string\n          format: date-time\n        firstName:\n          type: string\n        id:\n          $ref: '#/components/schemas/ObjectIdRes'\n        insurance:\n          type: boolean\n        lastName:\n          type: string\n",
			"canonicalURL": "/github.com/codingsoo/REST_Go@ed67007a3d9cc852de4c47d395991f602a381c67/-/blob/doc/person_openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/codingsoo/REST_Go/blob/ed67007a3d9cc852de4c47d395991f602a381c67/doc/person_openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/person/{id}\": get: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}