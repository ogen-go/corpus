{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/factset/enterprise-sdk"
		},
		"file": {
			"name": "FactSetPrices.v1.yaml",
			"size": 0,
			"path": "specs/FactSetPrices.v1.yaml",
			"byteSize": 172296,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.2.1\n  title: FactSet Prices API\n  contact:\n    name: FactSet Research Systems\n    email: api@factset.com\n  description: \u003e\n    Gain access to comprehensive global coverage for Equities \u0026 Fixed Income.\n    Perform quick analytics by controlling the date ranges, currencies, and\n    rolling periods, or simply request Open, High, Low, and Close prices. Easily\n    connect pricing data with other core company data or alternative content\n    sets using FactSet's hub and spoke symbology. \u003cp\u003eEquity and Fund Security\n    types include Common Stock, ADR, GDR, Preferred, Closed-ended Fund, Exchange\n    Traded Fund, Unit, Open-ended Fund, Exchange Traded Fund UVI, Exchange\n    Traded Fund NAV, Preferred Equity, Non-Voting Depositary\n    Receipt/Certificate, Alien/Foreign, Structured Product, and Temporary\n    Instruments. Reference over 180,000+ active and inactive\n    securities.\u003c/p\u003e\u003cp\u003eFixed Income Security Types include Corporate Bonds,\n    Treasury and Agency bonds, Government Bonds, and Municipals.\u003c/p\u003e\nservers:\n  - url: https://api.factset.com/content\n    description: Production\nsecurity:\n  - FactSetApiKey: []\n  - FactSetOAuth2: []\npaths:\n  /factset-prices/v1/prices:\n    get:\n      tags:\n        - Prices\n      summary: Gets end-of-day Open, High, Low, Close for a list of securities.\n      operationId: getSecurityPrices\n      description: \u003e\n        Gets security prices, Open, High, Low, Close, Volume, and currency for a\n        specified date range and frequency. Prices are updated and at different\n        times across the different regions around the globe. The Prices API\n        automatically defaults relative price dates to the local region which is\n        determined by the local region of the requested security id. To learn\n        more about relative dates please visit [OA Page\n        4627](https://my.apps.factset.com/oa/pages/4627)\n\n\n        */prices* endpoint currently supports Long Running asynchronous requests\n        up to **10 minutes** via `batch` parameter. This feature is in **Beta**.\n        **Additional Approvals needed for access**. Id limits increased to\n        **5000 ids** per request using batch parameter.\n      parameters:\n        - $ref: '#/components/parameters/idsBatchMax5000'\n        - $ref: '#/components/parameters/startDate'\n        - $ref: '#/components/parameters/endDate'\n        - $ref: '#/components/parameters/frequency'\n        - $ref: '#/components/parameters/calendar'\n        - $ref: '#/components/parameters/currency'\n        - $ref: '#/components/parameters/adjust'\n        - $ref: '#/components/parameters/batch'\n      responses:\n        '200':\n          description: Array of security prices open, high, low, close, and volume.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/pricesResponse'\n              examples:\n                Price of AAPL as of March 29 2019:\n                  $ref: '#/components/examples/singleSecurityPrices'\n                Prices for AAPL and TSLA as of March 29th 2019:\n                  $ref: '#/components/examples/twoSecuritiesPrices'\n                One Month of Daily Prices for AAPL in March 2019:\n                  $ref: '#/components/examples/oneMonthSecurityPrices'\n        '202':\n          description: Batch request has been accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n              examples:\n                Batch Request Accepted:\n                  $ref: '#/components/examples/BatchStatusAcceptedResponse'\n          headers:\n            Location:\n              description: Path to Batch Request status.\n              schema:\n                type: string\n              example: batch/v1/status?id=2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n      x-factset-different-success-responses: true\n    post:\n      tags:\n        - Prices\n      summary: \u003e-\n        Requests end-of-day Open, High, Low, Close for a large list of\n        securities.\n      description: \u003e\n\n        Gets security prices, Open, High, Low, Close, Volume, and currency for a\n        specified date range and frequency.\n\n\n        */prices* endpoint currently supports Long Running asynchronous requests\n        up to **10 minutes** via `batch` parameter. This feature is in **Beta**.\n        **Additional Approvals needed for access**. Id limits increased to\n        **5000 ids** per request using batch parameter.\n      operationId: getSecurityPricesForList\n      requestBody:\n        required: true\n        description: Request object for `Security` prices.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/pricesRequest'\n            examples:\n              One Year of Daily Prices for Apple and Tesla in 2019:\n                $ref: '#/components/examples/multipleIdsOneYearPost'\n              Single Company Monthly Prices for One Year:\n                $ref: '#/components/examples/singleIdsOneYearMonthlyPost'\n              Price Adjusted for Splits, Spinoffs, and Dividends:\n                $ref: '#/components/examples/priceAdjustedForDividendsMonthlyPost'\n              Batch Request for Prices for APPL and Tesla:\n                $ref: '#/components/examples/BatchPricesRequestPost'\n      responses:\n        '200':\n          description: Array of security prices\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/pricesResponse'\n              examples:\n                Price of AAPL as of March 29 2019:\n                  $ref: '#/components/examples/singleSecurityPrices'\n                Prices for AAPL and TSLA as of March 29th 2019:\n                  $ref: '#/components/examples/twoSecuritiesPrices'\n                One Month of Daily Prices for AAPL in March 2019:\n                  $ref: '#/components/examples/oneMonthSecurityPrices'\n        '202':\n          description: Batch request has been accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchStatusResponse'\n              examples:\n                Batch Request Accepted:\n                  $ref: '#/components/examples/BatchStatusAcceptedResponse'\n          headers:\n            Location:\n              description: Path to Batch Request status.\n              schema:\n                type: string\n              example: batch/v1/status?id=2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n      x-factset-different-success-responses: true\n  /factset-prices/v1/fixed-income:\n    get:\n      tags:\n        - Prices\n      summary: Gets pricing for a list of Fixed Income securities\n      operationId: getFixedSecurityPrices\n      description: \u003e\n        Get BID, MID, ASK, and Issuer Entity ID for a list of Fixed Income\n        Securities as of a requested date range. Available for U.S. Corporate,\n        Treasury and Agency bonds, Municipals, and non-U.S. Corporate and\n        Government bonds. To learn more about Fixed Income Prices database,\n        please review [OA:15995](https://my.apps.factset.com/oa/pages/15995)\n      parameters:\n        - $ref: '#/components/parameters/fixedIds'\n        - $ref: '#/components/parameters/startDate'\n        - $ref: '#/components/parameters/endDate'\n        - $ref: '#/components/parameters/frequencyFi'\n      responses:\n        '200':\n          description: \u003e-\n            Array of Fixed Income Security prices objects for date range\n            requested\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/pricesFixedIncomeResponse'\n              examples:\n                Fixed Income Price of Apple 4.65% 23-FEB-2046:\n                  $ref: '#/components/examples/singleSecurityPricesFixedIncome'\n                Fixed Income Prices for Three Security Types:\n                  $ref: '#/components/examples/multipleSecurityPricesFixedIncome'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n    post:\n      tags:\n        - Prices\n      summary: \u003e-\n        Requests pricing for a list of Fixed Income securities for date range\n        requested\n      description: \u003e\n        Get BID, MID, ASK, and Issuer Entity ID for a list of Fixed Income\n        Securities as of a requested date range. Available for U.S. Corporate,\n        Treasury and Agency bonds, Municipals, and non-U.S. Corporate and\n        Government bonds. To learn more about Fixed Income Prices database,\n        please review [OA:15995](https://my.apps.factset.com/oa/pages/15995)\n      operationId: getFixedSecurityPricesForList\n      requestBody:\n        required: true\n        description: Request object for Fixed Income `Security` prices.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/pricesFixedIncomeRequest'\n            examples:\n              Single Fixed Income Id Request for One Year of Monthly Prices:\n                $ref: '#/components/examples/singleFixedOneYearPost'\n              Fixed Income Single Id Request:\n                $ref: '#/components/examples/multipleFixedPricesPost'\n      responses:\n        '200':\n          description: Array of Fixed Income Security prices objects\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/pricesFixedIncomeResponse'\n              examples:\n                Fixed Income Price of Apple 4.65% 23-FEB-2046:\n                  $ref: '#/components/examples/singleSecurityPricesFixedIncome'\n                Fixed Income Prices for Three Security Types:\n                  $ref: '#/components/examples/multipleSecurityPricesFixedIncome'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n  /factset-prices/v1/references:\n    get:\n      tags:\n        - Reference\n      summary: Gets security reference details for a list of securities\n      operationId: getSecurityReferences\n      description: \u003e\n        Gets security reference details for a list of `ids`, such as Name,\n        Security Type, Currency, Country, Primary Exchange, Local Index, and\n        dates of First and Last Trade.\n      parameters:\n        - $ref: '#/components/parameters/idsMax2000'\n      responses:\n        '200':\n          description: Array of security references objects\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/referencesResponse'\n              examples:\n                Single Company Reference:\n                  $ref: '#/components/examples/singleSecurityReferences'\n                Multiple Company References:\n                  $ref: '#/components/examples/multipleSecurityReferences'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n    post:\n      tags:\n        - Reference\n      summary: Requests security reference details a list of securities\n      description: \u003e\n        Gets security reference details for a large list of `ids`, such as Name,\n        Security Type, Currency, Country, Primary Exchange, Local Index, and\n        dates of First and Last Trade.\n      operationId: getSecurityReferenceForList\n      requestBody:\n        required: true\n        description: Request object for `Security` prices.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/referencesRequest'\n            examples:\n              Multiple Security Reference Request:\n                $ref: '#/components/examples/multipleReferencesPost'\n      responses:\n        '200':\n          description: Array of security prices\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/referencesResponse'\n              examples:\n                Single Company Reference:\n                  $ref: '#/components/examples/singleSecurityReferences'\n                Multiple Company References:\n                  $ref: '#/components/examples/multipleSecurityReferences'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n  /factset-prices/v1/returns:\n    get:\n      tags:\n        - Returns\n      summary: \u003e-\n        Gets Returns for a list of `ids` as of given date range and rolling\n        Period\n      operationId: getSecurityReturns\n      description: \u003e-\n        The simple or compound return for the requested frequency and/or\n        rollingPeriod. Depending on the input parameters the return will adjust\n        accordingly. If you simply use frequency and no rollingPeriod, the\n        return value will represent the frequency period. If you use\n        rollingPeriod, the values will be returned in actual period ends (e.g.\n        actual month, actual week, daily, etc.). General Return Calculation\n        Details found on [Online Assistant Page\n        #8748](https://oa.apps.factset.com/pages/8748)\n      parameters:\n        - $ref: '#/components/parameters/idsMax2000'\n        - $ref: '#/components/parameters/startDate'\n        - $ref: '#/components/parameters/endDate'\n        - $ref: '#/components/parameters/frequency'\n        - $ref: '#/components/parameters/calendar'\n        - $ref: '#/components/parameters/currency'\n        - $ref: '#/components/parameters/dividendAdjust'\n        - $ref: '#/components/parameters/rollingPeriod'\n      responses:\n        '200':\n          description: \u003e-\n            Array of security returns for the requested date range and rolling\n            period\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/returnsResponse'\n              examples:\n                Daily Returns of AAPL for the Year 2019:\n                  $ref: '#/components/examples/dailyReturnsAPPL'\n                Latest 52w Return for AAPL:\n                  $ref: '#/components/examples/52WKReturnAAPL'\n                Latest Month Return for FB, AAPL, NFLX, GOOGL:\n                  $ref: '#/components/examples/fangStocksReturn'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n    post:\n      tags:\n        - Returns\n      summary: Requests security returns for the given date range and rollingPeriod.\n      description: \u003e-\n        The simple or compound return for the requested frequency and/or\n        rollingPeriod. Depending on the input parameters the return will adjust\n        accordingly. If you simply use frequency and no rollingPeriod, the\n        return value will represent the frequency period. If you use\n        rollingPeriod, the values will be returned in actual period ends (e.g.\n        actual month, actual week, daily, etc.). General Return Calculation\n        Details found on [Online Assistant Page\n        #8748](https://oa.apps.factset.com/pages/8748)\n      operationId: getSecurityReturnsForList\n      requestBody:\n        required: true\n        description: Request object for `Security` returns.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/returnsRequest'\n            examples:\n              What is the latest monthly total return for APPL TSLA FB and NFLX:\n                $ref: '#/components/examples/fangStocksReturnPost'\n              Daily Price Changes of AMZN in 2019:\n                $ref: '#/components/examples/dailyPriceChangeAMZNPost'\n      responses:\n        '200':\n          description: \u003e-\n            Array of security returns for the requested date range and rolling\n            period\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/returnsResponse'\n              examples:\n                Daily Returns of AAPL for the Year 2019:\n                  $ref: '#/components/examples/dailyReturnsAPPL'\n                Latest 52w Return for AAPL:\n                  $ref: '#/components/examples/52WKReturnAAPL'\n                Latest Month Return for FB, AAPL, NFLX, GOOGL:\n                  $ref: '#/components/examples/fangStocksReturn'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n  /factset-prices/v1/returns-snapshot:\n    get:\n      tags:\n        - Returns\n      summary: \u003e-\n        Returns the price performance of the security and annualized compound\n        total returns.\n      operationId: getReturnsSnapshot\n      description: \u003e\n        Retrieves various return periods as of a given date for a requested list\n        of securities. This endpoint is very helpful for quickly retrieving a\n        list of pre-calculated returns for application development.\u003cp\u003e Return\n        periods include\n          * oneDay\n          * weekToDate\n          * monthToDate\n          * quarterToDate\n          * yearToDate\n          * oneMonth\n          * threeMonth\n          * sixMonth\n          * nineMonth\n          * oneYear\n          * twoYearAnnualized\n          * threeYearAnnualized\n          * fiveYearAnnualized\n          * tenYearAnnualized\n          * twentyYearAnnualized\n          * thirtyYearAnnualized\n          * ipoToDateAnnualized\n          \u003c/p\u003e\n      parameters:\n        - $ref: '#/components/parameters/idsMax2000'\n        - $ref: '#/components/parameters/dateRs'\n        - $ref: '#/components/parameters/calendar'\n        - $ref: '#/components/parameters/currency'\n        - $ref: '#/components/parameters/dividendAdjustSnapshot'\n      responses:\n        '200':\n          description: Array of returns-snapshot objects for the list of ids requested\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/returnsSnapshotResponse'\n              examples:\n                Return details for IBM-US with compound return type:\n                  $ref: '#/components/examples/singleRSCompundRTResponse'\n                Requesting returns details for Multiple companies with simple return type:\n                  $ref: '#/components/examples/multipleRSSimpleRTResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n    post:\n      tags:\n        - Returns\n      summary: \u003e-\n        Returns the price performance of the security and annualized compound\n        total returns.\n      description: \u003e\n        Retrieves various return periods as of a given date for a requested list\n        of securities. This endpoint is very helpful for quickly retrieving a\n        list of pre-calculated returns for application development.\u003cp\u003e Return\n        periods include\n          * oneDay\n          * weekToDate\n          * monthToDate\n          * quarterToDate\n          * yearToDate\n          * oneMonth\n          * threeMonth\n          * sixMonth\n          * nineMonth\n          * oneYear\n          * twoYearAnnualized\n          * threeYearAnnualized\n          * fiveYearAnnualized\n          * tenYearAnnualized\n          * twentyYearAnnualized\n          * thirtyYearAnnualized\n          * ipoToDateAnnualized\n          \u003c/p\u003e\n      operationId: getReturnsSnapshotForList\n      requestBody:\n        required: true\n        description: Request object for Returns-Snapshot.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/returnsSnapshotRequest'\n            examples:\n              Return details for IBM-US with compound return type:\n                $ref: '#/components/examples/singleRSCompundRT'\n              Requesting returns details for multiple companies with simple return type:\n                $ref: '#/components/examples/multipleRSSimpleRT'\n      responses:\n        '200':\n          description: Array of returns-snapshot objects for the list of ids requested\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/returnsSnapshotResponse'\n              examples:\n                Return details for IBM-US with compound return type:\n                  $ref: '#/components/examples/singleRSCompundRTResponse'\n                Requesting returns details for multiple companies with simple return type:\n                  $ref: '#/components/examples/multipleRSSimpleRTResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n  /factset-prices/v1/dividends:\n    get:\n      tags:\n        - Dividends\n      summary: Gets dividend information for a given date range and list of securities\n      operationId: getSecurityDividends\n      description: \u003e-\n        Get the dividend amounts, dates, types, and flags over a specified date\n        range. You may request future dates to receive information for declared\n        dividends.\n      parameters:\n        - $ref: '#/components/parameters/idsMax1000'\n        - $ref: '#/components/parameters/startDate'\n        - $ref: '#/components/parameters/endDate'\n        - $ref: '#/components/parameters/currency'\n        - $ref: '#/components/parameters/adjust'\n      responses:\n        '200':\n          description: \u003e-\n            Array of security dividend information for a given date range and\n            list of securities\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/dividendsResponse'\n              examples:\n                Three Years of Dividends for AAPL as of 2019:\n                  $ref: '#/components/examples/3yrDividendsAPPL'\n                Latest Dividends for AAPL and AMZN:\n                  $ref: '#/components/examples/latestDividends'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n    post:\n      tags:\n        - Dividends\n      summary: \u003e-\n        Requests dividend information for a given date range and list of\n        securities\n      description: \u003e-\n        Get the dividend amounts, dates, types, and flags over a specified date\n        range\n      operationId: getSecurityDividendsForList\n      requestBody:\n        required: true\n        description: Request object for `Security` dividends.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/dividendsRequest'\n            examples:\n              Request AAPL Dividends in 2019:\n                $ref: '#/components/examples/singleSecurityDividends'\n              Request Latest Dividends of AAPL and MSFT:\n                $ref: '#/components/examples/latestDividendsPost'\n      responses:\n        '200':\n          description: \u003e-\n            Array of dividend information for a given date range and list of\n            securities\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/dividendsResponse'\n              examples:\n                Latest Dividends for AAPL and MSFT:\n                  $ref: '#/components/examples/latestDividends'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n  /factset-prices/v1/splits:\n    get:\n      tags:\n        - Splits\n      summary: Gets full history of security Splits for a list of `ids`\n      operationId: getSecuritySplits\n      description: \u003e-\n        Gets the entire history of splits for a given list of identifiers.\n        Information returned includes the split factor, a plain text comment\n        regarding the type of split, and the event date.\n      parameters:\n        - $ref: '#/components/parameters/idsMax2000'\n      responses:\n        '200':\n          description: Array of security splits\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/splitsResponse'\n              examples:\n                Split History for a Single Security - MSFT:\n                  $ref: '#/components/examples/singleSecuritySplits'\n                Split History for a List of Securities:\n                  $ref: '#/components/examples/multipleSecuritySplits'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n    post:\n      tags:\n        - Splits\n      summary: Requests splits for a list of `ids`\n      description: \u003e-\n        Gets the entire history of splits for a given list of identifiers.\n        Information returned includes the split factor, a plain text comment\n        regarding the type of split, and the event date.\n      operationId: getSecuritySplitsForList\n      requestBody:\n        required: true\n        description: Request object for `Security` split factors.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/splitsRequest'\n            examples:\n              Single Company Daily Prices One Month:\n                $ref: '#/components/examples/splitHistoryMSFTPost'\n              One Year of Monthly Prices for AAPL in 2019:\n                $ref: '#/components/examples/multipleSplitsHistoryPost'\n      responses:\n        '200':\n          description: Array of Splits objects\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/splitsResponse'\n              examples:\n                Splits History for MSFT:\n                  $ref: '#/components/examples/singleSecuritySplits'\n                Split History for a List of Securities:\n                  $ref: '#/components/examples/multipleSecuritySplits'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n  /factset-prices/v1/shares:\n    get:\n      tags:\n        - Shares\n      summary: Gets shares for a list of `ids` as of given date range.\n      operationId: getSecurityShares\n      description: \u003e-\n        Gets security shares for a list of 'ids' and given date range. Share\n        values returned include security-level and company-level.\n      parameters:\n        - $ref: '#/components/parameters/idsMax1000'\n        - $ref: '#/components/parameters/startDate'\n        - $ref: '#/components/parameters/endDate'\n        - $ref: '#/components/parameters/frequency'\n        - $ref: '#/components/parameters/calendar'\n        - $ref: '#/components/parameters/splitAdjust'\n      responses:\n        '200':\n          description: Array of security shares\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/sharesResponse'\n              examples:\n                One Year of Monthly Share Counts for AAPL:\n                  $ref: '#/components/examples/singleSecurityShares'\n                Multiple Security Share Counts as of 2019 Year End - FB, AAPL, NFLX, GOOGL:\n                  $ref: '#/components/examples/multipleSecuritiesShares'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n    post:\n      tags:\n        - Shares\n      summary: Requests shares for a list of `ids` as of given date range.\n      description: \u003e-\n        Gets security shares for a list of 'ids' and given date range. Share\n        values returned include security-level and company-level.\n      operationId: getSecuritySharesForList\n      requestBody:\n        required: true\n        description: Request object for `Security` shares.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/sharesRequest'\n            examples:\n              Request One Year of Monthly Share Counts for AAPL:\n                $ref: '#/components/examples/singleSecuritySharesPost'\n              Request Multiple Security Share Counts as of 2019 Year End - FB, AAPL, NFLX, GOOGL:\n                $ref: '#/components/examples/multipleSecuritiesSharesPost'\n      responses:\n        '200':\n          description: Array of Shares objects\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/sharesResponse'\n              examples:\n                One Year of Monthly Share Counts for AAPL:\n                  $ref: '#/components/examples/singleSecurityShares'\n                Multiple Security Share Counts as of 2019 Year End - FB, AAPL, NFLX, GOOGL:\n                  $ref: '#/components/examples/multipleSecuritiesShares'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n  /factset-prices/v1/market-value:\n    get:\n      tags:\n        - Market Value\n      summary: \u003e-\n        Gets the security level and company level market values for a list of\n        `ids` as of given date range and frequency.\n      operationId: getMarketValue\n      description: \u003e\n        Gets market capitalization of list of ids for the company level,\n        security level, calendar, frequency, and currency for a specified date\n        range.\n      parameters:\n        - $ref: '#/components/parameters/idsMax2000'\n        - $ref: '#/components/parameters/startDate'\n        - $ref: '#/components/parameters/endDate'\n        - $ref: '#/components/parameters/frequency'\n        - $ref: '#/components/parameters/calendar'\n        - $ref: '#/components/parameters/currency'\n      responses:\n        '200':\n          description: Array of company market capitalization values.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/marketValueResponse'\n              examples:\n                Market Value of GOOGL as of July 07 2020:\n                  $ref: '#/components/examples/singleMarketValue'\n                Market Value for AAPL and TSLA as of March 29th 2019:\n                  $ref: '#/components/examples/multipleMarketValues'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n    post:\n      tags:\n        - Market Value\n      summary: Requests the market value for a list of `ids` as of given date range.\n      description: Requests the market value for a list of `ids` as of given date range.\n      operationId: getMarketValueForList\n      requestBody:\n        required: true\n        description: Request object for `Security` market values.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/marketValueRequest'\n            examples:\n              Single Company Market Value:\n                $ref: '#/components/examples/singleMarketValuePost'\n              Multiple Company Market Values:\n                $ref: '#/components/examples/multipleMarketValuePost'\n      responses:\n        '200':\n          description: Array of company market capitalization values.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/marketValueResponse'\n              examples:\n                Market Value of GOOGL as of July 07 2020:\n                  $ref: '#/components/examples/singleMarketValue'\n                Market Value for AAPL and TSLA as of March 29th 2019:\n                  $ref: '#/components/examples/multipleMarketValues'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n  /factset-prices/v1/high-low:\n    get:\n      tags:\n        - High Low\n      summary: \u003e-\n        Gets the price high and price low of securities for a list of `ids` as\n        of given date, period and frequency.\n      operationId: getHighLow\n      description: \u003e\n        For given security(s), gets the high and low prices with the respective\n        dates on which they occurred. This service gives options for fetching\n        the price as of the close or intraday.\n      parameters:\n        - $ref: '#/components/parameters/idsMax2000'\n        - $ref: '#/components/parameters/date'\n        - $ref: '#/components/parameters/period'\n        - $ref: '#/components/parameters/priceType'\n        - $ref: '#/components/parameters/calendar'\n        - $ref: '#/components/parameters/currency'\n        - $ref: '#/components/parameters/adjust'\n      responses:\n        '200':\n          description: Array of price high and price low values.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/highLowResponse'\n              examples:\n                52 week Price High and Price Low of GOOGL-US as of July 07 2020:\n                  $ref: '#/components/examples/singleHighLow'\n                52 week Price High and Price Low for AAPL-US and TSLA-US as of March 07 2020:\n                  $ref: '#/components/examples/multipleHighLow'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n    post:\n      tags:\n        - High Low\n      summary: \u003e-\n        Requests the price high and price low of securities for a list of `ids`\n        as of given date, period and frequency.\n      description: \u003e\n        For given security(s), gets the high and low prices with the respective\n        dates on which they occurred. This service gives options for fetching\n        the price as of the close or intraday.\n      operationId: getHighLowForList\n      requestBody:\n        required: true\n        description: Request object for high low prices.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/highLowRequest'\n            examples:\n              Single Company Market Value:\n                $ref: '#/components/examples/singleHighLowPost'\n              Multiple Company Market Values:\n                $ref: '#/components/examples/multipleHighLowPost'\n      responses:\n        '200':\n          description: Array of company price high and price low values.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/highLowResponse'\n              examples:\n                52 week Price High and Price Low of GOOGL-US as of July 07 2020:\n                  $ref: '#/components/examples/singleHighLow'\n                52 week Price High and Price Low of AAPL-US and TSLA-US as of March 07 2020:\n                  $ref: '#/components/examples/multipleHighLow'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n  /factset-prices/v1/database-rollover:\n    get:\n      summary: Gets the latest relative rollover date for the database.\n      description: \u003e\n        Gets zero relative date and last update time for FactSet databases. The\n        dates represent the date that the rollover event happened; the date and\n        time is in **eastern time zone**.  \u003cp\u003eDepending on the ids requested and\n        their respective regions, a requested startDate or endDate used in the\n        various Prices API may reflect different previous close dates. This\n        relative \"zero\" date, meaning - as of yesterday's close - will vary\n        across global regions. This API is designed to help production systems\n        account for regional rollover dates to know when to trigger their\n        processes for different regions to reflect the latest close. The\n        response gives context for AMERICAS, ASIA PACIFIC, and EUROPE. \u003c/p\u003e\n      tags:\n        - Database Rollover\n      operationId: getDatabaseRollover\n      responses:\n        '200':\n          description: Database rollover data items.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/rolloverResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n    post:\n      summary: Gets the latest relative rollover date for the database.\n      description: \u003e\n        Gets zero relative date and last update time for FactSet databases. The\n        dates represent the date that the rollover event happened; the date and\n        time is in **eastern time zone**.  \u003cp\u003eDepending on the ids requested and\n        their respective regions, a requested startDate or endDate used in the\n        various Prices API may reflect different previous close dates. This\n        relative \"zero\" date, meaning - as of yesterday's close - will vary\n        across global regions. This API is designed to help production systems\n        account for regional rollover dates to know when to trigger their\n        processes for different regions to reflect the latest close. The\n        response gives context for AMERICAS, ASIA PACIFIC, and EUROPE. \u003c/p\u003e\n      tags:\n        - Database Rollover\n      operationId: getDatabaseRolloverForList\n      responses:\n        '200':\n          description: Database rollover data items.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/rolloverResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\ncomponents:\n  securitySchemes:\n    FactSetOAuth2:\n      type: oauth2\n      flows:\n        clientCredentials:\n          tokenUrl: https://auth.factset.com/as/token.oauth2\n          scopes: {}\n    FactSetApiKey:\n      type: http\n      scheme: basic\n  parameters:\n    idsBatchMax5000:\n      name: ids\n      in: query\n      schema:\n        type: array\n        items:\n          type: string\n      required: true\n      explode: false\n      description: \u003e-\n        The requested list of security identifiers. Accepted ID types include\n        Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\u003cp\u003e***ids\n        limit** =  2000 per non-batch request / 5000 per batch request*\u003c/p\u003e\n        *\u003cp\u003eMake note, GET Method URL request lines are also limited to a total\n        length of 8192 bytes (8KB). In cases where the service allows for\n        thousands of ids, which may lead to exceeding this request line limit of\n        8KB, its advised for any requests with large request lines to be\n        requested through the respective \"POST\" method.\u003c/p\u003e*\n      examples:\n        oneEquityId:\n          summary: One Equity Market Identifier\n          value:\n            - AAPL-USA\n        multipleEquityIds:\n          summary: Multiple Equity Market Identifiers\n          value:\n            - FDS-US\n            - AAPL-US\n            - MSFT-US\n    idsMax2000:\n      name: ids\n      in: query\n      schema:\n        type: array\n        items:\n          type: string\n        minItems: 1\n        maxItems: 2000\n      required: true\n      explode: false\n      description: \u003e-\n        The requested list of security identifiers. Accepted ID types include\n        Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\n        \u003cp\u003e***ids limit** =  2000 per request*\u003c/p\u003e *\u003cp\u003eMake note, GET Method URL\n        request lines are also limited to a total length of 8192 bytes (8KB). In\n        cases where the service allows for thousands of ids, which may lead to\n        exceeding this request line limit of 8KB, its advised for any requests\n        with large request lines to be requested through the respective \"POST\"\n        method.\u003c/p\u003e*\n      examples:\n        oneEquityId:\n          summary: One Equity Market Identifier\n          value:\n            - AAPL-USA\n        multipleEquityIds:\n          summary: Multiple Equity Market Identifiers\n          value:\n            - FDS-US\n            - AAPL-US\n            - MSFT-US\n    idsMax1000:\n      name: ids\n      in: query\n      schema:\n        type: array\n        items:\n          type: string\n        minItems: 1\n        maxItems: 1000\n      required: true\n      explode: false\n      description: \u003e-\n        The requested list of security identifiers. Accepted ID types include\n        Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\n        \u003cp\u003e***ids limit** =  1000 per request*\u003c/p\u003e *\u003cp\u003eMake note, GET Method URL\n        request lines are also limited to a total length of 8192 bytes (8KB). In\n        cases where the service allows for thousands of ids, which may lead to\n        exceeding this request line limit of 8KB, its advised for any requests\n        with large request lines to be requested through the respective \"POST\"\n        method.\u003c/p\u003e*\n      examples:\n        oneEquityId:\n          summary: One Equity Market Identifier\n          value:\n            - AAPL-USA\n        multipleEquityIds:\n          summary: Multiple Equity Market Identifiers\n          value:\n            - FDS-US\n            - AAPL-US\n            - MSFT-US\n    fixedIds:\n      name: ids\n      in: query\n      schema:\n        type: array\n        items:\n          type: string\n        minItems: 1\n        maxItems: 2000\n      required: true\n      explode: false\n      description: \u003e-\n        The requested list of Fixed Income security identifiers. \u003cp\u003e***ids\n        limit** =  2000 per request*\u003c/p\u003e *\u003cp\u003eMake note, GET Method URL request\n        lines are also limited to a total length of 8192 bytes (8KB). In cases\n        where the service allows for thousands of ids, which may lead to\n        exceeding this request line limit of 8KB, its advised for any requests\n        with large request lines to be requested through the respective \"POST\"\n        method.\u003c/p\u003e*\n      examples:\n        oneFixedId:\n          summary: One Fixed Income Identifier\n          value:\n            - 037833BX\n        multipleFixedIds:\n          summary: Multiple Fixed Income Identifiers and Types\n          value:\n            - 037833BX\n            - 853207EZ\n            - 9127963H\n    startDate:\n      name: startDate\n      in: query\n      required: false\n      schema:\n        type: string\n      description: \u003e\n        The start date requested for a given date range in **YYYY-MM-DD**\n        format. If left blank, the API will default to previous close. Future\n        dates (T+1) are not accepted in this endpoint.\n      example: '2019-01-01'\n    endDate:\n      name: endDate\n      in: query\n      required: false\n      schema:\n        type: string\n      description: \u003e\n        The end date requested for a given date range in **YYYY-MM-DD** format.\n        If left blank, the API will default to previous close. Future dates\n        (T+1) are not accepted in this endpoint.\n      example: '2019-12-31'\n    date:\n      name: date\n      in: query\n      required: false\n      schema:\n        type: string\n      description: \u003e\n        The as of date in **YYYY-MM-DD** format. This controls the perspective\n        date in which the period parameter will be computed. If left blank, the\n        API will default to previous close. Future dates (T+1) are not accepted\n        in this endpoint.\n      example: '2019-07-07'\n    dateRs:\n      name: date\n      in: query\n      required: false\n      schema:\n        type: string\n      description: \u003e\n        The date in **YYYY-MM-DD** format. This controls the perspective dates\n        to the calculate the returns. If left blank, the API will default to\n        previous close. Future dates (T+1) are not accepted in this endpoint.\n      example: '2019-07-07'\n    frequency:\n      name: frequency\n      in: query\n      schema:\n        type: string\n        enum:\n          - D\n          - W\n          - M\n          - AM\n          - CQ\n          - FQ\n          - AY\n          - CY\n          - FY\n        default: D\n      description: |\n        Controls the display frequency of the data returned.\n          * **D** = Daily\n          * **W** = Weekly, based on the last day of the week of the start date.\n          * **M** = Monthly, based on the last trading day of the month.\n          * **AM** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n          * **CQ** = Quarterly based on the last trading day of the calendar quarter (March, June, September, or December).\n          * **FQ** = Fiscal Quarter of the company.\n          * **AY** = Actual Annual, based on the start date.\n          * **CY** = Calendar Annual, based on the last trading day of the calendar year.\n          * **FY** = Fiscal Annual, based on the last trading day of the company's fiscal year.\n      examples:\n        Daily:\n          summary: D - Daily frequency display based on trading calendar\n          value: D\n        Weekly:\n          summary: W - Weekly - based on the last day of the week of the start date\n          value: W\n        Monthly:\n          summary: M - Monthly - based on the last trading day of the month.\n          value: M\n        Actual Month:\n          summary: \u003e-\n            AM - Actual Month - based on the startDate (e.g., if the start date\n            is June 16, data is displayed for June 16, May 16, April 16 etc.).\n          value: AM\n        Calendar Quarterly:\n          summary: \u003e-\n            CQ - Calendar Quarterly - based on the last day of the week of the\n            startDate\n          value: CQ\n        Fiscal Quarterly:\n          summary: FQ - Fiscal Quarter of the company\n          value: FQ\n        Actual Annual:\n          summary: AY - Actual Annual - based on the startDate\n          value: AY\n        Calendar Annual:\n          summary: \u003e-\n            CY - Calendar Annual - based on the last trading day of the calendar\n            year.\n          value: CY\n        Fiscal Annual:\n          summary: \u003e-\n            FY - Fiscal Annual - based on the last trading day of the company's\n            fiscal year.\n          value: FY\n    frequencyFi:\n      name: frequency\n      in: query\n      schema:\n        type: string\n        enum:\n          - D\n          - M\n          - AM\n          - MTD\n          - CQ\n          - CQTD\n          - AY\n          - CY\n          - CYTD\n        default: D\n      description: |\n        Controls the display frequency of the data returned.\n          * **D** = Daily\n          * **M** = Monthly, based on the last trading day of the month.\n          * **AM** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n          * **MTD** = Month-to-date\n          * **CQ** = Quarterly based on the last trading day of the calendar quarter (March, June, September, or December).\n          * **CQTD** =  Calendar quarter-to-date\n          * **AY** = Actual Annual, based on the start date.\n          * **CY** = Calendar Annual, based on the last trading day of the calendar year.\n          * **CYTD** = Calendar Year-to-date.\n      examples:\n        Daily:\n          summary: D - Daily frequency display based on trading calendar\n          value: D\n        Month-to-date:\n          summary: MTD - Month-to-date\n          value: MTD\n        Monthly:\n          summary: M - Monthly - based on the last trading day of the month.\n          value: M\n        Actual Month:\n          summary: \u003e-\n            AM - Actual Month - based on the startDate (e.g., if the start date\n            is June 16, data is displayed for June 16, May 16, April 16 etc.).\n          value: AM\n        Calendar Quarterly:\n          summary: \u003e-\n            CQ - Calendar Quarterly - based on the last day of the week of the\n            startDate\n          value: CQ\n        Calendar quarter-to-date:\n          summary: CQTD - Calendar quarter-to-date\n          value: CQTD\n        Actual Annual:\n          summary: AY - Actual Annual - based on the startDate\n          value: AY\n        Calendar Annual:\n          summary: \u003e-\n            CY - Calendar Annual - based on the last trading day of the calendar\n            year.\n          value: CY\n        Calendar Year-to-date:\n          summary: CYTD - Calendar Year-to-date\n          value: CYTD\n    calendar:\n      name: calendar\n      in: query\n      schema:\n        type: string\n        enum:\n          - FIVEDAY\n          - SEVENDAY\n          - LOCAL\n        default: FIVEDAY\n      description: \u003e-\n        Calendar of data returned. SEVENDAY includes weekends. LOCAL calendar\n        will default to the securities' trading calendar which excludes date\n        records for respective holiday periods.\n      example: FIVEDAY\n    currency:\n      name: currency\n      in: query\n      schema:\n        type: string\n      description: \u003e-\n        Currency code for adjusting prices. Default is Local. For a list of\n        currency ISO codes, visit [Online Assistant Page\n        1470](https://oa.apps.factset.com/pages/1470).\n      example: USD\n    adjust:\n      name: adjust\n      in: query\n      schema:\n        type: string\n        enum:\n          - SPLIT\n          - SPINOFF\n          - DIVADJ\n          - UNSPLIT\n        default: SPLIT\n      description: \u003e\n        Controls the split, spinoff, and dividend adjustments for the prices.\n        \u003cp\u003eFor more information, visit [Online Assistant Page\n        614](https://oa.apps.factset.com/pages/614)\u003c/p\u003e\n          * **SPLIT** = Split ONLY Adjusted. This is used by default.\n          * **SPINOFF** = Splits \u0026 Spinoff Adjusted.\n          * **DIVADJ** = Splits, Spinoffs, and Dividends adjusted.\n          * **UNSPLIT** = No Adjustments.\n      examples:\n        split:\n          summary: \u003e-\n            Split adjusted by default - accounts for splits over security's\n            history.\n          value: SPLIT\n        spinoff:\n          summary: \u003e-\n            Spinoff Adjusted - accounts for a company's spinoff. Spinoffs are\n            treated as special dividends.\n          value: SPINOFF\n        Dividend Adjusted:\n          summary: Dividend Adjusted\n          value: DIVADJ\n        Unsplit:\n          summary: Unsplit data - overrides the default split adjustment\n          value: UNSPLIT\n    dividendAdjust:\n      name: dividendAdjust\n      in: query\n      schema:\n        type: string\n        enum:\n          - PRICE\n          - EXDATE\n          - PAYDATE\n          - EXDATE_C\n          - PAYDATE_C\n        default: PRICE\n      required: false\n      description: |\n        Controls the dividend reinvestment for the returns calculation.\n          * **PRICE** = Price Change - Dividends Excluded\n          * **EXDATE** = Simple Return - Dividends Received on exdate but not reinvested\n          * **PAYDATE** = Simple Return - Dividends Received on paydate but not reinvested\n          * **EXDATE_C** = Compound Return - Dividends reinvested on exdate\n          * **PAYDATE_C** = Compound Return - Dividends reinvested on paydate.\n    splitAdjust:\n      name: splitAdjust\n      in: query\n      description: Code to control split adjustments for shares count.\n      required: false\n      schema:\n        type: string\n        enum:\n          - SPLIT\n          - UNSPLIT\n        default: SPLIT\n    rollingPeriod:\n      name: rollingPeriod\n      in: query\n      description: \u003e-\n        Period of measure for the rolling cumulative return. This does not\n        change display `frequency` but rather the underlying return calculation\n        period. All periods are referencing actual periods of measure, not\n        period-ends. For example, 1M rolling period will go back to that date\n        the previous month, which is not always the month-end date.\n      required: false\n      schema:\n        type: string\n        enum:\n          - 1D\n          - 1W\n          - 1M\n          - 3M\n          - 6M\n          - 52W\n          - 2Y\n          - 3Y\n          - 5Y\n          - 10Y\n    period:\n      name: period\n      in: query\n      description: \u003e\n        The period of measure for the security's high and low pricing. This does\n        not change display `frequency` but rather the underlying period. For\n        example, if you wish to fetch the latest 52 week high and low price,\n        select 52W. All periods are referencing actual periods of measure, not\n        period-ends where-\n\n          * **D** = Daily\n          * **W** = Weekly, based on the last trading day of the week. Use the 52W for representing the latest year.\n          * **M** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n          * **YTD** = Year-to-Date\n          * **Y** =  Actual Annual, based on the start date.\n      required: false\n      schema:\n        type: string\n        enum:\n          - 1D\n          - 1W\n          - 1M\n          - 3M\n          - 6M\n          - YTD\n          - 52W\n          - 2Y\n          - 3Y\n          - 5Y\n          - 10Y\n        default: 52W\n    priceType:\n      name: priceType\n      in: query\n      description: \u003e\n        Controls whether price high and low data is returned intraday or at the\n        close. For example, by selecting INTRADAY, if a security price reached\n        an all time high of 10 during trading hours over the period of measure\n        but closed that day at 8, then the service will return 10. If CLOSE was\n        selected the service would return 8 if that was the high for the period\n        measured.\n      required: false\n      schema:\n        type: string\n        enum:\n          - INTRADAY\n          - CLOSE\n        default: CLOSE\n    dividendAdjustSnapshot:\n      name: dividendAdjust\n      in: query\n      description: \u003e\n        Controls the dividend reinvestment for the returns calculation.\n        Dividends will be reinvested on the date the dividends go ex (when the\n        dividends belong to the seller rather than the buyer). Visit [OA\n        8748](https://my.apps.factset.com/oa/pages/8748) for calculation\n        methodology.\n          * **PRICE** = Price Change - Dividends Excluded.\n          * **EXDATE** = Simple Return - Dividends Received on exdate but not reinvested. Dividends accumulated throughout the specified period are added to the price at the end of the period.\n          * **EXDATE_C** = Compound Return - Dividends reinvested on exdate. Dividends accumulated throughout the specified period are used to buy more shares of stock in the company.\n      required: false\n      schema:\n        type: string\n        enum:\n          - PRICE\n          - EXDATE\n          - EXDATE_C\n        default: PRICE\n    batch:\n      name: batch\n      in: query\n      description: \u003e\n        Enables the ability to asynchronously \"batch\" the request, supporting a\n        long-running request up to **10 minutes**. Upon requesting batch=Y, the\n        service will respond back with an HTTP Status Code of 202.\n\n\n        **`batch` is currently in **BETA**. Additional Access Required. To gain\n        access to this feature, reach out to your FactSet Account team or\n        \"Report Issue\" above and our support teams can assist.**\n\n\n        Once a batch request is submitted, use `batch/v1/status` to see if the\n        job has completed. Once completed, retrieve the results of the request\n        via `batch/v1/result`. See [Batching\n        API](https://developer.factset.com/api-catalog/factset-content-api-batch)\n        for more details.\n\n\n        When using Batch, `ids` limit is increased to **5000** ids per request,\n        though limits on query string via GET method still apply. It's advised\n        to submit large lists of ids via POST method.\n      schema:\n        type: string\n        enum:\n          - 'Y'\n          - 'N'\n        default: 'N'\n  schemas:\n    pricesRequest:\n      title: Prices Request Body\n      description: Prices Request Body\n      type: object\n      properties:\n        ids:\n          $ref: '#/components/schemas/idsBatchMax5000'\n        startDate:\n          $ref: '#/components/schemas/startDate'\n        endDate:\n          $ref: '#/components/schemas/endDate'\n        frequency:\n          $ref: '#/components/schemas/frequency'\n        currency:\n          $ref: '#/components/schemas/requestCurrency'\n        calendar:\n          $ref: '#/components/schemas/calendar'\n        adjust:\n          $ref: '#/components/schemas/adjust'\n        batch:\n          $ref: '#/components/schemas/batch'\n      required:\n        - ids\n    pricesResponse:\n      type: object\n      title: Prices Response\n      properties:\n        data:\n          description: Array of Price Objects\n          type: array\n          items:\n            $ref: '#/components/schemas/price'\n    price:\n      title: Price Object\n      type: object\n      properties:\n        fsymId:\n          description: \u003e-\n            Factset Regional Security Identifier. Six alpha-numeric characters,\n            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the\n            security's best regional security data series per currency. For\n            equities, all primary listings per region and currency are allocated\n            a regional-level permanent identifier. The regional-level permanent\n            identifier will be available once a SEDOL representing the\n            region/currency has been allocated and the identifiers are on\n            FactSet.\n          type: string\n          example: SJY281-R\n        date:\n          description: Ending date for the period expressed in YYYY-MM-DD format.\n          type: string\n          format: date\n          example: '2013-08-01'\n        adjDate:\n          description: \u003e-\n            Date of last split for which prices and volume have been adjusted.\n            Use /factset-prices/v#/splits endpoint for details regarding the\n            split.\n          type: string\n          format: date\n          example: '2005-02-07'\n        currency:\n          type: string\n          description: \u003e-\n            Currency ISO code. For more details, visit [Online Assistant Page\n            #1470](https://oa.apps.factset.com/pages/1470).\n          example: USD\n        price:\n          type: number\n          format: double\n          description: \u003e-\n            Closing Price as of the date(s) requested. By default the price is\n            in local trading currency, split adjusted and not spinoff adjusted.\n            Prices updated nightly at approximately at 9pm ET.\n          example: 125\n        priceOpen:\n          description: \u003e-\n            Open price as of the date(s) requested. By default the price is in\n            local trading currency, split adjusted and not spinoff adjusted.\n            Prices updated nightly at approximately at 9pm ET.\n          type: number\n          format: double\n          example: 123.75\n        priceHigh:\n          description: \u003e-\n            High closing price as of the date(s) requested. By default the price\n            is in local trading currency, split adjusted and not spinoff\n            adjusted.  Prices updated nightly at approximately at 9pm ET.\n          type: number\n          format: double\n          example: 126\n        priceLow:\n          description: \u003e-\n            Low closing price as of the date(s) requested. By default the price\n            is in local trading currency, split adjusted and not spinoff\n            adjusted.  Prices updated nightly at approximately at 9pm ET.\n          type: number\n          format: double\n          example: 121.25\n        volume:\n          description: \u003e-\n            Returns the cumulative volume over dates requested. Data is returned\n            in thousands.\n          type: number\n          format: double\n          example: 120341\n        requestId:\n          description: Identifier that was used for the request.\n          type: string\n          example: IBM-US\n    pricesFixedIncomeRequest:\n      title: Fixed Income Request Body\n      description: Fixed Income Request Body\n      type: object\n      properties:\n        ids:\n          $ref: '#/components/schemas/fixedIds'\n        startDate:\n          $ref: '#/components/schemas/startDate'\n        endDate:\n          $ref: '#/components/schemas/endDate'\n        frequency:\n          $ref: '#/components/schemas/frequencyFi'\n      required:\n        - ids\n    pricesFixedIncomeResponse:\n      type: object\n      title: Fixed Income Prices Response\n      properties:\n        data:\n          description: Array of Price Objects\n          type: array\n          items:\n            $ref: '#/components/schemas/fixedIncomePrice'\n    fixedIncomePrice:\n      title: Fixed Income Price Object\n      type: object\n      properties:\n        fsymId:\n          description: \u003e-\n            Factset Security Identifier. Six alpha-numeric characters, excluding\n            vowels, with an -S suffix (XXXXXX-S).\n          type: string\n          example: NL6DQ8-S\n        date:\n          description: Ending date for the period expressed in YYYY-MM-DD format.\n          type: string\n          format: date\n          example: '2020-06-09'\n        securityType:\n          description: |\n            Returns the security type code of fixed income instruments.\n              * AGCY - Agency\n              * BDNT - Bond/Note\n              * BDWT  - Bond with Warrants\n              * BKAC  - Bankers Acceptance\n              * BLDN - Bill/Discount Note\n              * BOND  - Bond\n              * CAP  - Embedded ceiling or short interest rates\n              * CAPS - Capital Security\n              * CAPT - Capital Trust Security\n              * CD - Certificate of Deposit (Munis)\n              * CDO - Collateralized Debt Obligation\n              * CMO  - Collateralized mortgage obligation\n              * COMP - Commercial Paper\n              * CONV - Convertible/Exchangeable\n              * CONVP - Convertible Preferred\n              * CORP - Corporate\n              * COVR - Covered Bond\n              * CP  - Commercial Paper\n              * CRL - Credit Linked Security\n              * DEB - Debenture\n              * DERI  - Derivative (generic type)\n              * EBON - Eurobond\n              * EQL - Equity Linked Security\n              * FORW  - Forward deliveries\n              * GRTR  - Grantor trust\n              * HY - Hypotheken Pfandbriefe\n              * IIDX - Inflation Indexed Security\n              * INVF  - Inverse floaters\n              * LAUTH - Local Authority/Political Division\n              * LINK  - Linked securities\n              * LKS - Linked Securities\n              * MAPL - Mixed Asset Portfolio Linked Security\n              * MM - Money Market\n              * NOTE  - Note\n              * OF - Obligations FonciÃres\n              * OPTN  - Options\n              * OTHL - Other Linked Security\n              * PAYS  - Payment streams\n              * PFD - Preferred\n              * PFND - Pfandbriefe\n              * POOL  - Pooled derivatives\n              * PSEC - Preferred Security\n              * PSTK - Preferred Stock\n              * REPO  - REPOS\n              * RMIC  - REMIC\n              * SHFL  - Short floats (auction)\n              * STRIPS - STRIPS\n              * SWAP  - Embedded swaps\n              * TR  - Trust\n              * TRUPS - Trust Preferred Security\n          type: string\n          example: BDNT\n        issuerEntityId:\n          description: Fixed Income Issuer Entity ID (-E).\n          type: string\n          example: 000C7F-E\n        issuerType:\n          description: |\n            Returns the issuer type code of fixed income instruments.\n              * AGCY - Agency\n              * CORP - Corporate\n              * LAUTH - Local Authority/Political Division\n              * MUNI - Municipals\n              * SOV - Sovereign\n              * SUPR - Supranational\n              * SCOL - Securitized/Collateralized\n          type: string\n          example: CORP\n        priceBid:\n          description: \u003e-\n            BID PRICE. For North American issues, the value is an evaluated\n            price, where available, else it is an exchange-traded price. Please\n            note that distinct Bid and Ask Prices are not available for North\n            American issues; Bid, Mid, and Ask Prices will be identical for\n            North American issues. For issues outside of North America\n            (International), the value is an evaluated price. Please note that\n            distinct Bid and Ask Prices are only available for issues outside of\n            North America. By default, the Mid Price is returned for issues\n            outside of North America.\n          type: number\n          format: double\n          example: 134.959\n        priceMid:\n          description: \u003e-\n            MID Price. For North American issues, the value is an evaluated\n            price, where available, else it is an exchange-traded price. Please\n            note that distinct Bid and Ask Prices are not available for North\n            American issues; Bid, Mid, and Ask Prices will be identical for\n            North American issues. For issues outside of North America\n            (International), the value is an evaluated price. Please note that\n            distinct Bid and Ask Prices are only available for issues outside of\n            North America. By default, the Mid Price is returned for issues\n            outside of North America.\n          type: number\n          format: double\n          example: 137.695\n        priceAsk:\n          description: \u003e-\n            ASK Price. For North American issues, the value is an evaluated\n            price, where available, else it is an exchange-traded price. Please\n            note that distinct Bid and Ask Prices are not available for North\n            American issues; Bid, Mid, and Ask Prices will be identical for\n            North American issues. For issues outside of North America\n            (International), the value is an evaluated price. Please note that\n            distinct Bid and Ask Prices are only available for issues outside of\n            North America. By default, the Mid Price is returned for issues\n            outside of North America.\n          type: number\n          format: double\n          example: 134.959\n        requestId:\n          description: Identifier that was used for the request.\n          type: string\n          example: 037833BX\n    referencesRequest:\n      title: References Request Body\n      description: References Request Body\n      type: object\n      properties:\n        ids:\n          $ref: '#/components/schemas/idsMax2000'\n      required:\n        - ids\n    referencesResponse:\n      type: object\n      title: References Response\n      properties:\n        data:\n          description: Array of References Objects\n          type: array\n          items:\n            $ref: '#/components/schemas/references'\n    references:\n      title: References Object\n      type: object\n      properties:\n        fsymId:\n          description: \u003e-\n            Factset Regional Security Identifier. Six alpha-numeric characters,\n            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the\n            security's best regional security data series per currency. For\n            equities, all primary listings per region and currency are allocated\n            a regional-level permanent identifier. The regional-level permanent\n            identifier will be available once a SEDOL representing the\n            region/currency has been allocated and the identifiers are on\n            FactSet.\n          type: string\n          example: HTM0LK-R\n        name:\n          description: The name of the security.\n          type: string\n          example: ALPHABET INC\n        secType:\n          type: string\n          description: \u003e-\n            Security Type Description. For more details, visit [Online Assistant\n            Page #10149](https://oa.apps.factset.com/pages/10149).\n          example: Common stock\n        secTypeCode:\n          type: string\n          description: \u003e-\n            General Security Type Code. For more details regarding what the code\n            represents, visit [Online Assistant Page\n            #10149](https://oa.apps.factset.com/pages/10149).\n          example: '0'\n        secTypeCodeDet:\n          type: string\n          description: \u003e-\n            Detailed Security Type Code. For more details regarding what the\n            code represents, visit [Online Assistant Page\n            #10149](https://oa.apps.factset.com/pages/10149).\n          example: '10'\n        currency:\n          type: string\n          description: \u003e-\n            Currency ISO code. For more details, visit [Online Assistant Page\n            #1470](https://oa.apps.factset.com/pages/1470).\n          example: USD\n        country:\n          type: string\n          description: \u003e-\n            Country Name. Returns the country where the security is *traded*\n            from the North American Pricing database. Therefore, for securities\n            covered by the North American Pricing database, will return either\n            UNITED STATES. or CANADA. For securities covered by the Global\n            Pricing database, the item returns the country where the company is\n            *incorporated*.\n          example: UNITED STATES\n        primaryExchange:\n          type: string\n          description: \u003e-\n            Primary Exchange Name. For more details, visit [Online Assistant\n            Page #16610](https://oa.apps.factset.com/pages/16610).\n          example: NASDAQ\n        exchangeCountry:\n          type: string\n          description: \u003e-\n            Returns the location of the exchange where the company's stock is\n            traded.\n          example: UNITED STATES\n        localIndex:\n          type: string\n          description: \u003e-\n            The Local Index ID for the company's home country benchmark. For\n            more details, visit [Online Assistant Page\n            #10698](https://oa.apps.factset.com/pages/10698).\n          example: SP50\n        nextTradingHolidayDate:\n          type: string\n          format: date\n          description: \u003e-\n            The Next Trading Holiday. For more details regarding Global Trading\n            Holiday Schedules, visit [Online Assistant Page\n            #10397](https://oa.apps.factset.com/pages/10397).\n          example: '2020-09-07'\n        firstDate:\n          type: string\n          format: date\n          description: \u003e-\n            The Security's Date of First Trade. It will return the first date\n            that the FactSet Pricing database began to cover the security and it\n            may not coincide with the actual IPO date. Pricing information for\n            this security will not be available before the date returned. For\n            more details.\n          example: '2004-08-19'\n        lastDate:\n          type: string\n          format: date\n          description: \u003e-\n            Date of Last Trade.  It will return the last date that the FactSet\n            Pricing database as a record for this security listing.\n          example: '2020-09-04'\n        requestId:\n          description: Identifier that was used for the request.\n          type: string\n          example: GOOGL-US\n    returnsRequest:\n      title: Returns Request Body\n      description: Returns Request Body\n      type: object\n      properties:\n        ids:\n          $ref: '#/components/schemas/idsMax2000'\n        startDate:\n          $ref: '#/components/schemas/startDate'\n        endDate:\n          $ref: '#/components/schemas/endDate'\n        frequency:\n          $ref: '#/components/schemas/frequency'\n        currency:\n          $ref: '#/components/schemas/requestCurrency'\n        calendar:\n          $ref: '#/components/schemas/calendar'\n        dividendAdjust:\n          $ref: '#/components/schemas/dividendAdjust'\n        rollingPeriod:\n          $ref: '#/components/schemas/rollingPeriod'\n      required:\n        - ids\n    returnsResponse:\n      type: object\n      title: Returns Response\n      properties:\n        data:\n          description: Array of Returns Objects\n          type: array\n          items:\n            $ref: '#/components/schemas/return'\n    return:\n      title: Return Object\n      type: object\n      properties:\n        fsymId:\n          description: \u003e-\n            Factset Regional Security Identifier. Six alpha-numeric characters,\n            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the\n            security's best regional security data series per currency. For\n            equities, all primary listings per region and currency are allocated\n            a regional-level permanent identifier. The regional-level permanent\n            identifier will be available once a SEDOL representing the\n            region/currency has been allocated and the identifiers are on\n            FactSet.\n          type: string\n          example: SJY281-R\n        date:\n          description: \u003e-\n            End date of the return. Date in YYYY-MM-DD format. Depending on\n            Frequency and Calendar settings, this could represent the entire\n            return period requested.\n          type: string\n          format: date\n          example: '2013-08-01'\n        adjDate:\n          description: Date of last split for which return has been adjusted.\n          type: string\n          format: date\n          example: '2005-02-07'\n        currency:\n          description: \u003e-\n            Currency ISO code. For more details, visit [Online Assistant Page\n            #1470](https://oa.apps.factset.com/pages/1470).\n          type: string\n          example: USD\n        totalReturn:\n          description: \u003e-\n            The simple or compound return for the requested `frequency` and/or\n            `rolling_period`. Depending on the input parameters the return will\n            adjust accordingly. If you simply use `frequency` and no\n            `rolling_period`, the return value will represent the frequency\n            period. If you use `rolling_period`, the values will be returned in\n            actual period ends (e.g. actual month, actual week, daily, etc.).\n            General Return Calculation Details found on [Online Assistant Page\n            #8748](https://oa.apps.factset.com/pages/8748)\n          type: number\n          format: double\n          example: 1.0345\n        requestId:\n          description: Identifier that was used for the request.\n          type: string\n          example: IBM-US\n    dividendsRequest:\n      title: Dividends Request Body\n      description: Dividends Request Body\n      type: object\n      properties:\n        ids:\n          $ref: '#/components/schemas/idsMax1000'\n        startDate:\n          $ref: '#/components/schemas/startDate'\n        endDate:\n          $ref: '#/components/schemas/endDate'\n        currency:\n          $ref: '#/components/schemas/requestCurrency'\n        adjust:\n          $ref: '#/components/schemas/adjust'\n      required:\n        - ids\n    dividendsResponse:\n      type: object\n      title: Dividend Response\n      properties:\n        data:\n          description: Array of Dividend Objects\n          type: array\n          items:\n            $ref: '#/components/schemas/dividend'\n    dividend:\n      title: Dividend Object\n      type: object\n      properties:\n        fsymId:\n          description: \u003e-\n            Factset Regional Security Identifier. Six alpha-numeric characters,\n            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the\n            security's best regional security data series per currency. For\n            equities, all primary listings per region and currency are allocated\n            a regional-level permanent identifier. The regional-level permanent\n            identifier will be available once a SEDOL representing the\n            region/currency has been allocated and the identifiers are on\n            FactSet.\n          type: string\n          example: SJY281-R\n        divsExDate:\n          description: Ex-Date of the dividend expressed in YYYY-MM-DD format.\n          type: string\n          format: date\n          example: '2013-08-01'\n        adjDate:\n          description: Date of last split for which prices and volume have been adjusted.\n          type: string\n          format: date\n          example: '2005-02-07'\n        currency:\n          description: \u003e-\n            Currency ISO code. For more details, visit [Online Assistant Page\n            #1470](https://oa.apps.factset.com/pages/1470).\n          type: string\n          example: USD\n        divsPaid:\n          description: Amount of the dividend paid.\n          type: number\n          format: double\n          example: 5\n        divsRecDate:\n          description: Date the dividend was recorded expressed in YYYY-MM-DD format.\n          type: string\n          format: date\n          example: '2013-07-10'\n        divsPayDate:\n          description: Date the dividend will be paid expressed in YYYY-MM-DD format.\n          type: string\n          format: date\n          example: '2013-08-08'\n        divsTypeC:\n          description: \u003e-\n            Dividend type code. For code descriptions, visit [Online Assistant\n            Page #8764](https://oa.apps.factset.com/pages/8764).\n          type: integer\n          example: 1049\n        divsTypeD:\n          description: \u003e-\n            Description of dividend type. For type descriptions, visit [Online\n            Assistant Page #8764](https://oa.apps.factset.com/pages/8764).\n          type: string\n          example: U.S. Currency\n        divsTaxC:\n          description: \u003e-\n            Tax Marker Code. For code descriptions, visit [Online Assistant Page\n            #15265](https://oa.apps.factset.com/pages/15265).\n          type: string\n          example: FC\n        divsTaxD:\n          description: \u003e-\n            Description of Tax Marker. For type descriptions, visit [Online\n            Assistant Page #15265](https://oa.apps.factset.com/pages/15265).\n          type: string\n          example: Free of tax\n        divsNGFlag:\n          description: \u003e-\n            Net/Gross Marker Code. For details describing Net vs. Gross\n            dividends, visit [Online Assistant Page\n            #11512](https://oa.apps.factset.com/pages/11512).\n          type: string\n          enum:\n            - 'N'\n            - G\n            - T\n            - X\n            - V\n            - '0'\n        divsNGEquiv:\n          description: \u003e-\n            Net/Gross equivalent (opposite of dividend paid). For details\n            describing Net vs. Gross dividends, visit [Online Assistant Page\n            #11512](https://oa.apps.factset.com/pages/11512).\n          type: number\n          format: double\n          example: 5.5\n        requestId:\n          description: Identifier that was used for the request.\n          type: string\n          example: IBM-US\n    splitsRequest:\n      title: Splits Request Body\n      description: Splits Request Body\n      type: object\n      properties:\n        ids:\n          $ref: '#/components/schemas/idsMax2000'\n      required:\n        - ids\n    splitsResponse:\n      type: object\n      title: Splits Response\n      properties:\n        data:\n          description: Array of Splits Objects\n          type: array\n          items:\n            $ref: '#/components/schemas/splits'\n    splits:\n      title: Split Object\n      type: object\n      properties:\n        fsymId:\n          description: \u003e-\n            Factset Regional Security Identifier. Six alpha-numeric characters,\n            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the\n            security's best regional security data series per currency. For\n            equities, all primary listings per region and currency are allocated\n            a regional-level permanent identifier. The regional-level permanent\n            identifier will be available once a SEDOL representing the\n            region/currency has been allocated and the identifiers are on\n            FactSet.\n          type: string\n          example: SJY281-R\n        date:\n          description: Ex-Date of the split expressed in YYYY-MM-DD format.\n          type: string\n          format: date\n          example: '2013-08-01'\n        splitFactor:\n          description: \u003e-\n            Split adjustment factor for n splits ago. A 2-for-1 split returns\n            .50, the number you would multiply the stock price by to adjust for\n            the split.\n          type: number\n          format: double\n          example: 2\n        splitComment:\n          description: Description for the type of split or spin off.\n          type: string\n          example: 'Split: 2 for 1'\n        requestId:\n          description: Identifier that was used for the request.\n          type: string\n          example: IBM-US\n    sharesRequest:\n      title: Shares Request Body\n      description: Shares Request Body\n      type: object\n      properties:\n        ids:\n          $ref: '#/components/schemas/idsMax1000'\n        startDate:\n          $ref: '#/components/schemas/startDate'\n        endDate:\n          $ref: '#/components/schemas/endDate'\n        frequency:\n          $ref: '#/components/schemas/frequency'\n        calendar:\n          $ref: '#/components/schemas/calendar'\n        splitAdjust:\n          $ref: '#/components/schemas/splitAdjust'\n      required:\n        - ids\n    sharesResponse:\n      type: object\n      title: Shares Response\n      properties:\n        data:\n          description: Array of Shares Objects\n          type: array\n          items:\n            $ref: '#/components/schemas/shares'\n    shares:\n      title: Shares Object\n      type: object\n      properties:\n        fsymId:\n          description: \u003e-\n            Factset Regional Security Identifier. Six alpha-numeric characters,\n            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the\n            security's best regional security data series per currency. For\n            equities, all primary listings per region and currency are allocated\n            a regional-level permanent identifier. The regional-level permanent\n            identifier will be available once a SEDOL representing the\n            region/currency has been allocated and the identifiers are on\n            FactSet.\n          type: string\n          example: SJY281-R\n        date:\n          description: Date expressed in YYYY-MM-DD format.\n          type: string\n          format: date\n          example: '2013-08-01'\n        adjDate:\n          description: \u003e-\n            Date of last split for which return has been adjusted. Use the\n            /factset-prices/v#/splits endpoint for details on split. If not\n            available, date will return as 0001-01-01.\n          type: string\n          format: date\n          example: '2005-02-07'\n        sharesSecurity:\n          description: \u003e-\n            **Security-level** Common Shares Outstanding in base units. Shares\n            sourced primarily from SEC filings. Securities in certain countries\n            will include treasury shares. For details visit [Online Assistant\n            Page #10435](https://oa.apps.factset.com/pages/10435)\n          type: number\n          example: 299532000\n        sharesCompany:\n          description: \u003e-\n            **Company-level** Shares Outstanding aggregated across all share\n            classes. Non-traded shares are *excluded*. In base units. For more\n            details, visit [Online Assistant Page\n            #16867](https://oa.apps.factset.com/pages/16867)\n          type: number\n          example: 649532000\n        sharesCompanyNontraded:\n          description: \u003e-\n            **Company-level** Shares Outstanding aggregated across all share\n            classes. Non-traded shares are *included* to the calculation basis\n            by the proportion of their nominal or par value. In base units. For\n            more details, visit [Online Assistant Page\n            #16867](https://oa.apps.factset.com/pages/16867)\n          type: number\n          example: 657532000\n        requestId:\n          description: Identifier that was used for the request.\n          type: string\n          example: IBM-US\n    marketValueRequest:\n      title: Market Value Request Body\n      description: Market Value Request Body\n      type: object\n      properties:\n        ids:\n          $ref: '#/components/schemas/idsMax2000'\n        startDate:\n          $ref: '#/components/schemas/startDate'\n        endDate:\n          $ref: '#/components/schemas/endDate'\n        frequency:\n          $ref: '#/components/schemas/frequency'\n        currency:\n          $ref: '#/components/schemas/requestCurrency'\n        calendar:\n          $ref: '#/components/schemas/calendar'\n      required:\n        - ids\n    marketValueResponse:\n      type: object\n      title: Market Value Response\n      properties:\n        data:\n          description: Array of Market Value Objects\n          type: array\n          items:\n            $ref: '#/components/schemas/marketValue'\n    marketValue:\n      title: Market Value Object\n      type: object\n      properties:\n        fsymId:\n          description: \u003e-\n            Factset Regional Security Identifier. Six alpha-numeric characters,\n            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the\n            security's best regional security data series per currency. For\n            equities, all primary listings per region and currency are allocated\n            a regional-level permanent identifier. The regional-level permanent\n            identifier will be available once a SEDOL representing the\n            region/currency has been allocated and the identifiers are on\n            FactSet.\n          type: string\n          example: HTM0LK-R\n        date:\n          description: Ending date for the period expressed in YYYY-MM-DD format.\n          type: string\n          format: date\n          example: '2020-07-07'\n        currency:\n          type: string\n          description: \u003e-\n            Currency ISO code. For more details, visit [Online Assistant Page\n            #1470](https://oa.apps.factset.com/pages/1470).\n          example: USD\n        entityMarketValue:\n          description: \u003e-\n            Aggregate market value across all share classes and includes\n            non-traded shares which are added to the calculation basis by the\n            proportion of their nominal or par value. Values are in base units.\n            To value non-traded shares, the price of the parent equity provides\n            the most appropriate approximation of what the non-traded shares\n            would be worth in the open market. For unique companies with an ADR\n            as the parent equity, since it is the only traded security\n            associated with that company, when calculating company-level market\n            value, the price of the ADR is used, but is scaled by the ADR ratio\n            since there's not always a one-to-one relationship between ADR\n            shares and the non-traded shares which they represent. For more\n            details visit [Online Assistant Page\n            #16867](https://my.apps.factset.com/oa/pages/16867). \n          type: number\n          format: double\n          example: 1022362841136.31\n        entityMarketValueExNonTraded:\n          description: \u003e-\n            Aggregate across all share classes and excludes non-traded shares.\n            Values are in base units. For more details visit [Online Assistant\n            Page #16867](https://my.apps.factset.com/oa/pages/16867).\n          type: number\n          format: double\n          example: 952768582453.33\n        securityMarketValue:\n          description: \u003e-\n            Returns the security level market value calculated as the share\n            price multiplied by the number of shares at the security level.\n            **Note:** History is available back to Oct-1999 for North American\n            securities, and 1-Jan-2001 for non-North American securities.\n          type: number\n          format: double\n          example: 449970657342.5\n        requestId:\n          description: Identifier that was used for the request.\n          type: string\n          example: GOOGL\n    highLowRequest:\n      title: High Low Request Body\n      description: High Low Request Body\n      type: object\n      properties:\n        ids:\n          $ref: '#/components/schemas/idsMax2000'\n        date:\n          $ref: '#/components/schemas/dateHL'\n        period:\n          $ref: '#/components/schemas/period'\n        priceType:\n          $ref: '#/components/schemas/priceType'\n        calendar:\n          $ref: '#/components/schemas/calendar'\n        currency:\n          $ref: '#/components/schemas/currency'\n        adjust:\n          $ref: '#/components/schemas/adjust'\n      required:\n        - ids\n    highLowResponse:\n      type: object\n      title: High Low Response\n      properties:\n        data:\n          description: Array of High Low Objects\n          type: array\n          items:\n            $ref: '#/components/schemas/highLow'\n    highLow:\n      title: High Low Object\n      type: object\n      properties:\n        adjDate:\n          description: Date of last split for which prices have been adjusted.\n          type: string\n          format: date\n          example: '2005-02-07'\n        date:\n          description: \u003e-\n            Specific reference date for the period expressed in YYYY-MM-DD\n            format.\n          type: string\n          format: date\n          example: '2020-07-07'\n        period:\n          description: The period of measure requested using the period query parameter.\n          type: string\n          example: 52W\n        fsymId:\n          description: \u003e-\n            Factset Regional Security Identifier. Six alpha-numeric characters,\n            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the\n            security's best regional security data series per currency. For\n            equities, all primary listings per region and currency are allocated\n            a regional-level permanent identifier. The regional-level permanent\n            identifier will be available once a SEDOL representing the\n            region/currency has been allocated and the identifiers are on\n            FactSet.\n          type: string\n          example: HTM0LK-R\n        priceHigh:\n          description: \u003e-\n            High price over the period requested. This can represent the\n            intra-day or closing price depending on the priceType requested. By\n            default the price is as of closing in local trading currency, split\n            adjusted and not spinoff adjusted.\n          type: number\n          format: double\n          example: 126\n        priceLow:\n          description: \u003e-\n            Low price over the period requested. This can represent the\n            intra-day or closing price depending on the priceType requested. By\n            default the price is as of closing in local trading currency, split\n            adjusted and not spinoff adjusted.\n          type: number\n          format: double\n          example: 121.25\n        priceHighDate:\n          description: \u003e-\n            Date in which the highest price occurred over the requested period \n            for the given id expressed in YYYY-MM-DD format.\n          type: string\n          format: date\n          example: '2020-03-05'\n        priceLowDate:\n          description: \u003e-\n            Date in which the lowest price occurred over the requested period\n            for the given id expressed in YYYY-MM-DD format.\n          type: string\n          format: date\n          example: '2019-09-14'\n        requestId:\n          description: Identifier that was used for the request.\n          type: string\n          example: GOOGL\n    returnsSnapshotRequest:\n      title: Returns Snapshot Request Body\n      description: Returns Snapshot Request Body\n      type: object\n      properties:\n        ids:\n          $ref: '#/components/schemas/idsMax2000'\n        date:\n          $ref: '#/components/schemas/dateRS'\n        currency:\n          $ref: '#/components/schemas/requestCurrency'\n        calendar:\n          $ref: '#/components/schemas/calendar'\n        dividendAdjust:\n          $ref: '#/components/schemas/dividendAdjustSnapshot'\n      required:\n        - ids\n    returnsSnapshotResponse:\n      type: object\n      title: Returns Snapshot Response\n      properties:\n        data:\n          description: Array of Returns Snapshot Objects\n          type: array\n          items:\n            $ref: '#/components/schemas/returnsSnapshot'\n    returnsSnapshot:\n      title: Return Snapshot Object\n      type: object\n      properties:\n        fsymId:\n          description: \u003e-\n            Factset Regional Security Identifier. Six alpha-numeric characters,\n            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the\n            security's best regional security data series per currency. For\n            equities, all primary listings per region and currency are allocated\n            a regional-level permanent identifier. The regional-level permanent\n            identifier will be available once a SEDOL representing the\n            region/currency has been allocated and the identifiers are on\n            FactSet.\n          type: string\n          example: SJY281-R\n        date:\n          description: \u003e-\n            Specific reference date for the period expressed in YYYY-MM-DD\n            format.\n          type: string\n          format: date\n          example: '2020-09-09'\n        currency:\n          description: \u003e-\n            Currency ISO code. For more details, visit [Online Assistant Page\n            #1470](https://oa.apps.factset.com/pages/1470).\n          type: string\n          example: USD\n        requestId:\n          description: Identifier that was used for the request.\n          type: string\n          example: IBM-US\n        oneDay:\n          description: \u003e-\n            Returns the price performance of the security for the previous one\n            day from the given date.\n          type: number\n          format: double\n          example: 0.86627007\n        oneMonth:\n          description: \u003e-\n            Returns the price performance of the security for the past one\n            month.\n          type: number\n          format: double\n          example: -2.1606863\n        threeMonth:\n          description: \u003e-\n            Returns the price performance of the security for the past three\n            months.\n          type: number\n          format: double\n          example: -7.2874727\n        sixMonth:\n          description: \u003e-\n            Returns the price performance of the security for the past six\n            months.\n          type: number\n          format: double\n          example: 3.7772775\n        nineMonth:\n          description: \u003e-\n            Returns the price performance of the security for the past nine\n            months.\n          type: number\n          format: double\n          example: -8.706689\n        oneYear:\n          description: Returns the price performance of the security for the past one year.\n          type: number\n          format: double\n          example: -14.263678\n        quarterToDate:\n          description: \u003e-\n            Returns the price performance of the security from the previous\n            calendar quarter end to the given date.\n          type: number\n          format: double\n          example: 1.2337565\n        weekToDate:\n          description: \u003e-\n            Returns the price performance of the security from the previous week\n            (usually Friday) to the given date.\n          type: number\n          format: double\n          example: -0.03270507\n        monthToDate:\n          description: \u003e-\n            Returns the price performance of the security from the previous\n            month-end to the given date.\n          type: number\n          format: double\n          example: -0.851506\n        yearToDate:\n          description: \u003e-\n            Returns the price performance of the security from the previous\n            calendar year-end to the given date.\n          type: number\n          format: double\n          example: -8.788413\n        twoYearAnnualized:\n          description: Returns the annualized compound total return for two years.\n          type: number\n          format: double\n          example: -3.7836754\n        threeYearAnnualized:\n          description: Returns the annualized compound total return for three years.\n          type: number\n          format: double\n          example: -0.49112806\n        fiveYearAnnualized:\n          description: Returns the annualized compound total return for five years.\n          type: number\n          format: double\n          example: 0.8408688\n        tenYearAnnualized:\n          description: Returns the annualized compound total return for ten years.\n          type: number\n          format: double\n          example: 2.8786583\n        twentyYearAnnualized:\n          description: Returns the annualized compound total return for twenty years.\n          type: number\n          format: double\n          example: 1.8996516\n        thirtyYearAnnualized:\n          description: Returns the annualized compound total return for thirty years.\n          type: number\n          format: double\n          example: 7.5250373\n        ipoToDateAnnualized:\n          description: \u003e-\n            Returns the annualized compound total return from the ipo date. The\n            calculation uses the closing price as of the IPO date, and not the\n            IPO price itself.\n          type: number\n          format: double\n          example: 6.5763993\n        dividendAdjust:\n          description: \u003e\n            Controls the dividend reinvestment for the returns calculation.\n            Dividends will be reinvested on the date the dividends go ex (when\n            the dividends belong to the seller rather than the buyer). Visit [OA\n            8748](https://my.apps.factset.com/oa/pages/8748) for calculation\n            methodology.\n              * **PRICE** = Price Change - Dividends Excluded.\n              * **EXDATE** = Simple Return - Dividends Received on exdate but not reinvested. Dividends accumulated throughout the specified period are added to the price at the end of the period.\n              * **EXDATE_C** = Compound Return - Dividends reinvested on exdate. Dividends accumulated throughout the specified period are used to buy more shares of stock in the company.\n          type: string\n          example: PRICE\n    rolloverResponse:\n      type: object\n      title: Rollover Response\n      properties:\n        data:\n          description: Array of `Database Rollover` objects.\n          type: array\n          items:\n            $ref: '#/components/schemas/rollover'\n    rollover:\n      title: Rollover Object\n      type: object\n      properties:\n        americasRollTime:\n          description: \u003e-\n            Time of last zero date rollover for the Americas. This is in Eastern\n            Time Zone. The date-time format is expressed as\n            [YYYY-MM-DD]T[HH:MM:SSS], following ISO 8601.\n          type: string\n          format: date-time\n          example: '2020-06-18T02:52:21.000'\n        americasZeroDate:\n          description: \u003e-\n            Current relative zero date for the Americas. Date is expressed in\n            Eastern Time and expressed as YYYY-MM-DD.\n          type: string\n          format: date\n          example: '2020-06-17'\n        asiapacificRollTime:\n          description: \u003e-\n            Time of last zero date rollover for Asia/Pacific. This is in Eastern\n            Time Zone. The date-time format is expressed as\n            [YYYY-MM-DD]T[HH:MM:SSS], following ISO 8601.\n          type: string\n          format: date-time\n          example: '2020-06-18T12:50:30.000'\n        asiapacificZeroDate:\n          description: \u003e-\n            Current relative zero date for Asia/Pacific. This is in Eastern Time\n            Zone\n          type: string\n          format: date\n          example: '2020-06-18'\n        europeRollTime:\n          description: \u003e-\n            Time of last zero date rollover for Europe. This is in Eastern Time\n            Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS],\n            following ISO 8601.\n          type: string\n          format: date-time\n          example: '2020-06-17T21:50:36.000'\n        europeZeroDate:\n          description: Current relative zero date for Europe. This is in Eastern Time Zone\n          type: string\n          format: date\n          example: '2020-06-17'\n    BatchStatusResponse:\n      title: Batch Status Response\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/BatchStatus'\n    BatchStatus:\n      title: Batch Status\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: the id of batch request.\n        startTime:\n          type: string\n          format: date-time\n          description: \u003e-\n            Time when the batch request is started. This is in Eastern Time\n            Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS],\n            following ISO 8601.\n        endTime:\n          type: string\n          format: date-time\n          description: \u003e-\n            Time when the batch request is ended. This is in Eastern Time Zone.\n            The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS],\n            following ISO 8601.\n        status:\n          type: string\n          enum:\n            - QUEUED\n            - EXECUTING\n            - DONE\n            - FAILED\n        error:\n          type: string\n          example: \u003e-\n            Invalid Parameter (s): curr. Please modify your request to use\n            parameters outlined in the specification for this endpoint.\n          description: Error message.\n    errorResponse:\n      type: object\n      title: Error Response\n      properties:\n        status:\n          description: status\n          type: string\n          example: Bad Request\n        timestamp:\n          description: timestamp in YYYY-MM-DD HH:MM:SS.SSS\n          type: string\n          example: '2019-11-01 11:09:41.918'\n          format: date-time\n        path:\n          description: The Endpoint path {package}/version/{endpoint}\n          type: string\n          example: /factset-prices/v1/prices\n        message:\n          description: The plain text error message\n          type: string\n          example: Validation Error\n        subErrors:\n          description: subErrors related to the error message. Null if not applicable.\n          type: object\n          properties:\n            object:\n              description: the operation ID\n              type: string\n            field:\n              description: Parameter Field Name\n              type: string\n            message:\n              description: Error message\n              type: string\n            rejectedValue:\n              description: Rejected Values in an Array\n              type: array\n              items:\n                type: string\n    idsMax1000:\n      type: array\n      items:\n        type: string\n      minItems: 1\n      maxItems: 1000\n      description: \u003e\n        The requested list of security identifiers. Accepted ID types include\n        Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\n      example:\n        - FDS-US\n    idsMax2000:\n      type: array\n      items:\n        type: string\n      minItems: 1\n      maxItems: 2000\n      description: \u003e\n        The requested list of security identifiers. Accepted ID types include\n        Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.\n      example:\n        - FDS-US\n    idsBatchMax5000:\n      type: array\n      items:\n        type: string\n      description: \u003e\n        The requested list of security identifiers. Accepted ID types include\n        Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids. \n\n        \u003cp\u003eids limit =  2000 per non-batch request / 5000 per batch request\u003c/p\u003e\n      example:\n        - FDS-US\n    fixedIds:\n      type: array\n      items:\n        type: string\n      minItems: 1\n      maxItems: 2000\n      description: |\n        The requested list of Fixed Income Security Identifiers.\n      example:\n        - 037833BX\n    startDate:\n      type: string\n      description: \u003e\n        The start date requested for a given date range in **YYYY-MM-DD**\n        format. If left blank, the API will default to previous close. Future\n        dates (T+1) are not accepted in this endpoint.\n      example: '2019-01-01'\n    endDate:\n      type: string\n      description: \u003e\n        The end date requested for a given date range in **YYYY-MM-DD** format.\n        If left blank, the API will default to previous close. Future dates\n        (T+1) are not accepted in this endpoint.\n      example: '2019-12-31'\n    dateHL:\n      type: string\n      description: \u003e\n        The specific date requested for a given period range in **YYYY-MM-DD**\n        format. If left blank, the API will default to previous close. Future\n        dates (T+1) are not accepted in this endpoint.\n      example: '2020-07-07'\n    frequency:\n      type: string\n      enum:\n        - D\n        - W\n        - M\n        - AM\n        - CQ\n        - FQ\n        - AY\n        - CY\n        - FY\n      default: D\n      description: |\n        Controls the display frequency of the data returned.\n          * **D** = Daily\n          * **W** = Weekly, based on the last day of the week of the start date.\n          * **M** = Monthly, based on the last trading day of the month.\n          * **AM** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n          * **CQ** = Quarterly based on the last trading day of the calendar quarter (March, June, September, or December).\n          * **FQ** = Fiscal Quarter of the company.\n          * **AY** = Actual Annual, based on the start date.\n          * **CY** = Calendar Annual, based on the last trading day of the calendar year.\n          * **FY** = Fiscal Annual, based on the last trading day of the company's fiscal year.\n      example: M\n    frequencyFi:\n      type: string\n      enum:\n        - D\n        - M\n        - AM\n        - MTD\n        - CQ\n        - CQTD\n        - AY\n        - CY\n        - CYTD\n      default: D\n      description: |\n        Controls the display frequency of the data returned.\n          * **D** = Daily\n          * **M** = Monthly, based on the last trading day of the month.\n          * **AM** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n          * **MTD** = Month-to-date\n          * **CQ** = Quarterly based on the last trading day of the calendar quarter (March, June, September, or December).\n          * **CQTD** =  Calendar quarter-to-date\n          * **AY** = Actual Annual, based on the start date.\n          * **CY** = Calendar Annual, based on the last trading day of the calendar year.\n          * **CYTD** = Calendar Year-to-date.\n      example: M\n    calendar:\n      type: string\n      enum:\n        - FIVEDAY\n        - SEVENDAY\n        - LOCAL\n      default: FIVEDAY\n      description: \u003e-\n        Calendar of data returned. SEVENDAY includes weekends. LOCAL calendar\n        will default to the securities' trading calendar which excludes date\n        records for respective holiday periods.\n      example: FIVEDAY\n    requestCurrency:\n      title: Request Currency\n      type: string\n      description: \u003e-\n        Currency code for adjusting prices. Default is Local. For a list of\n        currency ISO codes, visit [Online Assistant Page\n        1470](https://oa.apps.factset.com/pages/1470).\n      example: USD\n    adjust:\n      type: string\n      enum:\n        - SPLIT\n        - SPINOFF\n        - DIVADJ\n        - UNSPLIT\n      default: SPLIT\n      description: \u003e\n        Controls the split, spinoff, and dividend adjustments for the prices.\n        \u003cp\u003eFor more information, visit [Online Assistant Page\n        614](https://oa.apps.factset.com/pages/614)\u003c/p\u003e\n          * **SPLIT** = Split ONLY Adjusted. This is used by default.\n          * **SPINOFF** = Splits \u0026 Spinoff Adjusted.\n          * **DIVADJ** = Splits, Spinoffs, and Dividends adjusted.\n          * **UNSPLIT** = No Adjustments, Controls the split and dividend adjustments for the prices.\n      example: SPLIT\n    dividendAdjust:\n      type: string\n      enum:\n        - PRICE\n        - EXDATE\n        - PAYDATE\n        - EXDATE_C\n        - PAYDATE_C\n      default: PRICE\n      description: |\n        Controls the dividend reinvestment for the returns calculation.\n          * **PRICE** = Price Change - Dividends Excluded\n          * **EXDATE** = Simple Return - Dividends Received on exdate but not reinvested\n          * **PAYDATE** = Simple Return - Dividends Received on paydate but not reinvested\n          * **EXDATE_C** = Compound Return - Dividends reinvested on exdate\n          * **PAYDATE_C** = Compound Return - Dividends reinvested on paydate.\n    splitAdjust:\n      description: Code to control split adjustments for shares count.\n      type: string\n      enum:\n        - SPLIT\n        - UNSPLIT\n      default: SPLIT\n    rollingPeriod:\n      description: \u003e-\n        Period of measure for the rolling cumulative return. This does not\n        change display `frequency` but rather the underlying return calculation\n        period. All periods are referencing actual periods of measure, not\n        period-ends. For example, 1M rolling period will go back to that date\n        the previous month, which is not always the month-end date.\n      type: string\n      enum:\n        - 1D\n        - 1W\n        - 1M\n        - 3M\n        - 6M\n        - 52W\n        - 2Y\n        - 3Y\n        - 5Y\n        - 10Y\n    period:\n      description: \u003e-\n        Period of measure for Prices High Low. This does not change display\n        `frequency` but rather the underlying return calculation period. All\n        periods are referencing actual periods of measure, not period-ends. For\n        example, 1M rolling period will go back to that date the previous month,\n        which is not always the month-end date.\n      type: string\n      enum:\n        - 1D\n        - 1W\n        - 1M\n        - 3M\n        - 6M\n        - 52W\n        - 2Y\n        - 3Y\n        - 5Y\n        - 10Y\n      default: 52W\n    priceType:\n      description: Controls whether price high low data is returned intra-day or at close.\n      type: string\n      enum:\n        - INTRADAY\n        - CLOSE\n      default: CLOSE\n    currency:\n      description: \u003e-\n        Currency code for adjusting prices. Default is Local. For a list of\n        currency ISO codes, visit [Online Assistant Page\n        1470](https://oa.apps.factset.com/pages/1470).\n      type: string\n    dateRS:\n      type: string\n      description: \u003e\n        The date in **YYYY-MM-DD** format. This controls the perspective dates\n        to the calculate the returns. If left blank, the API will default to\n        previous close. Future dates (T+1) are not accepted in this endpoint.\n      example: '2019-12-31'\n    dividendAdjustSnapshot:\n      type: string\n      enum:\n        - PRICE\n        - EXDATE\n        - EXDATE_C\n      default: PRICE\n      description: \u003e\n        Controls the dividend reinvestment for the returns calculation.\n        Dividends will be reinvested on the date the dividends go ex (when the\n        dividends belong to the seller rather than the buyer). Visit [OA\n        8748](https://my.apps.factset.com/oa/pages/8748) for calculation\n        methodology.\n          * **PRICE** = Price Change - Dividends Excluded.\n          * **EXDATE** = Simple Return - Dividends Received on exdate but not reinvested. Dividends accumulated throughout the specified period are added to the price at the end of the period.\n          * **EXDATE_C** = Compound Return - Dividends reinvested on exdate. Dividends accumulated throughout the specified period are used to buy more shares of stock in the company.\n      example: PRICE\n    batch:\n      description: \u003e\n        Enables the ability to asynchronously \"batch\" the request, supporting a\n        long-running request up to 10 minutes. Upon requesting batch=Y, the\n        service will respond back with an HTTP Status Code of 202. Once a batch\n        request is submitted, use the `batch/v1/status` to see if the job has\n        completed. Once completed, retrieve the results of the request via\n        `batch/v1/result`. \u003cp\u003e**`batch` is currently in **BETA**. Additional\n        Access Required. To gain access to this feature, reach out to your\n        FactSet Account team or \"Report Issue\" above and our support teams can\n        assist.** Upon requesting \"batch\": \"Y\", the service will respond back\n        with an HTTP Status Code of 202.\n      type: string\n      enum:\n        - 'Y'\n        - 'N'\n      default: 'N'\n  responses:\n    '400':\n      description: \u003e-\n        Bad Request. This can occur for several reasons. Please review the\n        \"message\" for more details.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n          examples:\n            Bad Request - Date Format:\n              $ref: '#/components/examples/badRequestDateFormat'\n            Bad Request - Missing Required Parameter:\n              $ref: '#/components/examples/badRequestRequiredParameter'\n            Bad Request - Future Date:\n              $ref: '#/components/examples/badRequestFutureDate'\n            Bad Request - Invalid Parameter:\n              $ref: '#/components/examples/badRequestInvalidParameters'\n            Bad Request - Malformed JSON:\n              $ref: '#/components/examples/badRequestMalformedJSON'\n            Bad Request - Read Timeout:\n              $ref: '#/components/examples/badRequestReadTimeout'\n    '401':\n      description: \u003e-\n        Unauthenticated USERNAME-SERIAL. Ensure you are logged in and have\n        successfully generated an API KEY for the IP range you are connecting\n        from. For more help, select the **Report Issue** in the top right corner\n        of this Developer Portal specification card and choose Connectivity 401\n        or 403 Responses.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n          examples:\n            Bad Request - Date Format:\n              $ref: '#/components/examples/unauthenticated'\n    '403':\n      description: \u003e-\n        The USERNAME-SERIAL attempted to request the endpoint is not authorized\n        to access. The request was a legal request, but the server is refusing\n        to respond. Please reach out to FactSet Account Team for assistance with\n        authorization.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n          examples:\n            Bad Request - Date Format:\n              $ref: '#/components/examples/forbidden'\n    '415':\n      description: \u003e-\n        Unsupported Media Type. This error may be returned when the caller sends\n        a resource in a format that is not accepted by the server. This can be\n        fixed by ensuring that Content-Type header is set to the correct value.\n        In this instance, \"application/json\" would be the appropriate value.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n          examples:\n            Bad Request - Date Format:\n              $ref: '#/components/examples/unsupportedMediaType'\n    '500':\n      description: Internal Server Error.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n          examples:\n            Internal Server Error - Not Writable:\n              $ref: '#/components/examples/notWritable'\n            Internal Server Error - General Exception:\n              $ref: '#/components/examples/generalException'\n  examples:\n    singleSecurityPrices:\n      summary: Single Price Record for AAPL as of March 29 2019\n      description: Single Price Record for AAPL\n      value:\n        data:\n          - fsymId: MH33D6-R\n            date: '2019-03-29'\n            adjDate: '2014-06-09'\n            currency: USD\n            price: 189.95\n            priceOpen: 189.83\n            priceHigh: 190.08\n            priceLow: 188.54\n            volume: 23563.96\n            requestId: AAPL\n    twoSecuritiesPrices:\n      summary: Price Records for AAPL and TSLA as of March 29 2019\n      description: Price Records for AAPL and TSLA as of March 29 2019\n      value:\n        data:\n          - fsymId: MH33D6-R\n            date: '2019-03-29'\n            adjDate: '2014-06-09'\n            currency: USD\n            price: 189.95\n            priceOpen: 189.83\n            priceHigh: 190.08\n            priceLow: 188.54\n            volume: 23563.96\n            requestId: AAPL\n          - fsymId: Q2YN1N-R\n            date: '2019-03-29'\n            adjDate: null\n            currency: USD\n            price: 279.86\n            priceOpen: 278.7\n            priceHigh: 280.16\n            priceLow: 274.5\n            volume: 5991.338\n            requestId: TSLA\n    oneMonthSecurityPrices:\n      summary: One month of daily prices for AAPL for March 2019\n      description: \u003e-\n        One month of daily open, high, low, and close end-of-day prices and\n        volume for AAPL for March 2019.\n      value:\n        data:\n          - fsymId: MH33D6-R\n            date: '2019-03-01'\n            adjDate: '2014-06-09'\n            currency: USD\n            price: 174.97\n            priceOpen: 174.28\n            priceHigh: 175.15\n            priceLow: 172.89\n            volume: 25886.17\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-03-04'\n            adjDate: '2014-06-09'\n            currency: USD\n            price: 175.85\n            priceOpen: 175.69\n            priceHigh: 177.75\n            priceLow: 173.97\n            volume: 27436.2\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-03-05'\n            adjDate: '2014-06-09'\n            currency: USD\n            price: 175.53\n            priceOpen: 175.94\n            priceHigh: 176\n            priceLow: 174.54\n            volume: 19737.42\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-03-06'\n            adjDate: '2014-06-09'\n            currency: USD\n            price: 174.52\n            priceOpen: 174.67\n            priceHigh: 175.49\n            priceLow: 173.94\n            volume: 20810.38\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-03-07'\n            adjDate: '2014-06-09'\n            currency: USD\n            price: 172.5\n            priceOpen: 173.87\n            priceHigh: 174.44\n            priceLow: 172.02\n            volume: 24796.37\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-03-08'\n            adjDate: '2014-06-09'\n            currency: USD\n            price: 172.91\n            priceOpen: 170.32\n            priceHigh: 173.07\n            priceLow: 169.5\n            volume: 23999.36\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-03-11'\n            adjDate: '2014-06-09'\n            currency: USD\n            price: 178.9\n            priceOpen: 175.49\n            priceHigh: 179.12\n            priceLow: 175.35\n            volume: 32011.03\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-03-12'\n            adjDate: '2014-06-09'\n            currency: USD\n            price: 180.91\n            priceOpen: 180\n            priceHigh: 182.67\n            priceLow: 179.37\n            volume: 32467.58\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-03-13'\n            adjDate: '2014-06-09'\n            currency: USD\n            price: 181.71\n            priceOpen: 182.25\n            priceHigh: 183.3\n            priceLow: 180.92\n            volume: 31032.52\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-03-14'\n            adjDate: '2014-06-09'\n            currency: USD\n            price: 183.73\n            priceOpen: 183.9\n            priceHigh: 184.1\n            priceLow: 182.56\n            volume: 23579.51\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-03-15'\n            adjDate: '2014-06-09'\n            currency: USD\n            price: 186.12\n            priceOpen: 184.85\n            priceHigh: 187.33\n            priceLow: 183.74\n            volume: 39042.91\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-03-18'\n            adjDate: '2014-06-09'\n            currency: USD\n            price: 188.02\n            priceOpen: 185.8\n            priceHigh: 188.39\n            priceLow: 185.79\n            volume: 26219.83\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-03-19'\n            adjDate: '2014-06-09'\n            currency: USD\n            price: 186.53\n            priceOpen: 188.35\n            priceHigh: 188.99\n            priceLow: 185.92\n            volume: 31646.37\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-03-20'\n            adjDate: '2014-06-09'\n            currency: USD\n            price: 188.16\n            priceOpen: 186.23\n            priceHigh: 189.49\n            priceLow: 184.73\n            volume: 31035.23\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-03-21'\n            adjDate: '2014-06-09'\n            currency: USD\n            price: 195.09\n            priceOpen: 190.02\n            priceHigh: 196.33\n            priceLow: 189.81\n            volume: 51034.24\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-03-22'\n            adjDate: '2014-06-09'\n            currency: USD\n            price: 191.05\n            priceOpen: 195.34\n            priceHigh: 197.69\n            priceLow: 190.78\n            volume: 42407.67\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-03-25'\n            adjDate: '2014-06-09'\n            currency: USD\n            price: 188.74\n            priceOpen: 191.51\n            priceHigh: 191.98\n            priceLow: 186.6\n            volume: 43845.29\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-03-26'\n            adjDate: '2014-06-09'\n            currency: USD\n            price: 186.79\n            priceOpen: 191.664\n            priceHigh: 192.88\n            priceLow: 184.58\n            volume: 49800.54\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-03-27'\n            adjDate: '2014-06-09'\n            currency: USD\n            price: 188.47\n            priceOpen: 188.75\n            priceHigh: 189.76\n            priceLow: 186.55\n            volume: 29848.43\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-03-28'\n            adjDate: '2014-06-09'\n            currency: USD\n            price: 188.72\n            priceOpen: 188.95\n            priceHigh: 189.559\n            priceLow: 187.53\n            volume: 20780.36\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-03-29'\n            adjDate: '2014-06-09'\n            currency: USD\n            price: 189.95\n            priceOpen: 189.83\n            priceHigh: 190.08\n            priceLow: 188.54\n            volume: 23563.96\n            requestId: AAPL\n    multipleIdsOneYearPost:\n      summary: One Year of Daily Prices for APPL and Tesla in Calendar 2019 Year\n      description: One Year of Daily Prices for APPL and Tesla in Calendar 2019 Year\n      value:\n        ids:\n          - AAPL-US\n          - TSLA-US\n        startDate: '2019-01-01'\n        endDate: '2019-12-31'\n        frequency: D\n        calendar: FIVEDAY\n        currency: LOCAL\n        adjust: SPLIT\n    singleIdsOneYearMonthlyPost:\n      summary: One Year of Monthly Prices for AAPL-US in Calendar 2019 Year\n      description: One Year of Monthly Prices for AAPL-US in Calendar 2019 Year\n      value:\n        ids:\n          - AAPL-US\n        startDate: '2019-01-01'\n        endDate: '2019-12-31'\n        frequency: M\n        calendar: FIVEDAY\n        currency: LOCAL\n        adjust: SPLIT\n    priceAdjustedForDividendsMonthlyPost:\n      summary: Price adjusted for splits, spinoffs and dividends.\n      value:\n        ids:\n          - AAPL-US\n        startDate: '2019-01-01'\n        endDate: '2019-12-31'\n        frequency: M\n        calendar: FIVEDAY\n        currency: LOCAL\n        adjust: DIVADJ\n    singleSecurityPricesFixedIncome:\n      summary: Single Fixed Income Price Record for Apple Inc. 4.65% 23-FEB-2046\n      description: Single Fixed Income Price Record for Apple Inc. 4.65% 23-FEB-2046\n      value:\n        data:\n          - fsymId: MCCBMM-S\n            date: '2020-07-13'\n            securityType: BDNT\n            issuerEntityId: 000C7F-E\n            issuerType: CORP\n            priceBid: 141.212\n            priceMid: 141.212\n            priceAsk: 141.212\n            requestId: 037833BX\n    multipleSecurityPricesFixedIncome:\n      summary: Multiple Fixed Income Prices for a sample of different Security Types\n      description: Multiple Fixed Income Prices for a sample of different Security Types\n      value:\n        data:\n          - fsymId: MCCBMM-S\n            date: '2020-07-13'\n            securityType: BDNT\n            issuerEntityId: 000C7F-E\n            issuerType: CORP\n            priceBid: 141.212\n            priceMid: 141.212\n            priceAsk: 141.212\n            requestId: 037833BX\n          - fsymId: R388JW-S\n            date: '2020-07-13'\n            securityType: BOND\n            issuerEntityId: 0DN2GL-E\n            issuerType: MUNI\n            priceBid: 100.091\n            priceMid: 100.238\n            priceAsk: 100.384\n            requestId: 853207EZ\n          - fsymId: SG86MQ-S\n            date: '2020-07-13'\n            securityType: BLDN\n            issuerEntityId: 05MCSG-E\n            issuerType: SOV\n            priceBid: 99.847\n            priceMid: 99.847\n            priceAsk: 99.847\n            requestId: 9127963H\n    singleFixedOneYearPost:\n      summary: \u003e-\n        One Year of Daily Fixed Income Prices for Apple Inc. 4.65% 23-FEB-2046\n        in Calendar 2019 Year\n      description: \u003e-\n        One Year of Daily Fixed Income Prices for Apple Inc. 4.65% 23-FEB-2046\n        in Calendar 2019 Year\n      value:\n        ids:\n          - 037833BX\n        startDate: '2019-01-01'\n        endDate: '2019-12-31'\n        frequency: D\n    multipleFixedPricesPost:\n      summary: Latest Daily Fixed Income Prices for three Fixed Income Securities\n      description: Latest Daily Fixed Income Prices for three Fixed Income Securities\n      value:\n        ids:\n          - 037833BX\n          - 853207EZ\n          - 9127963H\n        frequency: D\n    52WKReturnAAPL:\n      summary: Rolling 52W Week Total Return for AAPL-US\n      description: \u003e-\n        Rolling 52W Total Return for apple as of 2020-06-11. Request URL\n        https://api.factset.com/content/factset-prices/v1/returns?ids=AAPL\u0026frequency=D\u0026dividendAdjust=EXDATE_C\u0026rollingPeriod=52W\n      value:\n        data:\n          - fsymId: MH33D6-R\n            date: '2020-06-11'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: 74.47648\n            requestId: AAPL\n    fangStocksReturn:\n      summary: \u003e-\n        The latest Month return for FANG Stocks - Facebook, Apple, Netflix,\n        Google.\n      description: \u003e-\n        The latest Month return for FANG Stocks - Facebook, Apple, Netflix,\n        Google.\n      value:\n        data:\n          - fsymId: QLGSL2-R\n            date: '2020-06-11'\n            adjDate: null\n            currency: USD\n            totalReturn: 5.2772284\n            requestId: FB\n          - fsymId: MH33D6-R\n            date: '2020-06-11'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: 6.6315293\n            requestId: AAPL\n          - fsymId: C4C0BL-R\n            date: '2020-06-11'\n            adjDate: '2015-07-15'\n            currency: USD\n            totalReturn: -3.3959866\n            requestId: NFLX\n          - fsymId: HTM0LK-R\n            date: '2020-06-11'\n            adjDate: '2014-04-03'\n            currency: USD\n            totalReturn: -0.12040138\n            requestId: GOOGL\n    dailyReturnsAPPL:\n      summary: One Month Daily Returns for AAPL-US During December 2019\n      description: \u003e-\n        One Month Daily Returns for AAPL-US During December 2019. Note, each\n        total Return value is representative of the dates return value with\n        dividends reinvested using EXDATE_C\n      value:\n        data:\n          - fsymId: MH33D6-R\n            date: '2019-11-29'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: -0.22028089\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-12-02'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: -1.1562169\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-12-03'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: -1.7830074\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-12-04'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: 0.8826256\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-12-05'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: 1.4671087\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-12-06'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: 1.9316196\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-12-09'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: -1.4000118\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-12-10'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: 0.5844474\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-12-11'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: 0.85294247\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-12-12'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: 0.2548337\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-12-13'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: 1.3593197\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-12-16'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: 1.7117858\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-12-17'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: 0.19652843\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-12-18'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: -0.2389431\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-12-19'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: 0.10008812\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-12-20'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: -0.20712614\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-12-23'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: 1.6318321\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-12-24'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: 0.09506941\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-12-25'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: 0\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-12-26'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: 1.984036\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-12-27'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: -0.037950277\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-12-30'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: 0.5935073\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-12-31'\n            adjDate: '2014-06-09'\n            currency: USD\n            totalReturn: 0.7306576\n            requestId: AAPL\n    fangStocksReturnPost:\n      summary: \u003e-\n        Fetch the latest one month returns for the FANG stocks - FB, AAPL, NFLX,\n        and GOOGL\n      description: \u003e-\n        Fetch the latest one month returns for the FANG stocks - FB, AAPL, NFLX,\n        and GOOGL\n      value:\n        ids:\n          - FB-US\n          - AAPL-US\n          - NFLX-US\n          - GOOGL-US\n        frequency: D\n        calendar: FIVEDAY\n        currency: LOCAL\n        dividendAdjust: EXDATE_C\n        rollingPeriod: 1M\n    dailyPriceChangeAMZNPost:\n      summary: Fetch daily price changes for AAPL for the year 2019\n      description: Fetch daily price changes for AAPL for the year 2019\n      value:\n        ids:\n          - AMZN-US\n        startDate: '2018-12-31'\n        endDate: '2019-12-31'\n        frequency: D\n        calendar: FIVEDAY\n        currency: LOCAL\n        dividendAdjust: PRICE\n    latestDividends:\n      summary: Latest Dividends for AAPL and MSFT\n      description: Latest Dividends for AAPL and MSFT\n      value:\n        data:\n          - fsymId: MH33D6-R\n            divsExDate: '2020-02-07'\n            adjDate: '2014-06-09'\n            currency: USD\n            divsPaid: 0.77\n            divsRecDate: '2020-02-10'\n            divsPayDate: '2020-02-13'\n            divsTypeC: 1049\n            divsTypeD: U.S. Currency\n            divsTaxC: null\n            divsTaxD: null\n            divsNGFlag: null\n            divsNGEquiv: 0\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            divsExDate: '2020-05-08'\n            adjDate: '2014-06-09'\n            currency: USD\n            divsPaid: 0.82\n            divsRecDate: '2020-05-11'\n            divsPayDate: '2020-05-14'\n            divsTypeC: 1049\n            divsTypeD: U.S. Currency\n            divsTaxC: null\n            divsTaxD: null\n            divsNGFlag: null\n            divsNGEquiv: 0\n            requestId: AAPL\n          - fsymId: P8R3C2-R\n            divsExDate: '2020-02-19'\n            adjDate: '2003-02-18'\n            currency: USD\n            divsPaid: 0.51\n            divsRecDate: '2020-02-20'\n            divsPayDate: '2020-03-12'\n            divsTypeC: 1049\n            divsTypeD: U.S. Currency\n            divsTaxC: null\n            divsTaxD: null\n            divsNGFlag: null\n            divsNGEquiv: 0\n            requestId: MSFT\n          - fsymId: P8R3C2-R\n            divsExDate: '2020-05-20'\n            adjDate: '2003-02-18'\n            currency: USD\n            divsPaid: 0.51\n            divsRecDate: '2020-05-21'\n            divsPayDate: '2020-06-11'\n            divsTypeC: 1049\n            divsTypeD: U.S. Currency\n            divsTaxC: null\n            divsTaxD: null\n            divsNGFlag: null\n            divsNGEquiv: 0\n            requestId: MSFT\n    3yrDividendsAPPL:\n      summary: Three Years of Dividends for AAPL as of 2019\n      description: Three Years of Dividends for AAPL as of 2019\n      value:\n        data:\n          - fsymId: MH33D6-R\n            divsExDate: '2017-02-09'\n            adjDate: '2014-06-09'\n            currency: USD\n            divsPaid: 0.57\n            divsRecDate: '2017-02-13'\n            divsPayDate: '2017-02-16'\n            divsTypeC: 1049\n            divsTypeD: U.S. Currency\n            divsTaxC: null\n            divsTaxD: null\n            divsNGFlag: null\n            divsNGEquiv: 0\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            divsExDate: '2017-05-11'\n            adjDate: '2014-06-09'\n            currency: USD\n            divsPaid: 0.63\n            divsRecDate: '2017-05-15'\n            divsPayDate: '2017-05-18'\n            divsTypeC: 1049\n            divsTypeD: U.S. Currency\n            divsTaxC: null\n            divsTaxD: null\n            divsNGFlag: null\n            divsNGEquiv: 0\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            divsExDate: '2017-08-10'\n            adjDate: '2014-06-09'\n            currency: USD\n            divsPaid: 0.63\n            divsRecDate: '2017-08-14'\n            divsPayDate: '2017-08-17'\n            divsTypeC: 1049\n            divsTypeD: U.S. Currency\n            divsTaxC: null\n            divsTaxD: null\n            divsNGFlag: null\n            divsNGEquiv: 0\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            divsExDate: '2017-11-10'\n            adjDate: '2014-06-09'\n            currency: USD\n            divsPaid: 0.63\n            divsRecDate: '2017-11-13'\n            divsPayDate: '2017-11-16'\n            divsTypeC: 1049\n            divsTypeD: U.S. Currency\n            divsTaxC: null\n            divsTaxD: null\n            divsNGFlag: null\n            divsNGEquiv: 0\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            divsExDate: '2018-02-09'\n            adjDate: '2014-06-09'\n            currency: USD\n            divsPaid: 0.63\n            divsRecDate: '2018-02-12'\n            divsPayDate: '2018-02-15'\n            divsTypeC: 1049\n            divsTypeD: U.S. Currency\n            divsTaxC: null\n            divsTaxD: null\n            divsNGFlag: null\n            divsNGEquiv: 0\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            divsExDate: '2018-05-11'\n            adjDate: '2014-06-09'\n            currency: USD\n            divsPaid: 0.73\n            divsRecDate: '2018-05-14'\n            divsPayDate: '2018-05-17'\n            divsTypeC: 1049\n            divsTypeD: U.S. Currency\n            divsTaxC: null\n            divsTaxD: null\n            divsNGFlag: null\n            divsNGEquiv: 0\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            divsExDate: '2018-08-10'\n            adjDate: '2014-06-09'\n            currency: USD\n            divsPaid: 0.73\n            divsRecDate: '2018-08-13'\n            divsPayDate: '2018-08-16'\n            divsTypeC: 1049\n            divsTypeD: U.S. Currency\n            divsTaxC: null\n            divsTaxD: null\n            divsNGFlag: null\n            divsNGEquiv: 0\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            divsExDate: '2018-11-08'\n            adjDate: '2014-06-09'\n            currency: USD\n            divsPaid: 0.73\n            divsRecDate: '2018-11-12'\n            divsPayDate: '2018-11-15'\n            divsTypeC: 1049\n            divsTypeD: U.S. Currency\n            divsTaxC: null\n            divsTaxD: null\n            divsNGFlag: null\n            divsNGEquiv: 0\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            divsExDate: '2019-02-08'\n            adjDate: '2014-06-09'\n            currency: USD\n            divsPaid: 0.73\n            divsRecDate: '2019-02-11'\n            divsPayDate: '2019-02-14'\n            divsTypeC: 1049\n            divsTypeD: U.S. Currency\n            divsTaxC: null\n            divsTaxD: null\n            divsNGFlag: null\n            divsNGEquiv: 0\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            divsExDate: '2019-05-10'\n            adjDate: '2014-06-09'\n            currency: USD\n            divsPaid: 0.77\n            divsRecDate: '2019-05-13'\n            divsPayDate: '2019-05-16'\n            divsTypeC: 1049\n            divsTypeD: U.S. Currency\n            divsTaxC: null\n            divsTaxD: null\n            divsNGFlag: null\n            divsNGEquiv: 0\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            divsExDate: '2019-08-09'\n            adjDate: '2014-06-09'\n            currency: USD\n            divsPaid: 0.77\n            divsRecDate: '2019-08-12'\n            divsPayDate: '2019-08-15'\n            divsTypeC: 1049\n            divsTypeD: U.S. Currency\n            divsTaxC: null\n            divsTaxD: null\n            divsNGFlag: null\n            divsNGEquiv: 0\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            divsExDate: '2019-11-07'\n            adjDate: '2014-06-09'\n            currency: USD\n            divsPaid: 0.77\n            divsRecDate: '2019-11-11'\n            divsPayDate: '2019-11-14'\n            divsTypeC: 1049\n            divsTypeD: U.S. Currency\n            divsTaxC: null\n            divsTaxD: null\n            divsNGFlag: null\n            divsNGEquiv: 0\n            requestId: AAPL\n    singleSecurityDividends:\n      summary: AAPL Dividends in 2019\n      description: AAPL Dividends in 2019\n      value:\n        ids:\n          - AAPL-US\n        startDate: '2018-12-31'\n        endDate: '2019-12-31'\n        currency: LOCAL\n        adjust: SPLIT\n    latestDividendsPost:\n      summary: Latest Dividends for AAPL and MSFT\n      description: Latest Dividends for AAPL and MSFT\n      value:\n        ids:\n          - AAPL-US\n          - MSFT-US\n        startDate: ''\n        endDate: ''\n        currency: LOCAL\n        adjust: SPLIT\n    singleSecuritySplits:\n      summary: Split History for MSFT\n      description: Split History for MSFT\n      value:\n        data:\n          - fsymId: P8R3C2-R\n            date: '1987-09-21'\n            splitFactor: 0.5\n            splitComment: null\n            requestId: MSFT\n          - fsymId: P8R3C2-R\n            date: '1990-04-16'\n            splitFactor: 0.5\n            splitComment: null\n            requestId: MSFT\n          - fsymId: P8R3C2-R\n            date: '1991-06-27'\n            splitFactor: 0.6666667\n            splitComment: null\n            requestId: MSFT\n          - fsymId: P8R3C2-R\n            date: '1992-06-15'\n            splitFactor: 0.6666667\n            splitComment: null\n            requestId: MSFT\n          - fsymId: P8R3C2-R\n            date: '1994-05-23'\n            splitFactor: 0.5\n            splitComment: null\n            requestId: MSFT\n          - fsymId: P8R3C2-R\n            date: '1996-12-09'\n            splitFactor: 0.5\n            splitComment: null\n            requestId: MSFT\n          - fsymId: P8R3C2-R\n            date: '1998-02-23'\n            splitFactor: 0.5\n            splitComment: null\n            requestId: MSFT\n          - fsymId: P8R3C2-R\n            date: '1999-03-29'\n            splitFactor: 0.5\n            splitComment: null\n            requestId: MSFT\n          - fsymId: P8R3C2-R\n            date: '2003-02-18'\n            splitFactor: 0.5\n            splitComment: 'Split: 2 for 1'\n            requestId: MSFT\n    multipleSecuritySplits:\n      summary: Split History for GOOGL, MSFT, and AMZN\n      description: Split History for Multiple Securities - GOOGL, MSFT, AMZN\n      value:\n        data:\n          - fsymId: HTM0LK-R\n            date: '2014-04-03'\n            splitFactor: 0.500484\n            splitComment: 'Split: 2 for 1.000968'\n            requestId: GOOGL\n          - fsymId: P8R3C2-R\n            date: '1987-09-21'\n            splitFactor: 0.5\n            splitComment: null\n            requestId: MSFT\n          - fsymId: P8R3C2-R\n            date: '1990-04-16'\n            splitFactor: 0.5\n            splitComment: null\n            requestId: MSFT\n          - fsymId: P8R3C2-R\n            date: '1991-06-27'\n            splitFactor: 0.6666667\n            splitComment: null\n            requestId: MSFT\n          - fsymId: P8R3C2-R\n            date: '1992-06-15'\n            splitFactor: 0.6666667\n            splitComment: null\n            requestId: MSFT\n          - fsymId: P8R3C2-R\n            date: '1994-05-23'\n            splitFactor: 0.5\n            splitComment: null\n            requestId: MSFT\n          - fsymId: P8R3C2-R\n            date: '1996-12-09'\n            splitFactor: 0.5\n            splitComment: null\n            requestId: MSFT\n          - fsymId: P8R3C2-R\n            date: '1998-02-23'\n            splitFactor: 0.5\n            splitComment: null\n            requestId: MSFT\n          - fsymId: P8R3C2-R\n            date: '1999-03-29'\n            splitFactor: 0.5\n            splitComment: null\n            requestId: MSFT\n          - fsymId: P8R3C2-R\n            date: '2003-02-18'\n            splitFactor: 0.5\n            splitComment: 'Split: 2 for 1'\n            requestId: MSFT\n          - fsymId: MCNYYL-R\n            date: '1998-06-02'\n            splitFactor: 0.5\n            splitComment: null\n            requestId: AMZN\n          - fsymId: MCNYYL-R\n            date: '1999-01-05'\n            splitFactor: 0.33333334\n            splitComment: null\n            requestId: AMZN\n          - fsymId: MCNYYL-R\n            date: '1999-09-02'\n            splitFactor: 0.5\n            splitComment: null\n            requestId: AMZN\n    splitHistoryMSFTPost:\n      summary: Split History Request for MSFT\n      description: Split History Request for MSFT\n      value:\n        ids:\n          - MSFT-US\n    multipleSplitsHistoryPost:\n      summary: Splits History for GOOGL, MSFT, and AMZN\n      description: Splits History for GOOGL, MSFT, and AMZN\n      value:\n        ids:\n          - GOOGL-US\n          - MSFT-US\n          - AMZN-US\n    singleSecurityShares:\n      summary: One Year of Monthly Share Values for AAPL\n      description: Latest Dividends for AAPL and MSFT\n      value:\n        data:\n          - fsymId: MH33D6-R\n            date: '2018-12-31'\n            adjDate: '2014-06-09'\n            sharesSecurity: 4745398000\n            sharesCompany: 4745397949.21875\n            sharesCompanyNontraded: 4745397949.21875\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-01-31'\n            adjDate: '2014-06-09'\n            sharesSecurity: 4715280000\n            sharesCompany: 4715279785.15625\n            sharesCompanyNontraded: 4715279785.15625\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-02-28'\n            adjDate: '2014-06-09'\n            sharesSecurity: 4715280000\n            sharesCompany: 4715279785.15625\n            sharesCompanyNontraded: 4715279785.15625\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-03-29'\n            adjDate: '2014-06-09'\n            sharesSecurity: 4715280000\n            sharesCompany: 4715279785.15625\n            sharesCompanyNontraded: 4715279785.15625\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-04-30'\n            adjDate: '2014-06-09'\n            sharesSecurity: 4601075000\n            sharesCompany: 4601075195.3125\n            sharesCompanyNontraded: 4601075195.3125\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-05-31'\n            adjDate: '2014-06-09'\n            sharesSecurity: 4601075000\n            sharesCompany: 4601075195.3125\n            sharesCompanyNontraded: 4601075195.3125\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-06-28'\n            adjDate: '2014-06-09'\n            sharesSecurity: 4601075000\n            sharesCompany: 4601075195.3125\n            sharesCompanyNontraded: 4601075195.3125\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-07-31'\n            adjDate: '2014-06-09'\n            sharesSecurity: 4519180300\n            sharesCompany: 4519180175.78125\n            sharesCompanyNontraded: 4519180175.78125\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-08-30'\n            adjDate: '2014-06-09'\n            sharesSecurity: 4519180300\n            sharesCompany: 4519180175.78125\n            sharesCompanyNontraded: 4519180175.78125\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-09-30'\n            adjDate: '2014-06-09'\n            sharesSecurity: 4519180300\n            sharesCompany: 4519180175.78125\n            sharesCompanyNontraded: 4519180175.78125\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-10-31'\n            adjDate: '2014-06-09'\n            sharesSecurity: 4443265000\n            sharesCompany: 4443265136.71875\n            sharesCompanyNontraded: 4443265136.71875\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-11-29'\n            adjDate: '2014-06-09'\n            sharesSecurity: 4443265000\n            sharesCompany: 4443265136.71875\n            sharesCompanyNontraded: 4443265136.71875\n            requestId: AAPL\n          - fsymId: MH33D6-R\n            date: '2019-12-31'\n            adjDate: '2014-06-09'\n            sharesSecurity: 4443265000\n            sharesCompany: 4443265136.71875\n            sharesCompanyNontraded: 4443265136.71875\n            requestId: AAPL\n    multipleSecuritiesShares:\n      summary: \u003e-\n        Multiple Security Share Values as of 2019 Year End - FB, AAPL, NFLX,\n        GOOGL\n      description: Latest Dividends for AAPL and MSFT\n      value:\n        data:\n          - fsymId: QLGSL2-R\n            date: '2019-12-31'\n            adjDate: null\n            sharesSecurity: 2406468000\n            sharesCompany: 2406468017.57812\n            sharesCompanyNontraded: 2851468017.57812\n            requestId: FB\n          - fsymId: MH33D6-R\n            date: '2019-12-31'\n            adjDate: '2014-06-09'\n            sharesSecurity: 4443265000\n            sharesCompany: 4443265136.71875\n            sharesCompanyNontraded: 4443265136.71875\n            requestId: AAPL\n          - fsymId: C4C0BL-R\n            date: '2019-12-31'\n            adjDate: '2015-07-15'\n            sharesSecurity: 438251000\n            sharesCompany: 438251007.080078\n            sharesCompanyNontraded: 438251007.080078\n            requestId: NFLX\n          - fsymId: HTM0LK-R\n            date: '2019-12-31'\n            adjDate: '2014-04-03'\n            sharesSecurity: 299828000\n            sharesCompany: 641894012.451172\n            sharesCompanyNontraded: 688335012.451172\n            requestId: GOOGL\n    singleSecuritySharesPost:\n      summary: Request Monthly Shares Values for AAPL for 2019 calendar year\n      description: Request Monthly Shares Values for AAPL for 2019 calendar year\n      value:\n        ids:\n          - AAPL-US\n        startDate: '2018-12-31'\n        endDate: '2019-12-31'\n        frequency: M\n        calendar: FIVEDAY\n        splitAdjust: SPLIT\n    multipleSecuritiesSharesPost:\n      summary: \u003e-\n        Request Multiple Security Share Counts as of 2019 year end - FB, AAPL,\n        NFLX, GOOGL\n      description: \u003e-\n        Request Multiple Security Share Counts as of 2019 year end - FB, AAPL,\n        NFLX, GOOGL. Note the startDate and endDate must both be equal to the\n        single day requested, if one is left blank yesterday's close will be\n        used as default.\n      value:\n        ids:\n          - FB-US\n          - AAPL-US\n          - NFLX-US\n          - GOOGL-US\n        startDate: '2019-12-31'\n        endDate: '2019-12-31'\n        frequency: D\n        calendar: FIVEDAY\n        splitAdjust: SPLIT\n    singleMarketValue:\n      summary: Single Market Value Record for GOOGL as of July 7 2020\n      description: Single Market Value Record for GOOGL\n      value:\n        data:\n          - fsymId: HTM0LK-R\n            date: '2020-07-07'\n            currency: USD\n            entityMarketValue: 1022362841136.31\n            entityMarketValueExNotTraded: 952768582453.33\n            securityMarketValue: 449970657342.5\n            requestId: GOOGL\n    multipleMarketValues:\n      summary: Multiple Market Value Records for GOOGL and TSLA as of July 7 2020\n      description: Multiple Market Value Records for GOOGL and TSLA as of July 7 2020\n      value:\n        data:\n          - fsymId: HTM0LK-R\n            date: '2020-07-07'\n            currency: USD\n            entityMarketValue: 1022362841136.31\n            entityMarketValueExNotTraded: 952768582453.33\n            securityMarketValue: 449970657342.5\n            requestId: GOOGL\n          - fsymId: Q2YN1N-R\n            date: '2020-07-07'\n            currency: USD\n            entityMarketValue: 257784946701.1\n            entityMarketValueExNotTraded: 257784946701.1\n            securityMarketValue: 257784978430\n            requestId: TSLA\n    singleMarketValuePost:\n      summary: Requesting One Year of Daily Market Values for GOOGL Calendar 2019 Year\n      description: \u003e-\n        Requesting One Year of Daily Market Values for GOOGL in Calendar 2019\n        Year\n      value:\n        ids:\n          - GOOGL-US\n        startDate: '2019-01-01'\n        endDate: '2019-12-31'\n        frequency: D\n        calendar: FIVEDAY\n        currency: USD\n    multipleMarketValuePost:\n      summary: \u003e-\n        Requesting One Year of Market Values on a monthly frequency for GOOGL\n        and TSLA Calendar 2019 Year\n      description: \u003e-\n        Requesting One Year of Market Values on a monthly frequency for GOOGL\n        and TSLA in Calendar 2019 Year\n      value:\n        ids:\n          - GOOGL-US\n          - TSLA-US\n        startDate: '2019-01-01'\n        endDate: '2019-12-31'\n        frequency: M\n        calendar: FIVEDAY\n        currency: USD\n    singleSecurityReferences:\n      summary: Single Security Reference Details\n      description: Single Security Reference Details\n      value:\n        data:\n          - fsymId: MH33D6-R\n            name: APPLE INC\n            secType: Common stock\n            secTypeCode: '0'\n            secTypeCodeDet: '10'\n            currency: USD\n            country: UNITED STATES\n            primaryExchange: NASDAQ\n            exchangeCountry: UNITED STATES\n            localIndex: SP50\n            nextTradingHolidayDate: '2020-11-26'\n            firstDate: '1980-12-12'\n            lastDate: '2020-10-13'\n            requestId: AAPL-USA\n    multipleSecurityReferences:\n      summary: Multiple Security Reference Details\n      description: Multiple Security Reference Details\n      value:\n        data:\n          - fsymId: SQFMK3-R\n            name: FACTSET RESH SYS INC\n            secType: Common stock\n            secTypeCode: '0'\n            secTypeCodeDet: '10'\n            currency: USD\n            country: UNITED STATES\n            primaryExchange: NYSE\n            exchangeCountry: UNITED STATES\n            localIndex: SP50\n            nextTradingHolidayDate: '2020-11-26'\n            firstDate: '1996-06-28'\n            lastDate: '2020-10-13'\n            requestId: FDS-US\n          - fsymId: MH33D6-R\n            name: APPLE INC\n            secType: Common stock\n            secTypeCode: '0'\n            secTypeCodeDet: '10'\n            currency: USD\n            country: UNITED STATES\n            primaryExchange: NASDAQ\n            exchangeCountry: UNITED STATES\n            localIndex: SP50\n            nextTradingHolidayDate: '2020-11-26'\n            firstDate: '1980-12-12'\n            lastDate: '2020-10-13'\n            requestId: AAPL-US\n          - fsymId: P8R3C2-R\n            name: MICROSOFT CORP\n            secType: Common stock\n            secTypeCode: '0'\n            secTypeCodeDet: '10'\n            currency: USD\n            country: UNITED STATES\n            primaryExchange: NASDAQ\n            exchangeCountry: UNITED STATES\n            localIndex: SP50\n            nextTradingHolidayDate: '2020-11-26'\n            firstDate: '1986-03-13'\n            lastDate: '2020-10-13'\n            requestId: MSFT-US\n    multipleReferencesPost:\n      summary: Requesting Multiple Security References\n      description: Requesting Multiple Security References\n      value:\n        ids:\n          - GOOGL-US\n          - TSLA-US\n    singleHighLow:\n      summary: Price High and Price Low for a Single Security for 52 week period\n      description: Price High and Price Low for a Single Security for 52 week period\n      value:\n        data:\n          - adjDate: '2014-04-03'\n            date: '2020-07-07'\n            fsymId: HTM0LK-R\n            period: 52W\n            priceHigh: 1524.87\n            priceLow: 1054.13\n            priceLowDate: '2020-03-23'\n            priceHighDate: '2020-02-19'\n            requestId: GOOGL-US\n    multipleHighLow:\n      summary: Price High and Price Low for Multiple Securities for 52 week period\n      description: Price High and Price Low for a Multiple Securities for 52 week period\n      value:\n        data:\n          - adjDate: '2020-08-31'\n            date: '2020-03-06'\n            fsymId: MH33D6-R\n            period: 52W\n            priceHigh: 81.8\n            priceLow: 43.125\n            priceLowDate: '2020-03-27'\n            priceHighDate: '2020-02-12'\n            requestId: AAPL-US\n          - adjDate: '2020-08-31'\n            date: '2020-03-06'\n            fsymId: Q2YN1N-R\n            period: 52W\n            priceHigh: 183.48\n            priceLow: 35.79\n            priceLowDate: '2020-06-03'\n            priceHighDate: '2020-02-19'\n            requestId: TSLA-US\n    singleHighLowPost:\n      summary: \u003e-\n        Requesting Price High and Price Low for a Single Security for 52 week\n        period\n      description: Price High and Price Low for a Single Security for 52 week period\n      value:\n        ids:\n          - GOOGL-US\n        date: '2020-07-07'\n        period: 52W\n        priceType: CLOSE\n        calendar: FIVEDAY\n        currency: USD\n        adjust: SPLIT\n    multipleHighLowPost:\n      summary: \u003e-\n        Requesting Price High and Price Low for Multiple Securities for 52 week\n        period\n      description: Price High and Price Low for Multiple Securities for 52 week period\n      value:\n        ids:\n          - AAPL-US\n          - TSLA-US\n        date: '2020-07-07'\n        period: 52W\n        priceType: CLOSE\n        calendar: FIVEDAY\n        currency: USD\n        adjust: SPLIT\n    singleRSCompundRT:\n      summary: Requesting returns details for single company with compound return type.\n      description: \u003e-\n        Returns result for the given ticker price performance and annualized\n        returns analysis with compound return type.\n      value:\n        ids:\n          - GOOGL-US\n        date: '2020-10-09'\n        dividendAdjust: EXDATE_C\n        calendar: FIVEDAY\n        currency: USD\n    multipleRSSimpleRT:\n      summary: \u003e-\n        Requesting returns details for Multiple companies with simple return\n        type.\n      description: \u003e-\n        Returns result for the given tickers price performance and annualized\n        returns analysis with simple return type.\n      value:\n        ids:\n          - GOOGL-US\n          - IBM-US\n        date: '2020-10-09'\n        dividendAdjust: EXDATE\n        calendar: FIVEDAY\n        currency: USD\n    singleRSCompundRTResponse:\n      summary: Requesting returns details for single company with compound return type.\n      description: \u003e-\n        Returns result for the given ticker price performance and annualized\n        returns analysis with compound return type.\n      value:\n        data:\n          - currency: USD\n            date: '2020-09-10'\n            dividendAdjust: EXDATE_C\n            fiveYearAnnualized: 18.892164\n            fsymId: HTM0LK-R\n            ipoToDateAnnualized: 23.792849\n            monthToDate: -5.05054\n            nineMonth: 15.2164345\n            oneDay: 0\n            oneMonth: 3.3678055\n            oneYear: 28.326284\n            quarterToDate: 9.109688\n            sixMonth: 21.335184\n            tenYearAnnualized: 20.567951\n            thirtyYearAnnualized: null\n            threeMonth: 5.634606\n            threeYearAnnualized: 17.971731\n            twentyYearAnnualized: null\n            twoYearAnnualized: 14.737806\n            weekToDate: -2.1489859\n            yearToDate: 15.517509\n            requestId: GOOGL-US\n    multipleRSSimpleRTResponse:\n      summary: \u003e-\n        Requesting returns details for multiple companies with simple return\n        type.\n      description: \u003e-\n        Returns result for the given tickers returns and annualized returns\n        analysis with simple return type.\n      value:\n        data:\n          - currency: USD\n            date: '2020-09-10'\n            dividendAdjust: EXDATE\n            fiveYearAnnualized: 18.892164\n            fsymId: HTM0LK-R\n            ipoToDateAnnualized: 23.792849\n            monthToDate: -5.05054\n            nineMonth: 15.2164345\n            oneDay: 0\n            oneMonth: 3.3678055\n            oneYear: 28.326284\n            quarterToDate: 9.109688\n            requestId: GOOGL-US\n            sixMonth: 21.335184\n            tenYearAnnualized: 20.567951\n            thirtyYearAnnualized: null\n            threeMonth: 5.634606\n            threeYearAnnualized: 17.971731\n            twentyYearAnnualized: null\n            twoYearAnnualized: 14.737806\n            weekToDate: -2.1489859\n            yearToDate: 15.517509\n          - currency: USD\n            date: '2020-09-10'\n            dividendAdjust: EXDATE\n            fiveYearAnnualized: 0.68179286\n            fsymId: SJY281-R\n            ipoToDateAnnualized: 6.5760174\n            monthToDate: -0.851506\n            nineMonth: -5.0556364\n            oneDay: 0\n            oneMonth: -3.8155913\n            oneYear: -11.230612\n            quarterToDate: 2.5834322\n            requestId: IBM-US\n            sixMonth: 0.60111284\n            tenYearAnnualized: 2.7469\n            thirtyYearAnnualized: 7.513745\n            threeMonth: -4.604602\n            threeYearAnnualized: -0.49068186\n            twentyYearAnnualized: 1.8993893\n            twoYearAnnualized: -3.8598573\n            weekToDate: -0.03270507\n            yearToDate: -5.1477075\n    BatchPricesRequestPost:\n      summary: Batch Request for Prices for APPL and Tesla.\n      description: Batch Request for Prices for APPL and Tesla.\n      value:\n        ids:\n          - AAPL-US\n          - TSLA-US\n        startDate: '2019-01-01'\n        endDate: '2019-12-31'\n        frequency: D\n        calendar: FIVEDAY\n        currency: LOCAL\n        adjust: SPLIT\n        batch: 'Y'\n    BatchStatusAcceptedResponse:\n      description: Batch Status Accepted Response\n      value:\n        data:\n          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c\n          status: QUEUED\n          startTime: '2021-06-29T18:34:52.168Z'\n          endTime: null\n          error: null\n    badRequestDateFormat:\n      summary: Bad Request - Date Format\n      description: \u003e-\n        This bad request occurs when a request doesn't use the YYYY-MM-DD in the\n        date parameters. To resolve, convert your date to YYYY-MM-DD.\n      value:\n        status: Bad Request\n        timestamp: '2019-10-31 16:08:07.945'\n        path: /factset-prices/v1/{endpoint}\n        message: \u003e-\n          The date parameter 'startDate' must be in the following date format:\n          YYYY-MM-DD\n        subErrors: null\n    badRequestRequiredParameter:\n      summary: Bad Request - Required Parameter Missing\n      description: \u003e-\n        This error message occurs when the request does not include the required\n        parameters. Required parameters are indicated with a red asterisks\n        symbol in the specification file.\n      value:\n        status: Bad Request\n        timestamp: '2020-06-12 15:48:42.016'\n        path: /factset-prices/v1/{endpoint}\n        message: The parameter 'ids' is required and may not be empty.\n        subErrors: null\n    badRequestFutureDate:\n      summary: Bad Request - Future Date\n      description: \u003e-\n        This error message occurs when a future date is requested in the\n        startDate and endDate parameters. Please revise your request to include\n        dates as of today's current date or any prior historical date.\n      value:\n        status: Bad Request\n        timestamp: '2020-06-12 15:52:48.091'\n        path: /factset-prices/v1/{endpoint}\n        message: \u003e-\n          The use of future dates is not applicable in this endpoint. Please\n          revise your request to include dates up to today's current date.\n        subErrors: null\n    badRequestInvalidParameters:\n      summary: Bad Request - Invalid Parameters\n      description: \u003e-\n        This error message occurs when a request parameter is used in which is\n        not recognized by the service. Please revise your request to include\n        only the parameters listed in the specification. Typical causes are\n        spelling mistakes and use of improper casing.\n      value:\n        status: Bad Request\n        timestamp: '2020-06-12 15:58:54.068'\n        path: /factset-prices/v1/{endpoint}\n        message: \u003e-\n          Invalid Parameter (s): fakeParameterName1 fakeParameterName2. Please\n          modify your request to use parameters outlined in the specification\n          for this endpoint.\n        subErrors: null\n    badRequestMalformedJSON:\n      summary: Bad Request - Malformed JSON Request\n      description: \u003e-\n        This error may be returned when the request body is specified as JSON,\n        but is not in proper JSON format.\n      value:\n        status: Bad Request\n        timestamp: '2019-11-05 09:48:29.18'\n        path: /factset-prices/v1/{endpoint}\n        message: Malformed JSON Request\n        subErrors: null\n    badRequestReadTimeout:\n      summary: Bad Request - Read Timeout\n      description: \u003e-\n        This error may be returned if it takes more than 29 seconds to hear back\n        from the data fetch service.\n      value:\n        status: Bad Request\n        timestamp: '2019-11-04 16:18:38.949'\n        path: /factset-prices/v1/{endpoint}\n        message: The request took too long. Try again with a smaller request.\n        subErrors: null\n    unauthenticated:\n      summary: User Authentication Failed\n      description: \u003e-\n        This occurs when a user is not properly authenticated or recognized by\n        the service. Please double check the USERNAME-SERIAL and API-Key used to\n        request and ensure you are within the IP range specified for the Key.\n        Report Issue under 401 error for help with troubleshooting.\n      value:\n        status: User Authentication Failed\n        timestamp: '2019-10-31 16:08:07.945'\n        path: /factset-prices/v1/{endpoint}\n        message: User Authentication Failed.\n        subErrors: null\n    forbidden:\n      summary: Forbidden\n      description: \u003e-\n        The USERNAME-SERIAL attempted to request the endpoint is not authorized\n        to access. The request was a legal request, but the server is refusing\n        to respond. Please reach out to FactSet Account Team for assistance with\n        authorization.\n      value:\n        status: Forbidden\n        timestamp: '2020-06-12 16:08:51.731'\n        path: /factset-prices/v1/{endpoint}\n        message: \u003e-\n          USERNAME-SERIAL does not have permission to use\n          /factset-prices/v1/{endpoint}\n        subErrors: null\n    unsupportedMediaType:\n      summary: Unsupported Media Type\n      description: \u003e-\n        This bad request occurs when the media type passed in the request is not\n        supported. Currently the APIs only support 'application/json'.\n      value:\n        status: Unsupported Media Type\n        timestamp: '2019-11-05 09:42:27.237'\n        path: /factset-prices/v1/{endpoint}\n        message: \u003e-\n          text/html media type is not supported. Supported media types are\n          application/json\n        subErrors: null\n    notWritable:\n      summary: Internal Server Error - Not Writable\n      description: \u003e-\n        This error may be returned when the server encounters an error writing\n        the JSON response.\n      value:\n        status: Internal Server Error\n        timestamp: '2019-11-05 09:48:29.18'\n        path: /factset-prices/v1/{endpoint}\n        message: Error writing JSON output\n        subErrors: null\n    generalException:\n      summary: Internal Server Error - General Exception\n      description: \u003e-\n        This is the most general error that can be returned to by the service.\n        Please `Report Issue` to FactSet.\n      value:\n        status: Internal Server Error\n        timestamp: '2019-11-01 10:36:01.944'\n        path: /factset-prices/v1/{endpoint}\n        message: Unexpected error\n        subErrors: null\n",
			"canonicalURL": "/github.com/factset/enterprise-sdk@dcf75a02daedc726c313912a349d2863114bc92c/-/blob/specs/FactSetPrices.v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/factset/enterprise-sdk/blob/dcf75a02daedc726c313912a349d2863114bc92c/specs/FactSetPrices.v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/factset-prices/v1/prices\": get: security: security \"FactSetOAuth2\" (index 1): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}