{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Amsterdam/signals"
		},
		"file": {
			"name": "public_openapi.yaml",
			"size": 0,
			"path": "api/app/signals/apps/questionnaires/templates/questionnaires/swagger/public_openapi.yaml",
			"byteSize": 19128,
			"content": "openapi: 3.0.0\n\ninfo:\n  title: Questionnaires public endpoints\n  description: \u003e-\n    *** THIS APP IS STILL IN DEVELOPMENT, API MAY STILL CHANGE ***\n\n\n    A questionnaires app for the Signals project.\n    This swagger file contains all public endpoints of the app.\n  contact:\n    email: \"datapunt@amsterdam.nl\"\n  version: \"0.1.0-dev\"\n\nservers:\n  - url: https://127.0.0.1:{port}/signals/v1\n    description: Used for local development\n    variables:\n      port:\n        enum:\n          - '8000'\n          - '8080'\n          - '80'\n        default: '8000'\n\n  - url: /signals/v1\n\npaths:\n  /public/qa/questionnaires:\n    get:\n      responses:\n        '200':\n          description: List of Questionnaires\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublicQuestionnaires'\n      security:\n        - OAuth2:\n            - SIG/ALL\n\n  /public/qa/questionnaires/{UUID}:\n    parameters:\n      - name: UUID\n        in: path\n        description: UUID of Questionnaire\n        required: true\n        schema:\n          type: string\n          pattern: '^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$'\n          example: '00000000-0000-0000-0000-000000000000'\n    get:\n      responses:\n        '200':\n          description: Detail of the requested Questionnaire\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublicQuestionnaire'\n        '404':\n          description: Questionnaire not found\n\n  /public/qa/questionnaires/{UUID}/session:\n    parameters:\n      - name: UUID\n        in: path\n        description: UUID of Questionnaire\n        required: true\n        schema:\n          type: string\n          pattern: '^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$'\n          example: '00000000-0000-0000-0000-000000000000'\n    post:\n      responses:\n        '201':\n          description: Detail of the created Session\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublicSession'\n        '400':\n          description: Bad request\n        '404':\n          description: Questionnaire not found\n\n  /public/qa/questions:\n    get:\n      responses:\n        '200':\n          description: List of Questions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublicQuestions'\n\n  /public/qa/questions/{UUID}:\n    parameters:\n      - name: UUID\n        in: path\n        description: UUID of Question\n        required: true\n        schema:\n          type: string\n          pattern: '^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$'\n          example: '00000000-0000-0000-0000-000000000000'\n    get:\n      responses:\n        '200':\n          description: Detail of the selected Question\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublicQuestion'\n        '404':\n          description: Question not found\n\n  /public/qa/questions/{UUID}/answer:\n    parameters:\n      - name: UUID\n        in: path\n        description: UUID of Question\n        required: true\n        schema:\n          type: string\n          pattern: '^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$'\n          example: '00000000-0000-0000-0000-000000000000'\n    post:\n      description: Answer a specific question\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/PublicAnswerQuestionRequestWithQuestionnaire'\n                - $ref: '#/components/schemas/PublicAnswerQuestionRequestWithSession'\n            examples:\n              questionnaire:\n                value: {'payload': 'test', 'questionnaire': '00000000-0000-0000-0000-000000000000'}\n              session:\n                value: {'payload': 'test', 'session': '00000000-0000-0000-0000-000000000000'}\n\n      responses:\n        '201':\n          description: Returns the created answer, the response also contains the next question if available.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublicAnswerQuestion'\n        '400':\n          description: Request invalid\n        '404':\n          description: Question not found\n\n  /public/qa/sessions/{UUID}:\n    parameters:\n      - name: UUID\n        in: path\n        description: UUID of the Session\n        required: true\n        schema:\n          type: string\n          pattern: '^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$'\n          example: '00000000-0000-0000-0000-000000000000'\n    get:\n      responses:\n        '200':\n          description: Detail of the requested Session\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublicSession'\n\n  /public/qa/sessions/{UUID}/answers:\n    parameters:\n      - name: UUID\n        in: path\n        description: UUID of Session\n        required: true\n        schema:\n          type: string\n          pattern: '^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$'\n          example: '00000000-0000-0000-0000-000000000000'\n    post:\n      description: Submit a set of answers for a specific Session\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PublicSessionAnswerQuestionList'\n\n      responses:\n        '200':\n          description: Detail of the current state of the Session\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublicSession'\n        '400':\n          description: Request invalid\n        '404':\n          description: Session not found\n        '410':\n          description: Session already used or expired.\n\n  /public/qa/sessions/{UUID}/attachments:\n    parameters:\n      - name: UUID\n        in: path\n        description: UUID of Session\n        required: true\n        schema:\n          type: string\n          pattern: '^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$'\n          example: '00000000-0000-0000-0000-000000000000'\n    post:\n      description: Submit an attachment for a specific Session\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PublicSessionAnswerAttachmentQuestion'\n\n      responses:\n        '200':\n          description: Detail of the current state of the Session\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublicSession'\n        '400':\n          description: Request invalid\n        '404':\n          description: Session not found\n        '410':\n          description: Session already used or expired.\n\n  /public/qa/sessions/{UUID}/submit:\n    parameters:\n      - name: UUID\n        in: path\n        description: UUID of Session\n        required: true\n        schema:\n          type: string\n          pattern: '^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$'\n          example: '00000000-0000-0000-0000-000000000000'\n    post:\n      description: Submit a session (i.e. freeze it)\n\n      responses:\n        '200':\n          description: Detail of the current state of the Session\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublicSession'\n        '400':\n          description: Request invalid\n        '404':\n          description: Session not found\n        '410':\n          description: Session already used or expired.\n\ncomponents:\n  schemas:\n    HALPaginationLinks:\n      type: object\n      properties:\n        self:\n          type: object\n          properties:\n            href:\n              type: string\n              description: URI of current page\n              format: uri\n        next:\n          type: object\n          properties:\n            href:\n              type: string\n              description: URI of the next page\n              format: uri\n              nullable: true\n        previous:\n          type: object\n          properties:\n            href:\n              type: string\n              description: URI of the previous page\n              format: uri\n              nullable: true\n\n    PublicQuestionnaires:\n      description: JSON serialization of paginated list of Questionnaires\n      type: object\n      properties:\n        _links:\n          $ref: '#/components/schemas/HALPaginationLinks'\n        count:\n          type: integer\n          description: Total count of results for the request\n          example: 50\n        results:\n          type: array\n          description: A list of Questionnaires, paginated\n          items:\n            $ref: '#/components/schemas/PublicQuestionnaire'\n\n    PublicQuestionnaire:\n      description: Information about a Questionnaire\n      type: object\n      properties:\n        _links:\n          type: object\n          properties:\n            _link:\n              description: HAL JSON links\n              type: object\n              properties:\n                self:\n                  type: object\n                  properties:\n                    href:\n                      description: URI of the Questionnaire\n                      type: string\n                      format: uri\n        _display:\n          description: Display name of the Questionnaire\n          type: string\n        uuid:\n          type: string\n          pattern: '^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$'\n          example: '00000000-0000-0000-0000-000000000000'\n        first_question:\n          $ref: '#/components/schemas/PublicQuestion'\n        name:\n          type: string\n          example: \"Questionnaire #1\"\n        descriptionn:\n          type: string\n          nullable: true\n          example: \"Describing the Questionnaire\"\n        is_active:\n          type: boolean\n          example: true\n\n    PublicQuestions:\n      description: JSON serialization of paginated list of Questions\n      type: object\n      properties:\n        _links:\n          $ref: '#/components/schemas/HALPaginationLinks'\n        count:\n          type: integer\n          description: Total count of results for the request\n          example: 50\n        results:\n          type: array\n          description: A list of Questions, paginated\n          items:\n            $ref: '#/components/schemas/PublicQuestion'\n\n    PublicQuestion:\n      type: object\n      properties:\n        _links:\n          type: object\n          properties:\n            _link:\n              description: HAL JSON links\n              type: object\n              properties:\n                self:\n                  type: object\n                  properties:\n                    href:\n                      description: URI of the Question, using the KEY\n                      type: string\n                      format: uri\n                sia:uuid-self:\n                  type: object\n                  properties:\n                    href:\n                      description: URI of the Question, using the UUID\n                      type: string\n                      format: uri\n                sia:post-answer:\n                  type: object\n                  properties:\n                    href:\n                      description: URI where the answer can be posted\n                      type: string\n                      format: uri\n        _display:\n          description: Display name of the Question\n          type: string\n        key:\n          type: string\n          nullable: true\n          example: 'a-key-describing-the-question'\n          description: The `key` property is a copy of the `retrieval_key`.\n        retrieval_key:\n          type: string\n          nullable: true\n          example: 'a-key-describing-the-question'\n          description: Key for retrieval of a question, must be unique.\n        analysis_key:\n          type: string\n          nullable: true\n          example: \"question-key\"\n          description: Key that answer data will be collected under.\n        uuid:\n          type: string\n          pattern: '^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$'\n          example: '00000000-0000-0000-0000-000000000000'\n        label:\n          type: string\n          example: 'Long label for the question'\n        short_label:\n          type: string\n          example: 'Short label'\n        field_type:\n          type: string\n          enum:\n            - 'plain_text'\n            - 'integer'\n          example: 'plain_text'\n        next_rules:\n          type: string\n          nullable: true\n          example: [{'payload': 'yes', 'ref': 'next-question-key-1'}, {'payload': 'no', 'ref': 'next-question-key-2'}]\n        required:\n          type: boolean\n          example: false\n\n    PublicAnswerQuestion:\n      type: object\n      properties:\n        _links:\n          type: object\n        _display:\n          description: Display name of the Answer\n          type: string\n        payload:\n          description: The actual answer to the question\n          type: string\n        session:\n          description: The UUID of the Session (cannot be passed if a Questionnaire is used)\n          type: string\n          pattern: '^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$'\n          example: '00000000-0000-0000-0000-000000000000'\n        questionnaire:\n          description: The UUID of the Questionnaire (cannot be passed if a Session is used)\n          type: string\n          pattern: '^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$'\n          example: '00000000-0000-0000-0000-000000000000'\n        created_at:\n          type: string\n          example: '2021-01-01T00:00:00+00:00'\n        next_question:\n          nullable: true\n          oneOf:\n            - $ref: '#/components/schemas/PublicQuestion'\n\n    PublicAnswerQuestionRequestWithQuestionnaire:\n      type: object\n      properties:\n        payload:\n          type: string\n          example: 'This is an example of an answer to the question'\n        questionnaire:\n          type: string\n          pattern: '^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$'\n          example: '00000000-0000-0000-0000-000000000000'\n\n    PublicAnswerQuestionRequestWithSession:\n      type: object\n      properties:\n        payload:\n          type: string\n          example: 'This is an example of an answer to the question'\n        session:\n          type: string\n          pattern: '^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$'\n          example: '00000000-0000-0000-0000-000000000000'\n\n    PublicSession:\n      type: object\n      properties:\n        _links:\n          type: object\n          properties:\n            _link:\n              description: HAL JSON links\n              type: object\n              properties:\n                self:\n                  type: object\n                  properties:\n                    href:\n                      description: URI of the Session\n                      type: string\n                      format: uri\n                sia:questionnaire:\n                  type: object\n                  properties:\n                    href:\n                      description: URI of the questionnaire that the Session is linked to\n                      type: string\n                      format: uri\n                sia:public-signal:\n                  type: object\n                  properties:\n                    href:\n                      description: URI of the signal if available\n                      type: string\n                      format: uri\n        _display:\n          description: Display name of the Session\n          type: string\n        uuid:\n          type: string\n          pattern: '^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$'\n          example: '00000000-0000-0000-0000-000000000000'\n        started_at:\n          description: When a Session started receiving answers\n          type: string\n          nullable: true\n          example: null\n        submit_before:\n          description: A Session must be completed before this datetime\n          type: string\n          nullable: false\n          example: '2021-01-01T00:00:00+00:00'\n        duration:\n          description: A Session has a specific duration (only applies if there is no submit_before)\n          type: string\n          example: '02:00:00'\n        created_at:\n          type: string\n          example: '2021-01-01T00:00:00+00:00'\n        can_freeze:\n          type: boolean\n          example: false\n        path_questions:\n          type: array\n          items:\n            $ref: '#/components/schemas/PublicQuestion'\n          minItems: 1\n        path_answered_question_uuids:\n          type: array\n          items:\n            type: string\n            pattern: '^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$'\n          minItems: 0\n        path_unanswered_question_uuids:\n          type: array\n          items:\n            type: string\n            pattern: '^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$'\n          minItems: 0\n        path_validation_errors_by_uuid:\n          type: array\n          items:\n            type: object\n            properties:\n              \"{uuid}\":\n                type: array\n                items:\n                  type: string\n          minItems: 0\n\n    PublicSessionAnswerQuestion:\n      type: object\n      properties:\n        payload:\n          type: string\n          example: 'This is an example of an answer to the question'\n        question_uuid:\n          type: string\n          pattern: '^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$'\n          example: '00000000-0000-0000-0000-000000000000'\n\n    PublicSessionAnswerQuestionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/PublicSessionAnswerQuestion'\n\n    PublicSessionAnswerAttachmentQuestion:\n      type: object\n      properties:\n        file:\n          type: string\n          format: binary\n        question_uuid:\n          type: string\n          pattern: '^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$'\n          example: '00000000-0000-0000-0000-000000000000'\n\n  securitySchemes:\n    OAuth2:\n      description: SIA API is using OAuth2 implicit grant flow.\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: '/oauth2/authorize'\n          scopes:\n            SIG/ALL: General access to SIA Django application.",
			"canonicalURL": "/github.com/Amsterdam/signals@cb7fb36d79612c57e35d72cffa87e9c9a47e06a6/-/blob/api/app/signals/apps/questionnaires/templates/questionnaires/swagger/public_openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Amsterdam/signals/blob/cb7fb36d79612c57e35d72cffa87e9c9a47e06a6/api/app/signals/apps/questionnaires/templates/questionnaires/swagger/public_openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/public/qa/questionnaires\": get: security: security \"OAuth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}