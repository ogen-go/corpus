{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ioggstream/python-course"
		},
		"file": {
			"name": "ex-05-01-bundle.yaml",
			"size": 0,
			"path": "connexion-101/notebooks/oas3/ex-05-01-bundle.yaml",
			"byteSize": 4645,
			"content": "openapi: 3.0.0\ninfo:\n  title: foo\n  version: '0.1'\nservers:\n- description: Development server\n  url: https://localhost:8443/datetime/v1\n- description: Test server\n  url: https://api.example.com/datetime/v1\n  x-healthCheck:\n    interval: 300\n    timeout: 15\n    url: https://api.example.com/datetime/v1/status\n  x-sandbox: true\npaths:\n  /echo:\n    get:\n      description: |\n        Return the current timestamp, in the specified\n        timezone. If the timezone does not\n        exist returns 400 Bad Request, specifying that\n        the given timezone is not in our database.\n      operationId: api.get_echo\n      parameters:\n      - $ref: '#/components/parameters/tz'\n      responses:\n        503:\n          $ref: '#/components/responses/503ServiceUnavailable'\n        '200':\n          content:\n            application/problem+json:\n              example:\n                datetime: 20010507T00:00:10Z\n              schema:\n                $ref: '#/components/schemas/Datetime'\n          description: |\n            The current timestamp.\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n      summary: Return the current timestamp in RFC3339\n  /status:\n    get:\n      description: |\n        Ritorna lo stato dell'applicazione. A scopo\n        di test, su base randomica puo' ritornare\n        un errore.\n      operationId: api.get_status\n      responses:\n        503:\n          $ref: '#/components/responses/503ServiceUnavailable'\n        '200':\n          content:\n            application/problem+json:\n              example:\n                detail: The app is running smoothly.\n                status: 200\n                title: OK\n              schema:\n                $ref: '#/components/schemas/Problem'\n          description: |\n            Il server ha ritornato lo status. In caso di problemi\n            ritorna sempre un problem+json.\n      summary: Ritorna lo stato dell'applicazione.\ncomponents:\n  headers:\n    Retry-After:\n      description: |-\n        Retry contacting the endpoint *at least* after seconds.\n        See https://tools.ietf.org/html/rfc7231#section-7.1.3\n      schema:\n        format: int32\n        type: integer\n  parameters:\n    tz:\n      in: query\n      name: tz\n      schema:\n        $ref: '#/components/schemas/Timezone'\n  responses:\n    400BadRequest:\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n      description: Bad Request\n    503ServiceUnavailable:\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n      description: Service Unavailable\n      headers:\n        Retry-After:\n          $ref: '#/components/headers/Retry-After'\n  schemas:\n    Datetime:\n      properties:\n        timestamp:\n          example: 2019-01-01 00:00:00\n          format: datetime\n          type: string\n      required:\n      - timestamp\n    Problem:\n      properties:\n        detail:\n          description: |\n            A human readable explanation specific to this occurrence of the\n            problem. You MUST NOT expose internal informations, personal\n            data or implementation details through this field.\n          example: Request took too long to complete.\n          type: string\n        instance:\n          description: |\n            An absolute URI that identifies the specific occurrence of the problem.\n            It may or may not yield further information if dereferenced.\n          format: uri\n          type: string\n        status:\n          description: |\n            The HTTP status code generated by the origin server for this occurrence\n            of the problem.\n          example: 503\n          exclusiveMaximum: true\n          format: int32\n          maximum: 600\n          minimum: 100\n          type: integer\n        title:\n          description: |\n            A short, summary of the problem type. Written in english and readable\n            for engineers (usually not suited for non technical stakeholders and\n            not localized); example: Service Unavailable\n          type: string\n        type:\n          default: about:blank\n          description: |\n            An absolute URI that identifies the problem type.  When dereferenced,\n            it SHOULD provide human-readable documentation for the problem type\n            (e.g., using HTML).\n          example: https://tools.ietf.org/html/rfc7231#section-6.6.4\n          format: uri\n          type: string\n      type: object\n    Timezone:\n      description: |\n        A timezone in the form of continent/city\n        or \"UTC\".\n      example: Europe/Rome\n      type: string\n",
			"canonicalURL": "/github.com/ioggstream/python-course@d5bc268234bd50d8414ce5b2dfb7498390514d49/-/blob/connexion-101/notebooks/oas3/ex-05-01-bundle.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ioggstream/python-course/blob/d5bc268234bd50d8414ce5b2dfb7498390514d49/connexion-101/notebooks/oas3/ex-05-01-bundle.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/echo\": get: responses: 200: contents: unsupported content types: [application/problem+json]",
	"NotImplemented": [
		"unsupported content types"
	]
}