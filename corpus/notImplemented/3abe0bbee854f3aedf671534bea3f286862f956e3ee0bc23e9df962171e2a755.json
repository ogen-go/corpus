{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "gitlab.com/moneyfarm-public/public-api-documentation"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/openapi.yaml",
			"byteSize": 205215,
			"content": "openapi: 3.0.0\ninfo:\n  description: API to integrate with the Moneyfarm wealth management platform\n  version: \"0.8\"\n  title: Moneyfarm API\n  contact:\n    email: api-support@moneyfarm.com\nservers:\n  - description: API Auto Mocking\n    url: https://virtserver.swaggerhub.com/moneyfarm/api/0.6\n  - description: Moneyfarm Test\n    url: https://api-test.moneyfarm.com/v0\n  - description: Moneyfarm Production\n    url: https://api.moneyfarm.com/v0\ntags:\n  - name: account\n  - name: app-configuration\n    description: Collection of operations used for customizing the Moneyfarm app web and mobile user experience based on the kind of logged in user (including enabling/disabling certian features)\n  - name: app-preferences\n  - name: appointments\n  - name: authorisations\n  - name: backoffice\n    description: Collection of operations used for administrative support of the customer-facing Public APIs.\n                 These are available to a subset of users defined as Operators, which can act on behalf of one, or many, customers.\n  - name: bank-account\n  - name: beneficiaries\n  - name: communication-preferences\n  - name: direct-debit-mandate\n  - name: documents\n  - name: financial-details\n  - name: instrument\n    description: Collection of operations related to the supported instruments market data.\n  - name: investment-order\n  - name: investor-profile\n  - name: login\n  - name: management-fees\n  - name: notifications\n  - name: onboarding\n  - name: payment\n  - name: portfolio\n  - name: portfolio-review\n  - name: product\n  - name: promotion\n  - name: transfer\n  - name: user\nsecurity:\n  - bearerAuth: []\npaths:\n  /accounts:\n    post:\n      operationId: createAccount\n      security:\n      - bearerAuth:\n        - create:customer:accounts\n      tags:\n        - account\n      description: Create an account from product. Logged-in user and complete profile status are pre-requisites.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/account-creation-parameters'\n      responses:\n        '201':\n          description: The details of the created account.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/account'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /accounts/{id}:\n    get:\n      operationId: getAccountById\n      security:\n      - bearerAuth:\n        - read:customer:accounts\n      tags:\n        - account\n      description: |\n        Get the details of an account.\n\n        Note: The field `investmentType` is **deprecated**, please use `product` instead.\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: The details of the specified account.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/account'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /accounts/{id}/close:\n    post:\n      operationId: closeAccount\n      security:\n      - bearerAuth:\n        - close:customer:accounts\n      tags:\n        - account\n      description: Closes the account. Only accounts without open portfolios and no outstanding cash balance can be closed.\n      parameters:\n        - name: id\n          in: path\n          description: Account identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: \"87261326-5399-44ca-9921-70daffd5dfe9\"\n      responses:\n        '200':\n          description: Account has been closed successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/account'\n        '400':\n          $ref: \"#/components/responses/bad-request\"\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /accounts/{id}/portfolios:\n    post:\n      operationId: createPortfolioForAccount\n      security:\n      - bearerAuth:\n        - write:customer:portfolios\n      tags:\n        - account\n      description: |\n        Create a portfolio for the given account. \n\n        You must call the `/accounts/{id}/recommendations` endpoint to obtain a valid recommendation. \n        With this recommendation, you can add a new portolio to your account specifying the `recommendationId` and one of the suitable `modelPortfolioId` listed in the recommendation.\n        \n        Once used, the `recommendationId` will not be reusable.\n        \n        The field `riskLevel` is **deprecated**. Use the `modelPortfolioId` field instead.\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/portfolio-creation-parameters'\n      responses:\n        '201':\n          description: The `id` for the new portfolio.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  portfolioId:\n                    type: string\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /accounts/{id}/recommendations:\n    post:\n      operationId: createPortfolioRecommendationForAccount\n      security:\n      - bearerAuth:\n        - create:customer:recommendations\n      tags:\n        - account\n      description: Create a portfolio recommendation for an account.\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                timeHorizonYears:\n                  type: integer\n                  minimum: 1\n                contributionOneOffAmount:\n                  type: number\n                contributionMonthlyAmount:\n                  type: number\n                goal:\n                  type: string\n                investmentStyle:\n                  $ref: '#/components/schemas/investment-style'\n                investmentAllocation:\n                  $ref: '#/components/schemas/investment-allocation'\n              required:\n                - timeHorizonYears\n                - contributionOneOffAmount\n                - goal\n      responses:\n        '201':\n          description: A list of portfolios by risk level and suitability status.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  recommendationId:\n                    type: string\n                    format: uuid\n                  availablePortfolios:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/available-portfolio'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /activities:\n    get:\n      operationId: listActivitiesForUser\n      security:\n      - bearerAuth:\n        - read:customer:activities\n      tags:\n        - user\n      description: Get activities for a user.\n      parameters: \n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/page-size'\n        - $ref: '#/components/parameters/sort'\n        - name: type\n          in: query\n          required: false\n          schema:\n            $ref: '#/components/schemas/activity-type'\n        - name: from\n          in: query\n          description: The date from which the activities list should start, this is an inclusive date range boundary.\n          required: false\n          schema:\n            type: string\n            format: date\n        - name: to\n          in: query\n          description: The date to which the activities list should end, this is an inclusive date range boundary.\n          required: false\n          schema:\n            type: string\n            format: date\n        - name: accountId\n          in: query\n          required: false\n          schema:\n            type: string\n            format: uuid\n        - name: portfolioId\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n              format: uuid\n          style: form\n          explode: false\n        - name: metadata.type\n          in: query\n          description: \u003e \n            The sub-type of the activity expressed with metadata field named type.\n            This filter is allowed ***only if*** a value is provided for the parameter `type`.\n            The only activity type that currently suports this filter is `cash-flow`.\n          required: false\n          schema:\n            type: array\n            items:\n                $ref: '#/components/schemas/cash-flow-type'\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: A list of activities for the authenticated user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/user-activities'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '400':\n          $ref: '#/components/responses/bad-request'\n  /app-configuration:\n    get:\n      operationId: getAppConfiguration\n      security:\n        - bearerAuth:\n            - read:customer:app-configuration\n      tags:\n        - app-configuration\n      summary: Retrieve the app configuration.\n      description: Retrieve the Moneyfarm web/mobile app configuration for the logged in user. This API is intended for Moneyfarm usage only to retrieve readonly properties, to customize the experience of the Moneyfarm app based on the logged in user product distribution channel setup.\n      responses:\n        '200':\n          description: The readonly app configuration for the logged in user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/app-configuration'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /app-preferences:\n    get:\n      operationId: getAppPreferences\n      security:\n      - bearerAuth:\n        - read:customer:app-preferences\n      tags:\n        - app-preferences\n      summary: Retrieve the app preferences.\n      description: Retrieve the app preferences for the logged in user. If the user has no app preferences stored, the default preferences are returned.\n      responses:\n        '200':\n          description: The app preferences for the logged in user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/app-preferences'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n    patch:\n      operationId: changeAppPreferences\n      security:\n      - bearerAuth:\n        - write:customer:app-preferences\n      tags:\n        - app-preferences\n      summary: Change the app preferences for the logged in user.\n      description: Change the app preferences for the logged in user. All the fields in the request object are optional, but at least one field needs to be provided.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/app-preferences-request'\n      responses:\n        '200':\n          description: The app preferences for the logged in user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/app-preferences'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /appointments:\n    get:\n      operationId: getAppointments\n      security:\n      - bearerAuth:\n        - read:customer:appointments\n      tags: \n        - appointments\n      description: Get a user's booked appointments\n      parameters:\n        - name: category\n          in: query\n          description: The appointment category to filter by\n          schema:\n            $ref: '#/components/schemas/appointment-category'\n      responses:\n        '200':\n          description: Booked appointments for the user\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  items:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/appointment'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n    post:\n      operationId: createAppointment\n      security:\n      - bearerAuth:\n        - create:customer:appointments\n      tags:\n        - appointments\n      summary: Book an appointment for a user.\n      description:\n        Book an appointment for a user.\n        Returns Bad Request if given slot is not available\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/appointment-request'\n      responses:\n        '201':\n          description: Appointment booked.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/appointment'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /appointments/{id}:\n    parameters:\n      - name: id\n        in: path\n        description: The appointment id\n        required: true\n        schema:\n          type: string\n          format: uuid\n    delete:\n      operationId: deleteAppointment\n      security:\n      - bearerAuth:\n        - delete:customer:appointments\n      tags:\n        - appointments\n      description: Cancel a booked appointment for a user\n      responses:\n        '200':\n          description: Appointment deleted\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /appointments/availability:\n    get:\n      operationId: getAvailableSlots\n      security:\n      - bearerAuth:\n        - get-available-slots:customer:appointments\n      tags:\n        - appointments\n      description: Get the available time slots for an appointment\n      parameters:\n        - name: date\n          in: query\n          description: The date we are looking for availability in\n          required: true\n          schema:\n            type: string\n            format: date\n            example: \"2021-05-21\"\n        - name: category\n          in: query\n          description: The appointment category\n          required: true\n          schema:\n            $ref: '#/components/schemas/appointment-category'\n      responses:\n        '200':\n          description: Retrieve available slots\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - slots\n                properties:\n                  slots:\n                    type: array\n                    items:\n                      type: string\n                      format: date-time\n                      example: \"2020-09-11T11:00:00Z\"\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /appointments/categories:\n    get:\n      operationId: getAppointmentCategories\n      security:\n      - bearerAuth:\n        - read:customer:appointment-categories\n      tags:\n        - appointments\n      description: Get the available categories of appointments for a customer\n      parameters:\n        - name: category\n          in: query\n          description: Filter by category\n          required: false\n          schema:\n            $ref: '#/components/schemas/appointment-category'\n      responses:\n        '200':\n          description: Appointment categories available for a customer\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  items:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/appointment-category-details'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'                              \n  /authorisations/third-party-applications:\n    get:\n      operationId: getThirdPartyApplications\n      security:\n        - bearerAuth:\n          - read:customer:third-party-applications      \n      tags:\n        - authorisations\n      description: Get user third party applications. Each application contains the name and the id.\n      responses:\n        '200':\n          description: The user third party applications list.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/third-party-applications'\n        '401':\n          $ref: '#/components/responses/unauthorised'                \n        '404':\n          $ref: '#/components/responses/not-found'  \n  /authorisations/third-party-applications/{clientId}:\n    parameters:\n      - name: clientId\n        description: api client Id\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n          example: 0bb969ef-7cd7-4a3b-9f76-9a9d88075eff\n    delete:\n      operationId: revokeThirdPartyAccess\n      security:\n      - bearerAuth:\n        - delete:customer:third-party-applications\n      tags:\n        - authorisations\n      description: Revoke access to connected third party application\n      parameters:\n        - name: clientId\n          description: api client Id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 0bb969ef-7cd7-4a3b-9f76-9a9d88075eff\n      responses:\n        '200':\n          description: OK\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /backoffice/generate-access-token:\n    post:\n      operationId: generateAccessToken\n      security:\n      - bearerAuth:\n        - generate:operator:access-tokens\n      tags:\n        - backoffice\n      description: Generates a JWT to be used to call Public API operations on behalf of the identified user.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: \"#/components/schemas/user-id\"\n                - $ref: \"#/components/schemas/partner-user-id\"\n              example:\n                userId: \"975f0cce-a564-45da-81f3-3d9358864879\"\n      responses:\n        '200':\n          description: Moneyfarm JWT access token\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/access-token-response'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /backoffice/onboardings/eligibility-status:\n    get:\n      operationId: isEligibleForOnboarding\n      security:\n      - bearerAuth:\n        - validate-eligibility-status:operator:onboardings\n      tags:\n        - backoffice\n      description: Check if a prospect is eligible for the onboarding\n      parameters:\n        - name: taxIdentifier\n          description: the tax identifier of the prospect\n          in: query\n          required: true\n          schema:\n            type: string\n            example: \"RSSMRA30A01H501I\"\n        - name: distributionChannel\n          in: query\n          description: the product distribution channel that the prospect want to be onboarded\n          required: true\n          schema:\n            type: string\n            example: default\n        - name: email\n          in: query\n          description: the email address the prospect want to use to be onboarded\n          required: false\n          schema:\n            type: string\n            format: email\n            example: imaprospect@example.com\n      responses:\n        '200':\n          description: Is the prospect eligible for onboarding\n          content:\n            application/json:\n              schema:\n                properties:\n                  isEligible:\n                    type: boolean\n                    description: true if the prospect is eligible to be onboarded, false otherwise\n                    example: true\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /backoffice/user-import:\n    put:\n      description: Create or update a customer to migrate. This endpoint is designed\n        for data collection only.\n      operationId: saveCustomerImportData\n      security:\n      - bearerAuth:\n        - save:operator:customer-imports\n      tags:\n        - backoffice\n      responses:\n        '201':\n          description: The user data has been stored successfully\n        '200':\n          description: The user data has been updated and stored successfully\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /bank-accounts:\n    post:\n      operationId: createBankAccount\n      security:\n      - bearerAuth:\n        - create:customer:bank-accounts\n      tags:\n        - bank-account\n      description: Create a bank account.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                identifier:\n                  oneOf:\n                    - $ref: '#/components/schemas/iban'\n                    - $ref: '#/components/schemas/sort-code-account-number'\n                  example:\n                    iban: \"IT60X0542811101000000123456\"\n                name:\n                  type: string\n              required:\n                - identifier\n      responses:\n        '201':\n          description: The new bank account.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bank-account'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '400':\n          $ref: '#/components/responses/bad-request'\n    get:\n      operationId: listBankAccountsForUser\n      security:\n      - bearerAuth:\n        - read:customer:bank-accounts\n      tags:\n        - bank-account\n      description: Get bank accounts for a user. The bank account identifier will be returned obfuscated\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/page-size'\n        - name: products\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n              format: slug\n          style: form\n          explode: false\n        - name: status\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - pending\n              - action-required\n              - validated\n      responses:\n        '200':\n          description: A list of bank accounts for the authenticated user. The identifier of each bank account will be obfuscated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bank-accounts'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '400':\n          $ref: '#/components/responses/bad-request'\n  /bank-accounts/{id}:\n    parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n    patch:\n      operationId: renameBankAccountById\n      security:\n      - bearerAuth:\n        - write:customer:bank-accounts\n      tags:\n        - bank-account\n      description:\n        Change the friendly name of the bank account.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n              properties:\n                name:\n                  type: string\n                  example: \"My new bank account\"\n      responses:\n        '200':\n          description: The updated bank account\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bank-account'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n    delete:\n      operationId: deleteBankAccountById\n      security:\n      - bearerAuth:\n        - delete:customer:bank-accounts\n      tags:\n        - bank-account\n      description:\n        Delete the bank account identified by the given id.      \n      responses:\n        '200':\n          description: OK\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /beneficiaries:\n    post:\n      operationId: createBeneficiary\n      security:\n      - bearerAuth:\n        - write:customer:beneficiaries\n      summary: \"Create a new beneficiary\"\n      description: \"Create a new beneficiary for the user. A beneficiary is a person related to the user for a certain investment product. Examples are: pension beneficiaries, the ones that will receive the funds once the owner passes away or children whose parents start investing for them up until they are eligible to claim the funds for themselves\"\n      tags:\n        - beneficiaries\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/beneficiary-creation'\n      responses:\n        '201':\n          description: \"The created beneficiary\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/beneficiary-response\"\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n    get:\n      operationId: listBeneficiaries\n      security:\n        - bearerAuth:\n          - read:customer:beneficiaries\n      summary: Get the beneficiaries list\n      description: Get the list of all beneficiaries linked to the user\n      tags:\n        - beneficiaries\n      responses:\n        '200':\n          description: List of beneficiaries linked to the user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/beneficiary-list-response\"\n        '400':\n          $ref: '#/components/responses/bad-request'          \n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /beneficiaries/{id}:\n    get:\n      operationId: getBeneficiary\n      security:\n      - bearerAuth:\n        - read:customer:beneficiaries\n      summary: Get a single beneficiary by its id\n      tags:\n        - beneficiaries\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: A single beneficiary\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/beneficiary-response\"\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised' \n        '404':\n          $ref: '#/components/responses/not-found'\n    patch:\n      operationId: updateBeneficiary\n      security:\n      - bearerAuth:\n        - write:customer:beneficiaries\n      tags:\n        - beneficiaries\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      summary: Update the beneficiary information.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/beneficiary-update'\n      responses:\n        '200':\n          description: The updated beneficiary.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/beneficiary-response'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /communication-preferences:\n    get:\n      operationId: listCommunicationPreferences\n      security:\n      - bearerAuth:\n        - read:customer:communication-preferences\n      tags:\n      - communication-preferences\n      description: Get a list of user preferences regarding type of communications and channels in which he/she wants to receive them. A future evolution for this endpoint will be to support for each communication type a channel (push, email, sms)\n      responses:\n        '200':\n          description: A list of user communication preferences and relative channels.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/communication-preferences'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '400':\n          $ref: '#/components/responses/bad-request'\n  /communication-preferences/update:\n    post:\n      operationId: updateCommunicationPreferences\n      security:\n      - bearerAuth:\n        - write:customer:communication-preferences\n      tags:\n        - communication-preferences\n      description: Update a communication preference. When we will support it in the backend we will have a new property here that is the channel, the idea is to have at least one from channel or type (or both) and update the preferences accordingly\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/communication-preference'\n      responses:\n        '200':\n          description: A list of user updated communication preferences and relative channels.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/communication-preferences'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /direct-debit-mandates:\n    post:\n      operationId: createDirectDebitMandate\n      security:\n      - bearerAuth:\n        - create:customer:direct-debits\n      tags:\n      - direct-debit-mandate\n      description: Create a new draft direct debit mandate.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - bankAccountId\n              properties:\n                bankAccountId:\n                  type: string\n                  format: uuid\n      responses:\n        '201':\n          description: The created draft direct-debit-mandate.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/direct-debit-mandate'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n    get:\n      operationId: getDirectDebitMandates\n      security:\n      - bearerAuth:\n        - read:customer:direct-debits\n      tags:\n      - direct-debit-mandate\n      description: Get a list of all direct debit mandates for the user.\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/page-size'\n        - name: status\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n                $ref: '#/components/schemas/direct-debit-mandate-status'\n          style: form\n          explode: false\n      responses:\n        '200':\n          description: A list of direct debit mandates for the user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/direct-debit-mandates'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /direct-debit-mandates/{id}:\n    delete:\n      operationId: cancelDirectDebitMandate\n      security:\n      - bearerAuth:\n        - cancel:customer:direct-debits\n      tags:\n        - direct-debit-mandate\n      description: Cancel a direct debit mandate.\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: OK.\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'  \n  /direct-debit-mandates/{id}/sign:\n    post:    \n      operationId: signDirectDebitMandate\n      security:\n      - bearerAuth:\n        - sign:customer:direct-debits\n      tags:\n      - direct-debit-mandate\n      description: Sign a direct debit mandate.\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - signedAt\n                - filename\n                - format\n                - proof                            \n              properties:\n                signedAt:\n                  type: string\n                  format: date-time\n                filename:\n                  type: string\n                format:\n                  type: string\n                proof:\n                  type: string\n                  description: \n                    \"Cryptographic proof that the mandate has been signed by the end user.\n                    The proof is expected to be the hexadecimal representation of the SHA-1 hash of the concatenation of: \n                    user-id, direct-debit-mandate-id and shared secret interleaved with periods: \u003cuser-id\u003e.\u003cdirect-debit-mandate-id\u003e.\u003cshared-secret\u003e.\n                    i.e. for user-id: 7d1605f4-8fda-403b-8708-1b0857b13169 direct-debit-mandate-id: 149c862a-df74-43a7-b330-4dea77384c91 and secret: \\\"a-simple-shared-secret\\\"\n                    the expected value would be baee6fe0fa96854d3a589d31a5673cb00dc9272a.\"\n      responses:\n        '200':\n          description: The created draft direct-debit-mandate.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/direct-debit-mandate'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /documents:\n    get:\n      operationId: getDocuments\n      security:\n      - bearerAuth:\n        - read:customer:documents\n      tags:\n        - documents\n      description: \"Returns the paginated list of user documents\"\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/page-size'\n        - $ref: '#/components/parameters/sort'\n        - $ref: '#/components/parameters/document-type'\n      responses:\n        '200':\n          description: A list of documents for the specified user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/document-paginated-list'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n    post:\n      operationId: createDocument\n      security:\n      - bearerAuth:\n        - create:customer:documents\n      tags:\n        - documents\n      description: Create the document metadata\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                type:\n                  type: string\n                  enum: [bank-building-society-statement, utility-bill, council-tax, benefit-letters, invoice, account-statement, financial-details]\n                filename:\n                  type: string\n              required:\n                - type\n                - filename\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/document'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /documents/{uuid}:\n    parameters:\n      - name: uuid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n    get:\n      operationId: getDocumentById\n      security:\n      - bearerAuth:\n        - read:customer:documents\n      tags:\n        - documents\n      description: Get the document metadata\n      responses:\n        '200':\n          description: Get the document information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/document'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n    delete:\n      operationId: deleteDocumentById\n      security:\n      - bearerAuth:\n        - delete:customer:documents\n      tags:\n        - documents\n      description:\n        Delete the document identified by the given identifier and the related file (if exists).\n        Fail if the document is not in status 'draft'.\n      responses:\n        '200':\n          description: OK\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /documents/{uuid}/file:\n    parameters:\n      - name: uuid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n    get:\n      operationId: getDocumentFileById\n      security:\n      - bearerAuth:\n        - read:customer:document-files\n      tags:\n        - documents\n      description: Download the document\n      responses:\n        '200':\n          description: Byte stream\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n    put:\n      operationId: uploadDocumentFileById\n      security:\n      - bearerAuth:\n        - write:customer:document-files\n      tags:\n        - documents\n      description: Upload a new document\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              type: string\n              format: binary\n      responses:\n        '200':\n          description: OK\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /financial-details:\n    put:\n      operationId: updateFinancialDetails\n      security:\n      - bearerAuth:\n        - write:customer:financial-details\n      tags:\n        - financial-details\n      description: Create or update the user financial details.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/financial-details'\n      responses:\n        '200':\n          description: OK\n        '201':\n          description: Created\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n    get:\n      operationId: getLatestFinancialDetails\n      security:\n      - bearerAuth:\n        - read:customer:financial-details\n      tags:\n        - financial-details\n      description: Get the latest financial details.\n      responses:\n        '200':\n          description: The latest financial details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/financial-details'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /immediate-callbacks:\n    post:\n      operationId: createImmediateCallback\n      security:\n          - bearerAuth:\n            - create:customer:callbacks\n      tags:\n        - appointments\n      summary: Book an immediate callback.\n      description:\n        Book an immediate callback for the user.\n        Returns Bad Request if given immediate-callbacks aren't available for that type of appointment or it's a public holiday.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/immediate-callback-request'\n      responses:\n        '201':\n          description: 'Created'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /immediate-callbacks/availability:\n    get:\n      operationId: getCallbackAvailability\n      security:\n        - bearerAuth:\n          - get-availability:customer:callbacks\n      tags:\n        - appointments\n      description: Get the availability for a callback\n      parameters:\n        - name: category\n          in: query\n          description: The appointment category to filter by\n          required: true\n          schema:\n            $ref: '#/components/schemas/appointment-category'\n      responses:\n        '200':\n          description: Is the callback available\n          content:\n            application/json:\n              schema:\n                properties:\n                  areCallbacksAvailable:\n                    type: boolean\n                    description: true if the callback is available, false otherwise\n                    example: true\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /instruments/{id}: \n    get:\n      operationId: getInstrumentDetails\n      security:\n      - bearerAuth:\n        - read:customer:instruments\n      tags:\n        - instrument\n      description: Retrieval of the instrument details including localized information (name, assetClassName, assetClassSpecification, fundType, fundName, geographicArea, keyInvestorInformationDocument) based on the provided 'Accept-Language' header.\n      parameters:\n        - name: id\n          in: path\n          description: Instrument identifier\n          required: true\n          schema:\n            type: string\n            format: slug\n            example: \"ie00b58hmn42-mtaa-eur\"\n        - in: header\n          name: Accept-Language\n          description: Language in which localized instrument details are requested. At the moment we only support 'it-IT' for instruments traded by Italian customers and 'en-GB' for instruments traded in UK.\n          schema: \n            type: string\n            format: RFC5646\n            example: \"it-IT\"\n      responses:\n        '200':\n          description: Instrument details\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                format: RFC5646\n                example: \"it-IT\"  \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/instrument-details'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '406':\n          $ref: '#/components/responses/not-acceptable' \n  /investment-orders:\n    get:\n      operationId: listInvestmentOrders\n      security:\n        - bearerAuth:\n          - read:customer:investment-orders\n      tags:\n        - investment-order\n      summary: List investment orders.\n      description: Get a list of investment orders for the current user.\n      parameters:\n        - name: active\n          description: Optional filtering parameter to select orders in active state.\n          in: query\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: List of investment orders for the user\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - items\n                properties:\n                  items:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/investment-order'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '400':\n          $ref: '#/components/responses/bad-request'\n    post:\n      operationId: createInvestmentOrder\n      security:\n      - bearerAuth:\n        - create:customer:investment-orders\n      tags:\n        - investment-order\n      description: Create an investment order.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/investment-order-request'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/investment-order'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '400':\n          $ref: '#/components/responses/bad-request'\n  /investment-types:\n    get:\n      operationId: listAvailableInvestmentTypes\n      security:\n      - bearerAuth:\n        - read:customer:investment-types\n      tags:\n        - account\n      description: Get a list of available investment types.\n      responses:\n        '200':\n          description: A list of available investment types.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  investment-types:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/investment-type'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /investor-profile-filled-questionnaires:\n    post:\n      operationId: setInvestorProfileFilledQuestionnaires\n      security:\n      - bearerAuth:\n        - write:customer:investor-profile-questionnaires\n      tags:\n        - investor-profile\n      description: Set the investor profile filled questionnaire for the user.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/investor-profile-filled-questionnaires-request'\n      responses:\n        '201':\n          description: The created investor profile filled questionnaire.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/investor-profile-filled-questionnaires'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /investor-profile-filled-questionnaires/{id}:\n    get:\n      operationId: getInvestorProfileFilledQuestionnaires\n      security:\n      - bearerAuth:\n        - read:customer:investor-profile-questionnaires\n      tags:\n        - investor-profile\n      description: Get the investor profile filled questionnaire identified by the given id.\n      parameters:\n        - name: id\n          description: The investor profile filled questionnaire id.\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: \"975f0cce-a564-45da-81f3-3d9358864879\"\n      responses:\n        '200':\n          description: The investor profile filled questionnaire details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/investor-profile-filled-questionnaires'\n        '404':\n          $ref: '#/components/responses/not-found'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /investor-profile-questionnaires/{version}:\n    get:\n      operationId: getInvestorProfileQuestions\n      security:\n      - bearerAuth:\n        - read:customer:investor-profile-questionnaires\n      tags:\n        - investor-profile\n      description: Get the Investor Profile Questionnaire\n      parameters:\n        - name: version\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: The investor profile questionnaire related to the provided version.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/investor-profile-questionnaire'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /login/token:\n    post:\n      operationId: loginByPartnerToken\n      security:\n      - bearerAuth:\n        - login-by-token:customer:tokens\n      tags:\n        - login\n      description: Exchanges a JWT issued by a trusted partner, identifying a user on our platform, for a JWT access token that can be used to call our API's on behalf of said user\n      responses:\n        '200':\n          description: Moneyfarm JWT access token\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/access-token-response'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /management-fees:\n    get:\n      operationId: getManagementFees\n      summary: Get the list of management fees.\n      description: |\n        Get the list of management fees.\n\n        Fees are assigned on the combination of `product`, `distributionChannel`, `investmentStyle` and `allocationStrategy`.\n\n        The amount is split into different `brackets` defined by `from` (inclusive) and the `to` (exclusive) values.\n\n        Each bracket can be of `type` which define if the fee is absolute \"fixed\" or proportional \"percentage\" to the amount invested.\n\n        If any coupon is applied to the current user a `discountedFee` or `freeAmount` will be returned in the response.\n      tags:\n        - management-fees\n      security:\n      - bearerAuth:\n        - read:customer:fees\n      responses:\n        '200':\n          description: The list of management fees.\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - items\n                properties:\n                  items:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/management-fee'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /model-portfolios/{id}:\n    get:\n      operationId: getModelPortfolioById\n      security:\n      - bearerAuth:\n        - read:customer:model-portfolios\n      tags:\n        - portfolio\n      description: Get the details of a model portfolio.\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: slug\n      responses:\n        '200':\n          description: The details of the specified model portfolio.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/model-portfolio'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /notifications/devices:\n    post:\n      operationId: createNotificationDevice\n      security:\n      - bearerAuth:\n        - write:customer:notifications\n      tags:\n        - notifications\n      description: Add device to be used to send customer notifications.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/device'\n      responses:\n        '201':\n          description: The created device informations.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/device'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /notifications/devices/{id}:\n    parameters:\n      - name: id\n        in: path\n        description: Device ID obtained from the client device\n        required: true\n        schema:\n          type: string\n          format: uuid\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n    delete:\n      operationId: deleteNotificationDevice\n      security:\n      - bearerAuth:\n        - write:customer:notifications\n      tags:\n        - notifications\n      description: Remove device to be used to send customer notifications.\n      responses:\n        '200':\n          description: OK. \n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /notifications/reference:\n    get:\n      operationId: getNotificationsReference\n      security:\n      - bearerAuth:\n        - get-reference:customer:notifications\n      description: Returns the Id to be used from the client to register in the notification system. For non MONEYFARM will return always 401.\n      tags:\n        - notifications\n      responses:\n        '200':\n          description: The Id to use with the notification system\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/notifications-reference'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /onboardings:\n    post:\n      operationId: onboardNewUser\n      security:\n      - bearerAuth:\n        - bulk-onboard-user:operator:onboardings\n      tags:\n        - onboarding\n      description: |\n        Create a new user, account and portfolio. \n        \n        The specified `productId` will define the investment type of the account. A `productId` must always be specified for the request to be valid. This can be done by either using the root level `productId` field or by providing it in the `account` object. If both are present the request will be considered invalid and rejected. \n        \n        Note: The root level `productId` field is **deprecated** and will not be supported in future versions of the API.\n\n        In order to create a portfolio you need to call the `/recommendations` endpoint to obtain a valid recommendation. You can use the `recommendationId` and one of the suitable `modelPortfolioId` listed in the recommendation response.\n\n        Once used, the `recommendationId` will not be reusable.\n      parameters:\n        - in: header\n          name: Idempotency-Key\n          schema: \n            type: string\n            format: uuid\n          required: false\n          description: Idempotency-Key is used to safely retry requests without accidentally performing the same operation twice. When this api is called multiple times with the same (client-bound) Idempotency-Key and same exact request, this api will return the same response generated the first time that Idempotency-Key has been received. Each Idempotency-Key will expire in 24 hours after the first request. It is up to the client to guarantee the uniqueness of the idempotency key, reason for which we strongly suggest to use a V4 UUID.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                user:\n                  $ref: '#/components/schemas/bulk-onboarding-user'\n                productId:\n                  deprecated: true\n                  type: string\n                  example: gia-discretionary\n                  description: This is deprecated. Please use the 'account' field instead\n                account:\n                  $ref: '#/components/schemas/account-creation-parameters'\n                portfolio:\n                  $ref: '#/components/schemas/portfolio-creation-parameters'\n              required:\n                - user\n                - portfolio\n      responses:\n        '201':\n          description: The status of the onboarding request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/onboarding-status'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '400':\n          $ref: '#/components/responses/bad-request'            \n  /payment-orders:\n    post:\n      operationId: createPaymentOrder\n      security:\n      - bearerAuth:\n        - write:customer:payment-orders\n      tags:\n        - payment\n      description: Create a payment order.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - paymentMethod\n                - frequency\n                - amount\n                - destination\n              properties:\n                paymentMethod:\n                  required:\n                    - type\n                    - details\n                  properties:\n                    type:\n                      $ref: '#/components/schemas/payment-method-type'\n                    details:\n                      oneOf:\n                        - type: object\n                          required:\n                            - bankAccountId\n                          properties:\n                            bankAccountId:\n                              type: string\n                              format: uuid\n                        - type: object\n                          description: \"PSD2\"\n                          required:\n                            - bankAccountId\n                            - callbackUrl\n                          properties:\n                            bankAccountId:\n                              type: string\n                              format: uuid\n                            callbackUrl:\n                              type: string\n                              format: url\n                        - type: object\n                          required:\n                            - directDebitMandateId\n                          properties: \n                            directDebitMandateId:\n                              type: string\n                              format: uuid\n                frequency:\n                  $ref: '#/components/schemas/payment-order-frequency'\n                amount:\n                  type: number\n                  format: double\n                destination:\n                  oneOf:\n                    - $ref: '#/components/schemas/payment-destination-portfolio'\n                    - $ref: '#/components/schemas/payment-destination-account'\n      responses:\n        '201':\n          description: The payment order has been created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payment-order'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '400':\n          $ref: '#/components/responses/bad-request'\n    get:\n      operationId: listPaymentOrders\n      security:\n      - bearerAuth:\n        - read:customer:payment-orders\n      tags:\n        - payment\n      description: Get the list of payment orders.\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/page-size'\n        - name: portfolioId\n          in: query\n          required: false\n          schema:\n            type: string\n            format: uuid\n        - name: bankAccountId\n          in: query\n          required: false\n          schema:\n            type: string\n            format: uuid\n        - name: status\n          in: query\n          required: false\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/payment-order-status'\n      responses:\n        '200':\n          description: A list of payment orders for the authenticated user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payment-orders-list'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '400':\n          $ref: '#/components/responses/bad-request'\n  /payment-orders/{id}:\n    get:\n      operationId: getPaymentOrder\n      security:\n      - bearerAuth:\n        - read:customer:payment-orders\n      tags:\n        - payment\n      description: Retrieve details of a single payment order. At this stage only bank-transfer and PSD2 payments can be singularly retrieved. All other kind of payments will get a not found error.\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: Payment order details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payment-order'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '404':\n          $ref: '#/components/responses/not-found'\n    delete:\n      operationId: deletePaymentOrder\n      security:\n      - bearerAuth:\n        - write:customer:payment-orders\n      tags:\n        - payment\n      description: Delete a payment order\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: The successfully cancelled payment order.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payment-order'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /payment-orders/{id}/confirm:\n    post:\n      operationId: confirmPaymentOrder\n      security:\n      - bearerAuth:\n        - confirm:customer:payment-orders\n      tags:\n        - payment\n      description: Confirm a payment order, at this stage only bank-transfer can be confirmed. All the other kind of payment will get an error.\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':          \n          description: The successfully confirmed payment order.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payment-order'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /payment-references:\n    post:\n      operationId: createPaymentReference\n      security:\n      - bearerAuth:\n        - write:customer:payment-references\n      tags:\n        - payment\n      description: Create a payment reference for the given payment details.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - paymentType\n                - destination\n              properties:\n                paymentType:\n                  $ref: '#/components/schemas/payment-method-type'\n                destination:\n                  oneOf:\n                    - $ref: '#/components/schemas/payment-destination-portfolio'\n                    - $ref: '#/components/schemas/payment-destination-account'\n      responses:\n        '200':\n          description: Created payment reference for the given payment details.\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - paymentReference\n                properties:\n                  paymentReference:\n                    type: string\n                    example: 'JS123456'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /payments/coordinates:\n    get:\n      operationId: getPayeeCoordinates\n      security:\n      - bearerAuth:\n        - read:customer:payment-coordinates\n      tags:\n        - payment\n      description: Get the payee bank account coordinates\n      responses:\n        '200':\n          description: The payee details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payee-details'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '400':\n          $ref: '#/components/responses/bad-request'\n  /portfolio-reviews:\n    get:\n      operationId: listPortfolioReviewForUser\n      security:\n      - bearerAuth:\n        - read:customer:portfolio-reviews\n      tags:\n        - portfolio-review\n      description: Get the list of the portfolio review.\n      responses:\n        '200':\n          description: The list of the portfolio review.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  portfolioReviews:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/portfolio-review'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /portfolio-reviews/{id}:\n    get:\n      operationId: getPortfolioReviewById\n      security:\n      - bearerAuth:\n        - read:customer:portfolio-reviews\n      tags:\n        - portfolio-review\n      description: Get the portfolio review.\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: The portfolio review.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/portfolio-review'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /portfolios/{id}:\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n    get:\n      operationId: getPortfolioById\n      security:\n      - bearerAuth:\n        - read:customer:portfolios\n      tags:\n        - portfolio\n      description: Get the details of a portfolio.      \n      responses:\n        '200':\n          description: The details of the specified portfolio.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/portfolio'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n    patch:\n      operationId: updatePortfolioInformation\n      security:\n      - bearerAuth:\n        - write:customer:portfolios\n      tags:\n        - portfolio\n      description: Change portfolio information\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string   \n      responses:\n        '200':\n          description: The portfolio has been updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/portfolio'\n        '400':\n          $ref: \"#/components/responses/bad-request\"\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'        \n    put:\n      operationId: updatePortfolio\n      security:\n      - bearerAuth:\n        - write:customer:portfolios\n      tags:\n        - portfolio\n      deprecated: true\n      description: Change risk level of an existing portfolio\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/update-portfolio-risk-level-request\"\n      responses:\n        '200':\n          description: The portfolio has been updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/portfolio'\n        '400':\n          $ref: \"#/components/responses/bad-request\"\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /portfolios/{id}/change-model:\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n    post:\n      operationId: changePortfolioModel\n      security:\n      - bearerAuth:\n        - change-model:customer:portfolios\n      tags:\n        - portfolio\n      description: |\n        Change the portfolio model given the provided recommendation\n\n        You must call the `/portfolios/{id}/recommendations` endpoint to obtain a valid recommendation. \n        With this recommendation, you can change the portfolio model for the given portfolio, specifying the `recommendationId` and one of the suitable `modelPortfolioId` listed in the recommendation response.\n\n        Once used, the `recommendationId` will not be reusable.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/change-portfolio-model-request\"\n      responses:\n        '200':\n          description: The portfolio's model has been updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/portfolio'\n        '400':\n          $ref: \"#/components/responses/bad-request\"\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /portfolios/{id}/close:\n    post:\n      operationId: closePortfolio\n      security:\n      - bearerAuth:\n        - close:customer:portfolios\n      tags:\n        - portfolio\n      description: Closes the existing open portfolio. Only portfolio without active holdings and with no cash balance can be closed.\n      parameters:\n        - name: id\n          in: path\n          description: Portfolio identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: \"87261326-5399-44ca-9921-70daffd5dfe9\"\n      responses:\n        '200':\n          description: Portfolio has been closed successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/portfolio'\n        '400':\n          $ref: \"#/components/responses/bad-request\"\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /portfolios/{id}/disinvestment-requests:\n    get:\n      operationId: getPortfolioDisinvestmentRequests\n      security:\n      - bearerAuth:\n        - read:customer:disinvestement-requests\n      tags:\n        - portfolio\n      description: Returns the paginated list of all portfolio disinvestment requests ordered descendingly by the creation timestamp.\n      parameters:\n        - name: id\n          in: path\n          description: Portfolio identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: \"87261326-5399-44ca-9921-70daffd5dfe9\"\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/page-size'\n        - name: status\n          in: query\n          description: The expected status of the disinvestment requests to be returned by this endpoint. This can be used i.e. to retrieve only the pending disinvestment requests for the given portfolio.\n          required: false\n          schema:\n            $ref: '#/components/schemas/disinvestment-request-status'\n      responses:\n        '200':\n          description: The details of the portfolio disinvestment requests\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/disinvestment-requests'\n        '400':\n          $ref: \"#/components/responses/bad-request\"\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n    post:\n      operationId: createPortfolioDisinvestmentRequest\n      security:\n      - bearerAuth:\n        - create:customer:disinvestement-requests\n      tags:\n        - portfolio\n      description: Creates a pending disinvestment request for the given portfolio which is either a liquidation (= disinvestment of all assets) or partial disinvestment for a given amount.\n      parameters:\n        - name: id\n          in: path\n          description: Portfolio identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: \"87261326-5399-44ca-9921-70daffd5dfe9\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - isLiquidation\n              properties:\n                isLiquidation:\n                  description: Boolean flag to indicate whether the request is for a portfolio liquidation.\n                  example: false\n                  type: boolean\n                amount:\n                  description: Decimal value of the requested partial disinvestment amount. It is required when 'isLiquidation' is set to false, but not allowed when 'isLiquidation' is true.\n                  example: 1030.22\n                  type: number\n                reason:\n                  $ref: '#/components/schemas/disinvestment-request-reason'\n      responses:\n        '200':\n          description: Disinvestment request has been cancelled successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/disinvestment-request'\n        '400':\n          $ref: \"#/components/responses/bad-request\"\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /portfolios/{id}/disinvestment-requests/{disinvestmentRequestId}/cancel:\n    post:\n      operationId: cancelPortfolioDisinvestmentRequest\n      security:\n      - bearerAuth:\n        - cancel:customer:disinvestement-requests\n      tags:\n        - portfolio\n      description: Cancels the existing pending disinvestment request for the given portfolio.\n      parameters:\n        - name: id\n          in: path\n          description: Portfolio identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: \"87261326-5399-44ca-9921-70daffd5dfe9\"\n        - name: disinvestmentRequestId\n          in: path\n          description: Disinvestment request identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: \"e214fca9-6e72-499a-9ba8-d435ba898ce2\"\n      responses:\n        '200':\n          description: Disinvestment request has been cancelled successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/disinvestment-request'\n        '400':\n          $ref: \"#/components/responses/bad-request\"\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /portfolios/{id}/historical-market-value:\n    get:\n      operationId: getPortfolioHistoricalMarketValue\n      security:\n      - bearerAuth:\n        - read:customer:historic-market-values\n      tags:\n        - portfolio\n      description: Get the historical market value of a portfolio.\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: from\n          in: query\n          description: The date of the first day to include in the market value series.\n          required: false\n          schema:\n            type: string\n            format: date\n        - name: to\n          in: query\n          description: The date of the last day to include in the market value series.\n          required: false\n          schema:\n            type: string\n            format: date\n      responses:\n        '200':\n          description: The historical market value of the specified portfolio.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  from:\n                    type: string\n                  to:\n                    type: string\n                  series:\n                    $ref: '#/components/schemas/series'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /portfolios/{id}/historical-net-contribution:\n    get:\n      operationId: getPortfolioHistoricalNetContribution\n      security:\n      - bearerAuth:\n        - read:customer:historic-net-contributions\n      tags:\n        - portfolio\n      description: Get the historical net contributions of a portfolio.\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: from\n          in: query\n          description: The date of the first day to include in the net contributions series.\n          required: false\n          schema:\n            type: string\n            format: date\n        - name: to\n          in: query\n          description: The date of the last day to include in the net contributions series.\n          required: false\n          schema:\n            type: string\n            format: date\n      responses:\n        '200':\n          description: The historical net contributions of the specified portfolio.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  from:\n                    type: string\n                  to:\n                    type: string\n                  series:\n                    $ref: '#/components/schemas/series'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /portfolios/{id}/historical-performance:\n    get:\n      operationId: getPortfolioHistoricalPerformance\n      security:\n      - bearerAuth:\n        - read:customer:historic-performances\n      tags:\n        - portfolio\n      description: Get the historical performance of a portfolio.\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: type\n          in: query\n          description: The method used to calculate the performance.\n          required: true\n          schema:\n            type: string\n            enum:\n              - time-weighted\n              - money-weighted\n        - name: from\n          in: query\n          description: The date of the first day to include in the performance series.\n          required: false\n          schema:\n            type: string\n            format: date\n        - name: to\n          in: query\n          description: The date of the last day to include in the performance series.\n          required: false\n          schema:\n            type: string\n            format: date\n      responses:\n        '200':\n          description: The historical performance of the specified portfolio.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                  from:\n                    type: string\n                  to:\n                    type: string\n                  series:\n                    $ref: '#/components/schemas/series'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /portfolios/{id}/recommendations:\n    post:\n      operationId: createNewRecommendationForPortfolio\n      security:\n      - bearerAuth:\n        - create-new-recommendation:customer:portfolios\n      tags:\n        - portfolio\n      description: Get a new recommendation for the portfolio.\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                timeHorizonYears:\n                  type: integer\n                  minimum: 1\n                investmentStyle:\n                  $ref: '#/components/schemas/investment-style' \n                investmentAllocation:\n                  $ref: '#/components/schemas/investment-allocation'\n      responses:\n        '200':\n          description: A list of portfolios by risk level and suitability status.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  recommendationId:\n                    type: string\n                    format: uuid\n                  availablePortfolios:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/available-portfolio'\n        '400':\n          $ref: \"#/components/responses/bad-request\"\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /portfolios/{id}/recommendations/{recommendationId}:\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - name: recommendationId\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n    put:\n      operationId: changePortfolioRiskLevel\n      deprecated: true\n      security:\n      - bearerAuth:\n        - change-risk-level:customer:portfolios\n      tags:\n        - portfolio\n      description: |\n        Please use the [/portfolios/{id}/change-model](#/portfolios/changePortfolioModel) endpoint instead.\n        \n        Change the risk level of an existing portfolio given the provided recommendation.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/update-portfolio-risk-level-request\"\n      responses:\n        '200':\n          description: The portfolio's risk level has been updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/accepted-recommendation'\n        '400':\n          $ref: \"#/components/responses/bad-request\"\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /products:\n    get:\n      operationId: listAvailableProducts\n      security:\n      - bearerAuth:\n        - read:customer:products\n      tags:\n        - product\n      description: Get a list of available products.\n      parameters:\n        - name: legalEntityId\n          in: query\n          required: false\n          schema:\n            type: string\n            format: slug\n      responses:\n        '200':\n          description: A list of available products.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  products:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/product'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /promotions/referral-codes:\n    get:\n      operationId: getReferralCodes\n      security:\n        - bearerAuth: \n          - read:customer:promotions\n      tags:\n        - promotion\n      description: Retrieve the referral code and the invitation link of the authenthicated user\n      responses:\n        '200':\n          description: The referral code and the invitation link of the authenthicated user\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                    - referralCode\n                properties:\n                  referralCode:\n                    type: string\n                    example: \"MF123456\"\n                  invitationLink:\n                    type: string\n                    example: \"app.moneyfarm.com/gb/sign-up?promocode=MF123456\"\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /promotions/referrals:\n    get:\n      operationId: getUserReferrals\n      security:\n      - bearerAuth:\n        - read:customer:promotions\n      tags:\n        - promotion\n      description: retrieve the list of all referrals for the given user\n      parameters:\n        - name: status\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - successful\n              - pending\n      responses:\n        '200':\n          description: The list of the referrals collected by the authenthicated user\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  referrals:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/referral'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /promotions/share-invite:\n    post:\n      operationId: shareInvite\n      security:\n      - bearerAuth:\n        - share-invite:customer:promotions\n      tags:\n        - promotion\n      description: allow user to share their invite link and referral code\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/email-request'\n      responses:\n        '202':\n          description: Invite is being processed.\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '409':\n          $ref: '#/components/responses/conflict'\n  /recommendations:\n    post:\n      operationId: createPortfolioRecommendation\n      security:\n      - bearerAuth:\n        - create:customer:recommendations\n      tags:\n        - portfolio\n      summary: Create a portfolio recommendation.\n      description: \n        Allows partners to offer their customers the ability to get an official recommendation from our suitability engine. \n        This recommendation can then be used to create a portfolio.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/risk-profile'\n                - type: object\n              properties:\n                age:\n                  type: integer\n                productId:\n                  type: string\n                  format: slug\n                distributionChannel:\n                  description: \"The distribution channel identifier\"\n                  type: string\n                  format: slug\n                  example: standard\n                contributionOneOffAmount:\n                  type: number\n                contributionMonthlyAmount:\n                  type: number\n                timeHorizonYears:\n                  type: integer\n                  minimum: 1\n                goal:\n                  $ref: '#/components/schemas/investment-goal'\n                investmentStyle:\n                  $ref: '#/components/schemas/investment-style'\n                investmentAllocation:\n                  $ref: '#/components/schemas/investment-allocation'\n              required:\n                - age\n                - productId\n                - contributionOneOffAmount\n                - timeHorizonYears\n                - goal\n      responses:\n        '201':\n          description: A list of portfolios by risk level and suitability status.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  recommendationId:\n                    type: string\n                    format: uuid\n                  availablePortfolios:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/available-portfolio'    \n        '400':\n          $ref: \"#/components/responses/bad-request\"\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /simulations:\n    get:\n      operationId: getSimulation\n      security:\n      - bearerAuth:\n        - write:customer:simulations\n      tags:\n        - portfolio\n      summary: Get a simulated portfolio recommendation.\n      description: |\n        Allows partners to offer their customers the ability to interact with our suitability engine without making any kind of commitment. \n        This allows customers to experiment with the __Moneyfarm__ proposition before they part with any of their personal details or commit to creating a portfolio. \n        \n        __Note:__ A response from the */simulation* endpoint cannot be used to create a portfolio.\n      parameters:\n        - in: query\n          name: riskProfileScore\n          description: Decimal value between 0-1 that denotes the customer's appetite for risk. This value is produced by the partners risk profiling engine.\n          schema:\n            type: number\n            minimum: 0\n            maximum: 1\n          required: true\n        - in: query\n          name: financialExperienceScore\n          description: Decimal value between 0-1 that denotes the customer's experience with financial concepts and products (familiarity with ETFs, education, foreign exchange, etc.).\n          schema:\n            type: number\n            minimum: 0\n            maximum: 1\n          required: true\n        - in: query\n          name: annualSavingsPercentage\n          description: Decimal value used to denote the percentage of customer's yearly income that they are able to save.\n          schema:\n            type: number\n            minimum: 0\n            maximum: 1\n          required: true\n        - in: query\n          name: totalAssets\n          description: Decimal value used to denote the customer's total investable assets (i.e. excluding the value of their house).\n          schema:\n            type: number\n          required: true\n        - in: query\n          name: annualIncome\n          description: Decimal value used to denote the customers annual income.\n          schema:\n            type: number\n          required: true\n        - in: query\n          name: incomeSource\n          schema:\n            $ref: '#/components/schemas/income-source'\n          required: true\n        - in: query\n          name: age\n          description: Customer age.\n          schema:\n            type: integer\n          required: true\n        - in: query\n          name: productId\n          schema:\n            type: string\n            format: slug\n          required: true\n        - in: query\n          name: distributionChannel\n          description: The distribution channel identifier\n          schema:\n            type: string\n            format: slug\n            example: standard\n          required: false\n        - in: query\n          name: contributionOneOffAmount\n          schema:\n            type: number\n          required: true\n        - in: query\n          name: contributionMonthlyAmount\n          schema:\n            type: number\n          required: false\n        - in: query\n          name: timeHorizonYears\n          description: Number of years that the customer plans to invest in their portfolio for. Used to determine the time horizon (short, medium, long) for the portfolio.\n          schema:\n            type: number\n          required: true\n        - in: query\n          name: goal\n          schema:\n            $ref: '#/components/schemas/investment-goal'\n          required: true\n        - in: query\n          name: investmentStyle\n          description: The investment style for the portfolio. It is an optional parameter that defaults to classic when missing.\n          schema:\n            $ref: '#/components/schemas/investment-style'   \n          required: false\n        - in: query\n          name: investmentAllocation\n          description: The investment allocation for the portfolio. It is an optional parameter that defaults to managed when missing.\n          schema:\n            $ref: '#/components/schemas/investment-allocation'\n          required: false\n      responses:\n        '200':\n          description: A list of portfolios by risk level and suitability status.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  availablePortfolios:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/available-portfolio'\n        '400':\n          $ref: \"#/components/responses/bad-request\"\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /transfers/jisa:\n    post:\n      operationId: createJisaTransfer\n      security:\n      - bearerAuth:\n        - create-jisa:customer:transfers\n      tags:\n        - transfer\n      summary: Create an account transfer request\n      description: |\n        Create a request to transfer an existing jisa account into Moneyfarm\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/transfer-request-jisa'\n      responses:\n        '201':\n          description: The requested jisa transfer.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transfer-jisa'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'  \n  /user:\n    delete:\n      operationId: closeUserAccount\n      security:\n      - bearerAuth:\n        - close-account:customer:users\n      tags:\n        - user\n      description: Closes the the user account. Only users without active accounts can be closed.\n      responses:\n        '200':\n          description: User account has been closed successfully.\n        '400':\n          $ref: \"#/components/responses/bad-request\"\n        '401':\n          $ref: '#/components/responses/unauthorised'\n    get:\n      operationId: getUserInformation\n      security:\n      - bearerAuth:\n        - read:customer:users\n      tags:\n        - user\n      description: Get the basic details of a user.\n      responses:\n        '200':\n          description: The basic details of a user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/user-preview'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /user/activation:\n    post:\n      operationId: startUserActivation\n      security:\n      - bearerAuth:\n        - start-activation:customer:users\n      tags:\n        - user\n      summary: Start the activation process for the user\n      description: Start an asynchronous task to activate the user. Verification of the KYC/AML information might be part of the process.\n      responses:\n        '202':\n          description: Accepted\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '409':\n          $ref: '#/components/responses/conflict'\n  /user/addresses:\n    get:\n      operationId: listAddresses\n      security:\n      - bearerAuth:\n        - read:customer:addresses\n      tags:\n        - user\n      description: List the user's addresses.\n      responses:\n        '200':\n          description: The list of the user's addresses.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  items:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/address'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n    post:\n      operationId: createAddress\n      security:\n      - bearerAuth:\n        - create:customer:addresses\n      tags:\n        - user\n      description: Create an address.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/address-creation'\n      responses:\n        '201':\n          description: The created address.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/address'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /user/addresses/{id}:\n    put:\n      operationId: updateAddress\n      security:\n      - bearerAuth:\n        - write:customer:addresses\n      tags:\n        - user\n      description: Update an address.\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/address-update'\n      responses:\n        '200':\n          description: The updated address.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/address'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n    delete:\n      operationId: deleteAddress\n      security:\n      - bearerAuth:\n        - delete:customer:addresses\n      tags:\n        - user\n      description: Delete an address.\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: OK.\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /user/anti-money-laundering-details:\n    get:\n      operationId: getAntiMoneyLaunderingDetails\n      security:\n      - bearerAuth:\n        - read:customer:aml-details\n      tags:\n        - user\n      description: Get the user's anti money laundering details.\n      responses:\n        '200':\n          description: The user's anti money laundering details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/anti-money-laundering-details'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n    put:\n      operationId: setAntiMoneyLaunderingDetails\n      security:\n      - bearerAuth:\n        - write:customer:aml-details\n      tags:\n        - user\n      description: Set the user's anti money laundering details.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/anti-money-laundering-details'\n      responses:\n        '200':\n          description: The updated anti money laundering details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/anti-money-laundering-details'\n        '201':\n          description: The created anti money laundering details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/anti-money-laundering-details'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /user/citizenships:\n    get:\n      operationId: listCitizenships\n      security:\n      - bearerAuth:\n        - read:customer:citizenships\n      tags:\n        - user\n      description: List the user's citizenships.\n      responses:\n        '200':\n          description: The user's citizenships.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  citizenships:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/citizenship'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n    put:\n      operationId: updateCitizenships\n      security:\n      - bearerAuth:\n        - write:customer:citizenships\n      tags:\n        - user\n      description: Update the user's citizenships.\n      requestBody:\n        content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  citizenships:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/citizenship'\n      responses:\n        '200':\n          description: The updated citizenships.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  citizenships:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/citizenship'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /user/contacts:\n    get:\n      operationId: getUserContacts\n      security:\n      - bearerAuth:\n        - read:customer:contacts\n      tags:\n        - user\n      description: Get the user's contact details.\n      responses:\n        '200':\n          description: The user's contact details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/contact-details'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n    put:\n      operationId: setUserContacts\n      security:\n      - bearerAuth:\n        - write:customer:contacts\n      tags:\n        - user\n      description: Set the user's contact details.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/contact-details'\n      responses:\n        '200':\n          description: The updated contact details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/contact-details'\n        '201':\n          description: The created contact details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/contact-details'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /user/documents:\n    get:\n      operationId: listUserDocuments\n      security:\n      - bearerAuth:\n        - read:customer:documents\n      tags:\n        - user\n      deprecated: true\n      description: \"Returns the paginated list of user documents (Deprecated: use /documents instead)\"\n      parameters:\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/page-size'\n        - $ref: '#/components/parameters/sort'\n        - $ref: '#/components/parameters/document-type'\n      responses:\n        '200':\n          description: A list of documents for the specified user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/document-paginated-list'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /user/financial-summary:\n    get:\n      operationId: getFinancialSummary\n      security:\n        - bearerAuth:\n            - read:customer:financial-summary\n      tags:\n        - user\n      description: Returns the user's financial summary. This endpoint should used for display purposes. \n      responses:\n        '200':\n          description: User financial summary.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/financial-summary'\n        '401':\n          $ref: '#/components/responses/unauthorised'  \n  /user/generate-terms-and-conditions:\n    post:\n      operationId: generateTermsAndConditions\n      security:\n      - bearerAuth:\n        - generate-terms-conditions:customer:users\n      tags:\n        - user\n      description: Generate the documents related to terms and conditions.\n      responses:\n        '201':\n          description: The generated terms and conditions documents.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/terms-and-conditions'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /user/investor-profile:\n    get: \n      operationId: getInvestorProfile\n      security:\n      - bearerAuth:\n        - read:customer:investor-profiles\n      tags:\n        - user\n      description: Get the investor profile for the user.\n      responses:\n        '200':\n          description: The investor profile of the given user\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/investor-profile'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /user/login-details:\n    get:\n      operationId: getLoginDetails\n      security:\n        - bearerAuth:\n            - read:customer:login-details\n      tags:\n        - user\n      summary: Get user login details\n      description: Gets the user login details.\n      responses:\n        '200':\n          description: User login details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/login-details'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n    put:\n      operationId: updateUserLoginDetails\n      security:\n      - bearerAuth:\n        - write:customer:login-details\n      tags:\n        - user\n      description: Updates the user login details.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/login-details'\n      responses:\n        '200':\n          description: The updated user login details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/login-details'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /user/personal-details:\n    get:\n      operationId: getPersonalDetails\n      security:\n      - bearerAuth:\n        - read:customer:personal-details\n      tags:\n        - user\n      description: Get the user's personal details.\n      responses:\n        '200':\n          description: The user's personal details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/personal-details'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n    put:\n      operationId: setPersonalDetails\n      security:\n      - bearerAuth:\n        - write:customer:personal-details\n      tags:\n        - user\n      description: Set the user's personal details.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/personal-details'\n      responses:\n        '200':\n          description: The updated personal details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/personal-details'\n        '201':\n          description: The created personal details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/personal-details'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /user/profile-completion-status:\n    get:\n      operationId: getUserProfileCompletionStatus\n      security:\n      - bearerAuth:\n        - get-profile-completion-status:customer:users\n      tags:\n        - user\n      description: Retrieves the details of the missing data of the user profile.\n      responses:\n        '200':\n          description: The details of the missing data of the user profile.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/user-profile-completion-status'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /user/reopen-profile:\n    post:\n      operationId: reopenUserProfile\n      security:\n      - bearerAuth:\n        - reopen-profile:customer:users\n      tags:\n        - user\n      description: Reopens already completed user profile and moves the user status to 'open-profile'. This is might be required if you need to change already validated user data as part of the user onboarding journey.\n      responses:\n        '200':\n          description: User's profile has been successfully opened and user status has been updated to 'open-profile'.\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '409':\n          $ref: '#/components/responses/conflict'\n  /user/risk-profile:\n    put:\n      operationId: updateUserRiskProfile\n      security:\n      - bearerAuth:\n        - write:customer:user-risk-profiles\n      tags:\n        - user\n      description: The risk profile of a user.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/risk-profile'\n      responses:\n        '200':\n          description: OK\n        '201':\n          description: Created\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /user/send-otp:\n    post:\n      operationId: sendOtp\n      security:\n      - bearerAuth:\n        - send-otp:customer:users\n      tags:\n        - user\n      description: Send the one-time password to sign the terms \u0026 conditions. As pre-requisites for this endpoint to be called, the user should be in the 'complete-profile' status. For B2C Customers a dedicated token is required.\n      responses:\n        '200':\n          description: The one-time password sent to the phone number provided.\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /user/sign-document:\n    post:\n      deprecated: true\n      operationId: signDocument\n      security:\n      - bearerAuth:\n        - sign-documents:customer:users\n      tags:\n        - user\n      description: Digitally sign a document\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/sign-document-request'\n      responses:\n        '201':\n          description: Created\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /user/sign-documents:\n    post:\n      operationId: signDocuments\n      security:\n      - bearerAuth:\n        - sign-documents:customer:users\n      tags:\n        - user\n      description: Digitally sign multiple documents\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/sign-multiple-documents-request'\n      responses:\n        '201':\n          description: Created\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /user/tax-residence:\n    get:\n      operationId: getTaxResidence\n      security:\n      - bearerAuth:\n        - read:customer:tax-residences\n      tags:\n        - user\n      description: Get the user's tax residence.\n      responses:\n        '200':\n          description: The user's tax residence.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/identifier'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n    put:\n      operationId: setTaxResidence\n      security:\n      - bearerAuth:\n        - write:customer:tax-residences\n      tags:\n        - user\n      description: Set the user's tax residence.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/identifier'\n      responses:\n        '200':\n          description: The updated tax residence.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/identifier'\n        '201':\n          description: The created tax residence.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/identifier'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /user/validate-profile:\n    post:\n      operationId: validateUserProfile\n      security:\n      - bearerAuth:\n        - validate-profile:customer:users\n      tags:\n        - user\n      description: Attempts to validate the open profile of a user and if successful updates the user status to 'complete-profile', which is required to progress on the user onbarding journey. In case of unsuccessful validation the details of missing or invalid sections and fields are returned.\n      responses:\n        '200':\n          description: User's profile has been successfully validated and user status has been updated to 'complete-profile'.\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '409':\n          $ref: '#/components/responses/conflict'\n  /user/validation/kyc-sdk-token:\n    post:\n      operationId: userValidation\n      security:\n      - bearerAuth:\n        - generate-validation-token:customer:users\n      tags:\n        - user\n      summary: To obtain a sdk-token to submit KYC checks\n      description: To use in order to obtain a sdk-token to submit KYC checks, the token will be used to inizialize the SDK in order to be able to go through the KYC process\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/referrer'\n                - $ref: '#/components/schemas/application-id'\n              example:\n                applicationId: 'com.moneyfarm.applicationId'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/kyc-sdk-token'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /user/validation/kyc-status:\n    get:\n      operationId: getKycStatus\n      security:\n      - bearerAuth:\n        - read:customer:kyc-statuses\n      tags:\n        - user\n      summary: Retrieve the KYC identification flow status\n      description: Retrieves the status of the KYC identification flow.\n      responses:\n        '200':\n          description: Status of the retrieved KYC identification flow.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/kyc-status-response'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n    put:\n      operationId: updateKycStatus\n      security:\n      - bearerAuth:\n        - write:customer:kyc-statuses\n      tags:\n        - user\n      summary: Update the KYC identification flow status\n      description: To update the KYC identification flow status, used from FE to update the status when one of the identification step is done. In this way we can leverage on this to check what is the next step for the user.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/kyc-status-request'\n      responses:\n        '200':\n          description: Status of the successfully updated KYC identification flow.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/kyc-status-response'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n        '404':\n          $ref: '#/components/responses/not-found'\n  /user/video-call/sdk-token:\n    post:\n      operationId: createVideocallSdkToken\n      security:\n        - bearerAuth:\n            - create:customer:video-call-sdk-token\n      tags:\n        - user\n      summary: To obtain a sdk-token to start videocalls\n      description:\n        To use in order to obtain a sdk-token to start videocalls through\n        Bandyer, the token will be used to inizialize the SDK in order to be\n        able to call the external Vendor\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/video-call-sdk-token'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\n  /users:\n    post:\n      operationId: createUser\n      security:\n      - bearerAuth:\n        - create:customer:users\n      tags:\n        - user\n      description: Create a new user.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/user-creation-request'\n      responses:\n        '201':\n          description: The created user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/created-user'\n        '400':\n          $ref: '#/components/responses/bad-request'\n        '401':\n          $ref: '#/components/responses/unauthorised'\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  responses:\n    bad-request:\n      description: The server cannot or will not process the request due to something that is perceived to be a client error.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n          example: \n            type: \"https://api.moneyfarm.com/errors/bad-request\"\n            title: \"The request is malformed\"\n            detail: \"Object is missing required member 'xxxxxx'\"\n    conflict:\n      description: Requested action can't be performed due to conflicting state of the underlying resource.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n          example:\n            type: \"https://api.moneyfarm.com/errors/invalid-user-status\"\n            title: \"The requested operation is not allowed in the user's current status\"\n    not-acceptable:\n      description: Cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n          example: \n            type: \"https://api.moneyfarm.com/errors/not-acceptable\"\n            title: \"The requested language is not valid.\"\n            detail: \"Valid options are 'en-GB', 'it-IT'\"\n    not-found:\n      description: The specified resource was not found.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n          example: \n            type: \"https://api.moneyfarm.com/errors/not-found\"\n            title: \"The requested resource cannot be found.\"\n    unauthorised:\n      description: Authorisation information is missing or invalid.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n          example: \n            type: \"https://api.moneyfarm.com/errors/invalid-credentials\"\n            title: \"The requester credentials are invalid.\"\n  parameters:\n    document-type:\n      in: query\n      name: type\n      required: false\n      schema:\n        type: string\n      description: The type of the document\n    page:\n      in: query\n      name: page\n      required: false\n      schema:\n        type: integer\n      description: Page number 0-index\n    page-size:\n      in: query\n      name: pageSize\n      required: false\n      schema:\n        type: integer\n      description: The number of items per page\n    sort:\n      in: query\n      name: sort\n      required: false\n      schema:\n        type: string\n      description: \u003e\n        Sort order:\n          * `field:asc` - Ascending field, from A to Z\n          * `field:desc` - Descending field, from Z to A\n  schemas:\n    accepted-recommendation:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        timeHorizonYears:\n          type: integer\n          description: The time horizon in years selected to obtain the recommendation\n        investmentStyle:\n          $ref: '#/components/schemas/investment-style'          \n        investmentAllocation:\n          $ref: '#/components/schemas/investment-allocation'\n        riskLevel:\n          type: integer\n          description: The risk level of the model portfolio selected when the recommendation has been accepted\n        modelPortfolioId:\n          type: string\n          format: slug\n          description: The chosen portfolio model\n        suitabilityStatus:                            \n          description: The suitability status of the model portfolio selected when the recommendation has been accepted\n          allOf:\n            - $ref: '#/components/schemas/suitability-status'      \n    access-token-response:\n      type: object\n      properties:\n        accessToken:\n          type: string\n          description: JWT token, base64 encoded\n        expiresIn:\n          type: number\n          description: duration of time the token is valid for (in seconds)\n        tokenType:\n          type: string\n          description: type of token returned. Should always be Bearer\n      example:\n        accessToken: \"eyJraWQiOiJwcml2YXRlLWtleSIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJhdWQiOiJodHRwczovL2F1dGgtdGVzdC5tb25leWZhcm0uY29tL3VzZXJpbmZvIiwic3ViIjoiYXV0aDB8MSIsImh0dHBzOi8vbW9uZXlmYXJtLmNvbS9iYXNpYyI6eyJ0aGlyZHBhcnR5IjoibW9uZXlmYXJtIiwicGFydG5lciI6IlBBUlRORVIiLCJyb2xlcyI6W3siaWQiOjIsImF1dGhvcml0eSI6IlJPTEVfVVNFUiJ9XSwidXNlcklkIjoxLCJwbGF0Zm9ybSI6IkdCIn0sImlzcyI6Imh0dHBzOi8vbWYtdGVzdC5ldS5hdXRoMC5jb20vIiwiZXhwIjoxOTI5NTY3NjAwLCJpYXQiOjE2MTQwNzQyNzh9.lys-jMvvT_AIs7zKQzCB-6jDvWSxz7QvINiqdSIEBkPUBPhRWaxRAr2PEL1qb_LoD86-D3vJnWnUUXO23R5XDlv9wKoNIE7whA72gASQlQ3gCjXR1Rqq8k2D3D8jA4bi3n5HIgpSLmDM7RaZ2EvCBePMUWzD89pFkHjbGxliJcJZQ3COdf3AS5m0dFG8VurMsK87AvHEJ_yyJCjasf79yPPr8C-z9U0h6Q__3B8kVlhPlJeDashyCANRlkiONQFakTmSUYXfzERoP1k4DxFaDOdbig7ZURVZEyH4PFBftZggexmeWwyuwGFc0gV7a3y5pNVLCZJJ4f3pvNiHxNxkkg\"\n        expiresIn: 3600\n        tokenType: \"Bearer\"\n    account:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: \"3fa85f64-5717-4562-b3fc-2c963f66afa6\"\n        currency:\n          type: string\n          format: ISO-4217\n          example: \"EUR\"\n        canCreatePortfolio:\n          type: boolean\n          description: A flag that indicates if the user can add another portfolio for the specific product\n        additionalInfo:\n          oneOf:\n            - $ref: \"#/components/schemas/account-additional-info-isa\"\n            - $ref: \"#/components/schemas/account-additional-info-jisa\"\n        product:\n          $ref: '#/components/schemas/account-product'\n        investmentType:\n          $ref: '#/components/schemas/investment-type'\n        portfolios:\n          type: array\n          items:\n            $ref: '#/components/schemas/portfolio-preview'\n    account-additional-info-isa:\n      type: object\n      properties:\n        currentYearAllowance:\n          type: number\n          description: Allowance for the current year\n        maxInvestment:\n          type: number\n          description: Remaining allowance for current year\n        year:\n          type: integer\n          description: Current tax year\n    account-additional-info-jisa:\n      type: object\n      properties:\n        currentYearAllowance:\n          type: number\n          description: Allowance for the current year\n        maxInvestment:\n          type: number\n          description: Remaining allowance for current year\n        year:\n          type: integer\n          description: Current tax year\n        beneficiary:\n          $ref: \"#/components/schemas/beneficiary-personal-details\"\n    account-creation-parameters:\n      type: object\n      properties:\n        productId:\n          type: string\n          format: slug\n          example: \"gia-discretionary\"\n        legalEntityId:\n          type: string\n          format: slug\n          example: \"mfm-it\"\n        currency:\n          type: string\n          format: ISO-4217\n          example: \"EUR\"\n        distributionChannel:\n          description: \"The distribution channel identifier\"\n          type: string\n          format: slug\n          example: default\n      required:\n        - productId\n        - legalEntityId\n        - currency\n    account-preview:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        currency:\n          type: string\n          format: ISO-4217\n        investmentType:\n          $ref: '#/components/schemas/investment-type'\n    account-product:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: string\n          format: slug\n          example: \"gia-discretionary\"\n        name:\n          type: string\n          example: \"General Investment Account\"\n        investmentStrategy:\n          description: \"The level of involvement of the customer in the asset allocation decisions\"\n          type: string\n          format: slug\n          example: \"discretionary\"\n        investmentType:\n          description: \"The type of investment the portfolio is based on\"\n          type: string\n          format: slug\n          example: \"gia\"\n    activity:\n      type: object\n      required:\n        - type\n        - date\n        - accountId\n        - metadata\n      properties:\n        type:\n          $ref: '#/components/schemas/activity-type'\n        date:\n          type: string\n          format: date\n        accountId:\n          type: string\n          format: uuid\n        portfolioId:\n          type: string\n          format: uuid\n        metadata:\n            oneOf:\n              - $ref: '#/components/schemas/cash-flow'\n              - $ref: '#/components/schemas/trade'  \n    activity-type:\n      type: string\n      enum:\n        - cash-flow\n        - trade\n    address:\n      type: object\n      required:\n        - id\n        - type\n        - streetAddress\n        - country\n        - city\n        - postcode\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: '6c05fb51-09c9-450d-bcbd-18b4d16de491'\n        type:\n          type: string\n          enum:\n            - residence\n        streetAddress:\n          type: string\n          example: 'Main street 12'\n          maxLength: 255\n        city:\n          type: string\n          example: 'MILANO'\n        geographicRegion:\n          type: string\n          example: 'MI'\n        country:\n          type: string\n          format: ISO-3166\n          example: 'IT'\n        postcode:\n          type: string\n          example: '20124'\n        building:\n          type: string\n          example: East Five Apartments\n        buildingNumber:\n          type: string\n          example: 51B\n        flat:\n          type: string\n          example: 407b\n    address-creation:\n      type: object\n      required:\n        - type\n        - streetAddress\n        - country\n        - city\n        - postcode\n      properties:\n        type:\n          type: string\n          enum:\n            - residence\n        streetAddress:\n          type: string\n          example: 'Main street 12'\n        city:\n          type: string\n          example: 'MILANO'\n        geographicRegion:\n          type: string\n          example: 'MI'\n        country:\n          type: string\n          format: ISO-3166\n          example: 'IT'\n        postcode:\n          type: string\n          example: '20124'\n        building:\n          type: string\n          example: East Five Apartments\n        buildingNumber:\n          type: string\n          example: 51B\n        flat:\n          type: string\n          example: 407b\n    address-update:\n      type: object\n      required:\n        - streetAddress\n        - country\n        - city\n        - postcode\n      properties:\n        streetAddress:\n          type: string\n          example: 'Main street 12'\n        city:\n          type: string\n          example: 'MILANO'\n        geographicRegion:\n          type: string\n          example: 'MI'\n        country:\n          type: string\n          format: ISO-3166\n          example: 'IT'\n        postcode:\n          type: string\n          example: '20124'\n        building:\n          type: string\n          example: East Five Apartments\n        buildingNumber:\n          type: string\n          example: 51B\n        flat:\n          type: string\n          example: 407b\n    answer:\n      type: object\n      required:\n        - answerId\n        - answerText\n      properties:\n        answerId:\n          type: string\n          format: slug\n          example: \"familiar-with-etfs-strongly-agree\"\n        answerText:\n          type: string\n          example: \"Strongly Agree\"\n    anti-money-laundering-details:\n      type: object\n      required:\n        - politicallyExposedPerson\n        - occupation\n        - economicActivityType\n        - originOfAssets\n        - highRiskEconomicActivityType\n        - annualIncome\n      properties:\n        politicallyExposedPerson:\n          type: boolean\n        occupation:\n          type: string\n          description: Use `/occupations` to get permitted values.\n          example: 'worker'\n        economicActivityType:\n          type: string\n          description: Use `/economic-activity-types` to get permitted values.\n          example: 'plumber'\n        originOfAssets:\n          type: array\n          items:\n            type: string\n            enum:\n              - savings-from-income\n              - inheritance-or-donation\n              - sale-of-goods\n              - other\n        originOfOtherAssets:\n          type: string\n          description: A value indicating the origin of assets in case 'other' was selected as 'originOfAssets'.\n          example: 'investments'\n          maxLength: 100\n        highRiskEconomicActivityType:\n          type: boolean\n          description: A boolean flag to indicate if the users economic activity falls under one of categories considered as high risk under anti-money laundering regulations.\n        annualIncome:\n          type: number\n          description: Decimal value used to denote the customers annual income.\n    app-configuration:\n      type: object\n      required:\n        - blog\n        - branding\n        - investmentsReview\n        - memberGetMember\n        - promotion\n      properties:\n        blog:\n          $ref: '#/components/schemas/app-configuration-blog'\n        branding:\n          $ref: '#/components/schemas/app-configuration-branding'\n        investmentsReview:\n          $ref: '#/components/schemas/app-configuration-investments-review'\n        memberGetMember:\n          $ref: '#/components/schemas/app-configuration-member-get-member'\n        promotion:\n          $ref: '#/components/schemas/app-configuration-promotion'\n    app-configuration-blog:\n      type: object\n      required:\n        - enabled\n      properties:\n        enabled:\n          type: boolean\n          description: Value that indicates whether the blog widget should be enabled and visible to the logged in user\n          example: true\n    app-configuration-branding:\n      type: object\n      required:\n        - primary\n      properties:\n        primary:\n          $ref: '#/components/schemas/app-configuration-branding-layer'\n        secondary:\n          $ref: '#/components/schemas/app-configuration-branding-layer'\n    app-configuration-branding-layer:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          description: \"Legal entity name of the company the branding is linked to\"\n          example: \"Dark Horse Wealth\"\n        link:\n          type: string\n          format: url\n          description: \"URL leading to the main page of the company the branding is linked to\"\n        logoUrl:\n          type: string\n          format: url\n          description: \"URL leading to the image representing the logo of the company the branding is linked to\"\n    app-configuration-investments-review:\n      type: object\n      required:\n        - enabled\n      properties:\n        enabled:\n          type: boolean\n          description: Value that indicates whether the investments review widget should be enabled and visible to the logged in user\n          example: true\n    app-configuration-member-get-member:\n      type: object\n      required:\n        - enabled\n      properties:\n        enabled:\n          type: boolean\n          description: Value that indicates whether the MGM components should be enabled and visible to the logged in user\n          example: true\n    app-configuration-promotion:\n      type: object\n      required:\n        - enabled\n      properties:\n        enabled:\n          type: boolean\n          description: Value that indicates whether the promotion/coupon support should be enabled and visible to the logged in user\n          example: true\n    app-preferences:\n      type: object\n      required:\n        - performanceType\n        - privacyMode\n        - portfoliosOrder\n      properties:\n        performanceType:\n          $ref: '#/components/schemas/performance-type'\n        privacyMode:\n          $ref: '#/components/schemas/privacy-mode'\n        portfoliosOrder:\n          type: array\n          items:\n            type: string\n            format: uuid\n        showMarketingChoice:\n          type: boolean\n    app-preferences-request:\n      type: object\n      properties:\n        performanceType:\n          $ref: '#/components/schemas/performance-type'\n        privacyMode:\n          $ref: '#/components/schemas/privacy-mode'\n        portfoliosOrder:\n          type: array\n          items:\n            type: string\n            format: uuid\n        showMarketingChoice:\n          type: boolean\n    application-id:\n      type: string\n      description: The application ID (or “application bundle ID”) - used with the iOS and Android SDKs\n      example: 'com.moneyfarm.applicationId'\n    appointment:\n      type: object\n      required:\n        - id\n        - category\n        - slot\n        - phoneNumber\n        - type\n      properties:\n        id:\n          type: string\n          format: uuid\n        category:\n          $ref: '#/components/schemas/appointment-category'\n        slot:\n          type: string\n          format: date-time\n          example: \"2021-04-15T07:00:00Z\"\n        phoneNumber:\n          $ref: '#/components/schemas/phone-number'\n        reason:\n          type: string\n          example: \"Doubt about fees\"\n        type:\n          type: string\n          enum: [\"phone\", \"video\"]\n    appointment-category:\n      type: string\n      enum: [\"first-call\", \"advisory-call\", \"generic-info\", \"customer-info\"]\n    appointment-category-details:\n      type: object\n      required:\n        - category\n        - types\n        - immediateCallback\n      properties:\n        category:\n          $ref: '#/components/schemas/appointment-category'\n        types:\n          type: array\n          items:\n            type: string\n            enum: [\"phone\", \"video\"]\n        immediateCallback:\n          type: boolean\n          description: Value that indicates if the immediate callback functionality is available\n          example: true\n    appointment-request:\n      type: object\n      required:\n        - category\n        - phoneNumber\n        - slot\n      properties:\n        category:\n          $ref: '#/components/schemas/appointment-category'\n        phoneNumber:\n          $ref: '#/components/schemas/phone-number'\n        slot:\n          type: string\n          format: date-time\n          example: \"2020-09-11T11:00:00Z\"\n        type:\n          type: string\n          description: Optional enum string indicating the type of appointment (default is phone)\n          enum: [\"phone\", \"video\"]\n        reason:\n          type: string\n          example: \"Doubt about fees\"\n    available-portfolio:\n      type: object\n      properties:\n        riskLevel:\n          type: integer\n        status:\n          $ref: '#/components/schemas/suitability-status'\n        modelPortfolioId:\n          type: string\n          format: slug\n    bank-account:\n      required:\n        - id\n        - identifier\n        - name\n        - status\n        - products\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        identifier:\n          oneOf:\n            - $ref: '#/components/schemas/iban'\n            - $ref: '#/components/schemas/sort-code-account-number'\n          example: \n            iban: \"IT60X0542811101000000123456\"\n        status:\n          type: string\n          enum:\n            - pending\n            - action-required\n            - validated\n        products:\n          type: array\n          items:\n            type: string\n            format: slug\n            example: \"gia-advisory\"    \n    bank-accounts:\n      allOf:\n        - $ref: '#/components/schemas/pagination'\n      required:\n        - items\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/bank-account'\n    beneficiary-contact-details:\n      type: object\n      properties:\n        phoneNumber:\n          $ref: '#/components/schemas/phone-number'\n        email:\n          type: string\n          format: email\n          example: customer@example.com\n    beneficiary-creation:\n      type: object\n      properties:\n        personalDetails:\n          $ref: '#/components/schemas/beneficiary-personal-details'\n        addresses:\n          type: array\n          items:            \n            $ref: '#/components/schemas/address-creation'\n        contactDetails:\n          $ref: '#/components/schemas/beneficiary-contact-details'\n        taxIdentifier:\n          $ref: '#/components/schemas/identifier'\n      required:\n        - personalDetails\n        - addresses\n    beneficiary-list-response:\n      type: object\n      required:\n        - items\n      properties:\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/beneficiary-response'    \n    beneficiary-personal-details:\n      type: object\n      required:\n        - firstName\n        - lastName\n        - dateOfBirth\n      properties:\n        firstName:\n          type: string\n          example: 'John'\n        middleName:\n          type: string\n          example: 'Ben'\n        lastName:\n          type: string\n          example: 'Smith'\n        dateOfBirth:\n          type: string\n          format: date\n    beneficiary-response:\n      type: object      \n      properties:\n        id: \n          type: string\n          format: uuid\n        personalDetails:\n          $ref: '#/components/schemas/beneficiary-personal-details'\n        addresses:\n          type: array\n          items:            \n            $ref: '#/components/schemas/address'\n        contactDetails:\n          $ref: '#/components/schemas/beneficiary-contact-details'\n        taxIdentifier:\n          $ref: '#/components/schemas/identifier'\n      required:\n        - id\n        - personalDetails\n        - addresses\n    beneficiary-update:\n      type: object\n      properties:\n        personalDetails:\n          $ref: '#/components/schemas/beneficiary-personal-details'\n        addresses:\n          type: array\n          items:            \n            $ref: '#/components/schemas/address-creation'\n        contactDetails:\n          $ref: '#/components/schemas/beneficiary-contact-details'\n        taxIdentifier:\n          $ref: '#/components/schemas/identifier'\n    birth-place:\n      type: object\n      required:\n        - country\n        - city\n      properties:\n        country:\n          type: string\n          format: ISO-3166\n          example: 'IT'\n        geographicRegion:\n          type: string\n          example: 'MI'\n        city:\n          type: string\n          example: 'MILANO'\n    bulk-onboarding-address:\n      type: object\n      required:\n        - type\n        - addressLine1\n        - country\n        - geographicRegion\n        - city\n        - postcode\n      properties:\n        type:\n          type: string\n          enum:\n            - residence\n        addressLine1:\n          type: string\n        addressLine2:\n          type: string\n        addressLine3:\n          type: string\n        city:\n          type: string\n        geographicRegion:\n          type: string\n        country:\n          type: string\n          format: ISO-3166\n        postcode:\n          type: string\n    bulk-onboarding-contact-details:\n      type: object\n      required:\n        - email\n        - phoneNumber\n      properties:\n        email:\n          type: string\n          format: email\n        phoneNumber:\n          $ref: '#/components/schemas/phone-number'\n    bulk-onboarding-personal-details:\n      type: object\n      required:\n        - firstName\n        - lastName\n        - dateOfBirth\n        - gender\n        - birthPlace\n        - politicallyExposedPerson\n        - occupation\n        - economicActivityType\n        - originOfAssets\n      properties:\n        firstName:\n          type: string\n        middleName:\n          type: string\n        lastName:\n          type: string\n        dateOfBirth:\n          type: string\n          format: date\n        gender:\n          type: string\n          enum:\n            - female\n            - male\n        birthPlace:\n          $ref: '#/components/schemas/birth-place'\n        politicallyExposedPerson:\n          type: boolean\n        occupation:\n          type: string\n          description: Use `/occupations` to get permitted values.\n        economicActivityType:\n          type: string\n          description: Use `/economic-activity-types` to get permitted values.\n        originOfAssets:\n          type: string\n          enum:\n            - savings-from-income\n            - inheritance-or-donation\n            - sale-of-goods\n            - other\n        isUsPerson:\n          type: boolean\n    bulk-onboarding-user:\n      type: object\n      properties:\n        personalDetails:\n          $ref: '#/components/schemas/bulk-onboarding-personal-details'\n        addresses:\n          type: array\n          items:\n            $ref: '#/components/schemas/bulk-onboarding-address'\n        contacts:\n          $ref: '#/components/schemas/bulk-onboarding-contact-details'\n        nationalIdentifiers:\n          type: array\n          items:\n            $ref: '#/components/schemas/identifier'\n        taxResidence:\n          $ref: '#/components/schemas/identifier'\n        documents:\n          type: array\n          items:\n            $ref: '#/components/schemas/file'\n        documentDetails:\n          type: array\n          items:\n            $ref: '#/components/schemas/document-details'\n        externalId:\n          type: string\n    business-address:\n      type: object\n      required:\n      - addressLine\n      - city\n      - postcode\n      - country\n      properties:\n        addressLine:\n          type: string\n        city: \n          type: string\n        postcode:\n          type: string\n        country:\n          type: string\n      example:\n        addressLine: \"Via Largo Carlo Felice 26\"\n        city: \"Cagliari\"\n        postcode: \"09124\"\n        country: \"Italia\"\n    cash-flow:\n      type: object\n      required:\n        - type\n        - date\n        - valueDate\n        - currency\n        - amount\n      properties:\n        type:\n          $ref: '#/components/schemas/cash-flow-type'\n        date:\n          type: string\n          format: date\n        valueDate:\n          type: string\n          format: date\n        currency:\n          type: string\n          format: ISO-4217\n        amount:\n          type: number\n        isin:\n          type: string\n        instrumentName:\n          type: string\n    cash-flow-type:\n      type: string\n      enum:\n        - deposit\n        - investment\n        - withdrawal\n        - disinvestment\n        - dividend\n        - fee\n        - capital-gain-tax\n        - stamp-duty-tax\n        - dividend-tax\n        - fee-refund\n        - capital-gain-tax-refund\n        - stamp-duty-tax-refund\n        - dividend-tax-refund\n        - upfront-fee\n    change-portfolio-model-request:\n      type: object\n      required:\n        - recommendationId\n        - modelPortfolioId\n      properties:\n        recommendationId:\n          type: string\n          format: uuid\n        modelPortfolioId:\n          type: string\n          format: slug  \n          example: moneyfarm-esg-it-r1-c1 \n    citizenship:\n      type: object\n      required:\n        - country\n        - identifiers\n      properties:\n        country:\n          type: string\n          format: ISO-3166\n          example: 'IT'\n        identifiers:\n          type: array\n          items:\n            $ref: '#/components/schemas/citizenship-identifier'\n    citizenship-identifier:\n      type: object\n      required:\n        - type\n      properties:\n        type:\n          type: string\n          example: 'fiscal-code'\n        value:\n          type: string\n          example: 'BCADFE95S11F205H'\n    communication-preference:\n      type: object\n      required:\n        - isEnabled\n        - type\n      properties:\n        isEnabled:\n          type: boolean\n          example: true\n        type:\n          type: string\n          enum: \n            - marketing\n    communication-preferences:\n      type: object\n      required:\n        - items\n      properties:\n        items:\n          type: array\n          items: \n            $ref: '#/components/schemas/communication-preference'\n    contact-details:\n      type: object\n      required:\n        - phoneNumber\n      properties:\n        phoneNumber:\n          $ref: '#/components/schemas/phone-number'\n    contract:\n      type: object\n      required:\n        - id\n        - type\n        - status\n      properties:\n        id: \n          type: string\n          format: uuid\n        type:\n          type: string\n          enum:\n            - direct-debit-mandate\n            - terms-and-conditions\n        status:\n          type: string\n          enum:\n            - not-signed\n            - signed\n        file:\n          type: object\n          required:\n            - reference\n          properties:\n            reference:\n              oneOf:\n                - $ref: '#/components/schemas/internal-file'\n                - $ref: '#/components/schemas/external-file'\n            filename:\n              type: string\n          example:\n            reference:\n              documentId: 3fa85f64-5717-4562-b3fc-66afa62c963f\n              filename: dd-mandate-contract-1.pdf        \n            filename: abc.d\n        signedFile:\n          type: object\n          required:\n            - reference\n          properties:            \n            reference:\n              oneOf:\n                - $ref: '#/components/schemas/internal-file'\n                - $ref: '#/components/schemas/external-file'            \n            signedAt: \n              type: string\n              format: date-time\n          example:\n            reference: \n              externalSystem: poste\n              filename: file.pdf\n              format: pdf\n            signedAt: 2020-11-12T15:09:26.145Z\n    created-user:\n      type: object\n      required:\n        - id\n        - email\n      properties:\n        email:\n          type: string\n          format: email\n          example: 'new-user@domain.com'\n        id:\n          type: string\n          format: uuid\n          example: '6c05fb51-09c9-450d-bcbd-18b4d16de491'\n    currency:\n      type: string\n      enum: \n        - EUR\n        - GBP\n    device:\n      type: object\n      required:\n        - id\n        - token\n        - operatingSystem\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: Device ID obtained from the client device\n          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6\n        token:\n          type: string\n          example: 740f4707 bebcf74f 9b7c25d4 8e335894 5f6aa01d a5ddb387 462c7eaf 61bb78ad\n        operatingSystem:\n          type: string\n          enum:\n            - android\n            - ios\n    direct-debit-mandate:\n      type: object\n      required:\n        - id\n        - reference\n        - status\n        - contract\n        - debtor\n        - creditor        \n      properties:\n        id:\n          type: string\n          format: uuid\n        reference:\n          type: string\n          description: The Unique Mandate Reference to be included in the Direct Debit Mandate contract to be signed by the user.\n        status:\n          $ref: '#/components/schemas/direct-debit-mandate-status'\n        debtor:\n          type: object\n          required:\n            - fullName\n            - bankAccount\n          properties:\n            fullName:\n              type: string\n              example: \"Mario Rossi\"\n            bankAccount:\n              type: object\n              required:\n                - id\n                - identifier\n              properties:\n                id:\n                  type: string\n                  format: uuid\n                identifier:\n                  oneOf:\n                    - $ref: '#/components/schemas/iban'\n                    - $ref: '#/components/schemas/sort-code-account-number'\n                  example:\n                    iban: \"IT60X0542811101000000123456\"\n        creditor:\n          type: object\n          required:\n            - businessName\n            - address\n            - creditorIdentifier\n            - bankAccount\n          properties:\n            businessName:\n              type: string\n              example: \"MFM Investment LTD – Italian Branch\"\n            address:\n              $ref: '#/components/schemas/business-address'              \n            creditorIdentifier:\n              type: string\n              example: \"IT12H021234563682189892\"\n            bankAccount:\n              oneOf:\n                - $ref: '#/components/schemas/iban'\n                - $ref: '#/components/schemas/sort-code-account-number'\n              example:\n                iban: \"IT60X0542811101000000654321\"\n        contract:\n          $ref: '#/components/schemas/contract'\n    direct-debit-mandate-status:\n      type: string\n      enum:\n        - pending\n        - validating\n        - active\n        - canceled\n    direct-debit-mandates:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/pagination'\n      required:\n        - items\n      properties:\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/direct-debit-mandate'\n    disinvestment-request:\n      type: object\n      required:\n        - id\n        - status\n        - isLiquidation\n        - createdAt\n        - updatedAt\n      properties:\n        id:\n          description: UUID representing the unique identifier of the given disinvestment request\n          example: \"547eca5e-18d3-4a2c-968e-2966820078fd\"\n          type: string\n          format: uuid\n        status:\n          $ref: '#/components/schemas/disinvestment-request-status'\n        isLiquidation:\n          description: Boolean flag to indicate whether the request is for a portfolio liquidation, which means disinvestment of all available assets and funds from a portfolio.\n          example: false\n          type: boolean\n        amount:\n          description: Decimal value indicating the requested partial disinvestment amount, not present when liquidation is requested.\n          example: 1030.22\n          type: number\n        reason:\n          $ref: '#/components/schemas/disinvestment-request-reason'\n        createdAt:\n          description: Date and time when the given disinvestment has been requested.\n          example: \"2020-11-12T15:09:26.145Z\"\n          type: string\n          format: date-time\n        updatedAt:\n          description: Date and time when the given disinvestment has been last processed.\n          example: \"2020-11-13T17:32:00.000Z\"\n          type: string\n          format: date-time\n    disinvestment-request-reason:\n      description: Enumerated string representing the reason for this request.\n      type: string\n      format: slug\n      enum:\n        - market-conditions\n        - property-or-large-expense\n        - hold-cash-in-portfolio\n        - achieved-goal\n        - not-value-for-money\n        - performance\n        - move-to-another-manager\n        - change-portfolio\n    disinvestment-request-status:\n      description: Enumerated string representing the status of the given disinvestment request. The request can be either pending (it has not been yet processed), completed (it was processed and portfolio activities now return a resulting disinvestment cashflow) or cancelled.\n      type: string\n      format: slug\n      enum:\n        - pending\n        - completed\n        - cancelled\n    disinvestment-requests:\n      allOf:\n        - $ref: '#/components/schemas/pagination'\n      required:\n        - items\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/disinvestment-request'\n    document:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n        createdAt:\n          type: string\n          format: date-time\n        type:\n          type: string\n        filename:\n          type: string\n        meta:\n          anyOf:\n            - $ref: '#/components/schemas/document-meta-account-statement'\n            - $ref: '#/components/schemas/document-meta-invoice'\n    document-details:\n      type: object\n      required:\n        - type\n        - number\n      properties:\n        type:\n          type: string\n          enum:\n            - identity-card\n            - passport\n            - driving-license\n        number:\n          type: string\n        placeOfIssue:\n          type: string\n        issuer:\n          type: string\n          enum:\n            - municipality\n            - vehicle-registration-department\n            - police-headquarter\n        issuingDate:\n          type: string\n          format: date\n        expirationDate:\n          type: string\n          format: date\n    document-meta-account-statement:\n      type: object\n      properties:\n        name:\n          type: string\n        period:\n          type: string\n        date:\n          type: string\n          format: date\n        version:\n          type: number\n        status:\n          type: string\n    document-meta-invoice:\n      type: object\n      properties:\n        number:\n          type: string\n        issueDate:\n          type: string\n          format: date\n        begin:\n          type: string\n          format: date\n        end:\n          type: string\n          format: date\n        amount:\n          type: number\n    document-paginated-list:\n      allOf:\n        - $ref: '#/components/schemas/pagination'\n      required:\n        - items\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/document'\n    document-type:\n      type: string\n      format: slug\n      enum:\n        - fea-contract\n        - privacy\n        - aml\n        - mf-contract\n        - sella-direct-debit-mandate-contract\n        - brokerage-mandate-contract\n        - discretionary-mandate-contract\n    email-request:\n      type: object\n      required: \n        - emails\n      properties:\n        emails:\n          type: array\n          maxItems: 10\n          items:\n            type: string\n            format: email\n            example: 'example@domain.com'\n    error:\n      type: object\n      properties:\n        type:\n          type: string\n          description: A URI reference [RFC3986] that identifies the problem type.\n        title:\n          type: string\n          description: A short, human-readable summary of the problem type.\n        status:\n          type: string\n          description: The HTTP status code ([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.\n        detail:\n          type: string\n          description: A human-readable explanation specific to this occurrence of the problem.\n        instance:\n          type: string\n          description: A URI reference that identifies the specific occurrence of the problem.  It may or may not yield further information if dereferenced.\n      required:\n        - type\n        - title\n    expected-performance-time-series:\n      type: object\n      required:\n        - year\n        - expectedValue\n      properties:\n        year:\n          type: integer\n        expectedValue:\n          type: number\n      example:\n        year: 30\n        expectedValue: 17067.215165893\n    external-file:\n      type: object\n      required:\n        - externalSystem\n        - filename\n        - format\n      properties:\n        externalSystem:\n          type: string\n          enum:\n            - poste\n        filename:\n          type: string\n        format:\n          type: string\n          enum: \n            - pdf\n    file:\n      type: object\n      required:\n        - url\n        - filename\n        - tags\n        - md5\n      properties:\n        url:\n          type: string\n        filename:\n          type: string\n        tags:\n          type: array\n          items:\n            type: string\n            enum:\n              - contract\n              - fea\n              - mf\n              - privacy\n              - aml\n              - id-card\n              - fiscal-code\n              - passport\n              - driving-license\n              - front\n              - back\n        md5:\n          type: string\n          description: MD5 hash of the file.\n    financial-details:\n      type: object\n      required:\n        - status\n        - financialInstruments\n        - pensions\n        - bankAccounts\n        - insurancePolicies\n        - savingAccounts\n        - documents\n      properties:\n        version:\n          type: integer\n        status:\n          type: string\n          enum:\n            - draft\n            - confirmed\n            - completed\n        financialInstruments:\n          type: array\n          items:\n            $ref: '#/components/schemas/financial-details-instrument'\n        pensions:\n          type: array\n          items:\n            $ref: '#/components/schemas/financial-details-pension'\n        bankAccounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/financial-details-bank-account'\n        insurancePolicies:\n          type: array\n          items:\n            $ref: '#/components/schemas/financial-details-insurance-policy'\n        savingAccounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/financial-details-saving-account'\n        additionalInformation:\n          type: object\n          properties:\n            notes:\n              type: string\n        documents:\n          type: array\n          items:\n            $ref: '#/components/schemas/financial-details-attachment'\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n    financial-details-attachment:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          format: uuid\n        filename:\n          type: string\n    financial-details-bank-account:\n      type: object\n      properties:\n        bankName:\n          type: string\n        amount:\n          type: number\n    financial-details-instrument:\n      type: object\n      properties:\n        isin:\n          type: string\n          example: \"US0378331005\"\n        type:\n          type: string\n          enum:\n            - fund\n            - bond\n            - stock\n            - certificate\n            - etf\n        quantity:\n          type: number\n        price:\n          type: number\n    financial-details-insurance-policy:\n      type: object\n      properties:\n        name:\n          type: string\n        amount:\n          type: number\n    financial-details-pension:\n      type: object\n      properties:\n        name:\n          type: string\n        amount:\n          type: number\n    financial-details-saving-account:\n      type: object\n      properties:\n        bankName:\n          type: string\n        investedAmount:\n          type: number\n        interestRate:\n          type: number\n        expirationDate:\n          type: string\n          format: date\n      required:\n        - bankName\n        - investedAmount\n        - interestRate\n    financial-summary:\n      type: object\n      properties:\n        availableCash:\n          type: number\n          description: Amount of cash not allocated in any portfolio.\n        netContribution:\n          type: number\n          description: Net amount of the contributions of the user.\n        totalMarketValue:\n          type: number\n          description: Filled market value of the assets of the user.\n      required:\n        - availableCash\n        - netContribution\n        - totalMarketValue\n    iban:\n      type: object\n      required:\n        - iban\n      properties:\n        iban:\n          type: string\n          example: \"IT60X*****************3456\"\n    identifier:\n      type: object\n      required:\n        - country\n        - identifierType\n        - identifierValue\n      properties:\n        country:\n          type: string\n          format: ISO-3166\n          example: 'IT'\n        identifierType:\n          type: string\n          example: 'fiscal-code'\n        identifierValue:\n          type: string\n          example: 'BCADFE95S11F205H'\n    immediate-callback-request:\n      type: object\n      required:\n        - category\n        - phoneNumber\n      properties:\n        category:\n          $ref: '#/components/schemas/appointment-category'\n        phoneNumber:\n          $ref: '#/components/schemas/phone-number'\n        type:\n          type: string\n          description: Optional enum string indicating the type of appointment (default is phone)\n          enum: [ \"phone\", \"video\" ]\n        reason:\n          type: string\n          example: \"Doubt about fees\"\n    income-source:\n      type: string\n      enum:\n        - pension\n        - full-time\n        - investments\n        - self-employed\n    instrument:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        isin:\n          type: string\n        assetClassId:\n          type: string\n      example:\n        id: \"ie00b58hmn42-mtaa-eur\"\n        name: \"Materie Prime Globali con Copertura Tasso di Cambio\"\n        isin: \"IE00B58HMN42\"\n        assetClassId: \"commodities-and-real-estate\"\n    instrument-details:\n      type: object\n      required: \n        - id\n        - name\n        - isin\n        - exchange\n        - currency\n        - assetClassId\n        - assetClassName\n        - assetClassSpecification\n        - assetsUnderManagement\n        - totalExpenseRatio\n        - issuer\n        - fundDomicile\n        - fundType\n        - fundName\n        - geographicArea\n      properties:\n        id:\n          type: string\n          format: slug\n        name:\n          type: string\n        isin:\n          type: string\n        exchange: \n          type: string\n        currency:\n          type: string\n          format: ISO-4217\n        assetClassId:\n          type: string\n        assetClassName:\n          type: string\n        assetClassSpecification:\n          type: string\n        assetsUnderManagement:\n          type: number\n        totalExpenseRatio:\n          type: number        \n        issuer:\n          type: string\n        fundDomicile:\n          type: string\n        fundType:\n          type: string\n        fundName:\n          type: string        \n        geographicArea:\n          type: string\n        keyInvestorInformationDocument:\n          type: string\n        averageBidOfferSpread: \n          type: number\n      example: \n        id: \"ie00b58hmn42-mtaa-eur\"\n        name: \"Materie Prime Globali con Copertura Tasso di Cambio\"\n        isin: \"IE00B58HMN42\"\n        exchange: \"MTAA\"\n        currency: \"EUR\"\n        assetClassId: \"commodities-and-real-estate\"\n        assetClassName: \"Materie Prime\"\n        assetClassSpecification: \"Materie Prime e Real Estate\"\n        assetsUnderManagement: 1428475000\n        totalExpenseRatio: 0.0036\n        issuer: \"UBS\"\n        fundDomicile: \"Dublino\"\n        fundType: \"Long\"\n        fundName: \"UBS ETFs CMCI Composite SF UCITS ETF A Acc EUR\"\n        geographicArea: \"Altro\"\n        keyInvestorInformationDocument: \"http://www.morningstar.it/it/etf/snapshot/snapshot.aspx?id=0P0000YUB5\u0026tab=14\u0026DocumentId=3213d9a2dcdc156c8a42a752399895d2\u0026Format=PDF\"\n        averageBidOfferSpread: 0.004409\n    internal-file:\n      type: object\n      required:\n        - documentId\n        - filename\n      properties:\n        documentId:\n          type: string\n          format: uuid\n        filename:\n          type: string\n      example:\n        documentId: 3fa85f64-5717-4562-b3fc-66afa62c963f\n        filename: dd-mandate-contract-1.pdf        \n    investment-allocation:\n      type: string\n      enum:\n        - fixed\n        - managed\n    investment-frequency:\n      type: object\n      required:\n        - type\n        - day\n      properties:\n        type:\n          type: string\n          enum:\n            - monthly\n        day:\n          type: number\n          minimum: 1\n          maximum: 28\n    investment-goal:\n      type: string\n      enum:\n        - large-purchase\n        - grow-wealth\n        - just-in-case\n        - beat-inflation\n        - retirement\n    investment-order:\n      type: object\n      required:\n        - id\n        - destination\n        - amount\n        - active\n        - frequency\n      properties:\n        id:\n          type: string\n          format: uuid\n        destination:\n          type: string\n        amount:\n          type: number\n        active:\n          type: boolean\n        frequency:\n          $ref: '#/components/schemas/investment-frequency'\n    investment-order-request:\n      type: object\n      required:\n        - destination\n        - amount\n        - frequency\n      properties:\n        destination:\n          type: string\n        amount:\n          type: number\n        frequency:\n          $ref: '#/components/schemas/investment-frequency'\n    investment-style:\n      type: string\n      enum:\n        - classic\n        - esg\n        - cash\n        - thematic\n    investment-type:\n      deprecated: true\n      type: object\n      properties:\n        id:\n          type: string\n          format: slug\n          example: \"gia\"\n        name:\n          type: string\n    investor-profile:\n      type: object\n      required:\n        - questionnaireAnswersId\n        - name\n        - status\n        - level\n        - maxLevel\n        - updatedAt\n      properties:\n        questionnaireAnswersId:\n          type: string\n          format: uuid\n          example: \"975f0cce-a564-45da-81f3-3d9358864879\"\n        name:\n          type: string\n          enum:\n          - conservative\n          - focussed\n          - driven\n          - exploring\n          - adventurous\n          - pioneering\n          example: \"pioneering\"\n        level:\n          type: number\n          description: \"The assessed level of risk tolerance of the user\"\n          example: 5\n        maxLevel:\n          type: number\n          description: \"The maximum level of risk tolerance allowed by the product\"\n          example: 6\n        status:\n          type: string\n          enum:\n            - valid\n            - expired\n          example: \"expired\"\n        updatedAt: \n          type: string\n          format: date-time\n          example: \"2020-11-13T19:39:11.145Z\"\n    investor-profile-filled-questionnaires:\n      type: object\n      required:\n        - id\n        - answers\n        - createdAt\n        - questionnaireVersion\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: \"975f0cce-a564-45da-81f3-3d9358864879\"\n        answers:\n          $ref: '#/components/schemas/investor-profile-filled-questionnaires-answers'\n        createdAt:\n          type: string\n          format: date-time\n          example: \"2020-11-12T15:09:26.145Z\"\n        questionnaireVersion:\n          type: integer\n          example: 1\n    investor-profile-filled-questionnaires-answer:\n      type: object\n      required:\n        - questionId\n        - answer\n      properties:\n        questionId:\n          type: string\n          description: The identifier of the question\n          format: slug\n          example: \"not-worried-by-risk\"\n        answer:\n          type: string\n          description: The answer provided for the given question\n          format: slug\n          example: \"not-worried-by-risk-disagree\"\n    investor-profile-filled-questionnaires-answers:\n      type: array\n      items:\n        $ref: '#/components/schemas/investor-profile-filled-questionnaires-answer'\n    investor-profile-filled-questionnaires-request:\n      type: object\n      required:\n        - answers\n        - questionnaireVersion\n      properties:\n        answers:\n          $ref: '#/components/schemas/investor-profile-filled-questionnaires-answers'\n        questionnaireVersion:\n          type: integer\n          example: 1\n    investor-profile-questionnaire:\n      type: object\n      required:\n        - questionsAndAnswers\n        - version\n        - status\n      properties:\n        questionsAndAnswers:\n          type: array\n          items:\n            $ref: '#/components/schemas/question-and-answer'\n        version:\n          type: integer\n          example: 1\n        status:\n          type: string\n          enum:\n            - valid\n            - deprecated\n            - invalid\n    isa-provider-id:\n      type: object\n      properties:\n        id: \n          type: string\n          format: uuid\n      required:\n        - id\n    kyc-sdk-token:\n      type: object\n      properties:\n        sdkToken: \n          type: string\n    kyc-status-request:\n      type: object\n      required:\n        - action\n      properties:\n        action:\n          type: string\n          enum:\n            - identification-collected\n            - proof-of-address-collected\n          example: identification-collected\n        faceIdentificationType:\n          type: string\n          description: required only when action is identification-collected\n          enum:\n            - video\n            - photo\n          example: photo\n        documentId:\n          type: string\n          description: UUID to identify the proof of address file uploaded by the user, required only when action is proof-of-address-collected\n    kyc-status-response:\n      type: object\n      properties:\n        status: \n          type: string\n          enum:\n            - identification-pending\n            - proof-of-address-pending\n            - completed\n    login-details:\n      type: object\n      required:\n        - email\n      properties:\n        email:\n          type: string\n          format: email\n          example: \"example@example.com\"\n          description: The email used for the login\n    management-fee:\n      type: object\n      required:\n        - product\n        - distributionChannel\n        - investmentStyle\n        - allocationStrategy\n        - brackets\n      properties:\n        product:\n          type: string\n          format: slug\n          description: Type of product at which fee is applied (e.g. \"pip-discretionary\")\n          example: \"pip-discretionary\"\n        distributionChannel:\n          type: string\n          format: slug\n          description: Type of distribution channel at which fee is applied (e.g. \"default\")\n          example: \"default\"\n        investmentStyle:\n          type: string\n          format: slug\n          description: Type of investment style at which fee is applied (e.g. \"esg\")\n          example: \"esg\"\n        allocationStrategy:\n          type: string\n          format: slug\n          description: Type of allocation strategy at which fee is applied (e.g. \"managed\")\n          example: \"managed\"\n        freeAmount:\n          type: number\n          format: slug\n          description: Optional amount where fees are not applied.\n          example: 10000\n        brackets:\n          type: array\n          items:\n            $ref: '#/components/schemas/pricing-bracket'\n    model-portfolio:\n      type: object\n      properties:\n        id:\n          type: string\n          format: slug\n          example: \"moneyfarm-it-r6-c2\"\n        riskLevel:\n          type: integer\n          minimum: 1\n          maximum: 7\n          description: Value between 1-7 that denotes the risk of the portfolio, where 7 is the highest risk.\n          example: 5\n        complexityLevel:\n          type: integer\n          description: Value between 1-2 that denotes the complexity of the portfolio, where 2 is the highest complexity.\n          minimum: 1\n          maximum: 2\n          example: 1\n        investmentStyle:\n          $ref: '#/components/schemas/investment-style'        \n        assetClasses:\n          type: array\n          items:\n            $ref: '#/components/schemas/portfolio-asset-class'\n        instruments:\n          type: array\n          items:\n            $ref: '#/components/schemas/instrument'\n        expectedPerformance:\n          type: object\n          properties:\n            mean:\n              type: array\n              items:\n                $ref: '#/components/schemas/expected-performance-time-series'\n            perc0025:\n              type: array\n              items:\n                $ref: '#/components/schemas/expected-performance-time-series'\n            perc0275:\n              type: array\n              items:\n                $ref: '#/components/schemas/expected-performance-time-series'\n            perc0725:\n              type: array\n              items:\n                $ref: '#/components/schemas/expected-performance-time-series'\n            perc0975:\n              type: array\n              items:\n                $ref: '#/components/schemas/expected-performance-time-series'\n        historicalPerformance:\n          type: array\n          items:\n            type: object\n            properties:\n              date:\n                type: string\n                format: date\n              performance:\n                type: number\n          example:\n            - date: \"2020-06-20\"\n              performance: 152.2017\n            - date: \"2020-06-21\"\n              performance: 152.2017\n    notifications-reference:\n      type: object\n      properties:\n        referenceId:\n          type: string\n    onboarding-status:\n      type: object\n      properties:\n        id:\n          type: string\n        status:\n          type: string\n          enum:\n            - new\n            - in-progress\n            - done\n            - failed\n        lastUpdated:\n          type: string\n          format: date-time\n        user:\n          $ref: '#/components/schemas/status'\n        account:\n          $ref: '#/components/schemas/status'\n        portfolio:\n          $ref: '#/components/schemas/status'\n    pagination:\n      type: object\n      required:\n        - items\n        - page\n        - pageSize\n        - totalItems\n      properties:\n        page:\n          type: number\n        pageSize:\n          type: number\n        totalItems:\n          type: number\n    partner-user-id:\n      type: object\n      properties:\n        partnerUserId:\n          type: string\n          description: The Partner identifier of the user that is the subject of the generated token.\n      required:\n        - partnerUserId\n    payee-details:\n      type: object\n      required:\n        - accountNumber\n        - payeeName\n      properties:\n        accountNumber:\n          oneOf:\n            - $ref: '#/components/schemas/iban'\n            - $ref: '#/components/schemas/sort-code-account-number'\n        payeeName:\n          type: string\n          example: MFM Investment Ltd\n    payment-destination-account:\n      type: object\n      required:\n        - accountId\n      properties:\n        accountId:\n          type: string\n          format: uuid\n    payment-destination-portfolio:\n      type: object\n      required:\n        - portfolioId\n      properties:\n        portfolioId:\n          type: string\n          format: uuid\n    payment-method:\n      type: object\n      required:\n        - type\n        - details\n      properties:\n        type:\n          $ref: '#/components/schemas/payment-method-type'\n        details:\n          oneOf:\n            - $ref: '#/components/schemas/payment-method-details-bank-transfer'\n            - $ref: '#/components/schemas/payment-method-details-psd2'\n            - $ref: '#/components/schemas/payment-method-details-direct-debit'\n    payment-method-details-bank-transfer:\n      type: object\n      required: \n        - bankAccountId\n        - paymentReference\n      properties:\n        bankAccountId:\n          type: string\n          format: uuid\n        paymentReference:\n          type: string\n    payment-method-details-direct-debit:\n      type: object\n      required: \n        - bankAccountId\n        - directDebitMandateId\n      properties:\n        bankAccountId:\n          type: string\n          format: uuid\n        directDebitMandateId:\n          type: string\n          format: uuid\n    payment-method-details-psd2:\n      type: object\n      required: \n        - bankAccountId\n        - authorisationUrl\n      properties:\n        bankAccountId:\n          type: string\n          format: uuid\n        authorisationUrl:\n          type: string\n          format: url          \n    payment-method-type:\n      type: string\n      enum:\n        - direct-debit\n        - psd2\n        - bank-transfer\n    payment-order:\n      type: object\n      required: \n        - id\n        - paymentMethod\n        - frequency\n        - amount\n        - currency\n        - status\n        - destination\n        - createdAt\n      properties:\n        id:\n          type: string\n          format: uuid\n        paymentMethod:\n            $ref: '#/components/schemas/payment-method'\n        frequency:\n            $ref: '#/components/schemas/payment-order-frequency'\n        amount:\n            type: number\n            format: double\n        currency:\n            $ref: '#/components/schemas/currency'\n        status:\n            $ref: '#/components/schemas/payment-order-status'        \n        destination:\n          oneOf:\n            - $ref: '#/components/schemas/payment-destination-portfolio'\n            - $ref: '#/components/schemas/payment-destination-account'\n        createdAt:\n          type: string\n          format: date-time\n          example: \"2020-09-11T11:00:00Z\"\n        confirmedAt:\n          type: string\n          format: date-time\n          example: \"2020-09-11T11:00:00Z\"\n    payment-order-frequency:\n      type: object\n      required:\n        - type\n      properties:\n        type:\n          type: string\n          enum:\n            - monthly\n            - one-off\n        day: \n          type: integer\n          minimum: 1\n          maximum: 28    \n    payment-order-status:\n      type: string\n      enum:\n        - draft\n        - authorised\n        - confirmed\n        - accepted\n        - completed\n        - cancelled\n    payment-orders-list:\n      allOf:\n        - $ref: '#/components/schemas/pagination'\n      required:\n        - items\n      type: object\n      properties:\n        items:\n          type: array\n          items: \n            $ref: '#/components/schemas/payment-order'\n    performance-type:\n      type: string\n      enum:\n        - money-weighted\n        - time-weighted\n    personal-details:\n      type: object\n      required:\n        - firstName\n        - lastName\n        - dateOfBirth\n        - gender\n        - birthPlace\n      properties:\n        firstName:\n          type: string\n          example: 'John'\n        middleName:\n          type: string\n          example: 'Ben'\n        lastName:\n          type: string\n          example: 'Smith'\n        dateOfBirth:\n          type: string\n          format: date\n        gender:\n          type: string\n          enum:\n            - female\n            - male\n        birthPlace:\n          $ref: '#/components/schemas/birth-place'\n        isUsPerson:\n          type: boolean\n    phone-number:\n      type: string\n      format: E.164\n      pattern: '^\\+?[1-9]\\d{1,14}$'\n      example: \"+393260262394\"\n    portfolio:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        modelPortfolioId:\n          type: string\n          format: slug\n        account:\n          type: object\n          properties:\n            id:\n              type: string\n              format: uuid\n            investmentType:\n              type: string\n              format: slug\n            currency:\n              type: string\n              format: ISO-4217\n        canBeClosed:\n          type: boolean\n          description: Indicates whether the portfolio has no cash and could be closed\n        recommendation:\n          $ref: '#/components/schemas/accepted-recommendation'\n        timeHorizonYears:\n          type: number\n          description: The difference between the recommendation time horizon and the number of years that have elapsed since the recommendation.\n        suitabilityStatus:\n          description: The current suitability status of the portfolio\n          allOf:\n            - $ref: '#/components/schemas/suitability-status'\n        marketValue:\n          type: number\n        cash:\n          type: number\n        netContribution:\n          type: number\n        timeWeightedPerformance:\n          type: number\n        moneyWeightedPerformance:\n          type: number\n        assetClasses:\n          type: array\n          items:\n            $ref: '#/components/schemas/portfolio-asset-class'\n        holdings:\n          type: array\n          items:\n            type: object\n            properties:\n              instrument:\n                $ref: '#/components/schemas/instrument'\n              quantity:\n                type: integer\n              price:\n                type: number\n              marketValue:\n                type: number\n              volumeWeightedAveragePrice:\n                type: number\n              performance:\n                type: number\n        status:\n          type: string\n          format: slug\n          enum:\n            - active\n            - inactive\n        maxPortfolioLevels:\n          type: number\n          description: The maximum risk level for this type of portfolio\n    portfolio-asset-class:\n      type: object\n      properties:\n        id:\n          type: string\n        weight:\n          type: number\n          description: Percentage value expressed as a decimal.\n          format: double\n          minimum: 0\n          maximum: 1\n      example:\n        id: \"high-yield-and-emerging-markets-bonds\"\n        weight: 0.525\n    portfolio-creation-parameters:\n      type: object\n      properties:\n        name:\n          type: string\n        recommendationId:\n          type: string\n          format: uuid\n        riskLevel:\n          deprecated: true\n          type: integer\n          description: Please use the `modelPortfolioId` field instead\n        modelPortfolioId:\n          type: string\n          format: slug\n          example: moneyfarm-esg-it-r1-c1  \n      required:\n        - name\n        - recommendationId \n    portfolio-preview:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        timeHorizonYears:\n          type: number\n          description: The difference between the recommendation time horizon and the number of years that have elapsed since the recommendation.\n        riskLevel:\n          type: integer\n          description: The risk level of the model portfolio selected when the recommendation has been accepted\n        suitabilityStatus:\n          description: The current suitability status of the portfolio\n          allOf:\n            - $ref: '#/components/schemas/suitability-status'          \n        marketValue:\n          type: number\n        netContribution:\n          type: number\n        timeWeightedPerformance:\n          type: number\n        moneyWeightedPerformance:\n          type: number\n        status:\n          type: string\n          enum:\n            - active\n            - inactive\n    portfolio-review:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        reportUrl:\n          type: string\n        financialDetails:\n          $ref: '#/components/schemas/financial-details'\n        createdAt:\n          type: string\n          format: date-time\n    pricing-bracket:\n      type: object\n      required:\n        - type\n        - fee\n        - from\n      properties:\n        type:\n          type: string\n          enum:\n            - percentage\n            - fixed\n        fee:\n          type: number\n          example: 0.02\n        discountedFee:\n          type: number\n          description: Optional discounted fee if the current user has any applied coupon.\n          example: 0.01\n        from:\n          type: number\n          description: Amount at which the pricing bracket starts (inclusive).\n          example: 1000\n        to:\n          type: number\n          description: Amount at which the pricing bracket ends (exclusive).\n          example: 5000\n    privacy-mode:\n      type: string\n      enum:\n        - disabled\n        - enabled\n    product:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: string\n          format: slug\n          example: \"gia-discretionary\"\n        distributionChannel:\n          description: \"The distribution channel identifier\"\n          type: string\n          format: slug\n          example: standard\n        name:\n          type: string\n        currency:\n          type: string\n          format: ISO-4217\n          example: \"EUR\"\n        legalEntityId:\n          type: string\n          format: slug\n          example: \"mfm-it\"\n        minNumberOfPortfolios:\n          description: \"The minimum number of portfolios allowed for an account\"\n          type: number\n          minimum: 0\n          example: 0\n        maxNumberOfPortfolios:\n          description: \"The maximum number of portfolios allowed for an account\"\n          type: number\n          minimum: 1\n          example: 1\n        maxNumberOfAccounts:\n          description: \"The maximum number of account allowed for this product\"\n          type: number\n          minimum: 1\n          example: 1\n        investmentStrategy:\n          description: \"The level of involvement of the customer in the asset allocation decisions\"\n          type: string\n          format: slug\n          example: \"discretionary\"\n        investmentType:\n          description: \"The type of investment the portfolio is based on\"\n          type: string\n          format: slug\n          example: \"gia\"\n    question-and-answer:\n      type: object\n      required:\n        - sectionId\n        - questionId\n        - questionText\n        - answerType\n      properties:\n        sectionId:\n          type: string\n          format: slug\n          example: \"financial-experience\"\n        questionId:\n          type: string\n          format: slug\n          example: \"familiar-with-etfs\"\n        questionText:\n          type: string\n          example: \"I am familiar with Exchange Traded Funds (ETFs), Mutual Funds and similar instruments and consider them a good way to diversify investments and reduce risk.\"\n        answerType:\n          type: string\n          enum:\n            - single-choice\n            - integer\n            - decimal\n        answers:\n          type: array\n          items:\n            $ref: '#/components/schemas/answer'\n    referral:\n      type: object\n      description: The referral for a user, this represents an member get member promotion\n      required:\n        - createdAt\n      properties:\n        createdAt:\n          type: string\n          format: date-time\n        status:\n          type: string\n          enum:\n            - successful\n            - pending\n    referrer:\n      type: string\n      description: The referrer URL pattern - used with the Web SDK\n      example: 'http://app.moneyfarm.com/*'\n    risk-profile:\n      type: object\n      properties:\n        riskProfileScore:\n            description: Decimal value between 0-1 that denotes the customers appetite for risk. This value is produced by the partners risk profiling engine.\n            type: number\n            minimum: 0\n            maximum: 1\n        financialExperienceScore:\n          description: Decimal value between 0-1 that denotes the customers experience with financial concepts and products (familiarity with ETFs, education, foreign exchange, etc.).\n          type: number\n          minimum: 0\n          maximum: 1\n        annualSavingsPercentage:\n          description: Decimal value used to denote the percentage of customers yearly income that they are able to save.\n          type: number\n          minimum: 0\n          maximum: 1\n        totalAssets:\n          type: number\n          description: Decimal value used to denote the customers total investable assets (i.e. excluding the value of their house).\n        annualIncome:\n          type: number\n          description: Decimal value used to denote the customers annual income.\n        incomeSource:\n          $ref: '#/components/schemas/income-source'\n      required:\n        - riskProfileScore\n        - financialExperienceScore\n        - annualSavingsPercentage\n        - totalAssets\n        - annualIncome\n        - incomeSource\n    series:\n      type: array\n      items:\n        type: object\n        properties:\n          date:\n            type: string\n          value:\n            type: number\n    sign-document-request:\n      type: object\n      required:\n        - documentUrl\n        - otp\n        - documentType\n      properties:\n        documentUrl:\n          type: string\n          format: url\n        otp:\n          type: string\n        documentType:\n          $ref: '#/components/schemas/document-type'\n    sign-multiple-documents-request:\n      type: object\n      required:\n        - documents\n        - otp\n      properties:\n        documents:\n          type: array\n          items:\n            required:\n              - url\n              - type\n            properties:\n              url:\n                type: string\n                format: url\n              type:\n                $ref: '#/components/schemas/document-type'\n        otp:\n          type: string\n    sort-code-account-number:\n      type: object\n      required:\n         - sortCode\n         - accountNumber\n      properties:\n        sortCode:\n          type: string\n          example: \"4**7*4\"\n        accountNumber:\n          type: string\n          example: \"7**7***0\"\n    status:\n      type: object\n      required:\n        - status\n      properties:\n        id:\n          type: string\n        status:\n          type: string\n          enum:\n            - new\n            - in-progress\n            - done\n            - failed\n        message:\n          type: string\n    suitability-status:\n      type: string\n      format: slug\n      enum:\n        - unsuitable-conservative\n        - suitable-conservative\n        - suitable-lower-risk\n        - suitable-recommended-risk\n        - suitable-higher-risk\n        - suitable-aggressive\n        - unsuitable-aggressive\n    terms-and-conditions:\n      required:\n        - documents\n      type: object\n      properties:\n        documents:\n          type: array\n          items:\n            $ref: '#/components/schemas/terms-and-conditions-document'\n    terms-and-conditions-document:\n      required:\n        - id\n        - url\n        - type\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: \"810a0864-3c34-4900-9661-4e713f87b470\"\n        url:\n          type: string\n          format: url\n          example: \"https://example-test.s3.eu-west-1.amazonaws.com/ddff61ec-2dc9-4d36-9489-822b7e64e4d4?x-amz-meta-user-id=359315\u0026x-amz-meta-document-type=fea-contract\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Date=20201123T120924Z\u0026X-Amz-SignedHeaders=host\u0026X-Amz-Expires=7200\u0026X-Amz-Credential=AKIAX2DF3G3TTLFDLTEK%2F20201123%2Feu-west-1%2Fs3%2Faws4_request\u0026X-Amz-Signature=787108a97fae8533b273139b4343fe2520dff2e0cbf4b206b91d89d466b1239f\"\n        type:\n          $ref: '#/components/schemas/terms-and-conditions-document-type'\n    terms-and-conditions-document-type:\n      type: string\n      format: slug\n      enum:\n        - fea-contract\n        - privacy\n        - aml\n        - mf-contract\n    third-party-application:\n      type: object\n      required:\n        - clientId\n        - name\n      properties:\n        clientId:\n          type: string\n          format: uuid\n        name:\n          type: string\n    third-party-applications:\n      type: object\n      required:\n        - items\n      properties:\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/third-party-application'\n    trade:\n      type: object\n      required:\n        - date\n        - valueDate\n        - currency\n        - side\n        - quantity\n        - isin\n        - price\n        - amount\n        - instrumentName\n      properties:\n        date:\n          type: string\n          format: date\n        valueDate:\n          type: string\n          format: date\n        currency:\n          type: string\n          format: ISO-4217\n        side:\n          type: string\n          enum:\n            - buy\n            - sell\n        quantity:\n          type: number\n        isin:\n          type: string\n        instrumentName:\n          type: string\n        price:\n          type: number\n        amount:\n          type: number   \n    transfer-details:\n      type: object\n      description: \u003e\n        Explains how much of the account should be transferred.\n        An ISA or JISA transfer can either be a full or partial.\n        A Full transfer do not require other information. A partial transfer\n        requires specifying how much of the current year contribution should be transferred (total or none)\n        and how much of the previous years contributions should be transferred (total, none or partially providing the amount)\n      required:\n        - type\n      properties:        \n        type:\n          type: string\n          enum:\n            - full\n            - partial\n        partialTransferDetails:\n          type: object\n          required:\n            - currentYearContributionToTransfer\n            - previousYearContributionToTransfer\n          properties:\n            currentYearContributionToTransfer:\n              type: string\n              enum:\n                - total\n                - none\n            previousYearContributionToTransfer:\n              type: object\n              required:\n                - type\n              properties:\n                type:\n                  type: string\n                  enum: \n                    - total\n                    - partial\n                    - none\n                amount:\n                  type: number\n                  example: 2100.12\n    transfer-in-source:\n      type: object\n      required:\n        - accountDetails\n      properties:\n        provider:\n          type: object\n          properties:\n            id: \n              type: string\n              format: uuid\n            name:\n              type: string\n        accountDetails:\n          $ref: '#/components/schemas/transfer-in-source-jisa'    \n    transfer-in-source-jisa:\n      type: object\n      required:\n        - type\n        - accountIdentifier\n        - currentValue\n        - currentYearContribution        \n      properties:\n        type:\n          type: string\n          enum:\n            - stocks-and-shares\n            - cash\n            - child-trust-fund\n        accountIdentifier:\n          type: string\n          example: \"3000/2102\"\n        currentValue:\n          type: number\n          example: 1234.56\n        currentYearContribution:\n          type: number\n          example: 1234.56\n    transfer-in-source-request:\n      type: object\n      required:\n        - accountDetails\n      properties:\n        provider:\n          oneOf:\n            - $ref: '#/components/schemas/isa-provider-id'\n        accountDetails:\n          $ref: '#/components/schemas/transfer-in-source-jisa'\n    transfer-jisa:\n      type: object\n      required:\n        - id\n        - status\n        - source\n        - destination\n        - transferDetails\n        - transferForm\n      properties:\n        id:\n          type: string\n          format: uuid\n        status:\n          $ref: '#/components/schemas/transfer-status'\n        source:\n          oneOf:\n            - $ref: '#/components/schemas/transfer-in-source'        \n        destination:\n          oneOf:\n            - $ref: '#/components/schemas/payment-destination-portfolio'\n        transferDetails:\n          $ref: '#/components/schemas/transfer-details'\n        transferForm:\n          type: object\n          required:\n            - documentKey  \n          properties:\n            documentKey: \n              type: string\n    transfer-request-jisa:\n      type: object\n      required:\n        - destination\n        - accountDetails\n        - transferDetails\n        - source\n      properties:\n        source:\n          oneOf:\n            - $ref: '#/components/schemas/transfer-in-source-request'          \n        destination:\n          oneOf:\n            - $ref: '#/components/schemas/payment-destination-portfolio'\n        transferDetails:\n          $ref: '#/components/schemas/transfer-details'\n    transfer-status:\n      type: string\n      enum:\n        - requested\n        - awaiting-funds\n        - processing-funds\n        - completed\n        - cancelled\n    update-portfolio-risk-level-request:\n      type: object\n      required:\n        - riskLevel\n      properties:\n        riskLevel:\n          type: number \n    user-activities:\n      allOf:\n        - $ref: '#/components/schemas/pagination'\n      required:\n        - items\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/activity'\n    user-creation-request:\n      type: object\n      required:\n        - email\n      properties:\n        email:\n          type: string\n          format: email\n          example: 'new-user@domain.com'\n    user-id:\n      type: object\n      properties:\n        userId:\n          type: string\n          format: uuid\n          description: The Monyefarm identifier of the user that is the subject of the generated token.\n          example: \"975f0cce-a564-45da-81f3-3d9358864879\"\n      required:\n        - userId\n    user-preview:\n      type: object\n      required:\n        - id\n        - firstName\n        - lastName\n        - accounts\n        - status\n      properties:\n        id:\n          type: string\n          format: uuid\n        firstName:\n          type: string\n        lastName:\n          type: string\n        accounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/account-preview'\n        externalId:\n          type: string\n        status:\n          $ref: '#/components/schemas/user-status'\n    user-profile-completion-status:\n      type: object\n      required:\n        - missingSubresources\n      properties:\n        missingSubresources:\n          type: array\n          items:\n            type: string\n            example: \"anti-money-laundering-details\"\n            enum:\n              - anti-money-laundering-details\n              - citizenships\n              - contacts\n              - investor-profile\n              - personal-details\n              - tax-residence\n              - residence-address\n    user-status:\n      type: string\n      example: \"active\"\n      enum:\n        - open-profile\n        - complete-profile\n        - pending-activation\n        - rejected\n        - active\n        - deactivated\n    video-call-sdk-token:\n      type: object\n      properties:\n        accessToken:\n          type: string\n          description: The Bandyer SDK Token needed to allow user to start videocalls\n          example:\n            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoidXNyX2VjODVjODkzOWFiYiIsImNvbXBhbnlJZCI6ImY5ZDc4OWJlLWIyMjEtNGVlYi05ZWMyLTk5OWUzNGZmZTljZSIsImFsbG93Q2FtZXJhIjp0cnVlLCJpYXQiOjE2NDk3NTQ1MDYsImV4cCI6MTY0OTc1ODEwNiwiaXNzIjoiQHN3aXRjaGJvYXJkLWNvcmUiLCJzdWIiOiJ1c3JfZWM4NWM4OTM5YWJiI2Y5ZDc4OWJlLWIyMjEtNGVlYi05ZWMyLTk5OWUzNGZmZTljZSJ9.0r4arFKsAreuHxGdJmHvKLgWZq-JmXggw_d79JHe_qw\n        bandyerId:\n          type: string\n          description: The Bandyer User ID which identifies the user\n          example: usr_ec85c8939abb\n        expiresAt:\n          type: string\n          description: Date after which the sdkToken will not work anymore\n          format: date-time\n",
			"canonicalURL": "/gitlab.com/moneyfarm-public/public-api-documentation@70d314df08d1e4d7b2d4c69d0cdae763483dd90a/-/blob/openapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://gitlab.com/moneyfarm-public/public-api-documentation/blob/70d314df08d1e4d7b2d4c69d0cdae763483dd90a/openapi/openapi.yaml",
					"serviceKind": "GITLAB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/portfolios/{id}/change-model\": post: responses: 200: contents: application/json: generate schema: field recommendation: field suitabilityStatus: allOf: primitive: format \"slug\": enum format not implemented",
	"NotImplemented": [
		"complex anyOf",
		"discriminator inference",
		"enum format"
	]
}