{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/apigee/registry"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 93643,
			"content": "# Generated with protoc-gen-openapi\n# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi\n\nopenapi: 3.0.3\ninfo:\n    title: Registry API\n    description: The Registry service allows teams to manage descriptions of APIs.\n    version: 0.0.1\nservers:\n    - url: https://apigeeregistry.googleapis.com\npaths:\n    /v1/projects/{project}/locations/{location}/apis:\n        get:\n            tags:\n                - Registry\n            description: ListApis returns matching APIs.\n            operationId: Registry_ListApis\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: pageSize\n                  in: query\n                  description: The maximum number of APIs to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.\n                  schema:\n                    type: integer\n                    format: int32\n                - name: pageToken\n                  in: query\n                  description: A page token, received from a previous `ListApis` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListApis` must match the call that provided the page token.\n                  schema:\n                    type: string\n                - name: filter\n                  in: query\n                  description: An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields.\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListApisResponse'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n        post:\n            tags:\n                - Registry\n            description: CreateApi creates a specified API.\n            operationId: Registry_CreateApi\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: apiId\n                  in: query\n                  description: Required. The ID to use for the api, which will become the final component of the api's resource name. This value should be 4-63 characters, and valid characters are /[a-z][0-9]-/. Following AIP-162, IDs must not have the form of a UUID.\n                  schema:\n                    type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Api'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Api'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/projects/{project}/locations/{location}/apis/{api}:\n        get:\n            tags:\n                - Registry\n            description: GetApi returns a specified API.\n            operationId: Registry_GetApi\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Api'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n        delete:\n            tags:\n                - Registry\n            description: |-\n                DeleteApi removes a specified API and all of the resources that it\n                 owns.\n            operationId: Registry_DeleteApi\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: force\n                  in: query\n                  description: If set to true, any child resources will also be deleted. (Otherwise, the request will only work if there are no child resources.)\n                  schema:\n                    type: boolean\n            responses:\n                \"200\":\n                    description: OK\n                    content: {}\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n        patch:\n            tags:\n                - Registry\n            description: UpdateApi can be used to modify a specified API.\n            operationId: Registry_UpdateApi\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: updateMask\n                  in: query\n                  description: The list of fields to be updated. If omitted, all fields are updated that are set in the request message (fields set to default values are ignored). If a \"*\" is specified, all fields are updated, including fields that are unspecified/default in the request.\n                  schema:\n                    type: string\n                    format: field-mask\n                - name: allowMissing\n                  in: query\n                  description: If set to true, and the api is not found, a new api_versions will be created. In this situation, `update_mask` is ignored.\n                  schema:\n                    type: boolean\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Api'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Api'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/projects/{project}/locations/{location}/apis/{api}/deployments:\n        get:\n            tags:\n                - Registry\n            description: ListApiDeployments returns matching deployments.\n            operationId: Registry_ListApiDeployments\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: pageSize\n                  in: query\n                  description: The maximum number of deployments to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.\n                  schema:\n                    type: integer\n                    format: int32\n                - name: pageToken\n                  in: query\n                  description: A page token, received from a previous `ListApiDeployments` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListApiDeployments` must match the call that provided the page token.\n                  schema:\n                    type: string\n                - name: filter\n                  in: query\n                  description: An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields.\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListApiDeploymentsResponse'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n        post:\n            tags:\n                - Registry\n            description: CreateApiDeployment creates a specified deployment.\n            operationId: Registry_CreateApiDeployment\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: apiDeploymentId\n                  in: query\n                  description: Required. The ID to use for the deployment, which will become the final component of the deployment's resource name. This value should be 4-63 characters, and valid characters are /[a-z][0-9]-/. Following AIP-162, IDs must not have the form of a UUID.\n                  schema:\n                    type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/ApiDeployment'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ApiDeployment'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/projects/{project}/locations/{location}/apis/{api}/deployments/{deployment}:\n        get:\n            tags:\n                - Registry\n            description: GetApiDeployment returns a specified deployment.\n            operationId: Registry_GetApiDeployment\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: deployment\n                  in: path\n                  description: The deployment id.\n                  required: true\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ApiDeployment'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n        delete:\n            tags:\n                - Registry\n            description: |-\n                DeleteApiDeployment removes a specified deployment, all revisions, and all\n                 child resources (e.g. artifacts).\n            operationId: Registry_DeleteApiDeployment\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: deployment\n                  in: path\n                  description: The deployment id.\n                  required: true\n                  schema:\n                    type: string\n                - name: force\n                  in: query\n                  description: If set to true, any child resources will also be deleted. (Otherwise, the request will only work if there are no child resources.)\n                  schema:\n                    type: boolean\n            responses:\n                \"200\":\n                    description: OK\n                    content: {}\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n        patch:\n            tags:\n                - Registry\n            description: UpdateApiDeployment can be used to modify a specified deployment.\n            operationId: Registry_UpdateApiDeployment\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: deployment\n                  in: path\n                  description: The deployment id.\n                  required: true\n                  schema:\n                    type: string\n                - name: updateMask\n                  in: query\n                  description: The list of fields to be updated. If omitted, all fields are updated that are set in the request message (fields set to default values are ignored). If a \"*\" is specified, all fields are updated, including fields that are unspecified/default in the request.\n                  schema:\n                    type: string\n                    format: field-mask\n                - name: allowMissing\n                  in: query\n                  description: If set to true, and the deployment is not found, a new deployment will be created. In this situation, `update_mask` is ignored.\n                  schema:\n                    type: boolean\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/ApiDeployment'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ApiDeployment'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/projects/{project}/locations/{location}/apis/{api}/deployments/{deployment}:deleteRevision:\n        delete:\n            tags:\n                - Registry\n            description: DeleteApiDeploymentRevision deletes a revision of a deployment.\n            operationId: Registry_DeleteApiDeploymentRevision\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: deployment\n                  in: path\n                  description: The deployment id.\n                  required: true\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ApiDeployment'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/projects/{project}/locations/{location}/apis/{api}/deployments/{deployment}:listRevisions:\n        get:\n            tags:\n                - Registry\n            description: |-\n                ListApiDeploymentRevisions lists all revisions of a deployment.\n                 Revisions are returned in descending order of revision creation time.\n            operationId: Registry_ListApiDeploymentRevisions\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: deployment\n                  in: path\n                  description: The deployment id.\n                  required: true\n                  schema:\n                    type: string\n                - name: pageSize\n                  in: query\n                  description: The maximum number of revisions to return per page.\n                  schema:\n                    type: integer\n                    format: int32\n                - name: pageToken\n                  in: query\n                  description: The page token, received from a previous ListApiDeploymentRevisions call. Provide this to retrieve the subsequent page.\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListApiDeploymentRevisionsResponse'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/projects/{project}/locations/{location}/apis/{api}/deployments/{deployment}:rollback:\n        post:\n            tags:\n                - Registry\n            description: |-\n                RollbackApiDeployment sets the current revision to a specified prior\n                 revision. Note that this creates a new revision with a new revision ID.\n            operationId: Registry_RollbackApiDeployment\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: deployment\n                  in: path\n                  description: The deployment id.\n                  required: true\n                  schema:\n                    type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/RollbackApiDeploymentRequest'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ApiDeployment'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/projects/{project}/locations/{location}/apis/{api}/deployments/{deployment}:tagRevision:\n        post:\n            tags:\n                - Registry\n            description: |-\n                TagApiDeploymentRevision adds a tag to a specified revision of a\n                 deployment.\n            operationId: Registry_TagApiDeploymentRevision\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: deployment\n                  in: path\n                  description: The deployment id.\n                  required: true\n                  schema:\n                    type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/TagApiDeploymentRevisionRequest'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ApiDeployment'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/projects/{project}/locations/{location}/apis/{api}/versions:\n        get:\n            tags:\n                - Registry\n            description: ListApiVersions returns matching versions.\n            operationId: Registry_ListApiVersions\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: pageSize\n                  in: query\n                  description: The maximum number of versions to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.\n                  schema:\n                    type: integer\n                    format: int32\n                - name: pageToken\n                  in: query\n                  description: A page token, received from a previous `ListApiVersions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListApiVersions` must match the call that provided the page token.\n                  schema:\n                    type: string\n                - name: filter\n                  in: query\n                  description: An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields.\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListApiVersionsResponse'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n        post:\n            tags:\n                - Registry\n            description: CreateApiVersion creates a specified version.\n            operationId: Registry_CreateApiVersion\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: apiVersionId\n                  in: query\n                  description: Required. The ID to use for the version, which will become the final component of the version's resource name. This value should be 4-63 characters, and valid characters are /[a-z][0-9]-/. Following AIP-162, IDs must not have the form of a UUID.\n                  schema:\n                    type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/ApiVersion'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ApiVersion'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/projects/{project}/locations/{location}/apis/{api}/versions/{version}:\n        get:\n            tags:\n                - Registry\n            description: GetApiVersion returns a specified version.\n            operationId: Registry_GetApiVersion\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: version\n                  in: path\n                  description: The version id.\n                  required: true\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ApiVersion'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n        delete:\n            tags:\n                - Registry\n            description: |-\n                DeleteApiVersion removes a specified version and all of the resources that\n                 it owns.\n            operationId: Registry_DeleteApiVersion\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: version\n                  in: path\n                  description: The version id.\n                  required: true\n                  schema:\n                    type: string\n                - name: force\n                  in: query\n                  description: If set to true, any child resources will also be deleted. (Otherwise, the request will only work if there are no child resources.)\n                  schema:\n                    type: boolean\n            responses:\n                \"200\":\n                    description: OK\n                    content: {}\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n        patch:\n            tags:\n                - Registry\n            description: UpdateApiVersion can be used to modify a specified version.\n            operationId: Registry_UpdateApiVersion\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: version\n                  in: path\n                  description: The version id.\n                  required: true\n                  schema:\n                    type: string\n                - name: updateMask\n                  in: query\n                  description: The list of fields to be updated. If omitted, all fields are updated that are set in the request message (fields set to default values are ignored). If a \"*\" is specified, all fields are updated, including fields that are unspecified/default in the request.\n                  schema:\n                    type: string\n                    format: field-mask\n                - name: allowMissing\n                  in: query\n                  description: If set to true, and the version is not found, a new version will be created. In this situation, `update_mask` is ignored.\n                  schema:\n                    type: boolean\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/ApiVersion'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ApiVersion'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs:\n        get:\n            tags:\n                - Registry\n            description: ListApiSpecs returns matching specs.\n            operationId: Registry_ListApiSpecs\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: version\n                  in: path\n                  description: The version id.\n                  required: true\n                  schema:\n                    type: string\n                - name: pageSize\n                  in: query\n                  description: The maximum number of specs to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.\n                  schema:\n                    type: integer\n                    format: int32\n                - name: pageToken\n                  in: query\n                  description: A page token, received from a previous `ListApiSpecs` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListApiSpecs` must match the call that provided the page token.\n                  schema:\n                    type: string\n                - name: filter\n                  in: query\n                  description: An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields except contents.\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListApiSpecsResponse'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n        post:\n            tags:\n                - Registry\n            description: CreateApiSpec creates a specified spec.\n            operationId: Registry_CreateApiSpec\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: version\n                  in: path\n                  description: The version id.\n                  required: true\n                  schema:\n                    type: string\n                - name: apiSpecId\n                  in: query\n                  description: Required. The ID to use for the spec, which will become the final component of the spec's resource name. This value should be 4-63 characters, and valid characters are /[a-z][0-9]-/. Following AIP-162, IDs must not have the form of a UUID.\n                  schema:\n                    type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/ApiSpec'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ApiSpec'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}:\n        get:\n            tags:\n                - Registry\n            description: GetApiSpec returns a specified spec.\n            operationId: Registry_GetApiSpec\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: version\n                  in: path\n                  description: The version id.\n                  required: true\n                  schema:\n                    type: string\n                - name: spec\n                  in: path\n                  description: The spec id.\n                  required: true\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ApiSpec'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n        delete:\n            tags:\n                - Registry\n            description: |-\n                DeleteApiSpec removes a specified spec, all revisions, and all child\n                 resources (e.g. artifacts).\n            operationId: Registry_DeleteApiSpec\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: version\n                  in: path\n                  description: The version id.\n                  required: true\n                  schema:\n                    type: string\n                - name: spec\n                  in: path\n                  description: The spec id.\n                  required: true\n                  schema:\n                    type: string\n                - name: force\n                  in: query\n                  description: If set to true, any child resources will also be deleted. (Otherwise, the request will only work if there are no child resources.)\n                  schema:\n                    type: boolean\n            responses:\n                \"200\":\n                    description: OK\n                    content: {}\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n        patch:\n            tags:\n                - Registry\n            description: UpdateApiSpec can be used to modify a specified spec.\n            operationId: Registry_UpdateApiSpec\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: version\n                  in: path\n                  description: The version id.\n                  required: true\n                  schema:\n                    type: string\n                - name: spec\n                  in: path\n                  description: The spec id.\n                  required: true\n                  schema:\n                    type: string\n                - name: updateMask\n                  in: query\n                  description: The list of fields to be updated. If omitted, all fields are updated that are set in the request message (fields set to default values are ignored). If a \"*\" is specified, all fields are updated, including fields that are unspecified/default in the request.\n                  schema:\n                    type: string\n                    format: field-mask\n                - name: allowMissing\n                  in: query\n                  description: If set to true, and the spec is not found, a new spec will be created. In this situation, `update_mask` is ignored.\n                  schema:\n                    type: boolean\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/ApiSpec'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ApiSpec'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}:deleteRevision:\n        delete:\n            tags:\n                - Registry\n            description: DeleteApiSpecRevision deletes a revision of a spec.\n            operationId: Registry_DeleteApiSpecRevision\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: version\n                  in: path\n                  description: The version id.\n                  required: true\n                  schema:\n                    type: string\n                - name: spec\n                  in: path\n                  description: The spec id.\n                  required: true\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ApiSpec'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}:getContents:\n        get:\n            tags:\n                - Registry\n            description: |-\n                GetApiSpecContents returns the contents of a specified spec.\n                 If specs are stored with GZip compression, the default behavior\n                 is to return the spec uncompressed (the mime_type response field\n                 indicates the exact format returned).\n            operationId: Registry_GetApiSpecContents\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: version\n                  in: path\n                  description: The version id.\n                  required: true\n                  schema:\n                    type: string\n                - name: spec\n                  in: path\n                  description: The spec id.\n                  required: true\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        '*/*': {}\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}:listRevisions:\n        get:\n            tags:\n                - Registry\n            description: |-\n                ListApiSpecRevisions lists all revisions of a spec.\n                 Revisions are returned in descending order of revision creation time.\n            operationId: Registry_ListApiSpecRevisions\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: version\n                  in: path\n                  description: The version id.\n                  required: true\n                  schema:\n                    type: string\n                - name: spec\n                  in: path\n                  description: The spec id.\n                  required: true\n                  schema:\n                    type: string\n                - name: pageSize\n                  in: query\n                  description: The maximum number of revisions to return per page.\n                  schema:\n                    type: integer\n                    format: int32\n                - name: pageToken\n                  in: query\n                  description: The page token, received from a previous ListApiSpecRevisions call. Provide this to retrieve the subsequent page.\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListApiSpecRevisionsResponse'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}:rollback:\n        post:\n            tags:\n                - Registry\n            description: |-\n                RollbackApiSpec sets the current revision to a specified prior revision.\n                 Note that this creates a new revision with a new revision ID.\n            operationId: Registry_RollbackApiSpec\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: version\n                  in: path\n                  description: The version id.\n                  required: true\n                  schema:\n                    type: string\n                - name: spec\n                  in: path\n                  description: The spec id.\n                  required: true\n                  schema:\n                    type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/RollbackApiSpecRequest'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ApiSpec'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}:tagRevision:\n        post:\n            tags:\n                - Registry\n            description: TagApiSpecRevision adds a tag to a specified revision of a spec.\n            operationId: Registry_TagApiSpecRevision\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: api\n                  in: path\n                  description: The api id.\n                  required: true\n                  schema:\n                    type: string\n                - name: version\n                  in: path\n                  description: The version id.\n                  required: true\n                  schema:\n                    type: string\n                - name: spec\n                  in: path\n                  description: The spec id.\n                  required: true\n                  schema:\n                    type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/TagApiSpecRevisionRequest'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ApiSpec'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/projects/{project}/locations/{location}/artifacts:\n        get:\n            tags:\n                - Registry\n            description: ListArtifacts returns matching artifacts.\n            operationId: Registry_ListArtifacts\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: pageSize\n                  in: query\n                  description: The maximum number of artifacts to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.\n                  schema:\n                    type: integer\n                    format: int32\n                - name: pageToken\n                  in: query\n                  description: A page token, received from a previous `ListArtifacts` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListArtifacts` must match the call that provided the page token.\n                  schema:\n                    type: string\n                - name: filter\n                  in: query\n                  description: An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields except contents.\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListArtifactsResponse'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n        post:\n            tags:\n                - Registry\n            description: CreateArtifact creates a specified artifact.\n            operationId: Registry_CreateArtifact\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: artifactId\n                  in: query\n                  description: Required. The ID to use for the artifact, which will become the final component of the artifact's resource name. This value should be 4-63 characters, and valid characters are /[a-z][0-9]-/. Following AIP-162, IDs must not have the form of a UUID.\n                  schema:\n                    type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Artifact'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Artifact'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/projects/{project}/locations/{location}/artifacts/{artifact}:\n        get:\n            tags:\n                - Registry\n            description: GetArtifact returns a specified artifact.\n            operationId: Registry_GetArtifact\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: artifact\n                  in: path\n                  description: The artifact id.\n                  required: true\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Artifact'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n        put:\n            tags:\n                - Registry\n            description: ReplaceArtifact can be used to replace a specified artifact.\n            operationId: Registry_ReplaceArtifact\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: artifact\n                  in: path\n                  description: The artifact id.\n                  required: true\n                  schema:\n                    type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Artifact'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Artifact'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n        delete:\n            tags:\n                - Registry\n            description: DeleteArtifact removes a specified artifact.\n            operationId: Registry_DeleteArtifact\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: artifact\n                  in: path\n                  description: The artifact id.\n                  required: true\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content: {}\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/projects/{project}/locations/{location}/artifacts/{artifact}:getContents:\n        get:\n            tags:\n                - Registry\n            description: |-\n                GetArtifactContents returns the contents of a specified artifact.\n                 If artifacts are stored with GZip compression, the default behavior\n                 is to return the artifact uncompressed (the mime_type response field\n                 indicates the exact format returned).\n            operationId: Registry_GetArtifactContents\n            parameters:\n                - name: project\n                  in: path\n                  description: The project id.\n                  required: true\n                  schema:\n                    type: string\n                - name: location\n                  in: path\n                  description: The location id.\n                  required: true\n                  schema:\n                    type: string\n                - name: artifact\n                  in: path\n                  description: The artifact id.\n                  required: true\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        '*/*': {}\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\ncomponents:\n    schemas:\n        Api:\n            type: object\n            properties:\n                name:\n                    type: string\n                    description: Resource name.\n                displayName:\n                    type: string\n                    description: Human-meaningful name.\n                description:\n                    type: string\n                    description: A detailed description.\n                createTime:\n                    readOnly: true\n                    type: string\n                    description: Output only. Creation timestamp.\n                    format: date-time\n                updateTime:\n                    readOnly: true\n                    type: string\n                    description: Output only. Last update timestamp.\n                    format: date-time\n                availability:\n                    type: string\n                    description: 'A user-definable description of the availability of this service. Format: free-form, but we expect single words that describe availability, e.g. \"NONE\", \"TESTING\", \"PREVIEW\", \"GENERAL\", \"DEPRECATED\", \"SHUTDOWN\".'\n                recommendedVersion:\n                    type: string\n                    description: 'The recommended version of the API. Format: apis/{api}/versions/{version}'\n                recommendedDeployment:\n                    type: string\n                    description: 'The recommended deployment of the API. Format: apis/{api}/deployments/{deployment}'\n                labels:\n                    type: object\n                    additionalProperties:\n                        type: string\n                    description: Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"apigeeregistry.googleapis.com/\" and cannot be changed.\n                annotations:\n                    type: object\n                    additionalProperties:\n                        type: string\n                    description: Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.\n            description: An Api is a top-level description of an API. Apis are produced by producers and are commitments to provide services.\n        ApiDeployment:\n            type: object\n            properties:\n                name:\n                    type: string\n                    description: Resource name.\n                displayName:\n                    type: string\n                    description: Human-meaningful name.\n                description:\n                    type: string\n                    description: A detailed description.\n                revisionId:\n                    readOnly: true\n                    type: string\n                    description: Output only. Immutable. The revision ID of the deployment. A new revision is committed whenever the deployment contents are changed. The format is an 8-character hexadecimal string.\n                createTime:\n                    readOnly: true\n                    type: string\n                    description: Output only. Creation timestamp; when the deployment resource was created.\n                    format: date-time\n                revisionCreateTime:\n                    readOnly: true\n                    type: string\n                    description: Output only. Revision creation timestamp; when the represented revision was created.\n                    format: date-time\n                revisionUpdateTime:\n                    readOnly: true\n                    type: string\n                    description: 'Output only. Last update timestamp: when the represented revision was last modified.'\n                    format: date-time\n                apiSpecRevision:\n                    type: string\n                    description: 'The full resource name (including revision id) of the spec of the API being served by the deployment. Changes to this value will update the revision. Format: apis/{api}/deployments/{deployment}'\n                endpointUri:\n                    type: string\n                    description: The address where the deployment is serving. Changes to this value will update the revision.\n                externalChannelUri:\n                    type: string\n                    description: The address of the external channel of the API (e.g. the Developer Portal). Changes to this value will not affect the revision.\n                intendedAudience:\n                    type: string\n                    description: Text briefly identifying the intended audience of the API. Changes to this value will not affect the revision.\n                accessGuidance:\n                    type: string\n                    description: Text briefly describing how to access the endpoint. Changes to this value will not affect the revision.\n                labels:\n                    type: object\n                    additionalProperties:\n                        type: string\n                    description: Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"registry.googleapis.com/\" and cannot be changed.\n                annotations:\n                    type: object\n                    additionalProperties:\n                        type: string\n                    description: Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.\n            description: An ApiDeployment describes a service running at particular address that provides a particular version of an API. ApiDeployments have revisions which correspond to different configurations of a single deployment in time. Revision identifiers should be updated whenever the served API spec or endpoint address changes.\n        ApiSpec:\n            type: object\n            properties:\n                name:\n                    type: string\n                    description: Resource name.\n                filename:\n                    type: string\n                    description: A possibly-hierarchical name used to refer to the spec from other specs.\n                description:\n                    type: string\n                    description: A detailed description.\n                revisionId:\n                    readOnly: true\n                    type: string\n                    description: Output only. Immutable. The revision ID of the spec. A new revision is committed whenever the spec contents are changed. The format is an 8-character hexadecimal string.\n                createTime:\n                    readOnly: true\n                    type: string\n                    description: Output only. Creation timestamp; when the spec resource was created.\n                    format: date-time\n                revisionCreateTime:\n                    readOnly: true\n                    type: string\n                    description: Output only. Revision creation timestamp; when the represented revision was created.\n                    format: date-time\n                revisionUpdateTime:\n                    readOnly: true\n                    type: string\n                    description: 'Output only. Last update timestamp: when the represented revision was last modified.'\n                    format: date-time\n                mimeType:\n                    type: string\n                    description: A style (format) descriptor for this spec that is specified as a Media Type (https://en.wikipedia.org/wiki/Media_type). Possible values include \"application/vnd.apigee.proto\", \"application/vnd.apigee.openapi\", and \"application/vnd.apigee.graphql\", with possible suffixes representing compression types. These hypothetical names are defined in the vendor tree defined in RFC6838 (https://tools.ietf.org/html/rfc6838) and are not final. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").\n                sizeBytes:\n                    readOnly: true\n                    type: integer\n                    description: Output only. The size of the spec file in bytes. If the spec is gzipped, this is the size of the uncompressed spec.\n                    format: int32\n                hash:\n                    readOnly: true\n                    type: string\n                    description: Output only. A SHA-256 hash of the spec's contents. If the spec is gzipped, this is the hash of the uncompressed spec.\n                sourceUri:\n                    type: string\n                    description: The original source URI of the spec (if one exists). This is an external location that can be used for reference purposes but which may not be authoritative since this external resource may change after the spec is retrieved.\n                contents:\n                    writeOnly: true\n                    type: string\n                    description: Input only. The contents of the spec. Provided by API callers when specs are created or updated. To access the contents of a spec, use GetApiSpecContents.\n                    format: bytes\n                labels:\n                    type: object\n                    additionalProperties:\n                        type: string\n                    description: Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"apigeeregistry.googleapis.com/\" and cannot be changed.\n                annotations:\n                    type: object\n                    additionalProperties:\n                        type: string\n                    description: Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.\n            description: An ApiSpec describes a version of an API in a structured way. ApiSpecs provide formal descriptions that consumers can use to use a version. ApiSpec resources are intended to be fully-resolved descriptions of an ApiVersion. When specs consist of multiple files, these should be bundled together (e.g. in a zip archive) and stored as a unit. Multiple specs can exist to provide representations in different API description formats. Synchronization of these representations would be provided by tooling and background services.\n        ApiVersion:\n            type: object\n            properties:\n                name:\n                    type: string\n                    description: Resource name.\n                displayName:\n                    type: string\n                    description: Human-meaningful name.\n                description:\n                    type: string\n                    description: A detailed description.\n                createTime:\n                    readOnly: true\n                    type: string\n                    description: Output only. Creation timestamp.\n                    format: date-time\n                updateTime:\n                    readOnly: true\n                    type: string\n                    description: Output only. Last update timestamp.\n                    format: date-time\n                state:\n                    type: string\n                    description: 'A user-definable description of the lifecycle phase of this API version. Format: free-form, but we expect single words that describe API maturity, e.g. \"CONCEPT\", \"DESIGN\", \"DEVELOPMENT\", \"STAGING\", \"PRODUCTION\", \"DEPRECATED\", \"RETIRED\".'\n                labels:\n                    type: object\n                    additionalProperties:\n                        type: string\n                    description: Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"apigeeregistry.googleapis.com/\" and cannot be changed.\n                annotations:\n                    type: object\n                    additionalProperties:\n                        type: string\n                    description: Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.\n            description: An ApiVersion describes a particular version of an API. ApiVersions are what consumers actually use.\n        Artifact:\n            type: object\n            properties:\n                name:\n                    type: string\n                    description: Resource name.\n                createTime:\n                    readOnly: true\n                    type: string\n                    description: Output only. Creation timestamp.\n                    format: date-time\n                updateTime:\n                    readOnly: true\n                    type: string\n                    description: Output only. Last update timestamp.\n                    format: date-time\n                mimeType:\n                    type: string\n                    description: A content type specifier for the artifact. Content type specifiers are Media Types (https://en.wikipedia.org/wiki/Media_type) with a possible \"schema\" parameter that specifies a schema for the stored information. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").\n                sizeBytes:\n                    readOnly: true\n                    type: integer\n                    description: Output only. The size of the artifact in bytes. If the artifact is gzipped, this is the size of the uncompressed artifact.\n                    format: int32\n                hash:\n                    readOnly: true\n                    type: string\n                    description: Output only. A SHA-256 hash of the artifact's contents. If the artifact is gzipped, this is the hash of the uncompressed artifact.\n                contents:\n                    writeOnly: true\n                    type: string\n                    description: Input only. The contents of the artifact. Provided by API callers when artifacts are created or replaced. To access the contents of an artifact, use GetArtifactContents.\n                    format: bytes\n            description: Artifacts of resources. Artifacts are unique (single-value) per resource and are used to store metadata that is too large or numerous to be stored directly on the resource. Since artifacts are stored separately from parent resources, they should generally be used for metadata that is needed infrequently, i.e. not for display in primary views of the resource but perhaps displayed or downloaded upon request. The ListArtifacts method allows artifacts to be quickly enumerated and checked for presence without downloading their (potentially-large) contents.\n        GoogleProtobufAny:\n            type: object\n            properties:\n                '@type':\n                    type: string\n                    description: The type of the serialized message.\n            additionalProperties: true\n            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.\n        ListApiDeploymentRevisionsResponse:\n            type: object\n            properties:\n                apiDeployments:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/ApiDeployment'\n                    description: The revisions of the deployment.\n                nextPageToken:\n                    type: string\n                    description: A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.\n            description: Response message for ListApiDeploymentRevisionsResponse.\n        ListApiDeploymentsResponse:\n            type: object\n            properties:\n                apiDeployments:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/ApiDeployment'\n                    description: The deployments from the specified publisher.\n                nextPageToken:\n                    type: string\n                    description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.\n            description: Response message for ListApiDeployments.\n        ListApiSpecRevisionsResponse:\n            type: object\n            properties:\n                apiSpecs:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/ApiSpec'\n                    description: The revisions of the spec.\n                nextPageToken:\n                    type: string\n                    description: A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.\n            description: Response message for ListApiSpecRevisionsResponse.\n        ListApiSpecsResponse:\n            type: object\n            properties:\n                apiSpecs:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/ApiSpec'\n                    description: The specs from the specified publisher.\n                nextPageToken:\n                    type: string\n                    description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.\n            description: Response message for ListApiSpecs.\n        ListApiVersionsResponse:\n            type: object\n            properties:\n                apiVersions:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/ApiVersion'\n                    description: The versions from the specified publisher.\n                nextPageToken:\n                    type: string\n                    description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.\n            description: Response message for ListApiVersions.\n        ListApisResponse:\n            type: object\n            properties:\n                apis:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/Api'\n                    description: The APIs from the specified publisher.\n                nextPageToken:\n                    type: string\n                    description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.\n            description: Response message for ListApis.\n        ListArtifactsResponse:\n            type: object\n            properties:\n                artifacts:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/Artifact'\n                    description: The artifacts from the specified publisher.\n                nextPageToken:\n                    type: string\n                    description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.\n            description: Response message for ListArtifacts.\n        RollbackApiDeploymentRequest:\n            required:\n                - name\n                - revisionId\n            type: object\n            properties:\n                name:\n                    type: string\n                    description: Required. The deployment being rolled back.\n                revisionId:\n                    type: string\n                    description: 'Required. The revision ID to roll back to. It must be a revision of the same deployment.   Example: c7cfa2a8'\n            description: Request message for RollbackApiDeployment.\n        RollbackApiSpecRequest:\n            required:\n                - name\n                - revisionId\n            type: object\n            properties:\n                name:\n                    type: string\n                    description: Required. The spec being rolled back.\n                revisionId:\n                    type: string\n                    description: 'Required. The revision ID to roll back to. It must be a revision of the same spec.   Example: c7cfa2a8'\n            description: Request message for RollbackApiSpec.\n        Status:\n            type: object\n            properties:\n                code:\n                    type: integer\n                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].\n                    format: int32\n                message:\n                    type: string\n                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.\n                details:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/GoogleProtobufAny'\n                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.\n            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'\n        TagApiDeploymentRevisionRequest:\n            required:\n                - name\n                - tag\n            type: object\n            properties:\n                name:\n                    type: string\n                    description: Required. The name of the deployment to be tagged, including the revision ID.\n                tag:\n                    type: string\n                    description: Required. The tag to apply. The tag should be at most 40 characters, and match `[a-z][a-z0-9-]{3,39}`.\n            description: Request message for TagApiDeploymentRevision.\n        TagApiSpecRevisionRequest:\n            required:\n                - name\n                - tag\n            type: object\n            properties:\n                name:\n                    type: string\n                    description: Required. The name of the spec to be tagged, including the revision ID.\n                tag:\n                    type: string\n                    description: Required. The tag to apply. The tag should be at most 40 characters, and match `[a-z][a-z0-9-]{3,39}`.\n            description: Request message for TagApiSpecRevision.\ntags:\n    - name: Registry\n",
			"canonicalURL": "/github.com/apigee/registry@dddab476d64c29a30ab7a45b2919b9d5b38a3061/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/apigee/registry/blob/dddab476d64c29a30ab7a45b2919b9d5b38a3061/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/projects/{project}/locations/{location}/artifacts/{artifact}:getContents\": get: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}