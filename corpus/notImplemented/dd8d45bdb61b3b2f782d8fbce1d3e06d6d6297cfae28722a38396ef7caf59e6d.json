{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackrox/acs-fleet-manager"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "internal/dinosaur/pkg/api/public/api/openapi.yaml",
			"byteSize": 47665,
			"content": "openapi: 3.0.0\ninfo:\n  description: Red Hat Advanced Cluster Security (RHACS) Service Fleet Manager is\n    a Rest API to manage instances of ACS components.\n  title: Red Hat Advanced Cluster Security Service Fleet Manager\n  version: 1.2.0\nservers:\n- description: Main (production) server\n  url: https://api.openshift.com\n- description: Staging server\n  url: https://api.stage.openshift.com\n- description: localhost\n  url: http://localhost:8000\n- description: current domain\n  url: /\npaths:\n  /api/rhacs/v1:\n    get:\n      operationId: getVersionMetadata\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VersionMetadata'\n          description: Version metadata\n      summary: Returns the version metadata\n  /api/rhacs/v1/errors/{id}:\n    get:\n      operationId: getErrorById\n      parameters:\n      - description: The ID of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Get error by Id\n      summary: Returns the error by id\n      tags:\n      - errors\n  /api/rhacs/v1/errors:\n    get:\n      operationId: getErrors\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorList'\n          description: List of possible errors\n      summary: Returns the list of possible API errors\n      tags:\n      - errors\n  /api/rhacs/v1/status:\n    get:\n      operationId: getServiceStatus\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceStatus'\n          description: Ok\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns the status of resources, such as whether maximum service capacity\n        has been reached\n  /api/rhacs/v1/centrals/{id}:\n    delete:\n      description: |\n        The only users authorized for this operation are:\n        1) The administrator of the owner organisation of the specified Central.\n        2) The owner user, and only if it is also part of the owner organisation of the specified Central.\n      operationId: deleteCentralById\n      parameters:\n      - description: The ID of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Perform the action in an asynchronous manner\n        explode: true\n        in: query\n        name: async\n        required: true\n        schema:\n          type: boolean\n        style: form\n      responses:\n        \"202\":\n          description: Deleted\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"400DeletionExample\":\n                  $ref: '#/components/examples/400DeletionExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              examples:\n                \"403Example\":\n                  $ref: '#/components/examples/403Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User not authorized to access the service\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"404DeleteExample\":\n                  $ref: '#/components/examples/404DeleteExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No Central request with specified ID exists\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500DeleteExample\":\n                  $ref: '#/components/examples/500DeleteExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Deletes a Central request by ID\n    get:\n      description: This operation is only authorized to users in the same organisation\n        as the owner organisation of the specified Central.\n      operationId: getCentralById\n      parameters:\n      - description: The ID of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                CentralRequestGetResponseExample:\n                  $ref: '#/components/examples/CentralRequestExample'\n                CentralRequestGetResponseWithFailedCreationStatusExample:\n                  $ref: '#/components/examples/CentralRequestFailedCreationStatusExample'\n              schema:\n                $ref: '#/components/schemas/CentralRequest'\n          description: Central request found by ID\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              examples:\n                \"403Example\":\n                  $ref: '#/components/examples/403Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User not authorized to access the service\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"404Example\":\n                  $ref: '#/components/examples/404Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No Central request with specified ID exists\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a Central request by ID\n    patch:\n      description: |\n        The only users authorized for this operation are:\n        1) The administrator of the owner organisation of the specified Central.\n        2) The owner user, and only if it is also part of the owner organisation of the specified Central.\n      operationId: updateCentralById\n      parameters:\n      - description: The ID of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CentralUpdateRequest'\n        description: Update owner of Cental\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                CentralRequestPostResponseExample:\n                  $ref: '#/components/examples/CentralRequestExample'\n              schema:\n                $ref: '#/components/schemas/CentralRequest'\n          description: Cental updated by ID\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorised to access the service\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No Central found with the specified ID\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Update a Central instance by id\n  /api/rhacs/v1/centrals:\n    get:\n      description: Only returns those centrals that are owned by the organisation\n        of the user authenticated for the request.\n      operationId: getCentrals\n      parameters:\n      - description: Page index\n        examples:\n          page:\n            value: \"1\"\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Number of items in each page\n        examples:\n          size:\n            value: \"100\"\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          Specifies the order by criteria. The syntax of this parameter is\n          similar to the syntax of the `order by` clause of an SQL statement.\n          Each query can be ordered by any of the following `centralRequests` fields:\n\n          * host\n          * cloud_provider\n          * cluster_id\n          * created_at\n          * href\n          * id\n          * instance_type\n          * multi_az\n          * name\n          * organisation_id\n          * owner\n          * region\n          * status\n          * updated_at\n          * version\n\n          For example, to return all Central instances ordered by their name, use the following syntax:\n\n          ```sql\n          name asc\n          ```\n\n          To return all Central instances ordered by their name _and_ created date, use the following syntax:\n\n          ```sql\n          name asc, created_at asc\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          the results are ordered by name.\n        examples:\n          orderBy:\n            value: name asc\n        explode: true\n        in: query\n        name: orderBy\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Search criteria.\n\n          The syntax of this parameter is similar to the syntax of the `where` clause of an\n          SQL statement. Allowed fields in the search are `cloud_provider`, `name`, `owner`, `region`, and `status`. Allowed comparators are `\u003c\u003e`, `=`, or `LIKE`.\n          Allowed joins are `AND` and `OR`. However, you can use a maximum of 10 joins in a search query.\n\n          Examples:\n\n          To return a Central instance with the name `my-central` and the region `aws`, use the following syntax:\n\n          ```\n          name = my-central and cloud_provider = aws\n          ```[p-]\n\n          To return a Central instance with a name that starts with `my`, use the following syntax:\n\n          ```\n          name like my%25\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then all the Central instances\n          that the user has permission to see are returned.\n\n          Note. If the query is invalid, an error is returned.\n        examples:\n          search:\n            value: name = my-central and cloud_provider = aws\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                CentralRequestListExample:\n                  $ref: '#/components/examples/CentralRequestListExample'\n              schema:\n                $ref: '#/components/schemas/CentralRequestList'\n          description: A list of Central requests\n        \"400\":\n          content:\n            application/json:\n              examples:\n                InvalidQueryExample:\n                  $ref: '#/components/examples/400InvalidQueryExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad request\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              examples:\n                \"403Example\":\n                  $ref: '#/components/examples/403Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User not authorized to access the service\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a list of Central requests\n    post:\n      description: Each central has a single owner organisation and a single owner\n        user. Creates a new Central that is owned by the user and organisation authenticated\n        for the request.\n      operationId: createCentral\n      parameters:\n      - description: Perform the action in an asynchronous manner\n        explode: true\n        in: query\n        name: async\n        required: true\n        schema:\n          type: boolean\n        style: form\n      requestBody:\n        content:\n          application/json:\n            examples:\n              USRegion:\n                $ref: '#/components/examples/USRegionExample'\n              EURegion:\n                $ref: '#/components/examples/EURegionExample'\n            schema:\n              $ref: '#/components/schemas/CentralRequestPayload'\n        description: Central data\n        required: true\n      responses:\n        \"202\":\n          content:\n            application/json:\n              examples:\n                CentralRequestPostResponseExample:\n                  $ref: '#/components/examples/CentralRequestExample'\n              schema:\n                $ref: '#/components/schemas/CentralRequest'\n          description: Accepted\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"400CreationExample\":\n                  $ref: '#/components/examples/400CreationExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              examples:\n                \"403Example\":\n                  $ref: '#/components/examples/403Example'\n                \"403MaxAllowedInstanceReachedExample\":\n                  $ref: '#/components/examples/403MaxAllowedInstanceReachedExample'\n                \"403TermsNotAcceptedExample\":\n                  $ref: '#/components/examples/403TermsNotAcceptedExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User forbidden either because the user is not authorized to\n            access the service or because the maximum number of instances that can\n            be created by this user has been reached.\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"404Example\":\n                  $ref: '#/components/examples/404Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The requested resource doesn't exist\n        \"409\":\n          content:\n            application/json:\n              examples:\n                \"409NameConflictExample\":\n                  $ref: '#/components/examples/409NameConflictExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: A conflict has been detected in the creation of this resource\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred while creating the Central request\n      security:\n      - Bearer: []\n      summary: Creates a Central request\n  /api/rhacs/v1/cloud_providers:\n    get:\n      operationId: getCloudProviders\n      parameters:\n      - description: Page index\n        examples:\n          page:\n            value: \"1\"\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Number of items in each page\n        examples:\n          size:\n            value: \"100\"\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudProviderList'\n          description: Returned list of supported cloud providers\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns the list of supported cloud providers\n  /api/rhacs/v1/cloud_providers/{id}/regions:\n    get:\n      operationId: getCloudProviderRegions\n      parameters:\n      - description: The ID of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Page index\n        examples:\n          page:\n            value: \"1\"\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Number of items in each page\n        examples:\n          size:\n            value: \"100\"\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The Central instance type to filter the results by\n        examples:\n          eval_instance_type:\n            value: eval\n          standard_instance_type:\n            value: standard\n        explode: true\n        in: query\n        name: instance_type\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudRegionList'\n          description: Returned list of supported cloud provider regions\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns the list of supported regions of the supported cloud provider\n  /api/rhacs/v1/centrals/{id}/metrics/query_range:\n    get:\n      operationId: getMetricsByRangeQuery\n      parameters:\n      - description: The ID of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The length of time in minutes for which to return the metrics\n        examples:\n          duration:\n            value: 5\n        explode: true\n        in: query\n        name: duration\n        required: true\n        schema:\n          default: 5\n          format: int64\n          maximum: 4320\n          minimum: 1\n          type: integer\n        style: form\n      - description: The interval in seconds between data points\n        examples:\n          interval:\n            value: 30\n        explode: true\n        in: query\n        name: interval\n        required: true\n        schema:\n          default: 30\n          format: int64\n          maximum: 10800\n          minimum: 1\n          type: integer\n        style: form\n      - description: List of metrics to fetch. Fetch all metrics when empty. List\n          entries are Central internal metric names.\n        explode: true\n        in: query\n        name: filters\n        required: false\n        schema:\n          default: []\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricsRangeQueryList'\n          description: Returned JSON array of Prometheus metrics objects from observatorium\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns metrics with timeseries range query by Central ID\n  /api/rhacs/v1/centrals/{id}/metrics/query:\n    get:\n      operationId: getMetricsByInstantQuery\n      parameters:\n      - description: The ID of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: List of metrics to fetch. Fetch all metrics when empty. List\n          entries are Central internal metric names.\n        explode: true\n        in: query\n        name: filters\n        required: false\n        schema:\n          default: []\n          items:\n            type: string\n          type: array\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricsInstantQueryList'\n          description: Returned JSON array of Prometheus metrics objects from observatorium\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns metrics with instant query by Central ID\n  /api/rhacs/v1/centrals/{id}/metrics/federate:\n    get:\n      operationId: federateMetrics\n      parameters:\n      - description: The ID of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              schema:\n                type: string\n          description: Returned Central metrics in a Prometheus text format\n        \"400\":\n          content:\n            application/json:\n              examples:\n                MissingParameterExample:\n                  $ref: '#/components/examples/400MissingParameterExample'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad request\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"401Example\":\n                  $ref: '#/components/examples/401Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"404Example\":\n                  $ref: '#/components/examples/404Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Central ID not found\n        \"500\":\n          content:\n            application/json:\n              examples:\n                \"500Example\":\n                  $ref: '#/components/examples/500Example'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns all metrics in scrapeable format for a given Central ID\ncomponents:\n  examples:\n    USRegionExample:\n      value:\n        region: us-east-1\n        cloud_provider: aws\n        name: serviceapitest\n    EURegionExample:\n      value:\n        region: eu-west-1\n        cloud_provider: aws\n        name: serviceapitest\n    CentralRequestExample:\n      value:\n        id: 1iSY6RQ3JKI8Q0OTmjQFd3ocFRg\n        kind: central\n        href: /api/rhacs/v1/centrals/1iSY6RQ3JKI8Q0OTmjQFd3ocFRg\n        status: ready\n        cloud_provider: aws\n        multi_az: true\n        region: us-east-1\n        owner: api_central_service\n        name: serviceapi\n        host: serviceapi-1isy6rq3jki8q0otmjqfd3ocfrg.example.rhacs.com\n        created_at: 2020-10-05T12:51:24.053142Z\n        updated_at: 2020-10-05T12:56:36.362208Z\n        version: 2.6.0\n        instance_type: standard\n    CentralRequestFailedCreationStatusExample:\n      value:\n        id: 1iSY6RQ3JKI8Q0OTmjQFd3ocFRg\n        kind: central\n        href: /api/rhacs/v1/centrals/1iSY6RQ3JKI8Q0OTmjQFd3ocFRg\n        status: failed\n        cloud_provider: aws\n        multi_az: true\n        region: us-east-1\n        owner: api_central_service\n        name: serviceapi\n        host: serviceapi-1isy6rq3jki8q0otmjqfd3ocfrg.example.rhacs.com\n        created_at: 2020-10-05T12:51:24.053142Z\n        updated_at: 2020-10-05T12:56:36.362208Z\n        failed_reason: a reason the Central request creation failed\n        instance_type: standard\n    CentralRequestListExample:\n      value:\n        kind: CentralRequestList\n        size: \"1\"\n        page: \"1\"\n        total: \"1\"\n        items:\n        - id: 1iSY6RQ3JKI8Q0OTmjQFd3ocFRg\n          kind: central\n          href: /api/rhacs/v1/centrals/1iSY6RQ3JKI8Q0OTmjQFd3ocFRg\n          status: ready\n          cloud_provider: aws\n          multi_az: true\n          region: us-east-1\n          owner: alice\n          name: serviceapi\n          host: serviceapi-1isy6rq3jki8q0otmjqfd3ocfrg.example.rhacs.com\n          created_at: 2020-10-05T12:51:24.053142Z\n          updated_at: 2020-10-05T12:56:36.362208Z\n          version: 2.6.0\n          instance_type: standard\n    CloudProviderExample:\n      value:\n        kind: CloudProvider\n        id: aws\n        name: aws\n        display_name: Amazon Web Services\n        enabled: true\n    CloudRegionExample:\n      value:\n        kind: CloudRegion\n        id: us-east-1\n        display_name: US East, N. Virginia\n        enabled: true\n        supported_instance_types:\n        - standard\n        - eval\n    MetricsRangeQueryExample:\n      value:\n        metric:\n          __name__: central_server_brokertopicmetrics_bytes_in_total\n          central_operator_io_cluster: central-service\n          topic: __consumer_offsets\n        values:\n        - timestamp: 1611670230000\n          value: 84154\n        - timestamp: 1611670260000\n          value: 85888\n        - timestamp: 1611670290000\n          value: 87622\n    MetricsInstantQueryExample:\n      value:\n        metric:\n          __name__: central_server_brokertopicmetrics_bytes_in_total\n          central_operator_io_cluster: central-service\n          topic: __consumer_offsets\n        timestamp: 1611670230000\n        value: 84154\n    \"400DeletionExample\":\n      value:\n        id: \"103\"\n        kind: Error\n        href: /api/rhacs/v1/errors/103\n        code: RHACS-MGMT-103\n        reason: Synchronous action is not supported, use async=true parameter\n        operation_id: 1iWIimqGcrDuL61aUxIZqBTqNRa\n    \"400CreationExample\":\n      value:\n        id: \"103\"\n        kind: Error\n        href: /api/rhacs/v1/errors/103\n        code: RHACS-MGMT-103\n        reason: Synchronous action is not supported, use async=true parameter\n        operation_id: 1iWIimqGcrDuL61aUxIZqBTqNRa\n    \"400InvalidQueryExample\":\n      value:\n        id: \"23\"\n        kind: Error\n        href: /api/rhacs/v1/errors/23\n        code: RHACS-MGMT-23\n        reason: 'Failed to parse search query: Unable to list Central requests for\n          api_central_service: RHACS-MGMT-23: Failed to parse search query: Unsupported\n          column name for search: ''id''. Supported column names are: region, name,\n          cloud_provider, name, status. Query invalid: id = 123'\n        operation_id: 1lWDGuybIrEnxrAem724gqkkiDv\n    \"400MissingParameterExample\":\n      value:\n        id: \"21\"\n        kind: Error\n        href: /api/rhacs/v1/errors/21\n        code: RHACS-MGMT-21\n        reason: 'missing path parameter: central id'\n        operation_id: 1lWDGuybIrEnxrAem724gqkkiDv\n    \"404Example\":\n      value:\n        id: \"7\"\n        kind: Error\n        href: /api/rhacs/v1/errors/7\n        code: RHACS-MGMT-7\n        reason: The requested resource doesn't exist\n    \"404DeleteExample\":\n      value:\n        id: \"7\"\n        kind: Error\n        href: /api/rhacs/v1/errors/7\n        code: RHACS-MGMT-7\n        reason: CentralResource with id='1iK3duVYIvv5YvLlyz1mGR3JyqN' not found\n        operation_id: 1iYO7g2g6HTdUKUa2ksH82kQD3y\n    \"401Example\":\n      value:\n        id: \"11\"\n        kind: Error\n        href: /api/rhacs/v1/errors/11\n        code: RHACS-MGMT-11\n        reason: 'Unable to verify JWT token: Required authorization token not found'\n        operation_id: 1iY3UhEhwmXBpWPfI2lNekpd4ZD\n    \"403Example\":\n      value:\n        id: \"4\"\n        kind: Error\n        href: /api/rhacs/v1/errors/4\n        code: RHACS-MGMT-4\n        reason: User 'foo-bar' is not authorized to access the service.\n        operation_id: 1lY3UiEhznXBpWPfI2lNejpd4YC\n    \"403MaxAllowedInstanceReachedExample\":\n      value:\n        id: \"5\"\n        kind: Error\n        href: /api/rhacs/v1/errors/5\n        code: RHACS-MGMT-5\n        reason: User 'foo-bar' has reached a maximum number of 6 allowed instances.\n        operation_id: 1lY3UiEkxnXBpVPeI2oNejd3XB\n    \"403TermsNotAcceptedExample\":\n      value:\n        id: \"12\"\n        kind: Error\n        href: /api/rhacs/v1/errors/12\n        code: RHACS-MGMT-12\n        reason: Required terms have not been accepted\n        operation_id: kXCzWPeI2oXBpVPeI2LvF9jMQY\n    \"409NameConflictExample\":\n      value:\n        id: \"36\"\n        kind: Error\n        href: /api/rhacs/v1/errors/36\n        code: RHACS-MGMT-36\n        reason: Cental name is already used\n        operation_id: 6kY0UiEkzkXCzWPeI2oYehd3ED\n    \"500Example\":\n      value:\n        id: \"9\"\n        kind: Error\n        href: /api/rhacs/v1/errors/9\n        code: RHACS-MGMT-9\n        reason: Unspecified error\n        operation_id: 1ieELvF9jMQY6YghfM9gGRsHvEW\n    \"500DeleteExample\":\n      value:\n        id: \"9\"\n        kind: Error\n        href: /api/rhacs/v1/errors/9\n        code: RHACS-MGMT-9\n        reason: 'error deleting syncset: OCM-EX-9: failed to delete syncset: ext-serviceapi-1ix03lndlmq0qfc7sita5sljv8e\n          for cluster id: 1g5d88q0lrcdv4g7alb7slfgnj3dhbsj%!(EXTRA *errors.Error=identifier\n          is ''404'', code is ''CLUSTERS-MGMT-404'' and operation identifier is ''1g5or50viu07oealuehrkc26dgftj1ac'':\n          Cluster ''1g5d88q0lrcdv4g7alb7slfgnj3dhbsj'' not found)'\n        operation_id: 1iYTsWry6nsqb2sNmFj5bXpD7Ca\n  parameters:\n    id:\n      description: The ID of record\n      explode: false\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n      style: simple\n    duration:\n      description: The length of time in minutes for which to return the metrics\n      examples:\n        duration:\n          value: 5\n      explode: true\n      in: query\n      name: duration\n      required: true\n      schema:\n        default: 5\n        format: int64\n        maximum: 4320\n        minimum: 1\n        type: integer\n      style: form\n    interval:\n      description: The interval in seconds between data points\n      examples:\n        interval:\n          value: 30\n      explode: true\n      in: query\n      name: interval\n      required: true\n      schema:\n        default: 30\n        format: int64\n        maximum: 10800\n        minimum: 1\n        type: integer\n      style: form\n    filters:\n      description: List of metrics to fetch. Fetch all metrics when empty. List entries\n        are Central internal metric names.\n      explode: true\n      in: query\n      name: filters\n      required: false\n      schema:\n        default: []\n        items:\n          type: string\n        type: array\n      style: form\n    page:\n      description: Page index\n      examples:\n        page:\n          value: \"1\"\n      explode: true\n      in: query\n      name: page\n      required: false\n      schema:\n        type: string\n      style: form\n    size:\n      description: Number of items in each page\n      examples:\n        size:\n          value: \"100\"\n      explode: true\n      in: query\n      name: size\n      required: false\n      schema:\n        type: string\n      style: form\n    orderBy:\n      description: |-\n        Specifies the order by criteria. The syntax of this parameter is\n        similar to the syntax of the `order by` clause of an SQL statement.\n        Each query can be ordered by any of the following `centralRequests` fields:\n\n        * host\n        * cloud_provider\n        * cluster_id\n        * created_at\n        * href\n        * id\n        * instance_type\n        * multi_az\n        * name\n        * organisation_id\n        * owner\n        * region\n        * status\n        * updated_at\n        * version\n\n        For example, to return all Central instances ordered by their name, use the following syntax:\n\n        ```sql\n        name asc\n        ```\n\n        To return all Central instances ordered by their name _and_ created date, use the following syntax:\n\n        ```sql\n        name asc, created_at asc\n        ```\n\n        If the parameter isn't provided, or if the value is empty, then\n        the results are ordered by name.\n      examples:\n        orderBy:\n          value: name asc\n      explode: true\n      in: query\n      name: orderBy\n      required: false\n      schema:\n        type: string\n      style: form\n    search:\n      description: |\n        Search criteria.\n\n        The syntax of this parameter is similar to the syntax of the `where` clause of an\n        SQL statement. Allowed fields in the search are `cloud_provider`, `name`, `owner`, `region`, and `status`. Allowed comparators are `\u003c\u003e`, `=`, or `LIKE`.\n        Allowed joins are `AND` and `OR`. However, you can use a maximum of 10 joins in a search query.\n\n        Examples:\n\n        To return a Central instance with the name `my-central` and the region `aws`, use the following syntax:\n\n        ```\n        name = my-central and cloud_provider = aws\n        ```[p-]\n\n        To return a Central instance with a name that starts with `my`, use the following syntax:\n\n        ```\n        name like my%25\n        ```\n\n        If the parameter isn't provided, or if the value is empty, then all the Central instances\n        that the user has permission to see are returned.\n\n        Note. If the query is invalid, an error is returned.\n      examples:\n        search:\n          value: name = my-central and cloud_provider = aws\n      explode: true\n      in: query\n      name: search\n      required: false\n      schema:\n        type: string\n      style: form\n    instance_type:\n      description: The Central instance type to filter the results by\n      examples:\n        eval_instance_type:\n          value: eval\n        standard_instance_type:\n          value: standard\n      explode: true\n      in: query\n      name: instance_type\n      required: false\n      schema:\n        type: string\n      style: form\n  schemas:\n    ObjectReference:\n      properties:\n        id:\n          type: string\n        kind:\n          type: string\n        href:\n          type: string\n      type: object\n    List:\n      properties:\n        kind:\n          type: string\n        page:\n          type: integer\n        size:\n          type: integer\n        total:\n          type: integer\n      required:\n      - items\n      - kind\n      - page\n      - size\n      - total\n      type: object\n    Error:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/Error_allOf'\n    ErrorList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/ErrorList_allOf'\n    CentralRequest:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/CentralRequest_allOf'\n    CentralRequestList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/CentralRequestList_allOf'\n    VersionMetadata:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/VersionMetadata_allOf'\n    ServiceStatus:\n      description: Schema for the service status response body\n      example:\n        centrals:\n          max_capacity_reached: true\n      properties:\n        centrals:\n          $ref: '#/components/schemas/ServiceStatus_centrals'\n      type: object\n    CentralRequestPayload:\n      description: Schema for the request body sent to /centrals POST\n      example:\n        multi_az: true\n        name: name\n        cloud_provider: cloud_provider\n        region: region\n      properties:\n        cloud_provider:\n          description: The cloud provider where the Central component will be created\n            in\n          type: string\n        multi_az:\n          description: Set this to true to configure the Central component to be multiAZ\n          type: boolean\n        name:\n          description: The name of the Central component. It must consist of lower-case\n            alphanumeric characters or '-', start with an alphabetic character, and\n            end with an alphanumeric character, and can not be longer than 32 characters.\n          type: string\n        region:\n          description: The region where the Central component cluster will be created\n            in\n          type: string\n      required:\n      - name\n      type: object\n    CloudProviderList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/CloudProviderList_allOf'\n    CloudRegionList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/CloudRegionList_allOf'\n    CloudProvider:\n      description: Cloud provider.\n      properties:\n        kind:\n          description: Indicates the type of this object. Will be 'CloudProvider'\n            link.\n          type: string\n        id:\n          description: Unique identifier of the object.\n          type: string\n        display_name:\n          description: Name of the cloud provider for display purposes.\n          type: string\n        name:\n          description: Human friendly identifier of the cloud provider, for example\n            `aws`.\n          type: string\n        enabled:\n          description: Whether the cloud provider is enabled for deploying an OSD\n            cluster.\n          type: boolean\n      required:\n      - enabled\n    CloudRegion:\n      description: Description of a region of a cloud provider.\n      properties:\n        kind:\n          description: Indicates the type of this object. Will be 'CloudRegion'.\n          type: string\n        id:\n          description: Unique identifier of the object.\n          type: string\n        display_name:\n          description: Name of the region for display purposes, for example `N. Virginia`.\n          type: string\n        enabled:\n          default: false\n          description: Whether the region is enabled for deploying an OSD cluster.\n          type: boolean\n        supported_instance_types:\n          description: The Central component instance types supported by this region.\n          items:\n            type: string\n          type: array\n      required:\n      - enabled\n      - supported_instance_types\n    MetricsRangeQueryList:\n      allOf:\n      - $ref: '#/components/schemas/MetricsRangeQueryList_allOf'\n    RangeQuery:\n      properties:\n        metric:\n          additionalProperties:\n            type: string\n          type: object\n        values:\n          items:\n            $ref: '#/components/schemas/values'\n          type: array\n      type: object\n    values:\n      properties:\n        timestamp:\n          format: int64\n          type: integer\n        value:\n          format: double\n          type: number\n      required:\n      - value\n      type: object\n    MetricsInstantQueryList:\n      allOf:\n      - $ref: '#/components/schemas/MetricsInstantQueryList_allOf'\n    MetricsFederationResult:\n      type: string\n    InstantQuery:\n      properties:\n        metric:\n          additionalProperties:\n            type: string\n          type: object\n        timestamp:\n          format: int64\n          type: integer\n        value:\n          format: double\n          type: number\n      required:\n      - value\n      type: object\n    CentralUpdateRequest:\n      example:\n        owner: owner\n      properties:\n        owner:\n          nullable: true\n          type: string\n      type: object\n    Error_allOf:\n      properties:\n        code:\n          type: string\n        reason:\n          type: string\n        operation_id:\n          type: string\n    ErrorList_allOf:\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/Error'\n          type: array\n    CentralRequest_allOf:\n      example: '{\"$ref\":\"#/components/examples/CentralRequestExample\"}'\n      properties:\n        status:\n          description: 'Values: [accepted, preparing, provisioning, ready, failed,\n            deprovision, deleting] '\n          type: string\n        cloud_provider:\n          description: Name of Cloud used to deploy. For example AWS\n          type: string\n        multi_az:\n          type: boolean\n        region:\n          description: 'Values will be regions of specific cloud provider. For example:\n            us-east-1 for AWS'\n          type: string\n        owner:\n          type: string\n        name:\n          type: string\n        host:\n          type: string\n        created_at:\n          format: date-time\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n        failed_reason:\n          type: string\n        version:\n          type: string\n        instance_type:\n          type: string\n      required:\n      - multi_az\n    CentralRequestList_allOf:\n      example: '{\"kind\":\"CentralRequestList\",\"page\":\"1\",\"size\":\"1\",\"total\":\"1\",\"item\":{\"$ref\":\"#/components/examples/CentralRequestExample\"}}'\n      properties:\n        items:\n          items:\n            allOf:\n            - $ref: '#/components/schemas/CentralRequest'\n          type: array\n    VersionMetadata_allOf:\n      example: '{\"kind\":\"APIVersion\",\"id\":\"v1\",\"href\":\"/api/rhacs/v1\",\"collections\":[{\"id\":\"centrals\",\"href\":\"/api/rhacs/v1/centrals\",\"kind\":\"CentralList\"}]}'\n      properties:\n        collections:\n          items:\n            allOf:\n            - $ref: '#/components/schemas/ObjectReference'\n          type: array\n    ServiceStatus_centrals:\n      description: The RHACS resource api status\n      properties:\n        max_capacity_reached:\n          description: Indicates whether maximum service capacity has been reached\n          type: boolean\n      required:\n      - max_capacity_reached\n    CloudProviderList_allOf:\n      example: '{\"kind\":\"CloudProviderList\",\"page\":\"1\",\"size\":\"1\",\"total\":\"1\",\"item\":{\"$ref\":\"#/components/examples/CloudProviderExample\"}}'\n      properties:\n        items:\n          items:\n            allOf:\n            - $ref: '#/components/schemas/CloudProvider'\n          type: array\n    CloudRegionList_allOf:\n      example: '{\"kind\":\"CloudRegionList\",\"page\":\"1\",\"size\":\"1\",\"total\":\"1\",\"item\":{\"$ref\":\"#/components/examples/CloudRegionExample\"}}'\n      properties:\n        items:\n          items:\n            allOf:\n            - $ref: '#/components/schemas/CloudRegion'\n          type: array\n    MetricsRangeQueryList_allOf:\n      example: '{\"kind\":\"MetricsRangeQueryList\",\"id\":\"1nbpS70HduPe4l0to8jSg2CLzfu\",\"items\":{\"$ref\":\"#/components/examples/MetricsRangeQueryExample\"}}'\n      properties:\n        kind:\n          type: string\n        id:\n          type: string\n        items:\n          items:\n            allOf:\n            - $ref: '#/components/schemas/RangeQuery'\n          type: array\n    MetricsInstantQueryList_allOf:\n      example: '{\"kind\":\"MetricsInstantQueryList\",\"id\":\"1nbpS70HduPe4l0to8jSg2CLzfu\",\"items\":{\"$ref\":\"#/components/examples/MetricsInstantQueryExample\"}}'\n      properties:\n        kind:\n          type: string\n        id:\n          type: string\n        items:\n          items:\n            allOf:\n            - $ref: '#/components/schemas/InstantQuery'\n          type: array\n  securitySchemes:\n    Bearer:\n      bearerFormat: JWT\n      scheme: bearer\n      type: http\n",
			"canonicalURL": "/github.com/stackrox/acs-fleet-manager@af15bd701241c3c16e73122e0802af79acebb71f/-/blob/internal/dinosaur/pkg/api/public/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackrox/acs-fleet-manager/blob/af15bd701241c3c16e73122e0802af79acebb71f/internal/dinosaur/pkg/api/public/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/rhacs/v1/centrals/{id}/metrics/federate\": get: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}