{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Adyen/adyen-openapi"
		},
		"file": {
			"name": "ManagementService-v1.yaml",
			"size": 0,
			"path": "yaml/ManagementService-v1.yaml",
			"byteSize": 575998,
			"content": "openapi: 3.1.0\nservers:\n- url: https://management-test.adyen.com/v1\ninfo:\n  version: '1'\n  x-publicVersion: true\n  title: Management API\n  description: 'Configure and manage your Adyen company and merchant accounts, stores,\n    and payment terminals.\n\n    ## Authentication\n\n    Each request to the Management API must be signed with an API key. [Generate your\n    API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key)\n    in the Customer Area and then set this key to the `X-API-Key` header value.\n\n\n    To access the live endpoints, you need to generate a new API key in your live\n    Customer Area.\n\n    ## Versioning\n\n\n    Management API handles versioning as part of the endpoint URL. For example, to\n    send a request to version 1 of the `/companies/{companyId}/webhooks` endpoint,\n    use:\n\n\n    ```text\n\n    https://management-test.adyen.com/v1/companies/{companyId}/webhooks\n\n    ```'\n  x-timestamp: '2022-05-06T09:18:33Z'\n  termsOfService: https://www.adyen.com/legal/terms-and-conditions\n  contact:\n    name: Adyen Developer Experience team\n    url: https://www.adyen.help/hc/en-us/community/topics\n    email: developer-experience@adyen.com\nx-groups:\n- Account - company level\n- Account - merchant level\n- Account - store level\n- Users - company level\n- Users - merchant level\n- My API credential\n- API credentials - company level\n- API credentials - merchant level\n- API key - company level\n- API key - merchant level\n- Client key - company level\n- Client key - merchant level\n- Allowed origins - company level\n- Allowed origins - merchant level\n- Webhooks - company level\n- Webhooks - merchant level\n- Payment methods - merchant level\n- Terminals - terminal level\n- Terminal actions - company level\n- Terminal actions - terminal level\n- Terminal orders - company level\n- Terminal orders - merchant level\n- Terminal settings - company level\n- Terminal settings - merchant level\n- Terminal settings - store level\n- Terminal settings - terminal level\ntags:\n- name: API key - merchant level\n- name: Account - merchant level\n- name: Allowed origins - company level\n- name: API key - company level\n- name: Client key - company level\n- name: Users - company level\n- name: Terminal actions - terminal level\n- name: Terminal settings - terminal level\n- name: Webhooks - merchant level\n- name: Client key - merchant level\n- name: Terminal orders - company level\n- name: Allowed origins - merchant level\n- name: API credentials - merchant level\n- name: Users - merchant level\n- name: Terminal actions - company level\n- name: Payment methods - merchant level\n- name: My API credential\n- name: Terminal settings - merchant level\n- name: Webhooks - company level\n- name: Terminals - terminal level\n- name: Account - store level\n- name: Terminal settings - company level\n- name: API credentials - company level\n- name: Terminal orders - merchant level\n- name: Account - company level\n- name: Terminal settings - store level\npaths:\n  /companies:\n    get:\n      tags:\n      - Account - company level\n      summary: Get a list of company accounts\n      description: \"Returns the list of company accounts that your API credential\\\n        \\ has access to. The list is grouped into pages as defined by the query parameters.\\n\\\n        \\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        \\n* Management API\\u2014Account read\"\n      operationId: get-companies\n      x-groupName: Account - company level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The number of the page to fetch.\n        name: pageNumber\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The number of items to have on a page, maximum 100. The default\n          is 10 items on a page.\n        name: pageSize\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-companies-success-200'\n              schema:\n                $ref: '#/components/schemas/ListCompanyResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}:\n    get:\n      tags:\n      - Account - company level\n      summary: Get a company account\n      description: \"Returns the company account specified in the path. Your API credential\\\n        \\ must have access to the company account. \\n\\nTo make this request, your\\\n        \\ API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Account read\"\n      operationId: get-companies-companyId\n      x-groupName: Account - company level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-companies-companyId-success-200'\n              schema:\n                $ref: '#/components/schemas/Company'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/androidApps:\n    get:\n      tags:\n      - Terminal actions - company level\n      summary: Get a list of Android apps\n      description: \"Returns a list of the Android apps that are available for the\\\n        \\ company identified in the path. \\nThese apps have been uploaded to Adyen\\\n        \\ and can be installed or uninstalled on Android payment terminals through\\\n        \\ [terminal actions](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api).\\n\\\n        \\nTo make this request, your API credential must have one of the following\\\n        \\ [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal actions read\\n* Management API\\u2014Terminal\\\n        \\ actions read and write\"\n      operationId: get-companies-companyId-androidApps\n      x-groupName: Terminal actions - company level\n      x-sortIndex: 1\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The number of the page to fetch.\n        name: pageNumber\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The number of items to have on a page, maximum 100. The default\n          is 20 items on a page.\n        name: pageSize\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-companies-companyId-androidApps-success-200'\n              schema:\n                $ref: '#/components/schemas/AndroidAppsResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/androidCertificates:\n    get:\n      tags:\n      - Terminal actions - company level\n      summary: Get a list of Android certificates\n      description: \"Returns a list of the Android certificates that are available\\\n        \\ for the company identified in the path.\\nTypically, these certificates enable\\\n        \\ running apps on Android payment terminals. The certifcates in the list have\\\n        \\ been uploaded to Adyen and can be installed or uninstalled on Android terminals\\\n        \\ through [terminal actions](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api).\\n\\\n        \\nTo make this request, your API credential must have one of the following\\\n        \\ [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal actions read\\n* Management API\\u2014Terminal\\\n        \\ actions read and write\"\n      operationId: get-companies-companyId-androidCertificates\n      x-groupName: Terminal actions - company level\n      x-sortIndex: 2\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The number of the page to fetch.\n        name: pageNumber\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The number of items to have on a page, maximum 100. The default\n          is 20 items on a page.\n        name: pageSize\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-companies-companyId-androidCertificates-success-200'\n              schema:\n                $ref: '#/components/schemas/AndroidCertificatesResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/apiCredentials:\n    get:\n      tags:\n      - API credentials - company level\n      summary: Get a list of API credentials\n      description: \"Returns the list of [API credentials](https://docs.adyen.com/development-resources/api-credentials)\\\n        \\ for the company account. The list is grouped into pages as defined by the\\\n        \\ query parameters.\\n\\nTo make this request, your API credential must have\\\n        \\ the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014API credentials read and write\"\n      operationId: get-companies-companyId-apiCredentials\n      x-groupName: API credentials - company level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The number of the page to fetch.\n        name: pageNumber\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The number of items to have on a page, maximum 100. The default\n          is 10 items on a page.\n        name: pageSize\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-companies-companyId-apiCredentials-success-200'\n              schema:\n                $ref: '#/components/schemas/ListCompanyApiCredentialsResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    post:\n      tags:\n      - API credentials - company level\n      summary: Create an API credential.\n      description: \"Creates an [API credential](https://docs.adyen.com/development-resources/api-credentials)\\\n        \\ for the company account identified in the path. In the request, you can\\\n        \\ specify which merchant accounts the new API credential will have access\\\n        \\ to, as well as its roles and allowed origins.\\n\\nThe response includes several\\\n        \\ types of authentication details:\\n* [API key](https://docs.adyen.com/development-resources/api-authentication#api-key-authentication):\\\n        \\ used for API request authentication.\\n* [Client key](https://docs.adyen.com/development-resources/client-side-authentication#how-it-works):\\\n        \\ public key used for client-side authentication.\\n* [Username and password](https://docs.adyen.com/development-resources/api-authentication#using-basic-authentication):\\\n        \\ used for basic authentication.\\n\\n\u003e Make sure you store the API key securely\\\n        \\ in your system. You won't be able to retrieve it later.\\n\\nIf your API key\\\n        \\ is lost or compromised, you need to [generate a new API key](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/companies/{companyId}/apiCredentials/{apiCredentialId}/generateApiKey).\\n\\\n        \\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014API credentials read and write\"\n      operationId: post-companies-companyId-apiCredentials\n      x-groupName: API credentials - company level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateCompanyApiCredentialRequest'\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateCompanyApiCredentialResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/apiCredentials/{apiCredentialId}:\n    get:\n      tags:\n      - API credentials - company level\n      summary: Get an API credential\n      description: \"Returns the [API credential](https://docs.adyen.com/development-resources/api-credentials)\\\n        \\ identified in the path.\\n\\nTo make this request, your API credential must\\\n        \\ have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014API credentials read and write\"\n      operationId: get-companies-companyId-apiCredentials-apiCredentialId\n      x-groupName: API credentials - company level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the API credential.\n        name: apiCredentialId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CompanyApiCredential'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    patch:\n      tags:\n      - API credentials - company level\n      summary: Update an API credential.\n      description: \"Changes the API credential's roles, merchant account access, or\\\n        \\ allowed origins. The request has the new values for the fields you want\\\n        \\ to change. The response contains the full updated API credential, including\\\n        \\ the new values from the request. \\n\\nTo make this request, your API credential\\\n        \\ must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014API credentials read and write\"\n      operationId: patch-companies-companyId-apiCredentials-apiCredentialId\n      x-groupName: API credentials - company level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateCompanyApiCredentialRequest'\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the API credential.\n        name: apiCredentialId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CompanyApiCredential'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/apiCredentials/{apiCredentialId}/allowedOrigins:\n    get:\n      tags:\n      - Allowed origins - company level\n      summary: Get a list of allowed origins\n      description: \"Returns the list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins)\\\n        \\ for the API credential identified in the path.\\n\\nTo make this request,\\\n        \\ your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014API credentials read and write\"\n      operationId: get-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins\n      x-groupName: Allowed origins - company level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the API credential.\n        name: apiCredentialId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AllowedOriginsResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    post:\n      tags:\n      - Allowed origins - company level\n      summary: Create an allowed origin\n      description: \"Adds a new [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins)\\\n        \\ to the API credential's list of allowed origins.\\n\\nTo make this request,\\\n        \\ your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014API credentials read and write\"\n      operationId: post-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins\n      x-groupName: Allowed origins - company level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AllowedOrigin'\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the API credential.\n        name: apiCredentialId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AllowedOriginsResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/apiCredentials/{apiCredentialId}/allowedOrigins/{originId}:\n    delete:\n      tags:\n      - Allowed origins - company level\n      summary: Delete an allowed origin\n      description: \"Removes the [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins)\\\n        \\ identified in the path. As soon as an allowed origin is removed, we no longer\\\n        \\ accept client-side requests from that domain.\\n\\nTo make this request, your\\\n        \\ API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014API credentials read and write\"\n      operationId: delete-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins-originId\n      x-groupName: Allowed origins - company level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the API credential.\n        name: apiCredentialId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the allowed origin.\n        name: originId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    get:\n      tags:\n      - Allowed origins - company level\n      summary: Get an allowed origin\n      description: \"Returns the [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins)\\\n        \\ identified in the path.\\n\\nTo make this request, your API credential must\\\n        \\ have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014API credentials read and write\"\n      operationId: get-companies-companyId-apiCredentials-apiCredentialId-allowedOrigins-originId\n      x-groupName: Allowed origins - company level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the API credential.\n        name: apiCredentialId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the allowed origin.\n        name: originId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AllowedOrigin'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/apiCredentials/{apiCredentialId}/generateApiKey:\n    post:\n      tags:\n      - API key - company level\n      summary: Generate new API key\n      description: \"Returns a new API key for the API credential. You can use the\\\n        \\ new API key a few minutes after generating it. The old API key stops working\\\n        \\ 24 hours after generating a new one.\\n\\nTo make this request, your API credential\\\n        \\ must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014API credentials read and write\"\n      operationId: post-companies-companyId-apiCredentials-apiCredentialId-generateApiKey\n      x-groupName: API key - company level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the API credential.\n        name: apiCredentialId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenerateApiKeyResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/apiCredentials/{apiCredentialId}/generateClientKey:\n    post:\n      tags:\n      - Client key - company level\n      summary: Generate new client key\n      description: \"Returns a new [client key](https://docs.adyen.com/development-resources/client-side-authentication#how-it-works)\\\n        \\ for the API credential identified in the path. You can use the new client\\\n        \\ key a few minutes after generating it. The old client key stops working\\\n        \\ 24 hours after generating a new one.\\n\\nTo make this request, your API credential\\\n        \\ must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014API credentials read and write\"\n      operationId: post-companies-companyId-apiCredentials-apiCredentialId-generateClientKey\n      x-groupName: Client key - company level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the API credential.\n        name: apiCredentialId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenerateClientKeyResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/billingEntities:\n    get:\n      tags:\n      - Terminal orders - company level\n      summary: Get a list of billing entities\n      description: \"Returns the billing entities of the company identified in the\\\n        \\ path and all merchant accounts belonging to the company.\\nA billing entity\\\n        \\ is a legal entity where we charge orders to. An order for terminal products\\\n        \\ must contain the ID of a billing entity.\\n\\nTo make this request, your API\\\n        \\ credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal ordering read\\n* Management API\\u2014Terminal\\\n        \\ ordering read and write\"\n      operationId: get-companies-companyId-billingEntities\n      x-groupName: Terminal orders - company level\n      x-sortIndex: 3\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The name of the billing entity.\n        name: name\n        in: query\n        required: false\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-companies-companyId-billingEntities-success-200'\n              schema:\n                $ref: '#/components/schemas/BillingEntitiesResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/merchants:\n    get:\n      tags:\n      - Account - company level\n      summary: Get a list of merchant accounts\n      description: \"Returns the list of merchant accounts under the company account\\\n        \\ specified in the path. The list only includes merchant accounts that your\\\n        \\ API credential has access to. The list is grouped into pages as defined\\\n        \\ by the query parameters. \\n\\nTo make this request, your API credential must\\\n        \\ have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Account read\"\n      operationId: get-companies-companyId-merchants\n      x-groupName: Account - company level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The number of the page to fetch.\n        name: pageNumber\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The number of items to have on a page, maximum 100. The default\n          is 10 items on a page.\n        name: pageSize\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-companies-companyId-merchants-success-200'\n              schema:\n                $ref: '#/components/schemas/ListMerchantResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/shippingLocations:\n    get:\n      tags:\n      - Terminal orders - company level\n      summary: Get a list of shipping locations\n      description: \"Returns the shipping locations for the company identified in the\\\n        \\ path and all merchant accounts belonging to the company.\\nA shipping location\\\n        \\ includes the address where orders can be delivered, and an ID which you\\\n        \\ need to specify when ordering terminal products.\\n\\nTo make this request,\\\n        \\ your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal ordering read\\n* Management API\\u2014Terminal\\\n        \\ ordering read and write\"\n      operationId: get-companies-companyId-shippingLocations\n      x-groupName: Terminal orders - company level\n      x-sortIndex: 4\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The name of the shipping location.\n        name: name\n        in: query\n        required: false\n        schema:\n          type: string\n      - description: The number of locations to skip.\n        name: offset\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The number of locations to return.\n        name: limit\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-companies-companyId-shippingLocations-success-200'\n              schema:\n                $ref: '#/components/schemas/ShippingLocationsResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    post:\n      tags:\n      - Terminal orders - company level\n      summary: Create a shipping location\n      description: \"Creates a shipping location for the company identified in the\\\n        \\ path. A shipping location defines an address where orders can be delivered.\\n\\\n        \\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal ordering read and write\"\n      operationId: post-companies-companyId-shippingLocations\n      x-groupName: Terminal orders - company level\n      x-sortIndex: 5\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              create-shipping-location:\n                $ref: '#/components/examples/post-companies-companyId-shippingLocations-create-shipping-location'\n            schema:\n              $ref: '#/components/schemas/ShippingLocation'\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                create-shipping-location:\n                  $ref: '#/components/examples/post-companies-companyId-shippingLocations-create-shipping-location-200'\n              schema:\n                $ref: '#/components/schemas/ShippingLocation'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/terminalActions:\n    get:\n      tags:\n      - Terminal actions - company level\n      summary: Get a list of terminal actions\n      description: \"Returns the [terminal actions](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api)\\\n        \\ that have been scheduled for the company identified in the path.The response\\\n        \\ doesn't include actions that are scheduled by Adyen.\\nTo make this request,\\\n        \\ your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal actions read\\n* Management API\\u2014Terminal\\\n        \\ actions read and write\"\n      operationId: get-companies-companyId-terminalActions\n      x-groupName: Terminal actions - company level\n      x-sortIndex: 3\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The number of the page to fetch.\n        name: pageNumber\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The number of items to have on a page, maximum 100. The default\n          is 20 items on a page.\n        name: pageSize\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: \"Returns terminal actions with the specified status. \\nAllowed\\\n          \\ values: **pending**, **successful**, **failed**, **cancelled**, **tryLater**.\"\n        name: status\n        in: query\n        required: false\n        schema:\n          type: string\n      - description: \"Returns terminal actions of the specified type. \\nAllowed values:\\\n          \\ **InstallAndroidApp**, **UninstallAndroidApp**, **InstallAndroidCertificate**,\\\n          \\ **UninstallAndroidCertificate**.\"\n        name: type\n        in: query\n        required: false\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-companies-companyId-terminalActions-success-200'\n              schema:\n                $ref: '#/components/schemas/ListExternalTerminalActionsResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/terminalLogos:\n    get:\n      tags:\n      - Terminal settings - company level\n      summary: Get the terminal logo\n      description: \"Returns the logo that is configured for a specific payment terminal\\\n        \\ model at the company identified in the path. You must specify the terminal\\\n        \\ model as a query parameter. \\n\\nThe logo is returned as a Base64-encoded\\\n        \\ string. You need to Base64-decode the string to get the actual image file.\\\n        \\ \\nThis logo applies to all terminals of the specified model under the company,\\\n        \\ unless a different logo is configured at a lower level (merchant account,\\\n        \\ store, or individual terminal).\\n\\nTo make this request, your API credential\\\n        \\ must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal settings read\\n* Management API\\u2014Terminal\\\n        \\ settings read and write\"\n      operationId: get-companies-companyId-terminalLogos\n      x-groupName: Terminal settings - company level\n      x-sortIndex: 2\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: 'The terminal model. Possible values: E355, VX675WIFIBT, VX680,\n          VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus,\n          V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T.'\n        name: model\n        in: query\n        required: false\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-companies-companyId-terminalLogos-success-200'\n              schema:\n                $ref: '#/components/schemas/Logo'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    patch:\n      tags:\n      - Terminal settings - company level\n      summary: Update the terminal logo\n      description: \"Updates the logo that is configured for a specific payment terminal\\\n        \\ model at the company identified in the path. You must specify the terminal\\\n        \\ model as a query parameter. You can update the logo for only one terminal\\\n        \\ model at a time.\\nThis logo applies to all terminals of the specified model\\\n        \\ under the company, unless a different logo is configured at a lower level\\\n        \\ (merchant account, store, or individual terminal). \\n* To change the logo,\\\n        \\ specify the image file as a Base64-encoded string.\\n* To restore the logo\\\n        \\ inherited from the Adyen PSP level, specify an empty logo value.\\n\\nTo make\\\n        \\ this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal settings read and write\"\n      operationId: patch-companies-companyId-terminalLogos\n      x-groupName: Terminal settings - company level\n      x-sortIndex: 4\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              remove-logo:\n                $ref: '#/components/examples/patch-companies-companyId-terminalLogos-remove-logo'\n              upload-logo:\n                $ref: '#/components/examples/patch-companies-companyId-terminalLogos-upload-logo'\n            schema:\n              $ref: '#/components/schemas/Logo'\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: 'The terminal model. Possible values: E355, VX675WIFIBT, VX680,\n          VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus,\n          V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T.'\n        name: model\n        in: query\n        required: false\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                remove-logo:\n                  $ref: '#/components/examples/patch-companies-companyId-terminalLogos-remove-logo-200'\n                upload-logo:\n                  $ref: '#/components/examples/patch-companies-companyId-terminalLogos-upload-logo-200'\n              schema:\n                $ref: '#/components/schemas/Logo'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/terminalModels:\n    get:\n      tags:\n      - Terminal orders - company level\n      summary: Get a list of terminal models\n      description: \"Returns a list of payment terminal models that the company identified\\\n        \\ in the path has access to.\\nThe response includes the terminal model ID,\\\n        \\ which can be used as a query parameter when getting a list of terminals\\\n        \\ or a list of products for ordering.\\n\\nTo make this request, your API credential\\\n        \\ must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal ordering read\\n* Management API\\u2014Terminal\\\n        \\ ordering read and write\"\n      operationId: get-companies-companyId-terminalModels\n      x-groupName: Terminal orders - company level\n      x-sortIndex: 1\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-companies-companyId-terminalModels-success-200'\n              schema:\n                $ref: '#/components/schemas/TerminalModelsResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/terminalOrders:\n    get:\n      tags:\n      - Terminal orders - company level\n      summary: Get a list of orders\n      description: \"Returns a lists of terminal products orders for the company identified\\\n        \\ in the path.\\nTo filter the list, use one or more of the query parameters.\\n\\\n        \\nTo make this request, your API credential must have one of the following\\\n        \\ [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal ordering read\\n* Management API\\u2014Terminal\\\n        \\ ordering read and write\"\n      operationId: get-companies-companyId-terminalOrders\n      x-groupName: Terminal orders - company level\n      x-sortIndex: 7\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Your purchase order number.\n        name: customerOrderReference\n        in: query\n        required: false\n        schema:\n          type: string\n      - description: 'The order status. Possible values (not case-sensitive): Placed,\n          Confirmed, Cancelled, Shipped, Delivered.'\n        name: status\n        in: query\n        required: false\n        schema:\n          type: string\n      - description: The number of orders to skip.\n        name: offset\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The number of orders to return.\n        name: limit\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-companies-companyId-terminalOrders-success-200'\n              schema:\n                $ref: '#/components/schemas/TerminalOrdersResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    post:\n      tags:\n      - Terminal orders - company level\n      summary: Create an order\n      description: \"Creates an order for payment terminal products for the company\\\n        \\ identified in the path.\\n\\nTo make this request, your API credential must\\\n        \\ have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal ordering read and write\"\n      operationId: post-companies-companyId-terminalOrders\n      x-groupName: Terminal orders - company level\n      x-sortIndex: 6\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              create-order:\n                $ref: '#/components/examples/post-companies-companyId-terminalOrders-create-order'\n            schema:\n              $ref: '#/components/schemas/TerminalOrderRequest'\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                create-order:\n                  $ref: '#/components/examples/post-companies-companyId-terminalOrders-create-order-200'\n              schema:\n                $ref: '#/components/schemas/TerminalOrder'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/terminalOrders/{orderId}:\n    get:\n      tags:\n      - Terminal orders - company level\n      summary: Get an order\n      description: \"Returns the details of the terminal products order identified\\\n        \\ in the path.\\n\\nTo make this request, your API credential must have one\\\n        \\ of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal ordering read\\n* Management API\\u2014Terminal\\\n        \\ ordering read and write\"\n      operationId: get-companies-companyId-terminalOrders-orderId\n      x-groupName: Terminal orders - company level\n      x-sortIndex: 8\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The unique identifier of the order.\n        name: orderId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-companies-companyId-terminalOrders-orderId-success-200'\n              schema:\n                $ref: '#/components/schemas/TerminalOrder'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    patch:\n      tags:\n      - Terminal orders - company level\n      summary: Update an order\n      description: \"Updates the terminal products order identified in the path.\\n\\\n        Updating is only possible while the order has the status **Placed**.\\n\\nThe\\\n        \\ request body only needs to contain what you want to change. \\nHowever, to\\\n        \\ update the products in the `items` array, you must provide the entire array.\\\n        \\ For example, if the array has three items:\\n To remove one item, the array\\\n        \\ must include the remaining two items. Or to add one item, the array must\\\n        \\ include all four items.\\n\\nTo make this request, your API credential must\\\n        \\ have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal ordering read and write\"\n      operationId: patch-companies-companyId-terminalOrders-orderId\n      x-groupName: Terminal orders - company level\n      x-sortIndex: 9\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              update-order:\n                $ref: '#/components/examples/patch-companies-companyId-terminalOrders-orderId-update-order'\n            schema:\n              $ref: '#/components/schemas/TerminalOrderRequest'\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The unique identifier of the order.\n        name: orderId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                update-order:\n                  $ref: '#/components/examples/patch-companies-companyId-terminalOrders-orderId-update-order-200'\n              schema:\n                $ref: '#/components/schemas/TerminalOrder'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/terminalOrders/{orderId}/cancel:\n    post:\n      tags:\n      - Terminal orders - company level\n      summary: Cancel an order\n      description: \"Cancels the terminal products order identified in the path.\\n\\\n        Cancelling is only possible while the order has the status **Placed**.\\nTo\\\n        \\ cancel an order, make a POST call without a request body. The response returns\\\n        \\ the full order details, but with the status changed to **Cancelled**.\\n\\n\\\n        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal ordering read and write\"\n      operationId: post-companies-companyId-terminalOrders-orderId-cancel\n      x-groupName: Terminal orders - company level\n      x-sortIndex: 10\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The unique identifier of the order.\n        name: orderId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                cancel-order:\n                  $ref: '#/components/examples/post-companies-companyId-terminalOrders-orderId-cancel-cancel-order-200'\n              schema:\n                $ref: '#/components/schemas/TerminalOrder'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/terminalProducts:\n    get:\n      tags:\n      - Terminal orders - company level\n      summary: Get a list of terminal products\n      description: \"Returns a list of payment terminal packages and parts that the\\\n        \\ company identified in the path has access to.\\n To filter the list, use\\\n        \\ one or more of the query parameters. The `country` query parameter is required.\\n\\\n        \\nTo make this request, your API credential must have one of the following\\\n        \\ [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal ordering read\\n* Management API\\u2014Terminal\\\n        \\ ordering read and write\"\n      operationId: get-companies-companyId-terminalProducts\n      x-groupName: Terminal orders - company level\n      x-sortIndex: 2\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The country to return products for, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\n          format. For example, **US**\n        name: country\n        in: query\n        required: false\n        schema:\n          type: string\n      - description: The terminal model to return products for. Use the ID returned\n          in the [GET `/terminalModels`](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/terminalModels)\n          response. For example, **Verifone.M400**\n        name: terminalModelId\n        in: query\n        required: false\n        schema:\n          type: string\n      - description: The number of products to skip.\n        name: offset\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The number of products to return.\n        name: limit\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-companies-companyId-terminalProducts-success-200'\n              schema:\n                $ref: '#/components/schemas/TerminalProductsResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/terminalSettings:\n    get:\n      tags:\n      - Terminal settings - company level\n      summary: Get terminal settings\n      description: \"Returns the payment terminal settings that are configured for\\\n        \\ the company identified in the path. These settings apply to all terminals\\\n        \\ under the company, unless different values are configured at a lower level\\\n        \\ (merchant account, store, or individual terminal).\\n\\nTo make this request,\\\n        \\ your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal settings read\\n* Management API\\u2014Terminal\\\n        \\ settings read and write\"\n      operationId: get-companies-companyId-terminalSettings\n      x-groupName: Terminal settings - company level\n      x-sortIndex: 1\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-companies-companyId-terminalSettings-success-200'\n              schema:\n                $ref: '#/components/schemas/TerminalSettings'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    patch:\n      tags:\n      - Terminal settings - company level\n      summary: Update terminal settings\n      description: \"Updates payment terminal settings for the company identified in\\\n        \\ the path. These settings apply to all terminals under the company, unless\\\n        \\ different values are configured at a lower level (merchant account, store,\\\n        \\ or individual terminal).\\n\\n* To change a parameter value, include the full\\\n        \\ object that contains the parameter, even if you don't want to change all\\\n        \\ parameters in the object.\\n* To restore a parameter value inherited from\\\n        \\ the Adyen PSP level, include the full object that contains the parameter,\\\n        \\ and specify an empty value for the parameter or omit the parameter.\\n* Objects\\\n        \\ that are not included in the request are not updated.\\n\\nTo make this request,\\\n        \\ your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal settings read and write\"\n      operationId: patch-companies-companyId-terminalSettings\n      x-groupName: Terminal settings - company level\n      x-sortIndex: 3\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              add-eap-peap-and-psk-wifi-profiles:\n                $ref: '#/components/examples/patch-companies-companyId-terminalSettings-add-eap-peap-and-psk-wifi-profiles'\n              add-eap-tls-wifi-profile:\n                $ref: '#/components/examples/patch-companies-companyId-terminalSettings-add-eap-tls-wifi-profile'\n            schema:\n              $ref: '#/components/schemas/TerminalSettings'\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                add-eap-peap-and-psk-wifi-profiles:\n                  $ref: '#/components/examples/patch-companies-companyId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200'\n                add-eap-tls-wifi-profile:\n                  $ref: '#/components/examples/patch-companies-companyId-terminalSettings-add-eap-tls-wifi-profile-200'\n              schema:\n                $ref: '#/components/schemas/TerminalSettings'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/users:\n    get:\n      tags:\n      - Users - company level\n      summary: Get a list of users\n      description: \"Returns the list of users for the `companyId` identified in the\\\n        \\ path.\\n\\nTo make this request, your API credential must have the following\\\n        \\ [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Users read and write\\n\"\n      operationId: get-companies-companyId-users\n      x-groupName: Users - company level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The number of the page to return.\n        name: pageNumber\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The number of items to have on a page. Maximum value is **100**.\n          The default is **10** items on a page.\n        name: pageSize\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListCompanyUsersResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    post:\n      tags:\n      - Users - company level\n      summary: Create a new user\n      description: \"Creates the user for the `companyId` identified in the path.\\n\\\n        \\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Users read and write\\n\"\n      operationId: post-companies-companyId-users\n      x-groupName: Users - company level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              create-user:\n                $ref: '#/components/examples/post-companies-companyId-users-create-user'\n            schema:\n              $ref: '#/components/schemas/CreateCompanyUserRequest'\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                create-user:\n                  $ref: '#/components/examples/post-companies-companyId-users-create-user-200'\n              schema:\n                $ref: '#/components/schemas/CreateCompanyUserResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/users/{userId}:\n    get:\n      tags:\n      - Users - company level\n      summary: Get user details\n      description: \"Returns user details for the `userId` and the `companyId` identified\\\n        \\ in the path.\\n\\nTo make this request, your API credential must have the\\\n        \\ following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Users read and write\\n\"\n      operationId: get-companies-companyId-users-userId\n      x-groupName: Users - company level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The unique identifier of the user.\n        name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CompanyUser'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    patch:\n      tags:\n      - Users - company level\n      summary: Update user details\n      description: \"Updates user details for the `userId` and the `companyId` identified\\\n        \\ in the path.\\n\\nTo make this request, your API credential must have the\\\n        \\ following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Users read and write\\n\"\n      operationId: patch-companies-companyId-users-userId\n      x-groupName: Users - company level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateCompanyUserRequest'\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The unique identifier of the user.\n        name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CompanyUser'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/webhooks:\n    get:\n      tags:\n      - Webhooks - company level\n      summary: List all webhooks\n      description: \"Lists all webhook configurations for the company account.\\n\\n\\\n        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Webhooks read\\n* Management API\\u2014Webhooks read and\\\n        \\ write\"\n      operationId: get-companies-companyId-webhooks\n      x-groupName: Webhooks - company level\n      x-sortIndex: 2\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The number of the page to fetch.\n        name: pageNumber\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The number of items to have on a page, maximum 100. The default\n          is 10 items on a page.\n        name: pageSize\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListWebhooksResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    post:\n      tags:\n      - Webhooks - company level\n      summary: Set up a webhook\n      description: \"Subscribe to receive webhook notifications about events related\\\n        \\ to your company account. You can add basic authentication to make sure the\\\n        \\ data is secure.\\n\\nTo make this request, your API credential must have the\\\n        \\ following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Webhooks read and write\"\n      operationId: post-companies-companyId-webhooks\n      x-groupName: Webhooks - company level\n      x-sortIndex: 1\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateCompanyWebhookRequest'\n      parameters:\n      - description: Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Webhook'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/webhooks/{webhookId}:\n    delete:\n      tags:\n      - Webhooks - company level\n      summary: Remove a webhook\n      description: \"Remove the configuration for the webhook identified in the path.\\n\\\n        \\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Webhooks read and write\"\n      operationId: delete-companies-companyId-webhooks-webhookId\n      x-groupName: Webhooks - company level\n      x-sortIndex: 5\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the webhook configuration.\n        name: webhookId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    get:\n      tags:\n      - Webhooks - company level\n      summary: Get a webhook\n      description: \"Returns the configuration for the webhook identified in the path.\\n\\\n        \\nTo make this request, your API credential must have one of the following\\\n        \\ [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Webhooks read\\n* Management API\\u2014Webhooks read and\\\n        \\ write\"\n      operationId: get-companies-companyId-webhooks-webhookId\n      x-groupName: Webhooks - company level\n      x-sortIndex: 3\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the webhook configuration.\n        name: webhookId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Webhook'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    patch:\n      tags:\n      - Webhooks - company level\n      summary: Update a webhook\n      description: \"Make changes to the configuration of the webhook identified in\\\n        \\ the path. The request contains the new values you want to have in the webhook\\\n        \\ configuration. The response contains the full configuration for the webhook,\\\n        \\ which includes the new values from the request.\\n\\nTo make this request,\\\n        \\ your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Webhooks read and write\"\n      operationId: patch-companies-companyId-webhooks-webhookId\n      x-groupName: Webhooks - company level\n      x-sortIndex: 4\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateCompanyWebhookRequest'\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the webhook configuration.\n        name: webhookId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Webhook'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/webhooks/{webhookId}/generateHmac:\n    post:\n      tags:\n      - Webhooks - company level\n      summary: Generate an HMAC key\n      description: \"Returns an [HMAC key](https://en.wikipedia.org/wiki/HMAC) for\\\n        \\ the webhook identified in the path. This key allows you to check the integrity\\\n        \\ and the origin of the notifications you receive.By creating an HMAC key,\\\n        \\ you start receiving [HMAC-signed notifications](https://docs.adyen.com/development-resources/webhooks/verify-hmac-signatures#enable-hmac-signatures)\\\n        \\ from Adyen. Find out more about how to [verify HMAC signatures](https://docs.adyen.com/development-resources/webhooks/verify-hmac-signatures).\\n\\\n        \\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Webhooks read and write\"\n      operationId: post-companies-companyId-webhooks-webhookId-generateHmac\n      x-groupName: Webhooks - company level\n      x-sortIndex: 6\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the webhook configuration.\n        name: webhookId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenerateHmacKeyResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /companies/{companyId}/webhooks/{webhookId}/test:\n    post:\n      tags:\n      - Webhooks - company level\n      summary: Test a webhook\n      description: \"Sends sample notifications to test if the webhook is set up correctly.\\n\\\n        \\nWe send sample notifications for maximum 20 of the merchant accounts that\\\n        \\ the webhook is configured for. If the webhook is configured for more than\\\n        \\ 20 merchant accounts, use the `merchantIds` array to specify a subset of\\\n        \\ the merchant accounts for which to send test notifications.\\n\\nWe send four\\\n        \\ test notifications for each event code you choose. They cover success and\\\n        \\ failure scenarios for the hard-coded currencies EUR and GBP, regardless\\\n        \\ of the currencies configured in the merchant accounts. For custom notifications,\\\n        \\ we only send the specified custom notification.\\n\\nThe response describes\\\n        \\ the result of the test. The `status` field tells you if the test was successful\\\n        \\ or not. You can use the other response fields to troubleshoot unsuccessful\\\n        \\ tests.\\n\\nTo make this request, your API credential must have the following\\\n        \\ [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Webhooks read and write\"\n      operationId: post-companies-companyId-webhooks-webhookId-test\n      x-groupName: Webhooks - company level\n      x-sortIndex: 7\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TestCompanyWebhookRequest'\n      parameters:\n      - description: The unique identifier of the company account.\n        name: companyId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the webhook configuration.\n        name: webhookId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestWebhookResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /me:\n    get:\n      tags:\n      - My API credential\n      summary: Get API credential details\n      description: 'Returns your [API credential](https://docs.adyen.com/development-resources/api-credentials)\n        details based on the API Key you used in the request.\n\n\n        You can make this request with any of the Management API roles.'\n      operationId: get-me\n      x-groupName: My API credential\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MeApiCredential'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /me/allowedOrigins:\n    get:\n      tags:\n      - My API credential\n      summary: Get allowed origins\n      description: 'Returns the list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins)\n        of your [API credential](https://docs.adyen.com/development-resources/api-credentials)\n        based on the API key you used in the request.\n\n\n        You can make this request with any of the Management API roles.'\n      operationId: get-me-allowedOrigins\n      x-groupName: My API credential\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AllowedOriginsResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    post:\n      tags:\n      - My API credential\n      summary: Add allowed origin\n      description: 'Adds an allowed origin to the list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins)\n        of your API credential.\n\n        The API key from the request is used to identify the [API credential](https://docs.adyen.com/development-resources/api-credentials).\n\n\n        You can make this request with any of the Management API roles.'\n      operationId: post-me-allowedOrigins\n      x-groupName: My API credential\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateAllowedOriginRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AllowedOriginsResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /me/allowedOrigins/{originId}:\n    delete:\n      tags:\n      - My API credential\n      summary: Remove allowed origin\n      description: 'Removes the [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins)\n        specified in the path.\n\n        The API key from the request is used to identify the [API credential](https://docs.adyen.com/development-resources/api-credentials).\n\n\n        You can make this request with any of the Management API roles.'\n      operationId: delete-me-allowedOrigins-originId\n      x-groupName: My API credential\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: Unique identifier of the allowed origin.\n        name: originId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    get:\n      tags:\n      - My API credential\n      summary: Get allowed origin details\n      description: 'Returns the details of the [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins)\n        specified in the path.\n\n        The API key from the request is used to identify the [API credential](https://docs.adyen.com/development-resources/api-credentials).\n\n\n        You can make this request with any of the Management API roles.'\n      operationId: get-me-allowedOrigins-originId\n      x-groupName: My API credential\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: Unique identifier of the allowed origin.\n        name: originId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AllowedOrigin'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants:\n    get:\n      tags:\n      - Account - merchant level\n      summary: Get a list of merchant accounts\n      description: \"Returns the list of merchant accounts that your API credential\\\n        \\ has access to. The list is grouped into pages as defined by the query parameters.\\\n        \\ \\n\\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Account read\"\n      operationId: get-merchants\n      x-groupName: Account - merchant level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The number of the page to fetch.\n        name: pageNumber\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The number of items to have on a page, maximum 100. The default\n          is 10 items on a page.\n        name: pageSize\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-merchants-success-200'\n              schema:\n                $ref: '#/components/schemas/ListMerchantResponse'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{id}:\n    get:\n      tags:\n      - Account - merchant level\n      summary: Get a merchant account\n      description: \"Returns the merchant account specified in the path. Your API credential\\\n        \\ must have access to the merchant account.\\n\\nTo make this request, your\\\n        \\ API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Account read\"\n      operationId: get-merchants-id\n      x-groupName: Account - merchant level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Merchant'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{id}/apiCredentials:\n    get:\n      tags:\n      - API credentials - merchant level\n      summary: Get a list of API credentials\n      description: \"Returns the list of [API credentials](https://docs.adyen.com/development-resources/api-credentials)\\\n        \\ for the merchant account. The list is grouped into pages as defined by the\\\n        \\ query parameters.\\n\\nTo make this request, your API credential must have\\\n        \\ the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014API credentials read and write\"\n      operationId: get-merchants-id-apiCredentials\n      x-groupName: API credentials - merchant level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The number of the page to fetch.\n        name: pageNumber\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The number of items to have on a page, maximum 100. The default\n          is 10 items on a page.\n        name: pageSize\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListMerchantApiCredentialsResponse'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    post:\n      tags:\n      - API credentials - merchant level\n      summary: Create an API credential\n      description: \"Creates an [API credential](https://docs.adyen.com/development-resources/api-credentials)\\\n        \\ for the company account identified in the path. In the request, you can\\\n        \\ specify the roles and allowed origins for the new API credential.\\n\\nThe\\\n        \\ response includes the:\\n* [API key](https://docs.adyen.com/development-resources/api-authentication#api-key-authentication):\\\n        \\ used for API request authentication.\\n* [Client key](https://docs.adyen.com/development-resources/client-side-authentication#how-it-works):\\\n        \\ public key used for client-side authentication.\\n* [Username and password](https://docs.adyen.com/development-resources/api-authentication#using-basic-authentication):\\\n        \\ used for basic authentication.\\n\\n\u003e Make sure you store the API key securely\\\n        \\ in your system. You won't be able to retrieve it later.\\n\\nIf your API key\\\n        \\ is lost or compromised, you need to [generate a new API key](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{id}/apiCredentials/{apiCredentialId}/generateApiKey).\\n\\\n        \\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014API credentials read and write\"\n      operationId: post-merchants-id-apiCredentials\n      x-groupName: API credentials - merchant level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateMerchantApiCredentialRequest'\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateApiCredentialResponse'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{id}/apiCredentials/{apiCredentialId}:\n    get:\n      tags:\n      - API credentials - merchant level\n      summary: Get an API credential\n      description: \"Returns the [API credential](https://docs.adyen.com/development-resources/api-credentials)\\\n        \\ identified in the path.\\n\\nTo make this request, your API credential must\\\n        \\ have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014API credentials read and write\"\n      operationId: get-merchants-id-apiCredentials-apiCredentialId\n      x-groupName: API credentials - merchant level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the API credential.\n        name: apiCredentialId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiCredential'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    patch:\n      tags:\n      - API credentials - merchant level\n      summary: Update an API credential\n      description: \"Changes the API credential's roles, or allowed origins. The request\\\n        \\ has the new values for the fields you want to change. The response contains\\\n        \\ the full updated API credential, including the new values from the request.\\\n        \\ \\n\\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014API credentials read and write\"\n      operationId: patch-merchants-id-apiCredentials-apiCredentialId\n      x-groupName: API credentials - merchant level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateMerchantApiCredentialRequest'\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the API credential.\n        name: apiCredentialId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiCredential'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{id}/apiCredentials/{apiCredentialId}/allowedOrigins:\n    get:\n      tags:\n      - Allowed origins - merchant level\n      summary: Get a list of allowed origins\n      description: \"Returns the list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins)\\\n        \\ for the API credential identified in the path.\\n\\nTo make this request,\\\n        \\ your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014API credentials read and write\"\n      operationId: get-merchants-id-apiCredentials-apiCredentialId-allowedOrigins\n      x-groupName: Allowed origins - merchant level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the API credential.\n        name: apiCredentialId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AllowedOriginsResponse'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    post:\n      tags:\n      - Allowed origins - merchant level\n      summary: Create an allowed origin\n      description: \"Adds a new [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins)\\\n        \\ to the API credential's list of allowed origins.\\n\\nTo make this request,\\\n        \\ your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014API credentials read and write\"\n      operationId: post-merchants-id-apiCredentials-apiCredentialId-allowedOrigins\n      x-groupName: Allowed origins - merchant level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AllowedOrigin'\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the API credential.\n        name: apiCredentialId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AllowedOriginsResponse'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{id}/apiCredentials/{apiCredentialId}/allowedOrigins/{originId}:\n    delete:\n      tags:\n      - Allowed origins - merchant level\n      summary: Delete an allowed origin\n      description: \"Removes the [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins)\\\n        \\ identified in the path. As soon as an allowed origin is removed, we no longer\\\n        \\ accept client-side requests from that domain.\\n\\nTo make this request, your\\\n        \\ API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014API credentials read and write\"\n      operationId: delete-merchants-id-apiCredentials-apiCredentialId-allowedOrigins-originId\n      x-groupName: Allowed origins - merchant level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the API credential.\n        name: apiCredentialId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the allowed origin.\n        name: originId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    get:\n      tags:\n      - Allowed origins - merchant level\n      summary: Get an allowed origin\n      description: \"Returns the [allowed origin](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins)\\\n        \\ identified in the path.\\n\\nTo make this request, your API credential must\\\n        \\ have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014API credentials read and write\"\n      operationId: get-merchants-id-apiCredentials-apiCredentialId-allowedOrigins-originId\n      x-groupName: Allowed origins - merchant level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the API credential.\n        name: apiCredentialId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the allowed origin.\n        name: originId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AllowedOrigin'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{id}/apiCredentials/{apiCredentialId}/generateApiKey:\n    post:\n      tags:\n      - API key - merchant level\n      summary: Generate new API key\n      description: \"Returns a new API key for the API credential. You can use the\\\n        \\ new API key a few minutes after generating it. The old API key stops working\\\n        \\ 24 hours after generating a new one.\\n\\nTo make this request, your API credential\\\n        \\ must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014API credentials read and write\"\n      operationId: post-merchants-id-apiCredentials-apiCredentialId-generateApiKey\n      x-groupName: API key - merchant level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the API credential.\n        name: apiCredentialId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenerateApiKeyResponse'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{id}/apiCredentials/{apiCredentialId}/generateClientKey:\n    post:\n      tags:\n      - Client key - merchant level\n      summary: Generate new client key\n      description: \"Returns a new [client key](https://docs.adyen.com/development-resources/client-side-authentication#how-it-works)\\\n        \\ for the API credential identified in the path. You can use the new client\\\n        \\ key a few minutes after generating it. The old client key stops working\\\n        \\ 24 hours after generating a new one.\\n\\nTo make this request, your API credential\\\n        \\ must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014API credentials read and write\"\n      operationId: post-merchants-id-apiCredentials-apiCredentialId-generateClientKey\n      x-groupName: Client key - merchant level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the API credential.\n        name: apiCredentialId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenerateClientKeyResponse'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{id}/paymentMethodSettings:\n    get:\n      tags:\n      - Payment methods - merchant level\n      summary: Get all payment methods\n      description: \"Returns details for all payment methods of the merchant account\\\n        \\ identified in the path.\\n\\nTo make this request, your API credential must\\\n        \\ have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Payment methods read\\n\"\n      operationId: get-merchants-id-paymentMethodSettings\n      x-groupName: Payment methods - merchant level\n      x-sortIndex: 2\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The unique identifier of the store for which to return the payment\n          methods.\n        name: storeId\n        in: query\n        required: false\n        schema:\n          type: string\n      - description: The unique identifier of the Business Line for which to return\n          the payment methods.\n        name: businessLineId\n        in: query\n        required: false\n        schema:\n          type: string\n      - description: The number of items to have on a page, maximum 100. The default\n          is 10 items on a page.\n        name: pageSize\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The number of the page to fetch.\n        name: pageNumber\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentMethodResponse'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    post:\n      tags:\n      - Payment methods - merchant level\n      summary: Request a payment method\n      description: \"Sends a request to add a new payment method to the merchant account\\\n        \\ identified in the path.\\n\\nTo make this request, your API credential must\\\n        \\ have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Payment methods read and write\\n\"\n      operationId: post-merchants-id-paymentMethodSettings\n      x-groupName: Payment methods - merchant level\n      x-sortIndex: 1\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PaymentMethodSetupInfo'\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentMethod'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{id}/paymentMethodSettings/{paymentMethodId}:\n    get:\n      tags:\n      - Payment methods - merchant level\n      summary: Get payment method details\n      description: \"Returns details for the merchant account and the payment method\\\n        \\ identified in the path.\\n\\nTo make this request, your API credential must\\\n        \\ have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Payment methods read\\n\"\n      operationId: get-merchants-id-paymentMethodSettings-paymentMethodId\n      x-groupName: Payment methods - merchant level\n      x-sortIndex: 3\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The unique identifier of the payment method.\n        name: paymentMethodId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentMethod'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    patch:\n      tags:\n      - Payment methods - merchant level\n      summary: Update a payment method\n      description: \"Updates payment method details for the merchant account and the\\\n        \\ payment method identified in the path.\\n\\nTo make this request, your API\\\n        \\ credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Payment methods read and write\\n\"\n      operationId: patch-merchants-id-paymentMethodSettings-paymentMethodId\n      x-groupName: Payment methods - merchant level\n      x-sortIndex: 4\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdatePaymentMethodInfo'\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The unique identifier of the payment method.\n        name: paymentMethodId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentMethod'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{id}/users:\n    get:\n      tags:\n      - Users - merchant level\n      summary: Get a list of users\n      description: \"Returns a list of users associated with the `id` specified in\\\n        \\ the path.\\n\\nTo make this request, your API credential must have the following\\\n        \\ [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Users read and write\\n\"\n      operationId: get-merchants-id-users\n      x-groupName: Users - merchant level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: Unique identifier of the merchant.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The number of the page to fetch.\n        name: pageNumber\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The number of items to have on a page. Maximum value is **100**.\n          The default is **10** items on a page.\n        name: pageSize\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListMerchantUsersResponse'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    post:\n      tags:\n      - Users - merchant level\n      summary: Create a new user\n      description: \"Creates a user for the `id` specified in the path.\\n\\nTo make\\\n        \\ this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Users read and write\\n\"\n      operationId: post-merchants-id-users\n      x-groupName: Users - merchant level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateMerchantUserRequest'\n      parameters:\n      - description: Unique identifier of the merchant.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateUserResponse'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{id}/users/{userId}:\n    get:\n      tags:\n      - Users - merchant level\n      summary: Get user details\n      description: \"Returns user details for the `userId` and the `id` specified in\\\n        \\ the path.\\n\\nTo make this request, your API credential must have the following\\\n        \\ [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Users read and write\\n\"\n      operationId: get-merchants-id-users-userId\n      x-groupName: Users - merchant level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: Unique identifier of the merchant.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the user.\n        name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    patch:\n      tags:\n      - Users - merchant level\n      summary: Update a user\n      description: \"Updates user details for the `userId` and the `id` specified in\\\n        \\ the path.\\n\\nTo make this request, your API credential must have the following\\\n        \\ [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Users read and write\\n\"\n      operationId: patch-merchants-id-users-userId\n      x-groupName: Users - merchant level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateMerchantUserRequest'\n      parameters:\n      - description: Unique identifier of the merchant.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the user.\n        name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{id}/webhooks:\n    get:\n      tags:\n      - Webhooks - merchant level\n      summary: List all webhooks\n      description: \"Lists all webhook configurations for the merchant account.\\n\\n\\\n        To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Webhooks read\\n* Management API\\u2014Webhooks read and\\\n        \\ write\"\n      operationId: get-merchants-id-webhooks\n      x-groupName: Webhooks - merchant level\n      x-sortIndex: 2\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The number of the page to fetch.\n        name: pageNumber\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The number of items to have on a page, maximum 100. The default\n          is 10 items on a page.\n        name: pageSize\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListWebhooksResponse'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    post:\n      tags:\n      - Webhooks - merchant level\n      summary: Set up a webhook\n      description: \"Subscribe to receive webhook notifications about events related\\\n        \\ to your merchant account. You can add basic authentication to make sure\\\n        \\ the data is secure.\\n\\nTo make this request, your API credential must have\\\n        \\ the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Webhooks read and write\"\n      operationId: post-merchants-id-webhooks\n      x-groupName: Webhooks - merchant level\n      x-sortIndex: 1\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateMerchantWebhookRequest'\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Webhook'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{id}/webhooks/{webhookId}:\n    delete:\n      tags:\n      - Webhooks - merchant level\n      summary: Remove a webhook\n      description: \"Remove the configuration for the webhook identified in the path.\\n\\\n        \\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Webhooks read and write\"\n      operationId: delete-merchants-id-webhooks-webhookId\n      x-groupName: Webhooks - merchant level\n      x-sortIndex: 5\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the webhook configuration.\n        name: webhookId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    get:\n      tags:\n      - Webhooks - merchant level\n      summary: Get a webhook\n      description: \"Returns the configuration for the webhook identified in the path.\\n\\\n        \\nTo make this request, your API credential must have one of the following\\\n        \\ [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Webhooks read\\n* Management API\\u2014Webhooks read and\\\n        \\ write\"\n      operationId: get-merchants-id-webhooks-webhookId\n      x-groupName: Webhooks - merchant level\n      x-sortIndex: 3\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the webhook configuration.\n        name: webhookId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Webhook'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    patch:\n      tags:\n      - Webhooks - merchant level\n      summary: Update a webhook\n      description: \"Make changes to the configuration of the webhook identified in\\\n        \\ the path. The request contains the new values you want to have in the webhook\\\n        \\ configuration. The response contains the full configuration for the webhook,\\\n        \\ which includes the new values from the request.\\n\\nTo make this request,\\\n        \\ your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Webhooks read and write\"\n      operationId: patch-merchants-id-webhooks-webhookId\n      x-groupName: Webhooks - merchant level\n      x-sortIndex: 4\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateMerchantWebhookRequest'\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the webhook configuration.\n        name: webhookId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Webhook'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{id}/webhooks/{webhookId}/generateHmac:\n    post:\n      tags:\n      - Webhooks - merchant level\n      summary: Generate an HMAC key\n      description: \"Returns an [HMAC key](https://en.wikipedia.org/wiki/HMAC) for\\\n        \\ the webhook identified in the path. This key allows you to check the integrity\\\n        \\ and the origin of the notifications you receive.By creating an HMAC key,\\\n        \\ you start receiving [HMAC-signed notifications](https://docs.adyen.com/development-resources/webhooks/verify-hmac-signatures#enable-hmac-signatures)\\\n        \\ from Adyen. Find out more about how to [verify HMAC signatures](https://docs.adyen.com/development-resources/webhooks/verify-hmac-signatures).\\n\\\n        \\nTo make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Webhooks read and write\"\n      operationId: post-merchants-id-webhooks-webhookId-generateHmac\n      x-groupName: Webhooks - merchant level\n      x-sortIndex: 6\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: webhookId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenerateHmacKeyResponse'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{id}/webhooks/{webhookId}/test:\n    post:\n      tags:\n      - Webhooks - merchant level\n      summary: Test a webhook\n      description: \"Sends sample notifications to test if the webhook is set up correctly.\\n\\\n        \\nWe send four test notifications for each event code you choose. They cover\\\n        \\ success and failure scenarios for the hard-coded currencies EUR and GBP,\\\n        \\ regardless of the currencies configured in the merchant accounts. For custom\\\n        \\ notifications, we only send the specified custom notification.\\n\\nThe response\\\n        \\ describes the result of the test. The `status` field tells you if the test\\\n        \\ was successful or not. You can use the other fields to troubleshoot unsuccessful\\\n        \\ tests.\\n\\nTo make this request, your API credential must have the following\\\n        \\ [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Webhooks read and write\"\n      operationId: post-merchants-id-webhooks-webhookId-test\n      x-groupName: Webhooks - merchant level\n      x-sortIndex: 7\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TestWebhookRequest'\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Unique identifier of the webhook configuration.\n        name: webhookId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestWebhookResponse'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{merchantId}/billingEntities:\n    get:\n      tags:\n      - Terminal orders - merchant level\n      summary: Get a list of billing entities\n      description: \"Returns the billing entities of the merchant account identified\\\n        \\ in the path.\\nA billing entity is a legal entity where we charge orders\\\n        \\ to. An order for terminal products must contain the ID of a billing entity.\\n\\\n        \\nTo make this request, your API credential must have one of the following\\\n        \\ [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal ordering read\\n* Management API\\u2014Terminal\\\n        \\ ordering read and write\"\n      operationId: get-merchants-merchantId-billingEntities\n      x-groupName: Terminal orders - merchant level\n      x-sortIndex: 3\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: merchantId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The name of the billing entity.\n        name: name\n        in: query\n        required: false\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-merchants-merchantId-billingEntities-success-200'\n              schema:\n                $ref: '#/components/schemas/BillingEntitiesResponse'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{merchantId}/shippingLocations:\n    get:\n      tags:\n      - Terminal orders - merchant level\n      summary: Get a list of shipping locations\n      description: \"Returns the shipping locations for the merchant account identified\\\n        \\ in the path.\\nA shipping location includes the address where orders can\\\n        \\ be delivered, and an ID which you need to specify when ordering terminal\\\n        \\ products.\\n\\nTo make this request, your API credential must have one of\\\n        \\ the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal ordering read\\n* Management API\\u2014Terminal\\\n        \\ ordering read and write\"\n      operationId: get-merchants-merchantId-shippingLocations\n      x-groupName: Terminal orders - merchant level\n      x-sortIndex: 4\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: merchantId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The name of the shipping location.\n        name: name\n        in: query\n        required: false\n        schema:\n          type: string\n      - description: The number of locations to skip.\n        name: offset\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The number of locations to return.\n        name: limit\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-merchants-merchantId-shippingLocations-success-200'\n              schema:\n                $ref: '#/components/schemas/ShippingLocationsResponse'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    post:\n      tags:\n      - Terminal orders - merchant level\n      summary: Create a shipping location\n      description: \"Creates a shipping location for the merchant account identified\\\n        \\ in the path. A shipping location defines an address where orders can be\\\n        \\ shipped to. \\n\\nTo make this request, your API credential must have the\\\n        \\ following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal ordering read and write\"\n      operationId: post-merchants-merchantId-shippingLocations\n      x-groupName: Terminal orders - merchant level\n      x-sortIndex: 5\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              create-shipping-location:\n                $ref: '#/components/examples/post-merchants-merchantId-shippingLocations-create-shipping-location'\n            schema:\n              $ref: '#/components/schemas/ShippingLocation'\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: merchantId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                create-shipping-location:\n                  $ref: '#/components/examples/post-merchants-merchantId-shippingLocations-create-shipping-location-200'\n              schema:\n                $ref: '#/components/schemas/ShippingLocation'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{merchantId}/stores:\n    get:\n      tags:\n      - Account - store level\n      summary: Get a list of stores\n      description: \"Returns a list of stores for the merchant account identified in\\\n        \\ the path. The list is grouped into pages as defined by the query parameters.\\n\\\n        \\nTo make this request, your API credential must have one of the following\\\n        \\ [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Stores read\\n* Management API\\u2014Stores read and write\"\n      operationId: get-merchants-merchantId-stores\n      x-groupName: Account - store level\n      x-sortIndex: 1\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: merchantId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The number of the page to fetch.\n        name: pageNumber\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The number of items to have on a page, maximum 100. The default\n          is 10 items on a page.\n        name: pageSize\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The reference of the store.\n        name: reference\n        in: query\n        required: false\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-merchants-merchantId-stores-success-200'\n              schema:\n                $ref: '#/components/schemas/ListStoresResponse'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    post:\n      tags:\n      - Account - store level\n      summary: Create a store\n      description: \"Creates a store for the merchant account identified in the path.\\n\\\n        \\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Stores read and write\"\n      operationId: post-merchants-merchantId-stores\n      x-groupName: Account - store level\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              post-stores:\n                $ref: '#/components/examples/post-merchants-merchantId-stores-post-stores'\n            schema:\n              $ref: '#/components/schemas/StoreCreationRequest'\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: merchantId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                post-stores:\n                  $ref: '#/components/examples/post-merchants-merchantId-stores-post-stores-200'\n              schema:\n                $ref: '#/components/schemas/Store'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{merchantId}/stores/{reference}/terminalLogos:\n    get:\n      tags:\n      - Terminal settings - store level\n      summary: Get the terminal logo\n      description: \"Returns the logo that is configured for a specific payment terminal\\\n        \\ model at the store identified in the path. You must specify the terminal\\\n        \\ model as a query parameter.\\n\\nThe logo is returned as a Base64-encoded\\\n        \\ string. You need to Base64-decode the string to get the actual image file.\\\n        \\ \\nThis logo applies to all terminals of the specified model under the store,\\\n        \\ unless a different logo is configured for an individual terminal.\\n\\nTo\\\n        \\ make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal settings read\\n* Management API\\u2014Terminal\\\n        \\ settings read and write\"\n      operationId: get-merchants-merchantId-stores-reference-terminalLogos\n      x-groupName: Terminal settings - store level\n      x-sortIndex: 2\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: merchantId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The reference that identifies the store.\n        name: reference\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: 'The terminal model. Possible values: E355, VX675WIFIBT, VX680,\n          VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus,\n          V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T.'\n        name: model\n        in: query\n        required: false\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-merchants-merchantId-stores-reference-terminalLogos-success-200'\n              schema:\n                $ref: '#/components/schemas/Logo'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    patch:\n      tags:\n      - Terminal settings - store level\n      summary: Update the terminal logo\n      description: \"Updates the logo that is configured for a specific payment terminal\\\n        \\ model at the store identified in the path. You must specify the terminal\\\n        \\ model as a query parameter. You can update the logo for only one terminal\\\n        \\ model at a time.\\nThis logo applies to all terminals of the specified model\\\n        \\ under the store, unless a different logo is configured for an individual\\\n        \\ terminal. \\n\\n* To change the logo, specify the image file as a Base64-encoded\\\n        \\ string.\\n* To restore the logo inherited from a higher level (merchant or\\\n        \\ company account), specify an empty logo value.\\n\\nTo make this request,\\\n        \\ your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal settings read and write\"\n      operationId: patch-merchants-merchantId-stores-reference-terminalLogos\n      x-groupName: Terminal settings - store level\n      x-sortIndex: 4\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              remove-logo:\n                $ref: '#/components/examples/patch-merchants-merchantId-stores-reference-terminalLogos-remove-logo'\n              upload-logo:\n                $ref: '#/components/examples/patch-merchants-merchantId-stores-reference-terminalLogos-upload-logo'\n            schema:\n              $ref: '#/components/schemas/Logo'\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: merchantId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The reference that identifies the store.\n        name: reference\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: 'The terminal model. Possible values: E355, VX675WIFIBT, VX680,\n          VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus,\n          V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T'\n        name: model\n        in: query\n        required: false\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                remove-logo:\n                  $ref: '#/components/examples/patch-merchants-merchantId-stores-reference-terminalLogos-remove-logo-200'\n                upload-logo:\n                  $ref: '#/components/examples/patch-merchants-merchantId-stores-reference-terminalLogos-upload-logo-200'\n              schema:\n                $ref: '#/components/schemas/Logo'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{merchantId}/stores/{reference}/terminalSettings:\n    get:\n      tags:\n      - Terminal settings - store level\n      summary: Get terminal settings\n      description: \"Returns the payment terminal settings that are configured for\\\n        \\ the store identified in the path. These settings apply to all terminals\\\n        \\ under the store unless different values are configured for an individual\\\n        \\ terminal.\\n\\nTo make this request, your API credential must have one of\\\n        \\ the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal settings read\\n* Management API\\u2014Terminal\\\n        \\ settings read and write\"\n      operationId: get-merchants-merchantId-stores-reference-terminalSettings\n      x-groupName: Terminal settings - store level\n      x-sortIndex: 1\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: merchantId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The reference that identifies the store.\n        name: reference\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-merchants-merchantId-stores-reference-terminalSettings-success-200'\n              schema:\n                $ref: '#/components/schemas/TerminalSettings'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    patch:\n      tags:\n      - Terminal settings - store level\n      summary: Update terminal settings\n      description: \"Updates payment terminal settings for the store identified in\\\n        \\ the path. These settings apply to all terminals under the store, unless\\\n        \\ different values are configured for an individual terminal.\\n\\n* To change\\\n        \\ a parameter value, include the full object that contains the parameter,\\\n        \\ even if you don't want to change all parameters in the object.\\n* To restore\\\n        \\ a parameter value inherited from a higher level, include the full object\\\n        \\ that contains the parameter, and specify an empty value for the parameter\\\n        \\ or omit the parameter.\\n* Objects that are not included in the request are\\\n        \\ not updated.\\n\\nTo make this request, your API credential must have the\\\n        \\ following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal settings read and write\"\n      operationId: patch-merchants-merchantId-stores-reference-terminalSettings\n      x-groupName: Terminal settings - store level\n      x-sortIndex: 3\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              add-eap-peap-and-psk-wifi-profiles:\n                $ref: '#/components/examples/patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-peap-and-psk-wifi-profiles'\n              add-eap-tls-wifi-profile:\n                $ref: '#/components/examples/patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-tls-wifi-profile'\n            schema:\n              $ref: '#/components/schemas/TerminalSettings'\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: merchantId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The reference that identifies the store.\n        name: reference\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                add-eap-peap-and-psk-wifi-profiles:\n                  $ref: '#/components/examples/patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200'\n                add-eap-tls-wifi-profile:\n                  $ref: '#/components/examples/patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-tls-wifi-profile-200'\n              schema:\n                $ref: '#/components/schemas/TerminalSettings'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{merchantId}/stores/{storeId}:\n    get:\n      tags:\n      - Account - store level\n      summary: Get a store\n      description: \"Returns the details of the store identified in the path.\\n\\nTo\\\n        \\ make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Stores read\\n* Management API\\u2014Stores read and write\"\n      operationId: get-merchants-merchantId-stores-storeId\n      x-groupName: Account - store level\n      x-sortIndex: 2\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: merchantId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The unique identifier of the store.\n        name: storeId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-merchants-merchantId-stores-storeId-success-200'\n              schema:\n                $ref: '#/components/schemas/Store'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    patch:\n      tags:\n      - Account - store level\n      summary: Update a store\n      description: \"Updates the store identified in the path. You can only update\\\n        \\ some store parameters.\\n\\nTo make this request, your API credential must\\\n        \\ have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Stores read and write\"\n      operationId: patch-merchants-merchantId-stores-storeId\n      x-groupName: Account - store level\n      x-sortIndex: 3\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              patch-stores:\n                $ref: '#/components/examples/patch-merchants-merchantId-stores-storeId-patch-stores'\n            schema:\n              $ref: '#/components/schemas/UpdateStoreRequest'\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: merchantId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The unique identifier of the store.\n        name: storeId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                patch-stores:\n                  $ref: '#/components/examples/patch-merchants-merchantId-stores-storeId-patch-stores-200'\n              schema:\n                $ref: '#/components/schemas/Store'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{merchantId}/terminalLogos:\n    get:\n      tags:\n      - Terminal settings - merchant level\n      summary: Get the terminal logo\n      description: \"Returns the logo that is configured for a specific payment terminal\\\n        \\ model at the merchant account identified in the path. You must specify the\\\n        \\ terminal model as a query parameter.\\n\\nThe logo is returned as a Base64-encoded\\\n        \\ string. You need to Base64-decode the string to get the actual image file.\\\n        \\ \\nThis logo applies to all terminals of the specified model under the merchant\\\n        \\ account, unless a different logo is configured at a lower level (store or\\\n        \\ individual terminal).\\n\\nTo make this request, your API credential must\\\n        \\ have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal settings read\\n* Management API\\u2014Terminal\\\n        \\ settings read and write\"\n      operationId: get-merchants-merchantId-terminalLogos\n      x-groupName: Terminal settings - merchant level\n      x-sortIndex: 2\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: merchantId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: 'The terminal model. Possible values: E355, VX675WIFIBT, VX680,\n          VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus,\n          V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T.'\n        name: model\n        in: query\n        required: false\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-merchants-merchantId-terminalLogos-success-200'\n              schema:\n                $ref: '#/components/schemas/Logo'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    patch:\n      tags:\n      - Terminal settings - merchant level\n      summary: Update the terminal logo\n      description: \"Updates the logo for a specific payment terminal model at the\\\n        \\ merchant account identified in the path. You must specify the terminal model\\\n        \\ as a query parameter. You can update the logo for only one terminal model\\\n        \\ at a time. \\nThis logo applies to all terminals of the specified model under\\\n        \\ the merchant account, unless a different logo is configured at a lower level\\\n        \\ (store or individual terminal).\\n\\n* To change the logo, specify the image\\\n        \\ file as a Base64-encoded string.\\n* To restore the logo inherited from the\\\n        \\ company account, specify an empty logo value.\\n\\nTo make this request, your\\\n        \\ API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal settings read and write\"\n      operationId: patch-merchants-merchantId-terminalLogos\n      x-groupName: Terminal settings - merchant level\n      x-sortIndex: 4\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              remove-logo:\n                $ref: '#/components/examples/patch-merchants-merchantId-terminalLogos-remove-logo'\n              upload-logo:\n                $ref: '#/components/examples/patch-merchants-merchantId-terminalLogos-upload-logo'\n            schema:\n              $ref: '#/components/schemas/Logo'\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: merchantId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: 'The terminal model. Allowed values: E355, VX675WIFIBT, VX680,\n          VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus,\n          V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T.'\n        name: model\n        in: query\n        required: false\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                remove-logo:\n                  $ref: '#/components/examples/patch-merchants-merchantId-terminalLogos-remove-logo-200'\n                upload-logo:\n                  $ref: '#/components/examples/patch-merchants-merchantId-terminalLogos-upload-logo-200'\n              schema:\n                $ref: '#/components/schemas/Logo'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{merchantId}/terminalModels:\n    get:\n      tags:\n      - Terminal orders - merchant level\n      summary: Get a list of terminal models\n      description: \"Returns the payment terminal models that merchant account identified\\\n        \\ in the path has access to. The response includes the terminal model ID,\\\n        \\ which can be used as a query parameter when getting a list of terminals\\\n        \\ or a list of products for ordering.\\n\\nTo make this request, your API credential\\\n        \\ must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal ordering read\\n* Management API\\u2014Terminal\\\n        \\ ordering read and write\"\n      operationId: get-merchants-merchantId-terminalModels\n      x-groupName: Terminal orders - merchant level\n      x-sortIndex: 1\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: merchantId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-merchants-merchantId-terminalModels-success-200'\n              schema:\n                $ref: '#/components/schemas/TerminalModelsResponse'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{merchantId}/terminalOrders:\n    get:\n      tags:\n      - Terminal orders - merchant level\n      summary: Get a list of orders\n      description: \"Returns a list of terminal products orders for the merchant account\\\n        \\ identified in the path.\\n\\nTo make this request, your API credential must\\\n        \\ have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal ordering read\\n* Management API\\u2014Terminal\\\n        \\ ordering read and write\"\n      operationId: get-merchants-merchantId-terminalOrders\n      x-groupName: Terminal orders - merchant level\n      x-sortIndex: 7\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - name: merchantId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: Your purchase order number.\n        name: customerOrderReference\n        in: query\n        required: false\n        schema:\n          type: string\n      - description: 'The order status. Possible values (not case-sensitive): Placed,\n          Confirmed, Cancelled, Shipped, Delivered.'\n        name: status\n        in: query\n        required: false\n        schema:\n          type: string\n      - description: The number of orders to skip.\n        name: offset\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The number of orders to return.\n        name: limit\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-merchants-merchantId-terminalOrders-success-200'\n              schema:\n                $ref: '#/components/schemas/TerminalOrdersResponse'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    post:\n      tags:\n      - Terminal orders - merchant level\n      summary: Create an order\n      description: \"Creates an order for payment terminal products for the merchant\\\n        \\ account identified in the path.\\n\\nTo make this request, your API credential\\\n        \\ must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal ordering read and write\"\n      operationId: post-merchants-merchantId-terminalOrders\n      x-groupName: Terminal orders - merchant level\n      x-sortIndex: 6\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              create-order:\n                $ref: '#/components/examples/post-merchants-merchantId-terminalOrders-create-order'\n            schema:\n              $ref: '#/components/schemas/TerminalOrderRequest'\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: merchantId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                create-order:\n                  $ref: '#/components/examples/post-merchants-merchantId-terminalOrders-create-order-200'\n              schema:\n                $ref: '#/components/schemas/TerminalOrder'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{merchantId}/terminalOrders/{orderId}:\n    get:\n      tags:\n      - Terminal orders - merchant level\n      summary: Get an order\n      description: \"Returns the details of the terminal products order identified\\\n        \\ in the path.\\n\\nTo make this request, your API credential must have one\\\n        \\ of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal ordering read\\n* Management API\\u2014Terminal\\\n        \\ ordering read and write\"\n      operationId: get-merchants-merchantId-terminalOrders-orderId\n      x-groupName: Terminal orders - merchant level\n      x-sortIndex: 8\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: merchantId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The unique identifier of the order.\n        name: orderId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-merchants-merchantId-terminalOrders-orderId-success-200'\n              schema:\n                $ref: '#/components/schemas/TerminalOrder'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    patch:\n      tags:\n      - Terminal orders - merchant level\n      summary: Update an order\n      description: \"Updates the terminal products order identified in the path.\\n\\\n        Updating is only possible while the order has the status **Placed**.\\n\\nThe\\\n        \\ request body only needs to contain what you want to change. \\nHowever, to\\\n        \\ update the products in the `items` array, you must provice the entire array.\\\n        \\ For example, if the array has three items:\\n To remove one item, the array\\\n        \\ must include the remaining two items. Or to add one item, the array must\\\n        \\ include all four items.\\n\\nTo make this request, your API credential must\\\n        \\ have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal ordering read and write\"\n      operationId: patch-merchants-merchantId-terminalOrders-orderId\n      x-groupName: Terminal orders - merchant level\n      x-sortIndex: 9\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              update-order:\n                $ref: '#/components/examples/patch-merchants-merchantId-terminalOrders-orderId-update-order'\n            schema:\n              $ref: '#/components/schemas/TerminalOrderRequest'\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: merchantId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The unique identifier of the order.\n        name: orderId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                update-order:\n                  $ref: '#/components/examples/patch-merchants-merchantId-terminalOrders-orderId-update-order-200'\n              schema:\n                $ref: '#/components/schemas/TerminalOrder'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{merchantId}/terminalOrders/{orderId}/cancel:\n    post:\n      tags:\n      - Terminal orders - merchant level\n      summary: Cancel an order\n      description: \"Cancels the terminal products order identified in the path.\\n\\\n        Cancelling is only possible while the order has the status **Placed**.\\nTo\\\n        \\ cancel an order, make a POST call without a request body. The response returns\\\n        \\ the full order details, but with the status changed to **Cancelled**.\\n\\n\\\n        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal ordering read and write\"\n      operationId: post-merchants-merchantId-terminalOrders-orderId-cancel\n      x-groupName: Terminal orders - merchant level\n      x-sortIndex: 10\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: merchantId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The unique identifier of the order.\n        name: orderId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                cancel-order:\n                  $ref: '#/components/examples/post-merchants-merchantId-terminalOrders-orderId-cancel-cancel-order-200'\n              schema:\n                $ref: '#/components/schemas/TerminalOrder'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{merchantId}/terminalProducts:\n    get:\n      tags:\n      - Terminal orders - merchant level\n      summary: Get a list of terminal products\n      description: \"Returns a list of payment terminal packages and parts that the\\\n        \\ merchant account identified in the path has access to.\\nTo filter the list,\\\n        \\ use one or more of the query parameters. The `country` query parameter is\\\n        \\ required.\\n\\nTo make this request, your API credential must have one of\\\n        \\ the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal ordering read\\n* Management API\\u2014Terminal\\\n        \\ ordering read and write\"\n      operationId: get-merchants-merchantId-terminalProducts\n      x-groupName: Terminal orders - merchant level\n      x-sortIndex: 2\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: merchantId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: The country to return products for, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\n          format. For example, **US**\n        name: country\n        in: query\n        required: false\n        schema:\n          type: string\n      - description: The terminal model to return products for. Use the ID returned\n          in the [GET `/terminalModels`](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/terminalModels)\n          response. For example, **Verifone.M400**\n        name: terminalModelId\n        in: query\n        required: false\n        schema:\n          type: string\n      - description: The number of products to skip.\n        name: offset\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The number of products to return.\n        name: limit\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-merchants-merchantId-terminalProducts-success-200'\n              schema:\n                $ref: '#/components/schemas/TerminalProductsResponse'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /merchants/{merchantId}/terminalSettings:\n    get:\n      tags:\n      - Terminal settings - merchant level\n      summary: Get terminal settings\n      description: \"Returns the payment terminal settings that are configured for\\\n        \\ the merchant account identified in the path. These settings apply to all\\\n        \\ terminals under the merchant account unless different values are configured\\\n        \\ at a lower level (store or individual terminal).\\n\\nTo make this request,\\\n        \\ your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal settings read\\n* Management API\\u2014Terminal\\\n        \\ settings read and write\"\n      operationId: get-merchants-merchantId-terminalSettings\n      x-groupName: Terminal settings - merchant level\n      x-sortIndex: 1\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: merchantId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-merchants-merchantId-terminalSettings-success-200'\n              schema:\n                $ref: '#/components/schemas/TerminalSettings'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    patch:\n      tags:\n      - Terminal settings - merchant level\n      summary: Update terminal settings\n      description: \"Updates payment terminal settings for the merchant account identified\\\n        \\ in the path.\\nThese settings apply to all terminals under the merchant account,\\\n        \\ unless different values are configured at a lower level (store or individual\\\n        \\ terminal).\\n\\n* To change a parameter value, include the full object that\\\n        \\ contains the parameter, even if you don't want to change all parameters\\\n        \\ in the object.\\n* To restore a parameter value inherited from a higher level,\\\n        \\ include the full object that contains the parameter, and specify an empty\\\n        \\ value for the parameter or omit the parameter.\\n* Objects that are not included\\\n        \\ in the request are not updated.\\n\\nTo make this request, your API credential\\\n        \\ must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal settings read and write\"\n      operationId: patch-merchants-merchantId-terminalSettings\n      x-groupName: Terminal settings - merchant level\n      x-sortIndex: 3\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              add-eap-peap-and-psk-wifi-profiles:\n                $ref: '#/components/examples/patch-merchants-merchantId-terminalSettings-add-eap-peap-and-psk-wifi-profiles'\n              add-eap-tls-wifi-profile:\n                $ref: '#/components/examples/patch-merchants-merchantId-terminalSettings-add-eap-tls-wifi-profile'\n            schema:\n              $ref: '#/components/schemas/TerminalSettings'\n      parameters:\n      - description: The unique identifier of the merchant account.\n        name: merchantId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                add-eap-peap-and-psk-wifi-profiles:\n                  $ref: '#/components/examples/patch-merchants-merchantId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200'\n                add-eap-tls-wifi-profile:\n                  $ref: '#/components/examples/patch-merchants-merchantId-terminalSettings-add-eap-tls-wifi-profile-200'\n              schema:\n                $ref: '#/components/schemas/TerminalSettings'\n          description: OK - the request has succeeded.\n        '204':\n          description: No Content - the request has been successfully processed, but\n            there is no additional content.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /stores:\n    get:\n      tags:\n      - Account - store level\n      summary: Get a list of stores\n      description: \"Returns a list of stores. The list is grouped into pages as defined\\\n        \\ by the query parameters.\\n\\nTo make this request, your API credential must\\\n        \\ have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Stores read\\n* Management API\\u2014Stores read and write\"\n      operationId: get-stores\n      x-groupName: Account - store level\n      x-sortIndex: 4\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The number of the page to fetch.\n        name: pageNumber\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The number of items to have on a page, maximum 100. The default\n          is 10 items on a page.\n        name: pageSize\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The reference of the store.\n        name: reference\n        in: query\n        required: false\n        schema:\n          type: string\n      - description: The unique identifier of the merchant account.\n        name: merchantId\n        in: query\n        required: false\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-stores-success-200'\n              schema:\n                $ref: '#/components/schemas/ListStoresResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    post:\n      tags:\n      - Account - store level\n      summary: Create a store\n      description: \"Creates a store for the merchant account specified in the request.\\n\\\n        \\nTo make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Stores read and write\"\n      operationId: post-stores\n      x-groupName: Account - store level\n      x-sortIndex: 5\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              post-stores:\n                $ref: '#/components/examples/post-stores-post-stores'\n            schema:\n              $ref: '#/components/schemas/StoreCreationWithMerchantCodeRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                post-stores:\n                  $ref: '#/components/examples/post-stores-post-stores-200'\n              schema:\n                $ref: '#/components/schemas/Store'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /stores/{storeId}:\n    get:\n      tags:\n      - Account - store level\n      summary: Get a store\n      description: \"Returns the details of the store identified in the path.\\n\\nTo\\\n        \\ make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Stores read\\n* Management API\\u2014Stores read and write\"\n      operationId: get-stores-storeId\n      x-groupName: Account - store level\n      x-sortIndex: 6\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the store.\n        name: storeId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-stores-storeId-success-200'\n              schema:\n                $ref: '#/components/schemas/Store'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    patch:\n      tags:\n      - Account - store level\n      summary: Update a store\n      description: \"Updates the store identified in the path.\\nYou can only update\\\n        \\ some store parameters.\\n\\nTo make this request, your API credential must\\\n        \\ have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Stores read and write\"\n      operationId: patch-stores-storeId\n      x-groupName: Account - store level\n      x-sortIndex: 7\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              patch-stores:\n                $ref: '#/components/examples/patch-stores-storeId-patch-stores'\n            schema:\n              $ref: '#/components/schemas/UpdateStoreRequest'\n      parameters:\n      - description: The unique identifier of the store.\n        name: storeId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                patch-stores:\n                  $ref: '#/components/examples/patch-stores-storeId-patch-stores-200'\n              schema:\n                $ref: '#/components/schemas/Store'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /stores/{storeId}/terminalLogos:\n    get:\n      tags:\n      - Terminal settings - store level\n      summary: Get the terminal logo\n      description: \"Returns the logo that is configured for a specific payment terminal\\\n        \\ model at the store identified in the path. The terminal model must be specified\\\n        \\ as a query parameter.\\n \\nThe logo is returned as a Base64-encoded string.\\\n        \\ You need to Base64-decode the string to get the actual image file. \\nThis\\\n        \\ logo applies to all terminals of that model under the store unless a different\\\n        \\ logo is configured for an individual terminal.\\n\\nTo make this request,\\\n        \\ your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal settings read\\n* Management API\\u2014Terminal\\\n        \\ settings read and write\"\n      operationId: get-stores-storeId-terminalLogos\n      x-groupName: Terminal settings - store level\n      x-sortIndex: 2\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the store.\n        name: storeId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: 'The terminal model. Possible values: E355, VX675WIFIBT, VX680,\n          VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus,\n          V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T.'\n        name: model\n        in: query\n        required: false\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-stores-storeId-terminalLogos-success-200'\n              schema:\n                $ref: '#/components/schemas/Logo'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    patch:\n      tags:\n      - Terminal settings - store level\n      summary: Update the terminal logo\n      description: \"Updates the logo that is configured for a specific payment terminal\\\n        \\ model at the store identified in the path. You must specify the terminal\\\n        \\ model as a query parameter. You can update the logo for only one terminal\\\n        \\ model at a time.\\nThis logo applies to all terminals of the specified model\\\n        \\ under the store, unless a different logo is configured for an individual\\\n        \\ terminal. \\n\\n* To change the logo, specify the image file as a Base64-encoded\\\n        \\ string.\\n* To restore the logo inherited from a higher level (merchant or\\\n        \\ company account), specify an empty logo value.\\n\\nTo make this request,\\\n        \\ your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal settings read and write\"\n      operationId: patch-stores-storeId-terminalLogos\n      x-groupName: Terminal settings - store level\n      x-sortIndex: 4\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              remove-logo:\n                $ref: '#/components/examples/patch-stores-storeId-terminalLogos-remove-logo'\n              upload-logo:\n                $ref: '#/components/examples/patch-stores-storeId-terminalLogos-upload-logo'\n            schema:\n              $ref: '#/components/schemas/Logo'\n      parameters:\n      - description: The unique identifier of the store.\n        name: storeId\n        in: path\n        required: true\n        schema:\n          type: string\n      - description: 'The terminal model. Possible values: E355, VX675WIFIBT, VX680,\n          VX690, VX700, VX820, M400, MX925, P400Plus, UX300, UX410, V200cPlus, V240mPlus,\n          V400cPlus, V400m, e280, e285, e285p, S1E, S1EL, S1F2, S1L, S1U, S7T.'\n        name: model\n        in: query\n        required: false\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                remove-logo:\n                  $ref: '#/components/examples/patch-stores-storeId-terminalLogos-remove-logo-200'\n                upload-logo:\n                  $ref: '#/components/examples/patch-stores-storeId-terminalLogos-upload-logo-200'\n              schema:\n                $ref: '#/components/schemas/Logo'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /stores/{storeId}/terminalSettings:\n    get:\n      tags:\n      - Terminal settings - store level\n      summary: Get terminal settings\n      description: \"Returns the payment terminal settings that are configured for\\\n        \\ the store identified in the path. These settings apply to all terminals\\\n        \\ under the store unless different values are configured for an individual\\\n        \\ terminal.\\n\\nTo make this request, your API credential must have one of\\\n        \\ the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal settings read\\n* Management API\\u2014Terminal\\\n        \\ settings read and write\"\n      operationId: get-stores-storeId-terminalSettings\n      x-groupName: Terminal settings - store level\n      x-sortIndex: 1\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the store.\n        name: storeId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-stores-storeId-terminalSettings-success-200'\n              schema:\n                $ref: '#/components/schemas/TerminalSettings'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    patch:\n      tags:\n      - Terminal settings - store level\n      summary: Update terminal settings\n      description: \"Updates payment terminal settings for the store identified in\\\n        \\ the path. These settings apply to all terminals under the store, unless\\\n        \\ different values are configured for an individual terminal.\\n\\n* To change\\\n        \\ a parameter value, include the full object that contains the parameter,\\\n        \\ even if you don't want to change all parameters in the object.\\n* To restore\\\n        \\ a parameter value inherited from a higher level, include the full object\\\n        \\ that contains the parameter, and specify an empty value for the parameter\\\n        \\ or omit the parameter.\\n* Objects that are not included in the request are\\\n        \\ not updated.\\n\\nTo make this request, your API credential must have the\\\n        \\ following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal settings read and write\"\n      operationId: patch-stores-storeId-terminalSettings\n      x-groupName: Terminal settings - store level\n      x-sortIndex: 3\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              add-eap-peap-and-psk-wifi-profiles:\n                $ref: '#/components/examples/patch-stores-storeId-terminalSettings-add-eap-peap-and-psk-wifi-profiles'\n              add-eap-tls-wifi-profile:\n                $ref: '#/components/examples/patch-stores-storeId-terminalSettings-add-eap-tls-wifi-profile'\n            schema:\n              $ref: '#/components/schemas/TerminalSettings'\n      parameters:\n      - description: The unique identifier of the store.\n        name: storeId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                add-eap-peap-and-psk-wifi-profiles:\n                  $ref: '#/components/examples/patch-stores-storeId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200'\n                add-eap-tls-wifi-profile:\n                  $ref: '#/components/examples/patch-stores-storeId-terminalSettings-add-eap-tls-wifi-profile-200'\n              schema:\n                $ref: '#/components/schemas/TerminalSettings'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /terminals:\n    get:\n      tags:\n      - Terminals - terminal level\n      summary: Get a list of terminals\n      description: \"Returns the payment terminals that the API credential has access\\\n        \\ to and that match the query parameters. \\nWhen using `searchQuery`, other\\\n        \\ query parameters are ignored.\\n\\nTo make this request, your API credential\\\n        \\ must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal actions read\\n* Management API\\u2014Terminal\\\n        \\ actions read and write\"\n      operationId: get-terminals\n      x-groupName: Terminals - terminal level\n      x-sortIndex: 1\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: Returns terminals with an ID that contains the specified string.\n          If present, other query parameters are ignored.\n        name: searchQuery\n        in: query\n        required: false\n        schema:\n          type: string\n      - description: Returns terminals located in the countries specified by their\n          [two-letter country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n        name: countries\n        in: query\n        required: false\n        schema:\n          type: string\n      - description: Returns terminals that belong to the merchant accounts specified\n          by their unique merchant account ID.\n        name: merchantIds\n        in: query\n        required: false\n        schema:\n          type: string\n      - description: Returns terminals that are assigned to the [stores](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/stores)\n          specified by their unique store ID.\n        name: storeIds\n        in: query\n        required: false\n        schema:\n          type: string\n      - description: Returns terminals of the [models](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/companies/{companyId}/terminalModels)\n          specified in the format *brand.model*.\n        name: brandModels\n        in: query\n        required: false\n        schema:\n          type: string\n      - description: The number of the page to fetch.\n        name: pageNumber\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      - description: The number of items to have on a page, maximum 100. The default\n          is 20 items on a page.\n        name: pageSize\n        in: query\n        required: false\n        schema:\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTerminalsResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /terminals/scheduleActions:\n    post:\n      tags:\n      - Terminal actions - terminal level\n      summary: Create a terminal action\n      description: \"Schedules a [terminal action](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api)\\\n        \\ by specifying the action and the terminals that the action must be applied\\\n        \\ to. \\n\\nThe following restrictions apply:\\n* You can schedule only one action\\\n        \\ at a time. For example, to install a new app version and remove an old app\\\n        \\ version, you have to make two API requests. \\n* The maximum number of terminals\\\n        \\ in a request is **100**. For example, to apply an action to 250 terminals,\\\n        \\ you have to divide the terminals over three API requests. \\n* If there is\\\n        \\ an error with one or more terminal IDs in the request, the action is scheduled\\\n        \\ for none of the terminals. You need to fix the error and try again. \\n\\n\\\n        To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal actions read and write\"\n      operationId: post-terminals-scheduleActions\n      x-groupName: Terminal actions - terminal level\n      x-sortIndex: 1\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              install-app:\n                $ref: '#/components/examples/post-terminals-scheduleActions-install-app'\n              uninstall-cert:\n                $ref: '#/components/examples/post-terminals-scheduleActions-uninstall-cert'\n              verification-error:\n                $ref: '#/components/examples/post-terminals-scheduleActions-verification-error'\n            schema:\n              $ref: '#/components/schemas/ScheduleTerminalActionsRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                install-app:\n                  $ref: '#/components/examples/post-terminals-scheduleActions-install-app-200'\n                uninstall-cert:\n                  $ref: '#/components/examples/post-terminals-scheduleActions-uninstall-cert-200'\n              schema:\n                $ref: '#/components/schemas/ScheduleTerminalActionsResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              examples:\n                verification-error:\n                  $ref: '#/components/examples/post-terminals-scheduleActions-verification-error-422'\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /terminals/{terminalId}/terminalLogos:\n    get:\n      tags:\n      - Terminal settings - terminal level\n      summary: Get the terminal logo\n      description: \"Returns the logo that is configured for the payment terminal identified\\\n        \\ in the path.\\nThe logo is returned as a Base64-encoded string. You need\\\n        \\ to Base64-decode the string to get the actual image file.\\n\\nTo make this\\\n        \\ request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal settings read\\n* Management API\\u2014Terminal\\\n        \\ settings read and write\"\n      operationId: get-terminals-terminalId-terminalLogos\n      x-groupName: Terminal settings - terminal level\n      x-sortIndex: 4\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the payment terminal.\n        name: terminalId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-terminals-terminalId-terminalLogos-success-200'\n              schema:\n                $ref: '#/components/schemas/Logo'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    patch:\n      tags:\n      - Terminal settings - terminal level\n      summary: Update the logo\n      description: \"Updates the logo for the payment terminal identified in the path.\\n\\\n        \\n* To change the logo, specify the image file as a Base64-encoded string.\\n\\\n        * To restore the logo inherited from a higher level (store, merchant account,\\\n        \\ or company account), specify an empty logo value.\\n\\nTo make this request,\\\n        \\ your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal settings read and write\"\n      operationId: patch-terminals-terminalId-terminalLogos\n      x-groupName: Terminal settings - terminal level\n      x-sortIndex: 6\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              remove-logo:\n                $ref: '#/components/examples/patch-terminals-terminalId-terminalLogos-remove-logo'\n              upload-logo:\n                $ref: '#/components/examples/patch-terminals-terminalId-terminalLogos-upload-logo'\n            schema:\n              $ref: '#/components/schemas/Logo'\n      parameters:\n      - description: The unique identifier of the payment terminal.\n        name: terminalId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                remove-logo:\n                  $ref: '#/components/examples/patch-terminals-terminalId-terminalLogos-remove-logo-200'\n                upload-logo:\n                  $ref: '#/components/examples/patch-terminals-terminalId-terminalLogos-upload-logo-200'\n              schema:\n                $ref: '#/components/schemas/Logo'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /terminals/{terminalId}/terminalSettings:\n    get:\n      tags:\n      - Terminal settings - terminal level\n      summary: Get terminal settings\n      description: \"Returns the settings that are configured for the payment terminal\\\n        \\ identified in the path.\\n\\nTo make this request, your API credential must\\\n        \\ have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal settings read\\n* Management API\\u2014Terminal\\\n        \\ settings read and write\"\n      operationId: get-terminals-terminalId-terminalSettings\n      x-groupName: Terminal settings - terminal level\n      x-sortIndex: 3\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      parameters:\n      - description: The unique identifier of the payment terminal.\n        name: terminalId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: '#/components/examples/get-terminals-terminalId-terminalSettings-success-200'\n              schema:\n                $ref: '#/components/schemas/TerminalSettings'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\n    patch:\n      tags:\n      - Terminal settings - terminal level\n      summary: Update terminal settings\n      description: \"Updates the settings that are configured for the payment terminal\\\n        \\ identified in the path.\\n\\n* To change a parameter value, include the full\\\n        \\ object that contains the parameter, even if you don't want to change all\\\n        \\ parameters in the object.\\n* To restore a parameter value inherited from\\\n        \\ a higher level, include the full object that contains the parameter, and\\\n        \\ specify an empty value for the parameter or omit the parameter.\\n* Objects\\\n        \\ that are not included in the request are not updated.\\n\\nTo make this request,\\\n        \\ your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):\\n\\\n        * Management API\\u2014Terminal settings read and write\"\n      operationId: patch-terminals-terminalId-terminalSettings\n      x-groupName: Terminal settings - terminal level\n      x-sortIndex: 5\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            examples:\n              add-eap-peap-and-psk-wifi-profiles:\n                $ref: '#/components/examples/patch-terminals-terminalId-terminalSettings-add-eap-peap-and-psk-wifi-profiles'\n              add-eap-tls-wifi-profile:\n                $ref: '#/components/examples/patch-terminals-terminalId-terminalSettings-add-eap-tls-wifi-profile'\n            schema:\n              $ref: '#/components/schemas/TerminalSettings'\n      parameters:\n      - description: The unique identifier of the payment terminal.\n        name: terminalId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                add-eap-peap-and-psk-wifi-profiles:\n                  $ref: '#/components/examples/patch-terminals-terminalId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200'\n                add-eap-tls-wifi-profile:\n                  $ref: '#/components/examples/patch-terminals-terminalId-terminalSettings-add-eap-tls-wifi-profile-200'\n              schema:\n                $ref: '#/components/schemas/TerminalSettings'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestServiceError'\n          description: Internal Server Error - the server could not process the request.\ncomponents:\n  schemas:\n    AdditionalSettings:\n      properties:\n        includeEventCodes:\n          description: 'Object containing list of event codes for which the notifcation\n            will be sent. '\n          items:\n            type: string\n          type: array\n        properties:\n          additionalProperties:\n            type: boolean\n          description: 'Object containing boolean key-value pairs. The key can be\n            any [standard webhook additional setting](https://docs.adyen.com/development-resources/webhooks/additional-settings),\n            and the value indicates if the setting is enabled.\n\n            For example, `captureDelayHours`: **true** means the standard notifications\n            you get will contain the number of hours remaining until the payment will\n            be captured.'\n          type: object\n    AdditionalSettingsResponse:\n      properties:\n        excludeEventCodes:\n          description: 'Object containing list of event codes for which the notifcation\n            will not be sent. '\n          items:\n            type: string\n          type: array\n        includeEventCodes:\n          description: 'Object containing list of event codes for which the notifcation\n            will be sent. '\n          items:\n            type: string\n          type: array\n        properties:\n          additionalProperties:\n            type: boolean\n          description: 'Object containing boolean key-value pairs. The key can be\n            any [standard webhook additional setting](https://docs.adyen.com/development-resources/webhooks/additional-settings),\n            and the value indicates if the setting is enabled.\n\n            For example, `captureDelayHours`: **true** means the standard notifications\n            you get will contain the number of hours remaining until the payment will\n            be captured.'\n          type: object\n    Address:\n      properties:\n        city:\n          description: The name of the city.\n          type: string\n        companyName:\n          description: The name of the company.\n          type: string\n        country:\n          description: The two-letter country code, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\n            format.\n          type: string\n        postalCode:\n          description: The postal code.\n          type: string\n        stateOrProvince:\n          description: \"The state or province as defined in [ISO 3166-2](https://www.iso.org/standard/72483.html).\\\n            \\ For example, **ON** for Ontario, Canada. \\n\\nApplicable for the following\\\n            \\ countries:\\n- Australia\\n- Brazil\\n- Canada\\n- India\\n- Mexico\\n- New\\\n            \\ Zealand\\n- United States\"\n          type: string\n        streetAddress:\n          description: The name of the street, and the house or building number.\n          type: string\n        streetAddress2:\n          description: Additional address details, if any.\n          type: string\n    Address2:\n      properties:\n        city:\n          description: The name of the city.\n          type: string\n        country:\n          description: The two-letter country code in [ISO_3166-1_alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\n            format.\n          type: string\n        line1:\n          description: The street address.\n          type: string\n        line2:\n          description: Second address line.\n          type: string\n        line3:\n          description: Third address line.\n          type: string\n        postalCode:\n          description: The postal code.\n          type: string\n        stateOrProvince:\n          description: \"The state or province code as defined in [ISO 3166-2](https://www.iso.org/standard/72483.html).\\\n            \\ For example, **ON** for Ontario, Canada.\\n\\nRequired for the following\\\n            \\ countries:\\n - Australia\\n- Brazil\\n- Canada\\n- India\\n- Mexico\\n- New\\\n            \\ Zealand\\n- United States\"\n          type: string\n      required:\n      - country\n    AllowedOrigin:\n      properties:\n        _links:\n          description: References to resources linked to the allowed origin.\n          $ref: '#/components/schemas/Links'\n        domain:\n          description: Domain of the allowed origin.\n          example: https://adyen.com\n          type: string\n        id:\n          description: Unique identifier of the allowed origin.\n          type: string\n      required:\n      - domain\n    AllowedOriginsResponse:\n      properties:\n        data:\n          description: List of allowed origins.\n          items:\n            $ref: '#/components/schemas/AllowedOrigin'\n          type: array\n    Amount:\n      properties:\n        currency:\n          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).\n          type: string\n        value:\n          description: The price of the item.\n          $ref: '#/components/schemas/BigDecimal'\n    Amount2:\n      properties:\n        currency:\n          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).\n          maxLength: 3\n          minLength: 3\n          type: string\n        value:\n          description: The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n          format: int64\n          type: integer\n      required:\n      - value\n      - currency\n    AndroidApp:\n      properties:\n        description:\n          description: The description that was provided when uploading the app. The\n            description is not shown on the terminal.\n          type: string\n        id:\n          description: The unique identifier of the app.\n          type: string\n        label:\n          description: The app name that is shown on the terminal.\n          type: string\n        packageName:\n          description: The package name of the app.\n          type: string\n        status:\n          description: \"The status of the app. Possible values: \\n* `processing`:\\\n            \\ The app is being signed and converted to a format that the terminal\\\n            \\ can handle.\\n* `error`: Something went wrong. Check that the app matches\\\n            \\ the [requirements](https://docs.adyen.com/point-of-sale/android-terminals/app-requirements).\\n\\\n            * `invalid`: There is something wrong with the APK file of the app.\\n\\\n            * `ready`: The app has been signed and converted.\\n* `archived`: The app\\\n            \\ is no longer available.\"\n          type: string\n        versionCode:\n          description: The internal version number of the app.\n          format: int32\n          type: integer\n        versionName:\n          description: The app version number that is shown on the terminal.\n          type: string\n      required:\n      - id\n      - status\n    AndroidAppsResponse:\n      properties:\n        data:\n          description: Apps uploaded for Android payment terminals.\n          items:\n            $ref: '#/components/schemas/AndroidApp'\n          type: array\n    AndroidCertificate:\n      properties:\n        description:\n          description: The description that was provided when uploading the certificate.\n          type: string\n        extension:\n          description: The file format of the certificate, as indicated by the file\n            extension. For example, **.cert** or **.pem**.\n          type: string\n        id:\n          description: The unique identifier of the certificate.\n          type: string\n        name:\n          description: The file name of the certificate. For example, **mycert**.\n          type: string\n        notAfter:\n          description: The date when the certificate stops to be valid.\n          format: date-time\n          type: string\n        notBefore:\n          description: The date when the certificate starts to be valid.\n          format: date-time\n          type: string\n        status:\n          description: The status of the certificate.\n          type: string\n      required:\n      - id\n    AndroidCertificatesResponse:\n      properties:\n        data:\n          description: Uploaded Android certificates for Android payment terminals.\n          items:\n            $ref: '#/components/schemas/AndroidCertificate'\n          type: array\n    ApiCredential:\n      properties:\n        _links:\n          description: References to resources linked to the API credential.\n          $ref: '#/components/schemas/ApiCredentialLinks'\n        active:\n          description: Indicates if the API credential is enabled. Must be set to\n            **true** to use the credential in your integration.\n          type: boolean\n        allowedIpAddresses:\n          description: 'List of IP addresses from which your client can make requests.\n\n\n            If the list is empty, we allow requests from any IP.\n\n            If the list is not empty and we get a request from an IP which is not\n            on the list, you get a security error.'\n          items:\n            type: string\n          type: array\n        allowedOrigins:\n          description: List containing the [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins)\n            linked to the API credential.\n          items:\n            $ref: '#/components/schemas/AllowedOrigin'\n          type: array\n        clientKey:\n          description: Public key used for [client-side authentication](https://docs.adyen.com/development-resources/client-side-authentication).\n            The client key is required for Drop-in and Components integrations.\n          type: string\n        description:\n          description: Description of the API credential.\n          maxLength: 50\n          type: string\n        id:\n          description: Unique identifier of the API credential.\n          type: string\n        roles:\n          description: List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1)\n            for the API credential.\n          items:\n            type: string\n          type: array\n        username:\n          description: The name of the [API credential](https://docs.adyen.com/development-resources/api-credentials),\n            for example **ws@Company.TestCompany**.\n          type: string\n      required:\n      - id\n      - username\n      - clientKey\n      - allowedIpAddresses\n      - roles\n      - active\n    ApiCredentialLinks:\n      properties:\n        allowedOrigins:\n          description: List of allowed origins.\n          $ref: '#/components/schemas/LinksElement'\n        company:\n          description: Company account that the API credential is linked to. Only\n            present for company-level webhooks.\n          $ref: '#/components/schemas/LinksElement'\n        generateApiKey:\n          description: 'Generates a new API key. When you generate a new one, the\n            existing key remains valid for 24 hours. '\n          $ref: '#/components/schemas/LinksElement'\n        generateClientKey:\n          description: Generates a new client key, used to authenticate client-side\n            requests. When you generate a new one, the existing key remains valid\n            for 24 hours.\n          $ref: '#/components/schemas/LinksElement'\n        merchant:\n          description: The merchant account that the API credential is linked to.\n            Only present for merchant-level API credentials.\n          $ref: '#/components/schemas/LinksElement'\n        self:\n          description: Link to the resource itself.\n          $ref: '#/components/schemas/LinksElement'\n      required:\n      - self\n    ApplePayInfo:\n      properties:\n        domains:\n          description: The list of merchant domains. For more information, see [Apple\n            Pay documentation](https://docs.adyen.com/payment-methods/apple-pay/enable-apple-pay#register-merchant-domain).\n          items:\n            type: string\n          type: array\n      required:\n      - domains\n    BcmcInfo:\n      properties:\n        enableBcmcMobile:\n          description: Indicates if [Bancontact mobile](https://docs.adyen.com/payment-methods/bancontact/bancontact-mobile)\n            is enabled.\n          type: boolean\n    BigDecimal: {}\n    BillingEntitiesResponse:\n      properties:\n        data:\n          description: List of legal entities that can be used for the billing of\n            orders.\n          items:\n            $ref: '#/components/schemas/BillingEntity'\n          type: array\n    BillingEntity:\n      properties:\n        address:\n          description: The address details of the billing entity.\n          $ref: '#/components/schemas/Address'\n        email:\n          description: The email address of the billing entity.\n          type: string\n        id:\n          description: The unique identifier of the billing entity, for use as `billingEntityId`\n            when creating an order.\n          type: string\n        name:\n          description: The unique name of the billing entity.\n          type: string\n        taxId:\n          description: The tax number of the billing entity.\n          type: string\n    CardholderReceipt:\n      properties:\n        headerForAuthorizedReceipt:\n          description: A custom header to show on the shopper receipt for an authorised\n            transaction. Allows one or two comma-separated header lines, and blank\n            lines. For example, `header,header,filler`\n          type: string\n    Company:\n      properties:\n        _links:\n          description: References to resources connected with this company.\n          $ref: '#/components/schemas/CompanyLinks'\n        dataCenters:\n          description: 'List of available data centers.\n\n\n            Adyen has several data centers around the world.In the URL that you use\n            for making API requests, we recommend you use the live URL prefix from\n            the data center closest to your shoppers.'\n          items:\n            $ref: '#/components/schemas/DataCenter'\n          type: array\n        id:\n          description: The unique identifier of the company account.\n          type: string\n        name:\n          description: The legal or trading name of the company.\n          type: string\n        status:\n          description: 'The status of the company account.\n\n\n            Possible values:\n\n\n            * **Active**: Users can log in. Processing and payout capabilities depend\n            on the status of the merchant account.\n\n            * **Inactive**: Users can log in. Payment processing and payouts are disabled.\n\n            * **Closed**: The company account is closed and this cannot be reversed.\n            Users cannot log in. Payment processing and payouts are disabled.'\n          type: string\n    CompanyApiCredential:\n      properties:\n        _links:\n          description: References to resources linked to the API credential.\n          $ref: '#/components/schemas/ApiCredentialLinks'\n        active:\n          description: Indicates if the API credential is enabled. Must be set to\n            **true** to use the credential in your integration.\n          type: boolean\n        allowedIpAddresses:\n          description: 'List of IP addresses from which your client can make requests.\n\n\n            If the list is empty, we allow requests from any IP.\n\n            If the list is not empty and we get a request from an IP which is not\n            on the list, you get a security error.'\n          items:\n            type: string\n          type: array\n        allowedOrigins:\n          description: List containing the [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins)\n            linked to the API credential.\n          items:\n            $ref: '#/components/schemas/AllowedOrigin'\n          type: array\n        associatedMerchantAccounts:\n          description: List of merchant accounts that the API credential has access\n            to.\n          items:\n            type: string\n          type: array\n        clientKey:\n          description: Public key used for [client-side authentication](https://docs.adyen.com/development-resources/client-side-authentication).\n            The client key is required for Drop-in and Components integrations.\n          type: string\n        description:\n          description: Description of the API credential.\n          maxLength: 50\n          type: string\n        id:\n          description: Unique identifier of the API credential.\n          type: string\n        roles:\n          description: List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1)\n            for the API credential.\n          items:\n            type: string\n          type: array\n        username:\n          description: The name of the [API credential](https://docs.adyen.com/development-resources/api-credentials),\n            for example **ws@Company.TestCompany**.\n          type: string\n      required:\n      - id\n      - username\n      - clientKey\n      - allowedIpAddresses\n      - roles\n      - active\n    CompanyLinks:\n      properties:\n        apiCredentials:\n          $ref: '#/components/schemas/LinksElement'\n        self:\n          description: Link to the resource itself.\n          $ref: '#/components/schemas/LinksElement'\n        users:\n          $ref: '#/components/schemas/LinksElement'\n        webhooks:\n          $ref: '#/components/schemas/LinksElement'\n      required:\n      - self\n    CompanyUser:\n      properties:\n        _links:\n          description: References to resources connected with this user.\n          $ref: '#/components/schemas/Links'\n        accountGroups:\n          description: The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups)\n            associated with this user.\n          items:\n            type: string\n          type: array\n        active:\n          description: Indicates whether this user is active.\n          type: boolean\n        associatedMerchantAccounts:\n          description: The list of [merchant accounts](https://docs.adyen.com/account/account-structure#merchant-accounts)\n            associated with this user.\n          items:\n            type: string\n          type: array\n        email:\n          description: The email address of the user.\n          type: string\n        id:\n          description: The unique identifier of the user.\n          type: string\n        name:\n          description: The user's full name.\n          $ref: '#/components/schemas/Name'\n        roles:\n          description: The list of [roles](https://docs.adyen.com/account/user-roles)\n            for this user.\n          items:\n            type: string\n          type: array\n        timeZoneCode:\n          description: The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)\n            of the time zone of the user. For example, **Europe/Amsterdam**.\n          type: string\n        username:\n          description: The username for this user.\n          maxLength: 255\n          minLength: 1\n          type: string\n      required:\n      - id\n      - email\n      - timeZoneCode\n      - username\n      - roles\n    Configuration:\n      properties:\n        brand:\n          description: 'Payment method, like **eftpos_australia** or **mc**. See the\n            [possible values](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api). '\n          type: string\n        currencies:\n          description: Currency, and surcharge percentage or amount.\n          items:\n            $ref: '#/components/schemas/Currency'\n          type: array\n        sources:\n          description: 'Funding source. Possible values:\n\n            * **Credit**\n\n            * **Debit**'\n          enum:\n          - Debit\n          - Credit\n          items:\n            type: string\n          type: string\n      required:\n      - brand\n      - currencies\n    Connectivity:\n      properties:\n        simcardStatus:\n          description: 'Indicates the status of the SIM card in the payment terminal.\n            Can be updated and received only at terminal level, and only for models\n            that support cellular connectivity.\n\n\n            Possible values:\n\n            * **ACTIVATED**: the SIM card is activated. Cellular connectivity may\n            still need to be enabled on the terminal itself, in the **Network** settings.\n\n            * **INVENTORY**: the SIM card is not activated. The terminal can''t use\n            cellular connectivity.'\n          enum:\n          - ACTIVATED\n          - INVENTORY\n          type: string\n    Contact:\n      properties:\n        email:\n          description: The individual's email address.\n          type: string\n        firstName:\n          description: The individual's first name.\n          type: string\n        infix:\n          description: The infix in the individual's name, if any.\n          type: string\n        lastName:\n          description: The individual's last name.\n          type: string\n        phoneNumber:\n          description: The individual's phone number, specified as 10-14 digits with\n            an optional `+` prefix.\n          type: string\n    CreateAllowedOriginRequest:\n      properties:\n        _links:\n          description: References to resources linked to the allowed origin.\n          $ref: '#/components/schemas/Links'\n        domain:\n          description: Domain of the allowed origin.\n          example: https://adyen.com\n          type: string\n        id:\n          description: Unique identifier of the allowed origin.\n          type: string\n      required:\n      - domain\n    CreateApiCredentialResponse:\n      properties:\n        _links:\n          description: References to resources linked to the API credential.\n          $ref: '#/components/schemas/ApiCredentialLinks'\n        active:\n          description: Indicates if the API credential is enabled. Must be set to\n            **true** to use the credential in your integration.\n          type: boolean\n        allowedIpAddresses:\n          description: 'List of IP addresses from which your client can make requests.\n\n\n            If the list is empty, we allow requests from any IP.\n\n            If the list is not empty and we get a request from an IP which is not\n            on the list, you get a security error.'\n          items:\n            type: string\n          type: array\n        allowedOrigins:\n          description: List containing the [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins)\n            linked to the API credential.\n          items:\n            $ref: '#/components/schemas/AllowedOrigin'\n          type: array\n        apiKey:\n          description: The API key for the API credential that was created.\n          type: string\n        clientKey:\n          description: Public key used for [client-side authentication](https://docs.adyen.com/development-resources/client-side-authentication).\n            The client key is required for Drop-in and Components integrations.\n          type: string\n        description:\n          description: Description of the API credential.\n          maxLength: 50\n          type: string\n        id:\n          description: Unique identifier of the API credential.\n          type: string\n        password:\n          description: The password for the API credential that was created.\n          type: string\n        roles:\n          description: List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1)\n            for the API credential.\n          items:\n            type: string\n          type: array\n        username:\n          description: The name of the [API credential](https://docs.adyen.com/development-resources/api-credentials),\n            for example **ws@Company.TestCompany**.\n          type: string\n      required:\n      - id\n      - username\n      - clientKey\n      - allowedIpAddresses\n      - roles\n      - active\n      - password\n      - apiKey\n    CreateCompanyApiCredentialRequest:\n      properties:\n        allowedOrigins:\n          description: List of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins)\n            for the new API credential.\n          items:\n            type: string\n          type: array\n        associatedMerchantAccounts:\n          description: List of merchant accounts that the API credential has access\n            to.\n          items:\n            type: string\n          type: array\n        description:\n          description: Description of the API credential.\n          type: string\n        roles:\n          description: List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1)\n            of the API credential.\n          items:\n            type: string\n          type: array\n    CreateCompanyApiCredentialResponse:\n      properties:\n        _links:\n          description: References to resources linked to the API credential.\n          $ref: '#/components/schemas/ApiCredentialLinks'\n        active:\n          description: Indicates if the API credential is enabled. Must be set to\n            **true** to use the credential in your integration.\n          type: boolean\n        allowedIpAddresses:\n          description: 'List of IP addresses from which your client can make requests.\n\n\n            If the list is empty, we allow requests from any IP.\n\n            If the list is not empty and we get a request from an IP which is not\n            on the list, you get a security error.'\n          items:\n            type: string\n          type: array\n        allowedOrigins:\n          description: List containing the [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins)\n            linked to the API credential.\n          items:\n            $ref: '#/components/schemas/AllowedOrigin'\n          type: array\n        apiKey:\n          description: The API key for the API credential that was created.\n          type: string\n        associatedMerchantAccounts:\n          description: List of merchant accounts that the API credential has access\n            to.\n          items:\n            type: string\n          type: array\n        clientKey:\n          description: Public key used for [client-side authentication](https://docs.adyen.com/development-resources/client-side-authentication).\n            The client key is required for Drop-in and Components integrations.\n          type: string\n        description:\n          description: Description of the API credential.\n          maxLength: 50\n          type: string\n        id:\n          description: Unique identifier of the API credential.\n          type: string\n        password:\n          description: The password for the API credential that was created.\n          type: string\n        roles:\n          description: List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1)\n            for the API credential.\n          items:\n            type: string\n          type: array\n        username:\n          description: The name of the [API credential](https://docs.adyen.com/development-resources/api-credentials),\n            for example **ws@Company.TestCompany**.\n          type: string\n      required:\n      - id\n      - username\n      - clientKey\n      - allowedIpAddresses\n      - roles\n      - active\n      - password\n      - apiKey\n      - associatedMerchantAccounts\n    CreateCompanyUserRequest:\n      properties:\n        accountGroups:\n          description: The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups)\n            associated with this user.\n          items:\n            type: string\n          type: array\n        associatedMerchantAccounts:\n          description: The list of [merchant accounts](https://docs.adyen.com/account/account-structure#merchant-accounts)\n            associated with this user.\n          items:\n            type: string\n          type: array\n        email:\n          description: The email address of the user.\n          type: string\n        name:\n          description: \"The user's full name.\\n\\nAllowed length: 1\\u201480 characters.\"\n          maxLength: 80\n          minLength: 1\n          $ref: '#/components/schemas/Name'\n        roles:\n          description: The list of [roles](https://docs.adyen.com/account/user-roles)\n            for this user.\n          items:\n            type: string\n          type: array\n        timeZoneCode:\n          description: The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)\n            of the time zone of the user. For example, **Europe/Amsterdam**.\n          type: string\n        username:\n          description: 'The username for this user. Allowed length: 255 alphanumeric\n            characters.'\n          maxLength: 255\n          minLength: 1\n          type: string\n      required:\n      - name\n      - email\n      - username\n    CreateCompanyUserResponse:\n      properties:\n        _links:\n          description: References to resources connected with this user.\n          $ref: '#/components/schemas/Links'\n        accountGroups:\n          description: The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups)\n            associated with this user.\n          items:\n            type: string\n          type: array\n        active:\n          description: Indicates whether this user is active.\n          type: boolean\n        associatedMerchantAccounts:\n          description: The list of [merchant accounts](https://docs.adyen.com/account/account-structure#merchant-accounts)\n            associated with this user.\n          items:\n            type: string\n          type: array\n        email:\n          description: The email address of the user.\n          type: string\n        id:\n          description: The unique identifier of the user.\n          type: string\n        name:\n          description: The user's full name.\n          $ref: '#/components/schemas/Name'\n        roles:\n          description: The list of [roles](https://docs.adyen.com/account/user-roles)\n            for this user.\n          items:\n            type: string\n          type: array\n        timeZoneCode:\n          description: The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)\n            of the time zone of the user. For example, **Europe/Amsterdam**.\n          type: string\n        username:\n          description: The username for this user.\n          maxLength: 255\n          minLength: 1\n          type: string\n      required:\n      - id\n      - email\n      - timeZoneCode\n      - username\n      - roles\n    CreateCompanyWebhookRequest:\n      properties:\n        acceptsExpiredCertificate:\n          description: 'Indicates if expired SSL certificates are accepted. Default\n            value: **false**.'\n          type: boolean\n        acceptsSelfSignedCertificate:\n          description: 'Indicates if self-signed SSL certificates are accepted. Default\n            value: **false**.'\n          type: boolean\n        acceptsUntrustedRootCertificate:\n          description: 'Indicates if untrusted SSL certificates are accepted. Default\n            value: **false**.'\n          type: boolean\n        active:\n          description: Indicates if the webhook configuration is active. The field\n            must be **true** for us to send webhooks about events related an account.\n          type: boolean\n        additionalSettings:\n          description: Additional shopper and transaction information to be included\n            in your [standard notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes).\n            Find out more about the available [additional settings](https://docs.adyen.com/development-resources/webhooks/additional-settings).\n          $ref: '#/components/schemas/AdditionalSettings'\n        communicationFormat:\n          description: 'Format or protocol for receiving webhooks. Possible values:\n\n            * **soap**\n\n            * **http**\n\n            * **json** '\n          enum:\n          - HTTP\n          - JSON\n          - SOAP\n          example: SOAP\n          type: string\n        description:\n          description: Your description for this webhook configuration.\n          type: string\n        filterMerchantAccountType:\n          description: 'Shows how merchant accounts are filtered when configuring\n            the webhook. Possible values:\n\n            * **includeAccounts**: The webhook is configured for the merchant accounts\n            listed in `filterMerchantAccounts`.\n\n            * **excludeAccounts**: The webhook is not configured for the merchant\n            accounts listed in `filterMerchantAccounts`.\n\n            * **allAccounts**: Includes all merchant accounts, and does not require\n            specifying `filterMerchantAccounts`.'\n          enum:\n          - EXCLUDE_LIST\n          - INCLUDE_ALL\n          - INCLUDE_LIST\n          type: string\n        filterMerchantAccounts:\n          description: 'A list of merchant account names that are included or excluded\n            from receiving the webhook. Inclusion or exclusion is based on the value\n            defined for `filterMerchantAccountType`.\n\n\n            Required if `filterMerchantAccountType` is either:\n\n            * **includeAccounts**\n\n            * **excludeAccounts**\n\n\n            Not needed for `filterMerchantAccountType`: **allAccounts**.'\n          items:\n            type: string\n          type: array\n        networkType:\n          description: 'Network type for Terminal API notification webhooks. Possible\n            values:\n\n            * **public**\n\n            * **local**\n\n\n            Default Value: **public**.'\n          enum:\n          - LOCAL\n          - PUBLIC\n          type: string\n        password:\n          description: Password to access the webhook URL.\n          type: string\n        populateSoapActionHeader:\n          description: 'Indicates if the SOAP action header needs to be populated.\n            Default value: **false**.\n\n\n            Only applies if `communicationFormat`: **soap**.'\n          type: boolean\n        sslVersion:\n          description: 'SSL version to access the public webhook URL specified in\n            the `url` field. Possible values:\n\n            * **TLSv1.2**\n\n            * **SSL**\n\n            * **SSLv3**\n\n            * **TLS**\n\n            * **TLSv1**\n\n            * **TLSv1.1**\n\n\n            If not specified, the webhook will use `sslVersion`: **TLSv1.2**.'\n          enum:\n          - HTTP\n          - SSL\n          - SSLV3\n          - SSL_INSECURE_CIPHERS\n          - TLS\n          - TLSV1\n          - TLSV1_1\n          - TLSV1_2\n          - TLSV1_INSECURE_CIPHERS\n          example: SSL\n          type: string\n        type:\n          description: 'The type of webhook that is being created. Possible values\n            are:\n\n\n            - **standard**\n\n            - **account-settings-notification**\n\n            - **banktransfer-notification**\n\n            - **boletobancario-notification**\n\n            - **directdebit-notification**\n\n            - **pending-notification**\n\n            - **ideal-notification**\n\n            - **ideal-pending-notification**\n\n            - **report-notification**\n\n            - **rreq-notification**\n\n\n            Find out more about [standard notification webhooks](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes)\n            and [other types of notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#other-notifications).'\n          type: string\n        url:\n          description: Public URL where webhooks will be sent, for example **https://www.domain.com/webhook-endpoint**.\n          example: http://www.adyen.com\n          type: string\n        username:\n          description: Username to access the webhook URL.\n          maxLength: 255\n          type: string\n      required:\n      - url\n      - active\n      - communicationFormat\n      - type\n      - filterMerchantAccountType\n      - filterMerchantAccounts\n    CreateMerchantApiCredentialRequest:\n      properties:\n        allowedOrigins:\n          description: The list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins)\n            for the new API credential.\n          items:\n            type: string\n          type: array\n        description:\n          description: Description of the API credential.\n          type: string\n        roles:\n          description: List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1)\n            for the API credential.\n          items:\n            type: string\n          type: array\n    CreateMerchantUserRequest:\n      properties:\n        accountGroups:\n          description: The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups)\n            associated with this user.\n          items:\n            type: string\n          type: array\n        email:\n          description: The email address of the user.\n          type: string\n        name:\n          description: \"The user's full name.\\n\\nAllowed length: 1\\u201480 characters.\"\n          maxLength: 80\n          minLength: 1\n          $ref: '#/components/schemas/Name'\n        roles:\n          description: The list of [roles](https://docs.adyen.com/account/user-roles)\n            for this user.\n          items:\n            type: string\n          type: array\n        timeZoneCode:\n          description: The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)\n            of the time zone of the user. For example, **Europe/Amsterdam**.\n          type: string\n        username:\n          description: 'The username for this user. Allowed length: 255 alphanumeric\n            characters.'\n          maxLength: 255\n          minLength: 1\n          type: string\n      required:\n      - name\n      - email\n      - username\n    CreateMerchantWebhookRequest:\n      properties:\n        acceptsExpiredCertificate:\n          description: 'Indicates if expired SSL certificates are accepted. Default\n            value: **false**.'\n          type: boolean\n        acceptsSelfSignedCertificate:\n          description: 'Indicates if self-signed SSL certificates are accepted. Default\n            value: **false**.'\n          type: boolean\n        acceptsUntrustedRootCertificate:\n          description: 'Indicates if untrusted SSL certificates are accepted. Default\n            value: **false**.'\n          type: boolean\n        active:\n          description: Indicates if the webhook configuration is active. The field\n            must be **true** for us to send webhooks about events related an account.\n          type: boolean\n        additionalSettings:\n          description: Additional shopper and transaction information to be included\n            in your [standard notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes).\n            Find out more about the available [additional settings](https://docs.adyen.com/development-resources/webhooks/additional-settings).\n          $ref: '#/components/schemas/AdditionalSettings'\n        communicationFormat:\n          description: 'Format or protocol for receiving webhooks. Possible values:\n\n            * **soap**\n\n            * **http**\n\n            * **json** '\n          enum:\n          - HTTP\n          - JSON\n          - SOAP\n          example: SOAP\n          type: string\n        description:\n          description: Your description for this webhook configuration.\n          type: string\n        networkType:\n          description: 'Network type for Terminal API notification webhooks. Possible\n            values:\n\n            * **public**\n\n            * **local**\n\n\n            Default Value: **public**.'\n          enum:\n          - LOCAL\n          - PUBLIC\n          type: string\n        password:\n          description: Password to access the webhook URL.\n          type: string\n        populateSoapActionHeader:\n          description: 'Indicates if the SOAP action header needs to be populated.\n            Default value: **false**.\n\n\n            Only applies if `communicationFormat`: **soap**.'\n          type: boolean\n        sslVersion:\n          description: 'SSL version to access the public webhook URL specified in\n            the `url` field. Possible values:\n\n            * **TLSv1.2**\n\n            * **SSL**\n\n            * **SSLv3**\n\n            * **TLS**\n\n            * **TLSv1**\n\n            * **TLSv1.1**\n\n\n            If not specified, the webhook will use `sslVersion`: **TLSv1.2**.'\n          enum:\n          - HTTP\n          - SSL\n          - SSLV3\n          - SSL_INSECURE_CIPHERS\n          - TLS\n          - TLSV1\n          - TLSV1_1\n          - TLSV1_2\n          - TLSV1_INSECURE_CIPHERS\n          example: SSL\n          type: string\n        type:\n          description: 'The type of webhook that is being created. Possible values\n            are:\n\n\n            - **standard**\n\n            - **account-settings-notification**\n\n            - **banktransfer-notification**\n\n            - **boletobancario-notification**\n\n            - **directdebit-notification**\n\n            - **pending-notification**\n\n            - **ideal-notification**\n\n            - **ideal-pending-notification**\n\n            - **report-notification**\n\n            - **rreq-notification**\n\n\n            Find out more about [standard notification webhooks](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes)\n            and [other types of notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#other-notifications).'\n          type: string\n        url:\n          description: Public URL where webhooks will be sent, for example **https://www.domain.com/webhook-endpoint**.\n          example: http://www.adyen.com\n          type: string\n        username:\n          description: Username to access the webhook URL.\n          maxLength: 255\n          type: string\n      required:\n      - url\n      - active\n      - communicationFormat\n      - type\n    CreateUserResponse:\n      properties:\n        _links:\n          description: References to resources connected with this user.\n          $ref: '#/components/schemas/Links'\n        accountGroups:\n          description: The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups)\n            associated with this user.\n          items:\n            type: string\n          type: array\n        active:\n          description: Indicates whether this user is active.\n          type: boolean\n        email:\n          description: The email address of the user.\n          type: string\n        id:\n          description: The unique identifier of the user.\n          type: string\n        name:\n          description: The user's full name.\n          $ref: '#/components/schemas/Name'\n        roles:\n          description: The list of [roles](https://docs.adyen.com/account/user-roles)\n            for this user.\n          items:\n            type: string\n          type: array\n        timeZoneCode:\n          description: The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)\n            of the time zone of the user. For example, **Europe/Amsterdam**.\n          type: string\n        username:\n          description: The username for this user.\n          maxLength: 255\n          minLength: 1\n          type: string\n      required:\n      - id\n      - email\n      - timeZoneCode\n      - username\n      - roles\n    Currency:\n      properties:\n        amount:\n          description: Surcharge amount per transaction, in minor units.\n          format: int32\n          type: integer\n        currencyCode:\n          description: Three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).\n            For example, **AUD**.\n          type: string\n        percentage:\n          description: Surcharge percentage per transaction. The maximum number of\n            decimal places is two. For example, **1%** or **2.27%**.\n          format: double\n          type: number\n      required:\n      - currencyCode\n    CustomNotification:\n      properties:\n        amount:\n          description: The amount of the payment that the notification is about. Set\n            the value in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n          $ref: '#/components/schemas/Amount2'\n        eventCode:\n          description: 'The event that caused the notification to be sent.Currently\n            supported values:\n\n            * **AUTHORISATION**\n\n            * **CANCELLATION**\n\n            * **REFUND**\n\n            * **CAPTURE**\n\n            * **DEACTIVATE_RECURRING**\n\n            * **REPORT_AVAILABLE**\n\n            * **CHARGEBACK**\n\n            * **REQUEST_FOR_INFORMATION**\n\n            * **NOTIFICATION_OF_CHARGEBACK**\n\n            * **NOTIFICATIONTEST**\n\n            * **ORDER_OPENED**\n\n            * **ORDER_CLOSED**\n\n            * **CHARGEBACK_REVERSED**\n\n            * **REFUNDED_REVERSED**\n\n            * **REFUND_WITH_DATA**'\n          type: string\n        eventDate:\n          description: 'The time of the event. Format: [ISO 8601](http://www.w3.org/TR/NOTE-datetime),\n            YYYY-MM-DDThh:mm:ssTZD.'\n          format: date-time\n          type: string\n        merchantReference:\n          description: Your reference for the custom test notification.\n          type: string\n        paymentMethod:\n          description: \"The payment method for the payment that the notification is\\\n            \\ about. Possible values:\\n* **amex**\\n* **visa**\\n* **mc**\\n* **maestro**\\n\\\n            * **bcmc**\\n* **paypal**\\n * **sms**\\n * **bankTransfer_NL**\\n* **bankTransfer_DE**\\n\\\n            * **bankTransfer_BE**\\n* **ideal**\\n* **elv**\\n* **sepadirectdebit**\\n\"\n          type: string\n        reason:\n          description: A descripton of what caused the notification.\n          type: string\n        success:\n          description: 'The outcome of the event which the notification is about.\n            Set to either **true** or **false**. '\n          type: boolean\n    DataCenter:\n      properties:\n        livePrefix:\n          description: 'The unique [live URL prefix](https://docs.adyen.com/development-resources/live-endpoints#live-url-prefix)\n            for your live endpoint. Each data center has its own live URL prefix.\n\n\n            This field is empty for requests made in the test environment.'\n          type: string\n        name:\n          description: \"The name assigned to a data center, for example **EU** for\\\n            \\ the European data center. Possible values are:\\n\\n* **default**: the\\\n            \\ European data center. This value is always returned in the test environment.\\\n            \\ \\n* **AU**\\n* **EU**\\n* **US**\"\n          type: string\n    EventUrl:\n      properties:\n        eventLocalUrls:\n          description: One or more local URLs to send event notifications to when\n            using Terminal API.\n          items:\n            $ref: '#/components/schemas/Url'\n          type: array\n        eventPublicUrls:\n          description: One or more public URLs to send event notifications to when\n            using Terminal API.\n          items:\n            $ref: '#/components/schemas/Url'\n          type: array\n    ExternalTerminalAction:\n      properties:\n        actionType:\n          description: 'The type of terminal action: **InstallAndroidApp**, **UninstallAndroidApp**,\n            **InstallAndroidCertificate**, or **UninstallAndroidCertificate**.'\n          type: string\n        config:\n          description: Technical information about the terminal action.\n          type: string\n        confirmedAt:\n          description: The date and time when the action was carried out.\n          format: date-time\n          type: string\n        id:\n          description: The unique ID of the terminal action.\n          type: string\n        result:\n          description: The result message for the action.\n          type: string\n        scheduledAt:\n          description: The date and time when the action was scheduled to happen.\n          format: date-time\n          type: string\n        status:\n          description: 'The status of the terminal action: **pending**, **successful**,\n            **failed**, **cancelled**, or **tryLater**.'\n          type: string\n        terminalId:\n          description: The unique ID of the terminal that the action applies to.\n          type: string\n    File:\n      properties:\n        data:\n          description: The certificate content converted to a Base64-encoded string.\n          type: string\n        name:\n          description: The name of the certificate. Must be unique across Wi-Fi profiles.\n          type: string\n      required:\n      - name\n      - data\n    GenerateApiKeyResponse:\n      properties:\n        apiKey:\n          description: The generated API key.\n          type: string\n      required:\n      - apiKey\n    GenerateClientKeyResponse:\n      properties:\n        clientKey:\n          description: Generated client key\n          type: string\n      required:\n      - clientKey\n    GenerateHmacKeyResponse:\n      properties:\n        hmacKey:\n          description: The HMAC key generated for this webhook.\n          type: string\n      required:\n      - hmacKey\n    GiroPayInfo:\n      properties:\n        supportEmail:\n          description: The email address of merchant support.\n          type: string\n      required:\n      - supportEmail\n    Gratuity:\n      properties:\n        allowCustomAmount:\n          description: Indicates whether one of the predefined tipping options is\n            to let the shopper enter a custom tip. If **true**, only three of the\n            other options defined in `predefinedTipEntries` are shown.\n          type: boolean\n        currency:\n          description: The currency that the tipping settings apply to.\n          type: string\n        predefinedTipEntries:\n          description: 'Tipping options the shopper can choose from if `usePredefinedTipEntries`\n            is **true**. The maximum number of predefined options is four, or three\n            plus the option to enter a custom tip.\n\n            The options can be a mix of:\n\n\n            - A percentage of the transaction amount. Example: **5%**\n\n            - A tip amount in minor units. Example: **500** for a EUR 5 tip.'\n          items:\n            type: string\n          type: array\n        usePredefinedTipEntries:\n          description: Indicates whether the terminal shows a prompt to enter a tip\n            (**false**), or predefined tipping options to choose from (**true**).\n          type: boolean\n    Hardware:\n      properties:\n        displayMaximumBackLight:\n          description: The brightness of the display when the terminal is being used,\n            expressed as a percentage.\n          format: int32\n          type: integer\n    IdName:\n      properties:\n        id:\n          description: The identifier of the terminal model.\n          type: string\n        name:\n          description: The name of the terminal model.\n          type: string\n    InstallAndroidAppDetails:\n      additionalProperties: false\n      properties:\n        appId:\n          description: The unique identifier of the app to be installed.\n          type: string\n        type:\n          default: InstallAndroidApp\n          description: 'Type of terminal action: Install an Android app.'\n          enum:\n          - InstallAndroidApp\n          type: string\n    InstallAndroidCertificateDetails:\n      additionalProperties: false\n      properties:\n        certificateId:\n          description: The unique identifier of the certificate to be installed.\n          type: string\n        type:\n          default: InstallAndroidCertificate\n          description: 'Type of terminal action: Install an Android certificate.'\n          enum:\n          - InstallAndroidCertificate\n          type: string\n    InvalidField:\n      properties:\n        message:\n          description: Description of the validation error.\n          type: string\n        name:\n          description: The field that has an invalid value.\n          type: string\n        value:\n          description: The invalid value.\n          type: string\n      required:\n      - name\n      - value\n      - message\n    JSONObject:\n      properties:\n        paths:\n          items:\n            $ref: '#/components/schemas/JSONPath'\n          type: array\n        rootPath:\n          $ref: '#/components/schemas/JSONPath'\n    JSONPath:\n      properties:\n        content:\n          items:\n            type: string\n          type: array\n    KlarnaInfo:\n      properties:\n        autoCapture:\n          description: 'Indicates the status of [Automatic capture](https://docs.adyen.com/online-payments/capture#automatic-capture).\n            Default value: **false**.'\n          type: boolean\n        disputeEmail:\n          description: The email address for disputes.\n          type: string\n        region:\n          description: The region of operation. For example, **NA**, **EU**, **CH**,\n            **AU**.\n          enum:\n          - NA\n          - EU\n          - CH\n          - AU\n          maxLength: 2\n          minLength: 2\n          type: string\n        supportEmail:\n          description: The email address of merchant support.\n          type: string\n      required:\n      - region\n      - supportEmail\n      - disputeEmail\n    Links:\n      properties:\n        self:\n          description: Link to the resource itself.\n          $ref: '#/components/schemas/LinksElement'\n      required:\n      - self\n    LinksElement:\n      properties:\n        href:\n          type: string\n    ListCompanyApiCredentialsResponse:\n      properties:\n        _links:\n          description: Pagination references.\n          $ref: '#/components/schemas/PaginationLinks'\n        data:\n          description: The list of API credentials.\n          items:\n            $ref: '#/components/schemas/CompanyApiCredential'\n          type: array\n        itemsTotal:\n          description: Total number of items.\n          format: int32\n          type: integer\n        pagesTotal:\n          description: Total number of pages.\n          format: int32\n          type: integer\n      required:\n      - itemsTotal\n      - pagesTotal\n    ListCompanyResponse:\n      properties:\n        _links:\n          description: Pagination references.\n          $ref: '#/components/schemas/PaginationLinks'\n        data:\n          description: The list of companies.\n          items:\n            $ref: '#/components/schemas/Company'\n          type: array\n        itemsTotal:\n          description: Total number of items.\n          format: int32\n          type: integer\n        pagesTotal:\n          description: Total number of pages.\n          format: int32\n          type: integer\n      required:\n      - itemsTotal\n      - pagesTotal\n    ListCompanyUsersResponse:\n      properties:\n        _links:\n          description: Pagination references.\n          $ref: '#/components/schemas/PaginationLinks'\n        data:\n          description: The list of users.\n          items:\n            $ref: '#/components/schemas/CompanyUser'\n          type: array\n        itemsTotal:\n          description: Total number of items.\n          format: int32\n          type: integer\n        pagesTotal:\n          description: Total number of pages.\n          format: int32\n          type: integer\n      required:\n      - itemsTotal\n      - pagesTotal\n    ListExternalTerminalActionsResponse:\n      properties:\n        data:\n          description: The list of terminal actions.\n          items:\n            $ref: '#/components/schemas/ExternalTerminalAction'\n          type: array\n    ListMerchantApiCredentialsResponse:\n      properties:\n        _links:\n          description: Pagination references.\n          $ref: '#/components/schemas/PaginationLinks'\n        data:\n          description: The list of API credentials.\n          items:\n            $ref: '#/components/schemas/ApiCredential'\n          type: array\n        itemsTotal:\n          description: Total number of items.\n          format: int32\n          type: integer\n        pagesTotal:\n          description: Total number of pages.\n          format: int32\n          type: integer\n      required:\n      - itemsTotal\n      - pagesTotal\n    ListMerchantResponse:\n      properties:\n        _links:\n          description: Pagination references.\n          $ref: '#/components/schemas/PaginationLinks'\n        data:\n          description: The list of merchant accounts.\n          items:\n            $ref: '#/components/schemas/Merchant'\n          type: array\n        itemsTotal:\n          description: Total number of items.\n          format: int32\n          type: integer\n        pagesTotal:\n          description: Total number of pages.\n          format: int32\n          type: integer\n      required:\n      - itemsTotal\n      - pagesTotal\n    ListMerchantUsersResponse:\n      properties:\n        _links:\n          description: Pagination references.\n          $ref: '#/components/schemas/PaginationLinks'\n        data:\n          description: The list of users.\n          items:\n            $ref: '#/components/schemas/User'\n          type: array\n        itemsTotal:\n          description: Total number of items.\n          format: int32\n          type: integer\n        pagesTotal:\n          description: Total number of pages.\n          format: int32\n          type: integer\n      required:\n      - itemsTotal\n      - pagesTotal\n    ListStoresResponse:\n      properties:\n        _links:\n          description: Pagination references.\n          $ref: '#/components/schemas/PaginationLinks'\n        data:\n          items:\n            $ref: '#/components/schemas/Store'\n          type: array\n        itemsTotal:\n          description: Total number of items.\n          format: int32\n          type: integer\n        pagesTotal:\n          description: Total number of pages.\n          format: int32\n          type: integer\n      required:\n      - itemsTotal\n      - pagesTotal\n    ListTerminalsResponse:\n      properties:\n        data:\n          description: The list of terminals.\n          items:\n            $ref: '#/components/schemas/Terminal'\n          type: array\n    ListWebhooksResponse:\n      properties:\n        _links:\n          description: Pagination references.\n          $ref: '#/components/schemas/PaginationLinks'\n        data:\n          description: The list of webhooks configured for this account.\n          items:\n            $ref: '#/components/schemas/Webhook'\n          type: array\n        itemsTotal:\n          description: Total number of items.\n          format: int32\n          type: integer\n        pagesTotal:\n          description: Total number of pages.\n          format: int32\n          type: integer\n      required:\n      - itemsTotal\n      - pagesTotal\n    Logo:\n      properties:\n        data:\n          description: The image file, converted to a Base64-encoded string, of the\n            logo to be shown on the terminal.\n          maxLength: 350000\n          type: string\n    MeApiCredential:\n      properties:\n        _links:\n          description: References to resources linked to the API credential.\n          $ref: '#/components/schemas/ApiCredentialLinks'\n        active:\n          description: Indicates if the API credential is enabled. Must be set to\n            **true** to use the credential in your integration.\n          type: boolean\n        allowedIpAddresses:\n          description: 'List of IP addresses from which your client can make requests.\n\n\n            If the list is empty, we allow requests from any IP.\n\n            If the list is not empty and we get a request from an IP which is not\n            on the list, you get a security error.'\n          items:\n            type: string\n          type: array\n        allowedOrigins:\n          description: List containing the [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins)\n            linked to the API credential.\n          items:\n            $ref: '#/components/schemas/AllowedOrigin'\n          type: array\n        associatedMerchantAccounts:\n          description: List of merchant accounts that the API credential has access\n            to.\n          items:\n            type: string\n          type: array\n        clientKey:\n          description: Public key used for [client-side authentication](https://docs.adyen.com/development-resources/client-side-authentication).\n            The client key is required for Drop-in and Components integrations.\n          type: string\n        companyName:\n          description: Name of the company linked to the API credential.\n          type: string\n        description:\n          description: Description of the API credential.\n          maxLength: 50\n          type: string\n        id:\n          description: Unique identifier of the API credential.\n          type: string\n        roles:\n          description: List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1)\n            for the API credential.\n          items:\n            type: string\n          type: array\n        username:\n          description: The name of the [API credential](https://docs.adyen.com/development-resources/api-credentials),\n            for example **ws@Company.TestCompany**.\n          type: string\n      required:\n      - id\n      - username\n      - clientKey\n      - allowedIpAddresses\n      - roles\n      - active\n    Merchant:\n      properties:\n        _links:\n          description: References to resources connected with this merchant.\n          $ref: '#/components/schemas/MerchantLinks'\n        captureDelay:\n          description: 'The [capture delay](https://docs.adyen.com/online-payments/capture#capture-delay)\n            set for the merchant account.\n\n\n            Possible values:\n\n            * **Immediate**\n\n            * **Manual**\n\n            * Number of days from **1** to **29**'\n          type: string\n        defaultShopperInteraction:\n          description: The default [`shopperInteraction`](https://docs.adyen.com/api-explorer/#/CheckoutService/v68/post/payments__reqParam_shopperInteraction)\n            value used when processing payments through this merchant account.\n          type: string\n        id:\n          description: The unique identifier of the merchant account.\n          type: string\n        merchantCity:\n          description: The city where the legal entity of this merchant account is\n            registered.\n          type: string\n        name:\n          description: The name of the legal entity associated with the merchant account.\n          type: string\n        pricingPlan:\n          description: Only applies to merchant accounts managed by Adyen's partners.\n            The name of the pricing plan assigned to the merchant account.\n          type: string\n        primarySettlementCurrency:\n          description: 'The currency of the country where the legal entity of this\n            merchant account is registered. Format: [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).\n            For example, a legal entity based in the United States has USD as the\n            primary settlement currency.'\n          type: string\n        shopWebAddress:\n          description: The URL for the ecommerce website used with this merchant account.\n          type: string\n        status:\n          description: 'The status of the merchant account.\n\n\n            Possible values:\n\n\n            * **PreActive**: The merchant account has been created. Users cannot access\n            the merchant account in the Customer Area. The account cannot process\n            payments.\n\n            * **Active**: Users can access the merchant account in the Customer Area.\n            If the company account is also **Active**, then payment processing and\n            payouts are enabled.\n\n            * **InactiveWithModifications**: Users can access the merchant account\n            in the Customer Area. You cannot process new payments but you can still\n            modify payments, for example issue refunds. You can still receive payouts.\n\n            * **Inactive**: Users can access the merchant account in the Customer\n            Area. Payment processing and payouts are disabled.\n\n            * **Closed**: The account is closed and this cannot be reversed. Users\n            cannot log in. Payment processing and payouts are disabled.'\n          type: string\n    MerchantLinks:\n      properties:\n        apiCredentials:\n          $ref: '#/components/schemas/LinksElement'\n        self:\n          description: Link to the resource itself.\n          $ref: '#/components/schemas/LinksElement'\n        users:\n          $ref: '#/components/schemas/LinksElement'\n        webhooks:\n          $ref: '#/components/schemas/LinksElement'\n      required:\n      - self\n    Name:\n      properties:\n        firstName:\n          description: The first name.\n          type: string\n        lastName:\n          description: The last name.\n          type: string\n      required:\n      - firstName\n      - lastName\n    Name2:\n      properties:\n        firstName:\n          description: The first name.\n          type: string\n        lastName:\n          description: The last name.\n          type: string\n    Nexo:\n      properties:\n        eventUrls:\n          description: A list of local and public URLs to send event notifications\n            to when using Terminal API.\n          $ref: '#/components/schemas/EventUrl'\n        nexoEventUrls:\n          deprecated: true\n          description: '@deprecated One or more URLs to send event messages to when\n            using Terminal API.'\n          items:\n            type: string\n          type: array\n    Opi:\n      properties:\n        enablePayAtTable:\n          description: Indicates if Pay at Table is enabled.\n          type: boolean\n        payAtTableStoreNumber:\n          description: The store number to use for Pay at Table.\n          type: string\n        payAtTableURL:\n          description: The URL and port number used for Pay at Table communication.\n          type: string\n    OrderItem:\n      properties:\n        id:\n          description: The unique identifier of the product.\n          type: string\n        name:\n          description: The name of the product.\n          type: string\n        quantity:\n          description: The number of items with the specified product `id` included\n            in the order.\n          format: int32\n          type: integer\n    PaginationLinks:\n      properties:\n        first:\n          description: The first page.\n          $ref: '#/components/schemas/LinksElement'\n        last:\n          description: The last page.\n          $ref: '#/components/schemas/LinksElement'\n        next:\n          description: The next page. Only present if there is a next page.\n          $ref: '#/components/schemas/LinksElement'\n        prev:\n          description: The previous page. Only present if there is a previous page.\n          $ref: '#/components/schemas/LinksElement'\n        self:\n          description: The current page.\n          $ref: '#/components/schemas/LinksElement'\n      required:\n      - self\n      - first\n      - last\n    PayPalInfo:\n      properties:\n        directCapture:\n          description: 'Indicates if direct (immediate) capture for PayPal is enabled.\n            If set to **true**, this setting overrides the [capture](https://docs.adyen.com/online-payments/capture)\n            settings of your merchant account. Default value: **true**.'\n          type: boolean\n        directSettlement:\n          description: 'Must be set to **true** to confirm that the settlement to\n            your bank account is performed directly by PayPal. Default value: **null**.'\n          type: boolean\n        payerId:\n          description: 'PayPal Merchant ID. Character length and limitations: 13 single-byte\n            alphanumeric characters.'\n          maxLength: 13\n          minLength: 13\n          type: string\n        subject:\n          description: Your business email address.\n          type: string\n      required:\n      - subject\n      - payerId\n      - directSettlement\n    PaymentMethod:\n      properties:\n        applePay:\n          description: Apple Pay details.\n          $ref: '#/components/schemas/ApplePayInfo'\n        bcmc:\n          description: Bancontact details.\n          $ref: '#/components/schemas/BcmcInfo'\n        businessLineId:\n          description: The unique identifier of the business line.\n          type: string\n        countries:\n          description: The list of countries where a payment method is available.\n            By default, all countries supported by the payment method.\n          items:\n            type: string\n          type: array\n        currencies:\n          description: The list of currencies that a payment method supports. By default,\n            all currencies supported by the payment method.\n          items:\n            type: string\n          type: array\n        enabled:\n          description: Indicates whether the payment method is enabled (**true**)\n            or disabled (**false**).\n          type: boolean\n        giroPay:\n          description: giropay details.\n          $ref: '#/components/schemas/GiroPayInfo'\n        id:\n          description: The identifier of the resource.\n          type: string\n        klarna:\n          description: Klarna details.\n          $ref: '#/components/schemas/KlarnaInfo'\n        paypal:\n          description: PayPal details.\n          $ref: '#/components/schemas/PayPalInfo'\n        sofort:\n          description: Sofort details.\n          $ref: '#/components/schemas/SofortInfo'\n        storeId:\n          description: The ID of the [store](https://docs.adyen.com/api-explorer/#/ManagementService/latest/post/stores__resParam_id),\n            if any.\n          type: string\n        swish:\n          description: Swish details.\n          $ref: '#/components/schemas/SwishInfo'\n        type:\n          description: Payment method [variant](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api).\n          type: string\n      required:\n      - id\n    PaymentMethodResponse:\n      properties:\n        _links:\n          description: Pagination references.\n          $ref: '#/components/schemas/PaginationLinks'\n        data:\n          description: Payment methods details.\n          items:\n            $ref: '#/components/schemas/PaymentMethod'\n          type: array\n        itemsTotal:\n          description: Total number of items.\n          format: int32\n          type: integer\n        pagesTotal:\n          description: Total number of pages.\n          format: int32\n          type: integer\n      required:\n      - itemsTotal\n      - pagesTotal\n    PaymentMethodSetupInfo:\n      properties:\n        applePay:\n          description: Apple Pay details.\n          $ref: '#/components/schemas/ApplePayInfo'\n        bcmc:\n          description: Bancontact details.\n          $ref: '#/components/schemas/BcmcInfo'\n        businessLineId:\n          description: The unique identifier of the business line.\n          type: string\n        countries:\n          description: The list of countries where a payment method is available.\n            By default, all countries supported by the payment method.\n          items:\n            type: string\n          type: array\n        currencies:\n          description: The list of currencies that a payment method supports. By default,\n            all currencies supported by the payment method.\n          items:\n            type: string\n          type: array\n        giroPay:\n          description: giropay details.\n          $ref: '#/components/schemas/GiroPayInfo'\n        klarna:\n          description: Klarna details.\n          $ref: '#/components/schemas/KlarnaInfo'\n        paypal:\n          description: PayPal details.\n          $ref: '#/components/schemas/PayPalInfo'\n        sofort:\n          description: Sofort details.\n          $ref: '#/components/schemas/SofortInfo'\n        storeId:\n          description: The ID of the [store](https://docs.adyen.com/api-explorer/#/ManagementService/latest/post/stores__resParam_id),\n            if any.\n          type: string\n        swish:\n          description: Swish details.\n          $ref: '#/components/schemas/SwishInfo'\n        type:\n          description: Payment method [variant](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api).\n          enum:\n          - alipay\n          - amex\n          - applepay\n          - bcmc\n          - blik\n          - cartebancaire\n          - cup\n          - diners\n          - directEbanking\n          - discover\n          - eftpos_australia\n          - girocard\n          - giropay\n          - ideal\n          - interac_card\n          - jcb\n          - klarna\n          - klarna_account\n          - klarna_paynow\n          - maestro\n          - mc\n          - mobilepay\n          - paypal\n          - swish\n          - visa\n          - wechatpay_pos\n          type: string\n      required:\n      - type\n    Profile:\n      properties:\n        authType:\n          description: 'The type of Wi-Fi network. Possible values: **wpa-psk**, **wpa2-psk**,\n            **wpa-eap**, **wpa2-eap**.'\n          type: string\n        autoWifi:\n          description: Indicates whether to automatically select the best authentication\n            method available. Does not work on older terminal models.\n          type: boolean\n        bssType:\n          description: Use **infra** for infrastructure-based networks. This applies\n            to most networks. Use **adhoc** only if the communication is p2p-based\n            between base stations.\n          type: string\n        channel:\n          description: The channel number of the Wi-Fi network. The recommended setting\n            is **0** for automatic channel selection.\n          format: int32\n          type: integer\n        defaultProfile:\n          description: Indicates whether this is your preferred wireless network.\n            If **true**, the terminal will try connecting to this network first.\n          type: boolean\n        eap:\n          description: 'For `authType` **wpa-eap** or **wpa2-eap**. Possible values:\n            **tls**, **peap**, **leap**, **fast**'\n          type: string\n        eapCaCert:\n          description: For `authType` **wpa-eap** or **wpa2-eap**. The root certificate\n            from the CA that signed the certificate of the RADIUS server that is part\n            of your wireless network.\n          $ref: '#/components/schemas/File'\n        eapClientCert:\n          description: For `eap` **tls**. The certificate chain for the terminals.\n            All terminals in the same network will use the same EAP client certificate.\n          $ref: '#/components/schemas/File'\n        eapClientKey:\n          description: For `eap` **tls**. The RSA private key for the client. Include\n            the lines BEGIN RSA PRIVATE KEY and END RSA PRIVATE KEY.\n          $ref: '#/components/schemas/File'\n        eapClientPwd:\n          description: For `eap` **tls**. The password of the RSA key file, if that\n            file is password-protected.\n          type: string\n        eapIdentity:\n          description: For `authType` **wpa-eap** or **wpa2-eap**. The EAP-PEAP username\n            from your MS-CHAP account. Must match the configuration of your RADIUS\n            server.\n          type: string\n        eapIntermediateCert:\n          description: For `eap` **tls**. The EAP intermediate certificate.\n          $ref: '#/components/schemas/File'\n        eapPwd:\n          description: For `eap` **peap**. The EAP-PEAP password from your MS-CHAP\n            account. Must match the configuration of your RADIUS server.\n          type: string\n        hiddenSsid:\n          description: Indicates if a network does not broadcast its SSID, so an SSID-specific\n            probe request must be used for scans.\n          type: boolean\n        name:\n          description: Your name for the Wi-Fi profile.\n          type: string\n        psk:\n          description: For `authType` **wpa-psk or **wpa2-psk**. The password to the\n            wireless network.\n          type: string\n        ssid:\n          description: The name of the wireless network.\n          type: string\n        wsec:\n          description: 'The type of encryption. Possible values: **auto**, **ccmp**\n            (recommended), **tkip**'\n          type: string\n      required:\n      - ssid\n      - bssType\n      - authType\n      - wsec\n    ReceiptOptions:\n      properties:\n        logo:\n          description: The receipt logo converted to a Base64-encoded string. The\n            image must be a .bmp file of \u003c 256 KB, dimensions 240 (H) x 384 (W) px.\n          maxLength: 350000\n          type: string\n    ReceiptPrinting:\n      properties:\n        merchantApproved:\n          description: Print a merchant receipt when the payment is approved.\n          type: boolean\n        merchantCancelled:\n          description: Print a merchant receipt when the transaction is cancelled.\n          type: boolean\n        merchantCaptureApproved:\n          description: Print a merchant receipt when capturing the payment is approved.\n          type: boolean\n        merchantCaptureRefused:\n          description: Print a merchant receipt when capturing the payment is refused.\n          type: boolean\n        merchantRefundApproved:\n          description: Print a merchant receipt when the refund is approved.\n          type: boolean\n        merchantRefundRefused:\n          description: Print a merchant receipt when the refund is refused.\n          type: boolean\n        merchantRefused:\n          description: Print a merchant receipt when the payment is refused.\n          type: boolean\n        merchantVoid:\n          description: Print a merchant receipt when a previous transaction is voided.\n          type: boolean\n        shopperApproved:\n          description: Print a shopper receipt when the payment is approved.\n          type: boolean\n        shopperCancelled:\n          description: Print a shopper receipt when the transaction is cancelled.\n          type: boolean\n        shopperCaptureApproved:\n          description: Print a shopper receipt when capturing the payment is approved.\n          type: boolean\n        shopperCaptureRefused:\n          description: Print a shopper receipt when capturing the payment is refused.\n          type: boolean\n        shopperRefundApproved:\n          description: Print a shopper receipt when the refund is approved.\n          type: boolean\n        shopperRefundRefused:\n          description: Print a shopper receipt when the refund is refused.\n          type: boolean\n        shopperRefused:\n          description: Print a shopper receipt when the payment is refused.\n          type: boolean\n        shopperVoid:\n          description: Print a shopper receipt when a previous transaction is voided.\n          type: boolean\n    RestServiceError:\n      properties:\n        detail:\n          description: A human-readable explanation specific to this occurrence of\n            the problem.\n          type: string\n        errorCode:\n          description: A code that identifies the problem type.\n          type: string\n        errorType:\n          description: A URI that identifies the problem type, pointing to human-readable\n            documentation on this problem type.\n          type: string\n        instance:\n          description: A unique URI that identifies the specific occurrence of the\n            problem.\n          type: string\n        invalidFields:\n          description: Detailed explanation of each validation error, when applicable.\n          items:\n            $ref: '#/components/schemas/InvalidField'\n          type: array\n        requestId:\n          description: A unique reference for the request, essentially the same as\n            `pspReference`.\n          type: string\n        response:\n          description: JSON response payload.\n          $ref: '#/components/schemas/JSONObject'\n        status:\n          description: The HTTP status code.\n          format: int32\n          type: integer\n        title:\n          description: A short, human-readable summary of the problem type.\n          type: string\n      required:\n      - errorType\n      - errorCode\n      - title\n      - detail\n      - status\n    ScheduleTerminalActionsRequest:\n      properties:\n        actionDetails:\n          description: Information about the action to take.\n          oneOf:\n          - $ref: '#/components/schemas/InstallAndroidAppDetails'\n          - $ref: '#/components/schemas/InstallAndroidCertificateDetails'\n          - $ref: '#/components/schemas/UninstallAndroidAppDetails'\n          - $ref: '#/components/schemas/UninstallAndroidCertificateDetails'\n        scheduledAt:\n          description: \"The date and time when the action should happen. \\nFormat:\\\n            \\ [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339), but without the\\\n            \\ **Z** before the time offset. For example, **2021-11-15T12:16:21+01:00**\\\n            \\ \\nThe action is sent with the first [maintenance call](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api#when-actions-take-effect)\\\n            \\ after the specified date and time in the time zone of the terminal.\\\n            \\ \\nAn empty value causes the action to be sent as soon as possible: at\\\n            \\ the next maintenance call.\"\n          type: string\n        storeId:\n          description: The unique ID of the [store](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/stores).\n            If present, all terminals in the `terminalIds` list must be assigned to\n            this store.\n          type: string\n        terminalIds:\n          description: 'A list of unique IDs of the terminals to apply the action\n            to. You can extract the IDs from the [GET `/terminals`](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/terminals)\n            response. Maximum length: 100 IDs.'\n          items:\n            type: string\n          type: array\n    ScheduleTerminalActionsResponse:\n      properties:\n        actionDetails:\n          description: Information about the action to take.\n          oneOf:\n          - $ref: '#/components/schemas/InstallAndroidAppDetails'\n          - $ref: '#/components/schemas/InstallAndroidCertificateDetails'\n          - $ref: '#/components/schemas/UninstallAndroidAppDetails'\n          - $ref: '#/components/schemas/UninstallAndroidCertificateDetails'\n        scheduledAt:\n          description: \"The date and time when the action should happen. \\nFormat:\\\n            \\ [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339), but without the\\\n            \\ **Z** before the time offset. For example, **2021-11-15T12:16:21+01:00**\\\n            \\ \\nThe action is sent with the first [maintenance call](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api#when-actions-take-effect)\\\n            \\ after the specified date and time in the time zone of the terminal.\\\n            \\ \\nAn empty value causes the action to be sent as soon as possible: at\\\n            \\ the next maintenance call.\"\n          type: string\n        storeId:\n          description: The unique ID of the [store](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/stores).\n            If present, all terminals in the `terminalIds` list must be assigned to\n            this store.\n          type: string\n        terminalIds:\n          description: 'A list of unique IDs of the terminals to apply the action\n            to. You can extract the IDs from the [GET `/terminals`](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/terminals)\n            response. Maximum length: 100 IDs.'\n          items:\n            type: string\n          type: array\n        terminalsWithErrors:\n          additionalProperties:\n            items:\n              type: string\n            type: array\n          description: The validation errors that occurred in the list of terminals,\n            and for each error the IDs of the terminals that the error applies to.\n          type: object\n        totalErrors:\n          description: The number of terminals for which scheduling the action failed.\n          format: int32\n          type: integer\n        totalScheduled:\n          description: The number of terminals for which the action was successfully\n            scheduled. This doesn't mean the action has happened yet.\n          format: int32\n          type: integer\n    Settings:\n      properties:\n        band:\n          description: 'The preferred Wi-Fi Band, for use if the terminals support\n            multiple bands. Possible values: All, 2.4GHz, 5GHz.'\n          type: string\n        roaming:\n          description: Indicates whether roaming is enabled on the terminals.\n          type: boolean\n        timeout:\n          description: 'The connection time-out in seconds. Minimum value: 0'\n          format: int32\n          type: integer\n    ShippingLocation:\n      properties:\n        address:\n          description: The address details of the shipping location.\n          $ref: '#/components/schemas/Address'\n        contact:\n          description: The contact details for the shipping location.\n          $ref: '#/components/schemas/Contact'\n        id:\n          description: The unique identifier of the shipping location, for use as\n            `shippingLocationId` when creating an order.\n          type: string\n        name:\n          description: The unique name of the shipping location.\n          type: string\n    ShippingLocationsResponse:\n      properties:\n        data:\n          description: Physical locations where orders can be shipped to.\n          items:\n            $ref: '#/components/schemas/ShippingLocation'\n          type: array\n    Signature:\n      properties:\n        askSignatureOnScreen:\n          description: If `skipSignature` is false, indicates whether the shopper\n            should provide a signature on the display (**true**) or on the merchant\n            receipt (**false**).\n          type: boolean\n        deviceName:\n          description: Name that identifies the terminal.\n          type: string\n        skipSignature:\n          description: Skip asking for a signature. This is possible because all global\n            card schemes (American Express, Diners, Discover, JCB, MasterCard, VISA,\n            and UnionPay) regard a signature as optional.\n          type: boolean\n    SofortInfo:\n      properties:\n        currencyCode:\n          description: Sofort currency code. For example, **EUR**.\n          type: string\n        logo:\n          description: 'Sofort logo. Format: Base64-encoded string.'\n          type: string\n      required:\n      - logo\n      - currencyCode\n    Store:\n      properties:\n        _links:\n          description: Reference to resources connected with the store.\n          $ref: '#/components/schemas/Links'\n        address:\n          description: The address of the store.\n          $ref: '#/components/schemas/Address2'\n        businessLineIds:\n          description: \"The unique identifiers of the [business lines](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businesslines__resParam_id)\\\n            \\ that the store is associated with.\\n If not specified, the business\\\n            \\ line of the merchant account is used. Required when there are multiple\\\n            \\ business lines under the merchant account.\"\n          items:\n            type: string\n          type: array\n        description:\n          description: The description of the store.\n          type: string\n        externalReferenceId:\n          description: 'When using the Zip payment method: The location ID that Zip\n            has assigned to your store.'\n          type: string\n        id:\n          description: The unique identifier of the store. This value is generated\n            by Adyen.\n          type: string\n        merchantId:\n          description: The unique identifier of the merchant account that the store\n            belongs to.\n          type: string\n        phoneNumber:\n          description: The phone number of the store, including '+' and country code.\n          type: string\n        reference:\n          description: \"A reference to recognize the store by. Also known as the store\\\n            \\ code.\\n Allowed characters: Lowercase and uppercase letters without\\\n            \\ diacritics, numbers 0 through 9, hyphen (-), and underscore (_)\"\n          type: string\n        shopperStatement:\n          description: The store name shown on the shopper's bank or credit card statement\n            and on the shopper receipt.\n          type: string\n        splitConfiguration:\n          description: Rules for Adyen for Platform merchants to [split commission\n            fees](https://docs.adyen.com/platforms/split-configuration-for-stores).\n          $ref: '#/components/schemas/StoreSplitConfiguration'\n        status:\n          description: \"The status of the store. Possible values are:\\n\\n- **active**.\\\n            \\ This value is assigned automatically when a store is created. \\n- **inactive**.\\\n            \\ The terminals under the store are blocked from accepting new transactions,\\\n            \\ but capturing outstanding transactions is still possible.\\n- **closed**.\\\n            \\ This status is irreversible. The terminals under the store are reassigned\\\n            \\ to the merchant inventory.\"\n          enum:\n          - active\n          - closed\n          - inactive\n          type: string\n    StoreCreationRequest:\n      properties:\n        address:\n          description: The address of the store.\n          $ref: '#/components/schemas/Address2'\n        businessLineIds:\n          description: 'The unique identifiers of the [business lines](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businesslines__resParam_id)\n            that the store is associated with.\n\n            If not specified, the business line of the merchant account is used. Required\n            when there are multiple business lines under the merchant account.'\n          items:\n            type: string\n          type: array\n        description:\n          description: Your description of the store.\n          type: string\n        externalReferenceId:\n          description: 'When using the Zip payment method: The location ID that Zip\n            has assigned to your store.'\n          type: string\n        phoneNumber:\n          description: The phone number of the store, including '+' and country code.\n          type: string\n        reference:\n          description: \"Your reference to recognize the store by. Also known as the\\\n            \\ store code.\\n Allowed characters: Lowercase and uppercase letters without\\\n            \\ diacritics, numbers 0 through 9, hyphen (-), and underscore (_).\"\n          type: string\n        shopperStatement:\n          description: 'The store name to be shown on the shopper''s bank or credit\n            card statement and on the shopper receipt.\n\n            Maximum length: 22 characters; can''t be all numbers.'\n          type: string\n        splitConfiguration:\n          $ref: '#/components/schemas/StoreSplitConfiguration'\n      required:\n      - description\n      - shopperStatement\n      - phoneNumber\n      - address\n    StoreCreationWithMerchantCodeRequest:\n      properties:\n        address:\n          description: The address of the store.\n          $ref: '#/components/schemas/Address2'\n        businessLineIds:\n          description: 'The unique identifiers of the [business lines](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businesslines__resParam_id)\n            that the store is associated with.\n\n            If not specified, the business line of the merchant account is used. Required\n            when there are multiple business lines under the merchant account.'\n          items:\n            type: string\n          type: array\n        description:\n          description: Your description of the store.\n          type: string\n        externalReferenceId:\n          description: 'When using the Zip payment method: The location ID that Zip\n            has assigned to your store.'\n          type: string\n        merchantId:\n          description: The unique identifier of the merchant account that the store\n            belongs to.\n          type: string\n        phoneNumber:\n          description: The phone number of the store, including '+' and country code.\n          type: string\n        reference:\n          description: \"Your reference to recognize the store by. Also known as the\\\n            \\ store code.\\n Allowed characters: Lowercase and uppercase letters without\\\n            \\ diacritics, numbers 0 through 9, hyphen (-), and underscore (_).\"\n          type: string\n        shopperStatement:\n          description: 'The store name to be shown on the shopper''s bank or credit\n            card statement and on the shopper receipt.\n\n            Maximum length: 22 characters; can''t be all numbers.'\n          type: string\n        splitConfiguration:\n          $ref: '#/components/schemas/StoreSplitConfiguration'\n      required:\n      - description\n      - shopperStatement\n      - phoneNumber\n      - address\n      - merchantId\n    StoreSplitConfiguration:\n      properties:\n        balanceAccountId:\n          description: The [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balanceAccounts/{id}__queryParam_id)\n            linked to the account holder.\n          type: string\n        splitConfigurationId:\n          description: The UUID of the [split configuration](https://docs.adyen.com/platforms/split-configuration-for-stores)\n            from the Customer Area.\n          type: string\n    Surcharge:\n      properties:\n        askConfirmation:\n          description: Show the surcharge details on the terminal, so the shopper\n            can confirm.\n          type: boolean\n        configurations:\n          description: Surcharge fees or percentages for specific payment methods,\n            funding sources (credit or debit), and currencies.\n          items:\n            $ref: '#/components/schemas/Configuration'\n          type: array\n    SwishInfo:\n      properties:\n        swishNumber:\n          description: 'Swish number. Format: 10 digits without spaces. For example,\n            **1231111111**.'\n          maxLength: 10\n          minLength: 10\n          type: string\n      required:\n      - swishNumber\n    Terminal:\n      properties:\n        assigned:\n          description: The [assignment status](https://docs.adyen.com/point-of-sale/automating-terminal-management/assign-terminals-api)\n            of the terminal. If true, the terminal is assigned. If false, the terminal\n            is in inventory and can't be boarded.\n          type: boolean\n        id:\n          description: The unique identifier of the terminal.\n          type: string\n        status:\n          description: Indicates when the terminal was last online, whether the terminal\n            is being reassigned, or whether the terminal is turned off. If the terminal\n            was last online more that a week ago, it is also shown as turned off.\n          type: string\n    TerminalModelsResponse:\n      properties:\n        data:\n          description: The terminal models that the API credential has access to.\n          items:\n            $ref: '#/components/schemas/IdName'\n          type: array\n    TerminalOrder:\n      properties:\n        billingEntity:\n          description: The details of the entity that the order is billed to.\n          $ref: '#/components/schemas/BillingEntity'\n        customerOrderReference:\n          description: The merchant-defined purchase order number. This will be printed\n            on the packing list.\n          type: string\n        id:\n          description: The unique identifier of the order.\n          type: string\n        items:\n          description: The products included in the order.\n          items:\n            $ref: '#/components/schemas/OrderItem'\n          type: array\n        orderDate:\n          description: The date and time that the order was placed, in UTC ISO 8601\n            format. For example, \"2011-12-03T10:15:30Z\".\n          type: string\n        shippingLocation:\n          description: The details of the location where the order is shipped to.\n          $ref: '#/components/schemas/ShippingLocation'\n        status:\n          description: The processing status of the order.\n          type: string\n        trackingUrl:\n          description: The URL, provided by the carrier company, where the shipment\n            can be tracked.\n          type: string\n    TerminalOrderRequest:\n      properties:\n        billingEntityId:\n          description: The identification of the billing entity to use for the order.\n          type: string\n        customerOrderReference:\n          description: The merchant-defined purchase order reference.\n          type: string\n        items:\n          description: The products included in the order.\n          items:\n            $ref: '#/components/schemas/OrderItem'\n          type: array\n        shippingLocationId:\n          description: The identification of the shipping location to use for the\n            order.\n          type: string\n        taxId:\n          description: The tax number of the billing entity.\n          type: string\n    TerminalOrdersResponse:\n      properties:\n        data:\n          description: List of orders for payment terminal packages and parts.\n          items:\n            $ref: '#/components/schemas/TerminalOrder'\n          type: array\n    TerminalProduct:\n      properties:\n        description:\n          description: Information about items included and integration options.\n          type: string\n        id:\n          description: The unique identifier of the product.\n          type: string\n        itemsIncluded:\n          description: A list of parts included in the terminal package.\n          items:\n            type: string\n          type: array\n        name:\n          description: The descriptive name of the product.\n          type: string\n        price:\n          description: The price of the product.\n          $ref: '#/components/schemas/Amount'\n    TerminalProductsResponse:\n      properties:\n        data:\n          description: Terminal products that can be ordered.\n          items:\n            $ref: '#/components/schemas/TerminalProduct'\n          type: array\n    TerminalSettings:\n      properties:\n        cardholderReceipt:\n          description: Settings to define the header of the shopper receipt.\n          $ref: '#/components/schemas/CardholderReceipt'\n        connectivity:\n          description: Settings for terminal connectivity features.\n          $ref: '#/components/schemas/Connectivity'\n        gratuities:\n          description: Settings for tipping with or without predefined options to\n            choose from. The maximum number of predefined options is four, or three\n            plus the option to enter a custom tip.\n          items:\n            $ref: '#/components/schemas/Gratuity'\n          type: array\n        hardware:\n          description: Settings for terminal hardware features.\n          $ref: '#/components/schemas/Hardware'\n        nexo:\n          description: Settings for a Terminal API integration.\n          $ref: '#/components/schemas/Nexo'\n        opi:\n          description: Settings for an Oracle Payment Interface (OPI) integration.\n          $ref: '#/components/schemas/Opi'\n        receiptOptions:\n          description: Generic receipt settings.\n          $ref: '#/components/schemas/ReceiptOptions'\n        receiptPrinting:\n          description: Transaction outcomes that you want the terminal to print a\n            merchant receipt or a shopper receipt for.\n          $ref: '#/components/schemas/ReceiptPrinting'\n        signature:\n          description: Settings to skip signature, sign on display, or sign on receipt.\n          $ref: '#/components/schemas/Signature'\n        surcharge:\n          description: Settings for payment [surcharge](https://docs.adyen.com/point-of-sale/surcharge)\n            features.\n          $ref: '#/components/schemas/Surcharge'\n        timeouts:\n          description: Settings for device [time-outs](https://docs.adyen.com/point-of-sale/pos-timeouts#device-time-out).\n          $ref: '#/components/schemas/Timeouts'\n        wifiProfiles:\n          description: Remote Wi-Fi profiles for WPA and WPA2 PSK and EAP Wi-Fi networks.\n          $ref: '#/components/schemas/WifiProfiles'\n    TestCompanyWebhookRequest:\n      properties:\n        merchantIds:\n          description: 'List of `merchantId` values for which test webhooks will be\n            sent. The list can have a maximum of 20 `merchantId` values.\n\n\n            If not specified, we send sample notifications to all the merchant accounts\n            that the webhook is configured for. If this is more than 20 merchant accounts,\n            use this list to specify a subset of the merchant accounts for which to\n            send test notifications.'\n          items:\n            type: string\n          type: array\n        notification:\n          description: Custom test notification object. Required when the [`types`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/companies/{companyId}/webhooks/{webhookId}/test__reqParam_types)\n            list contains **CUSTOM**.\n          $ref: '#/components/schemas/CustomNotification'\n        types:\n          description: \"List of event codes for which to send test notifications.\\\n            \\ Only the webhook types below are supported. \\n\\nPossible values if webhook\\\n            \\ `type`: **standard**:\\n\\n* **AUTHORISATION**\\n* **CHARGEBACK_REVERSED**\\n\\\n            * **ORDER_CLOSED**\\n* **ORDER_OPENED**\\n* **PAIDOUT_REVERSED**\\n* **PAYOUT_THIRDPARTY**\\n\\\n            * **REFUNDED_REVERSED**\\n* **REFUND_WITH_DATA**\\n* **REPORT_AVAILABLE**\\n\\\n            * **CUSTOM** - set your custom notification fields in the [`notification`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/companies/{companyId}/webhooks/{webhookId}/test__reqParam_notification)\\\n            \\ object.\\n\\nPossible values if webhook `type`: **banktransfer-notification**:\\n\\\n            \\n* **PENDING**\\n\\nPossible values if webhook `type`: **report-notification**:\\n\\\n            \\n* **REPORT_AVAILABLE**\\n\\nPossible values if webhook `type`: **ideal-notification**:\\n\\\n            \\n* **AUTHORISATION**\\n\\nPossible values if webhook `type`: **pending-notification**:\\n\\\n            \\n* **PENDING**\\n\"\n          items:\n            type: string\n          type: array\n    TestOutput:\n      properties:\n        merchantId:\n          description: Unique identifier of the merchant account that the notification\n            is about.\n          type: string\n        output:\n          description: 'The response your server returned for the test webhook.\n\n\n            Your server must respond with **[accepted]** for the test webhook to be\n            successful (`data.status`: **success**). Find out more about [accepting\n            notifications](https://docs.adyen.com/development-resources/webhooks#accept-notifications)\n\n\n            You can use the value of this field together with the [`responseCode`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-responseCode)\n            value to troubleshoot unsuccessful test webhooks.'\n          type: string\n        requestSent:\n          description: The [body of the notification webhook](https://docs.adyen.com/development-resources/webhooks/understand-notifications#notification-structure)\n            that was sent to your server.\n          type: string\n        responseCode:\n          description: 'The HTTP response code for your server''s response to the\n            test webhook.\n\n\n            You can use the value of this field together with the the [`output`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-output)\n            field value to troubleshoot failed test webhooks.'\n          example: '200'\n          type: string\n        responseTime:\n          description: The time between sending the test webhook and receiving the\n            response from your server. You can use it as an indication of how long\n            your server takes to process a webhook notification. Measured in milliseconds,\n            for example **304 ms**.\n          type: string\n        status:\n          description: 'The status of the test request. Possible values are:\n\n            * **success**, if `data.output`: **[accepted]** and `data.responseCode`:\n            **200**.\n\n            * **failed**, in all other cases.\n\n\n            You can use the value of the [`output`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-output)\n            field together with the [`responseCode`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-responseCode)\n            value to troubleshoot failed test webhooks.'\n          type: string\n      required:\n      - status\n    TestWebhookRequest:\n      properties:\n        notification:\n          description: Custom test notification object. Required when the [`types`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/companies/{companyId}/webhooks/{webhookId}/test__reqParam_types)\n            list contains **CUSTOM**.\n          $ref: '#/components/schemas/CustomNotification'\n        types:\n          description: \"List of event codes for which to send test notifications.\\\n            \\ Only the webhook types below are supported. \\n\\nPossible values if webhook\\\n            \\ `type`: **standard**:\\n\\n* **AUTHORISATION**\\n* **CHARGEBACK_REVERSED**\\n\\\n            * **ORDER_CLOSED**\\n* **ORDER_OPENED**\\n* **PAIDOUT_REVERSED**\\n* **PAYOUT_THIRDPARTY**\\n\\\n            * **REFUNDED_REVERSED**\\n* **REFUND_WITH_DATA**\\n* **REPORT_AVAILABLE**\\n\\\n            * **CUSTOM** - set your custom notification fields in the [`notification`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/companies/{companyId}/webhooks/{webhookId}/test__reqParam_notification)\\\n            \\ object.\\n\\nPossible values if webhook `type`: **banktransfer-notification**:\\n\\\n            \\n* **PENDING**\\n\\nPossible values if webhook `type`: **report-notification**:\\n\\\n            \\n* **REPORT_AVAILABLE**\\n\\nPossible values if webhook `type`: **ideal-notification**:\\n\\\n            \\n* **AUTHORISATION**\\n\\nPossible values if webhook `type`: **pending-notification**:\\n\\\n            \\n* **PENDING**\\n\"\n          items:\n            type: string\n          type: array\n    TestWebhookResponse:\n      properties:\n        data:\n          description: List with test results. Each test webhook we send has a list\n            element with the result.\n          items:\n            $ref: '#/components/schemas/TestOutput'\n          type: array\n    Timeouts:\n      properties:\n        fromActiveToSleep:\n          description: Indicates the number of seconds of inactivity after which the\n            terminal display goes into sleep mode.\n          format: int32\n          type: integer\n    UninstallAndroidAppDetails:\n      additionalProperties: false\n      properties:\n        appId:\n          description: The unique identifier of the app to be uninstalled.\n          type: string\n        type:\n          default: UninstallAndroidApp\n          description: 'Type of terminal action: Uninstall an Android app.'\n          enum:\n          - UninstallAndroidApp\n          type: string\n    UninstallAndroidCertificateDetails:\n      additionalProperties: false\n      properties:\n        certificateId:\n          description: The unique identifier of the certificate to be uninstalled.\n          type: string\n        type:\n          default: UninstallAndroidCertificate\n          description: 'Type of terminal action: Uninstall an Android certificate.'\n          enum:\n          - UninstallAndroidCertificate\n          type: string\n    UpdatableAddress:\n      properties:\n        city:\n          description: The name of the city.\n          type: string\n        line1:\n          description: The street address.\n          type: string\n        line2:\n          description: Second address line.\n          type: string\n        line3:\n          description: Third address line.\n          type: string\n        postalCode:\n          description: The postal code.\n          type: string\n        stateOrProvince:\n          description: \"The state or province code as defined in [ISO 3166-2](https://www.iso.org/standard/72483.html).\\\n            \\ For example, **ON** for Ontario, Canada.\\n\\nRequired for the following\\\n            \\ countries:\\n - Australia\\n- Brazil\\n- Canada\\n- India\\n- Mexico\\n- New\\\n            \\ Zealand\\n- United States\"\n          type: string\n    UpdateCompanyApiCredentialRequest:\n      properties:\n        active:\n          description: Indicates if the API credential is enabled.\n          type: boolean\n        allowedOrigins:\n          description: The new list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins)\n            for the API credential.\n          items:\n            type: string\n          type: array\n        associatedMerchantAccounts:\n          description: List of merchant accounts that the API credential has access\n            to.\n          items:\n            type: string\n          type: array\n        description:\n          description: Description of the API credential.\n          type: string\n        roles:\n          description: List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1)\n            of the API credential.\n          items:\n            type: string\n          type: array\n    UpdateCompanyUserRequest:\n      properties:\n        accountGroups:\n          description: The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups)\n            associated with this user.\n          items:\n            type: string\n          type: array\n        active:\n          description: Indicates whether this user is active.\n          type: boolean\n        associatedMerchantAccounts:\n          description: The list of [merchant accounts](https://docs.adyen.com/account/account-structure#merchant-accounts)\n            to associate the user with.\n          items:\n            type: string\n          type: array\n        email:\n          description: The email address of the user.\n          type: string\n        name:\n          description: The user's full name.\n          maxLength: 80\n          minLength: 1\n          $ref: '#/components/schemas/Name2'\n        roles:\n          description: The list of [roles](https://docs.adyen.com/account/user-roles)\n            for this user.\n          items:\n            type: string\n          type: array\n        timeZoneCode:\n          description: The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)\n            of the time zone of the user. For example, **Europe/Amsterdam**.\n          type: string\n    UpdateCompanyWebhookRequest:\n      properties:\n        acceptsExpiredCertificate:\n          description: 'Indicates if expired SSL certificates are accepted. Default\n            value: **false**.'\n          type: boolean\n        acceptsSelfSignedCertificate:\n          description: 'Indicates if self-signed SSL certificates are accepted. Default\n            value: **false**.'\n          type: boolean\n        acceptsUntrustedRootCertificate:\n          description: 'Indicates if untrusted SSL certificates are accepted. Default\n            value: **false**.'\n          type: boolean\n        active:\n          description: Indicates if the webhook configuration is active. The field\n            must be **true** for us to send webhooks about events related an account.\n          type: boolean\n        additionalSettings:\n          description: Additional shopper and transaction information to be included\n            in your [standard notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes).\n            Find out more about the available [additional settings](https://docs.adyen.com/development-resources/webhooks/additional-settings).\n          $ref: '#/components/schemas/AdditionalSettings'\n        communicationFormat:\n          description: 'Format or protocol for receiving webhooks. Possible values:\n\n            * **soap**\n\n            * **http**\n\n            * **json** '\n          enum:\n          - HTTP\n          - JSON\n          - SOAP\n          example: SOAP\n          type: string\n        description:\n          description: Your description for this webhook configuration.\n          type: string\n        filterMerchantAccountType:\n          description: 'Shows how merchant accounts are filtered when configuring\n            the webhook. Possible values:\n\n            * **includeAccounts**: The webhook is configured for the merchant accounts\n            listed in `filterMerchantAccounts`.\n\n            * **excludeAccounts**: The webhook is not configured for the merchant\n            accounts listed in `filterMerchantAccounts`.\n\n            * **allAccounts**: Includes all merchant accounts, and does not require\n            specifying `filterMerchantAccounts`.'\n          enum:\n          - EXCLUDE_LIST\n          - INCLUDE_ALL\n          - INCLUDE_LIST\n          type: string\n        filterMerchantAccounts:\n          description: 'A list of merchant account names that are included or excluded\n            from receiving the webhook. Inclusion or exclusion is based on the value\n            defined for `filterMerchantAccountType`.\n\n\n            Required if `filterMerchantAccountType` is either:\n\n            * **includeAccounts**\n\n            * **excludeAccounts**\n\n\n            Not needed for `filterMerchantAccountType`: **allAccounts**.'\n          items:\n            type: string\n          type: array\n        networkType:\n          description: 'Network type for Terminal API notification webhooks. Possible\n            values:\n\n            * **public**\n\n            * **local**\n\n\n            Default Value: **public**.'\n          enum:\n          - LOCAL\n          - PUBLIC\n          type: string\n        password:\n          description: Password to access the webhook URL.\n          type: string\n        populateSoapActionHeader:\n          description: 'Indicates if the SOAP action header needs to be populated.\n            Default value: **false**.\n\n\n            Only applies if `communicationFormat`: **soap**.'\n          type: boolean\n        sslVersion:\n          description: 'SSL version to access the public webhook URL specified in\n            the `url` field. Possible values:\n\n            * **TLSv1.2**\n\n            * **SSL**\n\n            * **SSLv3**\n\n            * **TLS**\n\n            * **TLSv1**\n\n            * **TLSv1.1**\n\n\n            If not specified, the webhook will use `sslVersion`: **TLSv1.2**.'\n          enum:\n          - HTTP\n          - SSL\n          - SSLV3\n          - SSL_INSECURE_CIPHERS\n          - TLS\n          - TLSV1\n          - TLSV1_1\n          - TLSV1_2\n          - TLSV1_INSECURE_CIPHERS\n          example: SSL\n          type: string\n        url:\n          description: Public URL where webhooks will be sent, for example **https://www.domain.com/webhook-endpoint**.\n          example: http://www.adyen.com\n          type: string\n        username:\n          description: Username to access the webhook URL.\n          maxLength: 255\n          type: string\n      required:\n      - url\n    UpdateMerchantApiCredentialRequest:\n      properties:\n        active:\n          description: Indicates if the API credential is enabled.\n          type: boolean\n        allowedOrigins:\n          description: The new list of [allowed origins](https://docs.adyen.com/development-resources/client-side-authentication#allowed-origins)\n            for the API credential.\n          items:\n            type: string\n          type: array\n        description:\n          description: Description of the API credential.\n          type: string\n        roles:\n          description: List of [roles](https://docs.adyen.com/development-resources/api-credentials#roles-1)\n            for the API credential.\n          items:\n            type: string\n          type: array\n    UpdateMerchantUserRequest:\n      properties:\n        accountGroups:\n          description: The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups)\n            associated with this user.\n          items:\n            type: string\n          type: array\n        active:\n          description: Sets the status of the user to active (**true**) or inactive\n            (**false**).\n          type: boolean\n        email:\n          description: The email address of the user.\n          type: string\n        name:\n          description: The user's full name.\n          maxLength: 80\n          minLength: 1\n          $ref: '#/components/schemas/Name2'\n        roles:\n          description: The list of [roles](https://docs.adyen.com/account/user-roles)\n            for this user.\n          items:\n            type: string\n          type: array\n        timeZoneCode:\n          description: The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)\n            of the time zone of the user. For example, **Europe/Amsterdam**.\n          type: string\n    UpdateMerchantWebhookRequest:\n      properties:\n        acceptsExpiredCertificate:\n          description: 'Indicates if expired SSL certificates are accepted. Default\n            value: **false**.'\n          type: boolean\n        acceptsSelfSignedCertificate:\n          description: 'Indicates if self-signed SSL certificates are accepted. Default\n            value: **false**.'\n          type: boolean\n        acceptsUntrustedRootCertificate:\n          description: 'Indicates if untrusted SSL certificates are accepted. Default\n            value: **false**.'\n          type: boolean\n        active:\n          description: Indicates if the webhook configuration is active. The field\n            must be **true** for us to send webhooks about events related an account.\n          type: boolean\n        additionalSettings:\n          description: Additional shopper and transaction information to be included\n            in your [standard notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes).\n            Find out more about the available [additional settings](https://docs.adyen.com/development-resources/webhooks/additional-settings).\n          $ref: '#/components/schemas/AdditionalSettings'\n        communicationFormat:\n          description: 'Format or protocol for receiving webhooks. Possible values:\n\n            * **soap**\n\n            * **http**\n\n            * **json** '\n          enum:\n          - HTTP\n          - JSON\n          - SOAP\n          example: SOAP\n          type: string\n        description:\n          description: Your description for this webhook configuration.\n          type: string\n        networkType:\n          description: 'Network type for Terminal API notification webhooks. Possible\n            values:\n\n            * **public**\n\n            * **local**\n\n\n            Default Value: **public**.'\n          enum:\n          - LOCAL\n          - PUBLIC\n          type: string\n        password:\n          description: Password to access the webhook URL.\n          type: string\n        populateSoapActionHeader:\n          description: 'Indicates if the SOAP action header needs to be populated.\n            Default value: **false**.\n\n\n            Only applies if `communicationFormat`: **soap**.'\n          type: boolean\n        sslVersion:\n          description: 'SSL version to access the public webhook URL specified in\n            the `url` field. Possible values:\n\n            * **TLSv1.2**\n\n            * **SSL**\n\n            * **SSLv3**\n\n            * **TLS**\n\n            * **TLSv1**\n\n            * **TLSv1.1**\n\n\n            If not specified, the webhook will use `sslVersion`: **TLSv1.2**.'\n          enum:\n          - HTTP\n          - SSL\n          - SSLV3\n          - SSL_INSECURE_CIPHERS\n          - TLS\n          - TLSV1\n          - TLSV1_1\n          - TLSV1_2\n          - TLSV1_INSECURE_CIPHERS\n          example: SSL\n          type: string\n        url:\n          description: Public URL where webhooks will be sent, for example **https://www.domain.com/webhook-endpoint**.\n          example: http://www.adyen.com\n          type: string\n        username:\n          description: Username to access the webhook URL.\n          maxLength: 255\n          type: string\n      required:\n      - url\n      - active\n      - communicationFormat\n    UpdatePaymentMethodInfo:\n      properties:\n        countries:\n          description: The list of countries where a payment method is available.\n            By default, all countries supported by the payment method.\n          items:\n            type: string\n          type: array\n        currencies:\n          description: The list of currencies that a payment method supports. By default,\n            all currencies supported by the payment method.\n          items:\n            type: string\n          type: array\n        enabled:\n          description: Indicates whether the payment method is enabled (**true**)\n            or disabled (**false**).\n          type: boolean\n    UpdateStoreRequest:\n      properties:\n        address:\n          description: The address of the store. It is not possible to update the\n            country of the store.\n          $ref: '#/components/schemas/UpdatableAddress'\n        businessLineIds:\n          description: The unique identifiers of the [business lines](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businesslines__resParam_id)\n            that the store is associated with.\n          items:\n            type: string\n          type: array\n        description:\n          description: The description of the store.\n          type: string\n        externalReferenceId:\n          description: 'When using the Zip payment method: The location ID that Zip\n            has assigned to your store.'\n          type: string\n        splitConfiguration:\n          description: Rules for Adyen for Platform merchants to split commission\n            fees.\n          $ref: '#/components/schemas/StoreSplitConfiguration'\n        status:\n          description: \"The status of the store. Possible values are:\\n\\n- **active**:\\\n            \\ This value is assigned automatically when a store is created. \\n- **inactive**:\\\n            \\ The maximum [transaction limits and number of Store-and-Forward transactions](https://docs.adyen.com/point-of-sale/determine-account-structure/configure-features#payment-features)\\\n            \\ for the store are set to 0. This blocks new transactions, but captures\\\n            \\ are still possible.\\n- **closed**: The terminals of the store are reassigned\\\n            \\ to the merchant inventory, so they can't process payments.\\n\\nYou can\\\n            \\ change the status from **active** to **inactive**, and from **inactive**\\\n            \\ to **active** or **closed**. \\nOnce **closed**, a store can't be reopened.\"\n          enum:\n          - active\n          - closed\n          - inactive\n          type: string\n    Url:\n      properties:\n        password:\n          description: The password for authentication of the event notifications.\n          type: string\n        url:\n          description: 'The URL in the format: http(s)://domain.com.'\n          type: string\n        username:\n          description: The username for authentication of the event notifications.\n          type: string\n    User:\n      properties:\n        _links:\n          description: References to resources connected with this user.\n          $ref: '#/components/schemas/Links'\n        accountGroups:\n          description: The list of [account groups](https://docs.adyen.com/account/account-structure#account-groups)\n            associated with this user.\n          items:\n            type: string\n          type: array\n        active:\n          description: Indicates whether this user is active.\n          type: boolean\n        email:\n          description: The email address of the user.\n          type: string\n        id:\n          description: The unique identifier of the user.\n          type: string\n        name:\n          description: The user's full name.\n          $ref: '#/components/schemas/Name'\n        roles:\n          description: The list of [roles](https://docs.adyen.com/account/user-roles)\n            for this user.\n          items:\n            type: string\n          type: array\n        timeZoneCode:\n          description: The [tz database name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)\n            of the time zone of the user. For example, **Europe/Amsterdam**.\n          type: string\n        username:\n          description: The username for this user.\n          maxLength: 255\n          minLength: 1\n          type: string\n      required:\n      - id\n      - email\n      - timeZoneCode\n      - username\n      - roles\n    Void: {}\n    Webhook:\n      properties:\n        _links:\n          description: References to resources connected with this webhook.\n          $ref: '#/components/schemas/WebhookLinks'\n        acceptsExpiredCertificate:\n          description: 'Indicates if expired SSL certificates are accepted. Default\n            value: **false**.'\n          type: boolean\n        acceptsSelfSignedCertificate:\n          description: 'Indicates if self-signed SSL certificates are accepted. Default\n            value: **false**.'\n          type: boolean\n        acceptsUntrustedRootCertificate:\n          description: 'Indicates if untrusted SSL certificates are accepted. Default\n            value: **false**.'\n          type: boolean\n        active:\n          description: Indicates if the webhook configuration is active. The field\n            must be **true** for you to receive webhooks about events related an account.\n          type: boolean\n        additionalSettings:\n          description: Additional shopper and transaction information to be included\n            in your [standard notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes).\n            Find out more about the available [additional settings](https://docs.adyen.com/development-resources/webhooks/additional-settings).\n          $ref: '#/components/schemas/AdditionalSettingsResponse'\n        certificateAlias:\n          description: The alias of our SSL certificate. When you receive a notification\n            from us, the alias from the HMAC signature will match this alias.\n          type: string\n        communicationFormat:\n          description: 'Format or protocol for receiving webhooks. Possible values:\n\n            * **soap**\n\n            * **http**\n\n            * **json** '\n          enum:\n          - HTTP\n          - JSON\n          - SOAP\n          example: SOAP\n          type: string\n        description:\n          description: Your description for this webhook configuration.\n          type: string\n        filterMerchantAccountType:\n          description: 'Shows how merchant accounts are included in company-level\n            webhooks. Possible values:\n\n            * **includeAccounts**\n\n            * **excludeAccounts**\n\n            * **allAccounts**: Includes all merchant accounts, and does not require\n            specifying `filterMerchantAccounts`.'\n          enum:\n          - EXCLUDE_LIST\n          - INCLUDE_ALL\n          - INCLUDE_LIST\n          type: string\n        filterMerchantAccounts:\n          description: 'A list of merchant account names that are included or excluded\n            from receiving the webhook. Inclusion or exclusion is based on the value\n            defined for `filterMerchantAccountType`.\n\n\n            Required if `filterMerchantAccountType` is either:\n\n            * **includeAccounts**\n\n            * **excludeAccounts**\n\n\n            Not needed for `filterMerchantAccountType`: **allAccounts**.'\n          items:\n            type: string\n          type: array\n        hasError:\n          description: Indicates if the webhook configuration has errors that need\n            troubleshooting. If the value is **true**, troubleshoot the configuration\n            using the [testing endpoint](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/companies/{companyId}/webhooks/{webhookid}/test).\n          type: boolean\n        hasPassword:\n          description: Indicates if the webhook is password protected.\n          type: boolean\n        hmacKeyCheckValue:\n          description: The [checksum](https://en.wikipedia.org/wiki/Key_checksum_value)\n            of the HMAC key generated for this webhook. You can use this value to\n            uniquely identify the HMAC key configured for this webhook.\n          type: string\n        id:\n          description: Unique identifier for this webhook.\n          type: string\n        networkType:\n          description: Network type for Terminal API details webhooks.\n          enum:\n          - LOCAL\n          - PUBLIC\n          type: string\n        populateSoapActionHeader:\n          description: 'Indicates if the SOAP action header needs to be populated.\n            Default value: **false**.\n\n\n            Only applies if `communicationFormat`: **soap**.'\n          type: boolean\n        sslVersion:\n          description: 'SSL version to access the public webhook URL specified in\n            the `url` field. Possible values:\n\n            * **TLSv1.2**\n\n            * **SSL**\n\n            * **SSLv3**\n\n            * **TLS**\n\n            * **TLSv1**\n\n            * **TLSv1.1**\n\n\n            If not specified, the webhook will use `sslVersion`: **TLSv1.2**.'\n          enum:\n          - HTTP\n          - SSL\n          - SSLV3\n          - SSL_INSECURE_CIPHERS\n          - TLS\n          - TLSV1\n          - TLSV1_1\n          - TLSV1_2\n          - TLSV1_INSECURE_CIPHERS\n          example: SSL\n          type: string\n        type:\n          description: 'The type of webhook. Possible values are:\n\n\n            - **standard**\n\n            - **account-settings-notification**\n\n            - **banktransfer-notification**\n\n            - **boletobancario-notification**\n\n            - **directdebit-notification**\n\n            - **pending-notification**\n\n            - **ideal-notification**\n\n            - **ideal-pending-notification**\n\n            - **report-notification**\n\n            - **terminal-api-notification**\n\n\n            Find out more about [standard notification webhooks](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes)\n            and [other types of notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#other-notifications).'\n          type: string\n        url:\n          description: Public URL where webhooks will be sent, for example **https://www.domain.com/webhook-endpoint**.\n          example: http://www.adyen.com\n          type: string\n        username:\n          description: Username to access the webhook URL.\n          type: string\n      required:\n      - type\n      - url\n      - active\n      - communicationFormat\n    WebhookLinks:\n      properties:\n        company:\n          description: The company account that the webhook is configured for. Only\n            present for company-level webhooks.\n          $ref: '#/components/schemas/LinksElement'\n        generateHmac:\n          description: Generate an HMAC key.\n          $ref: '#/components/schemas/LinksElement'\n        merchant:\n          description: The merchant account that the webhook is configured for. Only\n            present for merchant-level webhooks.\n          $ref: '#/components/schemas/LinksElement'\n        self:\n          description: Link to the resource itself.\n          $ref: '#/components/schemas/LinksElement'\n        testWebhook:\n          description: Test the webhook setup.\n          $ref: '#/components/schemas/LinksElement'\n      required:\n      - self\n      - testWebhook\n      - generateHmac\n    WifiProfiles:\n      properties:\n        profiles:\n          description: List of remote Wi-Fi profiles\n          items:\n            $ref: '#/components/schemas/Profile'\n          type: array\n        settings:\n          description: General Wi-Fi settings\n          $ref: '#/components/schemas/Settings'\n  securitySchemes:\n    ApiKeyAuth:\n      in: header\n      name: X-API-Key\n      type: apiKey\n    BasicAuth:\n      scheme: basic\n      type: http\n  examples:\n    get-companies-companyId-androidApps-success-200:\n      summary: Response code - 200 OK\n      description: Example response when getting a list of Android apps\n      value:\n        androidApps:\n        - id: ANDA422LZ223223K5F694GCCF732K8\n          packageName: com.your_company.posapp\n          versionCode: 7700203\n          description: POS2\n          label: POS system\n          versionName: '7.7'\n          status: ready\n        - id: ANDA422LZ223223K5F694FWCF738PL\n          packageName: com.your_company.posapp\n          versionCode: 7602003\n          description: POS1\n          label: POS system\n          versionName: '7.6'\n          status: ready\n    get-companies-companyId-androidCertificates-success-200:\n      summary: Response code - 200 OK\n      description: Example response when getting a list of Android certificates\n      value:\n        androidCertificates:\n        - id: ANDC422LZ223223K5F78NVN9SL4VPH\n          name: mycert\n          extension: .crt\n          description: ''\n          status: ready\n          notBefore: '2008-04-20T00:00:00+02:00'\n          notAfter: '2038-04-12T00:00:00+02:00'\n        - id: ANDC533MA33433L689OWO0TM5WQI\n          name: mynewcert\n          extension: .pem\n          description: ''\n          status: ready\n          notBefore: 20018-04-20T00:00:00+02:00\n          notAfter: '2048-04-12T00:00:00+02:00'\n    get-companies-companyId-apiCredentials-success-200:\n      summary: List of API credentials\n      description: Example response when your API credential has access to 25 API\n        credentials at the company level\n      value:\n        _links:\n          first:\n            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials?pageNumber=1\u0026pageSize=10\n          last:\n            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials?pageNumber=3\u0026pageSize=10\n          next:\n            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials?pageNumber=2\u0026pageSize=10\n          self:\n            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials?pageNumber=1\u0026pageSize=10\n        itemsTotal: 25\n        pagesTotal: 3\n        data:\n        - id: YOUR_API_CREDENTIAL_1\n          username: YOUR_USERNAME_1\n          clientKey: YOUR_CLIENT_KEY_1\n          allowedIpAddresses: []\n          roles:\n          - Checkout encrypted cardholder data\n          - Merchant Recurring role\n          - Checkout webservice role\n          active: true\n          allowedOrigins:\n          - id: YOUR_ALLOWED_ORIGIN_1\n            domain: http://localhost\n            _links:\n              self:\n                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_1/allowedOrigins/YOUR_ALLOWED_ORIGIN_1\n          - id: YOUR_ALLOWED_ORIGIN_2\n            domain: http://localhost:3000\n            _links:\n              self:\n                href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_1/allowedOrigins/YOUR_ALLOWED_ORIGIN_2\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_1\n            allowedOrigins:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_1/allowedOrigins\n            company:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT\n            generateApiKey:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_1/generateApiKey\n            generateClientKey:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_1/generateClientKey\n          associatedMerchantAccounts: []\n        - id: YOUR_API_CREDENTIAL_2\n          username: YOUR_USERNAME_2\n          clientKey: YOUR_CLIENT_KEY_2\n          allowedIpAddresses: []\n          roles:\n          - Checkout encrypted cardholder data\n          - Merchant Recurring role\n          - Checkout webservice role\n          active: true\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_2\n            allowedOrigins:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_2/allowedOrigins\n            company:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT\n            generateApiKey:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_2/generateApiKey\n            generateClientKey:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_2/generateClientKey\n          associatedMerchantAccounts: []\n        - id: YOUR_API_CREDENTIAL_3\n          username: YOUR_USERNAME_3\n          clientKey: YOUR_CLIENT_KEY_3\n          allowedIpAddresses: []\n          roles:\n          - API Supply MPI data with Payments\n          - Checkout encrypted cardholder data\n          - Merchant Recurring role\n          - API PCI Payments role\n          - Checkout webservice role\n          - API 3DS 2.0 to retrieve the ThreeDS2Result for authentication only\n          active: true\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3\n            allowedOrigins:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3/allowedOrigins\n            company:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT\n            generateApiKey:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3/generateApiKey\n            generateClientKey:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_3/generateClientKey\n          associatedMerchantAccounts: []\n        - id: YOUR_API_CREDENTIAL_4\n          username: YOUR_USERNAME_4\n          clientKey: YOUR_CLIENT_KEY_4\n          allowedIpAddresses: []\n          roles:\n          - Checkout encrypted cardholder data\n          - Checkout webservice role\n          active: true\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_4\n            allowedOrigins:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_4/allowedOrigins\n            company:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT\n            generateApiKey:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_4/generateApiKey\n            generateClientKey:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_4/generateClientKey\n          associatedMerchantAccounts:\n          - YOUR_MERCHANT_ACCOUNT_1\n        - id: YOUR_API_CREDENTIAL_5\n          username: YOUR_USERNAME_5\n          clientKey: YOUR_CLIENT_KEY_5\n          allowedIpAddresses: []\n          roles:\n          - Checkout encrypted cardholder data\n          - Merchant Recurring role\n          - API Authorise Referred Payments\n          - API PCI Payments role\n          - Checkout webservice role\n          - Merchant PAL Webservice role\n          active: true\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_5\n            allowedOrigins:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_5/allowedOrigins\n            company:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT\n            generateApiKey:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_5/generateApiKey\n            generateClientKey:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_5/generateClientKey\n          associatedMerchantAccounts: []\n        - id: YOUR_API_CREDENTIAL_6\n          username: YOUR_USERNAME_6\n          allowedIpAddresses: []\n          roles:\n          - Merchant Report Download role\n          active: true\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_6\n            allowedOrigins:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_6/allowedOrigins\n            company:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT\n            generateApiKey:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_6/generateApiKey\n            generateClientKey:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_6/generateClientKey\n          associatedMerchantAccounts: []\n        - id: YOUR_API_CREDENTIAL_7\n          username: YOUR_USERNAME_7\n          allowedIpAddresses: []\n          roles:\n          - Merchant Report Download role\n          active: true\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_7\n            allowedOrigins:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_7/allowedOrigins\n            company:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT\n            generateApiKey:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_7/generateApiKey\n            generateClientKey:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_7/generateClientKey\n          associatedMerchantAccounts:\n          - YOUR_MERCHANT_ACCOUNT_2\n          - YOUR_MERCHANT_ACCOUNT_3\n        - id: YOUR_API_CREDENTIAL_8\n          username: YOUR_USERNAME_8\n          allowedIpAddresses: []\n          roles:\n          - Merchant Report Download role\n          active: true\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_8\n            allowedOrigins:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_8/allowedOrigins\n            company:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT\n            generateApiKey:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_8/generateApiKey\n            generateClientKey:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_8/generateClientKey\n          associatedMerchantAccounts: []\n        - id: YOUR_API_CREDENTIAL_9\n          username: YOUR_USERNAME_9\n          allowedIpAddresses: []\n          roles:\n          - Merchant Report Download role\n          active: true\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_9\n            allowedOrigins:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_9/allowedOrigins\n            company:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT\n            generateApiKey:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_9/generateApiKey\n            generateClientKey:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_9/generateClientKey\n          associatedMerchantAccounts:\n          - YOUR_MERCHANT_ACCOUNT_4\n          - YOUR_MERCHANT_ACCOUNT_5\n        - id: YOUR_API_CREDENTIAL_10\n          username: YOUR_USERNAME_10\n          allowedIpAddresses: []\n          roles:\n          - Merchant Report Download role\n          active: true\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_10\n            allowedOrigins:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_10/allowedOrigins\n            company:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT\n            generateApiKey:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_10/generateApiKey\n            generateClientKey:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials/YOUR_API_CREDENTIAL_10/generateClientKey\n          associatedMerchantAccounts: []\n    get-companies-companyId-billingEntities-success-200:\n      summary: Response code - 200 OK\n      description: Example response with billing entities for a company\n      value:\n        data:\n        - id: Company.YOUR_COMPANY\n          name: YOUR_COMPANY\n          taxId: NL1234567890\n          email: Paul.Green@company.com\n          address:\n            streetAddress: Simon Carmiggeltstraat 6-50\n            postalCode: 1011 DJ\n            city: Amsterdam\n            country: NL\n        - id: MerchantAccount.YOUR_MERCHANT_ACCOUNT\n          name: YOUR_MERCHANT_ACCOUNT\n          taxId: ES1234567890\n          email: Pablo.Mengano@company.com\n          address:\n            streetAddress: Paseo de la Castellana 43, 7\n            postalCode: '28046'\n            city: Madrid\n            country: ES\n    get-companies-companyId-merchants-success-200:\n      summary: List of merchant accounts\n      description: Example response when your API credential has access to 22 merchant\n        accounts\n      value:\n        _links:\n          first:\n            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/merchants?pageNumber=1\u0026pageSize=10\n          last:\n            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/merchants?pageNumber=3\u0026pageSize=10\n          next:\n            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/merchants?pageNumber=2\u0026pageSize=10\n          self:\n            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/merchants?pageNumber=1\u0026pageSize=10\n        itemsTotal: 22\n        pagesTotal: 3\n        data:\n        - id: YOUR_MERCHANT_ACCOUNT_1\n          name: YOUR_MERCHANT_NAME_1\n          captureDelay: immediate\n          defaultShopperInteraction: Ecommerce\n          status: Active\n          shopWebAddress: YOUR_SHOP_URL_1\n          merchantCity: Amsterdam\n          primarySettlementCurrency: EUR\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1\n            apiCredentials:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1/apiCredentials\n            users:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1/users\n            webhooks:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1/webhooks\n        - id: YOUR_MERCHANT_ACCOUNT_2\n          name: YOUR_MERCHANT_NAME_2\n          captureDelay: immediate\n          defaultShopperInteraction: POS\n          status: Active\n          shopWebAddress: YOUR_SHOP_URL_2\n          merchantCity: ''\n          primarySettlementCurrency: EUR\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2\n            apiCredentials:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2/apiCredentials\n            users:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2/users\n            webhooks:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2/webhooks\n        - id: YOUR_MERCHANT_ACCOUNT_3\n          status: Active\n          merchantCity: Amsterdam\n          primarySettlementCurrency: EUR\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3\n            apiCredentials:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3/apiCredentials\n            users:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3/users\n            webhooks:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3/webhooks\n        - id: YOUR_MERCHANT_ACCOUNT_4\n          name: YOUR_MERCHANT_NAME_4\n          captureDelay: immediate\n          defaultShopperInteraction: Ecommerce\n          status: Active\n          shopWebAddress: YOUR_SHOP_URL_4\n          merchantCity: Sao Paulo\n          primarySettlementCurrency: BRL\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4\n            apiCredentials:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4/apiCredentials\n            users:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4/users\n            webhooks:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4/webhooks\n        - id: YOUR_MERCHANT_ACCOUNT_5\n          name: YOUR_MERCHANT_NAME_5\n          captureDelay: '3'\n          defaultShopperInteraction: Ecommerce\n          status: Active\n          shopWebAddress: YOUR_SHOP_URL_5\n          primarySettlementCurrency: EUR\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5\n            apiCredentials:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5/apiCredentials\n            users:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5/users\n            webhooks:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5/webhooks\n        - id: YOUR_MERCHANT_ACCOUNT_6\n          name: YOUR_MERCHANT_NAME_6\n          captureDelay: immediate\n          defaultShopperInteraction: Ecommerce\n          status: Active\n          shopWebAddress: YOUR_SHOP_URL_6\n          merchantCity: Zagreb\n          primarySettlementCurrency: BRL\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_6\n            apiCredentials:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_6/apiCredentials\n            users:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_6/users\n            webhooks:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_6/webhooks\n        - id: YOUR_MERCHANT_ACCOUNT_7\n          name: YOUR_MERCHANT_NAME_7\n          captureDelay: manual\n          defaultShopperInteraction: Moto\n          status: Active\n          shopWebAddress: YOUR_SHOP_URL_7\n          merchantCity: Amsterdam\n          primarySettlementCurrency: EUR\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7\n            apiCredentials:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7/apiCredentials\n            users:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7/users\n            webhooks:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7/webhooks\n        - id: YOUR_MERCHANT_ACCOUNT_8\n          name: YOUR_MERCHANT_NAME_8\n          captureDelay: immediate\n          defaultShopperInteraction: Ecommerce\n          status: Active\n          shopWebAddress: YOUR_SHOP_URL_8\n          merchantCity: Amsterdam\n          primarySettlementCurrency: EUR\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8\n            apiCredentials:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8/apiCredentials\n            users:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8/users\n            webhooks:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8/webhooks\n        - id: YOUR_MERCHANT_ACCOUNT_9\n          name: YOUR_MERCHANT_NAME_9\n          captureDelay: '3'\n          defaultShopperInteraction: Ecommerce\n          status: Active\n          shopWebAddress: YOUR_SHOP_URL_9\n          merchantCity: ''\n          primarySettlementCurrency: EUR\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9\n            apiCredentials:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9/apiCredentials\n            users:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9/users\n            webhooks:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9/webhooks\n        - id: YOUR_MERCHANT_ACCOUNT_10\n          name: YOUR_MERCHANT_NAME_10\n          captureDelay: manual\n          defaultShopperInteraction: Ecommerce\n          status: Active\n          shopWebAddress: YOUR_SHOP_URL_10\n          merchantCity: Paris\n          primarySettlementCurrency: EUR\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10\n            apiCredentials:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10/apiCredentials\n            users:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10/users\n            webhooks:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10/webhooks\n    get-companies-companyId-shippingLocations-success-200:\n      summary: Response code - 200 OK\n      description: Example response with shipping locations for a company\n      value:\n        data:\n        - id: S2-232A6D2967356F424F4369432B3F486B6A6D\n          name: YOUR_COMPANY HQ - POS Ops\n          contact:\n            firstName: Paul\n            lastName: Green\n            email: Paul.Green@company.com\n          address:\n            streetAddress: Simon Carmiggeltstraat\n            streetAddress2: 6-50\n            postalCode: 1011 DJ\n            city: Amsterdam\n            country: NL\n        - id: S2-6A6C2E3432747D4F2F2C3455485E3836457D\n          name: YOUR_COMPANY Spain\n          contact:\n            firstName: Pablo\n            lastName: Mengano\n            phoneNumber: '+34911234567'\n            email: Pablo.Mengano@company.com\n          address:\n            streetAddress: Paseo de la Castellana 43\n            streetAddress2: 7 piso\n            postalCode: '28046'\n            city: Madrid\n            country: ES\n    get-companies-companyId-success-200:\n      summary: Details of the company account\n      description: Example response with the details of the company account.\n      value:\n        id: YOUR_COMPANY_ACCOUNT\n        name: YOUR_SHOP_NAME\n        status: Active\n        dataCenters:\n        - name: default\n          livePrefix: ''\n        _links:\n          self:\n            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT\n          apiCredentials:\n            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials\n          users:\n            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/users\n          webhooks:\n            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks\n    get-companies-companyId-terminalActions-success-200:\n      summary: Response code - 200 OK\n      description: Example response when getting a list of scheduled terminal actions\n      value:\n        data:\n        - actionType: InstallAndroidApp\n          config: '{\"apps\":\"com.adyen.android.calculator:103\"}'\n          confirmedAt: '2021-11-10T00:00:00+01:00'\n          result: Cancelled manually by user USER@Psp.AdyenPspService\n          scheduledAt: '2021-11-10T14:53:05+01:00'\n          status: cancelled\n          terminalId: S1E-000150183300032\n    get-companies-companyId-terminalLogos-success-200:\n      summary: Response code - 200 OK\n      description: Example response when getting the logo of a payment terminal\n      value:\n        data: BASE-64_ENCODED_STRING\n    get-companies-companyId-terminalModels-success-200:\n      summary: Response code - 200 OK\n      description: Example response with the terminal models that the company has\n        access to\n      value:\n        data:\n        - id: Verifone.e315\n          name: Verifone e315\n        - id: Verifone.e315M\n          name: Verifone e315M\n        - id: Verifone.E355\n          name: Verifone E355\n        - id: Verifone.M400\n          name: Verifone M400\n        - id: Verifone.MX915\n          name: Verifone MX915\n        - id: Verifone.MX925\n          name: Verifone MX925\n        - id: Verifone.P400\n          name: Verifone P400\n        - id: Verifone.P400Plus\n          name: Verifone P400Plus\n        - id: Verifone.P400Eth\n          name: Verifone P400Eth\n        - id: Verifone.V240m\n          name: Verifone V240m\n        - id: Verifone.V240mPlus\n          name: Verifone V240mPlus\n        - id: Verifone.UX300\n          name: Verifone UX300\n        - id: Verifone.V200cPlus\n          name: Verifone V200cPlus\n        - id: Verifone.V400cPlus\n          name: Verifone V400cPlus\n        - id: Verifone.V400m\n          name: Verifone V400m\n        - id: Verifone.V210mPlus\n          name: Verifone V210mPlus\n        - id: Verifone.VX520\n          name: Verifone VX520\n        - id: Verifone.VX6753G\n          name: Verifone VX6753G\n        - id: Verifone.VX675WIFIBT\n          name: Verifone VX675WIFIBT\n        - id: Verifone.VX680\n          name: Verifone VX680\n        - id: Verifone.VX6803G\n          name: Verifone VX6803G\n        - id: Verifone.VX690\n          name: Verifone VX690\n        - id: Verifone.VX700\n          name: Verifone VX700\n        - id: Verifone.VX810\n          name: Verifone VX810\n        - id: Verifone.VX820\n          name: Verifone VX820\n        - id: Verifone.VX825\n          name: Verifone VX825\n        - id: Verifone.e285\n          name: Verifone e285\n        - id: Verifone.E285\n          name: Verifone E285\n        - id: Verifone.e285p\n          name: Verifone e285p\n        - id: Verifone.e280\n          name: Verifone e280\n        - id: Verifone.UX410\n          name: Verifone UX410\n        - id: Castles.S1E\n          name: Castles S1E\n        - id: Castles.S1EL\n          name: Castles S1EL\n        - id: Castles.S1F\n          name: Castles S1F\n        - id: Castles.S1F2\n          name: Castles S1F2\n        - id: Castles.S1F2L\n          name: Castles S1F2L\n        - id: Castles.S1E2\n          name: Castles S1E2\n        - id: Castles.S1E2L\n          name: Castles S1E2L\n    get-companies-companyId-terminalOrders-orderId-success-200:\n      summary: Response code - 200 OK\n      description: Example response with the details of the terminal products order\n      value:\n        id: '5265677890100681'\n        customerOrderReference: YOUR_REFERENCE_1\n        status: Placed\n        shippingLocation:\n          id: S2-232A6D2967356F424F4369432B3F486B6A6D\n          name: YOUR_COMPANY HQ - POS Ops\n          contact:\n            firstName: Paul\n            lastName: Green\n            email: Paul.Green@company.com\n          address:\n            streetAddress: Simon Carmiggeltstraat\n            streetAddress2: 6-50\n            postalCode: 1011 DJ\n            city: Amsterdam\n            country: NL\n        billingEntity:\n          id: Company.YOUR_COMPANY\n          name: YOUR_COMPANY\n          taxId: NL1234567890\n          email: Paul.Green@company.com\n          address:\n            streetAddress: Simon Carmiggeltstraat 6-50\n            postalCode: 1011 DJ\n            city: Amsterdam\n            country: NL\n        orderDate: '2022-01-20T14:12:33Z'\n        items:\n        - id: TBOX-V400m-684-EU\n          name: V400m Package\n          quantity: 1\n        - id: PART-175746-EU\n          name: Adyen Test Card\n          quantity: 1\n    get-companies-companyId-terminalOrders-success-200:\n      summary: Response code - 200 OK\n      description: Example response with the terminal orders for a company\n      value:\n        data:\n        - id: '5265677890100681'\n          customerOrderReference: YOUR_REFERENCE_C2\n          status: Placed\n          shippingLocation:\n            id: S2-232A6D2967356F424F4369432B3F486B6A6D\n            name: YOUR_COMPANY HQ - POS Ops\n            contact:\n              firstName: Paul\n              lastName: Green\n              email: Paul.Green@company.com\n            address:\n              streetAddress: Simon Carmiggeltstraat\n              streetAddress2: 6-50\n              postalCode: 1011 DJ\n              city: Amsterdam\n              country: NL\n          billingEntity:\n            id: Company.YOUR_COMPANY\n            name: YOUR_COMPANY\n            taxId: NL1234567890\n            email: Paul.Green@company.com\n            address:\n              streetAddress: Simon Carmiggeltstraat 6-50\n              postalCode: 1011 DJ\n              city: Amsterdam\n              country: NL\n          orderDate: '2020-06-10T17:03:11.000Z'\n          items:\n          - id: TBOX-MX925-422-EU\n            name: MX925 Package\n            quantity: 1\n        - id: '9415936144678634'\n          customerOrderReference: YOUR_REFERENCE_C1\n          status: Cancelled\n          shippingLocation:\n            id: S2-232A6D2967356F424F4369432B3F486B6A6D\n            name: YOUR_COMPANY HQ - POS Ops\n            contact:\n              firstName: Paul\n              lastName: Green\n              email: Paul.Green@company.com\n            address:\n              streetAddress: Simon Carmiggeltstraat\n              streetAddress2: 6-50\n              postalCode: 1011 DJ\n              city: Amsterdam\n              country: NL\n          billingEntity:\n            id: Company.YOUR_COMPANY\n            name: YOUR_COMPANY\n            taxId: NL1234567890\n            email: Paul.Green@company.com\n            address:\n              streetAddress: Simon Carmiggeltstraat 6-50\n              postalCode: 1011 DJ\n              city: Amsterdam\n              country: NL\n          orderDate: '2022-01-03T16:41:07.000Z'\n          items:\n          - id: TBOX-V400m-774-EU\n            name: V400m Package\n            quantity: 5\n    get-companies-companyId-terminalProducts-success-200:\n      summary: Response code - 200 OK\n      description: Example response with V400m products available in The Netherlands\n      value:\n        data:\n        - id: PART-620222-EU\n          name: Receipt Roll\n          price:\n            currency: EUR\n            value: 0.0\n        - id: PART-175746-EU\n          name: Adyen Test Card\n          price:\n            currency: EUR\n            value: 0.0\n        - id: PART-327486-EU\n          name: Battery - V400m\n          price:\n            currency: EUR\n            value: 0.0\n        - id: PART-287001-EU\n          name: Bluetooth Charging Base - V400m\n          price:\n            currency: EUR\n            value: 0.0\n        - id: PART-745984-EU\n          name: Power Supply EU - V400m\n          price:\n            currency: EUR\n            value: 0.0\n        - id: TBOX-V400m-684-EU\n          name: V400m Package\n          description: Includes an EU Power Supply, SIM Card and battery\n          price:\n            currency: EUR\n            value: 0.0\n          itemsIncluded:\n          - Receipt Roll\n          - Terminal Device V400m EU/GB\n    get-companies-companyId-terminalSettings-success-200:\n      summary: Response code - 200 OK\n      description: Example response when getting the settings of a payment terminal\n      value:\n        cardholderReceipt:\n          headerForAuthorizedReceipt: header1,header2,filler\n        gratuities:\n        - currency: EUR\n          usePredefinedTipEntries: true\n          predefinedTipEntries:\n          - '100'\n          - 1%\n          - 5%\n          allowCustomAmount: true\n        nexo:\n          nexoEventUrls:\n          - https://your-event-notifications-endpoint.com\n        opi:\n          enablePayAtTable: true\n          payAtTableStoreNumber: '1'\n          payAtTableURL: https:/your-pay-at-table-endpoint.com\n        receiptOptions: {}\n        receiptPrinting:\n          shopperApproved: true\n          shopperRefused: true\n          shopperCancelled: true\n          shopperRefundApproved: true\n          shopperRefundRefused: true\n          shopperVoid: true\n        signature:\n          askSignatureOnScreen: true\n          skipSignature: false\n          deviceName: Amsterdam-236203386\n        wifiProfiles:\n          profiles:\n          - authType: wpa-psk\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            name: Guest Wi-Fi\n            psk: 4R8R2R3V456X\n            ssid: G470P37660D4G\n            wsec: ccmp\n          settings:\n            band: All\n            roaming: true\n        timeouts:\n          fromActiveToSleep: 30\n        hardware:\n          displayMaximumBackLight: 75\n    get-companies-success-200:\n      summary: List of company accounts\n      description: Example response when your API credential has access to one company\n        account.\n      value:\n        _links:\n          first:\n            href: https://management-test.adyen.com/v1/companies?pageNumber=1\u0026pageSize=10\n          last:\n            href: https://management-test.adyen.com/v1/companies?pageNumber=1\u0026pageSize=10\n          self:\n            href: https://management-test.adyen.com/v1/companies?pageNumber=1\u0026pageSize=10\n        itemsTotal: 1\n        pagesTotal: 1\n        data:\n        - id: YOUR_COMPANY_ACCOUNT\n          name: YOUR_COMPANY_NAME\n          status: Active\n          dataCenters:\n          - name: default\n            livePrefix: ''\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT\n            apiCredentials:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/apiCredentials\n            users:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/users\n            webhooks:\n              href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/webhooks\n    get-merchants-merchantId-billingEntities-success-200:\n      summary: Response code - 200 OK\n      description: Example response with billing entities for a merchant account\n      value:\n        data:\n        - id: MerchantAccount.YOUR_MERCHANT_ACCOUNT\n          name: YOUR_MERCHANT_ACCOUNT\n          taxId: ES1234567890\n          email: Pablo.Mengano@company.com\n          address:\n            streetAddress: Paseo de la Castellana 43, 7\n            postalCode: '28046'\n            city: Madrid\n            country: ES\n    get-merchants-merchantId-shippingLocations-success-200:\n      summary: Response code - 200 OK\n      description: Example response with shipping locations for a merchant account\n      value:\n        data:\n        - id: S2-6A6C2E3432747D4F2F2C3455485E3836457D\n          name: YOUR_COMPANY Spain\n          contact:\n            firstName: Pablo\n            lastName: Mengano\n            phoneNumber: '+34911234567'\n            email: Pablo.Mengano@company.com\n          address:\n            streetAddress: Paseo de la Castellana 43\n            streetAddress2: 7 piso\n            postalCode: '28046'\n            city: Madrid\n            country: ES\n    get-merchants-merchantId-stores-reference-terminalLogos-success-200:\n      summary: Response code - 200 OK\n      description: Example response when getting the logo of a payment terminal\n      value:\n        data: BASE-64_ENCODED_STRING\n    get-merchants-merchantId-stores-reference-terminalSettings-success-200:\n      summary: Response code - 200 OK\n      description: Example response when getting the settings of a payment terminal\n      value:\n        cardholderReceipt:\n          headerForAuthorizedReceipt: header1,header2,filler\n        gratuities:\n        - currency: EUR\n          usePredefinedTipEntries: true\n          predefinedTipEntries:\n          - '100'\n          - 1%\n          - 5%\n          allowCustomAmount: true\n        nexo:\n          nexoEventUrls:\n          - https://your-event-notifications-endpoint.com\n        opi:\n          enablePayAtTable: true\n          payAtTableStoreNumber: '1'\n          payAtTableURL: https:/your-pay-at-table-endpoint.com\n        receiptOptions: {}\n        receiptPrinting:\n          shopperApproved: true\n          shopperRefused: true\n          shopperCancelled: true\n          shopperRefundApproved: true\n          shopperRefundRefused: true\n          shopperVoid: true\n        signature:\n          askSignatureOnScreen: true\n          skipSignature: false\n          deviceName: Amsterdam-236203386\n        wifiProfiles:\n          profiles:\n          - authType: wpa-psk\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            name: Guest Wi-Fi\n            psk: 4R8R2R3V456X\n            ssid: G470P37660D4G\n            wsec: ccmp\n          settings:\n            band: All\n            roaming: true\n        timeouts:\n          fromActiveToSleep: 30\n        hardware:\n          displayMaximumBackLight: 75\n    get-merchants-merchantId-stores-storeId-success-200:\n      summary: Response code - 200 OK\n      description: Example response when getting the details of a store\n      value:\n        storeId: ST322LJ223223K5F4SQNR9XL5\n        address:\n          city: Springfield\n          country: US\n          line1: 200 Main Street\n          line2: Building 5A\n          line3: Suite 3\n          postalCode: '20250'\n          stateOrProvince: NY\n        description: City centre store\n        merchantId: YOUR_MERCHANT_ACCOUNT_ID\n        phoneNumber: '+1813702551707653'\n        reference: Springfield Shop\n        status: active\n        _links:\n          self:\n            href: https://management-test.adyen.com/v1/stores/ST322LJ223223K5F4SQNR9XL5\n    get-merchants-merchantId-stores-success-200:\n      summary: Response code - 200 OK\n      description: Example response when getting a list of stores for a merchant account\n      value:\n        _links:\n          first:\n            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=1\u0026pageSize=1\n          last:\n            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=2\u0026pageSize=1\n          next:\n            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=2\u0026pageSize=1\n          self:\n            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=1\u0026pageSize=1\n        itemsTotal: 2\n        pagesTotal: 1\n        data:\n        - storeId: ST322LJ223223K5F4SQNR9XL5\n          address:\n            city: Springfield\n            country: US\n            line1: 200 Main Street\n            line2: Building 5A\n            line3: Suite 3\n            postalCode: '20250'\n            stateOrProvince: NY\n          description: City centre store\n          merchantId: YOUR_MERCHANT_ACCOUNT_ID\n          phoneNumber: '+1813702551707653'\n          reference: Springfield Shop\n          status: active\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/stores/ST322LJ223223K5F4SQNR9XL5\n        - storeId: ST322LJ223223K5F4SQNR9XL6\n          address:\n            city: North Madison\n            country: US\n            line1: 1492 Townline Road\n            line2: Rowland Business Park\n            postalCode: '20577'\n            stateOrProvince: NY\n          description: West location\n          merchantId: YOUR_MERCHANT_ACCOUNT_ID\n          phoneNumber: '+1211992213193020'\n          reference: Second Madison store\n          status: active\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/stores/ST322LJ223223K5F4SQNR9XL6\n    get-merchants-merchantId-terminalLogos-success-200:\n      summary: Response code - 200 OK\n      description: Example response when getting the logo of a payment terminal\n      value:\n        data: BASE-64_ENCODED_STRING\n    get-merchants-merchantId-terminalModels-success-200:\n      summary: Response code - 200 OK\n      description: Example response with the terminal models that the merchant account\n        has access to\n      value:\n        data:\n        - id: Verifone.e315\n          name: Verifone e315\n        - id: Verifone.e315M\n          name: Verifone e315M\n        - id: Verifone.E355\n          name: Verifone E355\n        - id: Verifone.M400\n          name: Verifone M400\n        - id: Verifone.MX915\n          name: Verifone MX915\n        - id: Verifone.MX925\n          name: Verifone MX925\n        - id: Verifone.P400\n          name: Verifone P400\n        - id: Verifone.P400Plus\n          name: Verifone P400Plus\n        - id: Verifone.P400Eth\n          name: Verifone P400Eth\n        - id: Verifone.V240m\n          name: Verifone V240m\n        - id: Verifone.V240mPlus\n          name: Verifone V240mPlus\n        - id: Verifone.UX300\n          name: Verifone UX300\n        - id: Verifone.V200cPlus\n          name: Verifone V200cPlus\n        - id: Verifone.V400cPlus\n          name: Verifone V400cPlus\n        - id: Verifone.V400m\n          name: Verifone V400m\n        - id: Verifone.V210mPlus\n          name: Verifone V210mPlus\n        - id: Verifone.VX520\n          name: Verifone VX520\n        - id: Verifone.VX6753G\n          name: Verifone VX6753G\n        - id: Verifone.VX675WIFIBT\n          name: Verifone VX675WIFIBT\n        - id: Verifone.VX680\n          name: Verifone VX680\n        - id: Verifone.VX6803G\n          name: Verifone VX6803G\n        - id: Verifone.VX690\n          name: Verifone VX690\n        - id: Verifone.VX700\n          name: Verifone VX700\n        - id: Verifone.VX810\n          name: Verifone VX810\n        - id: Verifone.VX820\n          name: Verifone VX820\n        - id: Verifone.VX825\n          name: Verifone VX825\n        - id: Verifone.e285\n          name: Verifone e285\n        - id: Verifone.E285\n          name: Verifone E285\n        - id: Verifone.e285p\n          name: Verifone e285p\n        - id: Verifone.e280\n          name: Verifone e280\n        - id: Verifone.UX410\n          name: Verifone UX410\n        - id: Castles.S1E\n          name: Castles S1E\n        - id: Castles.S1EL\n          name: Castles S1EL\n        - id: Castles.S1F\n          name: Castles S1F\n        - id: Castles.S1F2\n          name: Castles S1F2\n        - id: Castles.S1F2L\n          name: Castles S1F2L\n        - id: Castles.S1E2\n          name: Castles S1E2\n        - id: Castles.S1E2L\n          name: Castles S1E2L\n    get-merchants-merchantId-terminalOrders-orderId-success-200:\n      summary: Response code - 200 OK\n      description: Example response with the details of the terminal products order\n      value:\n        id: '4154567890100682'\n        customerOrderReference: YOUR_REFERENCE\n        status: Placed\n        shippingLocation:\n          id: S2-6A6C2E3432747D4F2F2C3455485E3836457D\n          name: YOUR_COMPANY Spain\n          contact:\n            firstName: Pablo\n            lastName: Mengano\n            phoneNumber: '+34911234567'\n            email: Pablo.Mengano@company.com\n          address:\n            streetAddress: Paseo de la Castellana 43\n            streetAddress2: 7 piso\n            postalCode: '28046'\n            city: Madrid\n            country: ES\n        billingEntity:\n          id: MerchantAccount.YOUR_MERCHANT_ACCOUNT\n          name: YOUR_MERCHANT_ACCOUNT\n          taxId: ES1234567890\n          email: Pablo.Mengano@company.com\n          address:\n            streetAddress: Paseo de la Castellana 43, 7\n            postalCode: '28046'\n            city: Madrid\n            country: ES\n        orderDate: '2022-01-21T16:12:33Z'\n        items:\n        - id: PART-287001-EU\n          name: Bluetooth Charging Base - V400m\n          quantity: 2\n        - id: PART-620222-EU\n          name: Receipt Roll\n          quantity: 20\n    get-merchants-merchantId-terminalOrders-success-200:\n      summary: Response code - 200 OK\n      description: Example response with the terminal orders for a merchant account\n      value:\n        data:\n        - id: '4154567890100682'\n          customerOrderReference: YOUR_REFERENCE_M2\n          status: Placed\n          shippingLocation:\n            id: S2-6A6C2E3432747D4F2F2C3455485E3836457D\n            name: YOUR_COMPANY Spain\n            contact:\n              firstName: Pablo\n              lastName: Mengano\n              phoneNumber: '+34911234567'\n              email: Pablo.Mengano@company.com\n            address:\n              streetAddress: Paseo de la Castellana 43\n              streetAddress2: 7 piso\n              postalCode: '28046'\n              city: Madrid\n              country: ES\n          billingEntity:\n            id: MerchantAccount.YOUR_MERCHANT_ACCOUNT\n            name: YOUR_MERCHANT_ACCOUNT\n            taxId: ES1234567890\n            email: Pablo.Mengano@company.com\n            address:\n              streetAddress: Paseo de la Castellana 43, 7\n              postalCode: '28046'\n              city: Madrid\n              country: ES\n          orderDate: '2022-01-21T16:12:33Z'\n          items:\n          - id: PART-287001-EU\n            name: Bluetooth Charging Base - V400m\n            quantity: 2\n          - id: PART-620222-EU\n            name: Receipt Roll\n            quantity: 20\n        - id: '8315943674501996'\n          customerOrderReference: YOUR_REFERENCE_M1\n          status: Cancelled\n          shippingLocation:\n            id: S2-6A6C2E3432747D4F2F2C3455485E3836457D\n            name: YOUR_COMPANY Spain\n            contact:\n              firstName: Pablo\n              lastName: Mengano\n              phoneNumber: '+34911234567'\n              email: Pablo.Mengano@company.com\n            address:\n              streetAddress: Paseo de la Castellana 43\n              streetAddress2: 7 piso\n              postalCode: '28046'\n              city: Madrid\n              country: ES\n          billingEntity:\n            id: MerchantAccount.YOUR_MERCHANT_ACCOUNT\n            name: YOUR_MERCHANT_ACCOUNT\n            taxId: ES1234567890\n            email: Pablo.Mengano@company.com\n            address:\n              streetAddress: Paseo de la Castellana 43, 7\n              postalCode: '28046'\n              city: Madrid\n              country: ES\n          orderDate: '2022-01-04T09:41:07.000Z'\n          items:\n          - id: TBOX-V400m-774-EU\n            name: V400m Package\n            quantity: 1\n    get-merchants-merchantId-terminalProducts-success-200:\n      summary: Response code - 200 OK\n      description: Example response with V400m products available in Spain\n      value:\n        data:\n        - id: PART-620222-EU\n          name: Receipt Roll\n          price:\n            currency: EUR\n            value: 0.0\n        - id: PART-175746-EU\n          name: Adyen Test Card\n          price:\n            currency: EUR\n            value: 0.0\n        - id: PART-327486-EU\n          name: Battery - V400m\n          price:\n            currency: EUR\n            value: 0.0\n        - id: PART-287001-EU\n          name: Bluetooth Charging Base - V400m\n          price:\n            currency: EUR\n            value: 0.0\n        - id: PART-745984-EU\n          name: Power Supply EU - V400m\n          price:\n            currency: EUR\n            value: 0.0\n        - id: TBOX-V400m-684-EU\n          name: V400m Package\n          description: Includes an EU Power Supply, SIM Card and battery\n          price:\n            currency: EUR\n            value: 0.0\n          itemsIncluded:\n          - Receipt Roll\n          - Terminal Device V400m EU/GB\n    get-merchants-merchantId-terminalSettings-success-200:\n      summary: Response code - 200 OK\n      description: Example response when getting the settings of a payment terminal\n      value:\n        cardholderReceipt:\n          headerForAuthorizedReceipt: header1,header2,filler\n        gratuities:\n        - currency: EUR\n          usePredefinedTipEntries: true\n          predefinedTipEntries:\n          - '100'\n          - 1%\n          - 5%\n          allowCustomAmount: true\n        nexo:\n          nexoEventUrls:\n          - https://your-event-notifications-endpoint.com\n        opi:\n          enablePayAtTable: true\n          payAtTableStoreNumber: '1'\n          payAtTableURL: https:/your-pay-at-table-endpoint.com\n        receiptOptions: {}\n        receiptPrinting:\n          shopperApproved: true\n          shopperRefused: true\n          shopperCancelled: true\n          shopperRefundApproved: true\n          shopperRefundRefused: true\n          shopperVoid: true\n        signature:\n          askSignatureOnScreen: true\n          skipSignature: false\n          deviceName: Amsterdam-236203386\n        wifiProfiles:\n          profiles:\n          - authType: wpa-psk\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            name: Guest Wi-Fi\n            psk: 4R8R2R3V456X\n            ssid: G470P37660D4G\n            wsec: ccmp\n          settings:\n            band: All\n            roaming: true\n        timeouts:\n          fromActiveToSleep: 30\n        hardware:\n          displayMaximumBackLight: 75\n    get-merchants-success-200:\n      summary: List of merchant accounts\n      description: Example response when your API credential has access to 23 merchant\n        accounts\n      value:\n        _links:\n          first:\n            href: https://management-test.adyen.com/v1/merchants?pageNumber=1\u0026pageSize=10\n          last:\n            href: https://management-test.adyen.com/v1/merchants?pageNumber=3\u0026pageSize=10\n          next:\n            href: https://management-test.adyen.com/v1/merchants?pageNumber=2\u0026pageSize=10\n          self:\n            href: https://management-test.adyen.com/v1/merchants?pageNumber=1\u0026pageSize=10\n        itemsTotal: 23\n        pagesTotal: 3\n        data:\n        - id: YOUR_MERCHANT_ACCOUNT_1\n          name: YOUR_MERCHANT_NAME_1\n          captureDelay: immediate\n          defaultShopperInteraction: Ecommerce\n          status: Active\n          shopWebAddress: YOUR_SHOP_URL_1\n          merchantCity: Amsterdam\n          primarySettlementCurrency: EUR\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1\n            apiCredentials:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1/apiCredentials\n            users:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1/users\n            webhooks:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_1/webhooks\n        - id: YOUR_MERCHANT_ACCOUNT_2\n          name: YOUR_MERCHANT_NAME_2\n          captureDelay: immediate\n          defaultShopperInteraction: POS\n          status: Active\n          shopWebAddress: YOUR_SHOP_URL_2\n          merchantCity: ''\n          primarySettlementCurrency: EUR\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2\n            apiCredentials:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2/apiCredentials\n            users:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2/users\n            webhooks:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_2/webhooks\n        - id: YOUR_MERCHANT_ACCOUNT_3\n          status: YOUR_MERCHANT_NAME_3\n          merchantCity: Amsterdam\n          primarySettlementCurrency: EUR\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3\n            apiCredentials:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3/apiCredentials\n            users:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3/users\n            webhooks:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_3/webhooks\n        - id: YOUR_MERCHANT_ACCOUNT_4\n          name: YOUR_MERCHANT_NAME_4\n          captureDelay: immediate\n          defaultShopperInteraction: Ecommerce\n          status: Active\n          shopWebAddress: YOUR_SHOP_URL_4\n          merchantCity: Sao Paulo\n          primarySettlementCurrency: BRL\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4\n            apiCredentials:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4/apiCredentials\n            users:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4/users\n            webhooks:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_4/webhooks\n        - id: YOUR_MERCHANT_ACCOUNT_5\n          name: YOUR_MERCHANT_NAME_5\n          captureDelay: '3'\n          defaultShopperInteraction: Ecommerce\n          status: Active\n          shopWebAddress: YOUR_SHOP_URL_5\n          primarySettlementCurrency: EUR\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5\n            apiCredentials:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5/apiCredentials\n            users:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5/users\n            webhooks:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_5/webhooks\n        - id: YOUR_MERCHANT_ACCOUNT_6\n          name: YOUR_MERCHANT_NAME_6\n          captureDelay: immediate\n          defaultShopperInteraction: Ecommerce\n          status: Active\n          shopWebAddress: YOUR_SHOP_URL_6\n          merchantCity: Zagreb\n          primarySettlementCurrency: BRL\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_NAME_6\n            apiCredentials:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_NAME_6/apiCredentials\n            users:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_NAME_6/users\n            webhooks:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_NAME_6/webhooks\n        - id: YOUR_MERCHANT_ACCOUNT_7\n          name: YOUR_MERCHANT_NAME_7\n          captureDelay: manual\n          defaultShopperInteraction: Moto\n          status: Active\n          shopWebAddress: YOUR_SHOP_URL_7\n          merchantCity: Amsterdam\n          primarySettlementCurrency: EUR\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7\n            apiCredentials:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7/apiCredentials\n            users:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7/users\n            webhooks:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_7/webhooks\n        - id: YOUR_MERCHANT_ACCOUNT_8\n          name: YOUR_MERCHANT_NAME_8\n          captureDelay: immediate\n          defaultShopperInteraction: Ecommerce\n          status: Active\n          shopWebAddress: YOUR_SHOP_URL_8\n          merchantCity: Amsterdam\n          primarySettlementCurrency: EUR\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8\n            apiCredentials:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8/apiCredentials\n            users:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8/users\n            webhooks:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_8/webhooks\n        - id: YOUR_MERCHANT_ACCOUNT_9\n          name: YOUR_MERCHANT_NAME_9\n          captureDelay: '3'\n          defaultShopperInteraction: Ecommerce\n          status: Active\n          shopWebAddress: YOUR_SHOP_URL_9\n          merchantCity: ''\n          primarySettlementCurrency: EUR\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9\n            apiCredentials:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9/apiCredentials\n            users:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9/users\n            webhooks:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_9/webhooks\n        - id: YOUR_MERCHANT_ACCOUNT_10\n          name: YOUR_MERCHANT_NAME_10\n          captureDelay: manual\n          defaultShopperInteraction: Ecommerce\n          status: Active\n          shopWebAddress: YOUR_SHOP_URL_10\n          merchantCity: Paris\n          primarySettlementCurrency: EUR\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10\n            apiCredentials:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10/apiCredentials\n            users:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10/users\n            webhooks:\n              href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_10/webhooks\n    get-stores-storeId-success-200:\n      summary: Response code - 200 OK\n      description: Example response when getting the details of a store\n      value:\n        storeId: ST322LJ223223K5F4SQNR9XL5\n        address:\n          city: Springfield\n          country: US\n          line1: 200 Main Street\n          line2: Building 5A\n          line3: Suite 3\n          postalCode: '20250'\n          stateOrProvince: NY\n        description: City centre store\n        merchantId: YOUR_MERCHANT_ACCOUNT_ID\n        phoneNumber: '+1813702551707653'\n        reference: Springfield Shop\n        status: active\n        _links:\n          self:\n            href: https://management-test.adyen.com/v1/stores/ST322LJ223223K5F4SQNR9XL5\n    get-stores-storeId-terminalLogos-success-200:\n      summary: Response code - 200 OK\n      description: Example response when getting the logo of a payment terminal\n      value:\n        data: BASE-64_ENCODED_STRING\n    get-stores-storeId-terminalSettings-success-200:\n      summary: Response code - 200 OK\n      description: Example response when getting the settings of a payment terminal\n      value:\n        cardholderReceipt:\n          headerForAuthorizedReceipt: header1,header2,filler\n        gratuities:\n        - currency: EUR\n          usePredefinedTipEntries: true\n          predefinedTipEntries:\n          - '100'\n          - 1%\n          - 5%\n          allowCustomAmount: true\n        nexo:\n          nexoEventUrls:\n          - https://your-event-notifications-endpoint.com\n        opi:\n          enablePayAtTable: true\n          payAtTableStoreNumber: '1'\n          payAtTableURL: https:/your-pay-at-table-endpoint.com\n        receiptOptions: {}\n        receiptPrinting:\n          shopperApproved: true\n          shopperRefused: true\n          shopperCancelled: true\n          shopperRefundApproved: true\n          shopperRefundRefused: true\n          shopperVoid: true\n        signature:\n          askSignatureOnScreen: true\n          skipSignature: false\n          deviceName: Amsterdam-236203386\n        wifiProfiles:\n          profiles:\n          - authType: wpa-psk\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            name: Guest Wi-Fi\n            psk: 4R8R2R3V456X\n            ssid: G470P37660D4G\n            wsec: ccmp\n          settings:\n            band: All\n            roaming: true\n        timeouts:\n          fromActiveToSleep: 30\n        hardware:\n          displayMaximumBackLight: 75\n    get-stores-success-200:\n      summary: Response code - 200 OK\n      description: Example response when getting a list of stores\n      value:\n        _links:\n          first:\n            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=1\u0026pageSize=1\n          last:\n            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=2\u0026pageSize=1\n          next:\n            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=2\u0026pageSize=1\n          self:\n            href: https://management-test.adyen.com/v1/merchants/YOUR_MERCHANT_ACCOUNT_ID/stores?pageNumber=1\u0026pageSize=1\n        itemsTotal: 2\n        pagesTotal: 1\n        data:\n        - storeId: ST322LJ223223K5F4SQNR9XL5\n          address:\n            city: Springfield\n            country: US\n            line1: 200 Main Street\n            line2: Building 5A\n            line3: Suite 3\n            postalCode: '20250'\n            stateOrProvince: NY\n          description: City centre store\n          merchantId: YOUR_MERCHANT_ACCOUNT_ID\n          phoneNumber: '+1813702551707653'\n          reference: Springfield Shop\n          status: active\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/stores/ST322LJ223223K5F4SQNR9XL5\n        - storeId: ST322LJ223223K5F4SQNR9XL6\n          address:\n            city: North Madison\n            country: US\n            line1: 1492 Townline Road\n            line2: Rowland Business Park\n            postalCode: '20577'\n            stateOrProvince: NY\n          description: West location\n          merchantId: YOUR_MERCHANT_ACCOUNT_ID\n          phoneNumber: '+1211992213193020'\n          reference: Second Madison store\n          status: active\n          _links:\n            self:\n              href: https://management-test.adyen.com/v1/stores/ST322LJ223223K5F4SQNR9XL6\n    get-terminals-terminalId-terminalLogos-success-200:\n      summary: Response code - 200 OK\n      description: Example response when getting the logo of a payment terminal\n      value:\n        data: BASE-64_ENCODED_STRING\n    get-terminals-terminalId-terminalSettings-success-200:\n      summary: Response code - 200 OK\n      description: Example response when getting the settings of a payment terminal\n      value:\n        cardholderReceipt:\n          headerForAuthorizedReceipt: header1,header2,filler\n        gratuities:\n        - currency: EUR\n          usePredefinedTipEntries: true\n          predefinedTipEntries:\n          - '100'\n          - 1%\n          - 5%\n          allowCustomAmount: true\n        nexo:\n          nexoEventUrls:\n          - https://your-event-notifications-endpoint.com\n        opi:\n          enablePayAtTable: true\n          payAtTableStoreNumber: '1'\n          payAtTableURL: https:/your-pay-at-table-endpoint.com\n        receiptOptions: {}\n        receiptPrinting:\n          shopperApproved: true\n          shopperRefused: true\n          shopperCancelled: true\n          shopperRefundApproved: true\n          shopperRefundRefused: true\n          shopperVoid: true\n        signature:\n          askSignatureOnScreen: true\n          skipSignature: false\n          deviceName: Amsterdam-236203386\n        wifiProfiles:\n          profiles:\n          - authType: wpa-psk\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            name: Guest Wi-Fi\n            psk: 4R8R2R3V456X\n            ssid: G470P37660D4G\n            wsec: ccmp\n          settings:\n            band: All\n            roaming: true\n        timeouts:\n          fromActiveToSleep: 30\n        hardware:\n          displayMaximumBackLight: 75\n        connectivity:\n          simcardStatus: INVENTORY\n    patch-companies-companyId-terminalLogos-remove-logo:\n      summary: Remove logo to restore the logo from a higher level\n      description: Example request to remove the payment terminal logo configured\n        at the current level, and inherit the logo from a higher level\n      value:\n        data: ''\n    patch-companies-companyId-terminalLogos-remove-logo-200:\n      summary: Response code - 200 OK\n      description: Example response for removing a payment terminal logo to restore\n        the logo from a higher level\n      value:\n        data: LOGO_INHERITED_FROM_HIGHER_LEVEL_BASE-64_ENCODED_STRING\n    patch-companies-companyId-terminalLogos-upload-logo:\n      summary: Upload terminal logo\n      description: Example request to upload a payment terminal logo\n      value:\n        data: LOGO_FILE_CONVERTED_TO_A_BASE-64_ENCODED_STRING\n    patch-companies-companyId-terminalLogos-upload-logo-200:\n      summary: Response code - 200 OK\n      description: Example response for uploading a payment terminal logo\n      value:\n        data: BASE-64_ENCODED_STRING_FROM_THE_REQUEST\n    patch-companies-companyId-terminalOrders-orderId-update-order:\n      summary: Update a terminal order\n      description: Example request to update an order for terminal products\n      value:\n        shippingLocation: S2-7973536B20662642215526704F302044452F714622375D476169\n        items:\n        - id: TBOX-V400m-684-EU\n          name: V400m Package\n          quantity: 1\n        - id: PART-175746-EU\n          name: Adyen Test Card\n          quantity: 1\n        - id: PART-620222-EU\n          name: Receipt Roll\n          quantity: 5\n    patch-companies-companyId-terminalOrders-orderId-update-order-200:\n      summary: Response code - 200 OK\n      description: Example response after updating an order for terminal products\n      value:\n        id: '5265677890100681'\n        customerOrderReference: YOUR_REFERENCE_1\n        status: Placed\n        shippingLocation:\n          id: S2-7973536B20662642215526704F302044452F714622375D476169\n          name: YOUR_COMPANY Rokin depot\n          contact:\n            firstName: Paul\n            lastName: Green\n            phoneNumber: +31 020 1234567\n            email: Paul.Green@company.com\n          address:\n            companyName: YOUR_COMPANY\n            streetAddress: Rokin 21\n            postalCode: 1012 KS\n            city: Amsterdam\n            stateOrProvince: ''\n            country: NL\n        billingEntity:\n          id: Company.YOUR_COMPANY\n          name: YOUR_COMPANY\n          taxId: NL1234567890\n          email: Paul.Green@company.com\n          address:\n            streetAddress: Simon Carmiggeltstraat 6-50\n            postalCode: 1011 DJ\n            city: Amsterdam\n            country: NL\n        orderDate: '2022-01-20T14:12:33Z'\n        items:\n        - id: TBOX-V400m-684-EU\n          name: V400m Package\n          quantity: 1\n        - id: PART-175746-EU\n          name: Adyen Test Card\n          quantity: 1\n        - id: PART-620222-EU\n          name: Receipt Roll\n          quantity: 5\n    patch-companies-companyId-terminalSettings-add-eap-peap-and-psk-wifi-profiles:\n      summary: Add EAP-PEAP and PSK Wi-Fi profiles\n      description: Example request to add an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi\n        profile for a terminal\n      value:\n        wifiProfiles:\n          profiles:\n          - authType: wpa-eap\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            eap: peap\n            eapCaCert:\n              data: MD1rKS05M2JqRVFNQ...RTtLH1tLWo=\n              name: eap-peap-ca.pem\n            eapIdentity: admin\n            eapIntermediateCert:\n              data: PD3tUS1CRDdJTiGDR...EFoLS0tLQg=\n              name: eap-peap-client.pem\n            eapPwd: EAP_PEAP_PASSWORD\n            name: Profile-eap-peap-1\n            ssid: your-network\n            wsec: ccmp\n          - authType: wpa-psk\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: false\n            name: Profile-guest-wifi\n            psk: WIFI_PASSWORD\n            ssid: your-network\n            wsec: ccmp\n          settings:\n            band: 2.4GHz\n            roaming: true\n            timeout: 5\n    patch-companies-companyId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200:\n      summary: Response code - 200 OK\n      description: Example response for adding an EAP-PEAP Wi-Fi profile and a PSK\n        Wi-Fi profile for a terminal\n      value:\n        cardholderReceipt:\n          headerForAuthorizedReceipt: header1,header2,filler\n        gratuities:\n        - currency: EUR\n          usePredefinedTipEntries: true\n          predefinedTipEntries:\n          - '100'\n          - 1%\n          - 5%\n          allowCustomAmount: true\n        nexo:\n          nexoEventUrls:\n          - https://your-event-notifications-endpoint.com\n        opi:\n          enablePayAtTable: true\n          payAtTableStoreNumber: '1'\n          payAtTableURL: https:/your-pay-at-table-endpoint.com\n        receiptOptions: {}\n        receiptPrinting:\n          shopperApproved: true\n          shopperRefused: true\n          shopperCancelled: true\n          shopperRefundApproved: true\n          shopperRefundRefused: true\n          shopperVoid: true\n        signature:\n          askSignatureOnScreen: true\n          skipSignature: false\n          deviceName: Amsterdam-236203386\n        wifiProfiles:\n          profiles:\n          - authType: wpa-eap\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            eap: peap\n            eapCaCert:\n              data: MD1rKS05M2JqRVFNQ...RTtLH1tLWo=\n              name: eap-peap-ca.pem\n            eapIdentity: admin\n            eapIntermediateCert:\n              data: PD3tUS1CRDdJTiGDR...EFoLS0tLQg=\n              name: eap-peap-client.pem\n            eapPwd: EAP_PEAP_PASSWORD\n            name: Profile-eap-peap-1\n            ssid: your-network\n            wsec: ccmp\n          - authType: wpa-psk\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: false\n            name: Profile-guest-wifi\n            psk: WIFI_PASSWORD\n            ssid: your-network\n            wsec: ccmp\n          settings:\n            band: 2.4GHz\n            roaming: true\n            timeout: 5\n        timeouts:\n          fromActiveToSleep: 30\n        hardware:\n          displayMaximumBackLight: 75\n    patch-companies-companyId-terminalSettings-add-eap-tls-wifi-profile:\n      summary: Add EAP-TLS Wi-Fi profile\n      description: Example request to add an EAP-TLS Wi-Fi profile for a terminal\n      value:\n        wifiProfiles:\n          profiles:\n          - authType: wpa-eap\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            eap: tls\n            eapCaCert:\n              data: LS0tLS05M2JqRVFNQ...EUtLS0tLQo=\n              name: eap-tls-ca.pem\n            eapClientCert:\n              data: LS0tLS1CRUdJTiBDR...EUtLS0tLQo=\n              name: eap-tls-client.pem\n            eapClientKey:\n              data: AAAB3NzaC1...Rtah3KLFwPU=\n              name: rsa-private.key\n            eapClientPwd: ''\n            eapIdentity: admin\n            name: Profile-eap-tls-1\n            ssid: your-network\n            wsec: ccmp\n          settings:\n            band: 2.4GHz\n            roaming: true\n            timeout: 5\n    patch-companies-companyId-terminalSettings-add-eap-tls-wifi-profile-200:\n      summary: Response code - 200 OK\n      description: Example response for adding an EAP-TLS Wi-Fi profile for a terminal\n      value:\n        cardholderReceipt:\n          headerForAuthorizedReceipt: header1,header2,filler\n        gratuities:\n        - currency: EUR\n          usePredefinedTipEntries: true\n          predefinedTipEntries:\n          - '100'\n          - 1%\n          - 5%\n          allowCustomAmount: true\n        nexo:\n          nexoEventUrls:\n          - https://your-event-notifications-endpoint.com\n        opi:\n          enablePayAtTable: true\n          payAtTableStoreNumber: '1'\n          payAtTableURL: https:/your-pay-at-table-endpoint.com\n        receiptOptions: {}\n        receiptPrinting:\n          shopperApproved: true\n          shopperRefused: true\n          shopperCancelled: true\n          shopperRefundApproved: true\n          shopperRefundRefused: true\n          shopperVoid: true\n        signature:\n          askSignatureOnScreen: true\n          skipSignature: false\n          deviceName: Amsterdam-236203386\n        wifiProfiles:\n          profiles:\n          - authType: wpa-eap\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            eap: tls\n            eapCaCert:\n              data: LS0tLS05M2JqRVFNQ...EUtLS0tLQo=\n              name: eap-tls-ca.pem\n            eapClientCert:\n              data: LS0tLS1CRUdJTiBDR...EUtLS0tLQo=\n              name: eap-tls-client.pem\n            eapClientKey:\n              data: AAAB3NzaC1...Rtah3KLFwPU=\n              name: rsa-private.key\n            eapClientPwd: ''\n            eapIdentity: admin\n            name: Profile-eap-tls-1\n            ssid: your-network\n            wsec: ccmp\n          settings:\n            band: 2.4GHz\n            roaming: true\n            timeout: 5\n        timeouts:\n          fromActiveToSleep: 30\n        hardware:\n          displayMaximumBackLight: 75\n    patch-merchants-merchantId-stores-reference-terminalLogos-remove-logo:\n      summary: Remove logo to restore the logo from a higher level\n      description: Example request to remove the payment terminal logo configured\n        at the current level, and inherit the logo from a higher level\n      value:\n        data: ''\n    patch-merchants-merchantId-stores-reference-terminalLogos-remove-logo-200:\n      summary: Response code - 200 OK\n      description: Example response for removing a payment terminal logo to restore\n        the logo from a higher level\n      value:\n        data: LOGO_INHERITED_FROM_HIGHER_LEVEL_BASE-64_ENCODED_STRING\n    patch-merchants-merchantId-stores-reference-terminalLogos-upload-logo:\n      summary: Upload terminal logo\n      description: Example request to upload a payment terminal logo\n      value:\n        data: LOGO_FILE_CONVERTED_TO_A_BASE-64_ENCODED_STRING\n    patch-merchants-merchantId-stores-reference-terminalLogos-upload-logo-200:\n      summary: Response code - 200 OK\n      description: Example response for uploading a payment terminal logo\n      value:\n        data: BASE-64_ENCODED_STRING_FROM_THE_REQUEST\n    patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-peap-and-psk-wifi-profiles:\n      summary: Add EAP-PEAP and PSK Wi-Fi profiles\n      description: Example request to add an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi\n        profile for a terminal\n      value:\n        wifiProfiles:\n          profiles:\n          - authType: wpa-eap\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            eap: peap\n            eapCaCert:\n              data: MD1rKS05M2JqRVFNQ...RTtLH1tLWo=\n              name: eap-peap-ca.pem\n            eapIdentity: admin\n            eapIntermediateCert:\n              data: PD3tUS1CRDdJTiGDR...EFoLS0tLQg=\n              name: eap-peap-client.pem\n            eapPwd: EAP_PEAP_PASSWORD\n            name: Profile-eap-peap-1\n            ssid: your-network\n            wsec: ccmp\n          - authType: wpa-psk\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: false\n            name: Profile-guest-wifi\n            psk: WIFI_PASSWORD\n            ssid: your-network\n            wsec: ccmp\n          settings:\n            band: 2.4GHz\n            roaming: true\n            timeout: 5\n    patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200:\n      summary: Response code - 200 OK\n      description: Example response for adding an EAP-PEAP Wi-Fi profile and a PSK\n        Wi-Fi profile for a terminal\n      value:\n        cardholderReceipt:\n          headerForAuthorizedReceipt: header1,header2,filler\n        gratuities:\n        - currency: EUR\n          usePredefinedTipEntries: true\n          predefinedTipEntries:\n          - '100'\n          - 1%\n          - 5%\n          allowCustomAmount: true\n        nexo:\n          nexoEventUrls:\n          - https://your-event-notifications-endpoint.com\n        opi:\n          enablePayAtTable: true\n          payAtTableStoreNumber: '1'\n          payAtTableURL: https:/your-pay-at-table-endpoint.com\n        receiptOptions: {}\n        receiptPrinting:\n          shopperApproved: true\n          shopperRefused: true\n          shopperCancelled: true\n          shopperRefundApproved: true\n          shopperRefundRefused: true\n          shopperVoid: true\n        signature:\n          askSignatureOnScreen: true\n          skipSignature: false\n          deviceName: Amsterdam-236203386\n        wifiProfiles:\n          profiles:\n          - authType: wpa-eap\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            eap: peap\n            eapCaCert:\n              data: MD1rKS05M2JqRVFNQ...RTtLH1tLWo=\n              name: eap-peap-ca.pem\n            eapIdentity: admin\n            eapIntermediateCert:\n              data: PD3tUS1CRDdJTiGDR...EFoLS0tLQg=\n              name: eap-peap-client.pem\n            eapPwd: EAP_PEAP_PASSWORD\n            name: Profile-eap-peap-1\n            ssid: your-network\n            wsec: ccmp\n          - authType: wpa-psk\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: false\n            name: Profile-guest-wifi\n            psk: WIFI_PASSWORD\n            ssid: your-network\n            wsec: ccmp\n          settings:\n            band: 2.4GHz\n            roaming: true\n            timeout: 5\n        timeouts:\n          fromActiveToSleep: 30\n        hardware:\n          displayMaximumBackLight: 75\n    patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-tls-wifi-profile:\n      summary: Add EAP-TLS Wi-Fi profile\n      description: Example request to add an EAP-TLS Wi-Fi profile for a terminal\n      value:\n        wifiProfiles:\n          profiles:\n          - authType: wpa-eap\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            eap: tls\n            eapCaCert:\n              data: LS0tLS05M2JqRVFNQ...EUtLS0tLQo=\n              name: eap-tls-ca.pem\n            eapClientCert:\n              data: LS0tLS1CRUdJTiBDR...EUtLS0tLQo=\n              name: eap-tls-client.pem\n            eapClientKey:\n              data: AAAB3NzaC1...Rtah3KLFwPU=\n              name: rsa-private.key\n            eapClientPwd: ''\n            eapIdentity: admin\n            name: Profile-eap-tls-1\n            ssid: your-network\n            wsec: ccmp\n          settings:\n            band: 2.4GHz\n            roaming: true\n            timeout: 5\n    patch-merchants-merchantId-stores-reference-terminalSettings-add-eap-tls-wifi-profile-200:\n      summary: Response code - 200 OK\n      description: Example response for adding an EAP-TLS Wi-Fi profile for a terminal\n      value:\n        cardholderReceipt:\n          headerForAuthorizedReceipt: header1,header2,filler\n        gratuities:\n        - currency: EUR\n          usePredefinedTipEntries: true\n          predefinedTipEntries:\n          - '100'\n          - 1%\n          - 5%\n          allowCustomAmount: true\n        nexo:\n          nexoEventUrls:\n          - https://your-event-notifications-endpoint.com\n        opi:\n          enablePayAtTable: true\n          payAtTableStoreNumber: '1'\n          payAtTableURL: https:/your-pay-at-table-endpoint.com\n        receiptOptions: {}\n        receiptPrinting:\n          shopperApproved: true\n          shopperRefused: true\n          shopperCancelled: true\n          shopperRefundApproved: true\n          shopperRefundRefused: true\n          shopperVoid: true\n        signature:\n          askSignatureOnScreen: true\n          skipSignature: false\n          deviceName: Amsterdam-236203386\n        wifiProfiles:\n          profiles:\n          - authType: wpa-eap\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            eap: tls\n            eapCaCert:\n              data: LS0tLS05M2JqRVFNQ...EUtLS0tLQo=\n              name: eap-tls-ca.pem\n            eapClientCert:\n              data: LS0tLS1CRUdJTiBDR...EUtLS0tLQo=\n              name: eap-tls-client.pem\n            eapClientKey:\n              data: AAAB3NzaC1...Rtah3KLFwPU=\n              name: rsa-private.key\n            eapClientPwd: ''\n            eapIdentity: admin\n            name: Profile-eap-tls-1\n            ssid: your-network\n            wsec: ccmp\n          settings:\n            band: 2.4GHz\n            roaming: true\n            timeout: 5\n        timeouts:\n          fromActiveToSleep: 30\n        hardware:\n          displayMaximumBackLight: 75\n    patch-merchants-merchantId-stores-storeId-patch-stores:\n      summary: Update store address.\n      description: Example request to update the address of a store\n      value:\n        address:\n          line1: 1776 West Pinewood Avenue\n          line2: Heartland Building\n          line3: ''\n          postalCode: '20251'\n    patch-merchants-merchantId-stores-storeId-patch-stores-200:\n      summary: Response code - 200 OK\n      description: Example response after updating the store\n      value:\n        id: YOUR_STORE_ID\n        address:\n          country: US\n          line1: 1776 West Pinewood Avenue\n          line2: Heartland Building\n          line3: ''\n          city: Springfield\n          stateOrProvince: NY\n          postalCode: '20251'\n        description: City centre store\n        merchantId: YOUR_MERCHANT_ACCOUNT_ID\n        shopperStatement: Springfield Shop\n        phoneNumber: '+1813702551707653'\n        reference: Spring_store_2\n        status: active\n        _links:\n          self:\n            href: https://management-test.adyen.com/v1/stores/YOUR_STORE_ID\n    patch-merchants-merchantId-terminalLogos-remove-logo:\n      summary: Remove logo to restore the logo from a higher level\n      description: Example request to remove the payment terminal logo configured\n        at the current level, and inherit the logo from a higher level\n      value:\n        data: ''\n    patch-merchants-merchantId-terminalLogos-remove-logo-200:\n      summary: Response code - 200 OK\n      description: Example response for removing a payment terminal logo to restore\n        the logo from a higher level\n      value:\n        data: LOGO_INHERITED_FROM_HIGHER_LEVEL_BASE-64_ENCODED_STRING\n    patch-merchants-merchantId-terminalLogos-upload-logo:\n      summary: Upload terminal logo\n      description: Example request to upload a payment terminal logo\n      value:\n        data: LOGO_FILE_CONVERTED_TO_A_BASE-64_ENCODED_STRING\n    patch-merchants-merchantId-terminalLogos-upload-logo-200:\n      summary: Response code - 200 OK\n      description: Example response for uploading a payment terminal logo\n      value:\n        data: BASE-64_ENCODED_STRING_FROM_THE_REQUEST\n    patch-merchants-merchantId-terminalOrders-orderId-update-order:\n      summary: Update a terminal order\n      description: Example request to update an order for terminal products\n      value:\n        shippingLocation: S2-73536B20665526704F30792642212044452F714622375D477270\n        items:\n        - id: TBOX-V400m-684-EU\n          name: V400m Package\n          quantity: 1\n        - id: PART-287001-EU\n          name: Bluetooth Charging Base - V400m\n          quantity: 2\n        - id: PART-620222-EU\n          name: Receipt Roll\n          quantity: 20\n    patch-merchants-merchantId-terminalOrders-orderId-update-order-200:\n      summary: Response code - 200 OK\n      description: Example response after updating an order for terminal products\n      value:\n        id: '4154567890100682'\n        customerOrderReference: YOUR_REFERENCE\n        status: Placed\n        shippingLocation:\n          id: S2-73536B20665526704F30792642212044452F714622375D477270\n          name: YOUR_MERCHANT_ACCOUNT Barcelona depot\n          contact:\n            firstName: Rita\n            lastName: Perengano\n            phoneNumber: '+34931234567'\n            email: Rita.Perengano@company.com\n          address:\n            companyName: YOUR_COMPANY\n            streetAddress: El quinto pino 42\n            postalCode: 08012\n            city: Barcelona\n            stateOrProvince: ''\n            country: ES\n        billingEntity:\n          id: MerchantAccount.YOUR_MERCHANT_ACCOUNT\n          name: YOUR_MERCHANT_ACCOUNT\n          taxId: ES1234567890\n          email: Pablo.Mengano@company.com\n          address:\n            streetAddress: Paseo de la Castellana 43, 7\n            postalCode: '28046'\n            city: Madrid\n            country: ES\n        orderDate: '2022-01-21T16:12:33Z'\n        items:\n        - id: TBOX-V400m-684-EU\n          name: V400m Package\n          quantity: 1\n        - id: PART-287001-EU\n          name: Bluetooth Charging Base - V400m\n          quantity: 2\n        - id: PART-620222-EU\n          name: Receipt Roll\n          quantity: 20\n    patch-merchants-merchantId-terminalSettings-add-eap-peap-and-psk-wifi-profiles:\n      summary: Add EAP-PEAP and PSK Wi-Fi profiles\n      description: Example request to add an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi\n        profile for a terminal\n      value:\n        wifiProfiles:\n          profiles:\n          - authType: wpa-eap\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            eap: peap\n            eapCaCert:\n              data: MD1rKS05M2JqRVFNQ...RTtLH1tLWo=\n              name: eap-peap-ca.pem\n            eapIdentity: admin\n            eapIntermediateCert:\n              data: PD3tUS1CRDdJTiGDR...EFoLS0tLQg=\n              name: eap-peap-client.pem\n            eapPwd: EAP_PEAP_PASSWORD\n            name: Profile-eap-peap-1\n            ssid: your-network\n            wsec: ccmp\n          - authType: wpa-psk\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: false\n            name: Profile-guest-wifi\n            psk: WIFI_PASSWORD\n            ssid: your-network\n            wsec: ccmp\n          settings:\n            band: 2.4GHz\n            roaming: true\n            timeout: 5\n    patch-merchants-merchantId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200:\n      summary: Response code - 200 OK\n      description: Example response for adding an EAP-PEAP Wi-Fi profile and a PSK\n        Wi-Fi profile for a terminal\n      value:\n        cardholderReceipt:\n          headerForAuthorizedReceipt: header1,header2,filler\n        gratuities:\n        - currency: EUR\n          usePredefinedTipEntries: true\n          predefinedTipEntries:\n          - '100'\n          - 1%\n          - 5%\n          allowCustomAmount: true\n        nexo:\n          nexoEventUrls:\n          - https://your-event-notifications-endpoint.com\n        opi:\n          enablePayAtTable: true\n          payAtTableStoreNumber: '1'\n          payAtTableURL: https:/your-pay-at-table-endpoint.com\n        receiptOptions: {}\n        receiptPrinting:\n          shopperApproved: true\n          shopperRefused: true\n          shopperCancelled: true\n          shopperRefundApproved: true\n          shopperRefundRefused: true\n          shopperVoid: true\n        signature:\n          askSignatureOnScreen: true\n          skipSignature: false\n          deviceName: Amsterdam-236203386\n        wifiProfiles:\n          profiles:\n          - authType: wpa-eap\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            eap: peap\n            eapCaCert:\n              data: MD1rKS05M2JqRVFNQ...RTtLH1tLWo=\n              name: eap-peap-ca.pem\n            eapIdentity: admin\n            eapIntermediateCert:\n              data: PD3tUS1CRDdJTiGDR...EFoLS0tLQg=\n              name: eap-peap-client.pem\n            eapPwd: EAP_PEAP_PASSWORD\n            name: Profile-eap-peap-1\n            ssid: your-network\n            wsec: ccmp\n          - authType: wpa-psk\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: false\n            name: Profile-guest-wifi\n            psk: WIFI_PASSWORD\n            ssid: your-network\n            wsec: ccmp\n          settings:\n            band: 2.4GHz\n            roaming: true\n            timeout: 5\n        timeouts:\n          fromActiveToSleep: 30\n        hardware:\n          displayMaximumBackLight: 75\n    patch-merchants-merchantId-terminalSettings-add-eap-tls-wifi-profile:\n      summary: Add EAP-TLS Wi-Fi profile\n      description: Example request to add an EAP-TLS Wi-Fi profile for a terminal\n      value:\n        wifiProfiles:\n          profiles:\n          - authType: wpa-eap\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            eap: tls\n            eapCaCert:\n              data: LS0tLS05M2JqRVFNQ...EUtLS0tLQo=\n              name: eap-tls-ca.pem\n            eapClientCert:\n              data: LS0tLS1CRUdJTiBDR...EUtLS0tLQo=\n              name: eap-tls-client.pem\n            eapClientKey:\n              data: AAAB3NzaC1...Rtah3KLFwPU=\n              name: rsa-private.key\n            eapClientPwd: ''\n            eapIdentity: admin\n            name: Profile-eap-tls-1\n            ssid: your-network\n            wsec: ccmp\n          settings:\n            band: 2.4GHz\n            roaming: true\n            timeout: 5\n    patch-merchants-merchantId-terminalSettings-add-eap-tls-wifi-profile-200:\n      summary: Response code - 200 OK\n      description: Example response for adding an EAP-TLS Wi-Fi profile for a terminal\n      value:\n        cardholderReceipt:\n          headerForAuthorizedReceipt: header1,header2,filler\n        gratuities:\n        - currency: EUR\n          usePredefinedTipEntries: true\n          predefinedTipEntries:\n          - '100'\n          - 1%\n          - 5%\n          allowCustomAmount: true\n        nexo:\n          nexoEventUrls:\n          - https://your-event-notifications-endpoint.com\n        opi:\n          enablePayAtTable: true\n          payAtTableStoreNumber: '1'\n          payAtTableURL: https:/your-pay-at-table-endpoint.com\n        receiptOptions: {}\n        receiptPrinting:\n          shopperApproved: true\n          shopperRefused: true\n          shopperCancelled: true\n          shopperRefundApproved: true\n          shopperRefundRefused: true\n          shopperVoid: true\n        signature:\n          askSignatureOnScreen: true\n          skipSignature: false\n          deviceName: Amsterdam-236203386\n        wifiProfiles:\n          profiles:\n          - authType: wpa-eap\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            eap: tls\n            eapCaCert:\n              data: LS0tLS05M2JqRVFNQ...EUtLS0tLQo=\n              name: eap-tls-ca.pem\n            eapClientCert:\n              data: LS0tLS1CRUdJTiBDR...EUtLS0tLQo=\n              name: eap-tls-client.pem\n            eapClientKey:\n              data: AAAB3NzaC1...Rtah3KLFwPU=\n              name: rsa-private.key\n            eapClientPwd: ''\n            eapIdentity: admin\n            name: Profile-eap-tls-1\n            ssid: your-network\n            wsec: ccmp\n          settings:\n            band: 2.4GHz\n            roaming: true\n            timeout: 5\n        timeouts:\n          fromActiveToSleep: 30\n        hardware:\n          displayMaximumBackLight: 75\n    patch-stores-storeId-patch-stores:\n      summary: Update store address.\n      description: Example request to update the address of a store\n      value:\n        address:\n          line1: 1776 West Pinewood Avenue\n          line2: Heartland Building\n          line3: ''\n          postalCode: '20251'\n    patch-stores-storeId-patch-stores-200:\n      summary: Response code - 200 OK\n      description: Example response after updating a store\n      value:\n        id: YOUR_STORE_ID\n        address:\n          country: US\n          line1: 1776 West Pinewood Avenue\n          line2: Heartland Building\n          line3: ''\n          city: Springfield\n          stateOrProvince: NY\n          postalCode: '20251'\n        description: City centre store\n        merchantId: YOUR_MERCHANT_ACCOUNT_ID\n        shopperStatement: Springfield Shop\n        phoneNumber: '+1813702551707653'\n        reference: Spring_store_2\n        status: active\n        _links:\n          self:\n            href: https://management-test.adyen.com/v1/stores/YOUR_STORE_ID\n    patch-stores-storeId-terminalLogos-remove-logo:\n      summary: Remove logo to restore the logo from a higher level\n      description: Example request to remove the payment terminal logo configured\n        at the current level, and inherit the logo from a higher level\n      value:\n        data: ''\n    patch-stores-storeId-terminalLogos-remove-logo-200:\n      summary: Response code - 200 OK\n      description: Example response for removing a payment terminal logo to restore\n        the logo from a higher level\n      value:\n        data: LOGO_INHERITED_FROM_HIGHER_LEVEL_BASE-64_ENCODED_STRING\n    patch-stores-storeId-terminalLogos-upload-logo:\n      summary: Upload terminal logo\n      description: Example request to upload a payment terminal logo\n      value:\n        data: LOGO_FILE_CONVERTED_TO_A_BASE-64_ENCODED_STRING\n    patch-stores-storeId-terminalLogos-upload-logo-200:\n      summary: Response code - 200 OK\n      description: Example response for uploading a payment terminal logo\n      value:\n        data: BASE-64_ENCODED_STRING_FROM_THE_REQUEST\n    patch-stores-storeId-terminalSettings-add-eap-peap-and-psk-wifi-profiles:\n      summary: Add EAP-PEAP and PSK Wi-Fi profiles\n      description: Example request to add an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi\n        profile for a terminal\n      value:\n        wifiProfiles:\n          profiles:\n          - authType: wpa-eap\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            eap: peap\n            eapCaCert:\n              data: MD1rKS05M2JqRVFNQ...RTtLH1tLWo=\n              name: eap-peap-ca.pem\n            eapIdentity: admin\n            eapIntermediateCert:\n              data: PD3tUS1CRDdJTiGDR...EFoLS0tLQg=\n              name: eap-peap-client.pem\n            eapPwd: EAP_PEAP_PASSWORD\n            name: Profile-eap-peap-1\n            ssid: your-network\n            wsec: ccmp\n          - authType: wpa-psk\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: false\n            name: Profile-guest-wifi\n            psk: WIFI_PASSWORD\n            ssid: your-network\n            wsec: ccmp\n          settings:\n            band: 2.4GHz\n            roaming: true\n            timeout: 5\n    patch-stores-storeId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200:\n      summary: Response code - 200 OK\n      description: Example response for adding an EAP-PEAP Wi-Fi profile and a PSK\n        Wi-Fi profile for a terminal\n      value:\n        cardholderReceipt:\n          headerForAuthorizedReceipt: header1,header2,filler\n        gratuities:\n        - currency: EUR\n          usePredefinedTipEntries: true\n          predefinedTipEntries:\n          - '100'\n          - 1%\n          - 5%\n          allowCustomAmount: true\n        nexo:\n          nexoEventUrls:\n          - https://your-event-notifications-endpoint.com\n        opi:\n          enablePayAtTable: true\n          payAtTableStoreNumber: '1'\n          payAtTableURL: https:/your-pay-at-table-endpoint.com\n        receiptOptions: {}\n        receiptPrinting:\n          shopperApproved: true\n          shopperRefused: true\n          shopperCancelled: true\n          shopperRefundApproved: true\n          shopperRefundRefused: true\n          shopperVoid: true\n        signature:\n          askSignatureOnScreen: true\n          skipSignature: false\n          deviceName: Amsterdam-236203386\n        wifiProfiles:\n          profiles:\n          - authType: wpa-eap\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            eap: peap\n            eapCaCert:\n              data: MD1rKS05M2JqRVFNQ...RTtLH1tLWo=\n              name: eap-peap-ca.pem\n            eapIdentity: admin\n            eapIntermediateCert:\n              data: PD3tUS1CRDdJTiGDR...EFoLS0tLQg=\n              name: eap-peap-client.pem\n            eapPwd: EAP_PEAP_PASSWORD\n            name: Profile-eap-peap-1\n            ssid: your-network\n            wsec: ccmp\n          - authType: wpa-psk\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: false\n            name: Profile-guest-wifi\n            psk: WIFI_PASSWORD\n            ssid: your-network\n            wsec: ccmp\n          settings:\n            band: 2.4GHz\n            roaming: true\n            timeout: 5\n        timeouts:\n          fromActiveToSleep: 30\n        hardware:\n          displayMaximumBackLight: 75\n    patch-stores-storeId-terminalSettings-add-eap-tls-wifi-profile:\n      summary: Add EAP-TLS Wi-Fi profile\n      description: Example request to add an EAP-TLS Wi-Fi profile for a terminal\n      value:\n        wifiProfiles:\n          profiles:\n          - authType: wpa-eap\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            eap: tls\n            eapCaCert:\n              data: LS0tLS05M2JqRVFNQ...EUtLS0tLQo=\n              name: eap-tls-ca.pem\n            eapClientCert:\n              data: LS0tLS1CRUdJTiBDR...EUtLS0tLQo=\n              name: eap-tls-client.pem\n            eapClientKey:\n              data: AAAB3NzaC1...Rtah3KLFwPU=\n              name: rsa-private.key\n            eapClientPwd: ''\n            eapIdentity: admin\n            name: Profile-eap-tls-1\n            ssid: your-network\n            wsec: ccmp\n          settings:\n            band: 2.4GHz\n            roaming: true\n            timeout: 5\n    patch-stores-storeId-terminalSettings-add-eap-tls-wifi-profile-200:\n      summary: Response code - 200 OK\n      description: Example response for adding an EAP-TLS Wi-Fi profile for a terminal\n      value:\n        cardholderReceipt:\n          headerForAuthorizedReceipt: header1,header2,filler\n        gratuities:\n        - currency: EUR\n          usePredefinedTipEntries: true\n          predefinedTipEntries:\n          - '100'\n          - 1%\n          - 5%\n          allowCustomAmount: true\n        nexo:\n          nexoEventUrls:\n          - https://your-event-notifications-endpoint.com\n        opi:\n          enablePayAtTable: true\n          payAtTableStoreNumber: '1'\n          payAtTableURL: https:/your-pay-at-table-endpoint.com\n        receiptOptions: {}\n        receiptPrinting:\n          shopperApproved: true\n          shopperRefused: true\n          shopperCancelled: true\n          shopperRefundApproved: true\n          shopperRefundRefused: true\n          shopperVoid: true\n        signature:\n          askSignatureOnScreen: true\n          skipSignature: false\n          deviceName: Amsterdam-236203386\n        wifiProfiles:\n          profiles:\n          - authType: wpa-eap\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            eap: tls\n            eapCaCert:\n              data: LS0tLS05M2JqRVFNQ...EUtLS0tLQo=\n              name: eap-tls-ca.pem\n            eapClientCert:\n              data: LS0tLS1CRUdJTiBDR...EUtLS0tLQo=\n              name: eap-tls-client.pem\n            eapClientKey:\n              data: AAAB3NzaC1...Rtah3KLFwPU=\n              name: rsa-private.key\n            eapClientPwd: ''\n            eapIdentity: admin\n            name: Profile-eap-tls-1\n            ssid: your-network\n            wsec: ccmp\n          settings:\n            band: 2.4GHz\n            roaming: true\n            timeout: 5\n        timeouts:\n          fromActiveToSleep: 30\n        hardware:\n          displayMaximumBackLight: 75\n    patch-terminals-terminalId-terminalLogos-remove-logo:\n      summary: Remove logo to restore the logo from a higher level\n      description: Example request to remove the payment terminal logo configured\n        at the current level, and inherit the logo from a higher level\n      value:\n        data: ''\n    patch-terminals-terminalId-terminalLogos-remove-logo-200:\n      summary: Response code - 200 OK\n      description: Example response for removing a payment terminal logo to restore\n        the logo from a higher level\n      value:\n        data: LOGO_INHERITED_FROM_HIGHER_LEVEL_BASE-64_ENCODED_STRING\n    patch-terminals-terminalId-terminalLogos-upload-logo:\n      summary: Upload terminal logo\n      description: Example request to upload a payment terminal logo\n      value:\n        data: LOGO_FILE_CONVERTED_TO_A_BASE-64_ENCODED_STRING\n    patch-terminals-terminalId-terminalLogos-upload-logo-200:\n      summary: Response code - 200 OK\n      description: Example response for uploading a payment terminal logo\n      value:\n        data: BASE-64_ENCODED_STRING_FROM_THE_REQUEST\n    patch-terminals-terminalId-terminalSettings-add-eap-peap-and-psk-wifi-profiles:\n      summary: Add EAP-PEAP and PSK Wi-Fi profiles\n      description: Example request to add an EAP-PEAP Wi-Fi profile and a PSK Wi-Fi\n        profile for a terminal\n      value:\n        wifiProfiles:\n          profiles:\n          - authType: wpa-eap\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            eap: peap\n            eapCaCert:\n              data: MD1rKS05M2JqRVFNQ...RTtLH1tLWo=\n              name: eap-peap-ca.pem\n            eapIdentity: admin\n            eapIntermediateCert:\n              data: PD3tUS1CRDdJTiGDR...EFoLS0tLQg=\n              name: eap-peap-client.pem\n            eapPwd: EAP_PEAP_PASSWORD\n            name: Profile-eap-peap-1\n            ssid: your-network\n            wsec: ccmp\n          - authType: wpa-psk\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: false\n            name: Profile-guest-wifi\n            psk: WIFI_PASSWORD\n            ssid: your-network\n            wsec: ccmp\n          settings:\n            band: 2.4GHz\n            roaming: true\n            timeout: 5\n    patch-terminals-terminalId-terminalSettings-add-eap-peap-and-psk-wifi-profiles-200:\n      summary: Response code - 200 OK\n      description: Example response for adding an EAP-PEAP Wi-Fi profile and a PSK\n        Wi-Fi profile for a terminal\n      value:\n        cardholderReceipt:\n          headerForAuthorizedReceipt: header1,header2,filler\n        gratuities:\n        - currency: EUR\n          usePredefinedTipEntries: true\n          predefinedTipEntries:\n          - '100'\n          - 1%\n          - 5%\n          allowCustomAmount: true\n        nexo:\n          nexoEventUrls:\n          - https://your-event-notifications-endpoint.com\n        opi:\n          enablePayAtTable: true\n          payAtTableStoreNumber: '1'\n          payAtTableURL: https:/your-pay-at-table-endpoint.com\n        receiptOptions: {}\n        receiptPrinting:\n          shopperApproved: true\n          shopperRefused: true\n          shopperCancelled: true\n          shopperRefundApproved: true\n          shopperRefundRefused: true\n          shopperVoid: true\n        signature:\n          askSignatureOnScreen: true\n          skipSignature: false\n          deviceName: Amsterdam-236203386\n        wifiProfiles:\n          profiles:\n          - authType: wpa-eap\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            eap: peap\n            eapCaCert:\n              data: MD1rKS05M2JqRVFNQ...RTtLH1tLWo=\n              name: eap-peap-ca.pem\n            eapIdentity: admin\n            eapIntermediateCert:\n              data: PD3tUS1CRDdJTiGDR...EFoLS0tLQg=\n              name: eap-peap-client.pem\n            eapPwd: EAP_PEAP_PASSWORD\n            name: Profile-eap-peap-1\n            ssid: your-network\n            wsec: ccmp\n          - authType: wpa-psk\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: false\n            name: Profile-guest-wifi\n            psk: WIFI_PASSWORD\n            ssid: your-network\n            wsec: ccmp\n          settings:\n            band: 2.4GHz\n            roaming: true\n            timeout: 5\n        timeouts:\n          fromActiveToSleep: 30\n        hardware:\n          displayMaximumBackLight: 75\n        connectivity:\n          simcardStatus: INVENTORY\n    patch-terminals-terminalId-terminalSettings-add-eap-tls-wifi-profile:\n      summary: Add EAP-TLS Wi-Fi profile\n      description: Example request to add an EAP-TLS Wi-Fi profile for a terminal\n      value:\n        wifiProfiles:\n          profiles:\n          - authType: wpa-eap\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            eap: tls\n            eapCaCert:\n              data: LS0tLS05M2JqRVFNQ...EUtLS0tLQo=\n              name: eap-tls-ca.pem\n            eapClientCert:\n              data: LS0tLS1CRUdJTiBDR...EUtLS0tLQo=\n              name: eap-tls-client.pem\n            eapClientKey:\n              data: AAAB3NzaC1...Rtah3KLFwPU=\n              name: rsa-private.key\n            eapClientPwd: ''\n            eapIdentity: admin\n            name: Profile-eap-tls-1\n            ssid: your-network\n            wsec: ccmp\n          settings:\n            band: 2.4GHz\n            roaming: true\n            timeout: 5\n    patch-terminals-terminalId-terminalSettings-add-eap-tls-wifi-profile-200:\n      summary: Response code - 200 OK\n      description: Example response for adding an EAP-TLS Wi-Fi profile for a terminal\n      value:\n        cardholderReceipt:\n          headerForAuthorizedReceipt: header1,header2,filler\n        gratuities:\n        - currency: EUR\n          usePredefinedTipEntries: true\n          predefinedTipEntries:\n          - '100'\n          - 1%\n          - 5%\n          allowCustomAmount: true\n        nexo:\n          nexoEventUrls:\n          - https://your-event-notifications-endpoint.com\n        opi:\n          enablePayAtTable: true\n          payAtTableStoreNumber: '1'\n          payAtTableURL: https:/your-pay-at-table-endpoint.com\n        receiptOptions: {}\n        receiptPrinting:\n          shopperApproved: true\n          shopperRefused: true\n          shopperCancelled: true\n          shopperRefundApproved: true\n          shopperRefundRefused: true\n          shopperVoid: true\n        signature:\n          askSignatureOnScreen: true\n          skipSignature: false\n          deviceName: Amsterdam-236203386\n        wifiProfiles:\n          profiles:\n          - authType: wpa-eap\n            autoWifi: false\n            bssType: infra\n            channel: 0\n            defaultProfile: true\n            eap: tls\n            eapCaCert:\n              data: LS0tLS05M2JqRVFNQ...EUtLS0tLQo=\n              name: eap-tls-ca.pem\n            eapClientCert:\n              data: LS0tLS1CRUdJTiBDR...EUtLS0tLQo=\n              name: eap-tls-client.pem\n            eapClientKey:\n              data: AAAB3NzaC1...Rtah3KLFwPU=\n              name: rsa-private.key\n            eapClientPwd: ''\n            eapIdentity: admin\n            name: Profile-eap-tls-1\n            ssid: your-network\n            wsec: ccmp\n          settings:\n            band: 2.4GHz\n            roaming: true\n            timeout: 5\n        timeouts:\n          fromActiveToSleep: 30\n        hardware:\n          displayMaximumBackLight: 75\n        connectivity:\n          simcardStatus: INVENTORY\n    post-companies-companyId-shippingLocations-create-shipping-location:\n      summary: Create a shipping location\n      description: Example request to create a shipping location\n      value:\n        name: YOUR_COMPANY Rokin depot\n        address:\n          companyName: YOUR_COMPANY\n          streetAddress: Rokin 21\n          postalCode: 1012 KS\n          city: Amsterdam\n          stateOrProvince: ''\n          country: NL\n        contact:\n          firstName: Paul\n          lastName: Green\n          phoneNumber: +31 020 1234567\n          email: Paul.Green@company.com\n    post-companies-companyId-shippingLocations-create-shipping-location-200:\n      summary: Shipping location created\n      description: Example response after creating a shipping location\n      value:\n        id: S2-7973536B20662642215526704F302044452F714622375D476169\n        name: YOUR_COMPANY Rokin depot\n        contact:\n          firstName: Paul\n          lastName: Green\n          phoneNumber: +31 020 1234567\n          email: Paul.Green@company.com\n        address:\n          companyName: YOUR_COMPANY\n          streetAddress: Rokin 21\n          postalCode: 1012 KS\n          city: Amsterdam\n          stateOrProvince: ''\n    post-companies-companyId-terminalOrders-create-order:\n      summary: Create an order\n      description: Example request to create an order for terminal products\n      value:\n        customerOrderReference: YOUR_REFERENCE\n        shippingLocationId: S2-6A6C2E3432747D4F2F2C3455485E3836457D\n        billingEntityId: Company.YOUR_COMPANY\n        items:\n        - id: TBOX-V400m-684-EU\n          name: V400m Package\n          quantity: 1\n        - id: PART-175746-EU\n          name: Adyen Test Card\n          quantity: 1\n    post-companies-companyId-terminalOrders-create-order-200:\n      summary: Response code - 200 OK\n      description: Example response after creating an order for terminal products\n      value:\n        id: '5265677890100681'\n        customerOrderReference: YOUR_REFERENCE\n        status: Placed\n        shippingLocation:\n          id: S2-232A6D2967356F424F4369432B3F486B6A6D\n          name: YOUR_COMPANY HQ - POS Ops\n          contact:\n            firstName: Paul\n            lastName: Green\n            email: Paul.Green@company.com\n          address:\n            streetAddress: Simon Carmiggeltstraat\n            streetAddress2: 6-50\n            postalCode: 1011 DJ\n            city: Amsterdam\n            country: NL\n        billingEntity:\n          id: Company.YOUR_COMPANY\n          name: YOUR_COMPANY\n          taxId: NL1234567890\n          email: Paul.Green@company.com\n          address:\n            streetAddress: Simon Carmiggeltstraat 6-50\n            postalCode: 1011 DJ\n            city: Amsterdam\n            country: NL\n        orderDate: '2022-01-20T14:12:33Z'\n        items:\n        - id: TBOX-V400m-684-EU\n          name: V400m Package\n          quantity: 1\n        - id: PART-175746-EU\n          name: Adyen Test Card\n          quantity: 1\n    post-companies-companyId-terminalOrders-orderId-cancel-cancel-order-200:\n      summary: Terminal order cancelled\n      description: Example response after cancelling an order for terminal products\n      value:\n        id: '5265677890100681'\n        customerOrderReference: YOUR_REFERENCE\n        status: Cancelled\n        shippingLocation:\n          id: S2-232A6D2967356F424F4369432B3F486B6A6D\n          name: YOUR_COMPANY HQ - POS Ops\n          contact:\n            firstName: Paul\n            lastName: Green\n            email: Paul.Green@company.com\n          address:\n            streetAddress: Simon Carmiggeltstraat\n            streetAddress2: 6-50\n            postalCode: 1011 DJ\n            city: Amsterdam\n            country: Netherlands\n        billingEntity:\n          id: Company.YOUR_COMPANY\n          name: YOUR_COMPANY\n          taxId: NL1234567890\n          email: Paul.Green@company.com\n          address:\n            streetAddress: Simon Carmiggeltstraat 6-50\n            postalCode: 1011 DJ\n            city: Amsterdam\n            country: Netherlands\n        orderDate: '2022-01-20T14:12:33Z'\n        items:\n        - id: TBOX-V400m-684-EU\n          name: V400m Package\n          quantity: 1\n        - id: PART-175746-EU\n          name: Adyen Test Card\n          quantity: 1\n    post-companies-companyId-users-create-user:\n      summary: Create a user\n      description: Example request to create a user on the company level\n      value:\n        name:\n          firstName: John\n          lastName: Smith\n        username: johnsmith\n        email: john.smith@example.com\n        timeZoneCode: Europe/Amsterdam\n        roles:\n        - Merchant standard role\n        - Merchant admin\n        associatedMerchantAccounts:\n        - YOUR_MERCHANT_ACCOUNT\n    post-companies-companyId-users-create-user-200:\n      summary: Response code - 200 OK\n      description: Example response after creating a user on the company level\n      value:\n        id: S2-5C334C6770\n        name:\n          firstName: John\n          gender: UNKNOWN\n          lastName: Smith\n        email: john.smith@example.com\n        timeZoneCode: Europe/Amsterdam\n        username: johnsmith\n        roles:\n        - Merchant standard role\n        - Merchant admin\n        active: 'true'\n        _links:\n          self:\n            href: https://management-test.adyen.com/v1/companies/YOUR_COMPANY_ACCOUNT/users/S2-5C334C6770\n        associatedMerchantAccounts:\n        - YOUR_MERCHANT_ACCOUNT\n    post-merchants-merchantId-shippingLocations-create-shipping-location:\n      summary: Create a shipping location\n      description: Example request to create a shipping location\n      value:\n        name: YOUR_MERCHANT_ACCOUNT Barcelona depot\n        address:\n          companyName: YOUR_COMPANY\n          streetAddress: El quinto pino 42\n          postalCode: 08012\n          city: Barcelona\n          stateOrProvince: ''\n          country: ES\n        contact:\n          firstName: Rita\n          lastName: Perengano\n          phoneNumber: +34 93 1234567\n          email: Rita.Perengano@company.com\n    post-merchants-merchantId-shippingLocations-create-shipping-location-200:\n      summary: Shipping location created\n      description: Example response after creating a shipping location\n      value:\n        id: S2-73536B20665526704F30792642212044452F714622375D477270\n        name: YOUR_MERCHANT_ACCOUNT Barcelona depot\n        contact:\n          firstName: Rita\n          lastName: Perengano\n          phoneNumber: '+34931234567'\n          email: Rita.Perengano@company.com\n        address:\n          companyName: YOUR_COMPANY\n          streetAddress: El quinto pino 42\n          postalCode: 08012\n          city: Barcelona\n          stateOrProvince: ''\n    post-merchants-merchantId-stores-post-stores:\n      summary: Create a store under the merchant account specified in the path.\n      description: Example request to create a store\n      value:\n        description: City centre store\n        shopperStatement: Springfield Shop\n        phoneNumber: '1813702551707653'\n        reference: Spring_store_2\n        address:\n          country: US\n          line1: 200 Main Street\n          line2: Building 5A\n          line3: Suite 3\n          city: Springfield\n          stateOrProvince: NY\n          postalCode: '20250'\n    post-merchants-merchantId-stores-post-stores-200:\n      summary: Response code - 200 OK\n      description: Example response after creating a store\n      value:\n        id: YOUR_STORE_ID\n        address:\n          country: US\n          line1: 200 Main Street\n          line2: Building 5A\n          line3: Suite 3\n          city: Springfield\n          stateOrProvince: NY\n          postalCode: '20250'\n        description: City centre store\n        merchantId: YOUR_MERCHANT_ACCOUNT_ID\n        shopperStatement: Springfield Shop\n        phoneNumber: '1813702551707653'\n        reference: Spring_store_2\n        status: active\n        _links:\n          self:\n            href: https://management-test.adyen.com/v1/stores/YOUR_STORE_ID\n    post-merchants-merchantId-terminalOrders-create-order:\n      summary: Create an order\n      description: Example request to create an order for terminal products\n      value:\n        customerOrderReference: YOUR_REFERENCE\n        shippingLocationId: S2-6A6C2E3432747D4F2F2C3455485E3836457D\n        billingEntityId: MerchantAccount.YOUR_MERCHANT_ACCOUNT\n        items:\n        - id: PART-287001-EU\n          name: Bluetooth Charging Base - V400m\n          quantity: 2\n        - id: PART-620222-EU\n          name: Receipt Roll\n          quantity: 20\n    post-merchants-merchantId-terminalOrders-create-order-200:\n      summary: Response code - 200 OK\n      description: Example response after creating an order for terminal products\n      value:\n        id: '4154567890100682'\n        customerOrderReference: YOUR_REFERENCE\n        status: Placed\n        shippingLocation:\n          id: S2-6A6C2E3432747D4F2F2C3455485E3836457D\n          name: YOUR_COMPANY Spain\n          contact:\n            firstName: Pablo\n            lastName: Mengano\n            phoneNumber: '+34911234567'\n            email: Pablo.Mengano@company.com\n          address:\n            streetAddress: Paseo de la Castellana 43\n            streetAddress2: 7 piso\n            postalCode: '28046'\n            city: Madrid\n            country: ES\n        billingEntity:\n          id: MerchantAccount.YOUR_MERCHANT_ACCOUNT\n          name: YOUR_MERCHANT_ACCOUNT\n          taxId: ES1234567890\n          email: Pablo.Mengano@company.com\n          address:\n            streetAddress: Paseo de la Castellana 43, 7\n            postalCode: '28046'\n            city: Madrid\n            country: ES\n        orderDate: '2022-01-21T16:12:33Z'\n        items:\n        - id: PART-287001-EU\n          name: Bluetooth Charging Base - V400m\n          quantity: 2\n        - id: PART-620222-EU\n          name: Receipt Roll\n          quantity: 20\n    post-merchants-merchantId-terminalOrders-orderId-cancel-cancel-order-200:\n      summary: Terminal order cancelled\n      description: Example response after cancelling an order for terminal products\n      value:\n        id: '4154567890100682'\n        customerOrderReference: YOUR_REFERENCE\n        status: Cancelled\n        shippingLocation:\n          id: S2-6A6C2E3432747D4F2F2C3455485E3836457D\n          name: YOUR_COMPANY Spain\n          contact:\n            firstName: Pablo\n            lastName: Mengano\n            phoneNumber: '+34911234567'\n            email: Pablo.Mengano@company.com\n          address:\n            streetAddress: Paseo de la Castellana 43\n            streetAddress2: 7 piso\n            postalCode: '28046'\n            city: Madrid\n            country: ES\n        billingEntity:\n          id: MerchantAccount.YOUR_MERCHANT_ACCOUNT\n          name: YOUR_MERCHANT_ACCOUNT\n          taxId: ES1234567890\n          email: Pablo.Mengano@company.com\n          address:\n            streetAddress: Paseo de la Castellana 43, 7\n            postalCode: '28046'\n            city: Madrid\n            country: ES\n        orderDate: '2022-01-21T16:12:33Z'\n        items:\n        - id: PART-287001-EU\n          name: Bluetooth Charging Base - V400m\n          quantity: 2\n        - id: PART-620222-EU\n          name: Receipt Roll\n          quantity: 20\n    post-stores-post-stores:\n      summary: Create a store\n      description: Example request to create a store\n      value:\n        merchantId: YOUR_MERCHANT_ACCOUNT_ID\n        description: City centre store\n        shopperStatement: Springfield Shop\n        phoneNumber: '+1813702551707653'\n        reference: Spring_store_2\n        address:\n          country: US\n          line1: 200 Main Street\n          line2: Building 5A\n          line3: Suite 3\n          city: Springfield\n          stateOrProvince: NY\n          postalCode: '20250'\n    post-stores-post-stores-200:\n      summary: Response code - 200 OK\n      description: Example response after creating a store\n      value:\n        id: YOUR_STORE_ID\n        address:\n          country: US\n          line1: 200 Main Street\n          line2: Building 5A\n          line3: Suite 3\n          city: Springfield\n          stateOrProvince: NY\n          postalCode: '20250'\n        description: City centre store\n        merchantId: YOUR_MERCHANT_ACCOUNT_ID\n        shopperStatement: Springfield Shop\n        phoneNumber: '+1813702551707653'\n        reference: Spring_store_2\n        status: active\n        _links:\n          self:\n            href: https://management-test.adyen.com/v1/stores/YOUR_STORE_ID\n    post-terminals-scheduleActions-install-app:\n      summary: Schedule installing an Android app\n      description: Example request to schedule installing an Android app\n      value:\n        terminalIds:\n        - S1E-000150183300032\n        - S1E-000150183300033\n        - S1F2-000150183300034\n        storeId: ''\n        scheduledAt: 2021-12-12T20:21:22-0100\n        actionDetails:\n          type: InstallAndroidApp\n          appId: ANDA422LZ223223K5F694GCCF732K8\n    post-terminals-scheduleActions-install-app-200:\n      summary: Response code - 200 OK\n      description: Example response after scheduling the installation of an Android\n        app\n      value:\n        actionDetails:\n          appId: ANDA422LZ223223K5F694GCCF732K8\n          type: InstallAndroidApp\n        scheduledAt: 2021-12-12T20:21:22-0100\n        storeId: ''\n        terminalIds:\n        - S1E-000150183300032\n        - S1E-000150183300033\n        - S1F2-000150183300034\n        terminalsWithErrors: {}\n        totalScheduled: 3\n        totalErrors: 0\n    post-terminals-scheduleActions-uninstall-cert:\n      summary: Schedule uninstalling an Android certificate\n      description: Example request to schedule uninstalling an Android certificate\n      value:\n        terminalIds:\n        - S1E-000150183300032\n        - S1E-000150183300033\n        - S1F2-000150183300034\n        storeId: ''\n        scheduledAt: 2021-12-12T20:21:22-0100\n        actionDetails:\n          type: UninstallAndroidCertificate\n          certificateId: ANDC422LZ223223K5F78NVN9SL4VPH\n    post-terminals-scheduleActions-uninstall-cert-200:\n      summary: Response code - 200 OK\n      description: Example response after scheduling the removal of an Android certificate\n      value:\n        actionDetails:\n          certificateId: ANDC422LZ223223K5F78NVN9SL4VPH\n          type: UninstallAndroidCertificate\n        scheduledAt: 2021-12-12T20:21:22-0100\n        storeId: ''\n        terminalIds:\n        - S1E-000150183300032\n        - S1E-000150183300033\n        - S1F2-000150183300034\n        terminalsWithErrors: {}\n        totalScheduled: 3\n        totalErrors: 0\n    post-terminals-scheduleActions-verification-error:\n      summary: Invalid terminal ID in the request\n      description: Example request to see what validation errors look like\n      value:\n        terminalIds:\n        - S1E-000150183300032\n        - S1E-000150183300033\n        - S1F2-000150183300034\n        storeId: ''\n        scheduledAt: 2021-12-11T20:21:22-0100\n        actionDetails:\n          type: InstallAndroidApp\n          appId: ANDA422LZ223223K5F694GCCF621J7\n    post-terminals-scheduleActions-verification-error-422:\n      summary: Response code - 422 Unprocessable Entity\n      description: Example response for failed verification of terminal IDs\n      value:\n        actionDetails:\n          appId: ANDA422LZ223223K5F694GCCF621J7\n          type: InstallAndroidApp\n        scheduledAt: 2021-12-11T20:21:22-0100\n        storeId: ''\n        terminalIds:\n        - S1E-000150183300032\n        - S1E-000150183300033\n        - S1F2-100150183300034\n        terminalsWithErrors:\n          InvalidTerminal:\n          - S1F2-100150183300034\n        totalCreated: 0\n        totalErrors: 0\n",
			"canonicalURL": "/github.com/Adyen/adyen-openapi@1ce757e7aa9360d308ee46c57faf90dacc9aaf98/-/blob/yaml/ManagementService-v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Adyen/adyen-openapi/blob/1ce757e7aa9360d308ee46c57faf90dacc9aaf98/yaml/ManagementService-v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/terminals/scheduleActions\": post: requestBody: contents: application/json: generate schema: field actionDetails: oneOf: oneOf ScheduleTerminalActionsRequestActionDetails: variant InstallAndroidCertificateDetails: no unique fields, unable to parse without discriminator: discriminator inference not implemented",
	"NotImplemented": [
		"discriminator inference"
	]
}