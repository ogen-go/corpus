{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/zoho.crm.rest/openapi.yaml",
			"byteSize": 12944,
			"content": "openapi: 3.0.0\nservers:\n  - description: API server\n    url: https://www.zohoapis.com/crm/v2\ninfo:\n  x-ballerina-display:\n    label: Zoho CRM REST\n    iconPath: \"icon.png\"\n  title: Zoho CRM REST\n  version: v2\n  description: |\n    This is a generated connector for [Zoho CRM](https://www.zoho.com/crm/developer/docs/api/v2/modules-api.html) OpenAPI specification.\n    Zoho CRM REST API provides the capability to unify customer data from across different applications and databases.\n  x-ballerina-init-description: |\n    The connector initialization requires setting the API credentials. \n    Create a [Zoho account](https://www.zoho.com/crm/signup.html) and obtain tokens.\nsecurity:\n  - OAuth2: []\n  - Bearer: []\npaths:\n  /{module_api_name}:\n    get:\n      summary: Get the list of available records from a module.\n      operationId: listRecords\n      parameters:\n        - name: module_api_name\n          in: path\n          required: true\n          description: Module name. Leads, Accounts, Contacts, Deals, Campaigns, Tasks, Cases, Events, Calls, Solutions, \n            Products, Vendors, Price Books, Quotes, Sales Orders, Purchase Orders, Invoices, Activities, and custom modules.\n          schema:\n            type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref:   \"#/components/schemas/RecordsData\"\n          description: Records\n    post:\n      summary: Add new records to a module.\n      operationId: addRecord\n      parameters:\n        - name: module_api_name\n          in: path\n          required: true\n          description: Module name. Leads, Accounts, Contacts, Deals, Campaigns, Tasks, Cases, Events, Calls, Solutions, \n            Products, Vendors, Price Books, Quotes, Sales Orders, Purchase Orders, Invoices, Activities, and custom modules.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema: {}\n        description: Record\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n          description: Success\n    put:\n      summary: Update existing record in the module.\n      operationId: updateRecord\n      parameters:\n        - name: module_api_name\n          in: path\n          required: true\n          description: Module name. Leads, Accounts, Contacts, Deals, Campaigns, Tasks, Cases, Events, Calls, Solutions, \n            Products, Vendors, Price Books, Quotes, Sales Orders, Purchase Orders, Invoices, Activities, and custom modules.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema: {}\n        description: Record\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n          description: Success\n  /{module_api_name}/{record_id}:\n    get:\n      summary: Get a record from a module.\n      operationId: getRecord\n      parameters:\n        - name: module_api_name\n          in: path\n          required: true\n          description: Module name. Leads, Accounts, Contacts, Deals, Campaigns, Tasks, Cases, Events, Calls, Solutions, \n            Products, Vendors, Price Books, Quotes, Sales Orders, Purchase Orders, Invoices, Activities, and custom modules.\n          schema:\n            type: string\n        - name: record_id\n          in: path\n          required: true\n          description: Record ID\n          schema:\n            type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref:   \"#/components/schemas/RecordsData\"\n          description: Record\n        204:\n          description: No Content.\n          content: {}\n    delete:\n      summary: Delete existing record in the module.\n      operationId: deleteRecord\n      parameters:\n        - name: module_api_name\n          in: path\n          required: true\n          description: Module name. Leads, Accounts, Contacts, Deals, Campaigns, Tasks, Cases, Events, Calls, Solutions, \n            Products, Vendors, Price Books, Quotes, Sales Orders, Purchase Orders, Invoices, Activities, and custom modules.\n          schema:\n            type: string\n        - name: record_id\n          in: path\n          required: true\n          description: Record ID\n          schema:\n            type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n          description: Success\n  /{module_api_name}/search:\n    get:\n      summary:  Retrieve the records that match your search criteria.\n      operationId: searchRecords\n      parameters:\n        - name: module_api_name\n          in: path\n          required: true\n          description: Module name. Leads, Accounts, Contacts, Deals, Campaigns, Tasks, Cases, Events, Calls, Solutions, \n            Products, Vendors, Price Books, Quotes, Sales Orders, Purchase Orders, Invoices, Activities, and custom modules.\n          schema:\n            type: string\n        - name: criteria\n          in: query\n          description: Performs search by following the shown criteria\n          schema:\n            type: string\n        - name: email\n          in: query\n          description: Performs module search by email. All the email fields of a particular module will be searched and listed.\n          schema:\n            type: string\n        - name: phone\n          in: query\n          description: Performs module search by phone number. All the phone fields of a particular module will be searched and listed.\n          schema:\n            type: string\n        - name: word\n          in: query\n          description: Performs global search by word.\n          schema:\n            type: string\n        - name: converted\n          in: query\n          description: To get the list of converted records. Default value is false.\n          schema:\n            type: string\n        - name: approved\n          in: query\n          description: To get the list of approved records. Default value is true.\n          schema:\n            type: string\n        - name: page\n          in: query\n          description: To get the list of records from the respective pages. Default value for page is 1.\n          schema:\n            type: integer\n        - name: per_page\n          in: query\n          description: To get the list of records available per page. The default and the maximum possible value is 200.\n          schema:\n            type: integer\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref:   \"#/components/schemas/RecordsData\"\n          description: Records\n        204:\n          description: No Content.\n          content: {}\n  /Leads/{record_id}/actions/convert:\n    post:\n      summary: Convert a lead into a contact or an account.\n      operationId: convertLead\n      parameters:\n      - name: record_id\n        in: path\n        description: Record ID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: New contact, account and deal properties\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LeadData\"\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConvertLeadResponse\"\n          description: Connections \ncomponents: \n  schemas:\n    RecordsData:\n      properties:\n        data:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Record\"\n        info:\n          properties:\n            per_page:\n              type: integer\n            count:\n              type: integer\n            page:\n              type: integer\n            more_records:\n              type: boolean\n    Record:\n      properties:\n        Owner:\n          $ref: \"#/components/schemas/Owner\"\n        $currency_symbol:\n          description: Represents the symbol of the currency of the organization. For instance, 'â‚¹'.\n          type: string\n        $process_flow:\n          description: Represents if the record is a part of review process.\n          type: boolean\n        Exchange_Rate:\n          description: Represents the exchange rate set for the organization.\n          type: integer\n        Currency:\n          description: Represents the currency of the organization.\n          type: string\n        $approved:\n          description: Represents if the current record is approved.\n          type: boolean\n        $approval:\n          description: Represents the details of the approval process.\n          type: object\n        Created_Time:\n          description: Represents the date and time at which the record was created.\n          type: string\n        Modified_Time:\n          description: Represents the date and time at which the record was last modified.\n          type: string\n        $editable:\n          description: Represents if the user can edit records in the current module.\n          type: boolean\n        Created_By:\n          description: Represents the name, ID, and email of the user who created the current record.\n          type: object\n        Modified_By:\n          description: Represents the name, ID, and email of the user who last modified the record.\n          type: object\n        $orchestration:\n          description: Represents if the current record is a part of orchestration.\n          type: boolean\n          nullable: true\n    Owner:\n      description: Represents the name, ID, and email ID of the record owner.\n      properties:\n        name:\n          description: Name\n          type: string\n        id:\n          description: Owner ID\n          type: string\n        email:\n          description: Email\n          type: string\n    Response:\n      properties:\n        data:\n          type: array\n          items:\n            properties:\n              code:\n                type: string\n              details:\n                properties:\n                  Modified_Time:\n                    type: string\n                  Modified_By:\n                    $ref: \"#/components/schemas/By\"\n                  Created_Time:\n                    type: string\n                  id:\n                    type: string\n                  Created_By:\n                    $ref: \"#/components/schemas/By\"\n              message:\n                type: string\n              status:\n                type: string\n    By:\n      properties:\n        name:\n          type: string\n        id:\n          type: string\n    LeadData:\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Lead'\n    Lead: \n      type: object\n      properties:\n        overwrite:\n          type: boolean\n          description: Specify if the Lead details must be overwritten in the Contact/Account/Deal based on lead conversion mapping configuration.\n        notify_lead_owner:\n          type: boolean\n          description: Specify whether the lead owner must get notified about the lead conversion via email.\n        notify_new_entity_owner:\n          type: boolean\n          description: Specify whether the user to whom the contact/account is assigned to must get notified about the lead conversion via email.\n        Accounts:\n          type: string\n          description: Use this key to associate an account with the lead being converted. Pass the unique and valid account ID.\n        Contacts:\n          type: string\n          description: Use this key to associate a contact with the lead being converted. Pass the unique and valid contact ID.\n        assign_to:\n          type: string\n          description: Use this key to assign record owner for the new contact and account. Pass the unique and valid user ID.\n        Deals: \n          type: object\n          properties:\n            Deal_Name:\n              type: string\n            Closing_Date:\n              type: string\n            Stage:\n              type: string\n          required:\n            - \"Deal_Name\"\n            - \"Closing_Date\"\n            - \"Stage\"\n        carry_over_tags:\n          type: object\n    ConvertLeadResponse:\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/LeadResponse'\n    LeadResponse:\n      type: object\n      properties:\n        Contacts:\n          type: string\n        Deals:\n          type: string\n          nullable: true\n        Account: \n          type: string\n  securitySchemes:\n    OAuth2:\n      type: oauth2        \n      flows:\n        clientCredentials:\n          scopes: {}\n          tokenUrl: https://accounts.zoho.com/oauth/v2/token\n    Bearer:\n      type: http\n      scheme: bearer\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/zoho.crm.rest/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/zoho.crm.rest/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/Leads/{record_id}/actions/convert\": post: security: security \"OAuth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}