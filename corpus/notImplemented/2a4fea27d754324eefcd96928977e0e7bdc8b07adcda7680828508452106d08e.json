{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/GluuFederation/scim"
		},
		"file": {
			"name": "gluu-scim-openapi.yaml",
			"size": 0,
			"path": "scim-server/src/main/resources/gluu-scim-openapi.yaml",
			"byteSize": 85659,
			"content": "openapi: 3.0.1\ninfo:\n  title: SCIM API\n  description: |\n    Gluu SCIM 2.0 server API. Developers can think of SCIM as a REST API with endpoints exposing CRUD functionality\n    (create, update, retrieve and delete) for identity management resources such as users, groups, and fido devices.\n  license:\n    name: Apache 2\n    url: https://github.com/GluuFederation/scim/blob/master/LICENSE\n  version: 4.3.1\nservers:\n- url: https://your.gluu.server.com/identity/restv1/scim/v2\ntags:\n- name: user\n  description: Endpoints for management of User resources\n- name: group\n  description: Endpoints for management of Group resources\n- name: fido devices\n  description: Endpoints for management of Fido devices\n- name: fido2 devices\n  description: Endpoints for management of Fido2 devices\n- name: global search\n  description: Search from service root\n- name: discovery\n  description: Endpoints to facilitate discovery of SCIM service provider features\npaths:\n  /Groups:\n    get:\n      tags:\n      - group\n      operationId: get-groups\n      description: Query Group resources (see section 3.4.2 of RFC 7644)\n      security:\n        - scim_oauth: [https://gluu.org/scim/groups.read]\n      parameters:\n      - name: attributes\n        in: query\n        description: A comma-separated list of attribute names to return in the response\n        schema:\n          type: string\n      - name: excludedAttributes\n        in: query\n        description: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list)\n        schema:\n          type: string\n      - name: filter\n        in: query\n        description: An expression specifying the search criteria. See section 3.4.2.2 of RFC 7644\n        schema:\n          type: string\n        example: displayName co \"Audit\"\n      - name: startIndex\n        in: query\n        description: The 1-based index of the first query result\n        schema:\n          type: integer\n      - name: count\n        in: query\n        description: Specifies the desired maximum number of query results per page\n        schema:\n          type: integer\n      - name: sortBy\n        in: query\n        description: The attribute whose value will be used to order the returned responses\n        schema:\n          type: string\n      - name: sortOrder\n        in: query\n        description: Order in which the sortBy param is applied. Allowed values are \"ascending\" and \"descending\"\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/GroupListResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupListResponse'\n        400:\n          description: Parameter count exceeds the maximum allowed value or the filter\n            supplied was unparsable\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - group\n      operationId: create-group\n      description: Allows creating a Group resource via POST (see section 3.3 of RFC\n        7644)\n      security:\n        - scim_oauth: [https://gluu.org/scim/groups.write]\n      parameters:\n      - name: attributes\n        in: query\n        description: A comma-separated list of attribute names to return in the response\n        schema:\n          type: string\n      - name: excludedAttributes\n        in: query\n        description: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list)\n        schema:\n          type: string\n      requestBody:\n        description: Payload that represents the Group to create\n        content:\n          application/scim+json:\n            schema:\n              $ref: '#/components/schemas/GroupResource'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroupResource'\n        required: true\n      responses:\n        201:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/GroupResource'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupResource'\n        400:\n          description: An invalid value was passed in the payload\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        409:\n          description: There is a conflict with an already existing group. Uniqueness\n            is assumed over displayName\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-codegen-request-body-name: group\n  /Groups/{id}:\n    get:\n      tags:\n      - group\n      operationId: get-group-by-id\n      description: Retrieves a Group resource by Id (see section 3.4.1 of RFC 7644)\n      security:\n        - scim_oauth: [https://gluu.org/scim/groups.read]\n      parameters:\n      - name: attributes\n        in: query\n        description: A comma-separated list of attribute names to return in the response\n        schema:\n          type: string\n      - name: excludedAttributes\n        in: query\n        description: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list)\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/GroupResource'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupResource'\n        404:\n          description: Id passed unknown\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - group\n      operationId: update-group-by-id\n      description: \"Updates a Group resource (see section 3.5.1 of RFC 7644). Update\\\n        \\ works in a replacement fashion\u0026amp;#58; every\\nattribute value found in the\\\n        \\ payload sent will replace the one in the existing resource representation.\\\n        \\ Attributes \\nnot passed in the payload will be left intact.\\n\"\n      security:\n        - scim_oauth: [https://gluu.org/scim/groups.write]\n      parameters:\n      - name: attributes\n        in: query\n        description: A comma-separated list of attribute names to return in the response\n        schema:\n          type: string\n      - name: excludedAttributes\n        in: query\n        description: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list)\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Payload with the data to replace in the existing group identified\n          by the id param\n        content:\n          application/scim+json:\n            schema:\n              $ref: '#/components/schemas/GroupResource'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroupResource'\n        required: true\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/GroupResource'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupResource'\n        400:\n          description: |\n            An invalid value was passed in the payload or there was an attempt to update an immutable attribute\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: Id passed unknown\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        409:\n          description: There is a conflict with an already existing group. Uniqueness\n            is assumed over displayName\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-codegen-request-body-name: group\n    delete:\n      tags:\n      - group\n      operationId: delete-group-by-id\n      description: Deletes a group resource (see section 3.6 of RFC 7644)\n      security:\n        - scim_oauth: [https://gluu.org/scim/groups.write]\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the resource to delete\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          description: Successful operation. Empty response\n          content: {}\n        404:\n          description: Id passed unknown\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n      - group\n      operationId: patch-group-by-id\n      description: \"Updates one or more attributes of a Group resource using a sequence\\\n        \\ of additions, removals, and \\nreplacements operations. See section 3.5.2\\\n        \\ of RFC 7644\\n\"\n      security:\n        - scim_oauth: [https://gluu.org/scim/groups.write]\n      parameters:\n      - name: attributes\n        in: query\n        description: A comma-separated list of attribute names to return in the response\n        schema:\n          type: string\n      - name: excludedAttributes\n        in: query\n        description: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list)\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Payload describing the patch operations to apply upon the resource\n          identified by param id\n        content:\n          application/scim+json:\n            schema:\n              $ref: '#/components/schemas/PatchRequest'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchRequest'\n        required: true\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/GroupResource'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupResource'\n        400:\n          description: |\n            One or more operations supplied in the request are specified incorrectly, there were attempts to\n            modify immutable attributes, or the resulting resource cannot pass intrinsic validations\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-codegen-request-body-name: request\n  /Groups/.search:\n    post:\n      tags:\n      - group\n      operationId: search-group\n      description: Query Group resources (see section 3.4.2 of RFC 7644)\n      security:\n        - scim_oauth: [https://gluu.org/scim/groups.read]\n      requestBody:\n        description: Payload that represents the search criteria\n        content:\n          application/scim+json:\n            schema:\n              $ref: '#/components/schemas/SearchRequest'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchRequest'\n        required: true\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/GroupListResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupListResponse'\n        400:\n          description: |\n            Parameter count exceeds the maximum allowed value, the filter supplied was unparsable,\n            or invalid schema in search request\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-codegen-request-body-name: searchRequest\n  /FidoDevices:\n    get:\n      tags:\n        - fido devices\n      operationId: get-fido-devices\n      description: Query Fido resources\n      security:\n        - scim_oauth: [https://gluu.org/scim/fido.read]\n      parameters:\n      - name: attributes\n        in: query\n        description: A comma-separated list of attribute names to return in the response\n        schema:\n          type: string\n      - name: excludedAttributes\n        in: query\n        description: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list)\n        schema:\n          type: string\n      - name: userId\n        in: query\n        description: Used to restrict the search to fido resources owned by a specific\n          user\n        schema:\n          type: string\n      - name: filter\n        in: query\n        description: An expression specifying the search criteria. See section 3.4.2.2 of RFC 7644\n        example: status eq \"compromised\"\n        schema:\n          type: string\n      - name: startIndex\n        in: query\n        description: The 1-based index of the first query result\n        schema:\n          type: integer\n      - name: count\n        in: query\n        description: Specifies the desired maximum number of query results per page\n        schema:\n          type: integer\n      - name: sortBy\n        in: query\n        description: The attribute whose value will be used to order the returned responses\n        schema:\n          type: string\n      - name: sortOrder\n        in: query\n        description: Order in which the sortBy param is applied. Allowed values are \"ascending\" and \"descending\"\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/FidoListResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FidoListResponse'\n        400:\n          description: Parameter count exceeds the maximum allowed value or the filter\n            supplied was unparsable\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: If userId param was supplied and the user is not known\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /FidoDevices/{id}:\n    get:\n      tags:\n        - fido devices\n      operationId: get-fido-device-by-id\n      description: Retrieves a U2F/Super Gluu device by Id\n      security:\n        - scim_oauth: [https://gluu.org/scim/fido.read]\n      parameters:\n      - name: attributes\n        in: query\n        description: A comma-separated list of attribute names to return in the response\n        schema:\n          type: string\n      - name: excludedAttributes\n        in: query\n        description: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list)\n        schema:\n          type: string\n      - name: userId\n        in: query\n        description: Identifier (inum) of the device owner. This param is not required when underlying database is LDAP\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/FidoDeviceResource'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FidoDeviceResource'\n        404:\n          description: Id passed unknown\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n        - fido devices\n      operationId: update-fido-device-by-id\n      description: \"Updates a Fido resource. Update works in a replacement fashion\u0026amp;#58;\\\n        \\ every\\nattribute value found in the payload sent will replace the one in\\\n        \\ the existing resource representation. Attributes \\nnot passed in the payload\\\n        \\ will be left intact.\\n\"\n      security:\n        - scim_oauth: [https://gluu.org/scim/fido.write]\n      parameters:\n      - name: attributes\n        in: query\n        description: A comma-separated list of attribute names to return in the response\n        schema:\n          type: string\n      - name: excludedAttributes\n        in: query\n        description: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list)\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Payload with the data to replace in the existing device identified\n          by the id param\n        content:\n          application/scim+json:\n            schema:\n              $ref: '#/components/schemas/FidoDeviceResource'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FidoDeviceResource'\n        required: true\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/FidoDeviceResource'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FidoDeviceResource'\n        400:\n          description: |\n            An invalid value was passed in the payload or there was an attempt to update an immutable attribute\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: Id passed unknown\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-codegen-request-body-name: fidoDeviceResource\n    delete:\n      tags:\n        - fido devices\n      operationId: delete-fido-device-by-id\n      description: Deletes a Fido resource\n      security:\n        - scim_oauth: [https://gluu.org/scim/fido.write]\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the resource to delete\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          description: Successful operation. Empty response\n          content: {}\n        404:\n          description: Id passed unknown\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /FidoDevices/.search:\n    post:\n      tags:\n        - fido devices\n      operationId: search-fido-device\n      description: Query Fido resources\n      security:\n        - scim_oauth: [https://gluu.org/scim/fido.read]\n      parameters:\n      - name: userId\n        in: query\n        description: Used to restrict the search to fido resources owned by a specific\n          user\n        schema:\n          type: string\n      requestBody:\n        description: Payload that represents the search criteria\n        content:\n          application/scim+json:\n            schema:\n              $ref: '#/components/schemas/SearchRequest'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchRequest'\n        required: true\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/FidoListResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FidoListResponse'\n        400:\n          description: |\n            Parameter count exceeds the maximum allowed value, the filter supplied was unparsable,\n            or invalid schema in search request\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: If userId param was supplied and the user is not known\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-codegen-request-body-name: searchRequest\n  /Fido2Devices:\n    get:\n      tags:\n        - fido2 devices\n      operationId: get-fido2-devices\n      description: Query Fido 2 resources\n      security:\n        - scim_oauth: [https://gluu.org/scim/fido2.read]\n      parameters:\n      - name: attributes\n        in: query\n        description: A comma-separated list of attribute names to return in the response\n        schema:\n          type: string\n      - name: excludedAttributes\n        in: query\n        description: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list)\n        schema:\n          type: string\n      - name: userId\n        in: query\n        description: Used to restrict the search to fido 2 resources owned by a specific\n          user\n        schema:\n          type: string\n      - name: filter\n        in: query\n        description: An expression specifying the search criteria. See section 3.4.2.2 of RFC 7644\n        example: userId sw \"123-abcde-qwerty\"\n        schema:\n          type: string\n      - name: startIndex\n        in: query\n        description: The 1-based index of the first query result\n        schema:\n          type: integer\n      - name: count\n        in: query\n        description: Specifies the desired maximum number of query results per page\n        schema:\n          type: integer\n      - name: sortBy\n        in: query\n        description: The attribute whose value will be used to order the returned responses\n        schema:\n          type: string\n      - name: sortOrder\n        in: query\n        description: Order in which the sortBy param is applied. Allowed values are \"ascending\" and \"descending\"\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Fido2ListResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fido2ListResponse'\n        400:\n          description: Parameter count exceeds the maximum allowed value or the filter\n            supplied was unparsable\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: If userId param was supplied and the user is not known\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /Fido2Devices/{id}:\n    get:\n      tags:\n        - fido2 devices\n      operationId: get-fido2-device-by-id\n      description: Retrieves a Fido 2 device by Id\n      security:\n        - scim_oauth: [https://gluu.org/scim/fido2.read]\n      parameters:\n      - name: attributes\n        in: query\n        description: A comma-separated list of attribute names to return in the response\n        schema:\n          type: string\n      - name: excludedAttributes\n        in: query\n        description: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list)\n        schema:\n          type: string\n      - name: userId\n        in: query\n        description: Identifier (inum) of the device owner. This param is not required when underlying database is LDAP\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Fido2DeviceResource'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fido2DeviceResource'\n        404:\n          description: Id passed unknown\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n        - fido2 devices\n      operationId: update-fido2-device-by-id\n      description: \"Updates a Fido 2 resource. Update works in a replacement fashion\u0026amp;#58;\\\n        \\ every\\nattribute value found in the payload sent will replace the one in\\\n        \\ the existing resource representation. Attributes \\nnot passed in the payload\\\n        \\ will be left intact.\\n\"\n      security:\n        - scim_oauth: [https://gluu.org/scim/fido2.write]\n      parameters:\n      - name: attributes\n        in: query\n        description: A comma-separated list of attribute names to return in the response\n        schema:\n          type: string\n      - name: excludedAttributes\n        in: query\n        description: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list)\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Payload with the data to replace in the existing device identified\n          by the id param\n        content:\n          application/scim+json:\n            schema:\n              $ref: '#/components/schemas/Fido2DeviceResource'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Fido2DeviceResource'\n        required: true\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Fido2DeviceResource'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fido2DeviceResource'\n        400:\n          description: |\n            An invalid value was passed in the payload or there was an attempt to update an immutable attribute\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: Id passed unknown\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-codegen-request-body-name: fidoDeviceResource\n    delete:\n      tags:\n        - fido2 devices\n      operationId: delete-fido2-device-by-id\n      description: Deletes a Fido 2 resource\n      security:\n        - scim_oauth: [https://gluu.org/scim/fido2.write]\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the resource to delete\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          description: Successful operation. Empty response\n          content: {}\n        404:\n          description: Id passed unknown\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /Fido2Devices/.search:\n    post:\n      tags:\n        - fido2 devices\n      operationId: search-fido2-device\n      description: Query Fido 2 resources\n      security:\n        - scim_oauth: [https://gluu.org/scim/fido2.read]\n      parameters:\n      - name: userId\n        in: query\n        description: Used to restrict the search to fido 2 resources owned by a specific\n          user\n        schema:\n          type: string\n      requestBody:\n        description: Payload that represents the search criteria\n        content:\n          application/scim+json:\n            schema:\n              $ref: '#/components/schemas/SearchRequest'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchRequest'\n        required: true\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Fido2ListResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fido2ListResponse'\n        400:\n          description: |\n            Parameter count exceeds the maximum allowed value, the filter supplied was unparsable,\n            or invalid schema in search request\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: If userId param was supplied and the user is not known\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-codegen-request-body-name: searchRequest\n  /Users:\n    get:\n      tags:\n      - user\n      operationId: get-users\n      description: Query User resources (see section 3.4.2 of RFC 7644)\n      security:\n        - scim_oauth: [https://gluu.org/scim/users.read]\n      parameters:\n      - name: attributes\n        in: query\n        description: A comma-separated list of attribute names to return in the response\n        schema:\n          type: string\n      - name: excludedAttributes\n        in: query\n        description: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list)\n        schema:\n          type: string\n      - name: filter\n        in: query\n        description: An expression specifying the search criteria. See section 3.4.2.2 of RFC 7644\n        example: userName eq \"jhon\" and meta.lastModified gt \"2011-05-13T04:42:34Z\"\n        schema:\n          type: string\n      - name: startIndex\n        in: query\n        description: The 1-based index of the first query result\n        schema:\n          type: integer\n      - name: count\n        in: query\n        description: Specifies the desired maximum number of query results per page\n        schema:\n          type: integer\n      - name: sortBy\n        in: query\n        description: The attribute whose value will be used to order the returned responses\n        schema:\n          type: string\n      - name: sortOrder\n        in: query\n        description: Order in which the sortBy param is applied. Allowed values are \"ascending\" and \"descending\"\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/UserListResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserListResponse'\n        400:\n          description: Parameter count exceeds the maximum allowed value or the filter\n            supplied was unparsable\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - user\n      operationId: create-user\n      description: Allows creating a User resource via POST (see section 3.3 of RFC\n        7644)\n      security:\n        - scim_oauth: [https://gluu.org/scim/users.write]\n      parameters:\n      - name: attributes\n        in: query\n        description: A comma-separated list of attribute names to return in the response\n        schema:\n          type: string\n      - name: excludedAttributes\n        in: query\n        description: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list)\n        schema:\n          type: string\n      requestBody:\n        description: Payload that represents the Group to create\n        content:\n          application/scim+json:\n            schema:\n              $ref: '#/components/schemas/UserResource'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserResource'\n        required: true\n      responses:\n        201:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/UserResource'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResource'\n        400:\n          description: An invalid value was passed in the payload\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        409:\n          description: There is a conflict with an already existing user. Uniqueness\n            is assumed over userName\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-codegen-request-body-name: user\n  /Users/{id}:\n    get:\n      tags:\n      - user\n      operationId: get-user-by-id\n      description: Retrieves a User resource by Id (see section 3.4.1 of RFC 7644)\n      security:\n        - scim_oauth: [https://gluu.org/scim/users.read]\n      parameters:\n      - name: attributes\n        in: query\n        description: A comma-separated list of attribute names to return in the response\n        schema:\n          type: string\n      - name: excludedAttributes\n        in: query\n        description: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list)\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/UserResource'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResource'\n        404:\n          description: Id passed unknown\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - user\n      operationId: update-user-by-id\n      description: \"Updates a User resource (see section 3.5.1 of RFC 7644). Update\\\n        \\ works in a replacement fashion\u0026amp;#58; every\\nattribute value found in the\\\n        \\ payload sent will replace the one in the existing resource representation.\\\n        \\ Attributes \\nnot passed in the payload will be left intact.\\n\"\n      security:\n        - scim_oauth: [https://gluu.org/scim/users.write]\n      parameters:\n      - name: attributes\n        in: query\n        description: A comma-separated list of attribute names to return in the response\n        schema:\n          type: string\n      - name: excludedAttributes\n        in: query\n        description: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list)\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Payload with the data to replace in the existing user identified\n          by the id param\n        content:\n          application/scim+json:\n            schema:\n              $ref: '#/components/schemas/UserResource'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserResource'\n        required: true\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/UserResource'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResource'\n        400:\n          description: |\n            An invalid value was passed in the payload or there was an attempt to update an immutable attribute\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: Id passed unknown\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        409:\n          description: There is a conflict with an already existing group. Uniqueness\n            is assumed over displayName\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-codegen-request-body-name: user\n    delete:\n      tags:\n      - user\n      operationId: delete-user-by-id\n      description: Deletes a user resource\n      security:\n        - scim_oauth: [https://gluu.org/scim/users.write]\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the resource to delete\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          description: Successful operation. Empty response\n          content: {}\n        404:\n          description: Id passed unknown\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      tags:\n      - user\n      operationId: patch-user-by-id\n      description: \"Updates one or more attributes of a User resource using a sequence\\\n        \\ of additions, removals, and \\nreplacements operations. See section 3.5.2\\\n        \\ of RFC 7644\\n\"\n      security:\n        - scim_oauth: [https://gluu.org/scim/users.write]\n      parameters:\n      - name: attributes\n        in: query\n        description: A comma-separated list of attribute names to return in the response\n        schema:\n          type: string\n      - name: excludedAttributes\n        in: query\n        description: When specified, the response will contain a default set of attributes minus those listed here (as a comma-separated list)\n        schema:\n          type: string\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Payload describing the patch operations to apply upon the resource\n          identified by param id\n        content:\n          application/scim+json:\n            schema:\n              $ref: '#/components/schemas/PatchRequest'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchRequest'\n        required: true\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/UserResource'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResource'\n        400:\n          description: |\n            One or more operations supplied in the request are specified incorrectly, there were attempts to\n            modify immutable attributes, or the resulting resource cannot pass intrinsic validations\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-codegen-request-body-name: request\n  /Users/.search:\n    post:\n      tags:\n      - user\n      operationId: search-user\n      description: Query User resources (see section 3.4.2 of RFC 7644)\n      security:\n        - scim_oauth: [https://gluu.org/scim/users.read]\n      requestBody:\n        description: Payload that represents the search criteria\n        content:\n          application/scim+json:\n            schema:\n              $ref: '#/components/schemas/SearchRequest'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchRequest'\n        required: true\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/UserListResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserListResponse'\n        400:\n          description: |\n            Parameter count exceeds the maximum allowed value, the filter supplied was unparsable,\n            or invalid schema in search request\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-codegen-request-body-name: searchRequest\n  /.search:\n    post:\n      description: |\n        Search (from system root) for one or more resource (see section 3.4.3 of RFC 7644)\n      tags:\n        - global search\n      operationId: search-resources\n      security:\n        - scim_oauth: [https://gluu.org/scim/all-resources.search]\n      requestBody:\n        description: Payload that represents the search criteria\n        content:\n          application/scim+json:\n            schema:\n              $ref: '#/components/schemas/SearchRequest'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchRequest'\n        required: true\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/GenericListResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericListResponse'\n        400:\n          description: |\n            Parameter count exceeds the maximum allowed value, the filter supplied was unparsable,\n            or invalid schema in search request\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-codegen-request-body-name: searchRequest\n  /Bulk:\n    post:\n      description: Send several resource operations in a single request (see section\n        3.7 of RFC 7644)\n      security:\n        - scim_oauth: [https://gluu.org/scim/bulk]\n      requestBody:\n        description: Payload describing the operations to perform\n        content:\n          application/scim+json:\n            schema:\n              $ref: '#/components/schemas/BulkRequest'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BulkRequest'\n        required: true\n      responses:\n        200:\n          description: |\n            Successful operation. Every individual operation will report its own output status.\n            Reponses are only included for failed operations.\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/BulkData'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BulkData'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-codegen-request-body-name: request\n  /ServiceProviderConfig:\n    get:\n      tags:\n      - discovery\n      operationId: get-service-provider-config\n      description: Describes the SCIM specification features available (see section\n        5 of RFC 7644)\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ServiceProviderConfigResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /ResourceTypes:\n    get:\n      tags:\n      - discovery\n      operationId: get-resource-types\n      description: |\n        This endpoint is used to discover the types of resources available (see section 4 of RFC 7644)\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ResourceTypeListResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /ResourceTypes/{resource}:\n    get:\n      tags:\n      - discovery\n      operationId: get-resource-type-by-id\n      description: \"Describes the endpoint, schemas and extensions supported by a\\\n        \\ specific kind of resource.\\nIt returns a specific portion of the ouput of\\\n        \\ the more general /Resources endpoint  \\n\"\n      parameters:\n      - name: resource\n        in: path\n        required: true\n        schema:\n          type: string\n          enum:\n          - User\n          - Group\n          - FidoDevice\n          - Fido2Device\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ResourceType'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /Schemas:\n    get:\n      tags:\n      - discovery\n      operationId: get-schemas\n      description: \"Endpoint used to retrieve information about schemas supported\\\n        \\ (see section \\n4 of RFC 7644)\\n\"\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/SchemaListResponse'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /Schemas/{uri}:\n    get:\n      tags:\n      - discovery\n      operationId: get-schema-by-uri\n      description: Retrieves information about a specific resource\n      parameters:\n      - name: uri\n        in: path\n        description: Schema URI of a particular resource type\n        required: true\n        schema:\n          type: string\n          enum:\n          - urn:ietf:params:scim:schemas:core:2.0:User\n          - urn:ietf:params:scim:schemas:extension:gluu:2.0:User\n          - urn:ietf:params:scim:schemas:core:2.0:Group\n          - urn:ietf:params:scim:schemas:core:2.0:Fido2Device\n          - urn:ietf:params:scim:schemas:core:2.0:FidoDevice\n      responses:\n        200:\n          description: Successful operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/SchemaResource'\n        500:\n          description: There was an unexpected failure executing the operation\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\ncomponents:\n  schemas:\n    AnyValue:\n      description: Can be any value - string, number, boolean, array or object\n    SearchRequest:\n      type: object\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n            example: urn:ietf:params:scim:api:messages:2.0:SearchRequest\n        attributes:\n          type: array\n          description: A list of attribute names to return in the response\n          items:\n            type: string\n        excludedAttributes:\n          type: array\n          description: When specified, the response will contain a default set of attributes minus those listed here\n          items:\n            type: string\n        filter:\n          type: string\n          description: An expression specifying the search criteria. See section 3.4.2.2 of RFC 7644\n          example: userName eq \"jhon\" and meta.lastModified gt \"2011-05-13T04:42:34Z\"\n        sortBy:\n          type: string\n          description: The attribute whose value will be used to order the returned responses\n        sortOrder:\n          type: string\n          description: Order in which the sortBy param is applied. Allowed values are \"ascending\" and \"descending\"\n        startIndex:\n          type: integer\n          description: The 1-based index of the first query result\n        count:\n          type: integer\n          description: Specifies the desired maximum number of query results per page\n      description: See section 3.4.3 of RFC 7644\n    ErrorResponse:\n      required:\n      - status\n      type: object\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n            example: urn:ietf:params:scim:api:messages:2.0:Error\n        status:\n          type: string\n          description: HTTP status code as string\n        scimType:\n          type: string\n          description: A detail error keyword. See table 9 of RFC 7644\n        detail:\n          type: string\n          description: A detailed human-readable message of the error\n      description: See section 3.12 of RFC 7644\n    ServiceProviderConfigResponse:\n      type: object\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n            example: urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig\n        meta:\n          type: object\n          properties:\n            resourceType:\n              type: string\n            location:\n              type: string\n        documentationUri:\n          type: string\n        patch:\n          type: object\n          properties:\n            supported:\n              type: boolean\n        bulk:\n          type: object\n          properties:\n            supported:\n              type: boolean\n            maxOperations:\n              type: integer\n            maxPayloadSize:\n              type: integer\n        filter:\n          type: object\n          properties:\n            supported:\n              type: boolean\n            maxResults:\n              type: integer\n        changePassword:\n          type: object\n          properties:\n            supported:\n              type: boolean\n        sort:\n          type: object\n          properties:\n            supported:\n              type: boolean\n        etag:\n          type: object\n          properties:\n            supported:\n              type: boolean\n        authenticationSchemes:\n          type: object\n          properties:\n            type:\n              type: string\n              example: oauth2\n            name:\n              type: string\n            description:\n              type: string\n            specUri:\n              type: string\n            documentationUri:\n              type: string\n            primary:\n              type: boolean\n      description: See section 5 of RFC 7643\n    ResourceType:\n      type: object\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n            example: urn:ietf:params:scim:schemas:core:2.0:ResourceType\n        id:\n          type: string\n        meta:\n          type: object\n          properties:\n            resourceType:\n              type: string\n            location:\n              type: string\n        name:\n          type: string\n        description:\n          type: string\n        endpoint:\n          type: string\n        schema:\n          type: string\n        schemaExtensions:\n          type: object\n          properties:\n            schema:\n              type: string\n            required:\n              type: boolean\n      description: See section 6 of RFC 7643\n    SchemaAttribute:\n      type: object\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n        subAttributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/SchemaAttribute'\n        multiValued:\n          type: boolean\n        description:\n          type: string\n        required:\n          type: string\n        canonicalValues:\n          type: array\n          items:\n            type: string\n        caseExact:\n          type: boolean\n        mutability:\n          type: string\n        returned:\n          type: string\n        uniqueness:\n          type: string\n        referenceTypes:\n          type: array\n          items:\n            type: string\n      description: A recursive definition. Note how property subAttributes reuses\n        SchemaAttribute for its definition\n    SchemaResource:\n      type: object\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n            example: urn:ietf:params:scim:schemas:core:2.0:Schema\n        id:\n          type: string\n        meta:\n          type: object\n          properties:\n            resourceType:\n              type: string\n            location:\n              type: string\n        name:\n          type: string\n        description:\n          type: string\n        attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/SchemaAttribute'\n    BasicListResponse:\n      type: object\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n            example: urn:ietf:params:scim:api:messages:2.0:ListResponse\n        totalResults:\n          type: integer\n          description: Total number of results returned by the search. The value may be larger than the number of resources returned due to pagination\n        startIndex:\n          type: integer\n          description: The 1-based index of the first result in the current set of search results\n        itemsPerPage:\n          type: integer\n          description: The number of resources returned in a results page\n    GroupListResponse:\n      description: Results for groups search. See section 3.4.2.4 of RFC 7644\n      allOf:\n      - $ref: '#/components/schemas/BasicListResponse'\n      - type: object\n      - type: object\n        properties:\n          Resources:\n            type: array\n            items:\n              $ref: '#/components/schemas/GroupResource'\n    FidoListResponse:\n      description: Results for fido devices search\n      allOf:\n      - $ref: '#/components/schemas/BasicListResponse'\n      - type: object\n      - type: object\n        properties:\n          Resources:\n            type: array\n            items:\n              $ref: '#/components/schemas/FidoDeviceResource'\n    Fido2ListResponse:\n      description: Results for fido 2 devices search\n      allOf:\n      - $ref: '#/components/schemas/BasicListResponse'\n      - type: object\n      - type: object\n        properties:\n          Resources:\n            type: array\n            items:\n              $ref: '#/components/schemas/Fido2DeviceResource'\n    UserListResponse:\n      description: Results for users search. See section 3.4.2.4 of RFC 7644\n      allOf:\n      - $ref: '#/components/schemas/BasicListResponse'\n      - type: object\n      - type: object\n        properties:\n          Resources:\n            type: array\n            items:\n              $ref: '#/components/schemas/UserResource'\n    ResourceTypeListResponse:\n      allOf:\n      - $ref: '#/components/schemas/BasicListResponse'\n      - type: object\n      - type: object\n        properties:\n          Resources:\n            type: array\n            items:\n              $ref: '#/components/schemas/ResourceType'\n    SchemaListResponse:\n      allOf:\n      - $ref: '#/components/schemas/BasicListResponse'\n      - type: object\n      - type: object\n        properties:\n          Resources:\n            type: array\n            items:\n              $ref: '#/components/schemas/SchemaResource'\n    PatchOperation:\n      required:\n      - op\n      type: object\n      properties:\n        op:\n          type: string\n          description: The kind of operation to perform\n          enum:\n          - add\n          - remove\n          - replace\n        path:\n          type: string\n          description: Required when op is remove, optional otherwise\n        value:\n          $ref: '#/components/schemas/AnyValue'\n          description: Only required when op is add or replace\n      description: See section 3.5.2 of RFC 7644\n    PatchRequest:\n      description: Stores one or more patch operations\n      required:\n      - Operations\n      type: object\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n            example: urn:ietf:params:scim:api:messages:2.0:PatchOp\n        Operations:\n          type: array\n          items:\n            $ref: '#/components/schemas/PatchOperation'\n    BulkOperation:\n      type: object\n      properties:\n        method:\n          type: string\n          example: PUT\n        bulkId:\n          type: string\n          description: |\n            Used to bind the id generated for a created resource (via POST) to a named variable for later reuse\n        path:\n          type: string\n          description: Path of the endpoint the operation uses relative to the server root, eg. /Users\n        data:\n          type: object\n          properties: {}\n          description: Payload associated to this operation\n        location:\n          type: string\n          description: Used in responses of POST operations\n        response:\n          type: object\n          properties: {}\n        status:\n          type: string\n      description: See section 3.7 of RFC 7644\n    BulkData:\n      type: object\n      description: Used to encapsulate one or more succesive SCIM operations in a single request\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n        Operations:\n          type: array\n          items:\n            $ref: '#/components/schemas/BulkOperation'\n    BulkRequest:\n      allOf:\n      - $ref: '#/components/schemas/BulkData'\n      - type: object\n      - type: object\n        properties:\n          failOnErrors:\n            type: integer\n            description: The number of errors that can be accepted before the Bulk request is terminated and a response is returned\n    Meta:\n      type: object\n      properties:\n        resourceType:\n          type: string\n        created:\n          type: string\n        lastModified:\n          type: string\n        location:\n          type: string\n      description: Descriptive information about a resource. See section 3.1 of RFC 7643\n    Member:\n      type: object\n      description: Represents a member of a Group resource\n      properties:\n        $ref:\n          type: string\n          description: URI of the SCIM resource\n        type:\n          type: string\n          description: The type of member. Only \"User\" is allowed\n        display:\n          type: string\n          description: A human readable name, primarily used for display purposes\n        value:\n          type: string\n          description: Identifier (ID) of the resource\n    Name:\n      type: object\n      properties:\n        familyName:\n          type: string\n        givenName:\n          type: string\n        middleName:\n          type: string\n        honorificPrefix:\n          type: string\n          description: A \"title\" like \"Ms.\", \"Mrs.\"\n        honorificSuffix:\n          type: string\n          description: Name suffix, like \"Junior\", \"The great\", \"III\"\n        formatted:\n          type: string\n          description: Full name, including all middle names, titles, and suffixes as appropriate\n      description: See section 4.1.1 of RFC 7643\n    Email:\n      type: object\n      properties:\n        value:\n          type: string\n          example: gossow@nsfw.com\n        display:\n          type: string\n        type:\n          type: string\n          example: work\n        primary:\n          type: boolean\n          description: Denotes if this is the preferred e-mail among others, if any\n      description: See section 4.1.2 of RFC 7643\n    PhoneNumber:\n      type: object\n      properties:\n        value:\n          type: string\n          example: +1-555-555-8377\n        display:\n          type: string\n        type:\n          type: string\n          example: fax\n        primary:\n          type: boolean\n          description: Denotes if this is the preferred phone number among others, if any \n      description: See section 4.1.2 of RFC 7643\n    InstantMessagingAddress:\n      type: object\n      properties:\n        value:\n          type: string\n        display:\n          type: string\n        type:\n          type: string\n          example: gtalk\n        primary:\n          type: boolean\n          description: Denotes if this is the preferred messaging addressed among others, if any\n      description: See section 4.1.2 of RFC 7643\n    Photo:\n      type: object\n      properties:\n        value:\n          type: string\n          example: https://pics.nsfw.com/gossow.png\n        display:\n          type: string\n        type:\n          type: string\n          example: thumbnail\n        primary:\n          type: boolean\n          description: Denotes if this is the preferred photo among others, if any\n      description: Points to a resource location representing the user's image. See section 4.1.2 of RFC 7643\n    Address:\n      type: object\n      properties:\n        formatted:\n          type: string\n          description: Full mailing address, formatted for display or use with a mailing label\n        streetAddress:\n          type: string\n          example: 56 Acacia Avenue\n        locality:\n          type: string\n          description: City or locality of the address\n        region:\n          type: string\n          description: State or region of the address\n        postalCode:\n          type: string\n          description: Zip code\n        country:\n          type: string\n          description: Country expressed in ISO 3166-1 \"alpha-2\" code format\n          example: UK\n        type:\n          type: string\n          example: home\n        primary:\n          type: boolean\n          description: Denotes if this is the preferred address among others, if any\n      description: Physical mailing address for this user. See section 4.1.2 of RFC 7643\n    Group:\n      type: object\n      properties:\n        value:\n          type: string\n          description: Group identifier\n          example: 180ee84f0671b1\n        $ref:\n          type: string\n          description: URI associated to the group\n          example: https://nsfw.com/scim/restv1/v2/Groups/180ee84f0671b1\n        display:\n          type: string\n          example: Cult managers\n        type:\n          type: string\n          description: Describes how the group membership was derived\n          example: direct\n      description: See section 4.1.2 of RFC 7643\n    Entitlement:\n      type: object\n      properties:\n        value:\n          type: string\n          example: Stakeholder\n        display:\n          type: string\n        type:\n          type: string\n        primary:\n          type: boolean\n          description: Denotes if this is the preferred entitlement among others, if any\n      description: Entitlements represent things a user has, like rights. See section 4.1.2 of RFC 7643\n    Role:\n      type: object\n      properties:\n        value:\n          type: string\n          example: Project manager\n        display:\n          type: string\n        type:\n          type: string\n        primary:\n          type: boolean\n          description: Denotes if this is the preferred role among others, if any\n      description: See section 4.1.2 of RFC 7643\n    X509Certificate:\n      type: object\n      properties:\n        value:\n          type: string\n          description: DER-encoded X.509 certificate\n        display:\n          type: string\n        type:\n          type: string\n        primary:\n          type: boolean\n          description: Denotes if this is the preferred certificate among others, if any\n      description: A certificate associated with the user. See section 4.1.2 of RFC 7643\n    BaseResource:\n      type: object\n      properties:\n        schemas:\n          type: array\n          description: URIs that are used to indicate the namespaces of the SCIM schemas that define the attributes present in the current structure\n          items:\n            type: string\n        id:\n          type: string\n          description: A unique identifier for a SCIM resource. See section 3.1 of RFC 7643\n        meta:\n          $ref: '#/components/schemas/Meta'\n    GroupResource:\n      description: Represents a group resource. See section 4.2 of RFC 7643\n      allOf:\n      - $ref: '#/components/schemas/BaseResource'\n      - type: object\n      - type: object\n        properties:\n          displayName:\n            type: string\n            description: Group name suitable for display to end-users\n          members:\n            type: array\n            items:\n              $ref: '#/components/schemas/Member'\n    FidoDeviceResource:\n      description: Represents a device enrollment like an U2F security key or a Super\n        Gluu device\n      allOf:\n      - $ref: '#/components/schemas/BaseResource'\n      - type: object\n      - type: object\n        properties:\n          userId:\n            type: string\n            description: Identifies the owner of the enrollment\n          creationDate:\n            type: string\n            description: Date of enrollment in ISO format\n            format: date-time\n          application:\n            type: string\n            description: Associated U2F application ID\n          counter:\n            type: integer\n            description: Value used in the Fido U2F endpoints\n          deviceData:\n            type: string\n            description: A Json representation of low-level attributes of this enrollment\n          deviceHashCode:\n            type: integer\n          deviceKeyHandle:\n            type: string\n          deviceRegistrationConf:\n            type: string\n          lastAccessTime:\n            type: string\n            description: When this device was last used (eg. in order to log into\n              an application)\n            format: date-time\n          status:\n            type: string\n            enum:\n            - active\n            - compromised\n          displayName:\n            type: string\n            description: Device name suitable for display to end-users\n          description:\n            type: string\n    Fido2DeviceResource:\n      description: Represents a Fido 2 device enrollment\n      allOf:\n      - $ref: '#/components/schemas/BaseResource'\n      - type: object\n      - type: object\n        properties:\n          userId:\n            type: string\n            description: Identifies the owner of the enrollment\n          creationDate:\n            type: string\n            description: Date of enrollment in ISO format\n            format: date-time\n          counter:\n            type: integer\n            description: Value used in the Fido 2 endpoints\n          status:\n            type: string\n            enum:\n            - registered\n            - pending\n          displayName:\n            type: string\n            description: Device name suitable for display to end-users\n    UserResource:\n      description: Represents a user resource. See section 4.1 of RFC 7643\n      allOf:\n      - $ref: '#/components/schemas/BaseResource'\n      - type: object\n      - type: object\n        properties:\n          externalId:\n            type: string\n            description: Identifier of the resource useful from the perspective of the provisioning client. See section 3.1 of RFC 7643\n          userName:\n            type: string\n            description: Identifier for the user, typically used by the user to directly authenticate (id and externalId are opaque identifiers generally not known by users)\n          name:\n            $ref: '#/components/schemas/Name'\n          displayName:\n            type: string\n            description: Name of the user suitable for display to end-users\n          nickName:\n            type: string\n            description: Casual way to address the user in real life\n          profileUrl:\n            type: string\n            description: URI pointing to a location representing the User's online profile\n          title:\n            type: string\n            example: Vice President\n          userType:\n            type: string\n            description: Used to identify the relationship between the organization and the user\n            example: Contractor\n          preferredLanguage:\n            type: string\n            description: Preferred language as used in the Accept-Language HTTP header\n            example: en\n          locale:\n            type: string\n            description: Used for purposes of localizing items such as currency and dates\n            example: en-US\n          timezone:\n            type: string\n            example: America/Los_Angeles\n          active:\n            type: boolean\n          password:\n            type: string\n          emails:\n            type: array\n            items:\n              $ref: '#/components/schemas/Email'\n          phoneNumbers:\n            type: array\n            items:\n              $ref: '#/components/schemas/PhoneNumber'\n          ims:\n            type: array\n            items:\n              $ref: '#/components/schemas/InstantMessagingAddress'\n          photos:\n            type: array\n            items:\n              $ref: '#/components/schemas/Photo'\n          addresses:\n            type: array\n            items:\n              $ref: '#/components/schemas/Address'\n          groups:\n            type: array\n            items:\n              $ref: '#/components/schemas/Group'\n          entitlements:\n            type: array\n            items:\n              $ref: '#/components/schemas/Entitlement'\n          roles:\n            type: array\n            items:\n              $ref: '#/components/schemas/Role'\n          x509Certificates:\n            type: array\n            items:\n              $ref: '#/components/schemas/X509Certificate'\n          urn:ietf:params:scim:schemas:extension:gluu:2.0:User:\n            type: object\n            properties: {}\n            description: Extended attributes\n    GenericResource:\n      oneOf:\n        - $ref: '#/components/schemas/GroupResource'\n        - $ref: '#/components/schemas/UserResource'\n        - $ref: '#/components/schemas/FidoDeviceResource'\n        - $ref: '#/components/schemas/Fido2DeviceResource'\n    GenericListResponse:\n      allOf:\n      - $ref: '#/components/schemas/BasicListResponse'\n      - type: object\n      - type: object\n        properties:\n          Resources:\n            type: array\n            items:\n              $ref: '#/components/schemas/GenericResource'\n  securitySchemes:\n    scim_oauth:\n      type: oauth2\n      description: |\n        Endpoints protected by a bearer token passed in the Authorization header. \n        It is assumed gluu-scim is configured to operate in oauth protection mode. Other protection\n        modes may be available, please check SCIM docs\n      flows:\n        clientCredentials:\n          tokenUrl: 'https://your.gluu.server.com/oxauth/restv1/token'\n          scopes:\n            https://gluu.org/scim/users.read: Query user resources\n            https://gluu.org/scim/users.write: Modify user resources\n            https://gluu.org/scim/groups.read: Query group resources\n            https://gluu.org/scim/groups.write: Modify group resources\n            https://gluu.org/scim/fido.read: Query fido resources\n            https://gluu.org/scim/fido.write: Modify fido resources\n            https://gluu.org/scim/fido2.read: Query fido 2 resources\n            https://gluu.org/scim/fido2.write: Modify fido 2 resources\n            https://gluu.org/scim/all-resources.search: Access the root .search endpoint \n            https://gluu.org/scim/bulk: Send requests to the bulk endpoint\n",
			"canonicalURL": "/github.com/GluuFederation/scim@09064e259e02273847f7d206c962c3743a707819/-/blob/scim-server/src/main/resources/gluu-scim-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/GluuFederation/scim/blob/09064e259e02273847f7d206c962c3743a707819/scim-server/src/main/resources/gluu-scim-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/Fido2Devices/.search\": post: security: security \"scim_oauth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security",
		"unsupported content types"
	]
}