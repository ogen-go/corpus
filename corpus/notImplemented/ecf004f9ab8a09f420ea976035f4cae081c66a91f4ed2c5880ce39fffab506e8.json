{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/spec-first/connexion"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "tests/fixtures/problem/openapi.yaml",
			"byteSize": 2672,
			"content": "openapi: 3.0.0\ninfo:\n  title: '{{title}}'\n  version: '1.0'\npaths:\n  '/greeting/{name}':\n    post:\n      summary: Generate greeting\n      description: Generates a greeting message.\n      operationId: fakeapi.hello.post_greeting\n      responses:\n        '200':\n          description: greeting response\n          content:\n            '*/*':\n              schema:\n                type: object\n      parameters:\n        - name: name\n          in: path\n          description: Name of the person to greet.\n          required: true\n          schema:\n            type: string\n  /except:\n    get:\n      summary: Fails badly\n      description: Fails badly\n      operationId: fakeapi.hello.internal_error\n      responses:\n        '200':\n          description: goodbye response\n          content:\n            text/plain:\n              schema:\n                type: string\n  /problem:\n    get:\n      summary: Fails\n      description: Fails\n      operationId: fakeapi.hello.with_problem\n      responses:\n        '200':\n          description: goodbye response\n          content:\n            application/json:\n              schema:\n                type: string\n  /other_problem:\n    get:\n      summary: Fails\n      description: Fails\n      operationId: fakeapi.hello.with_problem_txt\n      responses:\n        '200':\n          description: goodbye response\n          content:\n            text/plain:\n              schema:\n                type: string\n  /json_response_with_undefined_value_to_serialize:\n    get:\n      description: Will fail\n      operationId: fakeapi.hello.get_invalid_response\n      responses:\n        '200':\n          description: Never happens\n  /customized_problem_response:\n    get:\n      description: Custom problem response\n      operationId: fakeapi.hello.get_custom_problem_response\n      responses:\n        '200':\n          description: Custom problem response\n  /problem_exception_with_extra_args:\n    get:\n      description: Using problem as exception\n      operationId: fakeapi.hello.throw_problem_exception\n      responses:\n        '200':\n          description: Problem exception\n  /post_wrong_content_type:\n    post:\n      description: Unsupported media type\n      operationId: fakeapi.hello.post_wrong_content_type\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        200:\n          description: OK\nservers:\n  - url: /v1.0\ncomponents:\n  securitySchemes:\n    oauth:\n      type: oauth2\n      x-tokenInfoUrl: 'https://oauth.example/token_info'\n      flows:\n        password:\n          tokenUrl: 'https://oauth.example/token'\n          scopes:\n            myscope: can do stuff\n",
			"canonicalURL": "/github.com/spec-first/connexion@9be473d5eabebde3df8d50e69f46513a66bba497/-/blob/tests/fixtures/problem/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/spec-first/connexion/blob/9be473d5eabebde3df8d50e69f46513a66bba497/tests/fixtures/problem/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/except\": get: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}