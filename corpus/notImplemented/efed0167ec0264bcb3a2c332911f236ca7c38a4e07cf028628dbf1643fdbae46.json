{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/codingsoo/REST_Go"
		},
		"file": {
			"name": "proxyprint_openapi.yaml",
			"size": 0,
			"path": "doc/proxyprint_openapi.yaml",
			"byteSize": 104643,
			"content": "openapi: 3.0.1\ninfo:\n  title: Api Documentation\n  description: Api Documentation\n  termsOfService: urn:tos\n  contact: {}\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0\n  version: \"1.0\"\nservers:\n- url: http://localhost:50105/\ntags:\n- name: register-request-controller\n  description: Register Request Controller\n- name: notifications-controller\n  description: Notifications Controller\n- name: admin-controller\n  description: Admin Controller\n- name: endpoint-mvc-adapter\n  description: Endpoint Mvc Adapter\n- name: print-request-controller\n  description: Print Request Controller\n- name: printing-schema-controller\n  description: Printing Schema Controller\n- name: consumer-controller\n  description: Consumer Controller\n- name: manager-controller\n  description: Manager Controller\n- name: metrics-mvc-endpoint\n  description: Metrics Mvc Endpoint\n- name: print-shop-controller\n  description: Print Shop Controller\n- name: default-controller\n  description: Default Controller\n- name: heapdump-mvc-endpoint\n  description: Heapdump Mvc Endpoint\n- name: employee-controller\n  description: Employee Controller\n- name: basic-error-controller\n  description: Basic Error Controller\n- name: pay-pal-controller\n  description: Pay Pal Controller\n- name: review-controller\n  description: Review Controller\n- name: environment-mvc-endpoint\n  description: Environment Mvc Endpoint\n- name: health-mvc-endpoint\n  description: Health Mvc Endpoint\n- name: price-table-controller\n  description: Price Table Controller\npaths:\n  /:\n    get:\n      tags:\n      - default-controller\n      summary: index\n      operationId: indexUsingGET\n      requestBody:\n        description: map\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties:\n                type: object\n                properties: {}\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: map\n  /*:\n    options:\n      tags:\n      - default-controller\n      summary: handleOptions\n      operationId: handleOptionsUsingOPTIONS\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ResponseEntity'\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n  /admin/printshops:\n    get:\n      tags:\n      - admin-controller\n      summary: Returns the list of all printshops.\n      description: This method allows the admin entity to access all printshop's information\n        registered in the platform.\n      operationId: getPrinShopsListUsingGET\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /admin/register:\n    post:\n      tags:\n      - admin-controller\n      summary: Returns success/insuccess.\n      description: This method allows the register of an admin entity.\n      operationId: newAdminUsingPOST\n      requestBody:\n        description: admin\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Admin'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Admin'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: admin\n  /admin/seed:\n    post:\n      tags:\n      - admin-controller\n      summary: Returns nothing.\n      description: This method allows developers to fill in the database with fake\n        but consistent data.\n      operationId: seedUsingPOST\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /admin/useed:\n    post:\n      tags:\n      - admin-controller\n      summary: Returns nothing.\n      description: This method allows developers to fill in the database with fake\n        consumer accounts.\n      operationId: useedUsingPOST\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /api/secured:\n    get:\n      tags:\n      - default-controller\n      summary: secured\n      operationId: securedUsingGET\n      requestBody:\n        description: map\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties:\n                type: object\n                properties: {}\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: map\n  /autoconfig:\n    get:\n      tags:\n      - endpoint-mvc-adapter\n      summary: invoke\n      operationId: invokeUsingGET\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /autoconfig.json:\n    get:\n      tags:\n      - endpoint-mvc-adapter\n      summary: invoke\n      operationId: invokeUsingGET_1\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /beans:\n    get:\n      tags:\n      - endpoint-mvc-adapter\n      summary: invoke\n      operationId: invokeUsingGET_2\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /beans.json:\n    get:\n      tags:\n      - endpoint-mvc-adapter\n      summary: invoke\n      operationId: invokeUsingGET_3\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /configprops:\n    get:\n      tags:\n      - endpoint-mvc-adapter\n      summary: invoke\n      operationId: invokeUsingGET_4\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /configprops.json:\n    get:\n      tags:\n      - endpoint-mvc-adapter\n      summary: invoke\n      operationId: invokeUsingGET_5\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /consumer/balance:\n    get:\n      tags:\n      - consumer-controller\n      summary: Returns a certain consumer's balance.\n      description: Returns the consumer's balance, normaly used for update purposes.\n      operationId: getConsumerBalanceUsingGET\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: principal\n  /consumer/budget:\n    post:\n      tags:\n      - print-request-controller\n      summary: Returns a set of budgets\n      description: This method calculates budgets for a given and already specified\n        print request. The budgets are calculated for specific printshops also passed\n        along as parameters.\n      operationId: calcBudgetForPrintRequestUsingPOST\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - requestJSON\n              properties:\n                requestJSON:\n                  type: string\n                  description: requestJSON\n                  example: abc\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /consumer/info:\n    get:\n      tags:\n      - consumer-controller\n      summary: Returns all the user information\n      description: This method allows consumers to get their personal information.\n      operationId: getConsumerInfoUsingGET\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: principal\n  /consumer/info/update:\n    put:\n      tags:\n      - consumer-controller\n      summary: Updates the consumer information\n      description: This method allows consumers to update their personal information.\n      operationId: updateConsumerInfoUsingPUT\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: principal\n  /consumer/notifications:\n    get:\n      tags:\n      - notifications-controller\n      summary: Returns list of notifications.\n      description: This method retrieves to consumer his list of notifications.\n      operationId: getConsumerNotificationsUsingGET\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Notification'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: principal\n  /consumer/printrequest/{printRequestID}/submit:\n    post:\n      tags:\n      - print-request-controller\n      summary: Returns success/insuccess\n      description: This method allow clients to POST a print request and associate\n        it to a given printshop with a given budget, the payment may or not occur\n        according to the payment method.\n      operationId: finishAndSubmitPrintRequestUsingPOST\n      parameters:\n      - name: printRequestID\n        in: path\n        description: printRequestID\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: principal\n  /consumer/register:\n    post:\n      tags:\n      - consumer-controller\n      summary: Returns success/insuccess\n      description: This method allows consumer registration.\n      operationId: addUserUsingPOST\n      requestBody:\n        description: request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebRequest'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: request\n  /consumer/requests:\n    get:\n      tags:\n      - consumer-controller\n      summary: Returns pending requests.\n      description: This method retrieves to the consumer his pending requests.\n      operationId: getRequestsUsingGET\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: principal\n  /consumer/requests/cancel/{id}:\n    delete:\n      tags:\n      - consumer-controller\n      summary: Returns success/insuccess.\n      description: This method allows consumers to cancel a pending request.\n      operationId: cancelRequestsUsingDELETE\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      x-codegen-request-body-name: principal\n  /consumer/satisfied:\n    get:\n      tags:\n      - consumer-controller\n      summary: Returns satisfied requests.\n      description: This method retrieves the history of satisfied requests from a\n        consumer.\n      operationId: getPrintShopSatisfiedRequestsUsingGET\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: principal\n  /consumer/subscribe:\n    get:\n      tags:\n      - notifications-controller\n      summary: Returns success/insuccess.\n      description: This method allows a consumer to subscribe the SSE.\n      operationId: subscribeUsingGET\n      requestBody:\n        description: request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebRequest'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            text/event-stream:\n              schema:\n                $ref: '#/components/schemas/SseEmitter'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: request\n    put:\n      tags:\n      - notifications-controller\n      summary: Returns success/insuccess.\n      description: This method allows a consumer to subscribe the SSE.\n      operationId: subscribeUsingPUT\n      requestBody:\n        description: request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebRequest'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            text/event-stream:\n              schema:\n                $ref: '#/components/schemas/SseEmitter'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: request\n    post:\n      tags:\n      - notifications-controller\n      summary: Returns success/insuccess.\n      description: This method allows a consumer to subscribe the SSE.\n      operationId: subscribeUsingPOST\n      requestBody:\n        description: request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebRequest'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            text/event-stream:\n              schema:\n                $ref: '#/components/schemas/SseEmitter'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: request\n    delete:\n      tags:\n      - notifications-controller\n      summary: Returns success/insuccess.\n      description: This method allows a consumer to subscribe the SSE.\n      operationId: subscribeUsingDELETE\n      requestBody:\n        description: request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebRequest'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            text/event-stream:\n              schema:\n                $ref: '#/components/schemas/SseEmitter'\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      x-codegen-request-body-name: request\n    options:\n      tags:\n      - notifications-controller\n      summary: Returns success/insuccess.\n      description: This method allows a consumer to subscribe the SSE.\n      operationId: subscribeUsingOPTIONS\n      requestBody:\n        description: request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebRequest'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            text/event-stream:\n              schema:\n                $ref: '#/components/schemas/SseEmitter'\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      x-codegen-request-body-name: request\n    head:\n      tags:\n      - notifications-controller\n      summary: Returns success/insuccess.\n      description: This method allows a consumer to subscribe the SSE.\n      operationId: subscribeUsingHEAD\n      requestBody:\n        description: request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebRequest'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            text/event-stream:\n              schema:\n                $ref: '#/components/schemas/SseEmitter'\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      x-codegen-request-body-name: request\n    patch:\n      tags:\n      - notifications-controller\n      summary: Returns success/insuccess.\n      description: This method allows a consumer to subscribe the SSE.\n      operationId: subscribeUsingPATCH\n      requestBody:\n        description: request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebRequest'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            text/event-stream:\n              schema:\n                $ref: '#/components/schemas/SseEmitter'\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      x-codegen-request-body-name: request\n  /consumer/{consumerID}/printingschemas:\n    get:\n      tags:\n      - printing-schema-controller\n      summary: Returns a set of the printing schemas.\n      description: This method allows consumers to get his PrintingSchemas.\n      operationId: getConsumerPrintingSchemasUsingGET\n      parameters:\n      - name: consumerID\n        in: path\n        description: consumerID\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n    post:\n      tags:\n      - printing-schema-controller\n      summary: Returns success/insuccess.\n      description: This method allows consumers to add a new printing schema to his\n        printing schemas collection.\n      operationId: addNewConsumerPrintingSchemaUsingPOST\n      parameters:\n      - name: consumerID\n        in: path\n        description: consumerID\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: ps\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PrintingSchema'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: ps\n  /consumer/{consumerID}/printingschemas/{printingSchemaID}:\n    put:\n      tags:\n      - printing-schema-controller\n      summary: Returns success/insuccess.\n      description: This method allows consumers to edit a printing schema from his\n        printing schemas collection.\n      operationId: editConsumerPrintingSchemaUsingPUT\n      parameters:\n      - name: consumerID\n        in: path\n        description: consumerID\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      - name: printingSchemaID\n        in: path\n        description: printingSchemaID\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: pschema\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PrintingSchema'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: pschema\n    delete:\n      tags:\n      - printing-schema-controller\n      summary: Returns success/insuccess.\n      description: This method allows consumers to delete a printing schema from his\n        printing schemas collection.\n      operationId: deleteConsumerPrintingSchemaUsingDELETE\n      parameters:\n      - name: consumerID\n        in: path\n        description: consumerID\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      - name: printingSchemaID\n        in: path\n        description: printingSchemaID\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n  /consumer/{id}/notify:\n    post:\n      tags:\n      - notifications-controller\n      summary: Returns nothing\n      description: This method sends a notification to a consumer.\n      operationId: greetingUsingPOST\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebRequest'\n        required: false\n      responses:\n        200:\n          description: OK\n          content: {}\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: request\n  /consumer/{username}/notifications:\n    put:\n      tags:\n      - consumer-controller\n      summary: Returns success/insuccess.\n      description: This method allows consumers to mark as read all notifications.\n      operationId: readAllNotificationsUsingPUT\n      parameters:\n      - name: username\n        in: path\n        description: username\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n    delete:\n      tags:\n      - consumer-controller\n      summary: Returns success/insuccess.\n      description: This method allows consumers to remove all notifications.\n      operationId: deleteAllNotificationsUsingDELETE\n      parameters:\n      - name: username\n        in: path\n        description: username\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n  /documents/{id}:\n    get:\n      tags:\n      - employee-controller\n      summary: Returns a document\n      description: This method allows employees to get a document by a given id.\n      operationId: getEmployeesUsingGET\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/FileSystemResource'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: principal\n  /dump:\n    get:\n      tags:\n      - endpoint-mvc-adapter\n      summary: invoke\n      operationId: invokeUsingGET_6\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /dump.json:\n    get:\n      tags:\n      - endpoint-mvc-adapter\n      summary: invoke\n      operationId: invokeUsingGET_7\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /env:\n    get:\n      tags:\n      - environment-mvc-endpoint\n      summary: invoke\n      operationId: invokeUsingGET_14\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /env.json:\n    get:\n      tags:\n      - environment-mvc-endpoint\n      summary: invoke\n      operationId: invokeUsingGET_15\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /env/{name}:\n    get:\n      tags:\n      - environment-mvc-endpoint\n      summary: value\n      operationId: valueUsingGET\n      parameters:\n      - name: name\n        in: path\n        description: name\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /error:\n    get:\n      tags:\n      - basic-error-controller\n      summary: errorHtml\n      operationId: errorHtmlUsingGET\n      responses:\n        200:\n          description: OK\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/ModelAndView'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n    put:\n      tags:\n      - basic-error-controller\n      summary: errorHtml\n      operationId: errorHtmlUsingPUT\n      responses:\n        200:\n          description: OK\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/ModelAndView'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n    post:\n      tags:\n      - basic-error-controller\n      summary: errorHtml\n      operationId: errorHtmlUsingPOST\n      responses:\n        200:\n          description: OK\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/ModelAndView'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n    delete:\n      tags:\n      - basic-error-controller\n      summary: errorHtml\n      operationId: errorHtmlUsingDELETE\n      responses:\n        200:\n          description: OK\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/ModelAndView'\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n    options:\n      tags:\n      - basic-error-controller\n      summary: errorHtml\n      operationId: errorHtmlUsingOPTIONS\n      responses:\n        200:\n          description: OK\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/ModelAndView'\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n    head:\n      tags:\n      - basic-error-controller\n      summary: errorHtml\n      operationId: errorHtmlUsingHEAD\n      responses:\n        200:\n          description: OK\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/ModelAndView'\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n    patch:\n      tags:\n      - basic-error-controller\n      summary: errorHtml\n      operationId: errorHtmlUsingPATCH\n      responses:\n        200:\n          description: OK\n          content:\n            text/html:\n              schema:\n                $ref: '#/components/schemas/ModelAndView'\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n  /health:\n    get:\n      tags:\n      - health-mvc-endpoint\n      summary: invoke\n      operationId: invokeUsingGET_16\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: principal\n    put:\n      tags:\n      - health-mvc-endpoint\n      summary: invoke\n      operationId: invokeUsingPUT\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: principal\n    post:\n      tags:\n      - health-mvc-endpoint\n      summary: invoke\n      operationId: invokeUsingPOST\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: principal\n    delete:\n      tags:\n      - health-mvc-endpoint\n      summary: invoke\n      operationId: invokeUsingDELETE\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      x-codegen-request-body-name: principal\n    options:\n      tags:\n      - health-mvc-endpoint\n      summary: invoke\n      operationId: invokeUsingOPTIONS\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      x-codegen-request-body-name: principal\n    head:\n      tags:\n      - health-mvc-endpoint\n      summary: invoke\n      operationId: invokeUsingHEAD\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      x-codegen-request-body-name: principal\n    patch:\n      tags:\n      - health-mvc-endpoint\n      summary: invoke\n      operationId: invokeUsingPATCH\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      x-codegen-request-body-name: principal\n  /health.json:\n    get:\n      tags:\n      - health-mvc-endpoint\n      summary: invoke\n      operationId: invokeUsingGET_17\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: principal\n    put:\n      tags:\n      - health-mvc-endpoint\n      summary: invoke\n      operationId: invokeUsingPUT_1\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: principal\n    post:\n      tags:\n      - health-mvc-endpoint\n      summary: invoke\n      operationId: invokeUsingPOST_1\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: principal\n    delete:\n      tags:\n      - health-mvc-endpoint\n      summary: invoke\n      operationId: invokeUsingDELETE_1\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      x-codegen-request-body-name: principal\n    options:\n      tags:\n      - health-mvc-endpoint\n      summary: invoke\n      operationId: invokeUsingOPTIONS_1\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      x-codegen-request-body-name: principal\n    head:\n      tags:\n      - health-mvc-endpoint\n      summary: invoke\n      operationId: invokeUsingHEAD_1\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      x-codegen-request-body-name: principal\n    patch:\n      tags:\n      - health-mvc-endpoint\n      summary: invoke\n      operationId: invokeUsingPATCH_1\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      x-codegen-request-body-name: principal\n  /heapdump:\n    get:\n      tags:\n      - heapdump-mvc-endpoint\n      summary: invoke\n      operationId: invokeUsingGET_18\n      parameters:\n      - name: live\n        in: query\n        description: live\n        schema:\n          type: boolean\n          default: true\n      responses:\n        200:\n          description: OK\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /heapdump.json:\n    get:\n      tags:\n      - heapdump-mvc-endpoint\n      summary: invoke\n      operationId: invokeUsingGET_19\n      parameters:\n      - name: live\n        in: query\n        description: live\n        schema:\n          type: boolean\n          default: true\n      responses:\n        200:\n          description: OK\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /info:\n    get:\n      tags:\n      - endpoint-mvc-adapter\n      summary: invoke\n      operationId: invokeUsingGET_8\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /info.json:\n    get:\n      tags:\n      - endpoint-mvc-adapter\n      summary: invoke\n      operationId: invokeUsingGET_9\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /login:\n    post:\n      tags:\n      - default-controller\n      summary: Returns success/insuccess.\n      description: This method validates the login data from a user.\n      operationId: loginUsingPOST\n      requestBody:\n        description: request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebRequest'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: request\n  /mappings:\n    get:\n      tags:\n      - endpoint-mvc-adapter\n      summary: invoke\n      operationId: invokeUsingGET_10\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /mappings.json:\n    get:\n      tags:\n      - endpoint-mvc-adapter\n      summary: invoke\n      operationId: invokeUsingGET_11\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /metrics:\n    get:\n      tags:\n      - metrics-mvc-endpoint\n      summary: invoke\n      operationId: invokeUsingGET_20\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /metrics.json:\n    get:\n      tags:\n      - metrics-mvc-endpoint\n      summary: invoke\n      operationId: invokeUsingGET_21\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /metrics/{name}:\n    get:\n      tags:\n      - metrics-mvc-endpoint\n      summary: value\n      operationId: valueUsingGET_1\n      parameters:\n      - name: name\n        in: path\n        description: name\n        required: true\n        schema:\n          type: string\n        example: abc\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /notifications/{notificationId}:\n    put:\n      tags:\n      - notifications-controller\n      summary: Returns success.\n      description: This method allows consumers to mark a notification as read.\n      operationId: readNotificationUsingPUT\n      parameters:\n      - name: notificationId\n        in: path\n        description: notificationId\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n    delete:\n      tags:\n      - notifications-controller\n      summary: Returns success.\n      description: This method allows consumers to delete a notification.\n      operationId: deleteNotificationUsingDELETE\n      parameters:\n      - name: notificationId\n        in: path\n        description: notificationId\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebRequest'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      x-codegen-request-body-name: request\n  /paypal/ipn/consumer/{consumerID}:\n    post:\n      tags:\n      - pay-pal-controller\n      summary: It confirms that a certain consumer has pay its load up on ProxyPrint.\n      description: Its a route for being remotely called by PayPal servers.\n      operationId: consumerLoadUpConfirmationUsingPOST\n      parameters:\n      - name: consumerID\n        in: path\n        description: consumerID\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content: {}\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /paypal/ipn/{printRequestID}:\n    post:\n      tags:\n      - pay-pal-controller\n      summary: Returns nothing\n      description: This method implements the payment check mechanism given by PayPal.\n        This method acts as callback, it reacts to the change of status of a transaction\n        to Completed (eCheck - complete).\n      operationId: someRequestPaymentConfirmationFromPaylPalUsingPOST\n      parameters:\n      - name: printRequestID\n        in: path\n        description: printRequestID\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content: {}\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /printdocument:\n    post:\n      tags:\n      - print-request-controller\n      summary: Returns a Print Request ID\n      description: This method allows other platforms to print a document using ProxyPrint\n      operationId: printDocumentUsingPOST\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /printdocument/{id}:\n    get:\n      tags:\n      - print-request-controller\n      summary: Returns a document\n      description: 'This method returns the document from a print request '\n      operationId: getDocumentUsingGET\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /printdocument/{id}/budget:\n    post:\n      tags:\n      - print-request-controller\n      summary: Returns a set of budgets\n      description: This method calculates budgets for a given and already specified\n        print request. The budgets are calculated for specific printshops also passed\n        along as parameters.\n      operationId: calcBudgetForPrintRecipeUsingPOST\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: principal\n  /printshop:\n    get:\n      tags:\n      - manager-controller\n      summary: Returns a printshop\n      description: This method allows manager to get his printshop info\n      operationId: getManagerPrintShopUsingGET\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: principal\n  /printshops:\n    get:\n      tags:\n      - print-shop-controller\n      summary: Returns a printshop\n      description: This method returns a list of printshop with info from each one.\n      operationId: getPrintShopsUsingGET\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /printshops/history:\n    get:\n      tags:\n      - print-shop-controller\n      summary: Returns the history of requests.\n      description: Returns the history of requests from a printshop.\n      operationId: getPrintShopHistoryRequestsUsingGET\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: principal\n  /printshops/nearest:\n    get:\n      tags:\n      - print-shop-controller\n      summary: Returns a list of printshops.\n      description: This method returns a list of the nearest printshops.\n      operationId: getNearestPrintShopsUsingGET\n      requestBody:\n        description: request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebRequest'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: request\n  /printshops/requests:\n    get:\n      tags:\n      - print-shop-controller\n      summary: Returns pending requests.\n      description: Returns the pending and in progress requests from a printshop.\n      operationId: getPrintShopRequestsUsingGET\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: principal\n  /printshops/requests/cancel/{id}:\n    post:\n      tags:\n      - print-shop-controller\n      summary: Returns success/insuccess.\n      description: This method allows a employee to cancel a print resquest.\n      operationId: cancelPrintShopRequestsUsingPOST\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: motive\n        content:\n          application/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: motive\n  /printshops/requests/{id}:\n    get:\n      tags:\n      - print-shop-controller\n      summary: Returns a request.\n      description: Returns the corresponding request from a printshop.\n      operationId: getPrintShopRequestUsingGET\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: principal\n    post:\n      tags:\n      - print-shop-controller\n      summary: Returns the new status.\n      description: Returns the new status of the corresponding print request.\n      operationId: changeStatusPrintShopRequestsUsingPOST\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: principal\n  /printshops/satisfied:\n    get:\n      tags:\n      - print-shop-controller\n      summary: Returns satisfied requests.\n      description: Returns the satisfied requests from a printshop.\n      operationId: getPrintShopSatisfiedRequestsUsingGET_1\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: principal\n  /printshops/stats:\n    get:\n      tags:\n      - manager-controller\n      summary: Returns success/insuccess.\n      description: This method allows a manager to get the statistics info from his\n        printshop.\n      operationId: getPrintShopStatisticsUsingGET\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: principal\n  /printshops/{id}:\n    get:\n      tags:\n      - print-shop-controller\n      summary: Returns a printshop\n      description: This method returns the printshop info\n      operationId: getPrintShopUsingGET\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /printshops/{id}/pricetable:\n    get:\n      tags:\n      - print-shop-controller\n      summary: Returns a pricetable\n      description: This method returns a pricetable of a specific printshop.\n      operationId: getPrintShopPriceTableUsingGET\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /printshops/{id}/pricetable/covers:\n    put:\n      tags:\n      - price-table-controller\n      summary: Returns success/insuccess\n      description: Edit an existent Cover Item to a price table of a certain print\n        shop.\n      operationId: editCoverItemUsingPUT\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: cti\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CoverTableItem'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: cti\n    post:\n      tags:\n      - price-table-controller\n      summary: Returns success/insuccess\n      description: Add a new Cover Item to a price table of a certain print shop.\n      operationId: addNewCoverItemUsingPOST\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: cti\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CoverTableItem'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: cti\n  /printshops/{id}/pricetable/deletecover:\n    post:\n      tags:\n      - price-table-controller\n      summary: Returns success/insuccess\n      description: Delete an existent Cover Item to a price table of a certain print\n        shop.\n      operationId: deleteCoverItemUsingPOST\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: cti\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CoverTableItem'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: cti\n  /printshops/{id}/pricetable/deletepaper:\n    post:\n      tags:\n      - price-table-controller\n      summary: Returns success/insuccess\n      description: Delete a new Paper Item from a price table of a certain print shop.\n      operationId: deletePaperItemUsingPOST\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: pti\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PaperTableItem'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: pti\n  /printshops/{id}/pricetable/deletering:\n    post:\n      tags:\n      - price-table-controller\n      summary: Returns success/insuccess\n      description: Delete an existing Rings Item to a price table of a certain print\n        shop.\n      operationId: deleteRingItemUsingPOST\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: rti\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RingTableItem'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: rti\n  /printshops/{id}/pricetable/papers:\n    put:\n      tags:\n      - price-table-controller\n      summary: Returns success/insuccess\n      description: Edition of a new Paper Item from a price table of a certain print\n        shop.\n      operationId: editPaperItemUsingPUT\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: pti\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PaperTableItem'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: pti\n    post:\n      tags:\n      - price-table-controller\n      summary: Returns success/insuccess\n      description: Addition of a new Paper Item to a price table of a certain print\n        shop.\n      operationId: addNewPaperItemUsingPOST\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: pti\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PaperTableItem'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: pti\n  /printshops/{id}/pricetable/rings:\n    put:\n      tags:\n      - price-table-controller\n      summary: Returns success/insuccess\n      description: Edition of an existing Rings Item to a price table of a certain\n        print shop.\n      operationId: editRingsItemUsingPUT\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: rti\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RingTableItem'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: rti\n    post:\n      tags:\n      - price-table-controller\n      summary: Returns success/insuccess\n      description: Addition of a new Rings Item to a price table of a certain print\n        shop.\n      operationId: addNewRingsItemUsingPOST\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: rti\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RingTableItem'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: rti\n  /printshops/{id}/reviews:\n    get:\n      tags:\n      - review-controller\n      summary: Returns all printshop reviews\n      description: 404 if the printshop doesn't exist.\n      operationId: getPrintShopReviewsUsingGET\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n    post:\n      tags:\n      - review-controller\n      summary: Add a review to a printshop with the given ID\n      description: 404 if the printshop doesn't exist.\n      operationId: addPrintShopReviewUsingPOST\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: params\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties:\n                type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: params\n  /printshops/{printShopID}/employees:\n    get:\n      tags:\n      - manager-controller\n      summary: Returns list of employees.\n      description: This method allows a manager to get the list of employees from\n        his printshop.\n      operationId: getEmployeesUsingGET_1\n      parameters:\n      - name: printShopID\n        in: path\n        description: printShopID\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n    put:\n      tags:\n      - manager-controller\n      summary: Returns success/insuccess.\n      description: This method allows a manager to edit a employee from his printshop.\n      operationId: editEmployeeUsingPUT\n      parameters:\n      - name: printShopID\n        in: path\n        description: printShopID\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n    post:\n      tags:\n      - manager-controller\n      summary: Returns success/insuccess.\n      description: This method allows a manager to add a employee to his printshop.\n      operationId: addEmployeeUsingPOST\n      parameters:\n      - name: printShopID\n        in: path\n        description: printShopID\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /printshops/{printShopID}/employees/{employeeID}:\n    delete:\n      tags:\n      - manager-controller\n      summary: Returns success/insuccess.\n      description: This method allows a manager to delete a employee from his printshop.\n      operationId: deleteEmployeeUsingDELETE\n      parameters:\n      - name: printShopID\n        in: path\n        description: printShopID\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      - name: employeeID\n        in: path\n        description: employeeID\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n  /printshops/{printShopID}/pricetable/editstapling:\n    put:\n      tags:\n      - price-table-controller\n      summary: Returns success/insuccess\n      description: Edit the stapling price property table of a certain print shop.\n      operationId: editStaplingPriceUsingPUT\n      parameters:\n      - name: printShopID\n        in: path\n        description: printShopID\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: newStaplingPrice\n        content:\n          application/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: newStaplingPrice\n  /printshops/{printShopId}/reviews/{reviewId}:\n    put:\n      tags:\n      - review-controller\n      summary: Edit an existing printshop review\n      description: 404 if the printshop or the review doesn't exist.\n      operationId: editPrintShopReviewUsingPUT\n      parameters:\n      - name: printShopId\n        in: path\n        description: printShopId\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      - name: reviewId\n        in: path\n        description: reviewId\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebRequest'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: request\n    delete:\n      tags:\n      - review-controller\n      summary: Delete an existing printshop review\n      description: 404 if the printshop or the review doesn't exist.\n      operationId: deletePrintShopReviewUsingDELETE\n      parameters:\n      - name: printShopId\n        in: path\n        description: printShopId\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      - name: reviewId\n        in: path\n        description: reviewId\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: principal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Principal'\n        required: false\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n      x-codegen-request-body-name: principal\n  /request/accept/{id}:\n    post:\n      tags:\n      - register-request-controller\n      summary: Returns success/insuccess.\n      description: This method allows the admin to accept a register request from\n        a printshop.\n      operationId: acceptRequestUsingPOST\n      parameters:\n      - name: id\n        in: path\n        description: id\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /request/register:\n    post:\n      tags:\n      - register-request-controller\n      summary: Returns success.\n      description: This method allows to add a register request to a new printshop.\n      operationId: registerRequestUsingPOST\n      requestBody:\n        description: registerRequest\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RegisterRequest'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: registerRequest\n  /request/reject/{printRequestID}:\n    post:\n      tags:\n      - register-request-controller\n      summary: Returns success/insuccess.\n      description: This method allows the admin to reject a register request from\n        a printshop.\n      operationId: rejectRequestUsingPOST\n      parameters:\n      - name: printRequestID\n        in: path\n        description: printRequestID\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      requestBody:\n        description: motive\n        content:\n          application/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: string\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: motive\n  /requests/pending:\n    get:\n      tags:\n      - register-request-controller\n      summary: Returns a list of pending register requests.\n      description: This method allows the admin to get a list of pending register\n        requests.\n      operationId: acceptRequestUsingGET\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RegisterRequest'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /trace:\n    get:\n      tags:\n      - endpoint-mvc-adapter\n      summary: invoke\n      operationId: invokeUsingGET_12\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /trace.json:\n    get:\n      tags:\n      - endpoint-mvc-adapter\n      summary: invoke\n      operationId: invokeUsingGET_13\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\ncomponents:\n  schemas:\n    Locale:\n      type: object\n    RegisterRequest:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        managerEmail:\n          type: string\n        managerName:\n          type: string\n        managerPassword:\n          type: string\n        managerUsername:\n          type: string\n        pShopAddress:\n          type: string\n        pShopDateRequest:\n          type: string\n        pShopDateRequestAccepted:\n          type: string\n        pShopLatitude:\n          type: number\n          format: double\n        pShopLongitude:\n          type: number\n          format: double\n        pShopNIF:\n          type: string\n        pShopName:\n          type: string\n    InputStream:\n      type: object\n    GrantedAuthority:\n      type: object\n      properties:\n        authority:\n          type: string\n    OutputStream:\n      type: object\n    ModelAndView:\n      type: object\n      properties:\n        empty:\n          type: boolean\n        model:\n          type: object\n          properties: {}\n        modelMap:\n          type: object\n          additionalProperties:\n            type: object\n            properties: {}\n        reference:\n          type: boolean\n        status:\n          type: string\n          enum:\n          - \"100\"\n          - \"101\"\n          - \"102\"\n          - \"103\"\n          - \"200\"\n          - \"201\"\n          - \"202\"\n          - \"203\"\n          - \"204\"\n          - \"205\"\n          - \"206\"\n          - \"207\"\n          - \"208\"\n          - \"226\"\n          - \"300\"\n          - \"301\"\n          - \"302\"\n          - \"303\"\n          - \"304\"\n          - \"305\"\n          - \"307\"\n          - \"308\"\n          - \"400\"\n          - \"401\"\n          - \"402\"\n          - \"403\"\n          - \"404\"\n          - \"405\"\n          - \"406\"\n          - \"407\"\n          - \"408\"\n          - \"409\"\n          - \"410\"\n          - \"411\"\n          - \"412\"\n          - \"413\"\n          - \"414\"\n          - \"415\"\n          - \"416\"\n          - \"417\"\n          - \"418\"\n          - \"419\"\n          - \"420\"\n          - \"421\"\n          - \"422\"\n          - \"423\"\n          - \"424\"\n          - \"426\"\n          - \"428\"\n          - \"429\"\n          - \"431\"\n          - \"451\"\n          - \"500\"\n          - \"501\"\n          - \"502\"\n          - \"503\"\n          - \"504\"\n          - \"505\"\n          - \"506\"\n          - \"507\"\n          - \"508\"\n          - \"509\"\n          - \"510\"\n          - \"511\"\n        view:\n          $ref: '#/components/schemas/View'\n        viewName:\n          type: string\n    GregorianCalendar:\n      type: object\n      properties:\n        fieldsComputed:\n          type: integer\n          format: int32\n        fieldsNormalized:\n          type: integer\n          format: int32\n        firstDayOfWeek:\n          type: integer\n          format: int32\n        gregorianChange:\n          type: integer\n          format: int64\n        lenient:\n          type: boolean\n        minimalDaysInFirstWeek:\n          type: integer\n          format: int32\n        time:\n          type: string\n          format: date-time\n        timeInMillis:\n          type: integer\n          format: int64\n        timeZone:\n          $ref: '#/components/schemas/TimeZone'\n        weekCountData:\n          $ref: '#/components/schemas/Locale'\n        zoneShared:\n          type: boolean\n    FileSystemResource:\n      type: object\n      properties:\n        description:\n          type: string\n        filename:\n          type: string\n        inputStream:\n          $ref: '#/components/schemas/InputStream'\n        outputStream:\n          $ref: '#/components/schemas/OutputStream'\n        path:\n          type: string\n        readable:\n          type: boolean\n        uri:\n          $ref: '#/components/schemas/URI'\n        url:\n          $ref: '#/components/schemas/URL'\n        writable:\n          type: boolean\n    Admin:\n      type: object\n      properties:\n        balance:\n          $ref: '#/components/schemas/Money'\n        email:\n          type: string\n        id:\n          type: integer\n          format: int64\n        roles:\n          $ref: '#/components/schemas/CollectionGrantedAuthority'\n        rolesSet:\n          type: array\n          items:\n            type: string\n        username:\n          type: string\n    CollectionGrantedAuthority:\n      type: object\n    View:\n      type: object\n      properties:\n        contentType:\n          type: string\n    URI:\n      type: object\n      properties:\n        absolute:\n          type: boolean\n        authority:\n          type: string\n        fragment:\n          type: string\n        host:\n          type: string\n        opaque:\n          type: boolean\n        path:\n          type: string\n        port:\n          type: integer\n          format: int32\n        query:\n          type: string\n        rawAuthority:\n          type: string\n        rawFragment:\n          type: string\n        rawPath:\n          type: string\n        rawQuery:\n          type: string\n        rawSchemeSpecificPart:\n          type: string\n        rawUserInfo:\n          type: string\n        scheme:\n          type: string\n        schemeSpecificPart:\n          type: string\n        userInfo:\n          type: string\n    URL:\n      type: object\n      properties:\n        authority:\n          type: string\n        content:\n          type: object\n          properties: {}\n        defaultPort:\n          type: integer\n          format: int32\n        file:\n          type: string\n        host:\n          type: string\n        path:\n          type: string\n        port:\n          type: integer\n          format: int32\n        protocol:\n          type: string\n        query:\n          type: string\n        ref:\n          type: string\n        userInfo:\n          type: string\n    Notification:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        message:\n          type: string\n        readStatus:\n          type: boolean\n        timestamp:\n          type: string\n          format: date-time\n    Money:\n      type: object\n      properties:\n        currency:\n          type: string\n        fractionalPart:\n          type: integer\n          format: int32\n        integerPart:\n          type: integer\n          format: int32\n        moneyAsDouble:\n          type: number\n          format: double\n        valid:\n          type: boolean\n    ResponseEntity:\n      type: object\n      properties:\n        body:\n          type: object\n          properties: {}\n        statusCode:\n          type: string\n          enum:\n          - \"100\"\n          - \"101\"\n          - \"102\"\n          - \"103\"\n          - \"200\"\n          - \"201\"\n          - \"202\"\n          - \"203\"\n          - \"204\"\n          - \"205\"\n          - \"206\"\n          - \"207\"\n          - \"208\"\n          - \"226\"\n          - \"300\"\n          - \"301\"\n          - \"302\"\n          - \"303\"\n          - \"304\"\n          - \"305\"\n          - \"307\"\n          - \"308\"\n          - \"400\"\n          - \"401\"\n          - \"402\"\n          - \"403\"\n          - \"404\"\n          - \"405\"\n          - \"406\"\n          - \"407\"\n          - \"408\"\n          - \"409\"\n          - \"410\"\n          - \"411\"\n          - \"412\"\n          - \"413\"\n          - \"414\"\n          - \"415\"\n          - \"416\"\n          - \"417\"\n          - \"418\"\n          - \"419\"\n          - \"420\"\n          - \"421\"\n          - \"422\"\n          - \"423\"\n          - \"424\"\n          - \"426\"\n          - \"428\"\n          - \"429\"\n          - \"431\"\n          - \"451\"\n          - \"500\"\n          - \"501\"\n          - \"502\"\n          - \"503\"\n          - \"504\"\n          - \"505\"\n          - \"506\"\n          - \"507\"\n          - \"508\"\n          - \"509\"\n          - \"510\"\n          - \"511\"\n        statusCodeValue:\n          type: integer\n          format: int32\n    TimeZone:\n      type: object\n      properties:\n        id:\n          type: string\n        rawOffset:\n          type: integer\n          format: int32\n    PaperTableItem:\n      type: object\n      properties:\n        colors:\n          type: string\n        infLim:\n          type: integer\n          format: int32\n        priceA3DUPLEX:\n          type: string\n        priceA3SIMPLEX:\n          type: string\n        priceA4DUPLEX:\n          type: string\n        priceA4SIMPLEX:\n          type: string\n        supLim:\n          type: integer\n          format: int32\n    SseEmitter:\n      type: object\n      properties:\n        timeout:\n          type: integer\n          format: int64\n    CoverTableItem:\n      type: object\n      properties:\n        coverType:\n          type: string\n        priceA3:\n          type: string\n        priceA4:\n          type: string\n    File:\n      type: object\n      properties:\n        absolute:\n          type: boolean\n        absolutePath:\n          type: string\n        canonicalPath:\n          type: string\n        directory:\n          type: boolean\n        file:\n          type: boolean\n        freeSpace:\n          type: integer\n          format: int64\n        hidden:\n          type: boolean\n        name:\n          type: string\n        parent:\n          type: string\n        path:\n          type: string\n        totalSpace:\n          type: integer\n          format: int64\n        usableSpace:\n          type: integer\n          format: int64\n    RingTableItem:\n      type: object\n      properties:\n        infLim:\n          type: integer\n          format: int32\n        price:\n          type: string\n        ringType:\n          type: string\n        supLim:\n          type: integer\n          format: int32\n    PrintingSchema:\n      type: object\n      properties:\n        bindingSpecs:\n          type: string\n        coverSpecs:\n          type: string\n        deleted:\n          type: boolean\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        paperSpecs:\n          type: string\n    Principal:\n      type: object\n      properties:\n        name:\n          type: string\n    WebRequest:\n      type: object\n",
			"canonicalURL": "/github.com/codingsoo/REST_Go@ed67007a3d9cc852de4c47d395991f602a381c67/-/blob/doc/proxyprint_openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/codingsoo/REST_Go/blob/ed67007a3d9cc852de4c47d395991f602a381c67/doc/proxyprint_openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/printshops/{id}/pricetable/papers\": put: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}