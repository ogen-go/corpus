{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/apideck.com/accounting/8.32.6/openapi.yaml",
			"byteSize": 294234,
			"content": "openapi: 3.0.3\nservers:\n  - url: https://unify.apideck.com\ninfo:\n  contact:\n    email: hello@apideck.com\n    url: https://developers.apideck.com\n  description: |+\n    Welcome to the Accounting API.\n\n    You can use this API to access all Accounting API endpoints.\n\n    ## Base URL\n\n    The base URL for all API requests is `https://unify.apideck.com`\n\n    ## GraphQL\n\n    Use the [GraphQL playground](https://developers.apideck.com/graphql/playground) to test out the GraphQL API.\n\n    ## Headers\n\n    Custom headers that are expected as part of the request. Note that [RFC7230](https://tools.ietf.org/html/rfc7230) states header names are case insensitive.\n\n    | Name                  | Type    | Required | Description                                                                                                                                                    |\n    | --------------------- | ------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | x-apideck-consumer-id | String  | Yes      | The id of the customer stored inside Apideck Vault. This can be a user id, account id, device id or whatever entity that can have integration within your app. |\n    | x-apideck-service-id  | String  | No       | Describe the service you want to call (e.g., pipedrive). Only needed when a customer has activated multiple integrations for the same Unified API.             |\n    | x-apideck-raw         | Boolean | No       | Include raw response. Mostly used for debugging purposes.                                                                                                      |\n    | x-apideck-app-id      | String  | Yes      | The application id of your Unify application. Available at https://app.apideck.com/unify/api-keys.                                                             |\n    | Authorization         | String  | Yes      | Bearer API KEY                                                                                                                                                 |\n\n    ## Authorization\n\n    You can interact with the API through the authorization methods below.\n\n    \u003c!-- ReDoc-Inject: \u003csecurity-definitions\u003e --\u003e\n\n    ## Pagination\n\n    All API resources have support for bulk retrieval via list APIs.  Apideck uses cursor-based pagination via the optional `cursor` and `limit` parameters.\n\n    To fetch the first page of results, call the list API without a `cursor` parameter. Afterwards you can fetch subsequent pages by providing a cursor parameter. You will find the next cursor in the response body in `meta.cursors.next`. If `meta.cursors.next` is `null` you're at the end of the list.\n\n    In the REST API you can also use the `links` from the response for added convenience. Simply call the URL in `links.next` to get the next page of results.\n\n    ### Query Parameters\n\n    | Name   | Type   | Required | Description                                                                                                        |\n    | ------ | ------ | -------- | ------------------------------------------------------------------------------------------------------------------ |\n    | cursor | String | No       | Cursor to start from. You can find cursors for next \u0026 previous pages in the meta.cursors property of the response. |\n    | limit  | Number | No       | Number of results to return. Minimum 1, Maximum 200, Default 20                                                    |\n\n    ### Response Body\n\n    | Name                  | Type   | Description                                                        |\n    | --------------------- | ------ | ------------------------------------------------------------------ |\n    | meta.cursors.previous | String | Cursor to navigate to the previous page of results through the API |\n    | meta.cursors.current  | String | Cursor to navigate to the current page of results through the API  |\n    | meta.cursors.next     | String | Cursor to navigate to the next page of results through the API     |\n    | meta.items_on_page    | Number | Number of items returned in the data property of the response      |\n    | links.previous        | String | Link to navigate to the previous page of results through the API   |\n    | links.current         | String | Link to navigate to the current page of results through the API    |\n    | links.next            | String | Link to navigate to the next page of results through the API       |\n\n    ⚠️ `meta.cursors.previous`/`links.previous` is not available for all connectors.\n\n    ## SDKs and API Clients\n\n    Upcoming. [Request the SDK of your choice](https://integrations.apideck.com/request).\n\n    ## Debugging\n\n    Because of the nature of the abstraction we do in Apideck Unify we still provide the option to the receive raw requests and responses being handled underlying. By including the raw flag `?raw=true` in your requests you can still receive the full request. Please note that this increases the response size and can introduce extra latency.\n\n    ## Errors\n\n    The API returns standard HTTP response codes to indicate success or failure of the API requests. For errors, we also return a customized error message inside the JSON response. You can see the returned HTTP status codes below.\n\n    | Code | Title                | Description                                                                                                                                                                                              |\n    | ---- | -------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | 200  | OK                   | The request message has been successfully processed, and it has produced a response. The response message varies, depending on the request method and the requested data.                                |\n    | 201  | Created              | The request has been fulfilled and has resulted in one or more new resources being created.                                                                                                              |\n    | 204  | No Content           | The server has successfully fulfilled the request and that there is no additional content to send in the response payload body.                                                                          |\n    | 400  | Bad Request          | The receiving server cannot understand the request because of malformed syntax. Do not repeat the request without first modifying it; check the request for errors, fix them and then retry the request. |\n    | 401  | Unauthorized         | The request has not been applied because it lacks valid authentication credentials for the target resource.                                                                                              |\n    | 402  | Payment Required     | Subscription data is incomplete or out of date. You'll need to provide payment details to continue.                                                                                                      |\n    | 403  | Forbidden            | You do not have the appropriate user rights to access the request. Do not repeat the request.                                                                                                            |\n    | 404  | Not Found            | The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.                                                                           |\n    | 409  | Conflict             | The request could not be completed due to a conflict with the current state of the target resource.                                                                                                      |\n    | 422  | Unprocessable Entity | The server understands the content type of the request entity, and the syntax of the request entity is correct but was unable to process the contained instructions.                                     |\n    | 429  | Too Many Requests    | You sent too many requests in a given amount of time (\"rate limit\"). Try again later                                                                                                                     |\n    | 5xx  | Server Errors        | Something went wrong with the Unify API. These errors are logged on our side. You can contact our team to resolve the issue.                                                                             |\n\n    ### Handling errors\n\n    The Unify API and SDKs can produce errors for many reasons, such as a failed requests due to misconfigured integrations, invalid parameters, authentication errors, and network unavailability.\n\n    ### Error Types\n\n    #### RequestValidationError\n\n    Request is not valid for the current endpoint. The response body will include details on the validation error. Check the spelling and types of your attributes, and ensure you are not passing data that is outside of the specification.\n\n    #### UnsupportedFiltersError\n\n    Filters in the request are valid, but not supported by the connector. Remove the unsupported filter(s) to get a successful response.\n\n    #### UnsupportedSortFieldError\n\n    Sort field (`sort[by]`) in the request is valid, but not supported by the connector. Replace or remove the sort field to get a successful response.\n\n    #### InvalidCursorError\n\n    Pagination cursor in the request is not valid for the current connector. Make sure to use a cursor returned from the API, for the same connector.\n\n    #### ConnectorExecutionError\n\n    A Unified API request made via one of our downstream connectors returned an unexpected error. The `status_code` returned is proxied through to error response along with their original response via the error detail.\n\n    #### UnauthorizedError\n\n    We were unable to authorize the request as made. This can happen for a number of reasons, from missing header params to passing an incorrect authorization token. Verify your Api Key is being set correctly in the authorization header. ie: `Authorization: 'Bearer sk_live_***'`\n\n    #### ConnectorCredentialsError\n\n    A request using a given connector has not been authorized. Ensure the connector you are trying to use has been configured correctly and been authorized for use.\n\n    #### ConnectorDisabledError\n\n    A request has been made to a connector that has since been disabled. This may be temporary - You can contact our team to resolve the issue.\n\n    #### ConnectorRateLimitError\n\n    You sent too many request to a connector. These rate limits vary from connector to connector. You will need to try again later.\n\n    #### RequestLimitError\n\n    You have reached the number of requests included in your Free Tier Subscription. You will no be able to make further requests until this limit resets at the end of the month, or talk to us about upgrading your subscription to continue immediately.\n\n    #### EntityNotFoundError\n\n    You've made a request for a resource or route that does not exist. Verify your path parameters or any identifiers used to fetch this resource.\n\n    #### OAuthCredentialsNotFoundError\n\n    When adding a connector integration that implements OAuth, both a `client_id` and `client_secret` must be provided before any authorizations can be performed. Verify the integration has been configured properly before continuing.\n\n    #### IntegrationNotFoundError\n\n    The requested connector integration could not be found associated to your `application_id`. Verify your `application_id` is correct, and that this connector has been added and configured for your application.\n\n    #### ConnectionNotFoundError\n\n    A valid connection could not be found associated to your `application_id`. Something _may_ have interrupted the authorization flow. You may need to start the connector authorization process again.\n\n    #### ConnectionSettingsError\n\n    The connector has required settings that were not supplied. Verify `connection.settings` contains all required settings for the connector to be callable.\n\n    #### ConnectorNotFoundError\n\n    A request was made for an unknown connector. Verify your `service_id` is spelled correctly, and that this connector is enabled for your provided `unified_api`.\n\n    #### OAuthRedirectUriError\n\n    A request was made either in a connector authorization flow, or attempting to revoke connector access without a valid `redirect_uri`. This is the url the user should be returned to on completion of process.\n\n    #### OAuthInvalidStateError\n\n    The state param is required and is used to ensure the outgoing authorization state has not been altered before the user is redirected back. It also contains required params needed to identify the connector being used. If this has been altered, the authorization will not succeed.\n\n    #### OAuthCodeExchangeError\n\n    When attempting to exchange the authorization code for an `access_token` during an OAuth flow, an error occurred. This may be temporary. You can reattempt authorization or contact our team to resolve the issue.\n\n    #### OAuthConnectorError\n\n    It seems something went wrong on the connector side. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n    #### MappingError\n\n    There was an error attempting to retrieve the mapping for a given attribute. We've been notified and are working to fix this issue.\n\n    #### ConnectorMappingNotFoundError\n\n    It seems the implementation for this connector is incomplete. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n    #### ConnectorResponseMappingNotFoundError\n\n    We were unable to retrieve the response mapping for this connector. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n    #### ConnectorOperationMappingNotFoundError\n\n    Connector mapping has not been implemented for the requested operation. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n    #### ConnectorWorkflowMappingError\n\n    The composite api calls required for this operation have not been mapped entirely. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n    #### ConnectorOperationUnsupportedError\n\n    You're attempting a call that is not supported by the connector. It's likely this operation is supported by another connector, but we're unable to implement for this one.\n\n    #### PaginationNotSupportedError\n\n    Pagination is not yet supported for this connector, try removing limit and/or cursor from the query. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n    ## API Design\n\n    ### API Styles and data formats\n\n    #### REST API\n\n    The API is organized around [REST](https://restfulapi.net/), providing simple and predictable URIs to access and modify objects. Requests support standard HTTP methods like GET, PUT, POST, and DELETE and standard status codes. JSON is returned by all API responses, including errors. In all API requests, you must set the content-type HTTP header to application/json. All API requests must be made over HTTPS. Calls made over HTTP will fail.\n\n    ##### Available HTTP methods\n\n    The Apideck API uses HTTP verbs to understand if you want to read (GET), delete (DELETE) or create (POST) an object. When your web application cannot do a POST or DELETE, we provide the ability to set the method through the query parameter \\_method.\n\n    ```\n    POST /messages\n    GET /messages\n    GET /messages/{messageId}\n    PATCH /messages/{messageId}\n    DELETE /messages/{messageId}\n    ```\n\n    Response bodies are always UTF-8 encoded JSON objects, unless explicitly documented otherwise. For some endpoints and use cases we divert from REST to provide a better developer experience.\n\n    ### Schema\n\n    All API requests and response bodies adhere to a common JSON format representing individual items, collections of items, links to related items and additional meta data.\n\n    ### Meta\n\n    Meta data can be represented as a top level member named “meta”. Any information may be provided in the meta data. It’s most common use is to return the total number of records when requesting a collection of resources.\n\n    ### Idempotence (upcoming)\n\n    To prevent the creation of duplicate resources, every POST method (such as one that creates a consumer record) must specify a unique value for the X-Unique-Transaction-ID header name. Uniquely identifying each unique POST request ensures that the API processes a given request once and only once.\n\n    Uniquely identifying new resource-creation POSTs is especially important when the outcome of a response is ambiguous because of a transient service interruption, such as a server-side timeout or network disruption. If a service interruption occurs, then the client application can safely retry the uniquely identified request without creating duplicate operations. (API endpoints that guarantee that every uniquely identified request is processed only once no matter how many times that uniquely identifiable request is made are described as idempotent.)\n\n    ### Request IDs\n\n    Each API request has an associated request identifier. You can find this value in the response headers, under Request-Id. You can also find request identifiers in the URLs of individual request logs in your Dashboard. If you need to contact us about a specific request, providing the request identifier will ensure the fastest possible resolution.\n\n    ### Fixed field types\n\n    #### Dates\n\n    The dates returned by the API are all represented in UTC (ISO8601 format).\n\n    This example `2019-11-14T00:55:31.820Z` is defined by the ISO 8601 standard. The T in the middle separates the year-month-day portion from the hour-minute-second portion. The Z on the end means UTC, that is, an offset-from-UTC of zero hours-minutes-seconds. The Z is pronounced \"Zulu\" per military/aviation tradition.\n\n    The ISO 8601 standard is more modern. The formats are wisely designed to be easy to parse by machine as well as easy to read by humans across cultures.\n\n    #### Prices and Currencies\n\n    All prices returned by the API are represented as integer amounts in a currency’s smallest unit. For example, $5 USD would be returned as 500 (i.e, 500 cents).\n\n    For zero-decimal currencies, amounts will still be provided as an integer but without the need to divide by 100. For example, an amount of ¥5 (JPY) would be returned as 5.\n\n    All currency codes conform to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\n\n    ## Support\n\n    If you have problems or need help with your case, you can always reach out to our Support.\n\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  title: Accounting API\n  version: 8.32.6\n  x-apideck-api: accounting\n  x-apideck-sdk-support: true\n  x-apisguru-categories:\n    - developer_tools\n  x-logo:\n    url: https://developers.apideck.com/icon.png\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/apideck-libraries/openapi-specs/master/accounting.yml\n      version: \"3.0\"\n  x-providerName: apideck.com\n  x-serviceName: accounting\n  x-tags:\n    - partner\nexternalDocs:\n  description: Apideck Developer Docs\n  url: https://developers.apideck.com\nsecurity:\n  - apiKey: []\ntags:\n  - description: \"\"\n    name: Bills\n    x-apideck-model:\n      $ref: \"#/components/schemas/Bill\"\n    x-apideck-resource-id: bills\n  - description: \"\"\n    name: Company Info\n    x-apideck-model:\n      $ref: \"#/components/schemas/CompanyInfo\"\n    x-apideck-resource-id: company-info\n  - description: \"\"\n    name: Customers\n    x-apideck-model:\n      $ref: \"#/components/schemas/AccountingCustomer\"\n    x-apideck-resource-id: customers\n  - description: \"\"\n    name: Invoices\n    x-apideck-model:\n      $ref: \"#/components/schemas/Invoice\"\n    x-apideck-resource-id: invoices\n  - description: Invoice items are stored from invoice lines to be used later on when creating new invoices.\n    name: Invoice Items\n    x-apideck-model:\n      $ref: \"#/components/schemas/InvoiceItem\"\n    x-apideck-resource-id: invoice-items\n  - description: \"\"\n    name: Ledger Accounts\n    x-apideck-model:\n      $ref: \"#/components/schemas/LedgerAccount\"\n    x-apideck-resource-id: ledger-accounts\n  - description: \"\"\n    name: Payments\n    x-apideck-model:\n      $ref: \"#/components/schemas/Payment\"\n    x-apideck-resource-id: payments\n  - description: \"\"\n    name: Suppliers\n    x-apideck-model:\n      $ref: \"#/components/schemas/Supplier\"\n    x-apideck-resource-id: suppliers\n  - description: \"\"\n    name: Tax Rates\n    x-apideck-model:\n      $ref: \"#/components/schemas/TaxRate\"\n    x-apideck-resource-id: tax-rates\n  - description: \"\"\n    name: Balance Sheet\n    x-apideck-model:\n      $ref: \"#/components/schemas/BalanceSheet\"\n    x-apideck-resource-id: balance-sheet\npaths:\n  /accounting/balance-sheet:\n    get:\n      description: Get BalanceSheet\n      operationId: balanceSheetOne\n      parameters:\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/passThrough\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetBalanceSheetResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get BalanceSheet\n      tags:\n        - Balance Sheet\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.balanceSheetOne({})\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  /accounting/bills:\n    get:\n      description: List Bills\n      operationId: billsAll\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/cursor\"\n        - $ref: \"#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetBillsResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: List Bills\n      tags:\n        - Bills\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.billsAll({})\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: bills\n    post:\n      description: Create Bill\n      operationId: billsAdd\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Bill\"\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/CreateBillResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Create Bill\n      tags:\n        - Bills\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              bill: {\n                supplier: {\n                  id: '12345',\n                  display_name: 'Windsurf Shop',\n                  address: {\n                    id: '123',\n                    type: 'primary',\n                    string: '25 Spring Street, Blackburn, VIC 3130',\n                    name: 'HQ US',\n                    line1: 'Main street',\n                    line2: 'apt #',\n                    line3: 'Suite #',\n                    line4: 'delivery instructions',\n                    street_number: '25',\n                    city: 'San Francisco',\n                    state: 'CA',\n                    postal_code: '94104',\n                    country: 'US',\n                    latitude: '40.759211',\n                    longitude: '-73.984638',\n                    county: 'Santa Clara',\n                    contact_name: 'Elon Musk',\n                    salutation: 'Mr',\n                    phone_number: '111-111-1111',\n                    fax: '122-111-1111',\n                    email: 'elon@musk.com',\n                    website: 'https://elonmusk.com',\n                    row_version: '1-12345'\n                  }\n                },\n                currency: 'USD',\n                currency_rate: 0.69,\n                tax_inclusive: true,\n                bill_date: '2020-09-30',\n                due_date: '2020-10-30',\n                paid_date: '2020-10-30',\n                po_number: '90000117',\n                reference: '123456',\n                line_items: [\n                  {\n                    row_id: '12345',\n                    code: '120-C',\n                    line_number: 1,\n                    description:\n                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',\n                    type: 'expense_account',\n                    tax_amount: 27500,\n                    total_amount: 27500,\n                    quantity: 1,\n                    unit_price: 27500.5,\n                    unit_of_measure: 'pc.',\n                    discount_percentage: 0.01,\n                    item: {\n                      id: '12344'\n                    },\n                    ledger_account: {\n                      id: '123456',\n                      nominal_code: 'N091',\n                      code: '453'\n                    },\n                    tax_rate: {\n                      id: '123456'\n                    },\n                    row_version: '1-12345'\n                  }\n                ],\n                terms: 'Net 30 days',\n                balance: 27500,\n                deposit: 0,\n                sub_total: 27500,\n                total_tax: 2500,\n                total: 27500,\n                tax_code: '1234',\n                notes: 'Some notes about this bill.',\n                status: 'draft',\n                ledger_account: {\n                  id: '123456',\n                  nominal_code: 'N091',\n                  code: '453'\n                },\n                row_version: '1-12345'\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.billsAdd(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  \"/accounting/bills/{id}\":\n    delete:\n      description: Delete Bill\n      operationId: billsDelete\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/DeleteBillResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Delete Bill\n      tags:\n        - Bills\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.billsDelete({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    get:\n      description: Get Bill\n      operationId: billsOne\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetBillResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get Bill\n      tags:\n        - Bills\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.billsOne({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    patch:\n      description: Update Bill\n      operationId: billsUpdate\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Bill\"\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/UpdateBillResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Update Bill\n      tags:\n        - Bills\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              id: 'id_example',\n              bill: {\n                supplier: {\n                  id: '12345',\n                  display_name: 'Windsurf Shop',\n                  address: {\n                    id: '123',\n                    type: 'primary',\n                    string: '25 Spring Street, Blackburn, VIC 3130',\n                    name: 'HQ US',\n                    line1: 'Main street',\n                    line2: 'apt #',\n                    line3: 'Suite #',\n                    line4: 'delivery instructions',\n                    street_number: '25',\n                    city: 'San Francisco',\n                    state: 'CA',\n                    postal_code: '94104',\n                    country: 'US',\n                    latitude: '40.759211',\n                    longitude: '-73.984638',\n                    county: 'Santa Clara',\n                    contact_name: 'Elon Musk',\n                    salutation: 'Mr',\n                    phone_number: '111-111-1111',\n                    fax: '122-111-1111',\n                    email: 'elon@musk.com',\n                    website: 'https://elonmusk.com',\n                    row_version: '1-12345'\n                  }\n                },\n                currency: 'USD',\n                currency_rate: 0.69,\n                tax_inclusive: true,\n                bill_date: '2020-09-30',\n                due_date: '2020-10-30',\n                paid_date: '2020-10-30',\n                po_number: '90000117',\n                reference: '123456',\n                line_items: [\n                  {\n                    row_id: '12345',\n                    code: '120-C',\n                    line_number: 1,\n                    description:\n                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',\n                    type: 'expense_account',\n                    tax_amount: 27500,\n                    total_amount: 27500,\n                    quantity: 1,\n                    unit_price: 27500.5,\n                    unit_of_measure: 'pc.',\n                    discount_percentage: 0.01,\n                    item: {\n                      id: '12344'\n                    },\n                    ledger_account: {\n                      id: '123456',\n                      nominal_code: 'N091',\n                      code: '453'\n                    },\n                    tax_rate: {\n                      id: '123456'\n                    },\n                    row_version: '1-12345'\n                  }\n                ],\n                terms: 'Net 30 days',\n                balance: 27500,\n                deposit: 0,\n                sub_total: 27500,\n                total_tax: 2500,\n                total: 27500,\n                tax_code: '1234',\n                notes: 'Some notes about this bill.',\n                status: 'draft',\n                ledger_account: {\n                  id: '123456',\n                  nominal_code: 'N091',\n                  code: '453'\n                },\n                row_version: '1-12345'\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.billsUpdate(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  /accounting/company-info:\n    get:\n      description: Get company info\n      operationId: companyInfoOne\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetCompanyInfoResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get company info\n      tags:\n        - Company Info\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.companyInfoOne({})\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: companyInfo\n  /accounting/customers:\n    get:\n      description: List Customers\n      operationId: customersAll\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/cursor\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/customersFilter\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetCustomersResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: List Customers\n      tags:\n        - Customers\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.customersAll({})\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: customers\n    post:\n      description: Create Customer\n      operationId: customersAdd\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountingCustomer\"\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/CreateCustomerResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Create Customer\n      tags:\n        - Customers\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              customer: {\n                display_id: 'EMP00101',\n                display_name: 'Windsurf Shop',\n                company_name: 'SpaceX',\n                title: 'CEO',\n                first_name: 'Elon',\n                middle_name: 'D.',\n                last_name: 'Musk',\n                suffix: 'Jr.',\n                individual: true,\n                addresses: [\n                  {\n                    id: '123',\n                    type: 'primary',\n                    string: '25 Spring Street, Blackburn, VIC 3130',\n                    name: 'HQ US',\n                    line1: 'Main street',\n                    line2: 'apt #',\n                    line3: 'Suite #',\n                    line4: 'delivery instructions',\n                    street_number: '25',\n                    city: 'San Francisco',\n                    state: 'CA',\n                    postal_code: '94104',\n                    country: 'US',\n                    latitude: '40.759211',\n                    longitude: '-73.984638',\n                    county: 'Santa Clara',\n                    contact_name: 'Elon Musk',\n                    salutation: 'Mr',\n                    phone_number: '111-111-1111',\n                    fax: '122-111-1111',\n                    email: 'elon@musk.com',\n                    website: 'https://elonmusk.com',\n                    row_version: '1-12345'\n                  }\n                ],\n                notes: 'Some notes about this customer',\n                phone_numbers: [\n                  {\n                    id: '12345',\n                    country_code: '1',\n                    area_code: '323',\n                    number: '111-111-1111',\n                    extension: '105',\n                    type: 'primary'\n                  }\n                ],\n                emails: [\n                  {\n                    id: '123',\n                    email: 'elon@musk.com',\n                    type: 'primary'\n                  }\n                ],\n                websites: [\n                  {\n                    id: '12345',\n                    url: 'http://example.com',\n                    type: 'primary'\n                  }\n                ],\n                tax_rate: {\n                  id: '123456'\n                },\n                tax_number: 'US123945459',\n                currency: 'USD',\n                bank_accounts: [\n                  {\n                    iban: 'CH2989144532982975332',\n                    bic: 'AUDSCHGGXXX',\n                    bsb_number: '062-001',\n                    branch_identifier: '001',\n                    bank_code: 'BNH',\n                    account_number: '123465',\n                    account_name: 'SPACEX LLC',\n                    account_type: 'credit_card',\n                    currency: 'USD'\n                  }\n                ],\n                status: 'active',\n                row_version: '1-12345'\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.customersAdd(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  \"/accounting/customers/{id}\":\n    delete:\n      description: Delete Customer\n      operationId: customersDelete\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/DeleteCustomerResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Delete Customer\n      tags:\n        - Customers\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.customersDelete({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    get:\n      description: Get Customer\n      operationId: customersOne\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetCustomerResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get Customer\n      tags:\n        - Customers\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.customersOne({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    patch:\n      description: Update Customer\n      operationId: customersUpdate\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountingCustomer\"\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/UpdateCustomerResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Update Customer\n      tags:\n        - Customers\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              id: 'id_example',\n              customer: {\n                display_id: 'EMP00101',\n                display_name: 'Windsurf Shop',\n                company_name: 'SpaceX',\n                title: 'CEO',\n                first_name: 'Elon',\n                middle_name: 'D.',\n                last_name: 'Musk',\n                suffix: 'Jr.',\n                individual: true,\n                addresses: [\n                  {\n                    id: '123',\n                    type: 'primary',\n                    string: '25 Spring Street, Blackburn, VIC 3130',\n                    name: 'HQ US',\n                    line1: 'Main street',\n                    line2: 'apt #',\n                    line3: 'Suite #',\n                    line4: 'delivery instructions',\n                    street_number: '25',\n                    city: 'San Francisco',\n                    state: 'CA',\n                    postal_code: '94104',\n                    country: 'US',\n                    latitude: '40.759211',\n                    longitude: '-73.984638',\n                    county: 'Santa Clara',\n                    contact_name: 'Elon Musk',\n                    salutation: 'Mr',\n                    phone_number: '111-111-1111',\n                    fax: '122-111-1111',\n                    email: 'elon@musk.com',\n                    website: 'https://elonmusk.com',\n                    row_version: '1-12345'\n                  }\n                ],\n                notes: 'Some notes about this customer',\n                phone_numbers: [\n                  {\n                    id: '12345',\n                    country_code: '1',\n                    area_code: '323',\n                    number: '111-111-1111',\n                    extension: '105',\n                    type: 'primary'\n                  }\n                ],\n                emails: [\n                  {\n                    id: '123',\n                    email: 'elon@musk.com',\n                    type: 'primary'\n                  }\n                ],\n                websites: [\n                  {\n                    id: '12345',\n                    url: 'http://example.com',\n                    type: 'primary'\n                  }\n                ],\n                tax_rate: {\n                  id: '123456'\n                },\n                tax_number: 'US123945459',\n                currency: 'USD',\n                bank_accounts: [\n                  {\n                    iban: 'CH2989144532982975332',\n                    bic: 'AUDSCHGGXXX',\n                    bsb_number: '062-001',\n                    branch_identifier: '001',\n                    bank_code: 'BNH',\n                    account_number: '123465',\n                    account_name: 'SPACEX LLC',\n                    account_type: 'credit_card',\n                    currency: 'USD'\n                  }\n                ],\n                status: 'active',\n                row_version: '1-12345'\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.customersUpdate(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  /accounting/invoice-items:\n    get:\n      description: List Invoice Items\n      operationId: invoiceItemsAll\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/cursor\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/invoiceItemsFilter\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetInvoiceItemsResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: List Invoice Items\n      tags:\n        - Invoice Items\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.invoiceItemsAll({})\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: invoiceItems\n    post:\n      description: Create Invoice Item\n      operationId: invoiceItemsAdd\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/InvoiceItem\"\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/CreateInvoiceItemResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Create Invoice Item\n      tags:\n        - Invoice Items\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              invoiceItem: {\n                name: 'Model Y',\n                description:\n                  'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',\n                code: '120-C',\n                sold: true,\n                purchased: true,\n                tracked: true,\n                inventory_date: '2020-10-30',\n                type: 'inventory',\n                sales_details: {\n                  unit_price: 27500.5,\n                  unit_of_measure: 'pc.',\n                  tax_inclusive: true,\n                  tax_rate: {\n                    id: '123456'\n                  }\n                },\n                purchase_details: {\n                  unit_price: 27500.5,\n                  unit_of_measure: 'pc.',\n                  tax_inclusive: true,\n                  tax_rate: {\n                    id: '123456'\n                  }\n                },\n                quantity: 1,\n                unit_price: 27500.5,\n                asset_account: {\n                  id: '123456',\n                  nominal_code: 'N091',\n                  code: '453'\n                },\n                income_account: {\n                  id: '123456',\n                  nominal_code: 'N091',\n                  code: '453'\n                },\n                expense_account: {\n                  id: '123456',\n                  nominal_code: 'N091',\n                  code: '453'\n                },\n                active: true,\n                row_version: '1-12345'\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.invoiceItemsAdd(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  \"/accounting/invoice-items/{id}\":\n    delete:\n      description: Delete Invoice Item\n      operationId: invoiceItemsDelete\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/DeleteInvoiceItemResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Delete Invoice Item\n      tags:\n        - Invoice Items\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.invoiceItemsDelete({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    get:\n      description: Get Invoice Item\n      operationId: invoiceItemsOne\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetInvoiceItemResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get Invoice Item\n      tags:\n        - Invoice Items\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.invoiceItemsOne({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    patch:\n      description: Update Invoice Item\n      operationId: invoiceItemsUpdate\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/InvoiceItem\"\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/UpdateInvoiceItemResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Update Invoice Item\n      tags:\n        - Invoice Items\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              id: 'id_example',\n              invoiceItem: {\n                name: 'Model Y',\n                description:\n                  'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',\n                code: '120-C',\n                sold: true,\n                purchased: true,\n                tracked: true,\n                inventory_date: '2020-10-30',\n                type: 'inventory',\n                sales_details: {\n                  unit_price: 27500.5,\n                  unit_of_measure: 'pc.',\n                  tax_inclusive: true,\n                  tax_rate: {\n                    id: '123456'\n                  }\n                },\n                purchase_details: {\n                  unit_price: 27500.5,\n                  unit_of_measure: 'pc.',\n                  tax_inclusive: true,\n                  tax_rate: {\n                    id: '123456'\n                  }\n                },\n                quantity: 1,\n                unit_price: 27500.5,\n                asset_account: {\n                  id: '123456',\n                  nominal_code: 'N091',\n                  code: '453'\n                },\n                income_account: {\n                  id: '123456',\n                  nominal_code: 'N091',\n                  code: '453'\n                },\n                expense_account: {\n                  id: '123456',\n                  nominal_code: 'N091',\n                  code: '453'\n                },\n                active: true,\n                row_version: '1-12345'\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.invoiceItemsUpdate(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  /accounting/invoices:\n    get:\n      description: List Invoices\n      operationId: invoicesAll\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/cursor\"\n        - $ref: \"#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetInvoicesResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: List Invoices\n      tags:\n        - Invoices\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.invoicesAll({})\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: invoices\n    post:\n      description: Create Invoice\n      operationId: invoicesAdd\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Invoice\"\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/CreateInvoiceResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Create Invoice\n      tags:\n        - Invoices\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              invoice: {\n                type: 'service',\n                number: 'OIT00546',\n                customer: {\n                  id: '12345',\n                  display_name: 'Windsurf Shop'\n                },\n                invoice_date: '2020-09-30',\n                due_date: '2020-10-30',\n                terms: 'Net 30 days',\n                po_number: '90000117',\n                reference: '123456',\n                status: 'draft',\n                invoice_sent: true,\n                currency: 'USD',\n                currency_rate: 0.69,\n                tax_inclusive: true,\n                sub_total: 27500,\n                total_tax: 2500,\n                tax_code: '1234',\n                total: 27500,\n                balance: 27500,\n                deposit: 0,\n                customer_memo: 'Thank you for your business and have a great day!',\n                line_items: [\n                  {\n                    row_id: '12345',\n                    code: '120-C',\n                    line_number: 1,\n                    description:\n                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',\n                    type: 'sales_item',\n                    tax_amount: 27500,\n                    total_amount: 27500,\n                    quantity: 1,\n                    unit_price: 27500.5,\n                    unit_of_measure: 'pc.',\n                    discount_percentage: 0.01,\n                    item: {\n                      id: '12344'\n                    },\n                    tax_rate: {\n                      id: '123456'\n                    },\n                    ledger_account: {\n                      id: '123456',\n                      nominal_code: 'N091',\n                      code: '453'\n                    },\n                    row_version: '1-12345'\n                  }\n                ],\n                billing_address: {\n                  id: '123',\n                  type: 'primary',\n                  string: '25 Spring Street, Blackburn, VIC 3130',\n                  name: 'HQ US',\n                  line1: 'Main street',\n                  line2: 'apt #',\n                  line3: 'Suite #',\n                  line4: 'delivery instructions',\n                  street_number: '25',\n                  city: 'San Francisco',\n                  state: 'CA',\n                  postal_code: '94104',\n                  country: 'US',\n                  latitude: '40.759211',\n                  longitude: '-73.984638',\n                  county: 'Santa Clara',\n                  contact_name: 'Elon Musk',\n                  salutation: 'Mr',\n                  phone_number: '111-111-1111',\n                  fax: '122-111-1111',\n                  email: 'elon@musk.com',\n                  website: 'https://elonmusk.com',\n                  row_version: '1-12345'\n                },\n                shipping_address: {\n                  id: '123',\n                  type: 'primary',\n                  string: '25 Spring Street, Blackburn, VIC 3130',\n                  name: 'HQ US',\n                  line1: 'Main street',\n                  line2: 'apt #',\n                  line3: 'Suite #',\n                  line4: 'delivery instructions',\n                  street_number: '25',\n                  city: 'San Francisco',\n                  state: 'CA',\n                  postal_code: '94104',\n                  country: 'US',\n                  latitude: '40.759211',\n                  longitude: '-73.984638',\n                  county: 'Santa Clara',\n                  contact_name: 'Elon Musk',\n                  salutation: 'Mr',\n                  phone_number: '111-111-1111',\n                  fax: '122-111-1111',\n                  email: 'elon@musk.com',\n                  website: 'https://elonmusk.com',\n                  row_version: '1-12345'\n                },\n                template_id: '123456',\n                row_version: '1-12345'\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.invoicesAdd(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  \"/accounting/invoices/{id}\":\n    delete:\n      description: Delete Invoice\n      operationId: invoicesDelete\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/DeleteInvoiceResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Delete Invoice\n      tags:\n        - Invoices\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.invoicesDelete({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    get:\n      description: Get Invoice\n      operationId: invoicesOne\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetInvoiceResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get Invoice\n      tags:\n        - Invoices\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.invoicesOne({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    patch:\n      description: Update Invoice\n      operationId: invoicesUpdate\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Invoice\"\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/UpdateInvoiceResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Update Invoice\n      tags:\n        - Invoices\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              id: 'id_example',\n              invoice: {\n                type: 'service',\n                number: 'OIT00546',\n                customer: {\n                  id: '12345',\n                  display_name: 'Windsurf Shop'\n                },\n                invoice_date: '2020-09-30',\n                due_date: '2020-10-30',\n                terms: 'Net 30 days',\n                po_number: '90000117',\n                reference: '123456',\n                status: 'draft',\n                invoice_sent: true,\n                currency: 'USD',\n                currency_rate: 0.69,\n                tax_inclusive: true,\n                sub_total: 27500,\n                total_tax: 2500,\n                tax_code: '1234',\n                total: 27500,\n                balance: 27500,\n                deposit: 0,\n                customer_memo: 'Thank you for your business and have a great day!',\n                line_items: [\n                  {\n                    row_id: '12345',\n                    code: '120-C',\n                    line_number: 1,\n                    description:\n                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',\n                    type: 'sales_item',\n                    tax_amount: 27500,\n                    total_amount: 27500,\n                    quantity: 1,\n                    unit_price: 27500.5,\n                    unit_of_measure: 'pc.',\n                    discount_percentage: 0.01,\n                    item: {\n                      id: '12344'\n                    },\n                    tax_rate: {\n                      id: '123456'\n                    },\n                    ledger_account: {\n                      id: '123456',\n                      nominal_code: 'N091',\n                      code: '453'\n                    },\n                    row_version: '1-12345'\n                  }\n                ],\n                billing_address: {\n                  id: '123',\n                  type: 'primary',\n                  string: '25 Spring Street, Blackburn, VIC 3130',\n                  name: 'HQ US',\n                  line1: 'Main street',\n                  line2: 'apt #',\n                  line3: 'Suite #',\n                  line4: 'delivery instructions',\n                  street_number: '25',\n                  city: 'San Francisco',\n                  state: 'CA',\n                  postal_code: '94104',\n                  country: 'US',\n                  latitude: '40.759211',\n                  longitude: '-73.984638',\n                  county: 'Santa Clara',\n                  contact_name: 'Elon Musk',\n                  salutation: 'Mr',\n                  phone_number: '111-111-1111',\n                  fax: '122-111-1111',\n                  email: 'elon@musk.com',\n                  website: 'https://elonmusk.com',\n                  row_version: '1-12345'\n                },\n                shipping_address: {\n                  id: '123',\n                  type: 'primary',\n                  string: '25 Spring Street, Blackburn, VIC 3130',\n                  name: 'HQ US',\n                  line1: 'Main street',\n                  line2: 'apt #',\n                  line3: 'Suite #',\n                  line4: 'delivery instructions',\n                  street_number: '25',\n                  city: 'San Francisco',\n                  state: 'CA',\n                  postal_code: '94104',\n                  country: 'US',\n                  latitude: '40.759211',\n                  longitude: '-73.984638',\n                  county: 'Santa Clara',\n                  contact_name: 'Elon Musk',\n                  salutation: 'Mr',\n                  phone_number: '111-111-1111',\n                  fax: '122-111-1111',\n                  email: 'elon@musk.com',\n                  website: 'https://elonmusk.com',\n                  row_version: '1-12345'\n                },\n                template_id: '123456',\n                row_version: '1-12345'\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.invoicesUpdate(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  /accounting/ledger-accounts:\n    get:\n      description: List Ledger Accounts\n      operationId: ledgerAccountsAll\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/cursor\"\n        - $ref: \"#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetLedgerAccountsResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: List Ledger Accounts\n      tags:\n        - Ledger Accounts\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.ledgerAccountsAll({})\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: ledgerAccounts\n    post:\n      description: Create Ledger Account\n      operationId: ledgerAccountsAdd\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LedgerAccount\"\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/CreateLedgerAccountResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Create Ledger Account\n      tags:\n        - Ledger Accounts\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              ledgerAccount: {\n                display_id: '1-12345',\n                nominal_code: 'N091',\n                code: '453',\n                classification: 'asset',\n                type: 'bank',\n                sub_type: 'CHECKING_ACCOUNT',\n                name: 'Bank account',\n                fully_qualified_name: 'Asset.Bank.Checking_Account',\n                description: 'Main checking account',\n                opening_balance: 75000,\n                current_balance: 20000,\n                currency: 'USD',\n                tax_type: 'NONE',\n                tax_rate: {\n                  id: '123456'\n                },\n                level: 1,\n                active: true,\n                status: 'active',\n                header: true,\n                bank_account: {\n                  iban: 'CH2989144532982975332',\n                  bic: 'AUDSCHGGXXX',\n                  bsb_number: '062-001',\n                  branch_identifier: '001',\n                  bank_code: 'BNH',\n                  account_number: '123465',\n                  account_name: 'SPACEX LLC',\n                  account_type: 'credit_card',\n                  currency: 'USD'\n                },\n                parent_account: {\n                  id: '12345',\n                  name: 'Bank Accounts',\n                  display_id: '1-1100'\n                },\n                sub_account: false,\n                last_reconciliation_date: '2020-09-30',\n                row_version: '1-12345'\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.ledgerAccountsAdd(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  \"/accounting/ledger-accounts/{id}\":\n    delete:\n      description: Delete Ledger Account\n      operationId: ledgerAccountsDelete\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/DeleteLedgerAccountResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Delete Ledger Account\n      tags:\n        - Ledger Accounts\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.ledgerAccountsDelete({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    get:\n      description: Get Ledger Account\n      operationId: ledgerAccountsOne\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetLedgerAccountResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get Ledger Account\n      tags:\n        - Ledger Accounts\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.ledgerAccountsOne({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    patch:\n      description: Update Ledger Account\n      operationId: ledgerAccountsUpdate\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LedgerAccount\"\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/UpdateLedgerAccountResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Update Ledger Account\n      tags:\n        - Ledger Accounts\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              id: 'id_example',\n              ledgerAccount: {\n                display_id: '1-12345',\n                nominal_code: 'N091',\n                code: '453',\n                classification: 'asset',\n                type: 'bank',\n                sub_type: 'CHECKING_ACCOUNT',\n                name: 'Bank account',\n                fully_qualified_name: 'Asset.Bank.Checking_Account',\n                description: 'Main checking account',\n                opening_balance: 75000,\n                current_balance: 20000,\n                currency: 'USD',\n                tax_type: 'NONE',\n                tax_rate: {\n                  id: '123456'\n                },\n                level: 1,\n                active: true,\n                status: 'active',\n                header: true,\n                bank_account: {\n                  iban: 'CH2989144532982975332',\n                  bic: 'AUDSCHGGXXX',\n                  bsb_number: '062-001',\n                  branch_identifier: '001',\n                  bank_code: 'BNH',\n                  account_number: '123465',\n                  account_name: 'SPACEX LLC',\n                  account_type: 'credit_card',\n                  currency: 'USD'\n                },\n                parent_account: {\n                  id: '12345',\n                  name: 'Bank Accounts',\n                  display_id: '1-1100'\n                },\n                sub_account: false,\n                last_reconciliation_date: '2020-09-30',\n                row_version: '1-12345'\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.ledgerAccountsUpdate(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  /accounting/payments:\n    get:\n      description: List Payments\n      operationId: paymentsAll\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/cursor\"\n        - $ref: \"#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetPaymentsResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: List Payments\n      tags:\n        - Payments\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.paymentsAll({})\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: Payments\n    post:\n      description: Create Payment\n      operationId: paymentsAdd\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Payment\"\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/CreatePaymentResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Create Payment\n      tags:\n        - Payments\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              payment: {\n                currency: 'USD',\n                currency_rate: 0.69,\n                total_amount: 49.99,\n                reference: '123456',\n                payment_method: 'Credit Card',\n                payment_method_reference: '123456',\n                accounts_receivable_account_type: 'Account',\n                accounts_receivable_account_id: '123456',\n                account: {\n                  id: '123456',\n                  nominal_code: 'N091',\n                  code: '453'\n                },\n                transaction_date: '2021-05-01T12:00:00.000Z',\n                customer: {\n                  id: '12345',\n                  display_name: 'Windsurf Shop'\n                },\n                reconciled: true,\n                status: 'authorised',\n                type: 'accounts_receivable',\n                allocations: [\n                  {\n                    id: '123456',\n                    type: 'invoice',\n                    amount: 49.99\n                  }\n                ],\n                note: 'Some notes about this payment',\n                row_version: '1-12345'\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.paymentsAdd(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  \"/accounting/payments/{id}\":\n    delete:\n      description: Delete Payment\n      operationId: paymentsDelete\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/DeletePaymentResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Delete Payment\n      tags:\n        - Payments\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.paymentsDelete({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    get:\n      description: Get Payment\n      operationId: paymentsOne\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetPaymentResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get Payment\n      tags:\n        - Payments\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.paymentsOne({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    patch:\n      description: Update Payment\n      operationId: paymentsUpdate\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Payment\"\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/UpdatePaymentResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Update Payment\n      tags:\n        - Payments\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              id: 'id_example',\n              payment: {\n                currency: 'USD',\n                currency_rate: 0.69,\n                total_amount: 49.99,\n                reference: '123456',\n                payment_method: 'Credit Card',\n                payment_method_reference: '123456',\n                accounts_receivable_account_type: 'Account',\n                accounts_receivable_account_id: '123456',\n                account: {\n                  id: '123456',\n                  nominal_code: 'N091',\n                  code: '453'\n                },\n                transaction_date: '2021-05-01T12:00:00.000Z',\n                customer: {\n                  id: '12345',\n                  display_name: 'Windsurf Shop'\n                },\n                reconciled: true,\n                status: 'authorised',\n                type: 'accounts_receivable',\n                allocations: [\n                  {\n                    id: '123456',\n                    type: 'invoice',\n                    amount: 49.99\n                  }\n                ],\n                note: 'Some notes about this payment',\n                row_version: '1-12345'\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.paymentsUpdate(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  /accounting/suppliers:\n    get:\n      description: List Suppliers\n      operationId: suppliersAll\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/cursor\"\n        - $ref: \"#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetSuppliersResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: List Suppliers\n      tags:\n        - Suppliers\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.suppliersAll({})\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: Suppliers\n    post:\n      description: Create Supplier\n      operationId: suppliersAdd\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Supplier\"\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/CreateSupplierResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Create Supplier\n      tags:\n        - Suppliers\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              supplier: {\n                company_name: 'SpaceX',\n                display_name: 'Windsurf Shop',\n                title: 'CEO',\n                first_name: 'Elon',\n                middle_name: 'D.',\n                last_name: 'Musk',\n                suffix: 'Jr.',\n                addresses: [\n                  {\n                    id: '123',\n                    type: 'primary',\n                    string: '25 Spring Street, Blackburn, VIC 3130',\n                    name: 'HQ US',\n                    line1: 'Main street',\n                    line2: 'apt #',\n                    line3: 'Suite #',\n                    line4: 'delivery instructions',\n                    street_number: '25',\n                    city: 'San Francisco',\n                    state: 'CA',\n                    postal_code: '94104',\n                    country: 'US',\n                    latitude: '40.759211',\n                    longitude: '-73.984638',\n                    county: 'Santa Clara',\n                    contact_name: 'Elon Musk',\n                    salutation: 'Mr',\n                    phone_number: '111-111-1111',\n                    fax: '122-111-1111',\n                    email: 'elon@musk.com',\n                    website: 'https://elonmusk.com',\n                    row_version: '1-12345'\n                  }\n                ],\n                notes: 'Some notes about this supplier',\n                phone_numbers: [\n                  {\n                    id: '12345',\n                    country_code: '1',\n                    area_code: '323',\n                    number: '111-111-1111',\n                    extension: '105',\n                    type: 'primary'\n                  }\n                ],\n                emails: [\n                  {\n                    id: '123',\n                    email: 'elon@musk.com',\n                    type: 'primary'\n                  }\n                ],\n                websites: [\n                  {\n                    id: '12345',\n                    url: 'http://example.com',\n                    type: 'primary'\n                  }\n                ],\n                bank_accounts: [\n                  {\n                    iban: 'CH2989144532982975332',\n                    bic: 'AUDSCHGGXXX',\n                    bsb_number: '062-001',\n                    branch_identifier: '001',\n                    bank_code: 'BNH',\n                    account_number: '123465',\n                    account_name: 'SPACEX LLC',\n                    account_type: 'credit_card',\n                    currency: 'USD'\n                  }\n                ],\n                tax_rate: {\n                  id: '123456'\n                },\n                tax_number: 'US123945459',\n                currency: 'USD',\n                account: {\n                  id: '123456',\n                  nominal_code: 'N091',\n                  code: '453'\n                },\n                status: 'active',\n                row_version: '1-12345'\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.suppliersAdd(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  \"/accounting/suppliers/{id}\":\n    delete:\n      description: Delete Supplier\n      operationId: suppliersDelete\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/DeleteSupplierResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Delete Supplier\n      tags:\n        - Suppliers\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.suppliersDelete({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    get:\n      description: Get Supplier\n      operationId: suppliersOne\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetSupplierResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get Supplier\n      tags:\n        - Suppliers\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.suppliersOne({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    patch:\n      description: Update Supplier\n      operationId: suppliersUpdate\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Supplier\"\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/UpdateSupplierResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Update Supplier\n      tags:\n        - Suppliers\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              id: 'id_example',\n              supplier: {\n                company_name: 'SpaceX',\n                display_name: 'Windsurf Shop',\n                title: 'CEO',\n                first_name: 'Elon',\n                middle_name: 'D.',\n                last_name: 'Musk',\n                suffix: 'Jr.',\n                addresses: [\n                  {\n                    id: '123',\n                    type: 'primary',\n                    string: '25 Spring Street, Blackburn, VIC 3130',\n                    name: 'HQ US',\n                    line1: 'Main street',\n                    line2: 'apt #',\n                    line3: 'Suite #',\n                    line4: 'delivery instructions',\n                    street_number: '25',\n                    city: 'San Francisco',\n                    state: 'CA',\n                    postal_code: '94104',\n                    country: 'US',\n                    latitude: '40.759211',\n                    longitude: '-73.984638',\n                    county: 'Santa Clara',\n                    contact_name: 'Elon Musk',\n                    salutation: 'Mr',\n                    phone_number: '111-111-1111',\n                    fax: '122-111-1111',\n                    email: 'elon@musk.com',\n                    website: 'https://elonmusk.com',\n                    row_version: '1-12345'\n                  }\n                ],\n                notes: 'Some notes about this supplier',\n                phone_numbers: [\n                  {\n                    id: '12345',\n                    country_code: '1',\n                    area_code: '323',\n                    number: '111-111-1111',\n                    extension: '105',\n                    type: 'primary'\n                  }\n                ],\n                emails: [\n                  {\n                    id: '123',\n                    email: 'elon@musk.com',\n                    type: 'primary'\n                  }\n                ],\n                websites: [\n                  {\n                    id: '12345',\n                    url: 'http://example.com',\n                    type: 'primary'\n                  }\n                ],\n                bank_accounts: [\n                  {\n                    iban: 'CH2989144532982975332',\n                    bic: 'AUDSCHGGXXX',\n                    bsb_number: '062-001',\n                    branch_identifier: '001',\n                    bank_code: 'BNH',\n                    account_number: '123465',\n                    account_name: 'SPACEX LLC',\n                    account_type: 'credit_card',\n                    currency: 'USD'\n                  }\n                ],\n                tax_rate: {\n                  id: '123456'\n                },\n                tax_number: 'US123945459',\n                currency: 'USD',\n                account: {\n                  id: '123456',\n                  nominal_code: 'N091',\n                  code: '453'\n                },\n                status: 'active',\n                row_version: '1-12345'\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.suppliersUpdate(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  /accounting/tax-rates:\n    get:\n      description: |\n        List Tax Rates. Note: Not all connectors return the actual rate/percentage value. In this case, only the tax code or reference is returned. Connectors Affected: Quickbooks\n      operationId: taxRatesAll\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/cursor\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/taxRatesFilter\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetTaxRatesResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: List Tax Rates\n      tags:\n        - Tax Rates\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.taxRatesAll({})\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: taxRates\n    post:\n      description: Create Tax Rate\n      operationId: taxRatesAdd\n      parameters:\n        - $ref: \"#/components/parameters/raw\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TaxRate\"\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/CreateTaxRateResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Create Tax Rate\n      tags:\n        - Tax Rates\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              taxRate: {\n                id: '1234',\n                name: 'GST on Purchases',\n                code: 'ABN',\n                description: 'Reduced rate GST Purchases',\n                effective_tax_rate: 10,\n                total_tax_rate: 10,\n                tax_payable_account_id: '123456',\n                tax_remitted_account_id: '123456',\n                components: [\n                  {\n                    id: '10',\n                    name: 'GST',\n                    rate: 10,\n                    compound: true\n                  }\n                ],\n                type: 'NONE',\n                report_tax_type: 'NONE',\n                original_tax_rate_id: '12345',\n                status: 'active',\n                row_version: '1-12345'\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.taxRatesAdd(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  \"/accounting/tax-rates/{id}\":\n    delete:\n      description: Delete Tax Rate\n      operationId: taxRatesDelete\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/DeleteTaxRateResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Delete Tax Rate\n      tags:\n        - Tax Rates\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.taxRatesDelete({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    get:\n      description: |\n        Get Tax Rate. Note: Not all connectors return the actual rate/percentage value. In this case, only the tax code or reference is returned. Support will soon be added to return the actual rate/percentage by doing additional calls in the background to provide the full view of a given tax rate. Connectors Affected: Quickbooks\n      operationId: taxRatesOne\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetTaxRateResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get Tax Rate\n      tags:\n        - Tax Rates\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.accounting.taxRatesOne({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    patch:\n      description: Update Tax Rate\n      operationId: taxRatesUpdate\n      parameters:\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/consumerId\"\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/serviceId\"\n        - $ref: \"#/components/parameters/raw\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TaxRate\"\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/UpdateTaxRateResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Update Tax Rate\n      tags:\n        - Tax Rates\n      x-apideck-api: accounting\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              id: 'id_example',\n              taxRate: {\n                id: '1234',\n                name: 'GST on Purchases',\n                code: 'ABN',\n                description: 'Reduced rate GST Purchases',\n                effective_tax_rate: 10,\n                total_tax_rate: 10,\n                tax_payable_account_id: '123456',\n                tax_remitted_account_id: '123456',\n                components: [\n                  {\n                    id: '10',\n                    name: 'GST',\n                    rate: 10,\n                    compound: true\n                  }\n                ],\n                type: 'NONE',\n                report_tax_type: 'NONE',\n                original_tax_rate_id: '12345',\n                status: 'active',\n                row_version: '1-12345'\n              }\n            }\n\n            try {\n              const { data } = await apideck.accounting.taxRatesUpdate(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\ncomponents:\n  parameters:\n    applicationId:\n      description: The ID of your Unify application\n      in: header\n      name: x-apideck-app-id\n      required: true\n      schema:\n        type: string\n    consumerId:\n      description: ID of the consumer which you want to get or push data from\n      in: header\n      name: x-apideck-consumer-id\n      required: true\n      schema:\n        type: string\n    cursor:\n      description: Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.\n      in: query\n      name: cursor\n      schema:\n        nullable: true\n        type: string\n    customersFilter:\n      description: Apply filters (beta)\n      explode: true\n      in: query\n      name: filter\n      schema:\n        $ref: \"#/components/schemas/CustomersFilter\"\n      style: deepObject\n    id:\n      description: ID of the record you are acting upon.\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n    invoiceItemsFilter:\n      description: Apply filters (beta)\n      explode: true\n      in: query\n      name: filter\n      schema:\n        $ref: \"#/components/schemas/InvoiceItemsFilter\"\n      style: deepObject\n    limit:\n      description: Number of records to return\n      in: query\n      name: limit\n      schema:\n        default: 20\n        maximum: 200\n        minimum: 1\n        type: integer\n    passThrough:\n      description: Optional unmapped key/values that will be passed through to downstream as query parameters\n      explode: true\n      in: query\n      name: pass_through\n      schema:\n        $ref: \"#/components/schemas/Passthrough\"\n      style: deepObject\n    raw:\n      description: Include raw response. Mostly used for debugging purposes\n      in: query\n      name: raw\n      schema:\n        default: false\n        type: boolean\n    serviceId:\n      description: Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.\n      in: header\n      name: x-apideck-service-id\n      schema:\n        type: string\n    taxRatesFilter:\n      description: Apply filters (beta)\n      explode: true\n      in: query\n      name: filter\n      schema:\n        $ref: \"#/components/schemas/TaxRatesFilter\"\n      style: deepObject\n  responses:\n    BadRequestResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/BadRequestResponse\"\n      description: Bad Request\n    CompanyInfo:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CompanyInfo\"\n      description: Company Info\n    CreateBillResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CreateBillResponse\"\n      description: Bill created\n    CreateCustomerResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CreateCustomerResponse\"\n      description: Customers\n    CreateInvoiceItemResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CreateInvoiceItemResponse\"\n      description: InvoiceItems\n    CreateInvoiceResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CreateInvoiceResponse\"\n      description: Invoice created\n    CreateLedgerAccountResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CreateLedgerAccountResponse\"\n      description: LedgerAccount created\n    CreatePaymentResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CreatePaymentResponse\"\n      description: Payment created\n    CreateSupplierResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CreateSupplierResponse\"\n      description: Supplier created\n    CreateTaxRateResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CreateTaxRateResponse\"\n      description: TaxRate created\n    DeleteBillResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/DeleteBillResponse\"\n      description: Bill deleted\n    DeleteCustomerResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/DeleteCustomerResponse\"\n      description: Customers\n    DeleteInvoiceItemResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/DeleteTaxRateResponse\"\n      description: InvoiceItems\n    DeleteInvoiceResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/DeleteInvoiceResponse\"\n      description: Invoice deleted\n    DeleteLedgerAccountResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/DeleteLedgerAccountResponse\"\n      description: LedgerAccount deleted\n    DeletePaymentResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/DeletePaymentResponse\"\n      description: Payment deleted\n    DeleteSupplierResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/DeleteSupplierResponse\"\n      description: Supplier deleted\n    DeleteTaxRateResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/DeleteTaxRateResponse\"\n      description: TaxRates deleted\n    GetBalanceSheetResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetBalanceSheetResponse\"\n      description: BalanceSheet\n    GetBillResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetBillResponse\"\n      description: Bill\n    GetBillsResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetBillsResponse\"\n      description: Bills\n    GetCompanyInfoResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetCompanyInfoResponse\"\n      description: CompanyInfo\n    GetCustomerResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetCustomerResponse\"\n      description: Customer\n    GetCustomersResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetCustomersResponse\"\n      description: Customers\n    GetInvoiceItemResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetInvoiceItemResponse\"\n      description: InvoiceItems\n    GetInvoiceItemsResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetInvoiceItemsResponse\"\n      description: InvoiceItems\n    GetInvoiceResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetInvoiceResponse\"\n      description: Invoice\n    GetInvoicesResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetInvoicesResponse\"\n      description: Invoices\n    GetLedgerAccountResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetLedgerAccountResponse\"\n      description: LedgerAccount\n    GetLedgerAccountsResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetLedgerAccountsResponse\"\n      description: LedgerAccounts\n    GetPaymentResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetPaymentResponse\"\n      description: Payment\n    GetPaymentsResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetPaymentsResponse\"\n      description: Payments\n    GetSupplierResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetSupplierResponse\"\n      description: Supplier\n    GetSuppliersResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetSuppliersResponse\"\n      description: Suppliers\n    GetTaxRateResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetTaxRateResponse\"\n      description: TaxRate\n    GetTaxRatesResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetTaxRatesResponse\"\n      description: TaxRates\n    NotFoundResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/NotFoundResponse\"\n      description: The specified resource was not found\n    NotImplementedResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/NotImplementedResponse\"\n      description: Not Implemented\n    PaymentRequiredResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PaymentRequiredResponse\"\n      description: Payment Required\n    TooManyRequestsResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/TooManyRequestsResponse\"\n      description: Too Many Requests\n    UnauthorizedResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UnauthorizedResponse\"\n      description: Unauthorized\n    UnexpectedErrorResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UnexpectedErrorResponse\"\n      description: Unexpected error\n    UnprocessableResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UnprocessableResponse\"\n      description: Unprocessable\n    UpdateBillResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UpdateBillResponse\"\n      description: Bill Updated\n    UpdateCustomerResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UpdateCustomerResponse\"\n      description: Customers\n    UpdateInvoiceItemResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UpdateInvoiceItemsResponse\"\n      description: InvoiceItems\n    UpdateInvoiceResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UpdateInvoiceResponse\"\n      description: Invoice updated\n    UpdateLedgerAccountResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UpdateLedgerAccountResponse\"\n      description: LedgerAccount updated\n    UpdatePaymentResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UpdatePaymentResponse\"\n      description: Payment Updated\n    UpdateSupplierResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UpdateSupplierResponse\"\n      description: Supplier updated\n    UpdateTaxRateResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UpdateTaxRateResponse\"\n      description: TaxRate updated\n  schemas:\n    AccountingCustomer:\n      properties:\n        addresses:\n          items:\n            $ref: \"#/components/schemas/Address\"\n          type: array\n        bank_accounts:\n          items:\n            $ref: \"#/components/schemas/BankAccount\"\n          type: array\n        company_name:\n          $ref: \"#/components/schemas/CompanyName\"\n        created_at:\n          $ref: \"#/components/schemas/CreatedAt\"\n        created_by:\n          $ref: \"#/components/schemas/CreatedBy\"\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        display_id:\n          description: Display ID\n          example: EMP00101\n          nullable: true\n          title: Display ID\n          type: string\n        display_name:\n          description: Display Name\n          example: Windsurf Shop\n          nullable: true\n          title: Display Name\n          type: string\n        emails:\n          items:\n            $ref: \"#/components/schemas/Email\"\n          type: array\n        first_name:\n          $ref: \"#/components/schemas/FirstName\"\n        id:\n          $ref: \"#/components/schemas/Id\"\n        individual:\n          description: Is this an individual or business customer\n          example: true\n          nullable: true\n          title: Is individual\n          type: boolean\n        last_name:\n          $ref: \"#/components/schemas/LastName\"\n        middle_name:\n          $ref: \"#/components/schemas/MiddleName\"\n        notes:\n          description: Some notes about this customer\n          example: Some notes about this customer\n          nullable: true\n          title: Notes\n          type: string\n        phone_numbers:\n          items:\n            $ref: \"#/components/schemas/PhoneNumber\"\n          type: array\n        row_version:\n          $ref: \"#/components/schemas/RowVersion\"\n        status:\n          description: Customer status\n          enum:\n            - active\n            - inactive\n            - archived\n            - gdpr-erasure-request\n            - unknown\n          example: active\n          nullable: true\n          title: Status\n          type: string\n          x-apideck-enum-id: customers.status\n          x-graphql-type-name: CustomerStatus\n        suffix:\n          $ref: \"#/components/schemas/Suffix\"\n        tax_number:\n          $ref: \"#/components/schemas/TaxNumber\"\n        tax_rate:\n          $ref: \"#/components/schemas/LinkedTaxRate\"\n        title:\n          $ref: \"#/components/schemas/Title\"\n        updated_at:\n          $ref: \"#/components/schemas/UpdatedAt\"\n        updated_by:\n          $ref: \"#/components/schemas/UpdatedBy\"\n        websites:\n          items:\n            $ref: \"#/components/schemas/Website\"\n          type: array\n      type: object\n      x-apideck-weights:\n        addresses: high\n        bank_accounts: high\n        company_name: high\n        created_at: medium\n        created_by: edge-case\n        currency: medium\n        display_id: edge-case\n        display_name: edge-case\n        emails: high\n        first_name: high\n        id: high\n        individual: medium\n        last_name: high\n        middle_name: low\n        notes: low\n        phone_numbers: high\n        row_version: edge-case\n        status: high\n        suffix: low\n        tax_number: medium\n        tax_rate: medium\n        title: critical\n        updated_at: medium\n        updated_by: edge-case\n        websites: medium\n      x-graphql-type-name: Customer\n    AccountingEventType:\n      enum:\n        - \"*\"\n        - accounting.customer.created\n        - accounting.customer.updated\n        - accounting.customer.deleted\n        - accounting.invoice.created\n        - accounting.invoice.updated\n        - accounting.invoice.deleted\n        - accounting.invoice_item.created\n        - accounting.invoice_item.updated\n        - accounting.invoice_item.deleted\n        - accounting.ledger_account.created\n        - accounting.ledger_account.updated\n        - accounting.ledger_account.deleted\n        - accounting.tax_rate.created\n        - accounting.tax_rate.updated\n        - accounting.tax_rate.deleted\n        - accounting.bill.created\n        - accounting.bill.updated\n        - accounting.bill.deleted\n        - accounting.payment.created\n        - accounting.payment.updated\n        - accounting.payment.deleted\n        - accounting.supplier.created\n        - accounting.supplier.updated\n        - accounting.supplier.deleted\n      example: accounting.invoice.created\n      type: string\n      x-apideck-enum-id: accounting.events\n    AccountingWebhookEvent:\n      allOf:\n        - properties:\n            entity_id:\n              description: The service provider's ID of the entity that triggered this event\n              example: 123456ASDF\n              type: string\n            entity_type:\n              description: The type entity that triggered this event\n              example: Company\n              type: string\n            entity_url:\n              description: The url to retrieve entity detail.\n              example: https://unify.apideck.com/crm/contacts/123456\n              type: string\n            event_id:\n              description: Unique reference to this request event\n              example: 9755c355-56c3-4a2f-a2da-86ff4411fccb\n              type: string\n            execution_attempt:\n              description: The current count this request event has been attempted\n              example: 2\n              type: number\n            occurred_at:\n              description: ISO Datetime for when the original event occurred\n              example: 2021-10-01T03:14:55.419Z\n              type: string\n            service_id:\n              description: Service provider identifier\n              example: close\n              type: string\n          type: object\n        - properties:\n            event_type:\n              $ref: \"#/components/schemas/AccountingEventType\"\n          type: object\n      x-sdk-exclude: true\n    Active:\n      example: true\n      nullable: true\n      title: Is active\n      type: boolean\n    Address:\n      additionalProperties: false\n      properties:\n        city:\n          description: Name of city.\n          example: San Francisco\n          nullable: true\n          type: string\n        contact_name:\n          example: Elon Musk\n          nullable: true\n          type: string\n        country:\n          description: country code according to ISO 3166-1 alpha-2.\n          example: US\n          nullable: true\n          type: string\n        county:\n          description: Address field that holds a sublocality, such as a county\n          example: Santa Clara\n          nullable: true\n          type: string\n        email:\n          example: elon@musk.com\n          nullable: true\n          type: string\n        fax:\n          example: 122-111-1111\n          nullable: true\n          type: string\n        id:\n          example: \"123\"\n          nullable: true\n          type: string\n        latitude:\n          example: \"40.759211\"\n          nullable: true\n          type: string\n        line1:\n          description: \"Line 1 of the address e.g. number, street, suite, apt #, etc.\"\n          example: Main street\n          nullable: true\n          type: string\n        line2:\n          description: Line 2 of the address\n          example: \"apt #\"\n          nullable: true\n          type: string\n        line3:\n          description: Line 3 of the address\n          example: \"Suite #\"\n          nullable: true\n          type: string\n        line4:\n          description: Line 4 of the address\n          example: delivery instructions\n          nullable: true\n          type: string\n        longitude:\n          example: \"-73.984638\"\n          nullable: true\n          type: string\n        name:\n          example: HQ US\n          nullable: true\n          type: string\n        phone_number:\n          example: 111-111-1111\n          nullable: true\n          type: string\n        postal_code:\n          description: Zip code or equivalent.\n          example: \"94104\"\n          nullable: true\n          type: string\n        row_version:\n          $ref: \"#/components/schemas/RowVersion\"\n        salutation:\n          example: Mr\n          nullable: true\n          type: string\n        state:\n          description: Name of state\n          example: CA\n          nullable: true\n          type: string\n        street_number:\n          description: Street number\n          example: \"25\"\n          nullable: true\n          type: string\n        string:\n          example: 25 Spring Street, Blackburn, VIC 3130\n          nullable: true\n          title: The address string. Some APIs don't provide structured address data.\n          type: string\n        type:\n          enum:\n            - primary\n            - secondary\n            - home\n            - office\n            - shipping\n            - billing\n            - other\n          example: primary\n          type: string\n          x-apideck-enum-id: addresses.type\n          x-graphql-type-name: AddressType\n        website:\n          example: https://elonmusk.com\n          nullable: true\n          type: string\n      type: object\n      x-apideck-weights:\n        city: high\n        contact_name: edge-case\n        country: high\n        county: edge-case\n        email: edge-case\n        fax: edge-case\n        id: edge-case\n        latitude: low\n        line1: high\n        line2: low\n        line3: edge-case\n        line4: edge-case\n        longitude: low\n        name: edge-case\n        phone_number: edge-case\n        postal_code: high\n        row_version: edge-case\n        salutation: edge-case\n        state: high\n        street_number: low\n        string: low\n        type: critical\n        website: edge-case\n    BadRequestResponse:\n      properties:\n        detail:\n          anyOf:\n            - example: Missing property foobar\n              type: string\n            - example:\n                missing:\n                  - foobar: required\n              type: object\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Bad Request\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Invalid Params\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#requestvalidationerror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 400\n          type: number\n        type_name:\n          description: The type of error returned\n          example: RequestValidationError\n          type: string\n    BalanceSheet:\n      additionalProperties: false\n      properties:\n        assets:\n          example:\n            current_assets:\n              accounts:\n                - id: \"1\"\n                  name: Accounts Receivable (A/R)\n                  value: 10000\n                - id: \"2\"\n                  name: Accounts Payable (A/P)\n                  value: 10000\n              total: 100000\n            fixed_assets:\n              accounts:\n                - id: \"1\"\n                  name: Accounts Receivable (A/R)\n                  value: 10000\n                - id: \"2\"\n                  name: Accounts Payable (A/P)\n                  value: 10000\n              total: 100000\n            total: 200000\n          properties:\n            current_assets:\n              properties:\n                accounts:\n                  items:\n                    properties:\n                      id:\n                        $ref: \"#/components/schemas/Id\"\n                      name:\n                        description: The name of the current asset account\n                        example: Accounts Receivable (A/R)\n                        title: Account Name\n                        type: string\n                      value:\n                        description: The value of the current asset\n                        example: 10000\n                        title: Value\n                        type: number\n                    type: object\n                    x-graphql-type-name: CurrentAssetAccountsList\n                  type: array\n                total:\n                  description: Total current assets\n                  example: 100000\n                  title: Total Current Assets\n                  type: number\n              required:\n                - total\n                - accounts\n              type: object\n              x-apideck-weights:\n                accounts: medium\n                total: medium\n            fixed_assets:\n              properties:\n                accounts:\n                  items:\n                    properties:\n                      id:\n                        $ref: \"#/components/schemas/Id\"\n                      name:\n                        description: The name of the fixed asset account\n                        example: Accounts Receivable (A/R)\n                        title: Account Name\n                        type: string\n                      value:\n                        description: The value of the fixed asset\n                        example: 10000\n                        title: Value\n                        type: number\n                    type: object\n                    x-apideck-weights:\n                      id: medium\n                      name: medium\n                      value: medium\n                    x-graphql-type-name: FixedAssetAccountsList\n                  type: array\n                total:\n                  description: Total fixed assets\n                  example: 100000\n                  title: Total Fixed Assets\n                  type: number\n              required:\n                - total\n                - accounts\n              type: object\n              x-apideck-weights:\n                accounts: medium\n                total: medium\n            total:\n              description: Total assets\n              example: 100000\n              title: Total Assets\n              type: number\n          required:\n            - total\n            - current_assets\n            - fixed_assets\n          type: object\n          x-apideck-weights:\n            current_assets: medium\n            fixed_assets: medium\n            total: medium\n        created_at:\n          $ref: \"#/components/schemas/CreatedAt\"\n        created_by:\n          $ref: \"#/components/schemas/CreatedBy\"\n        equity:\n          example:\n            items:\n              - id: \"1\"\n                name: Retained Earnings\n                value: 10000\n            total: 200000\n          properties:\n            items:\n              items:\n                properties:\n                  id:\n                    $ref: \"#/components/schemas/Id\"\n                  name:\n                    description: The type of the equity\n                    example: Retained Earnings\n                    title: Account Name\n                    type: string\n                  value:\n                    description: The equity amount\n                    example: 10000\n                    title: Value\n                    type: number\n                type: object\n                x-apideck-weights:\n                  id: medium\n                  name: medium\n                  value: medium\n                x-graphql-type-name: EquityItemsList\n              type: array\n            total:\n              description: Total equity\n              example: 100000\n              title: Total Equity\n              type: number\n          required:\n            - total\n            - items\n          type: object\n          x-apideck-weights:\n            items: medium\n            total: medium\n        id:\n          $ref: \"#/components/schemas/Id\"\n        liabilities:\n          example:\n            accounts:\n              - id: \"1\"\n                name: Accounts Payable (A/P)\n                value: 10000\n            total: 200000\n          properties:\n            accounts:\n              items:\n                properties:\n                  id:\n                    $ref: \"#/components/schemas/Id\"\n                  name:\n                    description: The name of the liability account\n                    example: Accounts Payable (A/P)\n                    title: Account Name\n                    type: string\n                  value:\n                    description: The value of the liability\n                    example: 10000\n                    title: Value\n                    type: number\n                type: object\n                x-apideck-weights:\n                  id: medium\n                  name: medium\n                  value: medium\n                x-graphql-type-name: LiabilityAccountsList\n              type: array\n            total:\n              description: Total liabilities\n              example: 100000\n              title: Total Liabilities\n              type: number\n          required:\n            - total\n            - accounts\n          type: object\n          x-apideck-weights:\n            accounts: medium\n            total: medium\n        report_name:\n          description: The name of the report\n          example: BalanceSheet\n          title: Report Name\n          type: string\n        start_date:\n          description: The start date of the report\n          example: 2017-01-01\n          pattern: ^\\d{4}-\\d{2}-\\d{2}$\n          title: Start Date\n          type: string\n        updated_at:\n          $ref: \"#/components/schemas/UpdatedAt\"\n        updated_by:\n          $ref: \"#/components/schemas/UpdatedBy\"\n      required:\n        - report_name\n        - start_date\n        - assets\n        - liabilities\n        - equity\n      type: object\n      x-apideck-weights:\n        assets: critical\n        created_at: edge-case\n        created_by: edge-case\n        equity: critical\n        id: medium\n        liabilities: critical\n        report_name: medium\n        start_date: critical\n        updated_at: low\n        updated_by: edge-case\n    BankAccount:\n      additionalProperties: false\n      properties:\n        account_name:\n          description: The name which you used in opening your bank account.\n          example: SPACEX LLC\n          nullable: true\n          title: Bank Account Name\n          type: string\n        account_number:\n          description: A bank account number is a number that is tied to your bank account. If you have several bank accounts, such as personal, joint, business (and so on), each account will have a different account number.\n          example: \"123465\"\n          nullable: true\n          title: Bank Account Number\n          type: string\n        account_type:\n          description: The type of bank account.\n          enum:\n            - bank_account\n            - credit_card\n            - other\n          example: credit_card\n          nullable: true\n          title: Account Type\n          type: string\n          x-apideck-enum-id: bank-accounts.account_type\n        bank_code:\n          description: A bank code is a code assigned by a central bank, a bank supervisory body or a Bankers Association in a country to all its licensed member banks or financial institutions.\n          example: BNH\n          nullable: true\n          title: Bank Code\n          type: string\n        bic:\n          example: AUDSCHGGXXX\n          nullable: true\n          type: string\n        branch_identifier:\n          description: A branch identifier is a unique identifier for a branch of a bank or financial institution.\n          example: \"001\"\n          nullable: true\n          title: Branch Identifier\n          type: string\n        bsb_number:\n          description: A BSB is a 6 digit numeric code used for identifying the branch of an Australian or New Zealand bank or financial institution.\n          example: 062-001\n          nullable: true\n          title: BSB Number\n          type: string\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        iban:\n          example: CH2989144532982975332\n          nullable: true\n          type: string\n      type: object\n      x-apideck-weights:\n        account_number: critical\n        bsb_number: edge-case\n        iban: high\n    Bill:\n      additionalProperties: false\n      properties:\n        balance:\n          description: Balance of bill due.\n          example: 27500\n          nullable: true\n          title: Balance\n          type: number\n        bill_date:\n          description: Date bill was issued - YYYY-MM-DD.\n          example: 2020-09-30\n          format: date\n          title: Bill date\n          type: string\n        created_at:\n          $ref: \"#/components/schemas/CreatedAt\"\n        created_by:\n          $ref: \"#/components/schemas/CreatedBy\"\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        currency_rate:\n          $ref: \"#/components/schemas/CurrencyRate\"\n        deposit:\n          description: Amount of deposit made to this bill.\n          example: 0\n          nullable: true\n          title: Deposit\n          type: number\n        downstream_id:\n          $ref: \"#/components/schemas/DownstreamId\"\n        due_date:\n          description: The due date is the date on which a payment is scheduled to be received by the supplier - YYYY-MM-DD.\n          example: 2020-10-30\n          format: date\n          title: Due date\n          type: string\n        id:\n          $ref: \"#/components/schemas/Id\"\n        ledger_account:\n          $ref: \"#/components/schemas/LinkedLedgerAccount\"\n        line_items:\n          items:\n            $ref: \"#/components/schemas/BillLineItem\"\n          type: array\n        notes:\n          example: Some notes about this bill.\n          nullable: true\n          title: Notes\n          type: string\n        paid_date:\n          description: The paid date is the date on which a payment was sent to the supplier - YYYY-MM-DD.\n          example: 2020-10-30\n          format: date\n          nullable: true\n          title: Paid date\n          type: string\n        po_number:\n          description: A PO Number uniquely identifies a purchase order and is generally defined by the buyer. The buyer will match the PO number in the invoice to the Purchase Order.\n          example: \"90000117\"\n          nullable: true\n          title: Purchase Order number\n          type: string\n        reference:\n          description: Optional invoice reference.\n          example: \"123456\"\n          nullable: true\n          title: Invoice reference\n          type: string\n        row_version:\n          $ref: \"#/components/schemas/RowVersion\"\n        status:\n          description: Invoice status\n          enum:\n            - draft\n            - submitted\n            - authorised\n            - partially_paid\n            - paid\n            - void\n            - credit\n            - deleted\n          example: draft\n          nullable: true\n          title: Status\n          type: string\n          x-apideck-enum-id: invoices.status\n        sub_total:\n          description: Sub-total amount, normally before tax.\n          example: 27500\n          nullable: true\n          title: Sub-total amount\n          type: number\n        supplier:\n          $ref: \"#/components/schemas/LinkedSupplier\"\n        tax_code:\n          description: Applicable tax id/code override if tax is not supplied on a line item basis.\n          example: \"1234\"\n          nullable: true\n          title: Tax Code\n          type: string\n        tax_inclusive:\n          $ref: \"#/components/schemas/TaxInclusive\"\n        terms:\n          description: Terms of payment.\n          example: Net 30 days\n          nullable: true\n          title: Terms\n          type: string\n        total:\n          description: Total amount of bill, including tax.\n          example: 27500\n          nullable: true\n          title: Total amount\n          type: number\n        total_tax:\n          description: Total tax amount applied to this bill.\n          example: 2500\n          nullable: true\n          title: Total tax amount\n          type: number\n        updated_at:\n          $ref: \"#/components/schemas/UpdatedAt\"\n        updated_by:\n          $ref: \"#/components/schemas/UpdatedBy\"\n      type: object\n      x-apideck-weights:\n        balance: high\n        bill_date: critical\n        created_at: edge-case\n        created_by: low\n        currency: medium\n        currency_rate: low\n        deposit: low\n        downstream_id: low\n        due_date: critical\n        id: critical\n        line_items: critical\n        po_number: low\n        reference: low\n        row_version: edge-case\n        status: critical\n        sub_total: high\n        supplier: high\n        tax_code: medium\n        tax_inclusive: low\n        terms: low\n        total: critical\n        total_tax: high\n        updated_at: high\n        updated_by: low\n    BillLineItem:\n      additionalProperties: false\n      properties:\n        code:\n          description: User defined item code\n          example: 120-C\n          nullable: true\n          title: Item code\n          type: string\n        description:\n          description: User defined description\n          example: Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\n          nullable: true\n          title: Description\n          type: string\n        discount_percentage:\n          description: Discount percentage\n          example: 0.01\n          nullable: true\n          title: Discount amount\n          type: number\n        id:\n          $ref: \"#/components/schemas/Id\"\n        item:\n          $ref: \"#/components/schemas/LinkedInvoiceItem\"\n        ledger_account:\n          $ref: \"#/components/schemas/LinkedLedgerAccount\"\n        line_number:\n          description: Line number in the invoice\n          example: 1\n          nullable: true\n          title: Line number\n          type: integer\n        quantity:\n          $ref: \"#/components/schemas/Quantity\"\n        row_id:\n          description: Row ID\n          example: \"12345\"\n          title: Row ID\n          type: string\n        row_version:\n          $ref: \"#/components/schemas/RowVersion\"\n        tax_amount:\n          description: Tax amount\n          example: 27500\n          nullable: true\n          title: Tax amount\n          type: number\n        tax_rate:\n          $ref: \"#/components/schemas/LinkedTaxRate\"\n        total_amount:\n          description: Total amount of the line item\n          example: 27500\n          nullable: true\n          title: Total amount\n          type: number\n        type:\n          description: Bill Line Item type\n          enum:\n            - expense_item\n            - expense_account\n          example: expense_account\n          nullable: true\n          title: Type\n          type: string\n          x-apideck-enum-id: bills.line_items.type\n          x-graphql-type-name: BillLineItemType\n        unit_of_measure:\n          $ref: \"#/components/schemas/UnitOfMeasure\"\n        unit_price:\n          $ref: \"#/components/schemas/UnitPrice\"\n      type: object\n      x-apideck-weights:\n        code: high\n        created_at: edge-case\n        description: high\n        discount_percentage: edge-case\n        id: critical\n        item: high\n        ledger_account: low\n        line_number: edge-case\n        quantity: medium\n        row_id: edge-case\n        row_version: edge-case\n        tax_amount: low\n        tax_rate: low\n        total_amount: critical\n        type: high\n        unit_of_measure: edge-case\n        unit_price: medium\n        updated_at: high\n    Company:\n      additionalProperties: false\n      properties:\n        abn_branch:\n          description: An ABN Branch (also known as a GST Branch) is used if part of your business needs to account for GST separately from its parent entity.\n          example: \"123\"\n          nullable: true\n          title: ABN Branch\n          type: string\n        abn_or_tfn:\n          description: An ABN is necessary for operating a business, while a TFN (Tax File Number) is required for any person working in Australia.\n          example: 46 115 614 695\n          nullable: true\n          title: ABN or TFN\n          type: string\n        acn:\n          description: The Australian Company Number (ACN) is a nine digit number with the last digit being a check digit calculated using a modified modulus 10 calculation. ASIC has adopted a convention of always printing and displaying the ACN in the format XXX XXX XXX; three blocks of three characters, each block separated by a blank.\n          example: XXX XXX XXX\n          nullable: true\n          title: ACN\n          type: string\n        addresses:\n          items:\n            $ref: \"#/components/schemas/Address\"\n          type: array\n        annual_revenue:\n          description: Annual revenue\n          example: +$35m\n          nullable: true\n          type: string\n        bank_accounts:\n          items:\n            $ref: \"#/components/schemas/BankAccount\"\n          type: array\n        created_at:\n          example: 2020-09-30T07:43:32.000Z\n          format: date-time\n          readOnly: true\n          type: string\n        created_by:\n          example: \"12345\"\n          nullable: true\n          readOnly: true\n          type: string\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        custom_fields:\n          items:\n            $ref: \"#/components/schemas/CustomField\"\n          type: array\n        deleted:\n          example: false\n          readOnly: true\n          type: boolean\n        description:\n          example: Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.\n          nullable: true\n          type: string\n        emails:\n          items:\n            $ref: \"#/components/schemas/Email\"\n          type: array\n        fax:\n          example: \"+12129876543\"\n          nullable: true\n          type: string\n        first_name:\n          $ref: \"#/components/schemas/FirstName\"\n        id:\n          example: \"12345\"\n          readOnly: true\n          type: string\n        image:\n          example: https://www.spacex.com/static/images/share.jpg\n          nullable: true\n          type: string\n        industry:\n          description: Industry\n          example: Apparel\n          nullable: true\n          type: string\n        interaction_count:\n          example: 1\n          nullable: true\n          readOnly: true\n          type: integer\n        last_activity_at:\n          example: 2020-09-30T07:43:32.000Z\n          format: date-time\n          nullable: true\n          readOnly: true\n          type: string\n        last_name:\n          $ref: \"#/components/schemas/LastName\"\n        name:\n          example: SpaceX\n          minLength: 1\n          type: string\n        number_of_employees:\n          description: Number of employees\n          example: 500-1000\n          nullable: true\n          type: string\n        owner_id:\n          example: \"12345\"\n          type: string\n        ownership:\n          description: Ownership\n          example: Public\n          nullable: true\n          type: string\n        parent_id:\n          description: Parent ID\n          example: \"22345\"\n          readOnly: true\n          type: string\n        payee_number:\n          example: 78932EN\n          nullable: true\n          title: Payee number\n          type: string\n        phone_numbers:\n          items:\n            $ref: \"#/components/schemas/PhoneNumber\"\n          type: array\n        read_only:\n          example: false\n          nullable: true\n          title: Read-only\n          type: boolean\n        row_type:\n          properties:\n            id:\n              example: \"12345\"\n              type: string\n            name:\n              example: Customer Account\n              type: string\n          title: Company Row Type\n          type: object\n          x-apideck-weights:\n            id: critical\n            name: medium\n          x-graphql-type-name: CompanyRowType\n        sales_tax_number:\n          example: 12456EN\n          nullable: true\n          title: Sales tax number\n          type: string\n        social_links:\n          items:\n            $ref: \"#/components/schemas/SocialLink\"\n          type: array\n        status:\n          example: Open\n          nullable: true\n          type: string\n        tags:\n          $ref: \"#/components/schemas/Tags\"\n        updated_at:\n          example: 2020-09-30T07:43:32.000Z\n          format: date-time\n          readOnly: true\n          type: string\n        updated_by:\n          example: \"12345\"\n          nullable: true\n          readOnly: true\n          type: string\n        vat_number:\n          description: VAT number\n          example: BE0689615164\n          nullable: true\n          type: string\n        websites:\n          items:\n            $ref: \"#/components/schemas/Website\"\n          type: array\n      required:\n        - name\n      type: object\n      x-apideck-weights:\n        abn_branch: edge-case\n        abn_or_tfn: edge-case\n        acn: edge-case\n        addresses: high\n        annual_revenue: low\n        bank_accounts: medium\n        created_at: medium\n        created_by: edge-case\n        currency: medium\n        custom_fields: medium\n        deleted: medium\n        description: medium\n        emails: high\n        fax: low\n        first_name: edge-case\n        id: critical\n        image: low\n        industry: medium\n        interaction_count: edge-case\n        last_activity_at: low\n        last_name: edge-case\n        name: critical\n        number_of_employees: low\n        owner_id: high\n        ownership: low\n        parent_id: edge-case\n        payee_number: edge-case\n        phone_numbers: high\n        read_only: low\n        row_type: edge-case\n        sales_tax_number: medium\n        social_links: low\n        status: high\n        tags: low\n        updated_at: high\n        updated_by: edge-case\n        vat_number: high\n        websites: medium\n    CompanyInfo:\n      additionalProperties: false\n      properties:\n        addresses:\n          items:\n            $ref: \"#/components/schemas/Address\"\n          type: array\n        automated_sales_tax:\n          description: Whether sales tax is calculated automatically for the company\n          title: Automated sales tax\n          type: boolean\n        company_name:\n          $ref: \"#/components/schemas/CompanyName\"\n        company_start_date:\n          description: Date when company file was created\n          example: 2015-06-05\n          format: date\n          title: Date when company file was created\n          type: string\n        country:\n          description: country code according to ISO 3166-1 alpha-2.\n          example: US\n          nullable: true\n          type: string\n        created_at:\n          $ref: \"#/components/schemas/CreatedAt\"\n        created_by:\n          $ref: \"#/components/schemas/CreatedBy\"\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        default_sales_tax:\n          $ref: \"#/components/schemas/LinkedTaxRate\"\n        emails:\n          items:\n            $ref: \"#/components/schemas/Email\"\n          type: array\n        fiscal_year_start_month:\n          description: The start month of fiscal year.\n          enum:\n            - January\n            - February\n            - March\n            - April\n            - May\n            - June\n            - July\n            - August\n            - September\n            - October\n            - November\n            - December\n          example: January\n          title: The start month of fiscal year.\n          type: string\n          x-apideck-enum-id: company-info.fiscal_year_start_month\n        id:\n          $ref: \"#/components/schemas/Id\"\n        language:\n          $ref: \"#/components/schemas/Language\"\n        legal_name:\n          description: The legal name of the company\n          example: SpaceX Inc.\n          title: Legal name\n          type: string\n        phone_numbers:\n          items:\n            $ref: \"#/components/schemas/PhoneNumber\"\n          type: array\n        row_version:\n          $ref: \"#/components/schemas/RowVersion\"\n        sales_tax_enabled:\n          description: Whether sales tax is enabled for the company\n          title: Sales tax enabled\n          type: boolean\n        sales_tax_number:\n          $ref: \"#/components/schemas/SalesTaxNumber\"\n        updated_at:\n          $ref: \"#/components/schemas/UpdatedAt\"\n        updated_by:\n          $ref: \"#/components/schemas/UpdatedBy\"\n      type: object\n      x-apideck-weights:\n        addresses: medium\n        automated_sales_tax: edge-case\n        company_name: critical\n        company_start_date: medium\n        created_at: low\n        created_by: edge-case\n        currency: medium\n        default_sales_tax: edge-case\n        emails: medium\n        fiscal_year_start_month: medium\n        id: medium\n        language: low\n        legal_name: medium\n        phone_numbers: medium\n        row_version: edge-case\n        sales_tax_enabled: edge-case\n        sales_tax_number: medium\n        updated_at: medium\n        updated_by: edge-case\n    CompanyName:\n      example: SpaceX\n      nullable: true\n      title: Company name\n      type: string\n    Contact:\n      additionalProperties: false\n      properties:\n        active:\n          example: true\n          nullable: true\n          type: boolean\n        addresses:\n          items:\n            $ref: \"#/components/schemas/Address\"\n          type: array\n        birthday:\n          example: 2000-08-12\n          nullable: true\n          type: string\n        company_id:\n          example: \"23456\"\n          nullable: true\n          type: string\n        company_name:\n          example: \"23456\"\n          nullable: true\n          type: string\n        created_at:\n          example: 2017-08-12T20:43:21.291Z\n          format: date-time\n          readOnly: true\n          type: string\n        current_balance:\n          example: 10.5\n          nullable: true\n          title: Current Balance\n          type: number\n        custom_fields:\n          items:\n            $ref: \"#/components/schemas/CustomField\"\n          type: array\n        department:\n          example: Engineering\n          nullable: true\n          type: string\n        description:\n          example: Internal champion\n          nullable: true\n          title: Description\n          type: string\n        emails:\n          items:\n            $ref: \"#/components/schemas/Email\"\n          type: array\n        fax:\n          example: \"+12129876543\"\n          nullable: true\n          type: string\n        first_call_at:\n          example: 2020-09-30T07:43:32.000Z\n          format: date-time\n          nullable: true\n          readOnly: true\n          type: string\n        first_email_at:\n          example: 2020-09-30T07:43:32.000Z\n          format: date-time\n          nullable: true\n          readOnly: true\n          type: string\n        first_name:\n          example: Elon\n          nullable: true\n          type: string\n        gender:\n          enum:\n            - male\n            - female\n            - unisex\n          example: female\n          nullable: true\n          type: string\n          x-apideck-enum-id: contacts.gender\n        id:\n          example: \"12345\"\n          readOnly: true\n          type: string\n        image:\n          deprecated: true\n          example: https://unavatar.io/elon-musk\n          nullable: true\n          type: string\n        language:\n          description: language code according to ISO 639-1. For the United States - EN\n          example: EN\n          nullable: true\n          type: string\n        last_activity_at:\n          example: 2020-09-30T07:43:32.000Z\n          format: date-time\n          nullable: true\n          readOnly: true\n          type: string\n        last_name:\n          example: Musk\n          nullable: true\n          type: string\n        lead_id:\n          example: \"34567\"\n          nullable: true\n          type: string\n        lead_source:\n          example: Cold Call\n          nullable: true\n          type: string\n        middle_name:\n          example: D.\n          nullable: true\n          type: string\n        name:\n          example: Elon Musk\n          minLength: 1\n          type: string\n        owner_id:\n          example: \"54321\"\n          nullable: true\n          type: string\n        phone_numbers:\n          items:\n            $ref: \"#/components/schemas/PhoneNumber\"\n          type: array\n        photo_url:\n          example: https://unavatar.io/elon-musk\n          nullable: true\n          title: Photo URL\n          type: string\n        prefix:\n          example: Mr.\n          nullable: true\n          type: string\n        social_links:\n          items:\n            $ref: \"#/components/schemas/SocialLink\"\n          type: array\n        status:\n          example: open\n          nullable: true\n          type: string\n        suffix:\n          example: PhD\n          nullable: true\n          type: string\n        tags:\n          $ref: \"#/components/schemas/Tags\"\n        title:\n          example: CEO\n          nullable: true\n          type: string\n        type:\n          enum:\n            - customer\n            - supplier\n            - employee\n            - personal\n          example: personal\n          nullable: true\n          type: string\n          x-apideck-enum-id: contacts.type\n        updated_at:\n          example: 2017-08-12T20:43:21.291Z\n          format: date-time\n          readOnly: true\n          type: string\n        websites:\n          items:\n            $ref: \"#/components/schemas/Website\"\n          type: array\n      required:\n        - name\n      x-apideck-weights:\n        active: edge-case\n        addresses: high\n        birthday: medium\n        company_id: high\n        company_name: medium\n        created_at: medium\n        current_balance: edge-case\n        custom_fields: medium\n        department: medium\n        description: low\n        emails: high\n        fax: low\n        first_call_at: edge-case\n        first_email_at: edge-case\n        first_name: high\n        gender: medium\n        id: critical\n        image: medium\n        language: medium\n        last_activity_at: medium\n        last_name: high\n        lead_id: medium\n        lead_source: low\n        middle_name: low\n        name: critical\n        owner_id: medium\n        phone_numbers: high\n        photo_url: medium\n        prefix: low\n        social_links: low\n        status: edge-case\n        suffix: low\n        tags: low\n        title: medium\n        type: medium\n        updated_at: high\n        websites: medium\n      x-pii:\n        - name\n        - first_name\n        - middle_name\n        - last_name\n        - email\n    CreateBillResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: delete\n          type: string\n        resource:\n          description: Unified API resource name\n          example: bills\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    CreateCustomerResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: customers\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    CreateInvoiceItemResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: invoice-items\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    CreateInvoiceResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/InvoiceResponse\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: invoices\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    CreateLedgerAccountResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: ledger-accounts\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    CreatePaymentResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: add\n          type: string\n        resource:\n          description: Unified API resource name\n          example: payments\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    CreateSupplierResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: add\n          type: string\n        resource:\n          description: Unified API resource name\n          example: payments\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    CreateTaxRateResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: tax-rates\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    CreatedAt:\n      example: 2020-09-30T07:43:32.000Z\n      format: date-time\n      readOnly: true\n      title: Created at (timestamp)\n      type: string\n    CreatedBy:\n      example: \"12345\"\n      nullable: true\n      readOnly: true\n      title: Created by\n      type: string\n    Currency:\n      description: Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\n      enum:\n        - UNKNOWN_CURRENCY\n        - AED\n        - AFN\n        - ALL\n        - AMD\n        - ANG\n        - AOA\n        - ARS\n        - AUD\n        - AWG\n        - AZN\n        - BAM\n        - BBD\n        - BDT\n        - BGN\n        - BHD\n        - BIF\n        - BMD\n        - BND\n        - BOB\n        - BOV\n        - BRL\n        - BSD\n        - BTN\n        - BWP\n        - BYR\n        - BZD\n        - CAD\n        - CDF\n        - CHE\n        - CHF\n        - CHW\n        - CLF\n        - CLP\n        - CNY\n        - COP\n        - COU\n        - CRC\n        - CUC\n        - CUP\n        - CVE\n        - CZK\n        - DJF\n        - DKK\n        - DOP\n        - DZD\n        - EGP\n        - ERN\n        - ETB\n        - EUR\n        - FJD\n        - FKP\n        - GBP\n        - GEL\n        - GHS\n        - GIP\n        - GMD\n        - GNF\n        - GTQ\n        - GYD\n        - HKD\n        - HNL\n        - HRK\n        - HTG\n        - HUF\n        - IDR\n        - ILS\n        - INR\n        - IQD\n        - IRR\n        - ISK\n        - JMD\n        - JOD\n        - JPY\n        - KES\n        - KGS\n        - KHR\n        - KMF\n        - KPW\n        - KRW\n        - KWD\n        - KYD\n        - KZT\n        - LAK\n        - LBP\n        - LKR\n        - LRD\n        - LSL\n        - LTL\n        - LVL\n        - LYD\n        - MAD\n        - MDL\n        - MGA\n        - MKD\n        - MMK\n        - MNT\n        - MOP\n        - MRO\n        - MUR\n        - MVR\n        - MWK\n        - MXN\n        - MXV\n        - MYR\n        - MZN\n        - NAD\n        - NGN\n        - NIO\n        - NOK\n        - NPR\n        - NZD\n        - OMR\n        - PAB\n        - PEN\n        - PGK\n        - PHP\n        - PKR\n        - PLN\n        - PYG\n        - QAR\n        - RON\n        - RSD\n        - RUB\n        - RWF\n        - SAR\n        - SBD\n        - SCR\n        - SDG\n        - SEK\n        - SGD\n        - SHP\n        - SLL\n        - SOS\n        - SRD\n        - SSP\n        - STD\n        - SVC\n        - SYP\n        - SZL\n        - THB\n        - TJS\n        - TMT\n        - TND\n        - TOP\n        - TRC\n        - TRY\n        - TTD\n        - TWD\n        - TZS\n        - UAH\n        - UGX\n        - USD\n        - USN\n        - USS\n        - UYI\n        - UYU\n        - UZS\n        - VEF\n        - VND\n        - VUV\n        - WST\n        - XAF\n        - XAG\n        - XAU\n        - XBA\n        - XBB\n        - XBC\n        - XBD\n        - XCD\n        - XDR\n        - XOF\n        - XPD\n        - XPF\n        - XPT\n        - XTS\n        - XXX\n        - YER\n        - ZAR\n        - ZMK\n        - ZMW\n        - BTC\n      example: USD\n      nullable: true\n      title: Currency\n      type: string\n      x-apideck-enum-coverage-ignore: true\n      x-apideck-enum-id: currencies\n      x-enum-elements:\n        - description: Unknown currency\n          name: UNKNOWN_CURRENCY\n        - description: United Arab Emirates dirham\n          name: AED\n        - description: Afghan afghani\n          name: AFN\n        - description: Albanian lek\n          name: ALL\n        - description: Armenian dram\n          name: AMD\n        - description: Netherlands Antillean guilder\n          name: ANG\n        - description: Angolan kwanza\n          name: AOA\n        - description: Argentine peso\n          name: ARS\n        - description: Australian dollar\n          name: AUD\n        - description: Aruban florin\n          name: AWG\n        - description: Azerbaijani manat\n          name: AZN\n        - description: Bosnia and Herzegovina convertible mark\n          name: BAM\n        - description: Barbados dollar\n          name: BBD\n        - description: Bangladeshi taka\n          name: BDT\n        - description: Bulgarian lev\n          name: BGN\n        - description: Bahraini dinar\n          name: BHD\n        - description: Burundian franc\n          name: BIF\n        - description: Bermudian dollar\n          name: BMD\n        - description: Brunei dollar\n          name: BND\n        - description: Boliviano\n          name: BOB\n        - description: Bolivian Mvdol\n          name: BOV\n        - description: Brazilian real\n          name: BRL\n        - description: Bahamian dollar\n          name: BSD\n        - description: Bhutanese ngultrum\n          name: BTN\n        - description: Botswana pula\n          name: BWP\n        - description: Belarusian ruble\n          name: BYR\n        - description: Belize dollar\n          name: BZD\n        - description: Canadian dollar\n          name: CAD\n        - description: Congolese franc\n          name: CDF\n        - description: WIR Euro\n          name: CHE\n        - description: Swiss franc\n          name: CHF\n        - description: WIR Franc\n          name: CHW\n        - description: Unidad de Fomento\n          name: CLF\n        - description: Chilean peso\n          name: CLP\n        - description: Chinese yuan\n          name: CNY\n        - description: Colombian peso\n          name: COP\n        - description: Unidad de Valor Real\n          name: COU\n        - description: Costa Rican colon\n          name: CRC\n        - description: Cuban convertible peso\n          name: CUC\n        - description: Cuban peso\n          name: CUP\n        - description: Cape Verdean escudo\n          name: CVE\n        - description: Czech koruna\n          name: CZK\n        - description: Djiboutian franc\n          name: DJF\n        - description: Danish krone\n          name: DKK\n        - description: Dominican peso\n          name: DOP\n        - description: Algerian dinar\n          name: DZD\n        - description: Egyptian pound\n          name: EGP\n        - description: Eritrean nakfa\n          name: ERN\n        - description: Ethiopian birr\n          name: ETB\n        - description: Euro\n          name: EUR\n        - description: Fiji dollar\n          name: FJD\n        - description: Falkland Islands pound\n          name: FKP\n        - description: Pound sterling\n          name: GBP\n        - description: Georgian lari\n          name: GEL\n        - description: Ghanaian cedi\n          name: GHS\n        - description: Gibraltar pound\n          name: GIP\n        - description: Gambian dalasi\n          name: GMD\n        - description: Guinean franc\n          name: GNF\n        - description: Guatemalan quetzal\n          name: GTQ\n        - description: Guyanese dollar\n          name: GYD\n        - description: Hong Kong dollar\n          name: HKD\n        - description: Honduran lempira\n          name: HNL\n        - description: Croatian kuna\n          name: HRK\n        - description: Haitian gourde\n          name: HTG\n        - description: Hungarian forint\n          name: HUF\n        - description: Indonesian rupiah\n          name: IDR\n        - description: Israeli new shekel\n          name: ILS\n        - description: Indian rupee\n          name: INR\n        - description: Iraqi dinar\n          name: IQD\n        - description: Iranian rial\n          name: IRR\n        - description: Icelandic króna\n          name: ISK\n        - description: Jamaican dollar\n          name: JMD\n        - description: Jordanian dinar\n          name: JOD\n        - description: Japanese yen\n          name: JPY\n        - description: Kenyan shilling\n          name: KES\n        - description: Kyrgyzstani som\n          name: KGS\n        - description: Cambodian riel\n          name: KHR\n        - description: Comoro franc\n          name: KMF\n        - description: North Korean won\n          name: KPW\n        - description: South Korean won\n          name: KRW\n        - description: Kuwaiti dinar\n          name: KWD\n        - description: Cayman Islands dollar\n          name: KYD\n        - description: Kazakhstani tenge\n          name: KZT\n        - description: Lao kip\n          name: LAK\n        - description: Lebanese pound\n          name: LBP\n        - description: Sri Lankan rupee\n          name: LKR\n        - description: Liberian dollar\n          name: LRD\n        - description: Lesotho loti\n          name: LSL\n        - description: Lithuanian litas\n          name: LTL\n        - description: Latvian lats\n          name: LVL\n        - description: Libyan dinar\n          name: LYD\n        - description: Moroccan dirham\n          name: MAD\n        - description: Moldovan leu\n          name: MDL\n        - description: Malagasy ariary\n          name: MGA\n        - description: Macedonian denar\n          name: MKD\n        - description: Myanmar kyat\n          name: MMK\n        - description: Mongolian tögrög\n          name: MNT\n        - description: Macanese pataca\n          name: MOP\n        - description: Mauritanian ouguiya\n          name: MRO\n        - description: Mauritian rupee\n          name: MUR\n        - description: Maldivian rufiyaa\n          name: MVR\n        - description: Malawian kwacha\n          name: MWK\n        - description: Mexican peso\n          name: MXN\n        - description: Mexican Unidad de Inversion\n          name: MXV\n        - description: Malaysian ringgit\n          name: MYR\n        - description: Mozambican metical\n          name: MZN\n        - description: Namibian dollar\n          name: NAD\n        - description: Nigerian naira\n          name: NGN\n        - description: Nicaraguan córdoba\n          name: NIO\n        - description: Norwegian krone\n          name: NOK\n        - description: Nepalese rupee\n          name: NPR\n        - description: New Zealand dollar\n          name: NZD\n        - description: Omani rial\n          name: OMR\n        - description: Panamanian balboa\n          name: PAB\n        - description: Peruvian sol\n          name: PEN\n        - description: Papua New Guinean kina\n          name: PGK\n        - description: Philippine peso\n          name: PHP\n        - description: Pakistani rupee\n          name: PKR\n        - description: Polish złoty\n          name: PLN\n        - description: Paraguayan guaraní\n          name: PYG\n        - description: Qatari riyal\n          name: QAR\n        - description: Romanian leu\n          name: RON\n        - description: Serbian dinar\n          name: RSD\n        - description: Russian ruble\n          name: RUB\n        - description: Rwandan franc\n          name: RWF\n        - description: Saudi riyal\n          name: SAR\n        - description: Solomon Islands dollar\n          name: SBD\n        - description: Seychelles rupee\n          name: SCR\n        - description: Sudanese pound\n          name: SDG\n        - description: Swedish krona\n          name: SEK\n        - description: Singapore dollar\n          name: SGD\n        - description: Saint Helena pound\n          name: SHP\n        - description: Sierra Leonean leone\n          name: SLL\n        - description: Somali shilling\n          name: SOS\n        - description: Surinamese dollar\n          name: SRD\n        - description: South Sudanese pound\n          name: SSP\n        - description: São Tomé and Príncipe dobra\n          name: STD\n        - description: Salvadoran colón\n          name: SVC\n        - description: Syrian pound\n          name: SYP\n        - description: Swazi lilangeni\n          name: SZL\n        - description: Thai baht\n          name: THB\n        - description: Tajikstani somoni\n          name: TJS\n        - description: Turkmenistan manat\n          name: TMT\n        - description: Tunisian dinar\n          name: TND\n        - description: Tongan pa'anga\n          name: TOP\n        - description: Turkish lira\n          name: TRY\n        - description: Trinidad and Tobago dollar\n          name: TTD\n        - description: New Taiwan dollar\n          name: TWD\n        - description: Tanzanian shilling\n          name: TZS\n        - description: Ukrainian hryvnia\n          name: UAH\n        - description: Ugandan shilling\n          name: UGX\n        - description: United States dollar\n          name: USD\n        - description: United States dollar (next day)\n          name: USN\n        - description: United States dollar (same day)\n          name: USS\n        - description: Uruguay Peso en Unidedades Indexadas\n          name: UYI\n        - description: Uruguyan peso\n          name: UYU\n        - description: Uzbekistan som\n          name: UZS\n        - description: Venezuelan bolívar soberano\n          name: VEF\n        - description: Vietnamese đồng\n          name: VND\n        - description: Vanuatu vatu\n          name: VUV\n        - description: Samoan tala\n          name: WST\n        - description: CFA franc BEAC\n          name: XAF\n        - description: Silver\n          name: XAG\n        - description: Gold\n          name: XAU\n        - description: European Composite Unit\n          name: XBA\n        - description: European Monetary Unit\n          name: XBB\n        - description: European Unit of Account 9\n          name: XBC\n        - description: European Unit of Account 17\n          name: XBD\n        - description: East Caribbean dollar\n          name: XCD\n        - description: Special drawing rights (International Monetary Fund)\n          name: XDR\n        - description: CFA franc BCEAO\n          name: XOF\n        - description: Palladium\n          name: XPD\n        - description: CFP franc\n          name: XPF\n        - description: Platinum\n          name: XPT\n        - description: Code reserved for testing\n          name: XTS\n        - description: No currency\n          name: XXX\n        - description: Yemeni rial\n          name: YER\n        - description: South African rand\n          name: ZAR\n        - description: Zambian kwacha\n          name: ZMK\n        - description: Zambian kwacha\n          name: ZMW\n        - description: Bitcoin\n          name: BTC\n    CurrencyRate:\n      description: Currency Exchange Rate at the time entity was recorded/generated.\n      example: 0.69\n      nullable: true\n      title: Currency Exchange Rate\n      type: number\n    CustomField:\n      additionalProperties: false\n      properties:\n        description:\n          description: More information about the custom field\n          example: Employee Level\n          title: Description\n          type: string\n        id:\n          example: \"2389328923893298\"\n          title: ID\n          type: string\n        name:\n          description: Name of the custom field.\n          example: employee_level\n          title: Name\n          type: string\n        value:\n          anyOf:\n            - example: Uses Salesforce and Marketo\n              nullable: true\n              type: string\n            - example: 10\n              nullable: true\n              type: number\n            - example: true\n              nullable: true\n              type: boolean\n            - items:\n                type: string\n              type: array\n      required:\n        - id\n      type: object\n      x-apideck-weights:\n        description: edge-case\n        id: critical\n        name: medium\n        value: critical\n    CustomersFilter:\n      additionalProperties: false\n      example:\n        company_name: SpaceX\n        email: elon@musk.com\n        last_name: Musk\n      properties:\n        company_name:\n          description: Company Name of contact to search for\n          example: SpaceX\n          title: Company Name\n          type: string\n        display_name:\n          description: Display Name of contact to search for\n          example: Techno King\n          title: Display Name\n          type: string\n        email:\n          description: Email of contact to search for\n          example: elon@spacex.com\n          title: Email\n          type: string\n        first_name:\n          description: First name of contact to search for\n          example: Elon\n          title: First Name\n          type: string\n        last_name:\n          description: Last name of contact to search for\n          example: Musk\n          title: Last Name\n          type: string\n      type: object\n      x-graphql-type-name: CustomersFilter\n    DeleteBillResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: delete\n          type: string\n        resource:\n          description: Unified API resource name\n          example: bills\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    DeleteCustomerResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: customers\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    DeleteInvoiceItemResponse:\n      $ref: \"#/components/schemas/DeleteTaxRateResponse\"\n    DeleteInvoiceResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/InvoiceResponse\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: invoices\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    DeleteLedgerAccountResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: ledger-accounts\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    DeletePaymentResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: delete\n          type: string\n        resource:\n          description: Unified API resource name\n          example: payments\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    DeleteSupplierResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: delete\n          type: string\n        resource:\n          description: Unified API resource name\n          example: suppliers\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    DeleteTaxRateResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: tax-rates\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    DownstreamId:\n      description: The third-party API ID of original entity\n      example: \"12345\"\n      nullable: true\n      readOnly: true\n      type: string\n    Email:\n      additionalProperties: false\n      properties:\n        email:\n          example: elon@musk.com\n          format: email\n          minLength: 1\n          type: string\n        id:\n          example: \"123\"\n          type: string\n        type:\n          enum:\n            - primary\n            - secondary\n            - work\n            - personal\n            - billing\n            - other\n          example: primary\n          type: string\n          x-apideck-enum-id: emails.type\n          x-graphql-type-name: EmailType\n      required:\n        - email\n      type: object\n      x-apideck-weights:\n        email: critical\n        id: edge-case\n        type: critical\n    FirstName:\n      example: Elon\n      nullable: true\n      title: First name\n      type: string\n    GetBalanceSheetResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/BalanceSheet\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: BalanceSheets\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: quickbooks\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: BalanceSheet\n    GetBillResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Bill\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: bills\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: Bill\n    GetBillsResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Bill\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/Links\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        operation:\n          description: Operation performed\n          example: all\n          type: string\n        resource:\n          description: Unified API resource name\n          example: bills\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: BillList\n    GetCompanyInfoResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/CompanyInfo\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: company-info\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: CompanyInfo\n    GetCustomerResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/AccountingCustomer\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: customers\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    GetCustomersResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/AccountingCustomer\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/Links\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: customers\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: CustomerList\n    GetInvoiceItemResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/InvoiceItem\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: invoice-items\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: InvoiceItem\n    GetInvoiceItemsResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/InvoiceItem\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/Links\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: invoice-items\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: InvoiceItemList\n    GetInvoiceResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Invoice\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: invoices\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: Invoice\n    GetInvoicesResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Invoice\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/Links\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: invoices\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: InvoiceList\n    GetLedgerAccountResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/LedgerAccount\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: ledger-accounts\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: LedgerAccount\n    GetLedgerAccountsResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/LedgerAccount\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/Links\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: ledger-accounts\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: LedgerAccountList\n    GetPaymentResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Payment\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: payments\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: Payment\n    GetPaymentsResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Payment\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/Links\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        operation:\n          description: Operation performed\n          example: all\n          type: string\n        resource:\n          description: Unified API resource name\n          example: payments\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: PaymentList\n    GetSupplierResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Supplier\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: suppliers\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: Supplier\n    GetSuppliersResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Supplier\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/Links\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        operation:\n          description: Operation performed\n          example: all\n          type: string\n        resource:\n          description: Unified API resource name\n          example: suppliers\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: SupplierList\n    GetTaxRateResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/TaxRate\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: tax-rates\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: TaxRateOne\n    GetTaxRatesResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/TaxRate\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/Links\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: tax-rates\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n      x-graphql-type-name: TaxRateList\n    Id:\n      example: \"12345\"\n      readOnly: true\n      type: string\n    Invoice:\n      additionalProperties: false\n      properties:\n        balance:\n          description: Balance of invoice due.\n          example: 27500\n          nullable: true\n          title: Balance\n          type: number\n        billing_address:\n          $ref: \"#/components/schemas/Address\"\n        created_at:\n          $ref: \"#/components/schemas/CreatedAt\"\n        created_by:\n          $ref: \"#/components/schemas/CreatedBy\"\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        currency_rate:\n          $ref: \"#/components/schemas/CurrencyRate\"\n        customer:\n          $ref: \"#/components/schemas/LinkedCustomer\"\n        customer_memo:\n          description: Customer memo\n          example: Thank you for your business and have a great day!\n          nullable: true\n          title: Customer memo\n          type: string\n        deposit:\n          description: Amount of deposit made to this invoice.\n          example: 0\n          nullable: true\n          title: Deposit\n          type: number\n        downstream_id:\n          $ref: \"#/components/schemas/DownstreamId\"\n        due_date:\n          description: The invoice due date is the date on which a payment or invoice is scheduled to be received by the seller - YYYY-MM-DD.\n          example: 2020-10-30\n          format: date\n          title: Due date\n          type: string\n        id:\n          $ref: \"#/components/schemas/Id\"\n        invoice_date:\n          description: Date invoice was issued - YYYY-MM-DD.\n          example: 2020-09-30\n          format: date\n          title: Invoice date\n          type: string\n        invoice_sent:\n          description: Invoice sent to contact/customer.\n          example: true\n          title: Invoice Sent\n          type: boolean\n        line_items:\n          items:\n            $ref: \"#/components/schemas/InvoiceLineItem\"\n          type: array\n        number:\n          description: Invoice number.\n          example: OIT00546\n          nullable: true\n          title: Invoice number\n          type: string\n        po_number:\n          description: A PO Number uniquely identifies a purchase order and is generally defined by the buyer. The buyer will match the PO number in the invoice to the Purchase Order.\n          example: \"90000117\"\n          nullable: true\n          title: Purchase Order number\n          type: string\n        reference:\n          description: Optional invoice reference.\n          example: \"123456\"\n          nullable: true\n          title: Invoice reference\n          type: string\n        row_version:\n          $ref: \"#/components/schemas/RowVersion\"\n        shipping_address:\n          $ref: \"#/components/schemas/Address\"\n        status:\n          description: Invoice status\n          enum:\n            - draft\n            - submitted\n            - authorised\n            - partially_paid\n            - paid\n            - void\n            - credit\n            - deleted\n          example: draft\n          nullable: true\n          title: Status\n          type: string\n          x-apideck-enum-id: invoices.status\n        sub_total:\n          description: Sub-total amount, normally before tax.\n          example: 27500\n          nullable: true\n          title: Sub-total amount\n          type: number\n        tax_code:\n          description: Applicable tax id/code override if tax is not supplied on a line item basis.\n          example: \"1234\"\n          nullable: true\n          title: Tax Code\n          type: string\n        tax_inclusive:\n          $ref: \"#/components/schemas/TaxInclusive\"\n        template_id:\n          description: Optional invoice template\n          example: \"123456\"\n          nullable: true\n          title: Template\n          type: string\n        terms:\n          description: Terms of payment.\n          example: Net 30 days\n          nullable: true\n          title: Terms\n          type: string\n        total:\n          description: Total amount of invoice, including tax.\n          example: 27500\n          nullable: true\n          title: Total amount\n          type: number\n        total_tax:\n          description: Total tax amount applied to this invoice.\n          example: 2500\n          nullable: true\n          title: Total tax amount\n          type: number\n        type:\n          description: Invoice type\n          enum:\n            - standard\n            - credit\n            - service\n            - product\n            - supplier\n            - other\n          example: service\n          nullable: true\n          title: Invoice type\n          type: string\n          x-apideck-enum-id: invoices.type\n          x-graphql-type-name: InvoiceType\n        updated_at:\n          $ref: \"#/components/schemas/UpdatedAt\"\n        updated_by:\n          $ref: \"#/components/schemas/UpdatedBy\"\n      type: object\n      x-apideck-weights:\n        balance: high\n        billing_address: high\n        created_at: high\n        created_by: low\n        currency: medium\n        currency_rate: low\n        customer: high\n        customer_memo: low\n        deposit: low\n        downstream_id: low\n        due_date: critical\n        id: critical\n        invoice_date: critical\n        invoice_sent: low\n        line_items: critical\n        number: high\n        po_number: low\n        reference: low\n        row_version: edge-case\n        shipping_address: medium\n        status: critical\n        sub_total: high\n        tax_code: medium\n        tax_inclusive: low\n        template_id: edge-case\n        terms: low\n        total: critical\n        total_tax: high\n        type: high\n        updated_at: high\n        updated_by: low\n    InvoiceItem:\n      additionalProperties: false\n      properties:\n        active:\n          $ref: \"#/components/schemas/Active\"\n        asset_account:\n          $ref: \"#/components/schemas/LinkedLedgerAccount\"\n        code:\n          description: User defined item code\n          example: 120-C\n          nullable: true\n          title: Item code\n          type: string\n        created_at:\n          $ref: \"#/components/schemas/CreatedAt\"\n        created_by:\n          $ref: \"#/components/schemas/CreatedBy\"\n        description:\n          description: A short description of the item\n          example: Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\n          nullable: true\n          title: Description\n          type: string\n        expense_account:\n          $ref: \"#/components/schemas/LinkedLedgerAccount\"\n        id:\n          description: The ID of the item.\n          example: \"123456\"\n          readOnly: true\n          title: Item ID\n          type: string\n        income_account:\n          $ref: \"#/components/schemas/LinkedLedgerAccount\"\n        inventory_date:\n          description: The date of opening balance if inventory item is tracked - YYYY-MM-DD.\n          example: 2020-10-30\n          format: date\n          nullable: true\n          title: Inventory date\n          type: string\n        name:\n          description: Item name\n          example: Model Y\n          nullable: true\n          title: Item name\n          type: string\n        purchase_details:\n          properties:\n            tax_inclusive:\n              $ref: \"#/components/schemas/TaxInclusive\"\n            tax_rate:\n              $ref: \"#/components/schemas/LinkedTaxRate\"\n            unit_of_measure:\n              $ref: \"#/components/schemas/UnitOfMeasure\"\n            unit_price:\n              $ref: \"#/components/schemas/UnitPrice\"\n          type: object\n          x-apideck-weights:\n            tax_inclusive: medium\n            tax_rate: medium\n            unit_of_measure: medium\n            unit_price: medium\n        purchased:\n          description: Item is available for purchase transactions\n          example: true\n          nullable: true\n          title: Item purchased\n          type: boolean\n        quantity:\n          $ref: \"#/components/schemas/Quantity\"\n        row_version:\n          $ref: \"#/components/schemas/RowVersion\"\n        sales_details:\n          properties:\n            tax_inclusive:\n              $ref: \"#/components/schemas/TaxInclusive\"\n            tax_rate:\n              $ref: \"#/components/schemas/LinkedTaxRate\"\n            unit_of_measure:\n              $ref: \"#/components/schemas/UnitOfMeasure\"\n            unit_price:\n              $ref: \"#/components/schemas/UnitPrice\"\n          type: object\n          x-apideck-weights:\n            tax_inclusive: medium\n            tax_rate: medium\n            unit_of_measure: medium\n            unit_price: medium\n        sold:\n          description: Item will be available on sales transactions\n          example: true\n          nullable: true\n          title: Item sold\n          type: boolean\n        tracked:\n          description: Item is inventoried\n          example: true\n          nullable: true\n          title: Item tracked\n          type: boolean\n        type:\n          description: Item type\n          enum:\n            - inventory\n            - service\n            - other\n          example: inventory\n          nullable: true\n          title: Type\n          type: string\n          x-apideck-enum-id: invoice-items.type\n          x-graphql-type-name: InvoiceItemType\n        unit_price:\n          $ref: \"#/components/schemas/UnitPrice\"\n        updated_at:\n          $ref: \"#/components/schemas/UpdatedAt\"\n        updated_by:\n          $ref: \"#/components/schemas/UpdatedBy\"\n      type: object\n      x-apideck-weights:\n        active: medium\n        asset_account: medium\n        code: high\n        created_at: medium\n        created_by: edge-case\n        description: medium\n        expense_account: medium\n        id: critical\n        income_account: high\n        inventory_date: high\n        name: critical\n        purchase_details: medium\n        purchased: edge-case\n        quantity: high\n        row_version: edge-case\n        sales_details: medium\n        sold: edge-case\n        tracked: edge-case\n        type: high\n        unit_price: high\n        updated_at: medium\n        updated_by: edge-case\n    InvoiceItemAssetAccount:\n      $ref: \"#/components/schemas/LinkedLedgerAccount\"\n    InvoiceItemExpenseAccount:\n      $ref: \"#/components/schemas/LinkedLedgerAccount\"\n    InvoiceItemIncomeAccount:\n      $ref: \"#/components/schemas/LinkedLedgerAccount\"\n    InvoiceItemsFilter:\n      additionalProperties: false\n      example:\n        name: Widgets Large\n      properties:\n        name:\n          description: Name of Invoice Items to search for\n          example: Widgets Large\n          title: Name\n          type: string\n      type: object\n      x-graphql-type-name: InvoiceItemsFilter\n    InvoiceLineItem:\n      additionalProperties: false\n      properties:\n        code:\n          description: User defined item code\n          example: 120-C\n          nullable: true\n          title: Item code\n          type: string\n        description:\n          description: User defined description\n          example: Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.\n          nullable: true\n          title: Description\n          type: string\n        discount_percentage:\n          description: Discount percentage\n          example: 0.01\n          nullable: true\n          title: Discount amount\n          type: number\n        id:\n          $ref: \"#/components/schemas/Id\"\n        item:\n          $ref: \"#/components/schemas/LinkedInvoiceItem\"\n        ledger_account:\n          $ref: \"#/components/schemas/LinkedLedgerAccount\"\n        line_number:\n          description: Line number in the invoice\n          example: 1\n          nullable: true\n          title: Line number\n          type: integer\n        quantity:\n          $ref: \"#/components/schemas/Quantity\"\n        row_id:\n          description: Row ID\n          example: \"12345\"\n          title: Row ID\n          type: string\n        row_version:\n          $ref: \"#/components/schemas/RowVersion\"\n        tax_amount:\n          description: Tax amount\n          example: 27500\n          nullable: true\n          title: Tax amount\n          type: number\n        tax_rate:\n          $ref: \"#/components/schemas/LinkedTaxRate\"\n        total_amount:\n          description: Total amount of the line item\n          example: 27500\n          nullable: true\n          title: Total amount\n          type: number\n        type:\n          description: Item type\n          enum:\n            - sales_item\n            - discount\n            - info\n            - sub_total\n          example: sales_item\n          nullable: true\n          title: Type\n          type: string\n          x-apideck-enum-id: invoices.lines-items.type\n          x-graphql-type-name: InvoiceLineItemType\n        unit_of_measure:\n          $ref: \"#/components/schemas/UnitOfMeasure\"\n        unit_price:\n          $ref: \"#/components/schemas/UnitPrice\"\n      type: object\n      x-apideck-weights:\n        code: medium\n        description: high\n        discount_percentage: low\n        id: high\n        item: critical\n        ledger_account: low\n        line_number: medium\n        quantity: high\n        row_id: edge-case\n        row_version: edge-case\n        tax_amount: high\n        tax_rate: medium\n        total_amount: critical\n        type: medium\n        unit_of_measure: edge-case\n        unit_price: high\n    InvoiceResponse:\n      properties:\n        downstream_id:\n          $ref: \"#/components/schemas/DownstreamId\"\n        id:\n          $ref: \"#/components/schemas/Id\"\n      type: object\n    Language:\n      description: language code according to ISO 639-1. For the United States - EN\n      example: EN\n      nullable: true\n      type: string\n    LastName:\n      example: Musk\n      nullable: true\n      title: Last name\n      type: string\n    LedgerAccount:\n      additionalProperties: true\n      properties:\n        active:\n          description: Whether the account is active or not.\n          example: true\n          nullable: true\n          title: Is active\n          type: boolean\n        bank_account:\n          $ref: \"#/components/schemas/BankAccount\"\n        categories:\n          description: The categories of the account.\n          items:\n            properties:\n              id:\n                example: \"12345\"\n                readOnly: true\n                type: string\n              name:\n                description: The name of the category.\n                example: Finance Charges Expense\n                readOnly: true\n                title: Category name\n                type: string\n          readOnly: true\n          title: Categories\n          type: array\n        classification:\n          description: The classification of account.\n          enum:\n            - asset\n            - equity\n            - expense\n            - liability\n            - revenue\n            - income\n            - other_income\n            - other_expense\n            - costs_of_sales\n          example: asset\n          nullable: true\n          title: Classification\n          type: string\n          x-apideck-enum-id: ledger-accounts.classification\n        code:\n          description: The code assigned to the account.\n          example: \"453\"\n          nullable: true\n          title: Code\n          type: string\n        created_at:\n          $ref: \"#/components/schemas/CreatedAt\"\n        created_by:\n          $ref: \"#/components/schemas/CreatedBy\"\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        current_balance:\n          description: The current balance of the account.\n          example: 20000\n          nullable: true\n          title: Current balance\n          type: number\n        description:\n          description: The description of the account.\n          example: Main checking account\n          nullable: true\n          title: Description\n          type: string\n        display_id:\n          description: The human readable display ID used when displaying the account\n          example: 1-12345\n          title: Display ID\n          type: string\n        fully_qualified_name:\n          description: The fully qualified name of the account.\n          example: Asset.Bank.Checking_Account\n          nullable: true\n          title: Fully Qualified Name\n          type: string\n        header:\n          description: Whether the account is a header or not.\n          example: true\n          nullable: true\n          title: Is header\n          type: boolean\n        id:\n          $ref: \"#/components/schemas/Id\"\n        last_reconciliation_date:\n          description: Reconciliation Date means the last calendar day of each Reconciliation Period.\n          example: 2020-09-30\n          format: date\n          nullable: true\n          title: Last Reconciliation Date\n          type: string\n        level:\n          example: 1\n          nullable: true\n          type: number\n        name:\n          description: The name of the account.\n          example: Bank account\n          nullable: true\n          title: Name\n          type: string\n        nominal_code:\n          deprecated: true\n          description: The nominal code of the ledger account.\n          example: N091\n          nullable: true\n          title: Nominal Code\n          type: string\n        opening_balance:\n          description: The opening balance of the account.\n          example: 75000\n          nullable: true\n          title: Opening balance\n          type: number\n        parent_account:\n          properties:\n            display_id:\n              description: The human readable display ID used when displaying the parent account\n              example: 1-1100\n              title: Display ID\n              type: string\n            id:\n              description: The ID of the parent account.\n              example: \"12345\"\n              title: Parent account ID\n              type: string\n            name:\n              description: The name of the parent account.\n              example: Bank Accounts\n              title: Name\n              type: string\n          type: object\n        row_version:\n          $ref: \"#/components/schemas/RowVersion\"\n        status:\n          description: The status of the account.\n          enum:\n            - active\n            - inactive\n            - archived\n          example: active\n          nullable: true\n          title: Account status\n          type: string\n          x-apideck-enum-id: ledger-accounts.status\n          x-graphql-type-name: LedgerAccountStatus\n        sub_account:\n          description: Whether the account is a sub account or not.\n          example: false\n          nullable: true\n          title: Is sub account\n          type: boolean\n        sub_accounts:\n          description: The sub accounts of the account.\n          items:\n            properties:\n              account_sub_name:\n                description: The name of the sub account.\n                example: Petty Cash\n                readOnly: true\n                title: Sub Account Name\n                type: string\n              id:\n                description: The ID of the sub account.\n                example: \"12345\"\n                readOnly: true\n                title: Sub account ID\n                type: string\n          readOnly: true\n          title: Sub accounts\n          type: array\n        sub_type:\n          description: The sub type of account.\n          example: CHECKING_ACCOUNT\n          nullable: true\n          title: Sub Type\n          type: string\n        tax_rate:\n          $ref: \"#/components/schemas/LinkedTaxRate\"\n        tax_type:\n          description: The tax type of the account.\n          example: NONE\n          nullable: true\n          title: Tax Type\n          type: string\n        type:\n          description: The type of account.\n          enum:\n            - accounts_receivable\n            - revenue\n            - sales\n            - other_income\n            - bank\n            - current_asset\n            - fixed_asset\n            - non_current_asset\n            - other_asset\n            - balancesheet\n            - equity\n            - expense\n            - other_expense\n            - costs_of_sales\n            - accounts_payable\n            - credit_card\n            - current_liability\n            - non_current_liability\n            - other_liability\n          example: bank\n          title: Type\n          type: string\n          x-apideck-enum-id: ledger-accounts.type\n          x-graphql-type-name: LedgerAccountType\n        updated_at:\n          $ref: \"#/components/schemas/UpdatedAt\"\n        updated_by:\n          $ref: \"#/components/schemas/UpdatedBy\"\n      type: object\n      x-apideck-weights:\n        active: edge-case\n        bank_account: high\n        categories: high\n        classification: edge-case\n        code: low\n        created_at: low\n        created_by: edge-case\n        currency: edge-case\n        current_balance: edge-case\n        description: edge-case\n        display_id: low\n        fully_qualified_name: edge-case\n        header: edge-case\n        id: critical\n        last_reconciliation_date: edge-case\n        level: edge-case\n        name: high\n        nominal_code: low\n        opening_balance: edge-case\n        parent_account: high\n        row_version: edge-case\n        status: medium\n        sub_account: medium\n        sub_accounts: medium\n        sub_type: edge-case\n        tax_rate: edge-case\n        tax_type: edge-case\n        type: high\n        updated_at: high\n        updated_by: edge-case\n    LedgerAccounts:\n      items:\n        $ref: \"#/components/schemas/LedgerAccount\"\n      type: array\n    LinkedCustomer:\n      description: The customer this entity is linked to.\n      nullable: true\n      properties:\n        company_name:\n          description: The company name of the customer.\n          example: The boring company\n          nullable: true\n          readOnly: true\n          title: Company Name\n          type: string\n        display_id:\n          description: The display ID of the customer.\n          example: CUST00101\n          nullable: true\n          readOnly: true\n          title: Display ID\n          type: string\n        display_name:\n          description: The display name of the customer.\n          example: Windsurf Shop\n          nullable: true\n          title: Display Name\n          type: string\n        id:\n          description: The ID of the customer this entity is linked to.\n          example: \"12345\"\n          title: Customer ID\n          type: string\n      required:\n        - id\n      title: LinkedCustomer\n      type: object\n      x-apideck-weights:\n        company_name: medium\n        display_id: medium\n        display_name: medium\n        id: medium\n      x-graphql-type-name: AccountingLinkedCustomer\n    LinkedInvoiceItem:\n      properties:\n        code:\n          description: User defined item code\n          example: 120-C\n          nullable: true\n          readOnly: true\n          title: Item code\n          type: string\n        id:\n          description: ID of the linked item. A reference to the [invoice item](https://developers.apideck.com/apis/accounting/reference#tag/Invoice-Items) that was used to create this line item\n          example: \"12344\"\n          nullable: true\n          title: Item ID\n          type: string\n        name:\n          description: User defined item name\n          example: Model Y\n          nullable: true\n          readOnly: true\n          title: Item name\n          type: string\n      type: object\n      x-apideck-weights:\n        code: medium\n        id: medium\n        name: medium\n      x-graphql-type-name: LinkedInvoiceItem\n    LinkedLedgerAccount:\n      nullable: true\n      properties:\n        code:\n          description: The code assigned to the account.\n          example: \"453\"\n          nullable: true\n          title: Code\n          type: string\n        id:\n          description: The unique identifier for the account.\n          example: \"123456\"\n          title: Account ID\n          type: string\n        name:\n          description: The name of the account.\n          example: Bank account\n          nullable: true\n          readOnly: true\n          title: Account Name\n          type: string\n        nominal_code:\n          description: The nominal code of the account.\n          example: N091\n          nullable: true\n          title: Nominal Code\n          type: string\n      type: object\n      x-apideck-weights:\n        code: medium\n        id: medium\n        name: medium\n        nominal_code: medium\n      x-graphql-type-name: LinkedLedgerAccount\n    LinkedSupplier:\n      description: The supplier this entity is linked to.\n      nullable: true\n      properties:\n        address:\n          $ref: \"#/components/schemas/Address\"\n        company_name:\n          description: The company name of the supplier.\n          example: The boring company\n          nullable: true\n          readOnly: true\n          title: Company Name\n          type: string\n        display_name:\n          description: The display name of the supplier.\n          example: Windsurf Shop\n          nullable: true\n          title: Display Name\n          type: string\n        id:\n          description: The ID of the supplier this entity is linked to.\n          example: \"12345\"\n          title: Supplier ID\n          type: string\n      required:\n        - id\n      title: LinkedSupplier\n      type: object\n      x-apideck-weights:\n        address: low\n        company_name: edge-case\n        display_name: high\n        id: medium\n      x-graphql-type-name: AccountingLinkedSupplier\n    LinkedTaxRate:\n      properties:\n        code:\n          description: Tax rate code\n          example: N-T\n          nullable: true\n          readOnly: true\n          title: Tax rate code\n          type: string\n        id:\n          description: The ID of the object.\n          example: \"123456\"\n          nullable: true\n          title: The ID of the object.\n          type: string\n        name:\n          description: Name of the tax rate\n          example: GST on Purchases\n          nullable: true\n          readOnly: true\n          title: Name\n          type: string\n      type: object\n      x-apideck-weights:\n        code: medium\n        id: medium\n        name: medium\n      x-graphql-type-name: LinkedTaxRate\n    Links:\n      description: Links to navigate to previous or next pages through the API\n      properties:\n        current:\n          description: Link to navigate to the current page through the API\n          example: https://unify.apideck.com/crm/companies\n          type: string\n        next:\n          description: Link to navigate to the previous page through the API\n          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\n          nullable: true\n          type: string\n        previous:\n          description: Link to navigate to the previous page through the API\n          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\n          nullable: true\n          type: string\n      type: object\n    Meta:\n      description: Response metadata\n      properties:\n        cursors:\n          description: Cursors to navigate to previous or next pages through the API\n          properties:\n            current:\n              description: Cursor to navigate to the current page of results through the API\n              example: em9oby1jcm06OnBhZ2U6OjI=\n              nullable: true\n              type: string\n            next:\n              description: Cursor to navigate to the next page of results through the API\n              example: em9oby1jcm06OnBhZ2U6OjM=\n              nullable: true\n              type: string\n            previous:\n              description: Cursor to navigate to the previous page of results through the API\n              example: em9oby1jcm06OnBhZ2U6OjE=\n              nullable: true\n              type: string\n          type: object\n        items_on_page:\n          description: Number of items returned in the data property of the response\n          example: 50\n          type: integer\n      type: object\n    MiddleName:\n      example: D.\n      nullable: true\n      title: Middle name\n      type: string\n    NotFoundResponse:\n      properties:\n        detail:\n          anyOf:\n            - example: \"Could not find widget with id: '123'\"\n              type: string\n            - example:\n                not_found:\n                  entity: widget\n                  id: \"123\"\n              type: object\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Not Found\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Unknown Widget\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#entitynotfounderror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 404\n          type: number\n        type_name:\n          description: The type of error returned\n          example: EntityNotFoundError\n          type: string\n    NotImplementedResponse:\n      properties:\n        detail:\n          anyOf:\n            - example: Failed to retrieve Widget tokenUrl from 'components.securitySchemes.oauth2.flows'\n              type: string\n            - type: object\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Not Implemented\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Unmapped Attribute\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#mappingerror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 501\n          type: number\n        type_name:\n          description: The type of error returned\n          example: MappingError\n          type: string\n    Passthrough:\n      additionalProperties: true\n      properties:\n        example_downstream_property:\n          description: All passthrough query parameters are passed along to the connector as is (?pass_through[search]=leads becomes ?search=leads)\n          type: string\n      type: object\n    Payment:\n      properties:\n        account:\n          $ref: \"#/components/schemas/LinkedLedgerAccount\"\n        accounts_receivable_account_id:\n          deprecated: true\n          description: Unique identifier for the account to allocate payment to.\n          example: \"123456\"\n          nullable: true\n          title: Accounts receivable account id\n          type: string\n        accounts_receivable_account_type:\n          deprecated: true\n          description: Type of accounts receivable account.\n          example: Account\n          nullable: true\n          title: Type of accounts receivable account\n          type: string\n        allocations:\n          items:\n            properties:\n              amount:\n                description: Amount of payment that should be attributed to this allocation. If null, the total_amount will be used.\n                example: 49.99\n                nullable: true\n                title: Amount\n                type: number\n              code:\n                example: N091\n                readOnly: true\n                type: string\n              id:\n                description: Unique identifier of entity this payment should be attributed to.\n                example: \"123456\"\n                title: Linked entity ID\n                type: string\n              type:\n                description: Type of entity this payment should be attributed to.\n                enum:\n                  - invoice\n                  - order\n                  - expense\n                  - credit_memo\n                  - over_payment\n                  - pre_payment\n                title: Allocation type\n                type: string\n                x-apideck-enum-id: allocations.type\n                x-graphql-type-name: AllocationType\n            x-apideck-weights:\n              amount: medium\n              code: medium\n              id: medium\n              type: medium\n          type: array\n        created_at:\n          $ref: \"#/components/schemas/CreatedAt\"\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        currency_rate:\n          $ref: \"#/components/schemas/CurrencyRate\"\n        customer:\n          $ref: \"#/components/schemas/LinkedCustomer\"\n        id:\n          description: Unique identifier representing the entity\n          example: \"123456\"\n          readOnly: true\n          title: Payment identifier\n          type: string\n        note:\n          description: Optional note to be associated with the payment.\n          example: Some notes about this payment\n          nullable: true\n          title: Note\n          type: string\n        payment_method:\n          description: Payment method\n          example: Credit Card\n          nullable: true\n          title: Payment method\n          type: string\n        payment_method_reference:\n          description: Optional reference message returned by payment method on processing\n          example: \"123456\"\n          nullable: true\n          title: Payment method reference\n          type: string\n        reconciled:\n          description: Payment has been reconciled\n          example: true\n          title: Reconciled\n          type: boolean\n        reference:\n          description: \"Optional payment reference message ie: Debit remittance detail.\"\n          example: \"123456\"\n          nullable: true\n          title: Payment reference\n          type: string\n        row_version:\n          $ref: \"#/components/schemas/RowVersion\"\n        status:\n          description: Status of payment\n          enum:\n            - authorised\n            - paid\n            - voided\n            - deleted\n          example: authorised\n          title: Payment status\n          type: string\n          x-apideck-enum-id: payments.status\n          x-graphql-type-name: PaymentStatus\n        total_amount:\n          description: Amount of payment\n          example: 49.99\n          title: Total amount\n          type: number\n        transaction_date:\n          description: Date transaction was entered - YYYY:MM::DDThh:mm:ss.sTZD\n          example: 2021-05-01T12:00:00.000Z\n          format: date-time\n          title: Transaction datetime\n          type: string\n        type:\n          description: Type of payment\n          enum:\n            - accounts_receivable\n            - accounts_payable\n            - accounts_receivable_credit\n            - accounts_payable_credit\n            - accounts_receivable_overpayment\n            - accounts_payable_overpayment\n            - accounts_receivable_prepayment\n            - accounts_payable_prepayment\n          example: accounts_receivable\n          title: Payment Type\n          type: string\n          x-apideck-enum-id: payments.type\n          x-graphql-type-name: PaymentType\n        updated_at:\n          $ref: \"#/components/schemas/UpdatedAt\"\n      required:\n        - total_amount\n        - transaction_date\n      type: object\n      x-apideck-weights:\n        account: critical\n        accounts_receivable_account_id: edge-case\n        accounts_receivable_account_type: edge-case\n        allocations: critical\n        created_at: medium\n        currency: critical\n        currency_rate: medium\n        customer: high\n        id: critical\n        note: low\n        payment_method: medium\n        payment_method_reference: medium\n        reconciled: low\n        reference: medium\n        row_version: edge-case\n        status: high\n        total_amount: critical\n        transaction_date: critical\n        type: high\n        updated_at: medium\n    PaymentRequiredResponse:\n      properties:\n        detail:\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n          example: You have reached your limit of 2000\n          type: string\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Payment Required\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Request Limit Reached\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#requestlimiterror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 402\n          type: number\n        type_name:\n          description: The type of error returned\n          example: RequestLimitError\n          type: string\n    PhoneNumber:\n      additionalProperties: false\n      properties:\n        area_code:\n          example: \"323\"\n          nullable: true\n          title: Area code\n          type: string\n        country_code:\n          example: \"1\"\n          nullable: true\n          title: Country code\n          type: string\n        extension:\n          example: \"105\"\n          nullable: true\n          title: Phone extension\n          type: string\n        id:\n          example: \"12345\"\n          nullable: true\n          type: string\n        number:\n          example: 111-111-1111\n          minLength: 1\n          title: Phone number\n          type: string\n        type:\n          enum:\n            - primary\n            - secondary\n            - home\n            - work\n            - office\n            - mobile\n            - assistant\n            - fax\n            - direct-dial-in\n            - personal\n            - other\n          example: primary\n          type: string\n          x-apideck-enum-id: phone_numbers.type\n          x-graphql-type-name: PhoneType\n      required:\n        - number\n      type: object\n      x-apideck-weights:\n        area_code: edge-case\n        country_code: edge-case\n        extension: edge-case\n        id: edge-case\n        number: critical\n        type: critical\n    Quantity:\n      example: 1\n      nullable: true\n      title: Quantity\n      type: number\n    RowVersion:\n      example: 1-12345\n      nullable: true\n      title: Row version\n      type: string\n    SalesTaxNumber:\n      example: 111.222.333\n      nullable: true\n      title: Sales Tax Number\n      type: string\n    SocialLink:\n      additionalProperties: false\n      properties:\n        id:\n          example: \"12345\"\n          nullable: true\n          type: string\n        type:\n          example: twitter\n          nullable: true\n          type: string\n        url:\n          example: https://www.twitter.com/apideck-io\n          minLength: 1\n          type: string\n      required:\n        - url\n      type: object\n      x-apideck-weights:\n        id: edge-case\n        type: critical\n        url: critical\n    Suffix:\n      example: Jr.\n      nullable: true\n      title: Suffix\n      type: string\n    Supplier:\n      properties:\n        account:\n          $ref: \"#/components/schemas/LinkedLedgerAccount\"\n        addresses:\n          items:\n            $ref: \"#/components/schemas/Address\"\n          type: array\n        bank_accounts:\n          items:\n            $ref: \"#/components/schemas/BankAccount\"\n          type: array\n        company_name:\n          $ref: \"#/components/schemas/CompanyName\"\n        created_at:\n          $ref: \"#/components/schemas/CreatedAt\"\n        created_by:\n          $ref: \"#/components/schemas/CreatedBy\"\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        display_name:\n          description: Display name of supplier.\n          example: Windsurf Shop\n          nullable: true\n          title: Display Name\n          type: string\n        downstream_id:\n          $ref: \"#/components/schemas/DownstreamId\"\n        emails:\n          items:\n            $ref: \"#/components/schemas/Email\"\n          type: array\n        first_name:\n          $ref: \"#/components/schemas/FirstName\"\n        id:\n          $ref: \"#/components/schemas/Id\"\n        last_name:\n          $ref: \"#/components/schemas/LastName\"\n        middle_name:\n          $ref: \"#/components/schemas/MiddleName\"\n        notes:\n          example: Some notes about this supplier\n          nullable: true\n          title: Notes\n          type: string\n        phone_numbers:\n          items:\n            $ref: \"#/components/schemas/PhoneNumber\"\n          type: array\n        row_version:\n          $ref: \"#/components/schemas/RowVersion\"\n        status:\n          description: Customer status\n          enum:\n            - active\n            - inactive\n            - archived\n            - gdpr-erasure-request\n            - unknown\n          example: active\n          nullable: true\n          title: Status\n          type: string\n          x-apideck-enum-id: customers.status\n          x-graphql-type-name: CustomerStatus\n        suffix:\n          $ref: \"#/components/schemas/Suffix\"\n        tax_number:\n          $ref: \"#/components/schemas/TaxNumber\"\n        tax_rate:\n          $ref: \"#/components/schemas/LinkedTaxRate\"\n        title:\n          $ref: \"#/components/schemas/Title\"\n        updated_at:\n          $ref: \"#/components/schemas/UpdatedAt\"\n        updated_by:\n          $ref: \"#/components/schemas/UpdatedBy\"\n        websites:\n          items:\n            $ref: \"#/components/schemas/Website\"\n          type: array\n      type: object\n      x-apideck-weights:\n        account: edge-case\n        addresses: high\n        bank_accounts: high\n        company_name: high\n        created_at: low\n        created_by: edge-case\n        currency: high\n        display_name: edge-case\n        downstream_id: edge-case\n        emails: high\n        first_name: high\n        id: critical\n        last_name: high\n        middle_name: low\n        notes: low\n        phone_numbers: high\n        row_version: edge-case\n        status: high\n        suffix: low\n        tax_number: medium\n        tax_rate: high\n        title: high\n        updated_at: medium\n        updated_by: edge-case\n        websites: medium\n      x-graphql-type-name: Supplier\n    Tags:\n      example:\n        - New\n      items:\n        type: string\n      type: array\n    TaxInclusive:\n      description: Amounts are including tax\n      example: true\n      nullable: true\n      title: Tax inclusive\n      type: boolean\n    TaxNumber:\n      example: US123945459\n      nullable: true\n      title: Tax number\n      type: string\n    TaxRate:\n      additionalProperties: false\n      properties:\n        code:\n          description: Tax code assigned to identify this tax rate.\n          example: ABN\n          nullable: true\n          title: Tax code\n          type: string\n        components:\n          items:\n            properties:\n              compound:\n                example: true\n                nullable: true\n                title: Compound\n                type: boolean\n              id:\n                example: \"10\"\n                nullable: true\n                title: TaxRate Id\n                type: string\n              name:\n                example: GST\n                minLength: 1\n                type: string\n              rate:\n                example: 10\n                nullable: true\n                title: TaxRate\n                type: number\n            x-apideck-weights:\n              compound: medium\n              id: medium\n              name: medium\n              rate: medium\n          nullable: true\n          title: Tax components\n          type: array\n        created_at:\n          $ref: \"#/components/schemas/CreatedAt\"\n        created_by:\n          $ref: \"#/components/schemas/CreatedBy\"\n        description:\n          description: Description of tax rate\n          example: Reduced rate GST Purchases\n          nullable: true\n          title: Description\n          type: string\n        effective_tax_rate:\n          description: Effective tax rate\n          example: 10\n          nullable: true\n          title: Effective tax rate\n          type: number\n        id:\n          description: ID assigned to identify this tax rate.\n          example: \"1234\"\n          nullable: true\n          type: string\n        name:\n          description: Name assigned to identify this tax rate.\n          example: GST on Purchases\n          minLength: 1\n          title: Name\n          type: string\n        original_tax_rate_id:\n          description: ID of the original tax rate from which the new tax rate is derived. Helps to understand the relationship between corresponding tax rate entities.\n          example: \"12345\"\n          nullable: true\n          title: Original tax rate ID\n          type: string\n        report_tax_type:\n          description: Report Tax type to aggregate tax collected or paid for reporting purposes\n          example: NONE\n          nullable: true\n          title: Report Tax Type\n          type: string\n        row_version:\n          $ref: \"#/components/schemas/RowVersion\"\n        status:\n          description: Tax rate status\n          enum:\n            - active\n            - inactive\n            - archived\n          example: active\n          nullable: true\n          title: Tax rate status\n          type: string\n          x-apideck-enum-id: tax-rates.status\n          x-graphql-type-name: TaxRateStatus\n        tax_payable_account_id:\n          description: Unique identifier for the account for tax collected.\n          example: \"123456\"\n          nullable: true\n          title: Tax payable account id\n          type: string\n        tax_remitted_account_id:\n          description: Unique identifier for the account for tax remitted.\n          example: \"123456\"\n          nullable: true\n          title: Tax remitted account id\n          type: string\n        total_tax_rate:\n          description: Not compounded sum of the components of a tax rate\n          example: 10\n          nullable: true\n          title: Total tax rate\n          type: number\n        type:\n          description: Tax type used to indicate the source of tax collected or paid\n          example: NONE\n          nullable: true\n          title: Tax Type\n          type: string\n        updated_at:\n          $ref: \"#/components/schemas/UpdatedAt\"\n        updated_by:\n          $ref: \"#/components/schemas/UpdatedBy\"\n      type: object\n      x-apideck-weights:\n        code: edge-case\n        components: medium\n        created_at: low\n        created_by: edge-case\n        description: low\n        effective_tax_rate: critical\n        id: critical\n        name: high\n        original_tax_rate_id: edge-case\n        report_tax_type: edge-case\n        row_version: edge-case\n        status: high\n        tax_payable_account_id: high\n        tax_remitted_account_id: medium\n        total_tax_rate: high\n        type: high\n        updated_at: medium\n        updated_by: edge-case\n    TaxRatesFilter:\n      additionalProperties: false\n      example:\n        assets: true\n        equity: true\n        expenses: true\n        liabilities: true\n        revenue: true\n      properties:\n        assets:\n          description: Boolean to describe if tax rate can be used for asset accounts\n          example: true\n          title: Assets\n          type: boolean\n        equity:\n          description: Boolean to describe if tax rate can be used for equity accounts\n          example: true\n          title: Equity\n          type: boolean\n        expenses:\n          description: Boolean to describe if tax rate can be used for expense accounts\n          example: true\n          title: Expenses\n          type: boolean\n        liabilities:\n          description: Boolean to describe if tax rate can be used for liability accounts\n          example: true\n          title: Liabilities\n          type: boolean\n        revenue:\n          description: Boolean to describe if tax rate can be used for revenue accounts\n          example: true\n          title: Revenue\n          type: boolean\n      type: object\n      x-graphql-type-name: TaxRatesFilter\n    Title:\n      example: CEO\n      nullable: true\n      title: Job title\n      type: string\n    TooManyRequestsResponse:\n      properties:\n        detail:\n          properties:\n            context:\n              type: string\n            error:\n              additionalProperties: true\n              type: object\n          type: object\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 6585)\n          example: Too Many Requests\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Connector Rate Limit Error\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#connectorratelimiterror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 429\n          type: number\n        type_name:\n          description: The type of error returned\n          example: ConnectorRateLimitError\n          type: string\n    UnauthorizedResponse:\n      properties:\n        detail:\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n          example: Failed to generate valid JWT Session. Verify applicationId is correct\n          type: string\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Unauthorized\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Unauthorized Request\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#unauthorizederror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 401\n          type: number\n        type_name:\n          description: The type of error returned\n          example: UnauthorizedError\n          type: string\n    UnexpectedErrorResponse:\n      properties:\n        detail:\n          anyOf:\n            - example: \"Missing Header: x-apideck-consumer-id\"\n              type: string\n            - example:\n                missing:\n                  - x-apideck-consumer-id: required\n              type: object\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Bad Request\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Invalid Params\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#unauthorizederror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 400\n          type: number\n        type_name:\n          description: The type of error returned\n          example: RequestHeadersValidationError\n          type: string\n    UnifiedId:\n      properties:\n        id:\n          example: \"12345\"\n          readOnly: true\n          type: string\n      required:\n        - id\n      title: UnifiedId\n    UnitOfMeasure:\n      description: \"Description of the unit type the item is sold as, ie: kg, hour.\"\n      example: pc.\n      nullable: true\n      title: Unit of measure\n      type: string\n    UnitPrice:\n      example: 27500.5\n      nullable: true\n      title: Unit price\n      type: number\n    UnprocessableResponse:\n      properties:\n        detail:\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n          example: State did not include unified_api\n          type: string\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Unprocessable Entity\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Invalid State\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#invalidstateerror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 422\n          type: number\n        type_name:\n          description: The type of error returned\n          example: InvalidStateError\n          type: string\n    UpdateBillResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: delete\n          type: string\n        resource:\n          description: Unified API resource name\n          example: bills\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    UpdateCustomerResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: customers\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    UpdateInvoiceItemsResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: invoice-items\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    UpdateInvoiceResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/InvoiceResponse\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: invoices\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    UpdateLedgerAccountResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: ledger-accounts\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    UpdatePaymentResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: update\n          type: string\n        resource:\n          description: Unified API resource name\n          example: payments\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    UpdateSupplierResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: update\n          type: string\n        resource:\n          description: Unified API resource name\n          example: suppliers\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    UpdateTaxRateResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/UnifiedId\"\n        operation:\n          description: Operation performed\n          example: one\n          type: string\n        resource:\n          description: Unified API resource name\n          example: tax-rates\n          type: string\n        service:\n          description: Apideck ID of service provider\n          example: xero\n          type: string\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - service\n        - resource\n        - operation\n        - data\n      type: object\n    UpdatedAt:\n      example: 2020-09-30T07:43:32.000Z\n      format: date-time\n      readOnly: true\n      title: Updated at (timestamp)\n      type: string\n    UpdatedBy:\n      example: \"12345\"\n      nullable: true\n      readOnly: true\n      type: string\n    Website:\n      additionalProperties: false\n      properties:\n        id:\n          example: \"12345\"\n          nullable: true\n          type: string\n        type:\n          enum:\n            - primary\n            - secondary\n            - work\n            - personal\n            - other\n          example: primary\n          type: string\n          x-apideck-enum-id: websites.type\n          x-graphql-type-name: WebsiteType\n        url:\n          example: http://example.com\n          minLength: 1\n          type: string\n      required:\n        - url\n      type: object\n      x-apideck-weights:\n        id: edge-case\n        type: critical\n        url: critical\n  securitySchemes:\n    apiKey:\n      description: |\n        To use API you have to sign up and get your own API key. Unify API accounts have sandbox mode and live mode API keys. \n        To change modes just use the appropriate key to get a live or test object. You can find your API keys on the unify settings of your Apideck app.\n        Your Apideck application_id can also be found on the same page.\n\n        Authenticate your API requests by including your test or live secret API key in the request header. \n\n        - Bearer authorization header: `Authorization: Bearer \u003cyour-apideck-api-key\u003e`\n        - Application id header: `x-apideck-app-id: \u003cyour-apideck-app-id\u003e`\n\n        You should use the public keys on the SDKs and the secret keys to authenticate API requests.\n\n        **Do not share or include your secret API keys on client side code.** Your API keys carry significant privileges. Please ensure to keep them 100% secure and be sure to not share your secret API keys in areas that are publicly accessible like GitHub.\n\n        Learn how to set the Authorization header inside Postman https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key\n\n        Go to Unify to grab your API KEY https://app.apideck.com/unify/api-keys\n      in: header\n      name: Authorization\n      type: apiKey\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/apideck.com/accounting/8.32.6/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/apideck.com/accounting/8.32.6/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: \"pass_through\": field \"AdditionalProps\": object with additionalProperties not implemented",
	"NotImplemented": [
		"object with additionalProperties"
	]
}