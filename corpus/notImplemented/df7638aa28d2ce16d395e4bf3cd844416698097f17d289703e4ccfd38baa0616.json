{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bigcommerce/api-specs"
		},
		"file": {
			"name": "carts.sf.yml",
			"size": 0,
			"path": "reference/carts.sf.yml",
			"byteSize": 55045,
			"content": "openapi: 3.0.1\ninfo:\n  version: Storefront\n  title: Storefront Carts\n  description: Manage cart operations and data via front-end JavaScript on BigCommerce stencil powered storefronts.\nservers:\n  - url: 'https://{store_domain}/api/storefront'\ntags:\n  - name: Cart\n  - name: Cart Items\n  - name: Cart Currency\npaths:\n  /carts:\n    get:\n      tags:\n        - Cart\n      summary: Get a Cart\n      description: |-\n        Returns a *Cart*.\n\n        \u003c!-- theme: info --\u003e\n        \u003e #### Note\n        \u003e The Send a Test Request feature is not currently supported for this endpoint.\n      operationId: getACart\n      parameters:\n        - $ref: '#/components/parameters/include'\n      responses:\n        '200':\n          $ref: '#/components/responses/getCarts'\n    post:\n      tags:\n        - Cart\n      summary: Create a Cart\n      description: |-\n        Creates a *Cart*.\n\n        \u003c!-- theme: info --\u003e\n        \u003e #### Note\n        \u003e The Send a Test Request feature is not currently supported for this endpoint.\n      operationId: createACart\n      parameters:\n        - $ref: '#/components/parameters/include'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/requestCart'\n            examples:\n              With Text Modifier:\n                value:\n                  lineItems:\n                    - quantity: 2\n                      productId: 230\n                      optionSelections:\n                        - optionId: 10\n                          optionValue: Some Text Value\n                  locale: en\n        required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/postCarts'\n      x-codegen-request-body-name: cartData\n  '/carts/{cartId}':\n    delete:\n      tags:\n        - Cart\n      summary: Delete a Cart\n      description: |-\n        Deletes a *Cart*. Once a *Cart* has been deleted it can not be recovered.\n\n        \u003c!-- theme: info --\u003e\n        \u003e #### Note\n        \u003e The Send a Test Request feature is not currently supported for this endpoint.\n      operationId: deleteACart\n      parameters:\n        - name: cartId\n          in: path\n          description: This cart's unique ID.\n          required: true\n          schema:\n            type: string\n            format: UUID\n      responses:\n        '204':\n          description: No Content\n  '/carts/{cartId}/items':\n    post:\n      tags:\n        - Cart Items\n      summary: Add Cart Line Items\n      description: |-\n        Adds a line items to the *Cart*.\n\n        \u003c!-- theme: info --\u003e\n        \u003e #### Note\n        \u003e The Send a Test Request feature is not currently supported for this endpoint.\n      operationId: addCartLineItem\n      parameters:\n        - name: cartId\n          in: path\n          description: This cart's unique ID.\n          required: true\n          schema:\n            type: string\n            format: UUID\n        - name: include\n          in: query\n          description: |-\n            To return product options add one of the following include:\n\n            `lineItems.physicalItems.options`: The Cart returns an abbreviated result. Use this to return physical items product options. Can also be used in a /POST to have the extended Cart object return.\n\n            `lineItems.digitalItems.options`:  The Cart returns an abbreviated result. Use this to return digital items product options.  Can also be used in a /POST to have the extended Cart object return.\n\n            `lineItems.digitalItems.options,lineItems.physicalItems.options`:  The Cart returns an abbreviated result. Use this to return digital and physical options. Can also be used in a /POST to have the extended Cart object return.\n          schema:\n            type: string\n            default: 'lineItems.digitalItems.options,lineItems.physicalItems.options'\n            enum:\n              - lineItems.physicalItems.options\n              - lineItems.digitalItems.options\n              - 'lineItems.digitalItems.options,lineItems.physicalItems.options'\n      responses:\n        '200':\n          $ref: '#/components/responses/postCartsItems'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LineItemsRequest'\n            examples:\n              With Option Selections:\n                value:\n                  lineItems:\n                    - quantity: 2\n                      productId: 230\n                      variantId: 124\n                      optionSelections:\n                        - optionId: 10\n                          optionValue: 117\n                        - optionId: 11\n                          optionValue: 125\n        description: ''\n  '/carts/{cartId}/items/{itemId}':\n    put:\n      tags:\n        - Cart Items\n      summary: Update Cart Line Item\n      description: |-\n        Updates a *Cart* line item. Updates an existing, single line item quantity and the price of custom items in a cart.\n\n        If a modified product or variant needs to be changed or updated, you can remove and re-add the product to the cart with the correct variants using the [Delete Cart Line Item](/api-reference/storefront/carts/cart-items/deletecartlineitem) and the [Add Cart Line Items](/api-reference/storefront/carts/cart-items/addcartlineitem) endpoints.\n\n        \u003c!-- theme: info --\u003e\n        \u003e #### Note\n        \u003e The Send a Test Request feature is not currently supported for this endpoint.\n      operationId: updateCartLineItem\n      parameters:\n        - name: cartId\n          in: path\n          description: This cart's unique ID.\n          required: true\n          schema:\n            type: string\n            format: UUID\n        - name: itemId\n          in: path\n          description: This item's ID.\n          required: true\n          schema:\n            type: string\n            format: number\n        - name: include\n          in: query\n          description: |-\n            To return product options add one of the following include:\n\n            `lineItems.physicalItems.options`: The Cart returns an abbreviated result. Use this to return physical items product options. Can also be used in a /POST to have the extended Cart object return.\n\n            `lineItems.digitalItems.options`:  The Cart returns an abbreviated result. Use this to return digital items product options.  Can also be used in a /POST to have the extended Cart object return.\n\n            `lineItems.digitalItems.options,lineItems.physicalItems.options`:  The Cart returns an abbreviated result. Use this to return digital and physical options. Can also be used in a /POST to have the extended Cart object return.\n          schema:\n            type: string\n            default: 'lineItems.digitalItems.options,lineItems.physicalItems.options'\n            enum:\n              - lineItems.physicalItems.options\n              - lineItems.digitalItems.options\n              - 'lineItems.digitalItems.options,lineItems.physicalItems.options'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/requestLineItemPut'\n            examples:\n              Example:\n                value:\n                  lineItem:\n                    productId: 229\n                    variantId: 191\n                    quantity: 10\n        required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/putCartsItems'\n      x-codegen-request-body-name: lineItem\n    delete:\n      tags:\n        - Cart Items\n      summary: Delete Cart Line Item\n      description: |-\n        Deletes a *Cart* line item.\n\n        Removing the last `line_item` in the *Cart* deletes the *Cart*.\n\n        \u003c!-- theme: info --\u003e\n        \u003e #### Note\n        \u003e The Send a Test Request feature is not currently supported for this endpoint.\n      operationId: deleteCartLineItem\n      parameters:\n        - name: cartId\n          in: path\n          description: This cart's unique ID.\n          required: true\n          schema:\n            type: string\n            format: UUID\n        - name: itemId\n          in: path\n          description: The ID of the item to delete.\n          required: true\n          schema:\n            type: string\n            format: number\n        - name: include\n          in: query\n          description: |-\n            To return product options add one of the following include:\n\n            `lineItems.physicalItems.options`: The Cart returns an abbreviated result. Use this to return physical items product options. Can also be used in a /POST to have the extended Cart object return.\n\n            `lineItems.digitalItems.options`:  The Cart returns an abbreviated result. Use this to return digital items product options.  Can also be used in a /POST to have the extended Cart object return.\n\n            `lineItems.digitalItems.options,lineItems.physicalItems.options`:  The Cart returns an abbreviated result. Use this to return digital and physical options. Can also be used in a /POST to have the extended Cart object return.\n          schema:\n            type: string\n            default: 'lineItems.digitalItems.options,lineItems.physicalItems.options'\n            enum:\n              - lineItems.physicalItems.options\n              - lineItems.digitalItems.options\n              - 'lineItems.digitalItems.options,lineItems.physicalItems.options'\n      responses:\n        '200':\n          $ref: '#/components/responses/deleteCartsItems'\n  '/carts/{cartId}/currency':\n    post:\n      tags:\n        - Cart Currency\n      summary: Update Cart Currency\n      description: |-\n        Update currency of the *Cart*. \n        Promotions and gift certificates that don't apply to the new currency will be removed from your cart.\n        You cannot update the cart currency if the draft order cart or the cart contains a manual discount.\n\n        \u003c!-- theme: info --\u003e\n        \u003e #### Note\n        \u003e The Send a Test Request feature is not currently supported for this endpoint.\n      operationId: addCartCurrency\n      parameters:\n        - name: cartId\n          in: path\n          description: This cart's unique ID.\n          required: true\n          schema:\n            type: string\n            format: UUID\n      responses:\n        '200':\n          $ref: '#/components/responses/getCarts'\n        '400':\n          description: Bad request. Authentication Required.\n        '404':\n          description: Currency not found\n        '422':\n          description: Missing or invalid data\n      requestBody:\n        content:\n          application/json:\n            schema:\n              title: Cart Currency Request Data\n              required:\n                - currencyCode\n              type: object\n              properties:\n                currencyCode:\n                  type: string\n                  description: currency code\n              x-internal: false\n        description: ''\ncomponents:\n  schemas:\n    responseCartCoupons:\n      title: Response Cart Coupons\n      type: array\n      items:\n        required:\n          - code\n        type: object\n        properties:\n          code:\n            type: string\n            description: The coupon code.\n          couponType:\n            type: integer\n            description: |-\n              |Type `int`|Type Name|\n              |-|-|\n              |`0`|`per_item_discount`|\n              |`1`|`percentage_discount`|\n              |`2`|`per_total_discount`|\n              |`3`|`shipping_discount`|\n              |`4`|`free_shipping`|\n              |`5`|`promotion`|\n          discountedAmount:\n            type: number\n            description: The discounted amount applied within a given context.\n            format: float\n          id:\n            type: string\n            description: The coupon ID.\n      x-internal: false\n    responseCartDiscounts:\n      title: responseCartDiscounts\n      type: array\n      x-examples: {}\n      items:\n        type: object\n        properties:\n          discountedAmount:\n            type: number\n            description: The discounted amount applied within a given context.\n            format: float\n          id:\n            type: string\n            description: ID of the applied discount.\n      x-internal: false\n    responseCart:\n      description: Cart object used in storefront cart responses.\n      title: Cart Read\n      type: object\n      properties:\n        id:\n          type: string\n          description: 'Cart ID, provided after creating a cart with a POST.'\n          format: UUID\n        customerId:\n          type: integer\n          description: ID of the customer to which the cart belongs.\n        email:\n          type: string\n          description: The cart's email. This is the same email that is used in the billing address\n        currency:\n          $ref: '#/components/schemas/responseCartCurrency'\n        isTaxIncluded:\n          type: boolean\n          description: Whether this item is taxable.\n        baseAmount:\n          type: number\n          description: 'Cost of cart’s contents, before applying discounts.'\n        discountAmount:\n          type: number\n          description: Discounted amount.\n          format: float\n        cartAmount:\n          type: number\n          description: 'Sum of line-items amounts, minus cart-level discounts and coupons. This amount includes taxes (where applicable).'\n        coupons:\n          $ref: '#/components/schemas/responseCartCoupons'\n        discounts:\n          $ref: '#/components/schemas/responseCartDiscounts'\n        lineItems:\n          $ref: '#/components/schemas/responseCartLineItems'\n        createdTime:\n          type: string\n          description: Time when the cart was created.\n          format: ISO-8601\n        updatedTime:\n          type: string\n          description: Time when the cart was last updated.\n          format: ISO-8601\n        locale:\n          type: string\n          description: Locale of the cart.\n      x-internal: false\n    requestCart:\n      title: Create Cart Request Object\n      description: Cart object used in create cart requests.\n      oneOf:\n        - properties:\n            lineItems:\n              type: array\n              items:\n                $ref: '#/components/schemas/requestCartPostLineItem'\n            locale:\n              type: string\n          required:\n            - lineItems\n        - properties:\n            giftCertificates:\n              type: array\n              items:\n                $ref: '#/components/schemas/requestLineItemGiftCertificate'\n            locale:\n              type: string\n          required:\n            - giftCertificates\n        - properties:\n            lineItems:\n              type: array\n              items:\n                $ref: '#/components/schemas/requestCartPostLineItem'\n            giftCertificates:\n              $ref: '#/components/schemas/requestLineItemGiftCertificate'\n            locale:\n              type: string\n          required:\n            - lineItems\n            - giftCertificates\n      type: object\n      x-internal: false\n    responseCartLineItemsPhysicalItemGiftWrapping:\n      title: Gift Wrapping\n      type: object\n      properties:\n        amount:\n          type: number\n          description: Gift-wrapping price per product.\n          format: float\n        message:\n          type: string\n        name:\n          type: string\n          description: Name of the gift-wrapping option.\n      nullable: true\n      x-internal: false\n    requestLineItemGiftCertificate:\n      title: Line Item Gift Certificate Request Data\n      required:\n        - amount\n        - name\n        - quantity\n        - recipient\n        - sender\n        - theme\n      type: object\n      properties:\n        amount:\n          maximum: 1000\n          minimum: 1\n          type: number\n          description: Gift-certificate amount.\n        message:\n          type: string\n          description: 'Message shown to recipient, as provided by sender.'\n        name:\n          type: string\n          description: Name assigned to this gift-certificate line item.\n        quantity:\n          minimum: 1\n          type: integer\n          description: Quantity of this item.\n        recipient:\n          $ref: '#/components/schemas/requestLineItemGiftCertificateRecipient'\n        sender:\n          $ref: '#/components/schemas/requestLineItemGiftCertificateSender'\n        theme:\n          type: string\n          description: 'Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'\n      x-internal: false\n    LineItemsRequest:\n      title: requestLineItems\n      oneOf:\n        - properties:\n            lineItems:\n              type: array\n              items:\n                $ref: '#/components/schemas/requestCartPostLineItem'\n          required:\n            - lineItems\n        - properties:\n            giftCertificates:\n              type: array\n              items:\n                $ref: '#/components/schemas/requestLineItemGiftCertificate'\n          required:\n            - giftCertificates\n        - properties:\n            lineItems:\n              type: array\n              items:\n                $ref: '#/components/schemas/requestCartPostLineItem'\n            giftCertificates:\n              $ref: '#/components/schemas/requestLineItemGiftCertificate'\n          required:\n            - lineItems\n            - giftCertificates\n      x-examples: {}\n      type: object\n      description: Cart object used in add items requests.\n      x-internal: false\n    requestLineItemPut:\n      title: requestLineItemPut\n      oneOf:\n        - properties:\n            lineItem:\n              $ref: '#/components/schemas/requestCartPostLineItem'\n          required:\n            - lineItem\n        - properties:\n            giftCertificates:\n              $ref: '#/components/schemas/requestLineItemGiftCertificate'\n          required:\n            - giftCertificates\n        - properties:\n            lineItem:\n              $ref: '#/components/schemas/requestCartPostLineItem'\n            giftCertificates:\n              $ref: '#/components/schemas/requestLineItemGiftCertificate'\n          required:\n            - lineItem\n            - giftCertificates\n      x-examples: {}\n      description: ''\n      type: object\n      x-internal: false\n    responseCartCurrency:\n      title: Currency\n      type: object\n      properties:\n        code:\n          type: string\n          description: 'ISO-4217 currency code. (See: http://en.wikipedia.org/wiki/ISO_4217.)'\n          format: ISO-4217\n      description: This will always be the same between cart and checkout.\n      x-go-gen-location: models\n      x-internal: false\n    responseCartLineItems:\n      title: Response Line Items Object\n      type: object\n      properties:\n        customItems:\n          type: array\n          items:\n            $ref: '#/components/schemas/responseCartLineItemsCustomItems'\n        digitalItems:\n          type: array\n          description: Array of `ItemDigital` objects.\n          items:\n            $ref: '#/components/schemas/responseCartLineItemsDigitalItems'\n        giftCertificates:\n          type: array\n          description: Array of `ItemGiftCertificate` objects.\n          items:\n            $ref: '#/components/schemas/responseCartLineItemsGiftCertificates'\n        physicalItems:\n          type: array\n          description: Array of `ItemPhysical` objects.\n          items:\n            $ref: '#/components/schemas/responseCartLineItemsItemsPhysicalItemsItems'\n      x-internal: false\n    responseCartLineItemsCustomItems:\n      title: Item Custom\n      type: object\n      properties:\n        extendedListPrice:\n          type: integer\n          readOnly: true\n        id:\n          type: string\n          description: Id of the custom item\n          readOnly: true\n          example: f1f3a531-fbcf-439b-bac1-40d5ae5c2bff\n        listPrice:\n          type: integer\n          description: Price of the item. With or without tax depending on your stores set up.\n          readOnly: true\n          example: 10\n        name:\n          type: string\n          description: Item name\n          readOnly: true\n          example: Custom Item Name\n        quantity:\n          type: integer\n          readOnly: true\n          example: 1\n        sku:\n          type: string\n          description: Custom item sku\n          readOnly: true\n          example: SM-456\n      description: |-\n        **Read Only**\n\n        This will return in the Cart Response if the Cart was created using the [Server to Server Cart API](/api-reference/cart-checkout/server-server-cart-api). A custom item can only be added to a cart using the Server to Server API.\n      x-internal: false\n    responseCartLineItemsDigitalItems:\n      title: Item Digital\n      allOf:\n        - $ref: '#/components/schemas/responseCartLineItemsDigitalItemsAllOf0'\n      x-internal: false\n    responseCartLineItemsDigitalItemsAllOf0:\n      title: Base Item\n      required:\n        - quantity\n      type: object\n      properties:\n        options:\n          type: array\n          description: The list of selected options for this product.\n          items:\n            $ref: '#/components/schemas/responseCartLineItemsDigitalItemsAllOf0OptionsItems'\n        brand:\n          type: string\n          description: The products brand\n        couponAmount:\n          type: number\n          description: The total value of all coupons applied to this item.\n        discountAmount:\n          type: number\n          description: The total value of all discounts applied to this item (excluding coupon).\n          format: float\n        discounts:\n          type: array\n          description: 'List of discounts applied to this item, as an array of AppliedDiscount objects.'\n          items:\n            $ref: '#/components/schemas/responseCartLineItemsDigitalItemsAllOf0DiscountsItems'\n        extendedListPrice:\n          type: number\n          description: Item's list price multiplied by the quantity.\n        extendedSalePrice:\n          type: number\n          description: Item's sale price multiplied by the quantity.\n        id:\n          type: string\n          description: The line-item ID.\n          example: '4'\n        imageUrl:\n          type: string\n          description: 'URL of an image of this item, accessible on the internet.'\n          format: uri\n        isTaxable:\n          type: boolean\n          description: Whether the item is taxable.\n        listPrice:\n          type: number\n          description: 'Item’s list price, as quoted by the manufacturer/distributor.'\n        name:\n          type: string\n          description: The item's product name.\n        parentId:\n          type: string\n          description: 'The product is part of a bundle such as a product pick list, then the parentId or the main product id will populate.'\n          example: '6'\n        productId:\n          type: number\n          description: ID of the product.\n        quantity:\n          type: number\n          description: Quantity of this item.\n        salePrice:\n          type: number\n          description: Item's price after all discounts are applied. (The final price before tax calculation.)\n        sku:\n          type: string\n          description: SKU of the variant.\n        url:\n          type: string\n          description: The product URL.\n          format: uri\n        variantId:\n          type: number\n          description: ID of the variant.\n          example: 7\n      x-internal: false\n    responseCartLineItemsDigitalItemsAllOf0DiscountsItems:\n      title: Applied Discount\n      type: object\n      properties:\n        discountedAmount:\n          type: number\n          description: The discounted amount applied within a given context.\n          format: float\n        id:\n          type: number\n          description: ID of the applied discount.\n      x-internal: false\n    responseCartLineItemsDigitalItemsAllOf0OptionsItems:\n      title: Product Option\n      type: object\n      properties:\n        name:\n          type: string\n          description: 'The product option name. For example, Color or Size'\n        nameId:\n          type: number\n          description: 'The product option identifier. It is the same as the `optionId` used in the request. '\n          example: 125\n        value:\n          type: string\n          description: 'The product option value. For example, Red or Medium'\n        valueId:\n          type: number\n          description: The product option value identifier. It is the same as the `optionValue` used in the request.\n          example: 127\n      x-internal: false\n    responseCartLineItemsGiftCertificates:\n      title: Item Gift Certificate\n      required:\n        - amount\n        - recipient\n        - sender\n        - theme\n      type: object\n      properties:\n        amount:\n          type: number\n          description: 'Value must be between 1.00 and 1,000.00 in the storeʼs default currency.'\n        id:\n          type: string\n          description: ID of this gift certificate.\n        isTaxable:\n          type: boolean\n          description: Whether or not the gift certificate is taxable.\n        message:\n          type: string\n          description: Message that will be sent to the gift certificate's recipient. Limited to 200 characters.\n        name:\n          type: string\n          description: GiftCertificate-provided name that will appear in the control panel.\n        recipient:\n          $ref: '#/components/schemas/responseCartLineItemsGiftCertificatesRecipient'\n        sender:\n          $ref: '#/components/schemas/responseCartLineItemsGiftCertificatesSender'\n        theme:\n          type: string\n          description: 'Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.'\n      x-internal: false\n    responseCartLineItemsGiftCertificatesRecipient:\n      title: Contact Entity\n      type: object\n      properties:\n        email:\n          type: string\n          description: Contact's email address.\n          format: email\n        name:\n          type: string\n          description: Contact's name.\n      x-internal: false\n    responseCartLineItemsGiftCertificatesSender:\n      title: Contact Entity\n      type: object\n      properties:\n        email:\n          type: string\n          description: Contact's email address.\n          format: email\n        name:\n          type: string\n          description: Contact's name.\n      x-internal: false\n    responseCartLineItemsItemsPhysicalItemsItems:\n      title: Item Physical\n      allOf:\n        - $ref: '#/components/schemas/responseCartBaseItem'\n        - $ref: '#/components/schemas/responseCartLineItemsItemsPhysicalItemsItemsAllOf1'\n      x-internal: false\n    responseCartBaseItem:\n      title: Base Item\n      type: object\n      properties:\n        options:\n          type: array\n          description: The list of selected options for this product.\n          items:\n            $ref: '#/components/schemas/responseCartLineItemsItemsPhysicalItemsItemsAllOf0OptionsItems'\n        brand:\n          type: string\n          description: The products brand\n        couponAmount:\n          type: number\n          description: The total value of all coupons applied to this item.\n        discountAmount:\n          type: number\n          description: The total value of all discounts applied to this item (excluding coupon).\n          format: float\n        discounts:\n          $ref: '#/components/schemas/responseCartDiscounts'\n        extendedListPrice:\n          type: number\n          description: Item's list price multiplied by the quantity.\n        extendedSalePrice:\n          type: number\n          description: Item's sale price multiplied by the quantity.\n        id:\n          type: string\n          description: The line-item ID.\n          example: '4'\n        imageUrl:\n          type: string\n          description: 'URL of an image of this item, accessible on the internet.'\n          format: uri\n        isTaxable:\n          type: boolean\n          description: Whether the item is taxable.\n        listPrice:\n          type: number\n          description: The net item price before discounts and coupons. It is based on the product default price or sale price (if set) configured in BigCommerce Admin.\n        name:\n          type: string\n          description: The item's product name.\n        parentId:\n          type: number\n          description: 'The product is part of a bundle such as a product pick list, then the parentId or the main product id will populate.'\n          example: 6\n        productId:\n          type: number\n          description: ID of the product.\n        quantity:\n          type: number\n          description: Quantity of this item.\n        salePrice:\n          type: number\n          description: Item's price after all discounts are applied. (The final price before tax calculation.)\n        sku:\n          type: string\n          description: SKU of the variant.\n        url:\n          type: string\n          description: The product URL.\n          format: uri\n        variantId:\n          type: number\n          description: ID of the variant.\n          example: 7\n      required:\n        - quantity\n      x-internal: false\n    responseCartLineItemsItemsPhysicalItemsItemsAllOf0OptionsItems:\n      title: Product Option\n      type: object\n      properties:\n        name:\n          type: string\n          description: 'The product option name. For example, Color or Size'\n        nameId:\n          type: number\n          description: The product option identifier. It is the same as the `optionId` used in the request.\n          example: 125\n        value:\n          type: string\n          description: 'The product option value. For example, Red or Medium'\n        valueId:\n          type: number\n          description: The product option value identifier. It is the same as the `optionValue` used in the request.\n          example: 127\n      x-internal: false\n    responseCartLineItemsItemsPhysicalItemsItemsAllOf1:\n      type: object\n      properties:\n        giftWrapping:\n          $ref: '#/components/schemas/responseCartLineItemsPhysicalItemGiftWrapping'\n        isShippingRequired:\n          type: boolean\n          description: Whether this item requires shipping to a physical address.\n      x-internal: false\n    requestCartPostLineItem:\n      title: Line Item Request Data\n      anyOf:\n        - properties:\n            productId:\n              type: number\n              description: ID of the product.\n            quantity:\n              type: number\n              description: Quantity of this item.\n          required:\n            - productId\n            - quantity\n        - properties:\n            productId:\n              type: number\n              description: ID of the product.\n            quantity:\n              type: number\n              description: Quantity of this item.\n            variantId:\n              type: number\n              description: ID of the variant.\n          required:\n            - productId\n            - quantity\n            - variantId\n        - properties:\n            productId:\n              type: number\n              description: ID of the product.\n            quantity:\n              type: number\n              description: Quantity of this item.\n            variantId:\n              type: number\n            optionSelections:\n              type: array\n              items:\n                description: Array of `OptionSelection` objects.\n                x-examples: {}\n                anyOf:\n                  - properties:\n                      optionId:\n                        type: number\n                        description: 'ID of the option, same as the `nameId`.'\n                        example: 10\n                      optionValue:\n                        description: 'Value of the option, same as the `valueId`.'\n                        oneOf:\n                          - type: string\n                            example: Small\n                          - type: number\n                            example: 127\n                          - type: object\n                            properties:\n                              month:\n                                type: string\n                              day:\n                                type: string\n                              year:\n                                type: string\n                type: object\n          required:\n            - productId\n            - quantity\n            - variantId\n            - optionSelections\n      x-examples:\n        example-1:\n          productId: 0\n          quantity: 0\n      x-internal: false\n      type: object\n    requestLineItemGiftCertificateRecipient:\n      title: Contact Entity\n      type: object\n      properties:\n        email:\n          type: string\n          description: Contact's email address.\n          format: email\n        name:\n          type: string\n          description: Contact's name.\n      x-internal: false\n    requestLineItemGiftCertificateSender:\n      title: Contact Entity\n      type: object\n      properties:\n        email:\n          type: string\n          description: Contact's email address.\n          format: email\n        name:\n          type: string\n          description: Contact's name.\n      x-internal: false\n  responses:\n    postCarts:\n      description: Post Carts Response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/responseCart'\n          examples:\n            Example:\n              value:\n                id: string\n                customerId: 0\n                email: string\n                currency:\n                  code: string\n                isTaxIncluded: true\n                baseAmount: 0\n                discountAmount: 0\n                cartAmount: 0\n                coupons:\n                  - code: string\n                    couponType: 0\n                    discountedAmount: 0\n                    id: string\n                discounts:\n                  - discountedAmount: 0\n                    id: string\n                lineItems:\n                  customItems:\n                    - extendedListPrice: 0\n                      id: f1f3a531-fbcf-439b-bac1-40d5ae5c2bff\n                      listPrice: 10\n                      name: Custom Item Name\n                      quantity: 1\n                      sku: SM-456\n                  digitalItems:\n                    - options:\n                        - name: string\n                          nameId: 0\n                          value: string\n                          valueId: 0\n                      brand: string\n                      couponAmount: 0\n                      discountAmount: 0\n                      discounts:\n                        - discountedAmount: 0\n                          id: 0\n                      extendedListPrice: 0\n                      extendedSalePrice: 0\n                      id: '4'\n                      imageUrl: 'http://example.com'\n                      isTaxable: true\n                      listPrice: 0\n                      name: string\n                      parentId: '6'\n                      productId: 0\n                      quantity: 0\n                      salePrice: 0\n                      sku: string\n                      url: 'http://example.com'\n                      variantId: 7\n                  giftCertificates:\n                    - amount: 0\n                      id: string\n                      isTaxable: true\n                      message: string\n                      name: string\n                      recipient:\n                        email: user@example.com\n                        name: string\n                      sender:\n                        email: user@example.com\n                        name: string\n                      theme: string\n                  physicalItems:\n                    - options:\n                        - name: string\n                          nameId: 0\n                          value: string\n                          valueId: 0\n                      brand: string\n                      couponAmount: 0\n                      discountAmount: 0\n                      discounts:\n                        - discountedAmount: 0\n                          id: string\n                      extendedListPrice: 0\n                      extendedSalePrice: 0\n                      id: '4'\n                      imageUrl: 'http://example.com'\n                      isTaxable: true\n                      listPrice: 0\n                      name: string\n                      parentId: 6\n                      productId: 0\n                      quantity: 0\n                      salePrice: 0\n                      sku: string\n                      url: 'http://example.com'\n                      variantId: 7\n                      giftWrapping:\n                        amount: 0\n                        message: string\n                        name: string\n                      isShippingRequired: true\n                createdTime: string\n                updatedTime: string\n                locale: string\n    postCartsItems:\n      description: ''\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/responseCart'\n          examples:\n            example-1:\n              value:\n                id: string\n                customerId: 0\n                email: string\n                currency:\n                  code: string\n                isTaxIncluded: true\n                baseAmount: 0\n                discountAmount: 0\n                cartAmount: 0\n                coupons:\n                  - code: string\n                    couponType: 0\n                    discountedAmount: 0\n                    id: string\n                discounts:\n                  - discountedAmount: 0\n                    id: string\n                lineItems:\n                  customItems:\n                    - extendedListPrice: 0\n                      id: f1f3a531-fbcf-439b-bac1-40d5ae5c2bff\n                      listPrice: 10\n                      name: Custom Item Name\n                      quantity: 1\n                      sku: SM-456\n                  digitalItems:\n                    - options:\n                        - name: string\n                          nameId: 0\n                          value: string\n                          valueId: 0\n                      brand: string\n                      couponAmount: 0\n                      discountAmount: 0\n                      discounts:\n                        - discountedAmount: 0\n                          id: 0\n                      extendedListPrice: 0\n                      extendedSalePrice: 0\n                      id: '4'\n                      imageUrl: 'http://example.com'\n                      isTaxable: true\n                      listPrice: 0\n                      name: string\n                      parentId: '6'\n                      productId: 0\n                      quantity: 0\n                      salePrice: 0\n                      sku: string\n                      url: 'http://example.com'\n                      variantId: 7\n                  giftCertificates:\n                    - amount: 0\n                      id: string\n                      isTaxable: true\n                      message: string\n                      name: string\n                      recipient:\n                        email: user@example.com\n                        name: string\n                      sender:\n                        email: user@example.com\n                        name: string\n                      theme: string\n                  physicalItems:\n                    - options:\n                        - name: string\n                          nameId: 0\n                          value: string\n                          valueId: 0\n                      brand: string\n                      couponAmount: 0\n                      discountAmount: 0\n                      discounts:\n                        - discountedAmount: 0\n                          id: string\n                      extendedListPrice: 0\n                      extendedSalePrice: 0\n                      id: '4'\n                      imageUrl: 'http://example.com'\n                      isTaxable: true\n                      listPrice: 0\n                      name: string\n                      parentId: 6\n                      productId: 0\n                      quantity: 0\n                      salePrice: 0\n                      sku: string\n                      url: 'http://example.com'\n                      variantId: 7\n                      giftWrapping:\n                        amount: 0\n                        message: string\n                        name: string\n                      isShippingRequired: true\n                createdTime: string\n                updatedTime: string\n                locale: string\n    putCartsItems:\n      description: ''\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/responseCart'\n          examples:\n            Example:\n              value:\n                id: string\n                customerId: 0\n                email: string\n                currency:\n                  code: string\n                isTaxIncluded: true\n                baseAmount: 0\n                discountAmount: 0\n                cartAmount: 0\n                coupons:\n                  - code: string\n                    couponType: 0\n                    discountedAmount: 0\n                    id: string\n                discounts:\n                  - discountedAmount: 0\n                    id: string\n                lineItems:\n                  customItems:\n                    - extendedListPrice: 0\n                      id: f1f3a531-fbcf-439b-bac1-40d5ae5c2bff\n                      listPrice: 10\n                      name: Custom Item Name\n                      quantity: 1\n                      sku: SM-456\n                  digitalItems:\n                    - options:\n                        - name: string\n                          nameId: 0\n                          value: string\n                          valueId: 0\n                      brand: string\n                      couponAmount: 0\n                      discountAmount: 0\n                      discounts:\n                        - discountedAmount: 0\n                          id: 0\n                      extendedListPrice: 0\n                      extendedSalePrice: 0\n                      id: '4'\n                      imageUrl: 'http://example.com'\n                      isTaxable: true\n                      listPrice: 0\n                      name: string\n                      parentId: '6'\n                      productId: 0\n                      quantity: 0\n                      salePrice: 0\n                      sku: string\n                      url: 'http://example.com'\n                      variantId: 7\n                  giftCertificates:\n                    - amount: 0\n                      id: string\n                      isTaxable: true\n                      message: string\n                      name: string\n                      recipient:\n                        email: user@example.com\n                        name: string\n                      sender:\n                        email: user@example.com\n                        name: string\n                      theme: string\n                  physicalItems:\n                    - options:\n                        - name: string\n                          nameId: 0\n                          value: string\n                          valueId: 0\n                      brand: string\n                      couponAmount: 0\n                      discountAmount: 0\n                      discounts:\n                        - discountedAmount: 0\n                          id: string\n                      extendedListPrice: 0\n                      extendedSalePrice: 0\n                      id: '4'\n                      imageUrl: 'http://example.com'\n                      isTaxable: true\n                      listPrice: 0\n                      name: string\n                      parentId: 6\n                      productId: 0\n                      quantity: 0\n                      salePrice: 0\n                      sku: string\n                      url: 'http://example.com'\n                      variantId: 7\n                      giftWrapping:\n                        amount: 0\n                        message: string\n                        name: string\n                      isShippingRequired: true\n                createdTime: string\n                updatedTime: string\n                locale: string\n    getCarts:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/responseCart'\n          examples:\n            Example:\n              value:\n                - id: 770ded29-da45-4ee0-abc6-883e83c0e5ed\n                  customerId: 0\n                  email: ''\n                  currency:\n                    name: US Dollars\n                    code: USD\n                    symbol: $\n                    decimalPlaces: 2\n                  isTaxIncluded: false\n                  baseAmount: 246\n                  discountAmount: 0\n                  cartAmount: 221.4\n                  coupons: []\n                  discounts:\n                    - id: a83dea21-d757-47a2-a06a-73cf6a983746\n                      discountedAmount: 24.6\n                  lineItems:\n                    physicalItems:\n                      - id: a83dea21-d757-47a2-a06a-73cf6a983746\n                        parentId: 6\n                        variantId: 193\n                        productId: 230\n                        sku: sku123-VA\n                        name: options test\n                        url: 'https://store.example.com/options-test/'\n                        quantity: 2\n                        brand: BigCommerce\n                        isTaxable: true\n                        imageUrl: 'https://cdn11.bigcommerce.com/r-3b68d717e18793df0b51c71e16bc24664ad18b7c/themes/ClassicNext/images/ProductDefault.gif'\n                        discounts:\n                          - id: string\n                            discountedAmount: 24.6\n                        discountAmount: 24.6\n                        couponAmount: 0\n                        listPrice: 123\n                        salePrice: 110.7\n                        extendedListPrice: 246\n                        extendedSalePrice: 221.4\n                        isShippingRequired: true\n                        type: physical\n                        isMutable: true\n                        giftWrapping: null\n                    digitalItems: []\n                    giftCertificates: []\n                    customItems: []\n                  createdTime: '2021-03-04T14:17:50+00:00'\n                  updatedTime: '2021-03-04T14:17:50+00:00'\n                  locale: en\n    deleteCartsItems:\n      description: 'NOTE: Discounted line items are re-evaluated on cart actions and may be automatically added back to your cart with a new line item ID to satisfy promotional requirements.'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/responseCart'\n          examples:\n            Example:\n              value:\n                id: string\n                customerId: 0\n                email: string\n                currency:\n                  code: string\n                isTaxIncluded: true\n                baseAmount: 0\n                discountAmount: 0\n                cartAmount: 0\n                coupons:\n                  - code: string\n                    couponType: 0\n                    discountedAmount: 0\n                    id: string\n                discounts:\n                  - discountedAmount: 0\n                    id: string\n                lineItems:\n                  customItems:\n                    - extendedListPrice: 0\n                      id: f1f3a531-fbcf-439b-bac1-40d5ae5c2bff\n                      listPrice: 10\n                      name: Custom Item Name\n                      quantity: 1\n                      sku: SM-456\n                  digitalItems:\n                    - options:\n                        - name: string\n                          nameId: 0\n                          value: string\n                          valueId: 0\n                      brand: string\n                      couponAmount: 0\n                      discountAmount: 0\n                      discounts:\n                        - discountedAmount: 0\n                          id: 0\n                      extendedListPrice: 0\n                      extendedSalePrice: 0\n                      id: '4'\n                      imageUrl: 'http://example.com'\n                      isTaxable: true\n                      listPrice: 0\n                      name: string\n                      parentId: '6'\n                      productId: 0\n                      quantity: 0\n                      salePrice: 0\n                      sku: string\n                      url: 'http://example.com'\n                      variantId: 7\n                  giftCertificates:\n                    - amount: 0\n                      id: string\n                      isTaxable: true\n                      message: string\n                      name: string\n                      recipient:\n                        email: user@example.com\n                        name: string\n                      sender:\n                        email: user@example.com\n                        name: string\n                      theme: string\n                  physicalItems:\n                    - options:\n                        - name: string\n                          nameId: 0\n                          value: string\n                          valueId: 0\n                      brand: string\n                      couponAmount: 0\n                      discountAmount: 0\n                      discounts:\n                        - discountedAmount: 0\n                          id: string\n                      extendedListPrice: 0\n                      extendedSalePrice: 0\n                      id: '4'\n                      imageUrl: 'http://example.com'\n                      isTaxable: true\n                      listPrice: 0\n                      name: string\n                      parentId: 6\n                      productId: 0\n                      quantity: 0\n                      salePrice: 0\n                      sku: string\n                      url: 'http://example.com'\n                      variantId: 7\n                      giftWrapping: null\n                      isShippingRequired: true\n                createdTime: string\n                updatedTime: string\n                locale: string\n    deleteCarts:\n      description: ''\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/responseCart'\n          examples:\n            example-1:\n              value:\n                id: string\n                customerId: 0\n                email: string\n                currency:\n                  code: string\n                isTaxIncluded: true\n                baseAmount: 0\n                discountAmount: 0\n                cartAmount: 0\n                coupons:\n                  - code: string\n                    couponType: 0\n                    discountedAmount: 0\n                    id: string\n                discounts:\n                  - discountedAmount: 0\n                    id: string\n                lineItems:\n                  customItems:\n                    - extendedListPrice: 0\n                      id: f1f3a531-fbcf-439b-bac1-40d5ae5c2bff\n                      listPrice: 10\n                      name: Custom Item Name\n                      quantity: 1\n                      sku: SM-456\n                  digitalItems:\n                    - options:\n                        - name: string\n                          nameId: 0\n                          value: string\n                          valueId: 0\n                      brand: string\n                      couponAmount: 0\n                      discountAmount: 0\n                      discounts:\n                        - discountedAmount: 0\n                          id: 0\n                      extendedListPrice: 0\n                      extendedSalePrice: 0\n                      id: '4'\n                      imageUrl: 'http://example.com'\n                      isTaxable: true\n                      listPrice: 0\n                      name: string\n                      parentId: '6'\n                      productId: 0\n                      quantity: 0\n                      salePrice: 0\n                      sku: string\n                      url: 'http://example.com'\n                      variantId: 7\n                  giftCertificates:\n                    - amount: 0\n                      id: string\n                      isTaxable: true\n                      message: string\n                      name: string\n                      recipient:\n                        email: user@example.com\n                        name: string\n                      sender:\n                        email: user@example.com\n                        name: string\n                      theme: string\n                  physicalItems:\n                    - options:\n                        - name: string\n                          nameId: 0\n                          value: string\n                          valueId: 0\n                      brand: string\n                      couponAmount: 0\n                      discountAmount: 0\n                      discounts:\n                        - discountedAmount: 0\n                          id: string\n                      extendedListPrice: 0\n                      extendedSalePrice: 0\n                      id: '4'\n                      imageUrl: 'http://example.com'\n                      isTaxable: true\n                      listPrice: 0\n                      name: string\n                      parentId: 6\n                      productId: 0\n                      quantity: 0\n                      salePrice: 0\n                      sku: string\n                      url: 'http://example.com'\n                      variantId: 7\n                      giftWrapping: null\n                      isShippingRequired: true\n                createdTime: string\n                updatedTime: string\n                locale: string\n  parameters:\n    include:\n      name: include\n      in: query\n      description: Include product options in specified line item types.\n      schema:\n        type: string\n        enum:\n          - lineItems.physicalItems.options\n          - lineItems.digitalItems.options\n          - 'lineItems.digitalItems.options,lineItems.physicalItems.options'\n  examples: {}\nx-stoplight:\n  docs:\n    includeDownloadLink: true\n    showModels: false\n",
			"canonicalURL": "/github.com/bigcommerce/api-specs@3d4f475bfa35fa63397a69165530f47d4d8b3703/-/blob/reference/carts.sf.yml",
			"externalURLs": [
				{
					"url": "https://github.com/bigcommerce/api-specs/blob/3d4f475bfa35fa63397a69165530f47d4d8b3703/reference/carts.sf.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/carts\": post: requestBody: contents: application/json: generate schema: oneOf: collect variants: oneOf[0]: field lineItems: item: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}