{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/factset/enterprise-sdk"
		},
		"file": {
			"name": "FactSetPeople.v1.yaml",
			"size": 0,
			"path": "specs/FactSetPeople.v1.yaml",
			"byteSize": 51193,
			"content": "openapi: 3.0.0\ninfo:\n  title: FactSet People API\n  version: 1.0.0\n  description: |\n    The FactSet People API exposes FactSet data for individuals and their jobs.\n  contact:\n    name: FactSet Research Systems\n    email: api@factset.com\nservers:\n  - url: https://api.factset.com/content\n    description: Production Server\nsecurity:\n  - FactSetApiKey: []\n  - FactSetOAuth2: []\ntags:\n  - name: Profiles\n    description: Return information about the person with the specified entity ID.\n  - name: Job History\n    description: Returns the job history of the person\n  - name: Company\n    description: Returns a list of associated people for a requested company\npaths:\n  /factset-people/v1/profiles:\n    get:\n      summary: Return information about the person with the specified entity ID.\n      description: \u003e\n        Returns a summary of basic information about the person referenced by\n        the entityId specified in the URI.\n      tags:\n        - Profiles\n      operationId: getPeopleProfiles\n      parameters:\n        - $ref: '#/components/parameters/profileEntityId'\n      responses:\n        '200':\n          description: Array of Profile Ojects\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/peopleProfilesResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n    post:\n      summary: Returns profile information for a large list of people.\n      tags:\n        - Profiles\n      operationId: getPeopleProfilesForList\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/peopleProfilesRequest'\n      responses:\n        '200':\n          description: Array of People Profile Objects\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/peopleProfilesResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n  /factset-people/v1/jobs:\n    get:\n      summary: Returns the Job history of the person.\n      description: \u003e\n        Returns the `Job` history of the person referenced by the entityId\n        specified in the request.\n      tags:\n        - Job History\n      operationId: getPeopleJobs\n      parameters:\n        - $ref: '#/components/parameters/entityId'\n        - $ref: '#/components/parameters/status'\n        - $ref: '#/components/parameters/level'\n        - $ref: '#/components/parameters/type'\n      responses:\n        '200':\n          description: Array of Job objects.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/peopleJobsResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n    post:\n      summary: Returns the Job history for the large list of people.\n      description: \u003e\n        Returns the `Job` history of the person referenced by the entityId\n        specified in the request.\n      tags:\n        - Job History\n      operationId: getPeopleJobsForList\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/peopleJobsRequest'\n      responses:\n        '200':\n          description: Array of Job objects.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/peopleJobsResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n  /factset-people/v1/company-people:\n    get:\n      summary: Returns the list of people for the specified company identifiers\n      description: \u003e\n        Returns the list of executives associated the company identifier\n        requested. Information includes the job functions, email, phone, title,\n        name, and FactSet Entity Identifier. The personId returned can then be\n        used in the `/profiles` endpoint to learn more about the given person.\n      tags:\n        - Company\n      operationId: getCompanyPeople\n      parameters:\n        - $ref: '#/components/parameters/companyId'\n        - $ref: '#/components/parameters/jobFunction'\n      responses:\n        '200':\n          description: Array of Company People objects.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/companyPeopleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n    post:\n      summary: \u003e-\n        Returns the list of people associated for a large list of company\n        identitifers\n      description: \u003e\n        Returns the list of executives associated the company identifier\n        requested. Information includes the job functions, email, phone, title,\n        name, and FactSet Entity Identifier. The personId returned can then be\n        used in the /profiles endpoint to learn more about the given person.\n      tags:\n        - Company\n      operationId: getCompanyPeopleForList\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/companyPeopleRequest'\n      responses:\n        '200':\n          description: Array of Company People objects.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/companyPeopleResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n  /factset-people/v1/company-positions:\n    get:\n      summary: \u003e-\n        Returns the list of people for the specified company identifiers and\n        position\n      description: \u003e\n        Returns the list of people, name, and title for a list of company ids\n        and requested position. Positions include-\n          * Chairman\n          * Chief Executive Officer\n          * President\n          * Chief Operating Officer\n          * Chief Financial Officer\n          * Chief Technology Officer\n          * Chief Investment Officer\n          * Founder(s)\n          * Compliance Officer\n          * Admin\n          * Independent Director\n          * Directors/Board Members\n          * Investor Relations\n          * Legal Counsel\n          * Treasurer\n          * Sales and Marketing Managers\n          * Human Resources\n      tags:\n        - Company\n      operationId: getCompanyPositions\n      parameters:\n        - $ref: '#/components/parameters/companyId'\n        - $ref: '#/components/parameters/position'\n      responses:\n        '200':\n          description: Array of Company Positions objects.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/companyPositionsResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n    post:\n      summary: \u003e-\n        Returns the list of people associated for a large list of company\n        identitifers and position\n      description: \u003e\n        Returns the list of people, name, and title for a list of company ids\n        and requested position. Positions include-\n          * Chairman\n          * Chief Executive Officer\n          * President\n          * Chief Operating Officer\n          * Chief Financial Officer\n          * Chief Technology Officer\n          * Chief Investment Officer\n          * Founder(s)\n          * Compliance Officer\n          * Admin\n          * Independent Director\n          * Directors/Board Members\n          * Investor Relations\n          * Legal Counsel\n          * Treasurer\n          * Sales and Marketing Managers\n          * Human Resources\n      tags:\n        - Company\n      operationId: getCompanyPositionsForList\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/companyPositionsRequest'\n      responses:\n        '200':\n          description: Array of Company Positions objects.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/companyPositionsResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n  /factset-people/v1/company-compensation:\n    get:\n      summary: \u003e-\n        Returns the compensation details of the people for the specified company\n        identifier\n      description: \u003e\n        Returns the list of company-level executive compensation data items for\n        the top executives listed in annual filings.The coverage of the\n        compensation details for the executives are limited to US region. All\n        the compensation figures are expressed in raw units. \n      tags:\n        - Company\n      operationId: getCompanyCompensation\n      parameters:\n        - $ref: '#/components/parameters/companyId'\n      responses:\n        '200':\n          description: Array of Company Compensation objects.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/companyCompensationResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n    post:\n      summary: \u003e-\n        Returns the compensation details for the people for the specified\n        company identifier\n      description: \u003e\n        Returns the list of company-level executive compensation data items for\n        the top executives listed in annual filings for the most recent fiscal\n        year. The coverage of the compensation details for the executives are\n        limited to US region. All the compensation figures are expressed in raw\n        units. \n      tags:\n        - Company\n      operationId: getCompanyCompensationForList\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/companyCompensationRequest'\n      responses:\n        '200':\n          description: Array of Company Positions objects.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/companyCompensationResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n  /factset-people/v1/company-stats:\n    get:\n      summary: Returns statistics about top leadership of a company.\n      description: \u003e\n        Returns the statistics such as the average age, tenure, compensation of\n        leadership, number of executives, and the gender diversity of\n        leadership. We can utilize the data for analyzing a company's board and\n        management.\n      tags:\n        - Company\n      operationId: getCompanyStats\n      parameters:\n        - $ref: '#/components/parameters/companyId'\n        - $ref: '#/components/parameters/mbType'\n      responses:\n        '200':\n          description: Array of Company Stats objects.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/companyStatsResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n    post:\n      summary: Returns statistics about top leadership of a company.\n      description: \u003e\n        Returns the statistics such as the average age, tenure, compensation of\n        leadership, number of executives, and the gender diversity of\n        leadership. We can utilize the data for analyzing a company's board and\n        management. \n      tags:\n        - Company\n      operationId: getCompanyStatsForList\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/companyStatsRequest'\n      responses:\n        '200':\n          description: Array of Company Positions objects.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/companyStatsResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\ncomponents:\n  securitySchemes:\n    FactSetOAuth2:\n      type: oauth2\n      flows:\n        clientCredentials:\n          tokenUrl: https://auth.factset.com/as/token.oauth2\n          scopes: {}\n    FactSetApiKey:\n      type: http\n      scheme: basic\n  parameters:\n    entityId:\n      name: ids\n      description: List of FactSet Person Entity identifier.\n      in: query\n      schema:\n        type: array\n        items:\n          type: string\n        minItems: 1\n        maxItems: 1000\n      required: true\n      explode: false\n      example:\n        - 0DPHLH-E\n        - 07MZV9-E\n    profileEntityId:\n      name: ids\n      description: List of FactSet Person Entity identifier.\n      in: query\n      schema:\n        type: array\n        items:\n          type: string\n        minItems: 1\n        maxItems: 500\n      required: true\n      explode: false\n      example:\n        - 0DPHLH-E\n        - 07MZV9-E\n    status:\n      name: status\n      description: Select only Jobs with a certain status primary, active, or inactive.\n      in: query\n      schema:\n        type: string\n        enum:\n          - ALL\n          - PRIMARY\n          - ACTIVE\n          - INACTIVE\n        default: ALL\n    level:\n      name: level\n      description: \u003e-\n        Select the level of detail only main Jobs or include other Jobs at a\n        company.\n      in: query\n      schema:\n        type: string\n        enum:\n          - SUMMARY\n          - DETAIL\n        default: DETAIL\n    type:\n      name: type\n      description: Select only Jobs of a certain type board member or employee.\n      in: query\n      schema:\n        type: string\n        enum:\n          - ALL\n          - BRD\n          - EMP\n        default: ALL\n    companyId:\n      name: ids\n      description: \u003e\n        The requested company identifier. FactSet Identifiers, tickers, CUSIP,\n        SEDOL, and ISIN are accepted inputs. \u003cp\u003e***ids limit** =  1000 per\n        request*\u003c/p\u003e\n\n        *\u003cp\u003eMake note, GET Method URL request lines are also limited to a total\n\n        length of 8192 bytes (8KB). In cases where the service allows for\n        thousands\n\n        of ids, which may lead to exceeding this request line limit of 8KB, its\n\n        advised for any requests with large request lines to be requested\n        through\n\n        the respective \"POST\" method.\u003c/p\u003e*\n      in: query\n      schema:\n        type: array\n        items:\n          type: string\n        minItems: 1\n        maxItems: 1000\n      required: true\n      explode: false\n      example:\n        - AAPL-US\n        - IBM-US\n    jobFunction:\n      name: function\n      description: \u003e\n        Controls the types of people returned based on high-level job functions.\n        Filter by - \n          |function|description|\n          |---|---|\n          |PEOPLE|Retrieve **ALL** Executives of a requested company|\n          |OFFICER|Retrieve only the Officers of a requested company|\n          |DIRECTOR|Retrieve only the Directors of a requested company|\n      in: query\n      schema:\n        type: string\n        enum:\n          - PEOPLE\n          - OFFICER\n          - DIRECTOR\n        example: PEOPLE\n        default: PEOPLE\n      required: false\n    position:\n      name: position\n      description: \u003e\n        Controls the position details returned for the requested company. By\n        default, the service returns the CEO name, title, and ID for the\n        requested company ids.\n          |position|description|\n          |---|---|\n          |CHAIR|Chairman|\n          |CEO|Chief Executive Officer|\n          |PRES|President|\n          |COO|Chief Operating Officer|\n          |CFO|Chief Financial Officer|\n          |CTO|Chief Technology Officer|\n          |CIO|Chief Investment Officer|\n          |FOU|Founder(s)|\n          |CMP|Compliance Officer|\n          |ADM|Admin|\n          |IND|Independent Director|\n          |BRD|Directors/Board Members|\n          |IR|Investor Relations|\n          |LEG|Legal Counsel|\n          |TREAS|Treasurer|\n          |MKT|Sales and Marketing Managers|\n          |HR|Human Resources|\n      in: query\n      schema:\n        type: string\n        enum:\n          - CHAIR\n          - CEO\n          - PRES\n          - COO\n          - CFO\n          - CTO\n          - CIO\n          - FOU\n          - CMP\n          - ADM\n          - IND\n          - BRD\n          - IR\n          - LEG\n          - TREAS\n          - MKT\n          - HR\n        example: FOU\n        default: CEO\n      required: false\n    mbType:\n      name: mbType\n      description: |\n        Search based on the management and board types. The types include - \n        |type|description|\n        |---|---|\n        |MB|Management \u0026 Board|\n        |MGMT|Management|\n        |BRD|Board|\n      in: query\n      schema:\n        type: string\n        enum:\n          - MB\n          - MGMT\n          - BRD\n        default: MB\n  schemas:\n    peopleProfilesRequest:\n      title: Profiles Request\n      type: object\n      properties:\n        ids:\n          $ref: '#/components/schemas/ids'\n      required:\n        - ids\n    peopleProfilesResponse:\n      title: Profiles Response\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/profile'\n    profile:\n      title: Profile\n      type: object\n      description: Basic information about a person entity.\n      properties:\n        requestId:\n          type: string\n          description: Person identifier used in the request.\n          example: 0DPHLH-E\n        personId:\n          description: FactSet Entity Identifier for the Person\n          type: string\n          example: 0DPHLH-E\n        lastName:\n          description: Last Name\n          type: string\n          example: Snow\n          x-fds-fql-formula: FPD_PERSON('LAST_NAME')\n        factsetName:\n          description: Name\n          type: string\n          example: Philip Snow\n          x-fds-fql-formula: FPD_PERSON('NAME')\n        firstName:\n          description: First Name\n          type: string\n          example: Frederick\n          x-fds-fql-formula: FPD_PERSON('FIRST_NAME')\n        middleName:\n          description: Middle Name\n          type: string\n          example: Philip\n          x-fds-fql-formula: FPD_PERSON('MIDDLE_NAME')\n        formalName:\n          description: Formal Name\n          type: string\n          example: Frederick Philip Snow\n          x-fds-fql-formula: FPD_PERSON('FORMAL_NAME')\n        properName:\n          description: Proper Name\n          type: string\n          example: Snow Frederick Philip CFA\n          x-fds-fql-formula: PROPER_NAME\n        salutation:\n          description: Primary Salutation of Name\n          type: string\n          example: Mr.\n          x-fds-fql-formula: FPD_PERSON(SALUTATION)\n        highestDegree:\n          description: The Highest Held Degree Code.\n          type: string\n          example: GRD\n          x-fds-fql-formula: FPD_PERSON('EDU_DEGREE_CODE')\n        highestDegreeInst:\n          description: The Highest Degree Institution Name.\n          type: string\n          example: Thunderbird School of Global Management\n          x-fds-fql-formula: FPD_PERSON('EDU_INST')\n        suffix:\n          description: Suffix of Name\n          type: string\n          example: CFA\n          x-fds-fql-formula: FPD_PERSON('SUFFIX')\n        age:\n          description: Person's age in years.\n          type: number\n          format: integer\n          example: 57\n          x-fds-fql-formula: FPD_PERSON('AGE')\n        gender:\n          description: Person's Gender.\n          type: string\n          example: Male\n          x-fds-fql-formula: FPD_PERSON('GENDER')\n        salary:\n          description: Most Recent Salary\n          type: number\n          format: integer\n          example: 525846\n          x-fds-fql-formula: FPD_PERSON('SALARY')\n        totalCompensation:\n          description: Most Recent Total Compensation\n          type: number\n          format: integer\n          example: 4719062\n          x-fds-fql-formula: FPD_PERSON(TOTAL_COMP)\n        primaryCompanyId:\n          description: Entity identifier of primary `Company` of employment.\n          type: string\n          example: 0016YD-E\n        primaryCompanyName:\n          description: Name of primary company of employment\n          type: string\n          example: FactSet Research Systems, Inc.\n          x-fds-fql-formula: FPD_PERSON('PRIMARY_CO_NAME')\n        primaryTitle:\n          description: Title at primary `Company` of employment\n          type: string\n          example: Chief Executive Officer \u0026 Director\n          x-fds-fql-formula: FPD_PERSON(PRIMARY_TITLE)\n        biography:\n          description: Brief biography of the person requested.\n          type: string\n          example: \u003e-\n            Frederick Philip Snow is Chief Executive Officer \u0026 Director at\n            FactSet Research Systems, Inc. He is also on the board of FactSet\n            Systems India Pvt Ltd., Quantopian, Inc. and Vermilion Holdings Ltd.\n            and Member of CFA Institute. Mr. Snow received an undergraduate\n            degree from the University of California, Berkeley and a graduate\n            degree from Thunderbird School of Global Management.\n          x-fds-fql-formula: FPD_PERSON('BIO')\n    peopleJobsRequest:\n      title: Jobs Request\n      type: object\n      properties:\n        ids:\n          $ref: '#/components/schemas/ids'\n        status:\n          $ref: '#/components/schemas/status'\n        level:\n          $ref: '#/components/schemas/level'\n        type:\n          $ref: '#/components/schemas/type'\n      required:\n        - ids\n    peopleJobsResponse:\n      title: Jobs Response\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/job'\n    job:\n      title: Job\n      type: object\n      description: Basic information about a person's `Job`.\n      properties:\n        companyCity:\n          description: City the job is located in.\n          type: string\n          example: Norwalk\n          x-fds-fql-formula: FPD_PERSON_JOBS(CITY)\n        companyId:\n          description: FactSet Identifier for the company.\n          type: string\n          example: 0016YD-E\n        companyName:\n          description: Name of the company.\n          type: string\n          example: FactSet Research Systems, Inc.\n          x-fds-fql-formula: FPD_PERSON_JOBS(CO_NAME)\n        jobEndDate:\n          description: Ending date for the Job.\n          type: string\n          format: date\n          example: '0001-01-01'\n          x-fds-fql-formula: FPD_PERSON_JOBS(EDATE)\n        jobFunctionCode:\n          description: Job function code.\n          type: string\n          example: CEO\n          x-fds-fql-formula: FPD_PERSON_JOBS(JOB_FUNC_CODE)\n        jobFunctionName:\n          description: Description of the job.\n          type: string\n          example: Chief Executive Officer\n          x-fds-fql-formula: FPD_PERSON_JOBS(JOB_FUNC_DESC)\n        jobStartDate:\n          description: Starting date for the Job.\n          type: string\n          format: date\n          example: '2015-07-01'\n          x-fds-fql-formula: FPD_PERSON_JOBS(SDATE)\n        jobTitle:\n          description: Job Title\n          type: string\n          example: Chief Executive Officer \u0026 Director\n          x-fds-fql-formula: FPD_PERSON_JOBS(TITLE)\n        personId:\n          description: FactSet Entity Identifier for the Person.\n          type: string\n          example: 0DPHLH-E\n        requestId:\n          description: Original identifier used for the request.\n          type: string\n          example: 0DPHLH-E\n    companyPeopleRequest:\n      title: Company People Request\n      type: object\n      properties:\n        ids:\n          $ref: '#/components/schemas/companyIds'\n        function:\n          $ref: '#/components/schemas/function'\n      required:\n        - ids\n    companyPeopleResponse:\n      title: Company People Response\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/companyPeople'\n    companyPeople:\n      title: Company People\n      type: object\n      description: List of executives for the specified company identifier.\n      properties:\n        fsymId:\n          description: FactSet Identifier for the company requested.\n          type: string\n          example: 000C7F-E\n        email:\n          description: Email of the person\n          type: string\n          example: null\n        name:\n          description: FactSet Name of the person\n          type: string\n          example: Tim Cook\n        jobFunction1:\n          description: Job Function1\n          type: string\n          example: Chief Executive Officer\n          x-fds-fql-formula: FPD_CO_PEOPLE_JOBFUNC\n        jobFunction2:\n          description: Job Function2\n          type: string\n          example: Director/Board Member\n          x-fds-fql-formula: FPD_CO_PEOPLE_JOBFUNC\n        jobFunction3:\n          description: Job Function3\n          type: string\n          example: null\n        jobFunction4:\n          description: Job Function4\n          type: string\n          example: null\n          x-fds-fql-formula: FPD_CO_PEOPLE_JOBFUNC\n        mainPhone:\n          description: Main Phone Numbers of the executives.\n          type: string\n          example: 1.408.996.1010\n          x-fds-fql-formula: FPD_CO_PEOPLE_PHONE_MAIN\n        personId:\n          description: FactSet Entity Identifier for the Person.\n          type: string\n          example: 05F520-E\n        phone:\n          description: Phone number of the executives.\n          type: string\n          example: null\n          x-fds-fql-formula: FPD_CO_PEOPLE_PHONE\n        requestId:\n          description: Original identifier used for the request.\n          type: string\n          example: AAPL-US\n        title:\n          description: Executive titles for a specified company.\n          type: string\n          example: Chief Executive officer \u0026 Director\n          x-fds-fql-formula: FPD_CO_PEOPLE_TITLES\n    companyPositionsRequest:\n      title: Company Positions Request\n      type: object\n      properties:\n        ids:\n          $ref: '#/components/schemas/companyIds'\n        position:\n          $ref: '#/components/schemas/position'\n      required:\n        - ids\n    companyPositionsResponse:\n      title: Company Positions Response\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/companyPositions'\n    companyPositions:\n      title: Company Positions\n      type: object\n      description: List of executives for the specified company identifier.\n      properties:\n        fsymId:\n          description: FactSet Identifier for the company.\n          type: string\n          example: 006XY7-E\n        personId:\n          description: Factset Entity Identifier for the Person\n          type: string\n          example: 05H8B8-E\n        name:\n          description: FactSet Name of the person\n          type: string\n          example: Elon Reeve Musk\n        title:\n          description: The requested Position Title\n          type: string\n          example: Technoking of Tesla\n          x-fds-fql-formula: FPD_CO_PEOPLE_BY_POSITION(TITLE)\n        yearsAtFirm:\n          description: \u003e-\n            The number of years individual is at firm. For founders, this is\n            since inception.\n          type: number\n          format: double\n          example: 17.78\n          x-fds-fql-formula: FPD_CO_PEOPLE_BY_POSITION(YRS_FIRM))\n        age:\n          description: The age of the person requested.\n          type: number\n          format: integer\n          example: 48\n          x-fds-fql-formula: FPD_CO_PEOPLE_BY_POSITION(AGE))\n        gender:\n          description: The Gender of the person requested.\n          type: string\n          example: Male\n          x-fds-fql-formula: FPD_CO_PEOPLE_BY_POSITION(GENDER))\n        requestPosition:\n          description: The requested position code.\n          type: string\n          example: CEO\n        requestId:\n          description: Original identifier used for the request.\n          type: string\n          example: TSLA-US\n    companyCompensationRequest:\n      title: Company Compensation Request\n      type: object\n      properties:\n        ids:\n          $ref: '#/components/schemas/companyIds'\n      required:\n        - ids\n    companyCompensationResponse:\n      title: Company Compensation Response\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/companyCompensation'\n    companyCompensation:\n      title: Company Compensation\n      type: object\n      description: \u003e-\n        List of executives and their compensation details for the specified\n        company identifier.\n      properties:\n        name:\n          description: FactSet Name of the person\n          type: string\n          example: Tim Cook\n        personId:\n          description: Factset Entity Identifier for the Person\n          type: string\n          example: 05F520-E\n        title:\n          description: The requested Position Title\n          type: string\n          example: Chief Executive Officer \u0026 Director\n          x-fds-fql-formula: FPD_CO_COMPENSATION(EXEC_TITLE)\n        salary:\n          description: Salary of the person. Expressed in USD and raw units.\n          type: number\n          format: integer\n          example: 525846\n          x-fds-fql-formula: FPD_CO_COMPENSATION(SALARY)\n        bonus:\n          description: \u003e-\n            Bonus of the executive during the fiscal year. Expressed in USD and\n            raw units.\n          type: number\n          format: integer\n          example: 48\n          x-fds-fql-formula: FPD_CO_COMPENSATION(BONUS)\n        stockAwards:\n          description: Stock awards for the person. Expressed in USD and raw units.\n          type: number\n          format: integer\n          example: null\n          x-fds-fql-formula: FPD_CO_COMPENSATION(STOCK_AWARDS)\n        optionsAwards:\n          description: Option Awards for the person. Expressed in USD and raw units.\n          type: number\n          format: integer\n          example: null\n          x-fds-fql-formula: FPD_CO_COMPENSATION(OPTION_AWARDS)\n        otherCompensation:\n          description: \u003e-\n            All the other compensations which are not explicitly defined as\n            salary, bonus, stock awards, or options awards. Expressed in USD and\n            raw units.\n          type: number\n          format: integer\n          example: 11200\n          x-fds-fql-formula: FPD_CO_COMPENSATION(ALL_OTHER_COMP)\n        totalCompensation:\n          description: \u003e-\n            The sum of all compensation for the requested person as reported by\n            the company. Expressed in USD and raw units.\n          type: number\n          format: integer\n          example: 4719062\n          x-fds-fql-formula: FPD_CO_COMPENSATION(TOTAL_COMP)\n        nonEquityIncentivePlanComp:\n          description: \u003e-\n            All the earnings pursuant to awards under non-equity incentive\n            plans. Expressed in USD and raw units.\n          type: number\n          format: integer\n          example: 10731000\n          x-fds-fql-formula: FPD_CO_COMPENSATION(NON_EQ_INCENTIVE_PLAN_COMP)\n        nonQualifiedCompEarnings:\n          description: \u003e-\n            All the other nonqualified defined contribution which are not tax\n            qualified and other contributions. Expressed in USD and raw units.\n          type: number\n          format: integer\n          example: null\n        compensationYear:\n          description: \u003e-\n            The most recent year of compensation is expressed as 'YYYY' as\n            opposed to 'YYYY-MM-DD' format.\n          type: string\n          example: '2020'\n          x-fds-fql-formula: FPD_CO_COMPENSATION(COMP_YEAR)\n        requestId:\n          description: Original identifier used for the request.\n          type: string\n          example: TSLA-US\n    companyStatsRequest:\n      title: Company Stats Request\n      type: object\n      properties:\n        ids:\n          $ref: '#/components/schemas/companyIds'\n        mbType:\n          $ref: '#/components/schemas/mbType'\n      required:\n        - ids\n    companyStatsResponse:\n      title: Company Stats Response\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/companyStats'\n    companyStats:\n      title: Company Statistics\n      type: object\n      description: \u003e-\n        List of the statistics such as the average age, tenure, compensation of\n        leadership, the number of executives, and the gender diversity of\n        leadership for the requested identifier.\n      properties:\n        averageMgmtCompensation:\n          description: Average compensation for the executives\n          type: number\n          format: integer\n          example: 2267284\n          x-fds-fql-formula: FPD_CO_MB_STATS(AVG_COMP)\n        averageTenure:\n          description: Avergae tenure of the people\n          type: number\n          format: double\n          example: 12.19\n          x-fds-fql-formula: FPD_CO_MB_STATS(AVG_TENURE)\n        medianTenure:\n          description: Median tenure\n          type: number\n          format: double\n          example: 0.2\n          x-fds-fql-formula: FPD_CO_MB_STATS(MIN_TENURE)\n        averageAge:\n          description: Average of the executives on the management and board\n          type: number\n          format: double\n          example: 58.17\n          x-fds-fql-formula: FPD_CO_MB_STATS(AVG_AGE)\n        maxAge:\n          description: Maximum age of the people on Management \u0026 Board\n          type: number\n          format: integer\n          example: 68\n          x-fds-fql-formula: FPD_CO_MB_STATS(MAX_AGE)\n        minimumAge:\n          description: Minimum age of the person on board\n          type: number\n          format: integer\n          example: 53\n          x-fds-fql-formula: FPD_CO_MB_STATS(MIN_AGE)\n        medianAge:\n          description: Median age of the people on board\n          type: number\n          example: 56\n          x-fds-fql-formula: FPD_CO_MB_STATS(MED_AGE)\n        boardIndependentDirectors:\n          description: Independent directors on the board\n          type: number\n          format: integer\n          example: 7\n          x-fds-fql-formula: FPD_CO_MB_STATS(BRD,IND,NUM)\n        femaleBoardMembers:\n          description: Number of female members on the board\n          type: number\n          format: integer\n          example: 3\n          x-fds-fql-formula: FPD_CO_MB_STATS((BRD,FEMALE_BRD,NUM)\n        numberOfMembers:\n          description: Number of people on board.\n          type: number\n          format: integer\n          example: 25\n          x-fds-fql-formula: FPD_CO_MB_STATS(NUM_MEMBERS)\n        onOtherBoardsAll:\n          description: On Other Boards All\n          type: number\n          format: integer\n          example: 7\n          x-fds-fql-formula: FPD_CO_MB_STATS(BRD,OTH_BRD,NUM)\n        onOtherBoardsCorporate:\n          description: On Other Boards Corporate\n          type: number\n          format: integer\n          example: 6\n          x-fds-fql-formula: FPD_CO_MB_STATS(BRD,OTH_CORP_BRD,NUM)\n        mbType:\n          description: \u003e-\n            Management and Board type, where MB = Management \u0026 Board, MGMT =\n            Management, and BRD = Board. This is a pass-through value from the\n            input used in the `mbType` query parameter.\n          type: string\n          example: MB\n        requestId:\n          description: Original identifier used for the request.\n          type: string\n          example: FDS\n    errorResponse:\n      type: object\n      title: Error Response\n      properties:\n        status:\n          description: status\n          type: string\n          example: Bad Request\n        timestamp:\n          description: timestamp in YYYY-MM-DD HH:MM:SS.SSS\n          type: string\n          example: '2019-11-01 11:09:41.918'\n          format: date-time\n        path:\n          description: The Endpoint path {package}/version/{endpoint}\n          type: string\n          example: /factset-people/v1/superRegion\n        message:\n          description: The plain text error message\n          type: string\n          example: Validation Error\n        subErrors:\n          description: subErrors related to the error message. Null if not applicable.\n          type: object\n          properties:\n            object:\n              description: the operation ID\n              type: string\n            field:\n              description: Parameter Field Name\n              type: string\n            message:\n              description: Error message\n              type: string\n            rejectedValue:\n              description: Rejected Values in an Array\n              type: array\n              items:\n                type: string\n    ids:\n      type: array\n      items:\n        type: string\n      minItems: 1\n      maxItems: 1000\n      description: |\n        FactSet People Entity Ids.\n      example:\n        - 0DPHLH-E\n    companyIds:\n      type: array\n      items:\n        type: string\n      minItems: 1\n      maxItems: 1000\n      description: \u003e\n        The requested company identifier. FactSet Identifiers, tickers, CUSIP,\n        SEDOL, and ISIN are accepted inputs. \u003cp\u003e***ids limit** =  1000 per\n        request*\u003c/p\u003e *\u003cp\u003eMake note, GET Method URL request lines are also\n        limited to a total length of 8192 bytes (8KB). In cases where the\n        service allows for thousands of ids, which may lead to exceeding this\n        request line limit of 8KB, its advised for any requests with large\n        request lines to be requested through the respective \"POST\" method.\u003c/p\u003e*\n      example:\n        - AAPL-US\n    function:\n      type: string\n      enum:\n        - PEOPLE\n        - OFFICER\n        - DIRECTOR\n      default: PEOPLE\n      description: \u003e\n        Controls the types of people returned based on high-level job functions.\n        Filter by - \n          |function|description|\n          |---|---|\n          |PEOPLE|Retrieve **ALL** Executives of a requested company|\n          |OFFICER|Retrieve only the Officers of a requested company|\n          |DIRECTOR|Retrieve only the Directors of a requested company|\n      example: DIRECTOR\n    status:\n      type: string\n      description: Select only Jobs with a certain status primary, active, or inactive.\n      enum:\n        - ALL\n        - PRIMARY\n        - ACTIVE\n        - INACTIVE\n      default: ALL\n    level:\n      description: \u003e-\n        Select the level of detail only main Jobs or include other Jobs at a\n        company.\n      type: string\n      enum:\n        - SUMMARY\n        - DETAIL\n      default: DETAIL\n    type:\n      description: Select only Jobs of a certain type board member or employee.\n      enum:\n        - ALL\n        - BRD\n        - EMP\n      default: ALL\n    position:\n      description: \u003e\n        Controls the position details returned for the requested company. By\n        default, the service returns the CEO name, title, and ID for the\n        requested company ids.\n          |position|description|\n          |---|---|\n          |CHAIR|Chairman|\n          |CEO|Chief Executive Officer|\n          |PRES|President|\n          |COO|Chief Operating Officer|\n          |CFO|Chief Financial Officer|\n          |CTO|Chief Technology Officer|\n          |CIO|Chief Investment Officer|\n          |FOU|Founder(s)|\n          |CMP|Compliance Officer|\n          |ADM|Admin|\n          |IND|Independent Director|\n          |BRD|Directors/Board Members|\n          |IR|Investor Relations|\n          |LEG|Legal Counsel|\n          |TREAS|Treasurer|\n          |MKT|Sales and Marketing Managers|\n          |HR|Human Resources|\n      enum:\n        - CHAIR\n        - CEO\n        - PRES\n        - COO\n        - CFO\n        - CTO\n        - CIO\n        - FOU\n        - CMP\n        - ADM\n        - IND\n        - BRD\n        - IR\n        - LEG\n        - TREAS\n        - MKT\n        - HR\n      default: CEO\n      example: FOU\n    mbType:\n      description: |\n        Search based on the management and board types. The types include - \n        |type|description|\n        |---|---|\n        |MB|Management \u0026 Board|\n        |MGMT|Management|\n        |BRD|Board|\n      type: string\n      enum:\n        - MB\n        - MGMT\n        - BRD\n      default: MB\n  examples:\n    badRequestDateFormat:\n      summary: Bad Request - Date Format\n      description: \u003e-\n        This bad request occurs when a request doesn't use the YYYY-MM-DD in the\n        date parameters. To resolve, convert your date to YYYY-MM-DD.\n      value:\n        status: Bad Request\n        timestamp: '2019-10-31 16:08:07.945'\n        path: /factset-people/v1/{endpoint}\n        message: \u003e-\n          The date parameter 'startDate' must be in the following date format:\n          YYYY-MM-DD\n        subErrors: null\n    badRequestRequiredParameter:\n      summary: Bad Request - Required Parameter Missing\n      description: \u003e-\n        This error message occurs when the request does not include the required\n        parameters. Required parameters are indicated with a red asterisks\n        symbol in the specification file.\n      value:\n        status: Bad Request\n        timestamp: '2020-06-12 15:48:42.016'\n        path: /factset-people/v1/{endpoint}\n        message: The parameter 'ids' is required and may not be empty.\n        subErrors: null\n    badRequestInvalidParameters:\n      summary: Bad Request - Invalid Parameters\n      description: \u003e-\n        This error message occurs when a request parameter is used in which is\n        not recognized by the service. Please revise your request to include\n        only the parameters listed in the specification. Typical causes are\n        spelling mistakes and use of improper casing.\n      value:\n        status: Bad Request\n        timestamp: '2020-06-12 15:58:54.068'\n        path: /factset-people/v1/{endpoint}\n        message: \u003e-\n          Invalid Parameter (s): fakeParameterName1 fakeParameterName2. Please\n          modify your request to use parameters outlined in the specification\n          for this endpoint.\n        subErrors: null\n    badRequestMalformedJSON:\n      summary: Bad Request - Malformed JSON Request\n      description: \u003e-\n        This error may be returned when the request body is specified as JSON,\n        but is not in proper JSON format.\n      value:\n        status: Bad Request\n        timestamp: '2019-11-05 09:48:29.18'\n        path: /factset-people/v1/{endpoint}\n        message: Malformed JSON Request\n        subErrors: null\n    badRequestReadTimeout:\n      summary: Bad Request - Read Timeout\n      description: \u003e-\n        This error may be returned if it takes more than 29 seconds to hear back\n        from the data fetch service.\n      value:\n        status: Bad Request\n        timestamp: '2019-11-04 16:18:38.949'\n        path: /factset-people/v1/{endpoint}\n        message: The request took too long. Try again with a smaller request.\n        subErrors: null\n    unauthenticated:\n      summary: User Authentication Failed\n      description: \u003e-\n        This occurs when a user is not properly authenticated or recognized by\n        the service. Please double check the USERNAME-SERIAL and API-Key used to\n        request and ensure you are within the IP range specified for the Key.\n        Report Issue under 401 error for help with troubleshooting.\n      value:\n        status: User Authentication Failed\n        timestamp: '2019-10-31 16:08:07.945'\n        path: /factset-people/v1/{endpoint}\n        message: User Authentication Failed.\n        subErrors: null\n    forbidden:\n      summary: Forbidden\n      description: \u003e-\n        The USERNAME-SERIAL attempted to request the endpoint is not authorized\n        to access. The request was a legal request, but the server is refusing\n        to respond. Please reach out to FactSet Account Team for assistance with\n        authorization.\n      value:\n        status: Forbidden\n        timestamp: '2020-06-12 16:08:51.731'\n        path: /factset-people/v1/{endpoint}\n        message: \u003e-\n          USERNAME-SERIAL does not have permission to use /factset-people\n          /v1/{endpoint}\n        subErrors: null\n    unsupportedMediaType:\n      summary: Unsupported Media Type\n      description: \u003e-\n        This bad request occurs when the media type passed in the request is not\n        supported. Currently the APIs only support 'application/json'.\n      value:\n        status: Unsupported Media Type\n        timestamp: '2019-11-05 09:42:27.237'\n        path: /factset-people/v1/{endpoint}\n        message: \u003e-\n          text/html media type is not supported. Supported media types are\n          application/json\n        subErrors: null\n    notWritable:\n      summary: Internal Server Error - Not Writable\n      description: \u003e-\n        This error may be returned when the server encounters an error writing\n        the JSON response.\n      value:\n        status: Internal Server Error\n        timestamp: '2019-11-05 09:48:29.18'\n        path: /factset-people/v1/{endpoint}\n        message: Error writing JSON output\n        subErrors: null\n    generalException:\n      summary: Internal Server Error - General Exception\n      description: \u003e-\n        This is the most general error that can be returned to by the service.\n        Please `Report Issue` to FactSet.\n      value:\n        status: Internal Server Error\n        timestamp: '2019-11-01 10:36:01.944'\n        path: /factset-people/v1/{endpoint}\n        message: Unexpected error\n        subErrors: null\n  responses:\n    '400':\n      description: \u003e-\n        Bad Request. This can occur for several reasons. Please review the\n        \"message\" for more details.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n          examples:\n            Bad Request - Date Format:\n              $ref: '#/components/examples/badRequestDateFormat'\n            Bad Request - Missing Required Parameter:\n              $ref: '#/components/examples/badRequestRequiredParameter'\n            Bad Request - Invalid Parameter:\n              $ref: '#/components/examples/badRequestInvalidParameters'\n            Bad Request - Malformed JSON:\n              $ref: '#/components/examples/badRequestMalformedJSON'\n            Bad Request - Read Timeout:\n              $ref: '#/components/examples/badRequestReadTimeout'\n    '401':\n      description: \u003e-\n        Unauthenticated USERNAME-SERIAL. Ensure you are logged in and have\n        successfully generated an API KEY for the IP range you are connecting\n        from. For more help, select the **Report Issue** in the top right corner\n        of this Developer Portal specification card and choose Connectivity 401\n        or 403 Responses.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n          examples:\n            Unauthenticated:\n              $ref: '#/components/examples/unauthenticated'\n    '403':\n      description: \u003e-\n        The USERNAME-SERIAL attempted to request the endpoint is not authorized\n        to access. The request was a legal request, but the server is refusing\n        to respond. Please reach out to FactSet Account Team for assistance with\n        authorization.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n          examples:\n            Forbidden:\n              $ref: '#/components/examples/forbidden'\n    '415':\n      description: \u003e-\n        Unsupported Media Type. This error may be returned when the caller sends\n        a resource in a format that is not accepted by the server. This can be\n        fixed by ensuring that Content-Type header is set to the correct value.\n        In this instance, \"application/json\" would be the appropriate value.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n          examples:\n            Unsupported Media Type:\n              $ref: '#/components/examples/unsupportedMediaType'\n    '500':\n      description: Internal Server Error.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n          examples:\n            Internal Server Error - Not Writable:\n              $ref: '#/components/examples/notWritable'\n            Internal Server Error - General Exception:\n              $ref: '#/components/examples/generalException'\n",
			"canonicalURL": "/github.com/factset/enterprise-sdk@dcf75a02daedc726c313912a349d2863114bc92c/-/blob/specs/FactSetPeople.v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/factset/enterprise-sdk/blob/dcf75a02daedc726c313912a349d2863114bc92c/specs/FactSetPeople.v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/factset-people/v1/company-compensation\": get: security: security \"FactSetOAuth2\" (index 1): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}