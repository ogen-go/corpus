{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/betagouv/publicodes"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "packages/api/source/openapi.yaml",
			"byteSize": 5667,
			"content": "openapi: 3.0.0\n\ninfo:\n  title: Publicode API\n  version: 1.0.0-beta.41\n  description: Cet API expose vos règles Publicodes.\n\ncomponents:\n  schemas:\n    Expressions:\n      description: Une expression ou un tableau d'expressions Publicodes\n      oneOf:\n        - type: array\n          minItems: 1\n          items:\n            $ref: '#/components/schemas/PublicodesExpression'\n        - $ref: '#/components/schemas/PublicodesExpression'\n\n    Situation:\n      description: La situation avec laquelle l'expression ou les expressions seront évaluées\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/PublicodesExpression'\n\n    PublicodesExpression:\n      description: Une expression Publicodes\n      oneOf:\n        - type: number\n        - type: string\n        - type: object\n          minProperties: 1\n          additionalProperties:\n            # We use a free-form object cause circular $ref is not support by openapi-validator-middleware,\n            # see issue : https://github.com/PayU/openapi-validator-middleware/issues/151#issuecomment-877793999\n            {} # $ref: '#/components/schemas/PublicodesExpression'\n\n    EvaluateBody:\n      type: object\n      required:\n        - expressions\n      properties:\n        expressions:\n          $ref: '#/components/schemas/Expressions'\n        situation:\n          $ref: '#/components/schemas/Situation'\n\n    EvaluateResponse:\n      description: Schéma retourné par l'endpoint evaluate\n      oneOf:\n        - type: object\n          properties:\n            evaluate:\n              type: array\n              items:\n                anyOf:\n                  - type: object\n                    properties:\n                      nodeValue:\n                        type: number\n                      traversedVariables:\n                        type: array\n                        items:\n                          type: string\n                      missingVariables:\n                        type: array\n                        items:\n                          type: string\n                  - type: object\n                    properties:\n                      error:\n                        type: object\n                        properties:\n                          message:\n                            type: string\n        - type: object\n          properties:\n            situationError:\n              type: object\n              properties:\n                message:\n                  type: string\n\n    InputValidationError:\n      type: array\n      items:\n        type: object\n        properties:\n          keyword:\n            type: string\n          dataPath:\n            type: string\n          schemaPath:\n            type: string\n          message:\n            type: string\n          params:\n            type: object\n            additionalProperties:\n              type: string\n\n    Rule:\n      type: object\n      properties:\n        title:\n          type: string\n        nodeKind:\n          type: string\n        rawNode:\n          type: object\n          properties:\n            nom:\n              type: string\n            question:\n              type: string\n          additionalProperties:\n            type: object\n        replacements:\n          type: array\n          items:\n            type: object\n        suggestions:\n          type: object\n\n    Rules:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/Rule'\n\npaths:\n  /evaluate:\n    post:\n      tags:\n        - publicodes-api\n      operationId: evaluate\n      summary: Evalue une expression avec un situation donnée\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EvaluateBody'\n      responses:\n        '200':\n          description: La requête a réussi\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EvaluateResponse'\n        '400':\n          description: Erreur de validation d'entrée\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InputValidationError'\n  /rules:\n    get:\n      tags:\n        - publicodes-api\n      operationId: rules\n      summary: Retourne toutes les règles\n      responses:\n        '200':\n          description: La requête a réussi\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Rules'\n        '400':\n          description: Erreur de validation d'entrée\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InputValidationError'\n  /rules/{rule}:\n    get:\n      tags:\n        - publicodes-api\n      operationId: rules-rule\n      summary: Retourne la règle demandée\n      parameters:\n        - name: rule\n          in: path\n          required: true\n          description: Rule to get\n          schema:\n            type: string\n      responses:\n        '200':\n          description: La requête a réussi\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/Rule'\n                  - type: object\n                    properties:\n                      error:\n                        type: object\n                        properties:\n                          message:\n                            type: string\n\n        '400':\n          description: Erreur de validation d'entrée\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InputValidationError'\n",
			"canonicalURL": "/github.com/betagouv/publicodes@a2b13dd6d242cf5100cff8513359d4b8c340bece/-/blob/packages/api/source/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/betagouv/publicodes/blob/a2b13dd6d242cf5100cff8513359d4b8c340bece/packages/api/source/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/evaluate\": post: responses: 200: contents: application/json: generate schema: oneOf: collect variants: oneOf[0]: field evaluate: item: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}