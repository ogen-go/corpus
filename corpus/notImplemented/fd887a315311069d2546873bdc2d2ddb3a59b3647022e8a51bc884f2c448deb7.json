{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "azure.com-mediaservices-media-2015-10-01-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/azure.com-mediaservices-media-2015-10-01-swagger.yaml",
			"byteSize": 33567,
			"content": "openapi: 3.0.0\ninfo:\n  description: Media Services resource management APIs.\n  title: MediaServicesManagementClient\n  version: 2015-10-01\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/mediaservices/resource-manager/Microsoft.Media/stable/2015-10-01/media.json\n      version: \"2.0\"\n  x-providerName: azure.com\n  x-serviceName: mediaservices-media\n  x-tags:\n    - Azure\n    - Microsoft\nsecurity:\n  - azure_auth:\n      - user_impersonation\npaths:\n  /providers/Microsoft.Media/operations:\n    get:\n      description: Lists all of the available Media Services REST API operations.\n      externalDocs:\n        url: https://aka.ms/media-manage\n      operationId: Operations_List\n      parameters:\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n      responses:\n        \"200\":\n          description: Success. Returns a list of operations.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OperationListResult\"\n              examples:\n                OperationsList:\n                  $ref: \"#/components/examples/OperationsList\"\n  \"/subscriptions/{subscriptionId}/providers/Microsoft.Media/CheckNameAvailability\":\n    post:\n      description: Checks whether the Media Service resource name is available. The name\n        must be globally unique.\n      externalDocs:\n        url: https://aka.ms/media-manage\n      operationId: MediaService_CheckNameAvailability\n      parameters:\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CheckNameAvailabilityInput\"\n        description: Properties needed to check the availability of a name.\n        required: true\n      responses:\n        \"200\":\n          description: Success. Returns details about whether a Media Service resource name\n            is available.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CheckNameAvailabilityOutput\"\n              examples:\n                response:\n                  value:\n                    message: Already in use by another Media Service instance. Please\n                      try again with a name that is not likely to be in use.\n                    nameAvailable: false\n                    reason: AlreadyExists\n                MediaServiceCheckNameAvailability:\n                  $ref: \"#/components/examples/MediaServiceCheckNameAvailability\"\n        default:\n          description: CheckNameAvailability of a Media Service failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiError\"\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices\":\n    get:\n      description: Lists all of the Media Services in a resource group.\n      externalDocs:\n        url: https://aka.ms/media-manage\n      operationId: MediaService_ListByResourceGroup\n      parameters:\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n      responses:\n        \"200\":\n          description: Success. Returns a list of all of the Media Services accounts in a\n            resource group.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MediaServiceCollection\"\n              examples:\n                response:\n                  value:\n                    value:\n                      - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Media/mediaservices/contosomedia\n                        location: West US\n                        name: contosomedia\n                        properties:\n                          apiEndpoints:\n                            - endpoint: https://wamsbayclus001rest-hs.cloudapp.net/api/\n                              majorVersion: \"2\"\n                          storageAccounts:\n                            - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia\n                              isPrimary: true\n                        type: Microsoft.Media/mediaservices\n                MediaServiceListByResourceGroup:\n                  $ref: \"#/components/examples/MediaServiceListByResourceGroup\"\n        default:\n          description: List Media Services failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiError\"\n      x-ms-pageable: {}\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServiceName}\":\n    delete:\n      description: Deletes a Media Service.\n      externalDocs:\n        url: https://aka.ms/media-manage\n      operationId: MediaService_Delete\n      parameters:\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/mediaResourceNameParameter\"\n      responses:\n        \"200\":\n          description: Success. The Media Services account was deleted.\n        \"204\":\n          description: No Content. The account name does not exist.\n        default:\n          description: Delete Media Services failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiError\"\n    get:\n      description: Gets a Media Service.\n      externalDocs:\n        url: https://aka.ms/media-manage\n      operationId: MediaService_Get\n      parameters:\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/mediaResourceNameParameter\"\n      responses:\n        \"200\":\n          description: Success. Returns the details of the Media Services account.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MediaService\"\n              examples:\n                response:\n                  value:\n                    id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Media/mediaservices/contosomedia\n                    location: West US\n                    name: contosomedia\n                    properties:\n                      apiEndpoints:\n                        - endpoint: https://wamsbayclus001rest-hs.cloudapp.net/api/\n                          majorVersion: \"2\"\n                      storageAccounts:\n                        - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia\n                          isPrimary: true\n                    type: Microsoft.Media/mediaservices\n                MediaServiceGet:\n                  $ref: \"#/components/examples/MediaServiceGet\"\n        default:\n          description: Get Media Services failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiError\"\n    patch:\n      description: Updates a Media Service.\n      externalDocs:\n        url: https://aka.ms/media-manage\n      operationId: MediaService_Update\n      parameters:\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/mediaResourceNameParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/MediaService\"\n        description: Media Service properties needed for update.\n        required: true\n      responses:\n        \"200\":\n          description: Success. The Media Services account was updated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MediaService\"\n              examples:\n                response:\n                  value:\n                    id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Media/mediaservices/contosomedia\n                    location: West US\n                    name: contosomedia\n                    properties:\n                      apiEndpoints:\n                        - endpoint: https://wamsbayclus001rest-hs.cloudapp.net/api/\n                          majorVersion: \"2\"\n                      storageAccounts:\n                        - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia\n                          isPrimary: true\n                    type: Microsoft.Media/mediaservices\n                MediaServiceUpdate:\n                  $ref: \"#/components/examples/MediaServiceUpdate\"\n        default:\n          description: Update Media Services failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiError\"\n    put:\n      description: Creates a Media Service.\n      externalDocs:\n        url: https://aka.ms/media-manage\n      operationId: MediaService_Create\n      parameters:\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/mediaResourceNameParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/MediaService\"\n        description: Media Service properties needed for creation.\n        required: true\n      responses:\n        \"201\":\n          description: Success. Returns the new Media Services account.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MediaService\"\n              examples:\n                response:\n                  value:\n                    id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Media/mediaservices/contosomedia\n                    location: West US\n                    name: contosomedia\n                    properties:\n                      apiEndpoints:\n                        - endpoint: https://wamsbayclus001rest-hs.cloudapp.net/api/\n                          majorVersion: \"2\"\n                      storageAccounts:\n                        - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia\n                          isPrimary: true\n                    type: Microsoft.Media/mediaservices\n                MediaServiceCreate:\n                  $ref: \"#/components/examples/MediaServiceCreate\"\n        default:\n          description: Create Media Services failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiError\"\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServiceName}/listKeys\":\n    post:\n      description: Lists the keys for a Media Service.\n      externalDocs:\n        url: https://aka.ms/media-manage\n      operationId: MediaService_ListKeys\n      parameters:\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/mediaResourceNameParameter\"\n      responses:\n        \"200\":\n          description: Success. The keys for the Media Services account were listed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceKeys\"\n              examples:\n                response:\n                  value:\n                    primaryAuthEndpoint: https://wamsprodglobal001acs.accesscontrol.windows.net/\n                    primaryKey: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=\n                    scope: urn:windowsazuremediaservices\n                    secondaryAuthEndpoint: https://wamsprodglobal002acs.accesscontrol.windows.net/\n                    secondaryKey: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=\n                MediaServiceListKeys:\n                  $ref: \"#/components/examples/MediaServiceListKeys\"\n        default:\n          description: List Media Service keys failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiError\"\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServiceName}/regenerateKey\":\n    post:\n      description: Regenerates a primary or secondary key for a Media Service.\n      externalDocs:\n        url: https://aka.ms/media-manage\n      operationId: MediaService_RegenerateKey\n      parameters:\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/mediaResourceNameParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RegenerateKeyInput\"\n        description: Properties needed to regenerate the Media Service key.\n        required: true\n      responses:\n        \"200\":\n          description: Success. The Media Services key specified in the input was\n            regenerated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RegenerateKeyOutput\"\n              examples:\n                response:\n                  value:\n                    key: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=\n                MediaServiceRegenerateKey:\n                  $ref: \"#/components/examples/MediaServiceRegenerateKey\"\n        default:\n          description: Regenerate Media Service key failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiError\"\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServiceName}/syncStorageKeys\":\n    post:\n      description: Synchronizes storage account keys for a storage account associated with\n        the Media Service account.\n      externalDocs:\n        url: https://aka.ms/media-manage\n      operationId: MediaService_SyncStorageKeys\n      parameters:\n        - $ref: \"#/components/parameters/subscriptionIdParameter\"\n        - $ref: \"#/components/parameters/apiVersionParameter\"\n        - $ref: \"#/components/parameters/resourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/mediaResourceNameParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SyncStorageKeysInput\"\n        description: Properties needed to synchronize the keys for a storage account to the\n          Media Service.\n        required: true\n      responses:\n        \"200\":\n          description: Success. The keys for the storage account were synchronized.\n        default:\n          description: Synch Media Service storage keys failed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiError\"\nservers:\n  - url: https://management.azure.com\ncomponents:\n  examples:\n    OperationsList:\n      value:\n        value:\n          - display:\n              operation: read\n              provider: Microsoft.Media\n              resource: MediaService\n            name: Microsoft.Media/mediaservices/read\n          - display:\n              operation: write\n              provider: Microsoft.Media\n              resource: MediaService\n            name: Microsoft.Media/mediaservices/write\n          - display:\n              operation: delete\n              provider: Microsoft.Media\n              resource: MediaService\n            name: Microsoft.Media/mediaservices/delete\n          - display:\n              operation: regenerateKey\n              provider: Microsoft.Media\n              resource: MediaService\n            name: Microsoft.Media/mediaservices/regenerateKey/action\n          - display:\n              operation: listKeys\n              provider: Microsoft.Media\n              resource: MediaService\n            name: Microsoft.Media/mediaservices/listKeys/action\n          - display:\n              operation: syncStorageKeys\n              provider: Microsoft.Media\n              resource: MediaService\n            name: Microsoft.Media/mediaservices/syncStorageKeys/action\n    MediaServiceCheckNameAvailability:\n      value:\n        message: \"\"\n        nameAvailable: true\n        reason: None\n    MediaServiceListByResourceGroup:\n      value:\n        value:\n          - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/contosoresources/providers/Microsoft.Media/mediaservices/contosmedia\n            location: East US\n            name: contosmedia\n            properties:\n              apiEndpoints:\n                - endpoint: https://contosmedia.restv2.eastus.media.azure.net/api/\n                  majorVersion: \"2\"\n              storageAccounts:\n                - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosostore\n                  isPrimary: true\n            tags: {}\n            type: Microsoft.Media/mediaservices\n          - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/contosoresources/providers/Microsoft.Media/mediaservices/contosmedia2\n            location: West US\n            name: contosmedia2\n            properties:\n              apiEndpoints:\n                - endpoint: https://contosmedia2.restv2.westus.media.azure.net/api/\n                  majorVersion: \"2\"\n              storageAccounts:\n                - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/microsoft.storage/storageAccounts/contosostore2\n                  isPrimary: true\n            tags: {}\n            type: Microsoft.Media/mediaservices\n    MediaServiceGet:\n      value:\n        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/contosoresources/providers/Microsoft.Media/mediaservices/contosmedia\n        location: East US\n        name: contosmedia\n        properties:\n          apiEndpoints:\n            - endpoint: https://contosmedia.restv2.eastus.media.azure.net/api/\n              majorVersion: \"2\"\n          storageAccounts:\n            - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosostore\n              isPrimary: true\n        tags: {}\n        type: Microsoft.Media/mediaservices\n    MediaServiceUpdate:\n      value:\n        location: West US\n        properties:\n          storageAccounts:\n            - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosostore\n              isPrimary: true\n    MediaServiceCreate:\n      value:\n        location: West US\n        properties:\n          storageAccounts:\n            - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosostore\n              isPrimary: true\n    MediaServiceListKeys:\n      value:\n        primaryAuthEndpoint: https://wamsprodglobal001acs.accesscontrol.windows.net/\n        primaryKey: \u003cprimary key value\u003e\n        scope: urn:windowsazuremediaservices\n        secondaryAuthEndpoint: https://wamsprodglobal002acs.accesscontrol.windows.net/\n        secondaryKey: \u003csecondary key value\u003e\n    MediaServiceRegenerateKey:\n      value:\n        key: \u003ckey value\u003e\n  parameters:\n    apiVersionParameter:\n      description: Version of the API to be used with the client request. The current\n        version is 2015-10-01.\n      in: query\n      name: api-version\n      required: true\n      schema:\n        type: string\n      examples:\n        OperationsList:\n          value: 2015-10-01\n        MediaServiceCheckNameAvailability:\n          value: 2015-10-01\n        MediaServiceListByResourceGroup:\n          value: 2015-10-01\n        MediaServiceDelete:\n          value: 2015-10-01\n        MediaServiceGet:\n          value: 2015-10-01\n        MediaServiceUpdate:\n          value: 2015-10-01\n        MediaServiceCreate:\n          value: 2015-10-01\n        MediaServiceListKeys:\n          value: 2015-10-01\n        MediaServiceRegenerateKey:\n          value: 2015-10-01\n        MediaServiceSyncStorageKeys:\n          value: 2015-10-01\n    mediaResourceNameParameter:\n      description: Name of the Media Service.\n      in: path\n      name: mediaServiceName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 3\n        maxLength: 24\n        pattern: ^[a-z0-9]{3,24}$\n      examples:\n        MediaServiceDelete:\n          value: contosmedia\n        MediaServiceGet:\n          value: contosmedia\n        MediaServiceUpdate:\n          value: contosmedia\n        MediaServiceCreate:\n          value: contosmedia\n        MediaServiceListKeys:\n          value: contosmedia\n        MediaServiceRegenerateKey:\n          value: contosmedia\n        MediaServiceSyncStorageKeys:\n          value: contosmedia\n    resourceGroupNameParameter:\n      description: Name of the resource group within the Azure subscription.\n      in: path\n      name: resourceGroupName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        MediaServiceListByResourceGroup:\n          value: contosoresources\n        MediaServiceDelete:\n          value: contosoresources\n        MediaServiceGet:\n          value: contosoresources\n        MediaServiceUpdate:\n          value: contosoresources\n        MediaServiceCreate:\n          value: contosoresources\n        MediaServiceListKeys:\n          value: contosoresources\n        MediaServiceRegenerateKey:\n          value: contosoresources\n        MediaServiceSyncStorageKeys:\n          value: contosoresources\n    subscriptionIdParameter:\n      description: The unique identifier for a Microsoft Azure subscription.\n      in: path\n      name: subscriptionId\n      required: true\n      schema:\n        type: string\n      examples:\n        MediaServiceCheckNameAvailability:\n          value: 00000000-0000-0000-0000-000000000000\n        MediaServiceListByResourceGroup:\n          value: 00000000-0000-0000-0000-000000000000\n        MediaServiceDelete:\n          value: 00000000-0000-0000-0000-000000000000\n        MediaServiceGet:\n          value: 00000000-0000-0000-0000-000000000000\n        MediaServiceUpdate:\n          value: 00000000-0000-0000-0000-000000000000\n        MediaServiceCreate:\n          value: 00000000-0000-0000-0000-000000000000\n        MediaServiceListKeys:\n          value: 00000000-0000-0000-0000-000000000000\n        MediaServiceRegenerateKey:\n          value: 00000000-0000-0000-0000-000000000000\n        MediaServiceSyncStorageKeys:\n          value: 00000000-0000-0000-0000-000000000000\n  securitySchemes:\n    azure_auth:\n      description: Azure Active Directory OAuth2 Flow\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize\n          scopes:\n            user_impersonation: impersonate your user account\n  schemas:\n    ApiEndpoint:\n      description: The properties for a Media Services REST API endpoint.\n      example:\n        endpoint: https://wamsbayclus001rest-hs.cloudapp.net/api/\n        majorVersion: \"2\"\n      properties:\n        endpoint:\n          description: The Media Services REST endpoint.\n          type: string\n        majorVersion:\n          description: The version of Media Services REST API.\n          type: string\n    ApiError:\n      description: The error returned from a failed Media Services REST API call.\n      example:\n        error:\n          code: BadRequest\n          message: Name availability check is not supported for type\n            Microsoft.Media/mediaservices.\n      properties:\n        code:\n          description: Error code.\n          type: string\n        message:\n          description: Error message.\n          type: string\n    CheckNameAvailabilityInput:\n      description: The request body for CheckNameAvailability API.\n      example:\n        name: contosomedia\n        type: mediaservices\n      properties:\n        name:\n          description: The name of the resource. A name must be globally unique.\n          maxLength: 24\n          minLength: 3\n          pattern: ^[a-z0-9]{3,24}$\n          type: string\n        type:\n          $ref: \"#/components/schemas/ResourceType\"\n      required:\n        - name\n        - type\n    CheckNameAvailabilityOutput:\n      description: The response body for CheckNameAvailability API.\n      properties:\n        message:\n          description: Specifies the detailed reason if the name is not available.\n          type: string\n        nameAvailable:\n          description: Specifies if the name is available.\n          type: boolean\n        reason:\n          description: Specifies the reason if the name is not available.\n          enum:\n            - None\n            - Invalid\n            - AlreadyExists\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: EntityNameUnavailabilityReason\n    MediaService:\n      allOf:\n        - $ref: \"#/components/schemas/Resource\"\n      description: The properties of a Media Service resource.\n      example:\n        location: West US\n        properties:\n          storageAccounts:\n            - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia\n              isPrimary: true\n      properties:\n        properties:\n          $ref: \"#/components/schemas/MediaServiceProperties\"\n    MediaServiceCollection:\n      description: The collection of Media Service resources.\n      properties:\n        value:\n          description: The collection of Media Service resources.\n          items:\n            $ref: \"#/components/schemas/MediaService\"\n          type: array\n    MediaServiceProperties:\n      description: The additional properties of a Media Service resource.\n      properties:\n        apiEndpoints:\n          description: Read-only property that lists the Media Services REST API endpoints\n            for this resource. If supplied on a PUT or PATCH, the value will be\n            ignored.\n          items:\n            $ref: \"#/components/schemas/ApiEndpoint\"\n          readOnly: true\n          type: array\n        storageAccounts:\n          description: The storage accounts for this resource.\n          items:\n            $ref: \"#/components/schemas/StorageAccount\"\n          type: array\n    Operation:\n      description: A Media Services REST API operation\n      properties:\n        display:\n          description: The object that represents the operation.\n          properties:\n            operation:\n              description: \"Operation type: Read, write, delete, etc.\"\n              readOnly: true\n              type: string\n            provider:\n              description: \"Service provider: Microsoft.Media\"\n              readOnly: true\n              type: string\n            resource:\n              description: \"Resource on which the operation is performed: Invoice, etc.\"\n              readOnly: true\n              type: string\n        name:\n          description: \"Operation name: {provider}/{resource}/{operation}\"\n          readOnly: true\n          type: string\n      type: object\n    OperationListResult:\n      description: Result of the request to list Media Services operations.\n      properties:\n        nextLink:\n          description: URL to get the next set of operation list results if there are any.\n          readOnly: true\n          type: string\n        value:\n          description: List of Media Services operations supported by the Microsoft.Media\n            resource provider.\n          items:\n            $ref: \"#/components/schemas/Operation\"\n          readOnly: true\n          type: array\n    RegenerateKeyInput:\n      description: The request body for a RegenerateKey API.\n      example:\n        keyType: Primary\n      properties:\n        keyType:\n          description: The keyType indicating which key you want to regenerate, Primary or\n            Secondary.\n          enum:\n            - Primary\n            - Secondary\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: KeyType\n      required:\n        - keyType\n    RegenerateKeyOutput:\n      description: The response body for a RegenerateKey API.\n      example:\n        key: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=\n      properties:\n        key:\n          description: The new value of either the primary or secondary key.\n          type: string\n    Resource:\n      description: The Azure Resource Manager resource.\n      properties:\n        id:\n          description: The id of the resource.\n          readOnly: true\n          type: string\n        location:\n          description: The geographic location of the resource. This must be one of the\n            supported and registered Azure Geo Regions (for example, West US,\n            East US, Southeast Asia, and so forth).\n          type: string\n        name:\n          description: The name of the resource.\n          readOnly: true\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          description: Tags to help categorize the resource in the Azure portal.\n          type: object\n        type:\n          description: The type of the resource\n          readOnly: true\n          type: string\n      x-ms-azure-resource: true\n    ResourceType:\n      description: Type of MediaService resource.\n      enum:\n        - mediaservices\n      type: string\n      x-ms-enum:\n        modelAsString: false\n        name: ResourceType\n    ServiceKeys:\n      description: The response body for a ListKeys API.\n      example:\n        primaryAuthEndpoint: https://wamsprodglobal001acs.accesscontrol.windows.net/\n        primaryKey: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=\n        scope: urn:windowsazuremediaservices\n        secondaryAuthEndpoint: https://wamsprodglobal002acs.accesscontrol.windows.net/\n        secondaryKey: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=\n      properties:\n        primaryAuthEndpoint:\n          description: The primary authorization endpoint.\n          type: string\n        primaryKey:\n          description: The primary key for the Media Service resource.\n          type: string\n        scope:\n          description: The authorization scope.\n          type: string\n        secondaryAuthEndpoint:\n          description: The secondary authorization endpoint.\n          type: string\n        secondaryKey:\n          description: The secondary key for the Media Service resource.\n          type: string\n    StorageAccount:\n      description: The properties of a storage account associated with this resource.\n      example:\n        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia\n        isPrimary: true\n      properties:\n        id:\n          description: The id of the storage account resource. Media Services relies on\n            tables and queues as well as blobs, so the primary storage account\n            must be a Standard Storage account (either Microsoft.ClassicStorage\n            or Microsoft.Storage). Blob only storage accounts can be added as\n            secondary storage accounts (isPrimary false).\n          type: string\n        isPrimary:\n          description: Is this storage account resource the primary storage account for the\n            Media Service resource. Blob only storage must set this to false.\n          type: boolean\n      required:\n        - id\n        - isPrimary\n    SyncStorageKeysInput:\n      description: The request  body for a SyncStorageKeys API.\n      example:\n        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/contosoresources/providers/Microsoft.Storage/storageAccounts/contosomedia\n      properties:\n        id:\n          description: The id of the storage account resource.\n          type: string\n      required:\n        - id\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/azure.com-mediaservices-media-2015-10-01-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/azure.com-mediaservices-media-2015-10-01-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServiceName}/syncStorageKeys\": post: security: security \"azure_auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}