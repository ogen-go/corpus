{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Sciebo-RDS/Sciebo-RDS"
		},
		"file": {
			"name": "central-service_research-manager.yml",
			"size": 0,
			"path": "RDS/layer3_central_services/research_manager/central-service_research-manager.yml",
			"byteSize": 11226,
			"content": "openapi: 3.0.0\npaths:\n  '/user/{user-id}':\n    parameters:\n      - schema:\n          type: string\n        name: user-id\n        in: path\n        required: true\n    get:\n      summary: List all research from given user\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Research'\n        '404':\n          description: Not Found\n    post:\n      summary: Add a research to user\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Research'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Research'\n    delete:\n      summary: Remove user\n      responses:\n        '204':\n          description: No Content\n        '404':\n          description: Not Found\n      description: 'This removes all research projects for the specified user, which means that this service delete everything about the user.'\n  '/user/{user-id}/research/{research-id}':\n    parameters:\n      - schema:\n          type: string\n        name: user-id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: research-id\n        in: path\n        required: true\n    get:\n      summary: Get a research\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Research'\n      description: ''\n    delete:\n      summary: Delete a research\n      responses:\n        '204':\n          description: No Content\n  '/user/{user-id}/research/{research-id}/exports':\n    parameters:\n      - schema:\n          type: string\n        name: user-id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: research-id\n        in: path\n        required: true\n    get:\n      summary: List Research Exports\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Port'\n    post:\n      summary: Create or replace a Research Export\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Port'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Port'\n      description: Add or replace the given port in body.\n  '/user/{user-id}/research/{research-id}/imports':\n    parameters:\n      - schema:\n          type: string\n        name: user-id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: research-id\n        in: path\n        required: true\n    get:\n      summary: List Research Imports\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Port'\n    post:\n      summary: Create or replace a Research Import\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Port'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Port'\n      description: Add or replace the given port in body.\n  '/user/{user-id}/research/{research-id}/imports/{port-id}':\n    parameters:\n      - schema:\n          type: string\n        name: user-id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: port-id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: research-id\n        in: path\n        required: true\n    get:\n      summary: Get a Research Import\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Port'\n        '404':\n          description: Not Found\n    delete:\n      summary: Delete a Research Import\n      responses:\n        '204':\n          description: No Content\n        '404':\n          description: Not Found\n  '/user/{user-id}/research/{research-id}/exports/{port-id}':\n    parameters:\n      - schema:\n          type: string\n        name: user-id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: port-id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: research-id\n        in: path\n        required: true\n    get:\n      summary: Get a Research Export\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Port'\n        '404':\n          description: Not Found\n    delete:\n      summary: Delete a Research Export\n      responses:\n        '204':\n          description: No Content\n        '404':\n          description: Not Found\n  '/id/{research-id}':\n    parameters:\n      - schema:\n          type: string\n        name: research-id\n        in: path\n        required: true\n    get:\n      summary: Returns the corresponding research.\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Research'\n      description: ''\n  '/user/{user-id}/research/{research-id}/status':\n    parameters:\n      - schema:\n          type: string\n        name: user-id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: research-id\n        in: path\n        required: true\n    get:\n      summary: Get the current status\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: integer\n    patch:\n      summary: Increase status to the next value\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: integer\n      description: This endpoint push the research to the next step.\n  '/user/{user-id}/research/{research-id}/researchname':\n    parameters:\n      - schema:\n          type: string\n        name: user-id\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: research-id\n        in: path\n        required: true\n    get:\n      summary: Returns the name of this project\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  researchname:\n                    type: string\n      description: Returns the name of this project\n    put:\n      summary: Updates the name\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  researchname:\n                    type: string\n        '400':\n          description: Bad Request\n      description: Updates the name\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                researchname:\n                  type: string\ncomponents:\n  schemas:\n    Research:\n      title: Research\n      description: This model represents a research.\n      x-examples:\n        example-1:\n          id: '1'\n          status: created\n          import:\n            - id: '1'\n              port: port-owncloud\n              properties:\n                - type: filestorage\n                  value: 'true'\n          export:\n            - id: '1'\n              port: port-invenio\n              properties:\n                - type: filestorage\n                  value: 'true'\n                - type: metadata\n                  value: 'true'\n      anyOf:\n        - type: object\n          properties:\n            userId:\n              type: string\n              description: This field will be set through the system.\n            status:\n              type: integer\n              description: This field will be set through the system.\n            portIn:\n              type: array\n              items:\n                $ref: '#/components/schemas/Port'\n            portOut:\n              type: array\n              items:\n                $ref: '#/components/schemas/Port'\n            researchId:\n              type: integer\n              description: This field will be set through the system.\n            researchIndex:\n              type: integer\n              description: This field will be set through the system.\n        - description: 'This is required, because connexion refused otherwise a connection without any requestBody.'\n    Port:\n      title: Port\n      description: 'This model represents a port, which can be used in a research.'\n      type: object\n      x-examples: {}\n      properties:\n        port:\n          type: string\n        properties:\n          type: array\n          items:\n            type: object\n            properties:\n              portType:\n                type: string\n                description: |-\n                  Only \"metadata\" and \"filestorage\" are currently supported as booleans. If portType is not set, it defaults to false for metadata and fileStorage.\n\n                  If you set 'customProperties' for portType, you can specify an array of objects as value with custom key and value as string. This is useful, if you want to save a filepath or a servicename for the port, which you wants to add to this RDS research.\n              value:\n                oneOf:\n                  - type: boolean\n                  - type: array\n                    items:\n                      type: object\n                      properties:\n                        key:\n                          type: string\n                        value:\n                          type: string\n      required:\n        - port\nservers:\n  - url: 'http://central-service_research-manager:3000/research'\n    description: ''\ninfo:\n  version: '1.0'\n  title: Central Service Research Manager\n  description: 'This api describes the research endpoints, which manages research and workflows.'\n  contact:\n    name: Peter Heiss\n    email: peter.heiss@uni-muenster.de\n",
			"canonicalURL": "/github.com/Sciebo-RDS/Sciebo-RDS@5b868aa82ae367fd7f33ebd419ffc7ba255cdd7e/-/blob/RDS/layer3_central_services/research_manager/central-service_research-manager.yml",
			"externalURLs": [
				{
					"url": "https://github.com/Sciebo-RDS/Sciebo-RDS/blob/5b868aa82ae367fd7f33ebd419ffc7ba255cdd7e/RDS/layer3_central_services/research_manager/central-service_research-manager.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/user/{user-id}\": get: responses: 200: contents: application/json: generate schema: item: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}