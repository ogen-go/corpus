{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wso2/identity-api-server"
		},
		"file": {
			"name": "authenticators.yaml",
			"size": 0,
			"path": "components/org.wso2.carbon.identity.api.server.authenticators/org.wso2.carbon.identity.api.server.authenticators.v1/src/main/resources/authenticators.yaml",
			"byteSize": 6755,
			"content": "openapi: 3.0.0\ninfo:\n  version: \"v1\"\n  title: 'WSO2 Identity Server - Authenticators API Definition'\n  description: 'This document specifies a **RESTful API** for **WSO2 Identity Server Authenticators**'\n  contact:\n    name: WSO2\n    url: 'http://wso2.com/products/identity-server/'\n    email: iam-dev@wso2.org\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\nservers:\n  - url: 'https://localhost:9443/t/{tenant-domain}/api/server/v1'\n    variables:\n      tenant-domain:\n        default: carbon.super\nsecurity:\n  - OAuth2: []\n  - BasicAuth: []\n\npaths:\n  /authenticators:\n    get:\n      tags:\n        - Authenticators\n      summary: List all authenticators in the server\n      description: List all authenticators in the server\n      parameters:\n        - $ref: '#/components/parameters/filterQueryParam'\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/offsetQueryParam'\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Authenticators'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n        '501':\n          $ref: '#/components/responses/NotImplemented'\n  /authenticators/meta/tags:\n    get:\n      tags:\n        - Authenticators\n      summary: List all authenticator tags\n      description: List all authenticator tags\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tags'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\ncomponents:\n  parameters:\n    filterQueryParam:\n      in: query\n      name: filter\n      required: false\n      description: \u003e\n        Condition to filter the retrieval of records.\n        Only supports filtering based on the 'tag' and 'name' attribute.\n        For local authenticators and request path authenticators, the 'displayName' is considered as the 'name' attribute during filtering.\n        The 'name' attribute only supports 'eq' and 'sw operations. Filtering with multiple 'name' attributes is not supported.\n        The 'tag' attribute only supports 'eq' operation. Filtering with multiple 'tag' attributes is supported with only 'or' as the complex query operation.\n        E.g. /configs/authenticators?filter=name+sw+fi+and+(tag+eq+2FA+or+tag+eq+MFA)\n      schema:\n        type: string\n    limitQueryParam:\n      in: query\n      name: limit\n      description: \u003e\n        Maximum number of records to return. _\u003cb\u003eThis option is not yet\n        supported.\u003cb\u003e_\n      schema:\n        type: integer\n        format: int32\n        minimum: 0\n    offsetQueryParam:\n      in: query\n      name: offset\n      description: \u003e\n        Number of records to skip for pagination. _\u003cb\u003eThis option is not yet\n        supported.\u003cb\u003e_\n      schema:\n        type: integer\n        format: int32\n        minimum: 0\n  schemas:\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: string\n          example: AUT-00000\n          description: An error code.\n        message:\n          type: string\n          example: Some Error Message\n          description: An error message.\n        description:\n          type: string\n          example: Some Error Description\n          description: An error description.\n        traceId:\n          type: string\n          example: e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\n          description: An error trace identifier.\n    Tags:\n      type: array\n      description: The list of tags available for authenticators.\n      items:\n        type: string\n      example: [2FA, MFA]\n    Authenticators:\n      type: array\n      items:\n        $ref: '#/components/schemas/Authenticator'\n    Authenticator:\n      type: object\n      properties:\n        id:\n          type: string\n          example: QmFzaWNBdXRoZW50aWNhdG9y\n        name:\n          type: string\n          example: BasicAuthenticator\n        displayName:\n          type: string\n          example: basic\n        isEnabled:\n          type: boolean\n          example: true\n        type:\n          type: string\n          enum:\n            - LOCAL\n            - FEDERATED\n        image:\n          type: string\n          example: basic-authenticator-logo-url\n        description:\n          type: string\n          example: The basic authenticator.\n        tags:\n          type: array\n          items:\n            type: string\n          example: [2FA, MFA]\n        self:\n          type: string\n          example: /t/carbon.super/api/server/v1/configs/authenticators/eDUwOUNlcnRpZmljYXRlQXV0aGVudGljYXRvcg\n\n  #-----------------------------------------------------\n  # Descriptions of Authenticators API responses.\n  #-----------------------------------------------------\n  responses:\n    BadRequest:\n      description: Invalid input in the request.\n      content:\n        'application/json':\n          schema:\n            $ref: '#/components/schemas/Error'\n    NotFound:\n      description: Requested resource is not found.\n      content:\n        'application/json':\n          schema:\n            $ref: '#/components/schemas/Error'\n    Unauthorized:\n      description: Authentication information is missing or invalid.\n    Forbidden:\n      description: Access forbidden.\n    ServerError:\n      description: Internal server error.\n      content:\n        'application/json':\n          schema:\n            $ref: '#/components/schemas/Error'\n    NotImplemented:\n      description: Not Implemented.\n      content:\n        'application/json':\n          schema:\n            $ref: '#/components/schemas/Error'\n  #-----------------------------------------------------\n  # Applicable authentication mechanisms.\n  #-----------------------------------------------------\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n    OAuth2:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: 'https://localhost:9443/oauth2/authorize'\n          tokenUrl: 'https://localhost:9443/oauth2/token'\n          scopes: {}\n",
			"canonicalURL": "/github.com/wso2/identity-api-server@1c81f70117e6130228ac537f8526ad3655061b43/-/blob/components/org.wso2.carbon.identity.api.server.authenticators/org.wso2.carbon.identity.api.server.authenticators.v1/src/main/resources/authenticators.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wso2/identity-api-server/blob/1c81f70117e6130228ac537f8526ad3655061b43/components/org.wso2.carbon.identity.api.server.authenticators/org.wso2.carbon.identity.api.server.authenticators.v1/src/main/resources/authenticators.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/authenticators\": get: security: security \"OAuth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}