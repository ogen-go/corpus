{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/zoom/openapi.yaml",
			"byteSize": 213213,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://api.zoom.us/v2\ninfo:\n  contact:\n    email: developersupport@zoom.us\n    name: Zoom Developers\n    url: https://developer.zoom.us/\n  description: \u003e\n    This is a generated connector for [Zoom API Version 2.0.0](https://marketplace.zoom.us/docs/api-reference/zoom-api) OpenAPI Specification.\n\n    The Zoom API allows developers to access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials). \n  \n    All endpoints are available via `https` and are located at `api.zoom.us/v2/`. For instance you can list all users on an account via `https://api.zoom.us/v2/users/`.\n  license:\n    name: MIT for OAS 2.0\n    url: https://opensource.org/licenses/MIT\n  termsOfService: https://zoom.us/docs/en-us/zoom_api_license_and_tou.html\n  title: Zoom API\n  version: 2.0.0\n  x-ballerina-display:\n    label: Zoom\n    iconPath: \"icon.png\"\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials. \n    \n    Please create a [Zoom account](https://marketplace.zoom.us/) and obtain tokens following [this guide](https://marketplace.zoom.us/docs/guides/auth/oauth). Configure required scopes when obtaining the tokens. \nsecurity:\n  - OAuth: []\ntags:\n  - description: Meeting operations\n    name: Meetings\n  - description: Meeting operations\n    name: Webinars\npaths:\n  \"/users\":\n    get:\n      description: \u003e-\n        Use this API to list your account's users. \n\n        **Scopes:** `user:read:admin` \n\n        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n      summary: List users\n      operationId: listUsers\n      x-ballerina-display:\n        label: List Users\n      parameters:\n        - description: \"The user's status. active, live or upcoming. Default is active.\"\n          in: query\n          name: status\n          schema:\n            default: active\n            enum:\n              - active\n              - inactive\n              - pending\n            type: string\n            example: active\n          x-ballerina-display:\n            label: User's Status\n          x-enum-descriptions:\n            - the user exists on the account\n            - the user has been deactivated\n            - the user exists on the account but has not activated their account\n        - description: \"The number of records returned within a single API call.\"\n          in: query\n          name: page_size\n          schema:\n            default: 30\n            maximum: 300\n            type: integer\n          x-ballerina-display:\n            label: Page Size\n        - description: \"The role's unique ID. Use this parameter to filter the response by a specific role.\"\n          in: query\n          name: role_id\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Role's Unique ID\n        - description: \"The page number of the current page in the returned records.\"\n          in: query\n          name: page_number\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Page Number\n        - description: \"Use this parameter to display one of the following attributes in the API call's response. custom_attributes or host_key.\"\n          in: query\n          name: include_fields\n          schema:\n            enum:\n              - custom_attributes\n              - host_key\n            type: string\n          x-ballerina-display:\n            label: Include Fields\n          x-enum-descriptions:\n            - return the user's custom attributes\n            - return the user's host key\n        - description: \"The next page token is used to paginate through large result sets.  A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.\"\n          in: query\n          name: next_page_token\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Next Page Token\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListUsersResponse'\n          description: \"HTTP Status Code:200. User list returned.\"\n      security:\n        - OAuth: []\n      tags:\n        - Users\n  \"/metrics/meetings\":\n    get:\n      description: \u003e-\n        List total live or past meetings that occurred during a specified period of time. This overview will show if features such as audio, video, screen sharing, and recording were being used in the meeting. You can also see the license types of each user on your account.\u003cbr\u003e You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months.\n\n        **Scopes:** `dashboard_meetings:read:admin` \n\n        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Resource-intensive`\n\n        **Prerequisites:** Business or a higher plan.\n      summary: List dashboard meetings\n      operationId: listDashboardMeetings\n      x-ballerina-display:\n        label: List Dashboard Meetings\n      parameters:\n        - description: |-\n            Specify a value to get the response for the corresponding meeting type. The value of this field can be one of the following: `past` - Meeting that already occurred in the specified date range. `pastOne` - Past meetings that were attended by only one user. `live` - Live meetings.\n\n            If you do not provide this field, the default value will be `live` and thus, the API will only query responses for live meetings.\n          in: query\n          name: type\n          schema:\n            default: live\n            enum:\n              - past\n              - pastOne\n              - live\n            type: string\n            example: past\n          x-ballerina-display:\n            label: Meeting Type\n          x-enum-descriptions:\n            - past meetings\n            - past one user meetings\n            - live meetings\n        - description: \"Start date in 'yyyy-mm-dd' format. The date range defined by the 'from' and 'to' parameters should only be one month as the report includes only one month worth of data at once.\"\n          in: query\n          name: from\n          required: true\n          schema:\n            format: date\n            type: string\n            example: '2022-01-01'\n          x-ballerina-display:\n            label: Start Date\n        - description: \"End date in 'yyyy-mm-dd' format.\"\n          in: query\n          name: to\n          required: true\n          schema:\n            format: date\n            type: string\n            example: '2022-01-28'\n          x-ballerina-display:\n            label: End date\n        - description: \"The number of records returned within a single API call.\"\n          in: query\n          name: page_size\n          schema:\n            default: 30\n            maximum: 300\n            type: integer\n          x-ballerina-display:\n            label: Page Size\n        - description: \"The next page token is used to paginate through large result sets.  A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.\"\n          in: query\n          name: next_page_token\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Next Page Token\n        - description: \"The group ID. The API response will only contain meetings where the host is a member of the queried group ID.\"\n          in: query\n          name: group_id\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Group ID\n        - description: \"Set the value of this field to 'tracking_fields' if you would like to include tracking fields of each meeting in the response.\"\n          in: query\n          name: include_fields\n          schema:\n            enum:\n              - tracking_fields\n            type: string\n          x-ballerina-display:\n            label: Include Fields\n          x-enum-descriptions:\n            - include tracking fields of each meeting\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDashboardMeetingsResponse'\n          description: \"HTTP Status Code:200. Dashboard meetings returned. Only available for paid accounts that have dashboard feature enabled.\"\n        \"300\":\n          description: \u003e\n            **Error Code:** `300`\n\n            The next page token is invalid or expired.\n      security:\n        - OAuth: []\n      tags:\n        - Dashboards\n  \"/metrics/meetings/{meetingId}/participants\":\n    get:\n      description: |-\n        Use this API to return a list of participants from live or past meetings. \n\n         If you do not provide the `type` query parameter, the default value will be set to the `live` value. This API will only return metrics for participants in a live meeting, if any exist. You can specify a monthly date range for the dashboard data using the `from` and `to` query parameters. The month should fall within the last six months. \n\n        **Note:** \n\n        This API may return empty values for participants' `user_name`, `ip_address`, `location`, and `email` responses when the account calling this API: \n        * Does **not** have a signed HIPAA business associate agreement (BAA). \n        * Is a [**legacy** HIPAA BAA account](https://marketplace.zoom.us/docs/api-reference/other-references/legacy-business-associate-agreements). \n        * Displays data for any users who are **not** part of the host's account (external users) unless they meet certain conditions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details. \n\n        **Scopes:** `dashboard_meetings:read:admin` \u003cbr\u003e **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy` \n\n        **Prerequisites:** \n        * A Business or higher plan.\n      summary: List dashboard meeting participants\n      operationId: listDashboardMeetingParticipants\n      x-ballerina-display:\n        label: List Dashboard Meeting Participants\n      parameters:\n        - description: |-\n            The meeting's ID or universally unique ID (UUID). \n            If you provide a meeting ID, the API will return a response for the latest meeting instance. \n            If you provide a meeting UUID that begins with a `/` character or contains the `//` characters, you **must** double-encode the meeting UUID before making an API request.\n          in: path\n          name: meetingId\n          required: true\n          schema:\n            oneOf:\n              - type: integer\n                example: 5638296721\n              - type: string\n                example: 4444AAAiAAAAAiAiAiiAii==\n        - description: |-\n            The type of meeting to query: \n            * `past` — All past meetings. \n            * `pastOne` — All past one-user meetings. \n            * `live` - All live meetings. \n\n            This value defaults to `live`.\n          in: query\n          name: type\n          schema:\n            default: live\n            enum:\n              - past\n              - pastOne\n              - live\n            type: string\n            example: past\n          x-ballerina-display:\n            label: Meeting Type\n          x-enum-descriptions:\n            - Past meetings.\n            - Past one-user meetings.\n            - Live meetings.\n        - description: \"The number of records returned within a single API call.\"\n          in: query\n          name: page_size\n          schema:\n            default: 30\n            maximum: 300\n            type: integer\n          x-ballerina-display:\n            label: Page Size\n        - description: \"The next page token is used to paginate through large result sets.  A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.\"\n          in: query\n          name: next_page_token\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Next Page Token\n        - description: \"Provide `registrant_id` as the value for this field if you would like to see the registrant ID attribute in the response of this API call. A registrant ID is a unique identifier of a [meeting registrant](/api-reference/zoom-api/methods#operation/meetingRegistrants). This is not supported for `live` meeting types.\"\n          in: query\n          name: include_fields\n          schema:\n            enum:\n              - registrant_id\n            type: string\n          x-ballerina-display:\n            label: Include Fields\n          x-enum-descriptions:\n            -  a unique identifier of a [meeting registrant](/api-reference/zoom-api/methods#operation/meetingRegistrants)\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDashboardMeetingParticipantsResponse'\n          description: \"HTTP Status Code:200. Meeting participants returned. Only available for paid accounts that have enabled the dashboard feature.\"\n        '300':\n          description: |-\n            **Error Code:** `300`\u003cbr\u003e\n            Can not access webinar info.\u003cbr\u003e\n            {meetingId} or the next page token is either invalid or expired.\n        '400':\n          description: |-\n            **Error Code:** `12702`\u003cbr\u003e\n            Can not access a meeting a year ago.\n        '404':\n          description: |-\n            **HTTP Status Code:** `404`\u003cbr\u003e\n            **Error Code:** `3001`\u003cbr\u003e\n            Meeting ID is invalid or has not ended.\n      security:\n        - OAuth: []\n      tags:\n        - Dashboards\n  \"/users/{userId}/meetings\":\n    get:\n      description: \u003e-\n        List all the meetings that were scheduled for a user (meeting\n        host). This API only supports scheduled meetings and thus, details on\n        instant meetings are not returned via this API.\n\n        **Scopes:** `meeting:read:admin` `meeting:read`\n         \n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n      summary: List meetings\n      operationId: listMeetings\n      x-ballerina-display:\n        label: List Meetings\n      parameters:\n        - description: The user ID or email address of the user. For user-level apps, pass\n            `me` as the value for userId.\n          in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n          x-ballerina-display:\n            label: User Id\n        - description: \"The meeting types. Scheduled, live or upcoming\"\n          in: query\n          name: type\n          schema:\n            default: live\n            enum:\n              - scheduled\n              - live\n              - upcoming\n            type: string\n          x-ballerina-display:\n            label: Meeting Type\n          x-enum-descriptions:\n            - all the scheduled meetings\n            - all the live meetings\n            - all the upcoming meetings\n        - description: \"The number of records returned within a single API call.\"\n          in: query\n          name: page_size\n          schema:\n            default: 30\n            maximum: 300\n            type: integer\n          x-ballerina-display:\n            label: Page Size\n        - description: \"The next page token is used to paginate through large result sets.  A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.\"\n          in: query\n          name: next_page_token\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Next Page Token\n        - description: \"The page number of the current page in the returned records.\"\n          in: query\n          name: page_number\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Page Number\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    meetings:\n                      - created_at: 2019-08-16T01:13:12Z\n                        duration: 30\n                        host_id: abckjdfhsdkjf\n                        id: 11111\n                        join_url: https://zoom.us/j/11111\n                        start_time: 2019-08-16T02:00:00Z\n                        timezone: America/Los_Angeles\n                        topic: Zoom Meeting\n                        type: 2\n                        uuid: mlghmfghlBBB\n                      - agenda: RegistrationDeniedTest\n                        created_at: 2019-08-16T18:30:46Z\n                        duration: 60\n                        host_id: abckjdfhsdkjf\n                        id: 2222\n                        join_url: https://zoom.us/j/2222\n                        start_time: 2019-08-16T19:00:00Z\n                        timezone: America/Los_Angeles\n                        topic: TestMeeting\n                        type: 2\n                        uuid: J8H8eavweUcd321==\n                      - created_at: 2019-08-16T21:15:56Z\n                        duration: 60\n                        host_id: abckjdfhsdkjf\n                        id: 33333\n                        join_url: https://zoom.us/j/33333\n                        start_time: 2019-08-16T22:00:00Z\n                        timezone: America/Los_Angeles\n                        topic: My Meeting\n                        type: 2\n                        uuid: SGVTAcfSfCbbbb\n                      - created_at: 2019-08-29T17:32:33Z\n                        duration: 60\n                        host_id: abckjdfhsdkjf\n                        id: 44444\n                        join_url: https://zoom.us/j/4444\n                        start_time: 2019-08-29T18:00:00Z\n                        timezone: America/Los_Angeles\n                        topic: MyTestPollMeeting\n                        type: 2\n                        uuid: 64123avdfsMVA==\n                    page_count: 1\n                    page_number: 1\n                    page_size: 30\n                    total_records: 4\n              schema:\n                $ref: '#/components/schemas/ListMeetingsResponse'\n          description: \"HTTP Status Code:200. List of meetings returned.\"\n        \"404\":\n          description: \"HTTP Status Code:404 User ID not found. Error Code:1001, User not exist or not belong to this account.\"\n      security:\n        - OAuth: []\n      tags:\n        - Meetings\n    post:\n      description: \u003e-\n        [Create a\n        meeting](https://support.zoom.us/hc/en-us/articles/201362413-Scheduling-meetings)\n        for a user. This API has a daily rate limit of 100 requests per day.\n        Therefore, only 100 **Create a Meeting** API requests are permitted\n        within a 24 hour window for a user.\n\n\n        \u003caside\u003eThe \u003ccode\u003estart_url\u003c/code\u003e of a meeting is a URL using which a host or an alternative host can start a meeting. The expiration time for the \u003ccode\u003estart_url\u003c/code\u003e field is two hours for all regular users. \n          \n        For custCreate meeting hosts( i.e., users created using the \u003ccode\u003ecustCreate\u003c/code\u003e option via the [Create Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usercreate) API), the expiration time of the \u003ccode\u003estart_url\u003c/code\u003e field is 90 days from the generation of the \u003ccode\u003estart_url\u003c/code\u003e.\n          \n        For security reasons, the recommended way to retrieve the updated value for the \u003ccode\u003estart_url\u003c/code\u003e field programmatically (after expiry) is by calling the [Retrieve a Meeting API](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meeting) and referring to the value of the \u003ccode\u003estart_url\u003c/code\u003e field in the response.\u003c/aside\u003e\n\n        Scopes: `meeting:write:admin` `meeting:write`\n         \n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n      operationId: createMeeting\n      x-ballerina-display:\n        label: Create Meeting\n      parameters:\n        - description: \"The user ID or email address of the user. For user-level apps, pass me as the value for userId.\"\n          in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n          x-ballerina-display:\n            label: User Id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MeetingDetails'\n        description: Meeting detailed.\n        x-ballerina-display:\n          label: Meeting Details\n        required: true\n        x-examples:\n          application/json:\n            agenda: string\n            duration: integer\n            password: string\n            recurrence:\n              end_date_time: string [date-time]\n              end_times: integer\n              monthly_day: integer\n              monthly_week: integer\n              monthly_week_day: integer\n              repeat_interval: integer\n              type: integer\n              weekly_days: string\n            schedule_for: string\n            settings:\n              alternative_hosts: string\n              approval_type: integer\n              audio: string\n              auto_recording: string\n              cn_meeting: boolean\n              enforce_login: boolean\n              enforce_login_domains: string\n              global_dial_in_countries:\n                - string\n              host_video: boolean\n              in_meeting: boolean\n              join_before_host: boolean\n              mute_upon_entry: boolean\n              participant_video: boolean\n              registrants_email_notification: boolean\n              registration_type: integer\n              use_pmi: boolean\n              watermark: boolean\n            start_time: string [date-time]\n            timezone: string\n            topic: string\n            type: integer\n      responses:\n        \"201\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    created_at: 2019-09-05T16:54:14Z\n                    duration: 60\n                    host_id: AbcDefGHi\n                    id: 1100000\n                    join_url: https://zoom.us/j/1100000\n                    settings:\n                      alternative_hosts: \"\"\n                      approval_type: 2\n                      audio: both\n                      auto_recording: local\n                      breakout_room:\n                        enable: false\n                        host_video: false\n                        in_meeting: false\n                        join_before_host: true\n                        mute_upon_entry: false\n                        participant_video: false\n                        registrants_confirmation_email: true\n                        registrants_email_notification: true\n                        rooms:\n                          - name: room1\n                            participants:\n                              - james.user01@somemail1234.com\n                              - james.user02@somemail1234.com\n                          - name: room2\n                            participants:\n                              - james.user03@somemail1234.com\n                        use_pmi: false\n                        waiting_room: false\n                        watermark: false\n                      close_registration: false\n                      cn_meeting: false\n                      enforce_login: false\n                      enforce_login_domains: \"\"\n                      global_dial_in_countries:\n                        - US\n                      global_dial_in_numbers:\n                        - city: New York\n                          country: US\n                          country_name: US\n                          number: +1 1000200200\n                          type: toll\n                        - city: San Jose\n                          country: US\n                          country_name: US\n                          number: +1 6699006833\n                          type: toll\n                        - city: San Jose\n                          country: US\n                          country_name: US\n                          number: +1 408000000\n                          type: toll\n                      start_time: 2019-08-30T22:00:00Z\n                      start_url: https://zoom.us/s/1100000?iIifQ.wfY2ldlb82SWo3TsR77lBiJjR53TNeFUiKbLyCvZZjw\n                      status: waiting\n                      timezone: America/New_York\n                      topic: API Test\n                      type: 2\n                      uuid: ng1MzyWNQaObxcf3+Gfm6A==\n              schema:\n                $ref: '#/components/schemas/CreateMeetingResponse'\n          description: \"HTTP Status Code:201 - Meeting created.\"\n          headers:\n            Content-Location:\n              description: Location of created Meeting\n              schema:\n                type: string\n        \"300\":\n          description: \u003e\n            **HTTP Status Code:** `300`\n\n            Invalid enforce_login_domains, separate multiple domains by semicolon.\n\n            A maximum of {rateLimitNumber} meetings can be created/updated for a single user in one day.\n        \"404\":\n          description: \u003e\n            **HTTP Status Code:** `404` **Not Found**\n\n            User not found.\n\n\n            **Error Code:** `1001` User {userId} not exist or not belong to this account.\n      summary: Create a meeting\n      tags:\n        - Meetings\n  \"/meetings/{meetingId}/registrants\":\n    get:\n      description: A host or a user with admin permission can require [registration\n        for a Zoom meeting\n      operationId: listMeetingRegistrants\n      x-ballerina-display:\n        label: List Meeting Registrants\n      parameters:\n        - description: MThe meeting ID in **long** format. The data type of this field is\n            \"long\"(represented as int64 in JSON).\n          in: path\n          name: meetingId\n          required: true\n          schema:\n            format: int64\n            type: integer\n          x-ballerina-display:\n            label:  Meeting Id\n        - description: The meeting occurrence ID.\n          in: query\n          name: occurrence_id\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Occurence Id\n        - description: The registrant status\n          in: query\n          name: status\n          schema:\n            default: approved\n            enum:\n              - pending\n              - approved\n              - denied\n            type: string\n          x-ballerina-display:\n            label: Registrant Status\n          x-enum-descriptions:\n            - registrants status is pending\n            - registrants status is approved\n            - registrants status is denied\n        - description: The number of records returned within a single API call.\n          in: query\n          name: page_size\n          schema:\n            default: 30\n            maximum: 300\n            type: integer\n          x-ballerina-display:\n            label: Page Size\n        - description: \"Deprecated - The page number of the current page in the returned records.\"\n          in: query\n          name: page_number\n          schema:\n            default: 1\n            type: integer\n          x-ballerina-display:\n            label: Page Number\n        - description: The next page token is used to paginate through large result sets.  A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.\n          in: query\n          name: next_page_token\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Next Page Token\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    page_count: 1\n                    page_number: 1\n                    page_size: 1\n                    registrants:\n                      - address: 11111 Awesome St\n                        city: Paris\n                        comments: Love using Zoom APIs\n                        country: France\n                        create_time: 2012-04-14T16:55:30.231Z\n                        custom_questions:\n                          - title: Did you enjoy the registration process?\n                            value: Yes, alot.\n                          - title: Would you like to register for our next meeting?\n                            value: Absolutely.\n                        email: somemeail@emailprovider.com\n                        first_name: Tim\n                        id: zjkfsdfjdfhg\n                        industry: Tech\n                        job_title: Developer\n                        join_url: https://success.zoom.us/j/0000000000000\n                        last_name: S.\n                        no_of_employees: 1-20\n                        org: Growth\n                        phone: \"00000\"\n                        purchasing_time_frame: Within a month\n                        role_in_purchase_process: Not involved\n                        state: Ile-de-France\n                        status: approved\n                        zip: \"11000\"\n                    total_records: 1\n              schema:\n                $ref: '#/components/schemas/ListMeetingRegistrantsResponse'\n          description: \"HTTP Status Code:200. Successfully listed meeting registrants.\"\n      security:\n        - OAuth: []\n      summary: List meeting registrants\n      tags:\n        - Meetings\n    post:\n      description: \u003e-\n        Register a participant for a meeting. Note that there is a\n        maximum limit of 4999 registrants per meeting and users will see an\n        error if the capacity has reached.\n\n\n        **Prerequisite:**\n\n        * Host user type must be \"Licensed\".\n\n\n        **Scopes:** `meeting:write:admin` `meeting:write`\n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n      operationId: addMeetingRegistrant\n      x-ballerina-display:\n        label: Add Meeting Registrant\n      parameters:\n        - description: The meeting ID in **long** format. The data type of this field is\n            \"long\"(represented as int64 in JSON).\n          in: path\n          name: meetingId\n          required: true\n          schema:\n            format: int64\n            type: integer\n          x-ballerina-display:\n            label: Meeting Id\n        - description: \"Occurrence IDs. You can find these with the meeting get API. Multiple values separated by comma.\"\n          in: query\n          name: occurrence_ids\n          schema:\n            type: string\n          required: false\n          x-ballerina-display:\n            label: Occurence Id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddMeetingRegistrantRequest'\n        required: true\n        description: Meeting Registrant Details\n        x-examples:\n          application/json:\n            address: 123 Main ST\n            city: San Jose\n            comments: Excited to host you.\n            country: US\n            custom_questions:\n              - title: Favorite thing about Zoom\n                value: Meet Happy\n            email: myemail@mycompany.com\n            first_name: Mike\n            industry: Tech\n            job_title: DA\n            last_name: Brown\n            no_of_employees: 1-20\n            org: IT\n            phone: 111-444-4444\n            purchasing_time_frame: More Than 6 Months\n            role_in_purchase_process: Influencer\n            state: CA\n            zip: \"95550\"\n      responses:\n        \"201\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    id: 85746065\n                    join_url: amet\n                    registrant_id: a\n                    start_time: culpa mollit\n                    topic: reprehenderit ea ut ex Excepteur\n              schema:\n                $ref: '#/components/schemas/AddMeetingRegistrantResponse'\n          description: Meeting registrant's details\n      security:\n        - OAuth: []\n      summary: Add meeting registrant\n      tags:\n        - Meetings\n  \"/meetings/{meetingId}/registrants/questions\":\n    get:\n      description: \u003e+\n        List registration questions that will be displayed to users while\n        [registering for a\n        meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).\u003cbr\u003e\n\n\n        **Scopes:** `meeting:read`, `meeting:read:admin`\u003cbr\u003e\n\n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n      operationId: getMeetingRegistrantsQuestions\n      x-ballerina-display:\n        label: List Registrant Questions\n      parameters:\n        - description: \u003e-\n            The meeting ID in **long** format. The data type of this field is\n            \"long\"(represented as int64 in JSON).\n\n\n            While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.\n          in: path\n          name: meetingId\n          required: true\n          x-ballerina-display:\n            label: Meeting Id\n          schema:\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    custom_questions:\n                      - required: false\n                        title: How long have you been working?\n                        type: short\n                    questions:\n                      - field_name: address\n                        required: true\n              schema:\n                $ref: '#/components/schemas/RegistrantQuestions'\n          description: |-\n            **HTTP Status Code:** `200`. Meeting Registrant Question object returned\n        \"404\":\n          description: |-\n            **HTTP Status Code:** `404`\u003cbr\u003e\n            Meeting not found\n      security:\n        - OAuth: []\n      summary: \"List registration questions \"\n      tags:\n        - Meetings\n    patch:\n      description: \u003e+\n        Update registration questions that will be displayed to users while\n        [registering for a\n        meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).\u003cbr\u003e\u003cbr\u003e\n\n        **Scopes:** `meeting:write`, `meeting:write:admin`\u003cbr\u003e\n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n         \n\n      operationId: updateMeetingRegistrantQuestions\n      x-ballerina-display:\n        label: Update Registration Questions\n      parameters:\n        - description: \u003e-\n            The meeting ID in **long** format. The data type of this field is\n            \"long\"(represented as int64 in JSON).\n\n            While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.\n          in: path\n          name: meetingId\n          required: true\n          schema:\n            format: int64\n            type: integer\n          x-ballerina-display:\n            label: Meeting Id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegistrantQuestions'\n        description: Meeting Registrant Questions\n        required: true\n        x-examples:\n          application/json:\n            custom_questions:\n              - required: true\n                title: How long have you been working?\n                type: short\n            questions:\n              - field_name: address\n                required: true\n      responses:\n        \"204\":\n          description: |-\n            **HTTP Status Code:** `204`. Meeting Registrant Questions Updated\n        \"404\":\n          description: |-\n            **HTTP Status Code:** `404`\u003cbr\u003e\n            Meeting not found.\n      security:\n        - OAuth: []\n      summary: Update registration questions\n      tags:\n        - Meetings\n  \"/meetings/{meetingId}/registrants/status\":\n    put:\n      description: \u003e-\n        Update a meeting registrant's status by either approving,\n        cancelling or denying a registrant from joining the meeting.\u003cbr\u003e\u003cbr\u003e\n\n        **Scopes:** `meeting:write:admin` `meeting:write`\n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n      operationId: updateMeetingRegistrantStatus\n      x-ballerina-display:\n        label: Update Meeting Registrant's Status\n      parameters:\n        - description: \u003e-\n            The meeting ID in **long** format. The data type of this field is\n            \"long\"(represented as int64 in JSON).\n\n\n            While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.\n          in: path\n          name: meetingId\n          required: true\n          schema:\n            format: int64\n            type: integer\n          x-ballerina-display:\n            label: Meting Id\n        - description: The meeting occurrence ID.\n          in: query\n          name: occurrence_id\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Occurrence Id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateMeetingRegistrantstatusRequest'\n        description: Request payload for meeting registrant status update\n        required: true\n        x-examples:\n          application/json:\n            action: approve\n            registrants:\n              - email: someemail@companyname.com\n                id: \"173525362\"\n              - email: anotheremail@companyname.com\n                id: \"156234353456\"\n      responses:\n        \"204\":\n          description: |-\n            **HTTP Status Code:** `204`. Registrant status updated.\n        \"300\":\n          description: |-\n            **Error Code:** `300`\u003cbr\u003e\n            This meeting has not set registration as required:{meetingId}.\n        \"400\":\n          description: |+\n            **HTTP Status Code:** `400`\u003cbr\u003e\n            **Error Code:** `1010`\u003cbr\u003e\n            User does not belong to this account: {accountId}.\u003cbr\u003e\n            **Error Code:** `3000`\u003cbr\u003e\n            Cannot access meeting information.\u003cbr\u003e\n            **Error Code:** `3003`\u003cbr\u003e\n            You're not the meeting host.\n\n        \"404\":\n          description: |\n            **HTTP Status Code:** `404`\u003cbr\u003e\n            Meeting or registrant not found.\n            **Error Code:** `1001`\u003cbr\u003e\n            User does not exist: {userId}.\u003cbr\u003e\n      security:\n        - OAuth: []\n      summary: Update registrant's status\n      tags:\n        - Meetings\n  \"/meetings/{meetingId}/registrants/{registrantId}\":\n    delete:\n      description: \u003e-\n        Delete a meeting registrant.\u003cbr\u003e\u003cbr\u003e\n\n        **Scopes**: `meeting:write:admin` `meeting:write`\u003cbr\u003e\n         \u003cbr\u003e\n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n      operationId: deleteMeetingregistrant\n      x-ballerina-display:\n        label: Delete Meeting Registrant\n      parameters:\n        - description: The meeting occurence ID.\n          in: query\n          name: occurrence_id\n          schema:\n            type: string\n          x-ballerina-display:\n            label: occurence Id\n        - description: The meeting ID.\n          in: path\n          name: meetingId\n          required: true\n          schema:\n            type: integer\n          x-ballerina-display:\n            label: Meeting Id\n        - description: The meeting registrant ID.\n          in: path\n          name: registrantId\n          required: true\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Registrant Id\n      responses:\n        \"204\":\n          description: |-\n            **HTTP status code:** `204` OK\n        \"400\":\n          description: \u003e-\n            **HTTP status code:** `400` \u003cbr\u003e\n\n            Bad Request\u003cbr\u003e\n\n\n            **Error code:** `200`\u003cbr\u003e\n\n            Only available for paid users: {0}.\u003cbr\u003e\n\n\n            **Error code:** `300`\u003cbr\u003e\n\n            The value that you entered for the Registrant ID field is invalid. Enter a valid value and try again.\u003cbr\u003e\n\n\n            **Error code:** `404` \u003cbr\u003e\n\n            Registration has not been enabled for this meeting: {0}.\u003cbr\u003e\n\n\n            **Error code:** `1001` \u003cbr\u003e\n\n            User {userId} does not exist or does not belong to this account.\u003cbr\u003e\n\n\n            **Error code:** `3000` \u003cbr\u003e\n\n            Cannot access webinar info. ***Note:** Zoom throws this error when the meetingId is a webinarId.*\u003cbr\u003e\n\n            Registrant {0} was not found.\n\n\n            **Error code:** `3001` \u003cbr\u003e\n\n            Meeting does not exist: {0}.\n      summary: Delete a meeting registrant\n      tags:\n        - Meetings\n  \"/meetings/{meetingId}\":\n    delete:\n      description: \u003e+\n        Delete a meeting.\n\n        **Scopes:** `meeting:write:admin` `meeting:write`\n\n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n      operationId: deleteMeeting\n      x-ballerina-display:\n        label: Delete Meeting\n      parameters:\n        - description: \u003e-\n            The meeting ID in **long** format. The data type of this field is\n            \"long\"(represented as int64 in JSON).\n\n\n            While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.\n          in: path\n          name: meetingId\n          required: true\n          schema:\n            format: int64\n            type: integer\n          x-ballerina-display:\n            label: Meeting Id\n        - description: The meeting occurrence ID.\n          in: query\n          name: occurrence_id\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Occurence Id\n        - description: \u003e-\n            `true`: Notify host and alternative host about the meeting\n            cancellation via email.\n\n            `false`: Do not send any email notification.\n          in: query\n          name: schedule_for_reminder\n          schema:\n            type: boolean\n          x-ballerina-display:\n            label: Schedule for Reminder \n        - description: \u003e-\n            `true`: Notify registrants about the meeting cancellation via\n            email. \n\n\n            `false`: Do not send any email notification to meeting registrants. \n\n\n            The default value of this field is `false`.\n          in: query\n          name: cancel_meeting_reminder\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Meeting Cancellation Reminder\n      responses:\n        \"204\":\n          description: \"**HTTP Status Code**: `204` Meeting deleted.\"\n        \"400\":\n          description: \u003e+\n            **HTTP Status Code**: `400` \n\n            **Error Code**: `1010` \n\n            User does not belong to this account: {accountId}.\n\n            **Error Code**: `3000` Cannot access meeting information.Invalid occurrence_id.\n\n            **Error Code**: `3002` \n\n            Sorry, you cannot delete this meeting since it is in progress.**Error Code**: `3003` You are not the meeting host.\n\n            **Error Code**: `3007` Sorry, you cannot delete this meeting since it has ended.**Error Code**: `3018` \n\n            Not allowed to delete PMI.**Error Code**: `3037` Not allowed to delete PAC.\n        \"404\":\n          description: |-\n            **HTTP Status Code**: `404` \n            Meeting not found.\n            **Error Code**: `1001` \n            User does not exist: {userId}.\n            **Error Code**: `3001` \n            Meeting with this {meetingId} is not found or has expired.\n      security:\n        - OAuth: []\n      summary: Delete a meeting\n      tags:\n        - Meetings\n    get:\n      description: \u003e+\n        Retrieve the details of a meeting.\n\n        **Scopes:** `meeting:read:admin` `meeting:read`\n\n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n      operationId: getMeetingById\n      x-ballerina-display:\n        label: Get Meeting Details\n      parameters:\n        - description: \u003e-\n            The meeting ID in **long** format. The data type of this field is\n            \"long\"(represented as int64 in JSON).\n\n\n            While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.\n          in: path\n          name: meetingId\n          required: true\n          schema:\n            format: int64\n            type: integer\n          x-ballerina-display:\n            label: Meeting Id\n        - description: Meeting Occurrence ID. Provide this field to view meeting details\n            of a particular occurrence of the [recurring\n            meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings).\n          in: query\n          name: occurrence_id\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Occurence Id\n        - description: \"Set the value of this field to `true` if you would like to view\n            meeting details of all previous occurrences of a [recurring\n            meeting](https://support.zoom.us/hc/en-us/articles/214973206-Schedu\\\n            ling-Recurring-Meetings). \"\n          in: query\n          name: show_previous_occurrences\n          schema:\n            type: boolean\n          x-ballerina-display:\n            label: Show Previous Occurrences\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    agenda: API overview\n                    created_at: 2019-09-09T15:54:24Z\n                    duration: 60\n                    host_id: ABcdofjdogh11111\n                    id: 1234555466\n                    join_url: https://zoom.us/j/1234555466\n                    settings:\n                      alternative_hosts: kjxckfjxgfgjdfk@dkjfhdskhf.com\n                      approval_type: 2\n                      audio: both\n                      auto_recording: local\n                      close_registration: false\n                      cn_meeting: false\n                      enforce_login: false\n                      enforce_login_domains: mycompanydomain.com\n                      global_dial_in_countries:\n                        - US\n                      global_dial_in_numbers:\n                        - city: New York\n                          country: US\n                          country_name: US\n                          number: +1 000011100\n                          type: toll\n                        - city: San Jose\n                          country: US\n                          country_name: US\n                          number: +1 6699006833\n                          type: toll\n                        - city: San Jose\n                          country: US\n                          country_name: US\n                          number: +1 221122112211\n                          type: toll\n                      host_video: false\n                      in_meeting: false\n                      join_before_host: true\n                      mute_upon_entry: false\n                      participant_video: false\n                      registrants_confirmation_email: true\n                      registrants_email_notification: true\n                      use_pmi: false\n                      waiting_room: false\n                      watermark: false\n                    start_time: 2019-08-30T22:00:00Z\n                    start_url: https://zoom.us/1234555466/cdknfdffgggdfg4MDUxNjY0LCJpYXQiOjE1NjgwNDQ0NjQsImFpZCI6IjRBOWR2QkRqVHphd2J0amxoejNQZ1EiLCJjaWQiOiIifQ.Pz_msGuQwtylTtYQ\n                    status: waiting\n                    timezone: America/New_York\n                    topic: My API Test\n                    type: 2\n                    uuid: iAABBBcccdddd7A==\n              schema:\n                $ref: '#/components/schemas/GetMeetingDetailsResponse'\n          description: \"**HTTP Status Code:** `200` Meeting object returned.\"\n        \"400\":\n          description: \u003e-\n            **HTTP Status Code:** `400`\n\n            **Error Code:** `1010`\n\n            User not found on this account: {accountId}.**Error Code:** `3000`\n\n            Cannot access webinar info.\n        \"404\":\n          description: |-\n            **HTTP Status Code:** `404`\n            Meeting not found.\n            **Error Code:** `1001`\n            User not exist: {userId}.**Error Code:** `3001`\n            Meeting {meetingId} is not found or has expired.\n      security:\n        - OAuth: []\n      summary: Get a meeting\n      tags:\n        - Meetings\n    patch:\n      description: \u003e+\n        Update the details of a meeting.\u003cbr\u003eThis API has a rate limit of\n        100 requests per day. Therefore, a meeting can only be updated for a\n        maximum of 100 times within a 24 hour window.\u003cbr\u003e\n\n        **Scopes:** `meeting:write:admin` `meeting:write`\u003cbr\u003e\n         \n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n      operationId: updateMeeting\n      x-ballerina-display:\n        label: Update Meeting\n      parameters:\n        - description: \u003e-\n            The meeting ID in **long** format. The data type of this field is\n            \"long\"(represented as int64 in JSON).\n\n\n            While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.\n          in: path\n          name: meetingId\n          required: true\n          schema:\n            format: int64\n            type: integer\n          x-ballerina-display:\n            label: Meeting Id\n        - description: \"Meeting occurrence id. Support change of agenda, start_time,\n            duration, settings: {host_video, participant_video,\n            join_before_host, mute_upon_entry, waiting_room, watermark,\n            auto_recording}\"\n          in: query\n          name: occurrence_id\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Occurrence Id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateMeetingRequest'\n        description: Meeting\n        required: true\n        x-examples:\n          application/json:\n            agenda: My Meeting\n            duration: 60\n            password: abcd\n            settings:\n              alternative_hosts: mycohost@someemail.com\n              approval_type: 0\n              global_dial_in_countries:\n                - city: San Jose\n                  country: US\n                  country_name: US\n                  number: +1 1212121212121212\n                  type: toll\n              host_video: false\n              in_meeting: false\n              join_before_host: true\n              mute_upon_entry: false\n              participant_video: false\n              registrants_confirmation_email: true\n              use_pmi: false\n              waiting_room: false\n              watermark: false\n            start_time: 2019-08-30T18:00:00\n            timezone: America/New_York\n            topic: Michael API Test\n            type: 2\n      responses:\n        \"204\":\n          description: \"**HTTP Status Code:** `204`. Meeting updated.\"\n        \"300\":\n          description: \u003e\n            **Error Code:** `300`\u003cbr\u003e\n\n            Invalid enforce_login_domains, separate multiple domains by semicolon.\u003cbr\u003e\n\n            A maximum of {rateLimitNumber} meetings can be created/updated for a single user in one day.\n        \"400\":\n          description: |\n            **HTTP Status Code:** `400`\u003cbr\u003e\n            **Error Code:** `1010`\u003cbr\u003e\n            User not found on this account: {accountId}.\u003cbr\u003e\n            **Error Code:** `3000`\u003cbr\u003e\n            Cannot access meeting information.\u003cbr\u003e\n            **Error Code:** `3003`\u003cbr\u003e\n            You are not the meeting host.\n        \"404\":\n          description: |-\n            **HTTP Status Code:** `404`\u003cbr\u003e\n            Meeting not found.\u003cbr\u003e\n            **Error Code:** `1001`\u003cbr\u003e\n            User does not exist: {userId}.\u003cbr\u003e\n            **Error Code:** `3001`\u003cbr\u003e\n            A meeting with this {meetingId} is not found or has expired.\n      security:\n        - OAuth: []\n      summary: Update a meeting\n      tags:\n        - Meetings  \n  \"/meetings/{meetingId}/status\":\n    put:\n      description: \u003e-\n        Update the status of a meeting.\u003cbr\u003e\u003cbr\u003e\n\n        **Scopes:** `meeting:write:admin` `meeting:write`\n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n      operationId: updateMeetingStatus\n      x-ballerina-display:\n        label: Update Meeting Status\n      parameters:\n        - description: \u003e-\n            The meeting ID in **long** format. The data type of this field is\n            \"long\"(represented as int64 in JSON).\n\n\n            While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.\n          in: path\n          name: meetingId\n          required: true\n          schema:\n            format: int64\n            type: integer\n          x-ballerina-display:\n            label: Meeting Id\n      requestBody:\n        description: Meeting status update details\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateMeetingstatusRequest'\n        required: true\n        x-examples:\n          application/json:\n            action: end\n      responses:\n        \"204\":\n          description: |-\n            **HTTP Status Code:** `204`. Meeting updated.\n        \"400\":\n          description: |-\n            **HTTP Status Code:** `400`\u003cbr\u003e\n            **Error Code:** `1010`\u003cbr\u003e\n            User does not belong to this account: {accountId}.\n            **Error Code:** `3000`\u003cbr\u003e\n            Cannot access meeting info.\n            **Error Code:** `3003`\u003cbr\u003e\n            You're not the meeting host.\n            **Error Code:** `3063`\u003cbr\u003e\n            Can not end on-premise user's meeting: {meetingId}.\n        \"404\":\n          description: |+\n            **HTTP Status Code:** `404`\u003cbr\u003e\n            Meeting not found.\u003cbr\u003e\n            **Error Code:** `1001`\u003cbr\u003e\n            Meeting host does not exist: {userId}.\n\n      security:\n        - OAuth: []\n      summary: Update meeting status\n      tags:\n        - Meetings\n  \"/past_meetings/{meetingId}/instances\":\n    get:\n      description: \u003e-\n        Get a list of ended meeting instances\u003cbr\u003e\u003cbr\u003e\n\n        **Scopes:** `meeting:read:admin` `meeting:read`\u003cbr\u003e\n\n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` \n      operationId: listPastMeetings\n      x-ballerina-display:\n        label: List Past Meetings\n      parameters:\n        - description: \u003e-\n            The meeting ID in **long** format. The data type of this field is\n            \"long\"(represented as int64 in JSON).\n\n\n            While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.\n          in: path\n          name: meetingId\n          required: true\n          schema:\n            format: int64\n            type: integer\n          x-ballerina-display:\n            label: Meeting Id\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListPastMeetingsResponse'\n          description: |-\n            **HTTP Status Code:** `200`. List of ended meeting instances returned.\n        \"404\":\n          description: |-\n            **HTTP Status Code:** `404`\u003cbr\u003e\n            Meeting not found.\n      security:\n        - OAuth: []\n      summary: List ended meeting instances\n      tags:\n        - Meetings\n  \"/past_meetings/{meetingId}/polls\":\n    get:\n      description: \u003e-\n        [Polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)\n        allow the meeting host to survey attendees. Use this API to list poll\n        results of a meeting.\u003cbr\u003e\u003cbr\u003e\n\n\n        **Scopes**: `meeting:read:admin`, `meeting:read`\u003cbr\u003e\n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` \u003cbr\u003e\n        **Prerequisites**:\u003cbr\u003e\n\n        * Host user type must be **Pro**.\n\n        * Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.\n      operationId: listPastMeetingPolls\n      x-ballerina-display:\n        label: List Meeting Polls\n      parameters:\n        - description: \u003e-\n            The meeting ID or the meeting UUID.  If a meeting ID is provided in\n            the request instead of a UUID, the response will be for the latest\n            meeting instance.\n\n\n            If a UUID starts with \"/\" or contains \"//\" (example: \"/ajXp112QmuoKj4854875==\\\"), you must **double encode** the UUID before making an API request.\n          in: path\n          name: meetingId\n          required: true\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Meeting Id\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    id: 123456\n                    questions:\n                      - email: myemail@jksdlfkjdf.djfk\n                        name: Sam S\n                        question_details:\n                          - answer: I am wonderful.\n                            question: How are you?\n                    start_time: 2019-02-01T12:34:12.660Z\n                    title: Learn something new\n                    uuid: gsdjfhsdfkhjdsf\n              schema:\n                $ref: '#/components/schemas/ListPastMeetingPollsResponse'\n          description: |-\n            **HTTP Status Code:** `200` **OK**. Polls returned successfully.\n      security:\n        - OAuth: []\n      summary: List past meeting's poll results\n      tags:\n        - Meetings\n    parameters:\n      - in: path\n        name: meetingId\n        required: true\n        schema:\n          type: string\n  \"/past_meetings/{meetingUUID}\":\n    get:\n      description: \u003e-\n        Get details on a past meeting. \u003cbr\u003e\u003cbr\u003e\n\n        **Scopes:** `meeting:read:admin` `meeting:read`\n\n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n        \u003e **Note**: Please double encode your UUID when using this API if the UUID begins with a '/'or contains '//' in it.\n      operationId: getPastMeetingDetails\n      x-ballerina-display:\n        label: Get Past Meeting Details\n      parameters:\n        - description: The meeting UUID. Each meeting instance will generate its own\n            Meeting UUID (i.e., after a meeting ends, a new UUID will be\n            generated for the next instance of the meeting). Please double\n            encode your UUID when using it for other API calls if the UUID\n            begins with a '/'or contains '//' in it.\n          in: path\n          name: meetingUUID\n          required: true\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Meeting UUID\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    duration: integer\n                    end_time: string [date-time]\n                    host_id: integer\n                    id: integer\n                    participants_count: integer\n                    start_time: string [date-time]\n                    topic: string\n                    total_minutes: integer\n                    type: integer\n                    user_email: string\n                    user_name: string\n                    uuid: string [uuid]\n              schema:\n                $ref: '#/components/schemas/PastMeetingDetailsResponse'\n          description: |-\n            **HTTP Status Code:** `200`. Meeting details returned.\n        \"400\":\n          description: |\n            **HTTP Status Code:** `400`\u003cbr\u003e\n            Meeting not found\u003cbr\u003e\u003cbr\u003e\n            **Error Code:** `1010`\u003cbr\u003e\n            User not exist: {userId}\u003cbr\u003e\u003cbr\u003e\n            User {userId} not exist or not belong to this account.\u003cbr\u003e\u003cbr\u003e\n            **Error Code:** `300`\u003cbr\u003e\n            Cannot access meeting info.\u003cbr\u003e\u003cbr\u003e\n            **Error Code:** `200`\u003cbr\u003e\n            Only available for paid account: {accountId}\n        \"404\":\n          description: |\n            **HTTP Status Code:** `404`\u003cbr\u003e\n            Meeting not found\u003cbr\u003e\u003cbr\u003e\n            **Error Code:** `3001`\u003cbr\u003e\n            This meeting is not available or ID is not valid.\u003cbr\u003e\n            Meeting ID is invalid or not end.\n      security:\n        - OAuth: []\n      summary: Get past meeting details\n      tags:\n        - Meetings\n  \"/past_meetings/{meetingUUID}/participants\":\n    get:\n      description: \u003e\n        Retrieve information on participants from a past meeting. \u003cbr\u003e\u003cbr\u003e\n\n        **Scopes:** `meeting:read:admin` `meeting:read`\n\n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n        **Prerequisites:**\u003cbr\u003e\n\n        * Paid account on a Pro or higher plan.\n\n\n        \u003cbr\u003e \u003cbr\u003e  **Note**: Please double encode your UUID when using this API if the UUID begins with a '/'or contains '//' in it.\n      operationId: listPastMeetingParticipants\n      x-ballerina-display:\n        label: List Past Meeting Participants\n      parameters:\n        - description: The meeting UUID. Each meeting instance will generate its own\n            Meeting UUID (i.e., after a meeting ends, a new UUID will be\n            generated for the next instance of the meeting). Please double\n            encode your UUID when using it for other API calls if the UUID\n            begins with a '/'or contains '//' in it.\n          in: path\n          name: meetingUUID\n          required: true\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Meeting UUID\n        - description: The number of records returned within a single API call.\n          in: query\n          name: page_size\n          schema:\n            default: 30\n            maximum: 300\n            type: integer\n          x-ballerina-display:\n            label: Page Size\n        - description: The next page token is used to paginate through large result sets.\n            A next page token will be returned whenever the set of available\n            results exceeds the current page size. The expiration period for\n            this token is 15 minutes.\n          in: query\n          name: next_page_token\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Next Page Token\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    next_page_token: aliqua\n                    page_count: 1\n                    page_size: 30\n                    participants:\n                      - id: 8b29rgg4bb\n                        name: Ram Shekhar\n                        user_email: ram.shekhar.123@fkdngfjg.fdghdfgj\n                    total_records: 1\n              schema:\n                $ref: '#/components/schemas/ListPastMeetingParticipantsResponse'\n          description: |-\n            **HTTP Status Code:** `200`. Meeting participants' report returned.\n        \"400\":\n          description: |+\n            **HTTP Status Code:** `400`\u003cbr\u003e\n            **Error Code:** `1010`\u003cbr\u003e\n            User {userId} not exist or not belong to this account.\u003cbr\u003e\u003cbr\u003e\n            **Error Code:** `300`\u003cbr\u003e\n            Cannot access meeting information.\u003cbr\u003e\u003cbr\u003e\n            **Error Code:** `200`\u003cbr\u003e\n            Only available for paid account: {accountId}\n\n        \"404\":\n          description: |-\n            **HTTP Status Code:** `404`\u003cbr\u003e\n            Meeting not found\u003cbr\u003e\n            **Error Code:** `1001`\u003cbr\u003e\n            User {userId} not exist or not belong to this account.\u003cbr\u003e\n            User not exist: {userId}\u003cbr\u003e\u003cbr\u003e\n            **Error Code:** `3001`\u003cbr\u003e\n            This meeting is not available or ID is not valid.\u003cbr\u003e\n            Meeting ID is invalid or not end.\n      security:\n        - OAuth: []\n      summary: List past meeting participants\n      tags:\n        - Meetings\n  \"/meetings/{meetingId}/polls\":\n    get:\n      description: \u003e-\n        Polls allow the meeting host to survey attendees. Use this API to\n        list\n        [polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)\n        of a meeting.\u003cbr\u003e\u003cbr\u003e\n\n\n        **Scopes**: `meeting:read:admin` `meeting:read`\u003cbr\u003e\n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\u003cbr\u003e\n        **Prerequisites**:\u003cbr\u003e\n\n        * Host user type must be **Pro** or higher plan.\n\n        * Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.\n      operationId: getMeetingPolls\n      x-ballerina-display:\n        label: Get Meeting Polls\n      parameters:\n        - description: \u003e-\n            The meeting ID in **long** format. The data type of this field is\n            \"long\"(represented as int64 in JSON).\n\n\n            While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.\n          in: path\n          name: meetingId\n          required: true\n          schema:\n            format: int64\n            type: integer\n          x-ballerina-display:\n            label: Meeting Id\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    polls:\n                      - id: YB33NcABCdg_g1AAAxTQ\n                        questions:\n                          - answers:\n                              - Extremely useful\n                              - Somewhat useful\n                              - Not useful at all\n                            name: How useful was this meeting?\n                            type: multiple\n                        status: notstart\n                        title: Meeting Usefulness\n                    total_records: 1\n              schema:\n                $ref: '#/components/schemas/MeetingPollsResponse'\n          description: |-\n            **HTTP Status Code:**. List polls of a Meeting  returned\n        \"404\":\n          description: |-\n            **Error Code:** `404`\n            Meeting Poll not found\n      security:\n        - OAuth: []\n      summary: List meeting polls\n      tags:\n        - Meetings\n    post:\n      description: \u003e-\n        Polls allow the meeting host to survey attendees. Use this API to\n        create a\n        [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)\n        for a meeting.\u003cbr\u003e\u003cbr\u003e\n\n\n        **Scopes**: `meeting:write:admin` `meeting:write`\u003cbr\u003e\n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\u003cbr\u003e\n        **Prerequisites**:\u003cbr\u003e\n\n        * Host user type must be **Pro** or higher plan.\n\n        * Polling feature must be enabled in the host's account.\n\n        * Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.\n      operationId: createMeetingPoll\n      x-ballerina-display:\n        label: Create Meeting Poll\n      parameters:\n        - description: \u003e-\n            The meeting ID in **long** format. The data type of this field is\n            \"long\"(represented as int64 in JSON).\n\n\n            While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.\n          in: path\n          name: meetingId\n          required: true\n          schema:\n            format: int64\n            type: integer\n          x-ballerina-display:\n            label: Meeting Id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateMeetingPollRequest'\n        description: Meeting poll object\n        required: true\n        x-examples:\n          application/json:\n            questions:\n              - answers:\n                  - Extremely useful\n                  - Somewhat useful\n                  - Not useful at all\n                name: How useful was this meeting?\n                type: multiple\n            title: Meeting Usefulness\n      responses:\n        \"201\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    id: abcdaaaeefffhhh\n                    questions:\n                      - answers:\n                          - Extremely useful\n                          - Somewhat useful\n                          - Not useful at all\n                        name: How useful was this meeting?\n                        type: multiple\n                    status: notstart\n                    title: Meeting Usefulness\n              schema:\n                $ref: '#/components/schemas/CreateMeetingPollResponse'\n          description: |-\n            **HTTP Status Code:** `201`. Meeting Poll Created\n          headers:\n            Content-Location:\n              description: Location of created Meeting Poll\n              schema:\n                type: string\n        \"404\":\n          description: |-\n            **Error Code:** `404` \u003cbr\u003e\n            Meeting not found\n      security:\n        - OAuth: []\n      summary: Create a meeting poll\n      tags:\n        - Meetings\n  \"/meetings/{meetingId}/polls/{pollId}\":\n    delete:\n      description: \u003e-\n        Polls allow the meeting host to survey attendees. Use this API to\n        delete a meeting\n        [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings).\u003cbr\u003e\n\n        **Scopes**: `meeting:write:admin` `meeting:write`\u003cbr\u003e\n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \u003cbr\u003e\n        **Prerequisites**:\u003cbr\u003e\n\n        * Host user type must be **Pro**.\n\n        * Polling feature should be enabled in the host's account.\n\n        * Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.\n      operationId: deleteMeetingPoll\n      x-ballerina-display:\n        label: Delete Meeting Poll\n      parameters:\n        - description: \u003e-\n            The meeting ID in **long** format. The data type of this field is\n            \"long\"(represented as int64 in JSON).\n\n\n            While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.\n          in: path\n          name: meetingId\n          required: true\n          schema:\n            format: int64\n            type: integer\n          x-ballerina-display:\n            label: Meeting Id\n        - description: The poll ID\n          in: path\n          name: pollId\n          required: true\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Poll Id\n      responses:\n        \"204\":\n          description: |-\n            **HTTP Status Code:** `204`. Meeting Poll deleted\n        \"404\":\n          description: |-\n            **Error Code:** `404`\n            Meeting Poll not found\n      security:\n        - OAuth: []\n      summary: Delete a meeting poll\n      tags:\n        - Meetings\n    get:\n      description: \u003e+\n        Polls allow the meeting host to survey attendees. Use this API to\n        get information about a specific meeting\n        [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings).\u003cbr\u003e\u003cbr\u003e\n\n        **Scopes**: `meeting:read:admin` `meeting:read`\u003cbr\u003e\n\n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n\n      operationId: getMeetingPoll\n      x-ballerina-display:\n        label: Get Meeting Poll\n      parameters:\n        - description: \u003e-\n            The meeting ID in **long** format. The data type of this field is\n            \"long\"(represented as int64 in JSON).\n\n\n            While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.\n          in: path\n          name: meetingId\n          required: true\n          schema:\n            format: int64\n            type: integer\n          x-ballerina-display:\n            label: Meeting Id\n        - description: The poll ID\n          in: path\n          name: pollId\n          required: true\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Poll Id\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    id: abcdaaaeefffhhh\n                    questions:\n                      - answers:\n                          - Extremely useful\n                          - Somewhat useful\n                          - Not useful at all\n                        name: How useful was this meeting?\n                        type: multiple\n                    status: notstart\n                    title: Meeting Usefulness\n              schema:\n                $ref: '#/components/schemas/GetMeetingPollResponse'\n          description: |-\n            **HTTP Status Code:** `200`. Meeting Poll object returned\n        \"404\":\n          description: |-\n            **Error Code:** `404` \u003cbr\u003e\n            Meeting Poll not found.\n      security:\n        - OAuth: []\n      summary: Get a meeting poll\n      tags:\n        - Meetings\n    put:\n      description: \u003e+\n        Polls allow the meeting host to survey attendees. Use this API to\n        update information of a specific meeting\n        [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)\u003cbr\u003e\u003cbr\u003e\n\n        **Scopes**: `meeting:write:admin` `meeting:write`\n\n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light` \n\n      operationId: updateMeetingPoll\n      x-ballerina-display:\n        label: Update Meeting Poll\n      parameters:\n        - description: \u003e-\n            The meeting ID in **long** format. The data type of this field is\n            \"long\"(represented as int64 in JSON).\n\n\n            While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.\n          in: path\n          name: meetingId\n          required: true\n          schema:\n            format: int64\n            type: integer\n          x-ballerina-display:\n            label: Meeting Id\n        - description: The poll ID\n          in: path\n          name: pollId\n          required: true\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Poll Id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateMeetingPollRequest'\n        description: Meeting Poll\n        required: true\n        x-examples:\n          application/json:\n            questions:\n              - answers:\n                  - Definitely\n                  - Probably\n                  - Not going to use it again\n                name: Would you like to use our service again?\n                type: multiple\n            title: Meeting Usefulness\n      responses:\n        \"204\":\n          description: |-\n            **HTTP Status Code:** `204`. Meeting Poll Updated\n        \"404\":\n          description: |-\n            **Error Code:** `404` \u003cbr\u003e\n            Meeting Poll not found\n      security:\n        - OAuth: []\n      summary: Update a meeting poll\n      tags:\n        - Meetings\n  \"/meetings/{meetingId}/batch_polls\":\n    post:\n      description: \u003e-\n        Polls allow the meeting host to survey attendees. Use this API to\n        create batch\n        [polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)\n        for a meeting.\u003cbr\u003e\u003cbr\u003e\n\n\n        **Scopes**: `meeting:write:admin` `meeting:write`\u003cbr\u003e\n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\u003cbr\u003e\n        **Prerequisites**:\u003cbr\u003e\n\n        * Host user type must be **Pro** or higher plan.\n\n        * Polling feature must be enabled in the host's account.\n\n        * Meeting must be a scheduled meeting. Instant meetings do not have polling features enabled.\n      operationId: createBatchPolls\n      x-ballerina-display:\n        label: Create Batch Polls\n      parameters:\n        - in: path\n          name: meetingId\n          required: true\n          schema:\n            type: string\n          description: Meeting Id\n          x-ballerina-display:\n            label: Meeting Id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateBatchPollsRequest'\n        description: Batch Meeting poll object\n        x-examples:\n          application/json:\n            polls:\n              - questions:\n                  - answers:\n                      - answer 1\n                      - answer 2\n                    name: Question Name\n                    type: multiple\n                  - answers:\n                      - answer 1\n                      - answer 2\n                    name: Question Name 2\n                    type: single\n                title: Meeting Usefulness\n      responses:\n        \"201\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    polls:\n                      - id: ex eiusmod\n                        questions:\n                          - answers:\n                              - est officia\n                              - dolor amet consectetur ad\n                              - irure consectetur enim commodo\n                            name: in mollit cillum adipisicing ullamco\n                            type: consectetur magna et\n                          - answers:\n                              - ut ut\n                              - non pariatur dolore eiusmod consectetur\n                              - pariatur deserunt in dolore et\n                              - deserunt exercitation incididunt nostrud dolore\n                              - dolor sit in laboris eiusmod\n                            name: non proident dolor eiusmod consectetur\n                            type: \"et deserunt nisi \"\n                          - answers:\n                              - dolor mollit\n                              - dolore Lorem voluptate\n                            name: minim\n                            type: velit labore\n                        status: Excepteur Lorem dolor exercitation\n                        title: in dolore culpa ad qui\n                      - id: mollit do\n                        questions:\n                          - answers:\n                              - \"culpa \"\n                              - aliquip dolore\n                            name: exercitation consectetur officia do\n                            type: id ex consequat culpa\n                          - answers:\n                              - ullamco consequat ut id esse\n                              - veniam eiusmod anim laborum\n                            name: proident ad\n                            type: Lorem nostrud nulla\n                          - answers:\n                              - nostrud voluptate eu velit\n                              - non labore dolor ad eiusmod\n                              - vo\n                            name: sint cillum ut\n                            type: in enim\n                          - answers:\n                              - sunt voluptate\n                              - reprehenderit ea\n                              - sunt aute\n                              - elit\n                            name: eu ullamco\n                            type: anim dolor sunt\n                          - answers:\n                              - nulla Duis\n                            name: sit enim consequat cupidatat\n                            type: cillum adipisicing\n                        status: deserunt id occaecat nisi qui\n                        title: est incididunt in dolore tempor\n                      - id: \"qui \"\n                        questions:\n                          - answers:\n                              - laboris laborum\n                              - nostrud sit dolore veniam\n                              - sunt commodo amet dolor ex\n                            name: ullamco et pariatur\n                            type: proident\n                          - answers:\n                              - anim magna ut Lorem\n                            name: adipisicing dolor culpa commodo\n                            type: aliquip veniam\n                          - answers:\n                              - \"sunt dolor Excepteur amet \"\n                              - qui pariatur esse id fugiat\n                              - aliquip\n                            name: laborum nisi\n                            type: in Duis qui Excepteur aute\n                        status: ut Ut esse\n                        title: ullamco dolore\n              schema:\n                $ref: '#/components/schemas/CreateBatchPollsResponse'\n          description:  \"**HTTP Status Code:** `201`. Meeting Poll Created\"\n        \"400\":\n          description: |-\n            **HTTP Status Code:** `404` **Not Found** \u003cbr\u003e\n            **Error Code:** `300` \u003cbr\u003e\n            Invalid Meeting ID.\n            **Error Code:** `300` \u003cbr\u003e\n            Meeting id does not exist.\n            **Error Code:** `3000` \u003cbr\u003e\n            Cannot access meeting information.\n            **Error Code:** `3001`\u003cbr\u003e\n            Meeting does not exist: {meetingId}.\u003cbr\u003e\n            **Error Code:** `4400`\u003cbr\u003e\n            Polling has not been enabled for this meeting: {meetingId}.\n            **Error Code:** `4400`\u003cbr\u003e\n            You can add a maximum of 25 polls.\n      summary: Perform batch poll creation\n      tags:\n        - Meetings\n  \"/meetings/{meetingId}/invitation\":\n    get:\n      description: \u003e+\n        Retrieve the meeting invite note that was sent for a specific\n        meeting.\u003cbr\u003e\u003cbr\u003e\n\n        **Scopes:** `meeting:read:admin` `meeting:read`\u003cbr\u003e\n\n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n      operationId: getMeetingInvitation\n      x-ballerina-display:\n        label: Get Meeting Invitation\n      parameters:\n        - description: \u003e-\n            The meeting ID in **long** format. The data type of this field is\n            \"long\"(represented as int64 in JSON).\n\n\n            While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.\n          in: path\n          name: meetingId\n          required: true\n          schema:\n            format: int64\n            type: integer\n          x-ballerina-display:\n            label: Meeting Id\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    invitation: \"Shrijana G is inviting you to a scheduled Zoom meeting.\\r\n\n                      \\r\n\n                      Topic: MyTestMeeting\\r\n\n                      Time: Jul 31, 2019 04:00 PM Pacific\n                      Time (US and Canada)\\r\n\n                      \\r\n\n                      Join Zoom Meeting\\r\n\n                      https://zoom.us/j/000000\\r\n\n                      \\r\n\n                      One tap mobile\\r\n\n                      +000000\"\n              schema:\n                $ref: '#/components/schemas/GetMeetingInvitationResponse'\n          description: |-\n            **HTTP Status Code:** `200`\u003cbr\u003e\n            Meeting invitation returned.\n      security:\n        - OAuth: []\n      summary: Get meeting invitation\n      tags:\n        - Meetings\n  \"/meetings/{meetingId}/livestream\":\n    get:\n      description: \u003e+\n        Zoom allows users to [live stream a\n        meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service)\n        to a custom platform. Use this API to get a meeting's live stream\n        configuration details such as Stream URL, Stream Key and Page\n        URL.\u003cbr\u003e\u003cbr\u003e\n\n        **Prerequisites:**\u003cbr\u003e\n\n        * Meeting host must be a licensed user with a Pro or higher plan.\u003cbr\u003e\n\n        * Live streaming details must have been [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5) for the meeting.\u003cbr\u003e\u003cbr\u003e\n\n        **Scopes:** `meeting:read:admin` `meeting:read`\u003cbr\u003e\n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n\n\n      operationId: getLiveStreamDetails\n      x-ballerina-display:\n        label: Get Live Stream Details\n      parameters:\n        - description: Unique identifier of the meeting.\n          in: path\n          name: meetingId\n          required: true\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Meeting Id\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    page_url: https://somecompany.com/livestream/123\n                    stream_key: Contact It@somecompany.com\n                    stream_url: https://somecompany.com/livestream\n              schema:\n                $ref: '#/components/schemas/GetLiveStreamDetailsResponse'\n          description: |+\n            **HTTP Status Code:** `200` **OK**.  Live Stream details returned.\n\n        \"400\":\n          description: |+\n            **HTTP Status Code:** `400` **Bad Request**\u003cbr\u003e\n            **Error Code:** `300`\u003cbr\u003e\n            Missing meetingId\u003cbr\u003e\n            Invalid meetingId\u003cbr\u003e\u003cbr\u003e\n            **Error Code:** `1010`\u003cbr\u003e\n            User does not belong to this account: {accountId}\n\n\n        \"404\":\n          description: |+\n            **HTTP Status Code:** `404` **Not Found**\u003cbr\u003e\n            **Error Code:** `1001`\u003cbr\u003e\n            User {userId} does not exist.\n\n      summary: Get live stream details\n      tags:\n        - Meetings\n    patch:\n      description: \u003e+\n        Zoom allows users to [live stream a\n        meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service)\n        to a custom platform. Use this API to update a meeting's live stream\n        information.\u003cbr\u003e\u003cbr\u003e\n\n        **Prerequisites:**\u003cbr\u003e\n\n        * Meeting host must have a Pro license.\u003cbr\u003e\n\n        **Scopes:** `meeting:write:admin` `meeting:write`\u003cbr\u003e\n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`\n\n\n      operationId: updateMeetingLiveStream\n      x-ballerina-display:\n        label: Update Meeting Live Stream\n      parameters:\n        - description: \u003e-\n            The meeting ID in **long** format. The data type of this field is\n            \"long\"(represented as int64 in JSON).\n\n\n            While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.\n          in: path\n          name: meetingId\n          required: true\n          schema:\n            format: int64\n            type: integer\n          x-ballerina-display:\n            label: Meeting Id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateMeetingLiveStreamDetailsRequest'\n        description: Meeting\n        required: true\n        x-examples:\n          application/json:\n            page_url: mycompany.com/livestream/123\n            stream_key: Contact it@mycompany.com\n            stream_url: mycompany.com/livestream\n      responses:\n        \"204\":\n          description: |-\n            **HTTP Status Code:** `204`. Meeting live stream updated.\n        \"300\":\n          description: \"**Error Code:** `300` \u003cbr\u003eMissing meetingId \u003cbr\u003e Invalid meetingId.\"\n        \"400\":\n          description: |-\n            **HTTP Status Code:** `400`\u003cbr\u003e**Error Code:** `1010` \u003cbr\u003e\n             User does not belong to this account: {accountId}.\u003cbr\u003e\n             **Error Code:** `3000` Cannot access webinar info.\n        \"404\":\n          description: \u003e\n            **HTTP Status Code:** `404`\u003cbr\u003e**Error Code:** `1001` \u003cbr\u003eUser\n            {userId} does not exist.\n      security:\n        - OAuth: []\n      summary: Update a live stream\n      tags:\n        - Meetings\n  \"/webinars/{webinarId}/registrants\":\n    get:\n      description: \u003e+\n        Zoom users with a [Webinar Plan](https://zoom.us/webinar) have\n        access to creating and managing Webinars. Webinar allows a host to\n        broadcast a Zoom meeting to up to 10,000 attendees. Scheduling a\n        [Webinar with\n        registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration)\n        requires your registrants to complete a brief form before receiving the\n        link to join the Webinar. \n\n        Use this API to list all the users that have registered for a webinar.  \n\n        **Prerequisites:**\n\n        * Pro or higher plan with a Webinar Add-on. \n\n        **Scopes:** `webinar:read:admin` `webinar:read`  \n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` \n\n      operationId: listWebinarRegistrants\n      x-ballerina-display:\n        label: List Webinar Meeting Registrants\n      parameters:\n        - description: 'The webinar ID in \"**long**\" format(represented as int64 data type\n            in JSON). '\n          in: path\n          name: webinarId\n          required: true\n          schema:\n            format: int64\n            type: integer\n          x-ballerina-display:\n            label: Webinar Id\n        - description: The meeting occurrence ID.\n          in: query\n          name: occurrence_id\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Meeting Occurence Id\n        - description: \"The registrant status: `pending` - Registrant's status is pending. `approved` - Registrant's status is approved.`denied` - Registrant's status is denied.\"\n          in: query\n          name: status\n          schema:\n            default: approved\n            enum:\n              - pending\n              - approved\n              - denied\n            type: string\n          x-ballerina-display:\n            label: Status\n          x-enum-descriptions:\n            - registrants status is pending\n            - registrants status is approved\n            - registrants status is denied\n        - description: The tracking source ID for the registrants. Useful if you share the\n            webinar registration page in multiple locations. See [Creating\n            source tracking links for webinar\n            registration](https://support.zoom.us/hc/en-us/articles/360000315683-Creating-source-tracking-links-for-webinar-registration)\n            for details.\n          in: query\n          name: tracking_source_id\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Tracking Source Id\n        - description: The number of records returned within a single API call.\n          in: query\n          name: page_size\n          schema:\n            default: 30\n            maximum: 300\n            type: integer\n          x-ballerina-display:\n            label: Page Size\n        - description: The page number of the current page in the returned records.\n          in: query\n          name: page_number\n          schema:\n            default: 1\n            type: integer\n          x-ballerina-display:\n            label: Page Number\n        - description: The next page token is used to paginate through large result sets.\n            A next page token will be returned whenever the set of available\n            results exceeds the current page size. The expiration period for\n            this token is 15 minutes.\n          in: query\n          name: next_page_token\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Next Page Token\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    page_count: \"1\"\n                    page_number: \"1\"\n                    page_size: \"30\"\n                    registrants:\n                      - address: dsfhkdjsfh st\n                        city: jackson heights\n                        comments: Looking forward to the Webinar\n                        country: US\n                        create_time: 2019-02-26T23:01:16.899Z\n                        custom_questions:\n                          - title: What do you hope to learn from this Webinar?\n                            value: Look forward to learning how you come up with new recipes and what other\n                              services you offer.\n                        email: sjfkghdsg@someemail.dfgjd\n                        first_name: Jill\n                        id: \"24000002122\"\n                        industry: Food\n                        job_title: Chef\n                        join_url: https://zoom.us/webinar/mywebinarissocooldighdghodghodg\n                        last_name: Chill\n                        no_of_employees: \"10\"\n                        org: Cooking Org\n                        phone: \"00000000\"\n                        purchasing_time_frame: 1-3 months\n                        role_in_purchase_process: Influencer\n                        state: NY\n                        status: approved\n                        zip: \"11371\"\n                    total_records: \"1\"\n              schema:\n                $ref: '#/components/schemas/ListWebinarRegistrantsResponse'\n          description: \"HTTP Status Code: `200` Webinar plan subscription is missing. Enable webinar for this user once the subscription is added.\"\n        \"300\":\n          description: \"**HTTP Status Code:** `300` Invalid webinar ID.\"\n        \"400\":\n          description: |-\n            **HTTP Status Code:** `400` \n            Bad request \n            **Error Code:** `1010` \n            User does not belong to this account:{accountId}. \n        \"404\":\n          description: |-\n            **HTTP Status Code:** `404` \n            Webinar not found. \n            **Error Code:** `1001` \n            User {userId} does not exist or does not belong to this account. \n            **Error Code:** `3001` \n            Webinar {webinarId} not found or has expired. \n      security:\n        - OAuth: []\n      summary: List webinar registrants\n      tags:\n        - Webinars\n    parameters:\n      - in: path\n        name: webinarId\n        required: true\n        schema:\n          type: string\n        x-ballerina-display:\n          label: Webinar Id\n  \"/past_webinars/{webinarId}/participants\":\n    get:\n      description: \u003e+\n        Use this API to list all the participants who attended a webinar\n        hosted in the past.  \n\n\n        **Prerequisites:**\n\n        * Pro or higher plan with a Webinar Add-on. \n\n        **Scopes:** `webinar:read:admin` `webinar:read`  \n\n         \n\n        **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium` \n\n\n\n      operationId: listWebinarParticipants\n      x-ballerina-display:\n        label: List Webinar Participants\n      parameters:\n        - description: Unique identifier of the webinar. You can retrieve the value of\n            this field by calling the [list\n            webinars](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinars)\n            API.\n          in: path\n          name: webinarId\n          required: true\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Webinar Id\n        - description: The number of records returned within a single API call.\n          in: query\n          name: page_size\n          schema:\n            default: 30\n            maximum: 300\n            type: integer\n          x-ballerina-display:\n            label: Page Size\n        - description: The next page token is used to paginate through large result sets.\n            A next page token will be returned whenever the set of available\n            results exceeds the current page size. The expiration period for\n            this token is 15 minutes.\n          in: query\n          name: next_page_token\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Next Page Token\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    next_page_token: mdnf23qbsf4wr\n                    page_count: 1\n                    page_size: 1\n                    participants:\n                      - id: sdjhf3ui\n                        name: Matt\n                        user_email: matt@123.jhdyuerys\n                    total_records: 1\n              schema:\n                $ref: '#/components/schemas/ListWebinarParticipantsResponse'\n          description: \"Webinar participants' details\"\n        \"400\":\n          description: |\n            **HTTP Status Code:** `400` **Bad request** \n\n            **Error Code:** `200` \n            No permission. \n            Only available for paid account: {accountId}.  \n            **Error Code:**  `300` \n            The next page token is invalid or expired.\n        \"404\":\n          description: |-\n            **HTTP Status Code:** `404`\n            **Error Code:**`3001` \n            Webinar does not exist.\n      summary: List webinar participants\n      tags:\n        - Webinars\n    parameters:\n      - in: path\n        name: webinarId\n        required: true\n        schema:\n          type: string\n        x-ballerina-display:\n          label: Webinar Id\n  \"/past_webinars/{WebinarUUID}/absentees\":\n    get:\n      description: \u003e-\n        List absentees of a webinar.  \n\n        **Scopes:** `webinar:read:admin` `webinar:read` \n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`\n      operationId: listWebinarAbsentees\n      x-ballerina-display:\n        label: List Webinar Absentees\n      parameters:\n        - description: The meeting occurrence ID.\n          in: query\n          name: occurrence_id\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Occurence Id\n        - description: The number of records returned within a single API call.\n          in: query\n          name: page_size\n          schema:\n            default: 30\n            maximum: 300\n            type: integer\n          x-ballerina-display:\n            label: Page Size\n        - description: The next page token is used to paginate through large result sets.\n            A next page token will be returned whenever the set of available\n            results exceeds the current page size. The expiration period for\n            this token is 15 minutes.\n          in: query\n          name: next_page_token\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Next Page Token\n        - description: The Webinar UUID. Each Webinar instance will generate its own\n            Webinar UUID (i.e., after a Webinar ends, a new UUID will be\n            generated for the next instance of the Webinar). Please double\n            encode your UUID when using it for API calls if the UUID begins with\n            a '/' or contains '//' in it.\n          in: path\n          name: WebinarUUID\n          required: true\n          schema:\n            type: string\n          x-ballerina-display:\n            label: Webinar UUID\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    page_count: 1\n                    page_number: 1\n                    page_size: 30\n                    registrants:\n                      - address: dsfhkdjsfh st\n                        city: jackson heights\n                        comments: Looking forward to the Webinar\n                        country: USA\n                        create_time: 2019-02-26T23:01:16.899Z\n                        custom_questions:\n                          - title: What do you hope to learn from this Webinar?\n                            value: Look forward to learning how you come up with new recipes and what other\n                              services you offer.\n                        email: sjfkghdsg@someemail.dfgjd\n                        first_name: Jill\n                        id: \"24000002122\"\n                        industry: Food\n                        job_title: Chef\n                        join_url: https://zoom.us/webinar/mywebinarissocooldighdghodghodg\n                        last_name: Chill\n                        no_of_employees: \"10\"\n                        org: Cooking Org\n                        phone: \"00000000\"\n                        purchasing_time_frame: 1-3 months\n                        role_in_purchase_process: Influencer\n                        state: NY\n                        status: approved\n                        zip: \"11371\"\n                    total_records: 1\n              schema:\n                $ref: '#/components/schemas/ListWebinarAbsentees'\n          description: \u003e-\n            **HTTP Status Code:** `200` \n\n            Success. **Error Code:** `200` \n\n            Webinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.\n        \"300\":\n          description: \"**Error Code:** `300` Invalid webinar UUID.\"\n        \"400\":\n          description: \u003e-\n            **HTTP Status Code:** `400` \n\n            **Error Code:** `300` \n\n            The request could not be completed because you have provided an invalid occurence ID: {occurenceId} \n\n            **Error Code:** `1010` \n\n            User does not belong to this account:{accountId}. \n\n            **Error Code:** `3000` \n\n            This Webinar has not registration required: {webinarUUID}\n        \"404\":\n          description: |+\n            **HTTP Status Code:** `404` \n            **Error Code:** `1001` \n            User {userId} does not exist or does not belong to this account. \n            **Error Code:** `3001` Meeting ID is invalid or not end.\n\n      security:\n        - OAuth: []\n      summary: List webinar absentees\n      tags:\n        - Webinars\n  \"/users/{userId}/meeting_templates\":\n    get:\n      description: \u003e\n        Use this API to list [meeting\n        templates](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates)\n        that are available to be used by a user.\n\n\n        **Scope:** `meeting:read` or `meeting:read:admin`\n\n         **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`\n      operationId: listMeetingTemplates\n      x-ballerina-display:\n        label: List Meeting Templates\n      parameters:\n        - description: Unique identifier of the user. Retrieve the value of this field by\n            calling the [List\n            users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users)\n            API.\n          in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n          x-ballerina-display:\n            label: User Id\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    templates:\n                      - id: AdxbhxCzKgSiWAw\n                        name: My meeting template\n                        type: 1\n                      - id: eYshgdftw4-5_MUSQ\n                        name: Zoom meeting template for daily sync\n                        type: 2\n                    total_records: 2\n              schema:\n                $ref: '#/components/schemas/ListMeetingTemplatesResponse'\n          description: \"**HTTP Status Code:** `200` **OK**\"\n        \"404\":\n          description: |-\n            **HTTP Status Code:** `404` **Not Found** \u003cbr\u003e\n            **Error Code:** `1001`\u003cbr\u003e User not exist: {userId}.\u003cbr\u003e\n            User {userId} does not exist or does not belong to this account.\n      summary: List meeting templates\n      tags:\n        - Meetings\n    parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\ncomponents:\n  schemas:\n    ListWebinarAbsentees:\n      allOf:\n        - $ref: '#/components/schemas/PaginationObject'\n        - $ref: '#/components/schemas/RegistrantsList'\n      description: List of users.\n      title: Registration List\n      type: object\n    ListWebinarRegistrantsResponse:\n      allOf:\n        - $ref: '#/components/schemas/PaginationObject'\n        - $ref: '#/components/schemas/RegistrantsList'\n      description: List of users.\n      title: Registration List\n      type: object\n    ListPastMeetingParticipantsResponse:\n      allOf:\n        - $ref: '#/components/schemas/PaginationObject'\n        - $ref: '#/components/schemas/MeetingPartcipantsList'\n      description: List of participants\n    GetMeetingDetailsResponse:\n      allOf:\n        - $ref: '#/components/schemas/MeetingFullMetadata'\n        - $ref: '#/components/schemas/RequestedMeetingDetails'\n      description: Details of the meeting.\n    ListMeetingRegistrantsResponse:\n      allOf:\n        - $ref: '#/components/schemas/PaginationObject'\n        - $ref: '#/components/schemas/RegistrantsList'\n      description: List of users.\n      title: Registration List\n    CreateMeetingResponse:\n      allOf:\n        - $ref: '#/components/schemas/MeetingMetadata'\n        - $ref: '#/components/schemas/RequestedMeetingDetails'\n      description: Details of the created meeting.\n    ListMeetingsResponse:\n      allOf:\n        - $ref: '#/components/schemas/PaginationObject'\n        - $ref: '#/components/schemas/MeetingList'\n      description: List of meetings\n      title: Group List\n    ListMeetingTemplatesResponse:\n      properties:\n        templates:\n          items:\n            $ref: '#/components/schemas/TemplateDetails'\n          type: array\n        total_records:\n          description: Total records found for this request.\n          type: integer\n      type: object\n    ListWebinarParticipantsResponse:\n      properties:\n        next_page_token:\n          description: The next page token is used to paginate through large result sets.\n            A next page token will be returned whenever the set of\n            available results exceeds the current page size. The\n            expiration period for this token is 15 minutes.\n          type: string\n        page_count:\n          description: The number of pages returned for this request.\n          type: integer\n        page_size:\n          default: 30\n          description: The total number of records returned from a single API call.\n          maximum: 300\n          type: integer\n        participants:\n          description: ParticipantsDetails\n          items:\n            $ref: '#/components/schemas/PartcipantDetails'\n          type: array\n        total_records:\n          description: The total number of records available across all pages.\n          type: integer\n      type: object\n    UpdateMeetingLiveStreamDetailsRequest:\n      description: Meeting live stream.\n      properties:\n        page_url:\n          description: The livestream page URL.\n          format: uri\n          maxLength: 1024\n          type: string\n        stream_key:\n          description: Stream name and key.\n          maxLength: 512\n          type: string\n        stream_url:\n          description: Streaming URL.\n          maxLength: 1024\n          type: string\n      required:\n        - stream_url\n        - stream_key\n      type: object\n    GetLiveStreamDetailsResponse:\n      properties:\n        page_url:\n          description: Live streaming page URL. This is the URL using which anyone can\n            view the live stream of the meeting.\n          type: string\n        stream_key:\n          description: Stream Key.\n          type: string\n        stream_url:\n          description: Stream URL.\n          type: string\n      type: object\n    GetMeetingInvitationResponse:\n      description: Meeting invitation details.\n      properties:\n        invitation:\n          description: Meeting invitation.\n          type: string\n      title: Meeting Invitation\n      type: object\n    CreateBatchPollsResponse:\n      properties:\n        polls:\n          items:\n            $ref: '#/components/schemas/AddPollQuestionsResponse'\n          type: array\n      type: object\n    CreateBatchPollsRequest:\n      properties:\n        questions:\n          description: Poll questions\n          items:\n            $ref: '#/components/schemas/PollQuestions'\n          type: array\n        title:\n          description: Meeting Poll Title.\n          type: string\n      type: object\n    UpdateMeetingPollRequest:\n      description: Poll\n      properties:\n        questions:\n          description: Array of Polls\n          items:\n            $ref: '#/components/schemas/PollQuestions'\n          type: array\n        title:\n          description: Title for the poll.\n          type: string\n      title: Poll\n      type: object\n    GetMeetingPollResponse:\n      properties:\n        id:\n          description: Meeting Poll ID\n          type: string\n        status:\n          description: Status of the Meeting Poll:\u003cbr\u003e`notstart` - Poll not\n            started\u003cbr\u003e`started` - Poll started\u003cbr\u003e`ended` - Poll\n            ended\u003cbr\u003e`sharing` - Sharing poll results\n          enum:\n            - notstart\n            - started\n            - ended\n            - sharing\n          type: string\n          x-enum-descriptions:\n            - Poll not start\n            - Poll started\n            - Poll ended\n            - Poll is sharing\n        questions:\n          description: Array of Polls\n          items:\n            $ref: '#/components/schemas/PollQuestions'\n          type: array\n        title:\n          description: Title for the poll.\n          type: string\n      title: Poll\n      type: object\n    CreateMeetingPollResponse:\n      properties:\n        id:\n          description: Meeting Poll ID\n          type: string\n        status:\n          description: Status of the Meeting Poll:\u003cbr\u003e`notstart` - Poll not\n            started\u003cbr\u003e`started` - Poll started\u003cbr\u003e`ended` - Poll\n            ended\u003cbr\u003e`sharing` - Sharing poll results\n          enum:\n            - notstart\n            - started\n            - ended\n            - sharing\n          type: string\n          x-enum-descriptions:\n            - Poll not start\n            - Poll started\n            - Poll ended\n            - Poll is sharing\n        questions:\n          description: Array of Polls\n          items:\n            $ref: '#/components/schemas/PollQuestions'\n          type: array\n        title:\n          description: Title for the poll.\n          type: string\n      title: Poll\n      type: object\n    CreateMeetingPollRequest:\n      description: Poll\n      properties:\n        questions:\n          description: Array of Polls\n          items:\n            $ref: '#/components/schemas/PollQuestions'\n          type: array\n        title:\n          description: Title for the poll.\n          type: string\n      title: Poll\n      type: object\n    MeetingPollsResponse:\n      properties:\n        polls:\n          description: Array of Polls\n          items:\n            $ref: '#/components/schemas/PollDetails'\n          type: array\n        total_records:\n          description: The number of all records available across pages\n          type: integer\n      description: Poll List\n      title: Poll List\n      type: object\n    PastMeetingDetailsResponse:\n      properties:\n        duration:\n          description: Meeting duration.\n          type: integer\n        end_time:\n          description: Meeting end time (GMT).\n          format: date-time\n          type: string\n        host_id:\n          description: Host ID.\n          type: string\n        id:\n          description: '[Meeting\n            ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):\n            Unique identifier of the meeting in \"**long**\"\n            format(represented as int64 data type in JSON), also known\n            as the meeting number.'\n          format: int64\n          type: integer\n        participants_count:\n          description: Number of meeting participants.\n          type: integer\n        start_time:\n          description: Meeting start time (GMT).\n          format: date-time\n          type: string\n        topic:\n          description: Meeting topic.\n          type: string\n        total_minutes:\n          description: Sum of meeting minutes from all participants in the meeting.\n          type: integer\n        type:\n          description: Meeting type.\n          type: integer\n        user_email:\n          description: User email.\n          type: string\n        user_name:\n          description: User display name.\n          type: string\n        uuid:\n          description: Meeting UUID.\n          format: uuid\n          type: string\n      type: object\n    ListPastMeetingPollsResponse:\n      properties:\n        id:\n          description: '[Meeting\n            ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):\n            Unique identifier of the meeting in \"**long**\"\n            format(represented as int64 data type in JSON), also known\n            as the meeting number.'\n          format: int64\n          type: integer\n        questions:\n          items:\n            $ref: '#/components/schemas/UserSubmittedAnswers'\n          type: array\n        start_time:\n          description: The start time of the meeting.\n          format: date-time\n          type: string\n        uuid:\n          description: Meeting UUID.\n          type: string\n      type: object\n    ListPastMeetingsResponse:\n      properties:\n        meetings:\n          description: List of ended meeting instances.\n          items:\n            $ref: '#/components/schemas/EndedMeetingDetails'\n          type: array\n      description: List of Meetings\n      title: Meeting instances\n      type: object\n    UpdateMeetingstatusRequest:\n      properties:\n        action:\n          description: \u003e\n            `end` - End a meeting.\u003cbr\u003e\n\n            `recover` - [Recover](https://support.zoom.us/hc/en-us/articles/360038297111-Recover-a-deleted-meeting) a deleted meeting.\n          enum:\n            - end\n            - recover\n          type: string\n      type: object\n    UpdateMeetingRequest:\n      properties:\n        schedule_for:\n          description: Email or userId if you want to schedule meeting for another user.\n          type: string\n        agenda:\n          description: Meeting description.\n          maxLength: 2000\n          type: string\n        duration:\n          description: Meeting duration (minutes). Used for scheduled meetings only.\n          type: integer\n        password:\n          description: \u003e-\n            Meeting passcode. Passcode may only contain the following\n            characters: [a-z A-Z 0-9 @ - _ *] and can have a\n            maximum of 10 characters.\n\n\n            **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. \u003cbr\u003e\u003cbr\u003eIf the requirements are enabled, you can view those requirements by calling either the [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings) or the  [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API. \n          maxLength: 10\n          type: string\n        recurrence:\n          $ref: '#/components/schemas/ReccurenceDetails'\n        settings:\n          $ref: '#/components/schemas/MeetingSettings'\n        start_time:\n          description: Meeting start time. When using a format like\n            \"yyyy-MM-dd'T'HH:mm:ss'Z'\", always use GMT time.\n            When using a format like \"yyyy-MM-dd'T'HH:mm:ss\",\n            you should use local time and  specify the time\n            zone. Only used for scheduled meetings and recurring\n            meetings with a fixed time.\n          format: date-time\n          type: string\n        template_id:\n          description: \u003e-\n            Unique identifier of the meeting template. \n\n\n            Use this field if you would like to [schedule the meeting from a meeting template](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates#h_86f06cff-0852-4998-81c5-c83663c176fb). You can retrieve the value of this field by calling the [List meeting templates]() API.\n          type: string\n        timezone:\n          description: Time zone to format start_time. For example, \"America/Los_Angeles\".\n            For scheduled meetings only. Please reference our\n            [time zone](#timezones) list for supported time\n            zones and their formats.\n          type: string\n        topic:\n          description: Meeting topic.\n          type: string\n        tracking_fields:\n          description: Tracking fields\n          items:\n            $ref: '#/components/schemas/TrackingFields'\n          type: array\n        type:\n          default: 2\n          description: Meeting Types:\u003cbr\u003e`1` - Instant meeting.\u003cbr\u003e`2` - Scheduled\n            meeting.\u003cbr\u003e`3` - Recurring meeting with no fixed\n            time.\u003cbr\u003e`8` - Recurring meeting with a fixed time.\n          enum:\n            - 1\n            - 2\n            - 3\n            - 8\n          type: integer\n          x-enum-descriptions:\n            - Instant Meeting\n            - Scheduled Meeting\n            - Recurring Meeting with no fixed time\n            - Recurring Meeting with fixed time\n      type: object\n    UpdateMeetingRegistrantstatusRequest:\n      properties:\n        action:\n          description: Registrant Status:\u003cbr\u003e`approve` - Approve registrant.\u003cbr\u003e`cancel` -\n            Cancel previously approved registrant's\n            registration.\u003cbr\u003e`deny` - Deny registrant.\n          enum:\n            - approve\n            - cancel\n            - deny\n          type: string\n          x-enum-descriptions:\n            - Approve registrant\n            - Cancel previously approved registrant\n            - Deny registrant\n        registrants:\n          description: List of registrants.\n          items:\n            $ref: \"#/components/schemas/RegistriantDetails\"\n          maximum: 30\n          type: array\n      required:\n        - action\n      type: object\n      description: Meeting registrant status update details\n    AddMeetingRegistrantResponse:\n      properties:\n        id:\n          description: '[Meeting\n            ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):\n            Unique identifier of the meeting in \"**long**\"\n            format(represented as int64 data type in JSON), also known\n            as the meeting number.'\n          format: int64\n          type: integer\n        join_url:\n          description: \u003e-\n            Unique URL for this registrant to join the meeting. This URL should\n            only be shared with the registrant for whom the API\n            request was made.\n\n            If the meeting was [created](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingcreate) with manual approval type (`approval_type`: 1), the join URL will not be returned in the response.\n          type: string\n        registrant_id:\n          description: Unique identifier of the registrant.\n          type: string\n        start_time:\n          description: The start time for the meeting.\n          type: string\n        topic:\n          description: Topic of the meeting.\n          type: string\n      type: object\n    AddMeetingRegistrantRequest:\n      description: Registrant base object\n      x-ballerina-display:\n        label: Registrant Details\n      properties:\n        language:\n          description: \"Registrant's language preference for confirmation  emails. The value can be one of the following: `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`, `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.\"\n          type: string\n          x-ballerina-display:\n            label: Language\n        auto_approve:\n          description: Enable auto approve\n          type: boolean\n          x-ballerina-display:\n            label:  Enable Auto Approve\n        address:\n          description: Registrant's address.\n          type: string\n          x-ballerina-display:\n            label: Registrant's Address\n        city:\n          description: Registrant's city.\n          type: string\n          x-ballerina-display:\n            label: Registrant's City\n        comments:\n          description: A field that allows registrants to provide any questions or\n            comments that they might have.\n          type: string\n          x-ballerina-display:\n            label: Comments\n        country:\n          description: Registrant's country. The value of this field must be in two-letter\n            abbreviated form and must match the ID field provided in\n            the\n            [Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries)\n            table.\n          type: string\n          x-ballerina-display:\n            label: Registrant's Country\n        custom_questions:\n          description: Custom questions.\n          x-ballerina-display:\n            label: Custom Questions\n          items:\n            $ref: '#/components/schemas/RegistrantCustomQuestion'\n          type: array\n        email:\n          description: A valid email address of the registrant.\n          maxLength: 128\n          type: string\n          x-ballerina-display:\n            label: Email\n        first_name:\n          description: Registrant's first name.\n          maxLength: 64\n          type: string\n          x-ballerina-display:\n            label: First Name\n        industry:\n          description: Registrant's Industry.\n          type: string\n          x-ballerina-display:\n            label: Industry\n        job_title:\n          description: Registrant's job title.\n          type: string\n          x-ballerina-display:\n            label: Job Title\n        last_name:\n          description: Registrant's last name.\n          maxLength: 64\n          type: string\n          x-ballerina-display:\n            label: Last Name\n        no_of_employees:\n          description: \"Number of Employees: `1-20`, `21-50`, `51-100`, `101-500`, `500-1,000`, `1,001-5,000`, `5,001-10,000`, `More than 10,000`\"\n          type: string\n          x-ballerina-display:\n            label: No of Employees\n        org:\n          description: Registrant's Organization.\n          type: string\n          x-ballerina-display:\n            label: Registrant's Organization.\n        phone:\n          description: Registrant's Phone number.\n          type: string\n          x-ballerina-display:\n            label: Registrant's Phone Number\n        purchasing_time_frame:\n          description: \u003e-\n            This field can be included to gauge interest of webinar attendees\n            towards buying your product or service.\n\n\n            Purchasing Time Frame:`Within a month``1-3 months``4-6 months``More than 6 months``No timeframe`\n          type: string\n          x-ballerina-display:\n            label: Purchasing Time Frame\n        role_in_purchase_process:\n          description: \"Role in Purchase Process: `Decision Maker`, `Evaluator/Recommender`, `Influencer`, `Not involved` \"\n          type: string\n          x-ballerina-display:\n            label: Role in Purchase Process\n        state:\n          description: Registrant's State/Province.\n          type: string\n          x-ballerina-display:\n            label: Registrant's State/Province\n        zip:\n          description: Registrant's Zip/Postal Code.\n          type: string\n          x-ballerina-display:\n            label: Registrant's Zip/Postal Code\n      required:\n        - email\n        - first_name\n      type: object\n    TemplateDetails:\n      description: Template details\n      properties:\n        id:\n          description: Unique identifier of the template.\n          type: string\n        name:\n          description: Name of the template.\n          type: string\n        type:\n          description: \u003e-\n            Type of the template. The value of this field can be one of the\n            following:\u003cbr\u003e\n\n            `1`: meeting template \u003cbr\u003e\n\n            `2`: admin meeting template\n          type: integer\n      type: object\n    PollDetails:\n      allOf:\n        - properties:\n            id:\n              description: ID of Poll\n              type: string\n            status:\n              description: Status of Poll:\u003cbr\u003e`notstart` - Poll not started\u003cbr\u003e`started` -\n                Poll started\u003cbr\u003e`ended` - Poll\n                ended\u003cbr\u003e`sharing` - Sharing poll results\n              enum:\n                - notstart\n                - started\n                - ended\n                - sharing\n              type: string\n              x-enum-descriptions:\n                - Poll not start\n                - Poll started\n                - Poll ended\n                - Poll is sharing\n        - description: Poll\n          properties:\n            questions:\n              description: Array of Polls\n              items:\n                $ref: '#/components/schemas/PollQuestions'\n              type: array\n            title:\n              description: Title for the poll.\n              type: string\n          title: Poll\n          type: object\n    UserSubmittedAnswers:\n      description: Answers submitted by users\n      properties:\n        email:\n          description: Email address of the user who submitted answers to the poll.\n          type: string\n        name:\n          description: Name of the user who submitted answers to the poll. If \"anonymous\"\n            option is enabled for a poll, the participant's\n            polling information will be kept anonymous and the\n            value of `name` field will be \"Anonymous Attendee\".\n          type: string\n        question_details:\n          description: Poll question answers\n          items:\n            $ref: '#/components/schemas/PollQuestionAnswer'\n          type: array\n      type: object\n    PollQuestionAnswer:\n      description: Answers submitted for poll questions\n      properties:\n        answer:\n          description: Answer submitted by the user.\n          type: string\n        date_time:\n          description: Date and time at which the answer to the poll was submitted.\n          format: date-time\n          type: string\n        polling_id:\n          description: Unique identifier of the poll.\n          type: string\n        question:\n          description: Question asked during the poll.\n          type: string\n      type: object\n    EndedMeetingDetails:\n      properties:\n        start_time:\n          description: Start time\n          format: date-time\n          type: string\n        uuid:\n          description: \u003e+\n            Meeting UUID. Unique meeting ID. Each meeting instance will\n            generate its own Meeting UUID (i.e., after a\n            meeting ends, a new UUID will be generated\n            for the next instance of the meeting).\n            Please double encode your UUID when using it\n            for API calls if the UUID begins with a\n            '/'or contains '//' in it.\n\n          type: string\n      description: Ended meeting details\n    RegistriantDetails:\n      properties:\n        email:\n          type: string\n          description: Registrant email\n        id:\n          type: string\n          description: Registrant Id\n      type: object\n      description: Registrant's details\n    CustomQuestions:\n      properties:\n        answers:\n          description: Answer choices for the question. Can not be used for `short`\n            question type as this type of question requires\n            registrants to type out the answer.\n          items:\n            type: string\n          type: array\n        required:\n          description: Indicates whether or not the custom question is required to be\n            answered by participants or not.\n          type: boolean\n        title:\n          description: Title of the custom question.\n          type: string\n        type:\n          description: Type of the question being asked.\n          enum:\n            - short\n            - single\n          type: string\n          x-enum-descriptions:\n            - Short Answer\n            - Single Answer\n      type: object\n    CustomRegistrantQuestions:\n      properties:\n        field_name:\n          description: Field name of the question.\n          enum:\n            - address\n            - city\n            - country\n            - zip\n            - state\n            - phone\n            - industry\n            - org\n            - job_title\n            - purchasing_time_frame\n            - role_in_purchase_process\n            - no_of_employees\n            - comments\n          type: string\n          x-enum-descriptions:\n            - Address\n            - City\n            - Country/Region\n            - Zip/Postal Code\n            - State/Province\n            - Phone\n            - Industry\n            - Organization\n            - Job Title\n            - Purchasing Time Frame\n            - Role in Purchase Process\n            - Number of Employees\n            - Questions \u0026 Comments\n        required:\n          description: Indicates whether or not the displayed fields are required to be\n            filled out by registrants.\n          type: boolean\n      type: object\n    RegistrantQuestions:\n      description: Meeting Registrant Questions\n      properties:\n        custom_questions:\n          description: Array of Registrant Custom Questions\n          items:\n            $ref: '#/components/schemas/CustomQuestions'\n          type: array\n        questions:\n          description: Array of Registrant Questions\n          items:\n           $ref: '#/components/schemas/CustomRegistrantQuestions'\n          type: array\n      title: Meeting Registrant Questions\n      type: object\n    AddPollQuestionsResponse:\n      description: Response received from adding poll quetions\n      properties:\n        id:\n          description: Meeting Poll ID\n          type: string\n        questions:\n          description: Poll questions\n          items:\n            $ref: '#/components/schemas/PollQuestions'\n          type: array\n        status:\n          description: Status of the Meeting Poll:\u003cbr\u003e`notstart` - Poll not\n            started\u003cbr\u003e`started` - Poll started\u003cbr\u003e`ended` -\n            Poll ended\u003cbr\u003e`sharing` - Sharing poll results\n          enum:\n            - notstart\n            - started\n            - ended\n            - sharing\n          type: string\n          x-enum-descriptions:\n            - Poll not start\n            - Poll started\n            - Poll ended\n            - Poll is sharing\n        title:\n          description: Title for the Poll\n          type: string\n      type: object\n    PollQuestions:\n      description: Poll questions\n      properties:\n        answers:\n          description: Possible answers for the question.\n          items:\n            type: string\n          type: array\n        name:\n          description: Name of the question.\n          type: string\n        type:\n          description: Question type:\u003cbr\u003e`single` - Single choice\u003cbr\u003e`mutliple` - Multiple\n            choice\n          enum:\n            - single\n            - multiple\n          type: string\n      type: object\n    TrackingFields:\n      properties:\n        field:\n          description: Tracking fields type\n          type: string\n        value:\n          description: Tracking fields value\n          type: string\n      type: object\n    MeetingTrackingDetails:\n      properties:\n        field:\n          description: Label of the tracking field.\n          type: string\n          x-ballerina-display:\n            label: Label\n        value:\n          description: Tracking fields value\n          type: string\n          x-ballerina-display:\n            label: Value\n      required:\n        - field\n      type: object\n    MeetingDetails:\n      description: Base object for meeting\n      x-ballerina-display:\n        label: Meeting Details\n      properties:\n        agenda:\n          description: Meeting description.\n          maxLength: 2000\n          type: string\n          x-ballerina-display:\n            label: Description\n        duration:\n          description: \"Meeting duration (minutes). Used for scheduled meetings only.\"\n          type: integer\n          x-ballerina-display:\n            label: Duration\n        password:\n          description: \"Passcode to join the meeting.\"\n          maxLength: 10\n          type: string\n          x-ballerina-display:\n            label: Password\n        recurrence:\n          $ref: '#/components/schemas/ReccurenceDetails'\n        schedule_for:\n          description: \"If you would like to schedule this meeting for someone else in your account, provide the Zoom user id or email address of the user here.\"\n          type: string\n          x-ballerina-display:\n            label: Scheduled For\n        settings:\n          $ref: '#/components/schemas/MeetingSettingsInRequest'\n        start_time:\n          description: \"Meeting start time. We support two formats for `start_time` - local time and GMT.To set time as GMT the format should be `yyyy-MM-dd`T`HH:mm:ssZ`. To set time using a specific timezone, use `yyyy-MM-dd`T`HH:mm:ss` format and specify the timezone id in the `timezone` field OR leave it blank and the timezone set on your Zoom account will be used. You can also set the time as UTC as the timezone field\"\n          type: string\n          format: date-time\n          x-ballerina-display:\n            label: Meeting Start Time\n        template_id:\n          description: \"Unique identifier of the admin meeting template. To create  admin meeting templates, contact the Zoom support team.\"\n          type: string\n          x-ballerina-display:\n            label: Template Id\n        timezone:\n          description: Time zone to format start_time. For example, \"America/Los_Angeles\".\n            For scheduled meetings only. Please reference our [time\n            zone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)\n            list for supported time zones and their formats.\n          type: string\n          x-ballerina-display:\n            label: Timezone\n        topic:\n          description: Meeting topic.\n          type: string\n          x-ballerina-display:\n            label: Meeting Topic\n        tracking_fields:\n          description: Tracking fields\n          x-ballerina-display:\n            label: Tracking Fields\n          items:\n            $ref: '#/components/schemas/MeetingTrackingDetails'\n          type: array\n        type:\n          default: 2\n          description: \"Meeting Type: 1 - Instant meeting. 2 - Scheduled meeting. 3 - Recurring meeting with no fixed time. 8 - Recurring meeting with fixed time.\"\n          enum:\n            - 1\n            - 2\n            - 3\n            - 8\n          type: integer\n          x-ballerina-display:\n            label: Meeting Type\n          x-enum-descriptions:\n            - Instant Meeting\n            - Scheduled Meeting\n            - Recurring Meeting with no fixed time\n            - Recurring Meeting with fixed time\n      type: object\n    MeetingFullMetadata:\n      properties:\n        assistant_id:\n          description: Unique identifier of the scheduler who scheduled this meeting on\n            behalf of the host. This field is only returned if you\n            used \"schedule_for\" option in the [Create a Meeting\n            API\n            request](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingcreate).\n          type: string\n        host_email:\n          description: Email address of the meeting host.\n          format: email\n          type: string\n        host_id:\n          description: ID of the user who is set as host of meeting.\n          type: string\n        id:\n          description: '[Meeting\n            ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):\n            Unique identifier of the meeting in \"**long**\"\n            format(represented as int64 data type in JSON), also\n            known as the meeting number.'\n          format: int64\n          type: integer\n        uuid:\n          description: \u003e\n            Unique meeting ID. Each meeting instance will generate its own\n            Meeting UUID (i.e., after a meeting ends, a new UUID\n            will be generated for the next instance of the\n            meeting). You can retrieve a list of UUIDs from past\n            meeting instances using [this\n            API](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/pastmeetings)\n            . Please double encode your UUID when using it for API\n            calls if the UUID begins with a '/'or contains '//' in\n            it.\n          type: string\n      type: object\n      description: Detailed Meeting Metadata\n    ApprovalAndDenialInfo:\n      description: \"Approve or block users from specific regions/countries from joining this meeting.\"\n      x-ballerina-display:\n        label: Approval or Denial Info\n      properties:\n        approved_list:\n          description: \"List of countries/regions from where participants can join this meeting. \"\n          items:\n            type: string\n          type: array\n          x-ballerina-display:\n            label: Approved Regions List\n        denied_list:\n          description: \"List of countries/regions from where participants can not join this meeting. \"\n          items:\n            type: string\n          type: array\n          x-ballerina-display:\n            label: Denied Regions List\n        enable:\n          description: \"`true`: Setting enabled to either allow users or block users from specific regions to join your meetings.  `false`: Setting disabled.\"\n          type: boolean\n          x-ballerina-display:\n            label: Enable \n        method:\n          description: \"Specify whether to allow users from specific regions to join thismeeting; or block users from specific regions from oining this meeting. Values: approve or deny\"\n          enum:\n            - approve\n            - deny\n          type: string\n          x-ballerina-display:\n            label: Method\n      type: object\n    BreakoutRoomSettings:\n      description: \"Setting to pre-assign breakout rooms\"\n      x-ballerina-display:\n        label: Breakout Room Settings\n      properties:\n        enable:\n          description: \"Set the value of this field to `true` if you would like to enable the pre-assigned breakout rooms. \"\n          type: boolean\n          x-ballerina-display:\n            label: Enable Pre-Assigned Breakout Rooms\n        rooms:\n          description: Create room(s).\n          x-ballerina-display:\n            label: Breakout Room Details\n          items:\n            $ref: '#/components/schemas/BreakoutRoomsDetails'\n          type: array\n      type: object\n    BreakoutRoomsDetails:\n      properties:\n        name:\n          description: Name of the breakout room.\n          type: string\n          x-ballerina-display:\n            label: Name\n        participants:\n          description: \"Email addresses of the participants who are to be assigned to the breakout room.\"\n          items:\n            type: string\n          x-ballerina-display:\n            label: Participant List\n          type: array\n      type: object\n    LanguageInterpretationDetails:\n      description: \"Language interpretation for meetings. \"\n      x-ballerina-display:\n        label: Language Interpretation\n      properties:\n        enable:\n          description: \"Indicate whether or not you would like to enable language interpretation or this meeting.\"\n          type: boolean\n          x-ballerina-display:\n            label: Enable\n        interpreters:\n          description: Information associated with the interpreter.\n          x-ballerina-display:\n            label: interpreter Information\n          items:\n            $ref: '#/components/schemas/InterpreterDetails'\n          type: array\n      type: object\n    InterpreterDetails:\n      properties:\n        email:\n          description: Email address of the interpreter.\n          format: email\n          type: string\n          x-ballerina-display:\n            label: Email\n        languages:\n          description: \"Languages for interpretation. The string must contain two separated by a comma. For example, if the language is to be interpreted from English to Chinese, the value of this field should be US,CN.\"\n          type: string\n          x-ballerina-display:\n            label: Languages\n      type: object\n    MeetingSettingsInRequest:\n      description: Meeting settings\n      x-ballerina-display:\n        label: Meeting Settings\n      properties:\n        additional_data_center_regions:\n          description: \"Enable additional data center regions for this meeting. Provide the value in  the form of array of country code(s) for the countries which are available as data center regions\"\n          items:\n            type: string\n          type: array\n          x-ballerina-display:\n            label: Additiona Data Center Regions\n        allow_multiple_devices:\n          description: \"If set to `true`, attendees will be allowed to join a meeting from multiple devices.\"\n          type: boolean\n          x-ballerina-display:\n            label: Allow Multiple Devices\n        alternative_hosts:\n          description: \"Alternative host's emails or IDs: multiple values separated by a comma.\"\n          type: string\n          x-ballerina-display:\n            label: Allternative Hosts\n        alternative_hosts_email_notification:\n          default: true\n          description: \"Flag to determine whether to send email notifications to alternative hosts, default value is true.\"\n          type: boolean\n          x-ballerina-display:\n            label: Enable Email Notifications for Alternative Hosts\n        approval_type:\n          default: 2\n          description: \"The default value is `2`. To enable registration required, set the approval type to `0` or `1`.  `0` - Automatically approve. `1` - Manually approve. `2` - No registration required.\"\n          enum:\n            - 0\n            - 1\n            - 2\n          type: integer\n          x-ballerina-display:\n            label: Approval Type\n          x-enum-descriptions:\n            - Automatically Approve\n            - Manually Approve\n            - No Registration Required\n        approved_or_denied_countries_or_regions:\n          $ref: '#/components/schemas/ApprovalAndDenialInfo'\n        audio:\n          default: both\n          description: \"Determine how participants can join the audio portion of the  meeting. both : Both Telephony and VoIP, telephony :Telephony only, voip:VoIP only.\"\n          enum:\n            - both\n            - telephony\n            - voip\n          type: string\n          x-enum-descriptions:\n            - Both Telephony and VoIP\n            - Telephony only\n            - VoIP only\n          x-ballerina-display:\n            label: Audio Type\n        authentication_domains:\n          description: \"Meeting authentication domains. This option, allows you to specify the rule so that Zoom users, whose email address contains a certain domain, can join the meeting.\"\n          type: string\n          x-ballerina-display:\n            label: Authentication Domains\n        authentication_option:\n          description: \"Specify the authentication type for users to join a meeting with `meeting_authentication` setting set to `true`. \"\n          type: string\n          x-ballerina-display:\n            label: Authentication Option\n        auto_recording:\n          default: none\n          description: \"Automatic recording: local - Record on local.cloud - Record on cloud.none - Disabled.\"\n          enum:\n            - local\n            - cloud\n            - none\n          type: string\n          x-enum-descriptions:\n            - Record to local device\n            - Record to cloud\n            - No Recording\n          x-ballerina-display:\n            label: Auto Recording\n        breakout_room:\n          $ref: '#/components/schemas/BreakoutRoomSettings'\n        close_registration:\n          default: false\n          description: Close registration after event date\n          type: boolean\n          x-ballerina-display:\n            label: Close Registration\n        cn_meeting:\n          default: false\n          description: Host meeting in China.\n          type: boolean\n          x-ballerina-display:\n            label: Host Meeting in China\n        contact_email:\n          description: Contact email for registration\n          type: string\n          x-ballerina-display:\n            label: Contact Email\n        contact_name:\n          description: Contact name for registration\n          type: string\n          x-ballerina-display:\n            label: Contact Name\n        encryption_type:\n          description: \"Choose between enhanced encryption and end-to-end encryption. Values: enhanced_encryption, e2ee\"\n          enum:\n            - enhanced_encryption\n            - e2ee\n          type: string\n          x-ballerina-display:\n            label: Encryption Type\n        global_dial_in_countries:\n          description: List of global dial-in countries\n          items:\n            type: string\n          type: array\n          x-ballerina-display:\n            label: Global Dial-In Countries\n        host_video:\n          description: Start video when the host joins the meeting.\n          type: boolean\n          x-ballerina-display:\n            label: Enable Host Video\n        in_meeting:\n          default: false\n          description: Host meeting in India.\n          type: boolean\n          x-ballerina-display:\n            label: Host Meeting in India\n        jbh_time:\n          description: \" If the value of join_before_host field is set to true, this field can be used to indicate time limits within which a participant may join a meeting before a host. The value of this field can be one of the following: 0: Allow participant to join anytime. 5: Allow participant to join 5 minutes before meeting start time. 10: Allow participant to join 10 minutes before meeting start time.\"\n          enum:\n            - 0\n            - 5\n            - 10\n          type: integer\n          x-ballerina-display:\n            label: Join Before Host Time\n        join_before_host:\n          default: false\n          description: \"Allow participants to join the meeting before the host starts the meeting. This field can only used for scheduled or recurring meetings.\"\n          type: boolean\n          x-ballerina-display:\n            label: Enable Join Before Host\n        language_interpretation:\n          $ref: '#/components/schemas/LanguageInterpretationDetails'\n        meeting_authentication:\n          description: \"Only authenticated users can join meeting if the value of this field is set to `true`.\"\n          type: boolean\n          x-ballerina-display:\n            label: Meeting Authentication\n        mute_upon_entry:\n          default: false\n          description: Mute participants upon entry.\n          type: boolean\n          x-ballerina-display:\n            label: Enable Mute Upon Entry\n        participant_video:\n          description: Start video when participants join the meeting.\n          type: boolean\n          x-ballerina-display:\n            label: Start Participant Video On Entry\n        registrants_email_notification:\n          description: \"Send email notifications to registrants about approval,  cancellation, denial of the registration. The value of this field must be set to true in order to use the `registrants_confirmation_email` field.\"\n          type: boolean\n          x-ballerina-display:\n            label: Enable Email Notifications for Registrants\n        registration_type:\n          default: 1\n          description: \"Registration type. Used for recurring meeting with fixed time only. `1` - Attendees register once and can attend any of the occurrences. `2` - Attendees need to register for each occurrence to attend. `3` - occurrences to attend.\"\n          enum:\n            - 1\n            - 2\n            - 3\n          type: integer\n          x-ballerina-display:\n            label: Registration Type\n          x-enum-descriptions:\n            - Attendees register once and can attend any of the\n              occurrences\n            - Attendees need to register for each occurrence to\n              attend\n            - Attendees register once and can choose one or more\n              occurrences to attend\n        show_share_button:\n          description: \"If set to `true`, the registration page for the meeting will\n            include social share buttons. \"\n          type: boolean\n          x-ballerina-display:\n            label: Enable Social Share\n        use_pmi:\n          default: false\n          description: Use Personal Meeting ID instead of an automatically generated\n            meeting ID. It can only be used for scheduled meetings,\n            instant meetings and recurring meetings with no fixed\n            time.\n          type: boolean\n          x-ballerina-display:\n            label: User Personal Meeting Id\n        waiting_room:\n          description: Enable waiting room. Note that if the value of this field is set to\n            `true`, it will override and disable the\n            `join_before_host` setting.\n          type: boolean\n          x-ballerina-display:\n            label: Enable Waiting Room\n        watermark:\n          default: false\n          description: Add watermark when viewing a shared screen.\n          type: boolean\n          x-ballerina-display:\n            label: Enable Watermark\n      type: object\n    RegistrantsList:\n      description: Meeting Registrnats's Details \n      properties:\n        registrants:\n          description: List of registrant objects.\n          items:\n            $ref: '#/components/schemas/RegistrantDetails'\n          type: array   \n    RegistrantCustomQuestion:\n      description: Custom Question.\n      properties:\n        title:\n          type: string\n          description: Question title\n        value:\n          type: string\n          description: Question value\n      type: object\n    RegistrantDetails:\n      allOf:\n        - properties:\n            id:\n              description: Registrant ID.\n              type: string\n          type: object\n        - description: Registrant base object\n          properties:\n            address:\n              description: Registrant's address.\n              type: string\n            city:\n              description: Registrant's city.\n              type: string\n            comments:\n              description: A field that allows registrants to provide any questions or\n                comments that they might have.\n              type: string\n            country:\n              description: Registrant's country.\n              type: string\n            custom_questions:\n              description: Custom questions.\n              items:\n                $ref: '#/components/schemas/RegistrantCustomQuestion'\n              type: array\n            email:\n              description: A valid email address of the registrant.\n              maxLength: 128\n              type: string\n            first_name:\n              description: Registrant's first name.\n              maxLength: 64\n              type: string\n            industry:\n              description: Registrant's Industry.\n              type: string\n            job_title:\n              description: Registrant's job title.\n              type: string\n            last_name:\n              description: Registrant's last name.\n              maxLength: 64\n              type: string\n            no_of_employees:\n              description: \"Number of Employees: `1-20`, `21-50`, `51-100`, `101-500`, `500-1,000`, `1,001-5,000`, `5,001-10,000`, `More than 10,000`\"\n              type: string\n            org:\n              description: Registrant's Organization.\n              type: string\n            phone:\n              description: Registrant's Phone number.\n              type: string\n            purchasing_time_frame:\n              description: \u003e-\n                This field can be included to gauge interest of webinar attendees\n                towards buying your product or\n                service.\n  \n  \n                Purchasing Time Frame:`Within a month``1-3 months``4-6 months``More than 6 months``No timeframe`\n              type: string\n            role_in_purchase_process:\n              description: \"Role in Purchase Process: `Decision Maker`, `Evaluator/Recommender`, `Influencer`, `Not involved` \"\n              type: string\n            state:\n              description: Registrant's State/Province.\n              type: string\n            zip:\n              description: Registrant's Zip/Postal Code.\n              type: string\n          required:\n            - email\n            - first_name\n          type: object\n        - properties:\n            create_time:\n              description: The time at which the registrant registered.\n              format: date-time\n              type: string\n            join_url:\n              description: The URL using which an approved registrant can join the webinar.\n              format: string\n              type: string\n            status:\n              description: \"The status of the registrant's registration.  `approved`: User\n                has been successfully approved for the\n                webinar. `pending`:  The\n                registration is still pending.\n                `denied`: User has been denied from\n                joining the webinar.\"\n              type: string\n          type: object\n    PaginationObject:\n      description: Pagination Object\n      properties:\n        next_page_token:\n          description: The next page token is used to paginate through large result sets.  A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.\n          type: string\n        page_count:\n          description: The number of pages returned for the request made.\n          type: integer\n        page_number:\n          default: 1\n          description: This field has been deprecated. \n          type: integer\n        page_size:\n          default: 30\n          description: The number of records returned with a single API call.\n          maximum: 300\n          type: integer\n        total_records:\n          description: The total number of all the records available across pages.\n          type: integer\n      type: object\n    ApprovedOrDeniedCountriesDetails:\n      description: \u003e\n        Approve or block users from specific regions/countries from joining\n        this meeting. \n      properties:\n        approved_list:\n          description: \"List of countries/regions from where participants can join this\n            meeting. \"\n          items:\n            type: string\n          type: array\n        denied_list:\n          description: \"List of countries/regions from where participants can not join\n            this meeting. \"\n          items:\n            type: string\n          type: array\n        enable:\n          description: \u003e-\n            `true`: Setting enabled to either allow users or block users from\n            specific regions to join your meetings. \n\n\n            `false`: Setting disabled.\n          type: boolean\n        method:\n          description: \u003e-\n            Specify whether to allow users from specific regions to join this\n            meeting; or block users from specific regions\n            from joining this meeting. \n\n            `approve`: Allow users from specific regions/countries to join this meeting. If this setting is selected, the approved regions/countries must be included in the `approved_list`.\n\n            `deny`: Block users from specific regions/countries from joining this meeting. If this setting is selected, the approved regions/countries must be included in the `denied_list`\n          enum:\n            - approve\n            - deny\n          type: string\n      type: object\n    ParticipantDetails:\n      properties:\n        email:\n          description: Email address of the participant.\n          format: email\n          type: string\n        name:\n          description: Name of the participant.\n          type: string\n      type: object\n    CustomKeys:\n      properties:\n        key:\n          description: Custom key associated with the user.\n          maxLength: 64\n          type: string\n        value:\n          description: Value of the custom key associated with the user.\n          maxLength: 256\n          type: string\n      type: object\n    GlobalDialInNumbersDetails:\n      properties:\n        city:\n          description: City of the number, if any. For example, Chicago.\n          type: string\n        country:\n          description: Country code. For example, BR.\n          type: string\n        country_name:\n          description: Full name of country. For example, Brazil.\n          type: string\n        number:\n          description: Phone number. For example, +1 2332357613.\n          type: string\n        type:\n          description: \"Type of number. \"\n          enum:\n            - toll\n            - tollfree\n          type: string\n      type: object\n    MeetingSettings:\n      description: Meeting settings\n      properties:\n        allow_multiple_devices:\n          description: Allow attendees to join the meeting from multiple devices. This\n            setting only works for meetings that require\n            [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).\n          type: boolean\n        alternative_hosts:\n          description: \"Alternative host's emails or IDs: multiple values are separated by\n            a semicolon.\"\n          type: string\n        alternative_hosts_email_notification:\n          default: true\n          description: Flag to determine whether to send email notifications to\n            alternative hosts, default value is true.\n          type: boolean\n        approval_type:\n          default: 2\n          description: \"The default value is `2`. To enable registration required, set the approval type to `0` or `1`.  `0` - Automatically approve. `1` - Manually approve. `2` - No registration required.\"\n          enum:\n            - 0\n            - 1\n            - 2\n          type: integer\n          x-enum-descriptions:\n            - Automatically Approve\n            - Manually Approve\n            - No Registration Required\n        approved_or_denied_countries_or_regions:\n          $ref: '#/components/schemas/ApprovedOrDeniedCountriesDetails'\n        audio:\n          default: both\n          description: \"Determine how participants can join the audio portion of the  meeting. both : Both Telephony and VoIP, telephony :Telephony only, voip:VoIP only.\"\n          enum:\n            - both\n            - telephony\n            - voip\n          type: string\n          x-enum-descriptions:\n            - Both Telephony and VoIP\n            - Telephony only\n            - VoIP only\n        authentication_domains:\n          description: If user has configured [\"Sign Into Zoom with Specified\n            Domains\"](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)\n            option, this will list the domains that are\n            authenticated.\n          type: string\n        authentication_exception:\n          description: The participants added here will receive unique meeting invite\n            links and bypass authentication.\n          items:\n            $ref: '#/components/schemas/ParticipantDetails'\n          type: array\n        authentication_name:\n          description: Authentication name set in the [authentication\n            profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).\n          type: string\n        authentication_option:\n          description: \"Specify the authentication type for users to join a meeting with `meeting_authentication` setting set to `true`. \"\n          type: string\n        auto_recording:\n          default: none\n          description: \"Automatic recording: `local` - Record on local. `cloud` - Record on cloud. `none` - Disabled.\"\n          enum:\n            - local\n            - cloud\n            - none\n          type: string\n          x-enum-descriptions:\n            - Record to local device\n            - Record to cloud\n            - No Recording\n        breakout_room:\n          $ref: '#/components/schemas/BreakoutRoomSettings'\n        close_registration:\n          default: false\n          description: Close registration after event date\n          type: boolean\n        cn_meeting:\n          default: false\n          description: Host meeting in China.\n          type: boolean\n        contact_email:\n          description: Contact email for registration\n          type: string\n        contact_name:\n          description: Contact name for registration\n          type: string\n        custom_keys:\n          description: Custom keys and values assigned to the meeting.\n          items:\n            $ref: '#/components/schemas/CustomKeys'\n          maxItems: 10\n          type: array\n        encryption_type:\n          description: \u003e-\n            Choose between enhanced encryption and [end-to-end\n            encryption](https://support.zoom.us/hc/en-us/articles/360048660871)\n            when starting or a meeting. When using end-to-end\n            encryption, several features (e.g. cloud\n            recording, phone/SIP/H.323 dial-in) will be\n            **automatically disabled**. The value of\n            this field can be one of the following:\n\n            `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. \n\n\n            `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.\n          enum:\n            - enhanced_encryption\n            - e2ee\n          type: string\n        enforce_login:\n          description: \u003e-\n            Only signed in users can join this meeting.\n\n\n            **This field is deprecated and will not be supported in the future.**  As an alternative, use the \"meeting_authentication\", \"authentication_option\" and \"authentication_domains\" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.\n          type: boolean\n        enforce_login_domains:\n          description: \u003e-\n            Only signed in users with specified domains can join meetings.\n\n\n            **This field is deprecated and will not be supported in the future.**  As an alternative, use the \"meeting_authentication\", \"authentication_option\" and \"authentication_domains\" fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.\n          type: string\n        global_dial_in_countries:\n          description: List of global dial-in countries\n          items:\n            type: string\n          type: array\n        global_dial_in_numbers:\n          description: Global Dial-in Countries/Regions\n          items:\n            $ref: '#/components/schemas/GlobalDialInNumbersDetails'\n          type: array\n        host_video:\n          description: Start video when the host joins the meeting.\n          type: boolean\n        in_meeting:\n          default: false\n          description: Host meeting in India.\n          type: boolean\n        jbh_time:\n          description: \u003e-\n            If the value of \"join_before_host\" field is set to true, this field\n            can be used to indicate time limits within which a\n            participant may join a meeting before a host. The\n            value of this field can be one of the following:\n\n\n            *  `0`: Allow participant to join anytime.\n\n            *  `5`: Allow participant to join 5 minutes before meeting start time.\n             * `10`: Allow participant to join 10 minutes before meeting start time.\n          enum:\n            - 0\n            - 5\n            - 10\n          type: integer\n        join_before_host:\n          default: false\n          description: Allow participants to join the meeting before the host starts the\n            meeting. Only used for scheduled or recurring\n            meetings.\n          type: boolean\n        language_interpretation:\n          $ref: '#/components/schemas/LanguageInterpretationDetails'\n        meeting_authentication:\n          description: \"`true` - Only authenticated users can join meetings.\"\n          type: boolean\n        mute_upon_entry:\n          default: false\n          description: Mute participants upon entry.\n          type: boolean\n        participant_video:\n          description: Start video when participants join the meeting.\n          type: boolean\n        registrants_confirmation_email:\n          description: Send confirmation email to registrants upon successful\n            registration.\n          type: boolean\n        registrants_email_notification:\n          description: Send email notifications to registrants about approval,\n            cancellation, denial of the registration. The\n            value of this field must be set to true in order\n            to use the `registrants_confirmation_email` field.\n          type: boolean\n        registration_type:\n          default: 1\n          description: \"Registration type. Used for recurring meeting with fixed time only. `1` - Attendees register once and can attend any of the occurrences. `2` - Attendees need to register for each occurrence to attend. `3` - occurrences to attend.\"\n          enum:\n            - 1\n            - 2\n            - 3\n          type: integer\n          x-enum-descriptions:\n            - Attendees register once and can attend any of\n              the occurrences\n            - Attendees need to register for each occurrence\n              to attend\n            - Attendees register once and can choose one or\n              more occurrences to attend\n        show_share_button:\n          description: \u003e-\n            Show social share buttons on the meeting registration page.\n\n            This setting only works for meetings that require [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).\n          type: boolean\n        use_pmi:\n          default: false\n          description: Use a personal meeting ID. Only used for scheduled meetings and\n            recurring meetings with no fixed time.\n          type: boolean\n        waiting_room:\n          default: false\n          description: Enable waiting room\n          type: boolean\n        watermark:\n          default: false\n          description: Add watermark when viewing a shared screen.\n          type: boolean\n      type: object\n    ReccurenceDetails:\n      description: \"Recurrence related meeting informations\"\n      properties:\n        end_date_time:\n          description: Select the final date on which the meeting will recur before it is\n            canceled. Should be in UTC time, such as\n            2017-11-25T12:00:00Z. (Cannot be used with\n            \"end_times\".)\n          format: date-time\n          type: string\n        end_times:\n          default: 1\n          description: Select how many times the meeting should recur before it is\n            canceled. (Cannot be used with \"end_date_time\".)\n          maximum: 365\n          type: integer\n        monthly_day:\n          default: 1\n          description: \u003e-\n            Use this field **only if you're scheduling a recurring meeting of\n            type** `3` to state which day in a month, the\n            meeting should recur. The value range is from 1 to\n            31.\n\n\n            For instance, if you would like the meeting to recur on 23rd of each month, provide `23` as the value of this field and `1` as the value of the `repeat_interval` field. Instead, if you would like the meeting to recur every three months, on 23rd of the month, change the value of the `repeat_interval` field to `3`.\n          type: integer\n        monthly_week:\n          description: Use this field **only if you're scheduling a recurring meeting of\n            type** `3` to state the week of the month when the\n            meeting should recur. If you use this field, **you\n            must also use the `monthly_week_day` field to\n            state the day of the week when the meeting should\n            recur.** `-1` - Last week of the month.`1`\n            - First week of the month.`2` - Second week of\n            the month.`3` - Third week of the\n            month.`4` - Fourth week of the month.\n          enum:\n            - -1\n            - 1\n            - 2\n            - 3\n            - 4\n          type: integer\n          x-enum-descriptions:\n            - Last week\n            - First week\n            - Second week\n            - Third week\n            - Fourth week\n        monthly_week_day:\n          description: \u003e-\n            Use this field **only if you're scheduling a recurring meeting of\n            type** `3` to state a specific day in a week when\n            the monthly meeting should recur. To use this\n            field, you must also use the `monthly_week`\n            field. \n\n\n            `1` - Sunday.`2` - Monday.`3` - Tuesday.`4` -  Wednesday.`5` - Thursday.`6` - Friday.`7` - Saturday.\n          enum:\n            - 1\n            - 2\n            - 3\n            - 4\n            - 5\n            - 6\n            - 7\n          type: integer\n          x-enum-descriptions:\n            - Sunday\n            - Monday\n            - Tuesday\n            - Wednesday\n            - Thursday\n            - Friday\n            - Saturday\n        repeat_interval:\n          description: \u003e+\n            Define the interval at which the meeting should recur. For\n            instance, if you would like to schedule a meeting\n            that recurs every two months, you must set the\n            value of this field as `2` and the value of the\n            `type` parameter as `3`. \n\n\n            For a daily meeting, the maximum interval you can set is `90` days. For a weekly meeting the maximum interval that you can set is  of `12` weeks. For a monthly meeting, there is a maximum of `3` months.\n\n          type: integer\n        type:\n          description: Recurrence meeting types:`1` - Daily.`2` - Weekly.`3` -\n            Monthly.\n          enum:\n            - 1\n            - 2\n            - 3\n          type: integer\n          x-enum-descriptions:\n            - Daily\n            - Weekly\n            - Monthly\n        weekly_days:\n          default: \"1\"\n          description: \u003e-\n            This field is required **if you're scheduling a recurring meeting\n            of type** `2` to state which day(s) of the week\n            the meeting should repeat.   The value for\n            this field could be a number between `1` to `7` in\n            string format. For instance, if the meeting should\n            recur on Sunday, provide `\"1\"` as the value of\n            this field. **Note:** If you would like\n            the meeting to occur on multiple days of a week,\n            you should provide comma separated values for this\n            field. For instance, if the meeting should recur\n            on Sundays and Tuesdays provide `\"1,3\"` as the\n            value of this field.\n\n             `1`  - Sunday. `2` - Monday.`3` - Tuesday.`4` -  Wednesday.`5` -  Thursday.`6` - Friday.`7` - Saturday.\n          enum:\n            - \"1\"\n            - \"2\"\n            - \"3\"\n            - \"4\"\n            - \"5\"\n            - \"6\"\n            - \"7\"\n          type: string\n      required:\n        - type\n      type: object\n    MeetingOccurenceDetails:\n      description: Occurence object. This object is only returned for Recurring Webinars.\n      properties:\n        duration:\n          description: Duration.\n          type: integer\n        occurrence_id:\n          description: \"Occurrence ID: Unique Identifier that identifies an occurrence of\n            a recurring webinar. [Recurring\n            webinars](https://support.zoom.us/hc/en-us/arti\\\n            cles/216354763-How-to-Schedule-A-Recurring-Webi\\\n            nar) can have a maximum of 50 occurrences.\"\n          type: string\n        start_time:\n          description: Start time.\n          format: date-time\n          type: string\n        status:\n          description: Occurrence status.\n          type: string\n      type: object\n    RequestedMeetingTrackingDetails:\n      properties:\n        field:\n          description: Label of the tracking field.\n          type: string\n        value:\n          description: Value for the field.\n          type: string\n        visible:\n          description: \u003e-\n            Indicates whether the [tracking\n            field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields)\n            is visible in the meeting scheduling options in\n            the Zoom Web Portal or not.\n\n\n            `true`: Tracking field is visible. \n\n\n            `false`: Tracking field is not visible to the users in the meeting options in the Zoom Web Portal but the field was used while scheduling this meeting via API. An invisible tracking field can be used by users while scheduling meetings via API only. \n          type: boolean\n      type: object\n    RequestedMeetingDetails:\n      description: Meeting object\n      properties:\n        agenda:\n          description: Agenda\n          type: string\n        created_at:\n          description: The date and time at which this meeting was created.\n          format: date-time\n          type: string\n        duration:\n          description: Meeting duration.\n          type: integer\n        h323_password:\n          description: H.323/SIP room system password\n          type: string\n        join_url:\n          description: URL for participants to join the meeting. This URL should only be\n            shared with users that you would like to invite for\n            the meeting.\n          type: string\n        occurrences:\n          description: Array of occurrence objects.\n          items:\n            $ref: '#/components/schemas/MeetingOccurenceDetails'\n          type: array\n        password:\n          description: \u003e+\n            Meeting password. Password may only contain the following\n            characters: `[a-z A-Z 0-9 @ - _ * !]`\n\n\n            If \"Require a password when scheduling new meetings\" setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the password field will be autogenerated in the response even if it is not provided in the API request. \n\n\n          type: string\n        pmi:\n          description: Personal Meeting Id. Only used for scheduled meetings and recurring\n            meetings with no fixed time.\n          format: int64\n          type: integer\n        recurrence:\n          $ref: '#/components/schemas/ReccurenceDetails'\n        settings:\n          $ref: '#/components/schemas/MeetingSettings'\n        start_time:\n          description: 'Meeting start date-time in UTC/GMT. Example:\n            \"2020-03-31T12:02:00Z\"'\n          format: date-time\n          type: string\n        start_url:\n          description: URL to start the meeting. This URL should only be used by the host\n            of the meeting and **should not be shared with anyone\n            other than the host** of the meeting as anyone with\n            this URL will be able to login to the Zoom Client as\n            the host of the meeting.\n          type: string\n        timezone:\n          description: Timezone to format start_time\n          type: string\n        topic:\n          description: Meeting topic\n          maxLength: 200\n          type: string\n        tracking_fields:\n          description: Tracking fields\n          items:\n            $ref: '#/components/schemas/RequestedMeetingTrackingDetails'\n          type: array\n        type:\n          default: 2\n          description: Meeting Type\n          enum:\n            - 1\n            - 2\n            - 3\n            - 8\n          type: integer\n          x-enum-descriptions:\n            - Instant Meeting\n            - Scheduled Meeting\n            - Recurring Meeting with no fixed time\n            - Recurring Meeting with fixed time\n      type: object\n    MeetingMetadata:\n      description: Meeting Metadata\n      properties:\n        assistant_id:\n          description: Unique identifier of the scheduler who scheduled this meeting on\n            behalf of the host. This field is only returned if you\n            used \"schedule_for\" option in the [Create a Meeting\n            API\n            request](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meetingcreate).\n          type: string\n        host_email:\n          description: Email address of the meeting host.\n          format: email\n          type: string\n        id:\n          description: '[Meeting\n            ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):\n            Unique identifier of the meeting in \"**long**\"\n            format(represented as int64 data type in JSON), also\n            known as the meeting number.'\n          format: int64\n          type: integer\n        registration_url:\n          description: URL using which registrants can register for a meeting. This field\n            is only returned for meetings that have enabled\n            registration.\n          type: string\n      type: object\n      required:\n        - id\n    MeetingObject:\n      properties:\n        agenda:\n          description: Meeting description. The length of agenda gets truncated to 250\n            characters when you list all meetings for a user. To\n            view the complete agenda of a meeting, retrieve\n            details for a single meeting\n            [here](https://marketplace.zoom.us/docs/api-reference/zoom-api/meetings/meeting).\n          type: string\n        created_at:\n          description: \"Time of creation. \"\n          format: date-time\n          type: string\n        duration:\n          description: Meeting duration.\n          type: integer\n        host_id:\n          description: ID of the user who is set as the host of the meeting.\n          type: string\n        id:\n          description: Meeting ID - also known as the meeting number in double (int64)\n            format.\n          format: int64\n          type: integer\n        join_url:\n          description: Join URL.\n          type: string\n        start_time:\n          description: Meeting start time.\n          format: date-time\n          type: string\n        timezone:\n          description: \"Timezone to format the meeting start time. \"\n          type: string\n        topic:\n          description: Meeting topic.\n          type: string\n        type:\n          description: \"Meeting Type: 1 - Instant meeting. 2 - Scheduled meeting. 3 - Recurring meeting with no fixed time. 8 - Recurring meeting with fixed time.\"\n          enum:\n            - 1\n            - 2\n            - 3\n            - 8\n          type: integer\n          x-enum-descriptions:\n            - Instant Meeting\n            - Scheduled Meeting\n            - Recurring Meeting with no fixed time\n            - Recurring Meeting with fixed time\n        uuid:\n          description: Unique Meeting ID. Each meeting instance will generate its own\n            Meeting UUID.\n          type: string\n      type: object\n    MeetingList:\n      description: List of meetings\n      title: Group List\n      type: object\n      properties:\n        meetings:\n          description: List of Meeting objects.\n          items:\n            $ref: '#/components/schemas/MeetingObject'\n          type: array\n    MeetingPartcipantsList:\n      description: List of meeting participants \n      properties:\n        participants:\n          description: Array of meeting participant objects.\n          items:\n            $ref : '#/components/schemas/PartcipantDetails'\n          type: array\n      type: object\n    PartcipantDetails:\n      description: Participant's details\n      properties:\n        id:\n          description: Universally unique identifier of the Participant. It is the same as\n            the User ID of the participant if the\n            participant joins the meeting by logging into\n            Zoom. If the participant joins the meeting\n            without logging in, the value of this field will\n            be blank.\n          format: uuid\n          type: string\n        name:\n          description: Participant display name.\n          type: string\n        user_email:\n          description: Email address of the user. This field will be returned if the user\n            logged into Zoom to join the meeting.\n          type: string\n      type: object\n    ListUsersResponse:\n      allOf:\n        - $ref: '#/components/schemas/PaginationObject'\n        - $ref: '#/components/schemas/UsersList'\n      description: List of users\n    UsersList:\n      description: Users Details \n      properties:\n        users:\n          description: Information about the users.\n          items:\n            $ref: '#/components/schemas/UserDetails'\n          type: array\n    UserDetails:\n      description: User Details \n      properties:\n        created_at:\n          description: The time at which the user's account was created.\n          format: date-time\n          type: string\n          example: '2019-06-01T07:58:03Z'\n        custom_attributes:\n          description: Information about the user's custom attributes. This field is **only** returned if users are assigned custom attributes and you provided the `custom_attributes` value for the `include_fields` query parameter in the API request.\n          items:\n            $ref: '#/components/schemas/CustomAttributeDetails'\n          type: array\n        dept:\n          description: The user's department.\n          type: string\n          example: Developers\n        email:\n          description: The user's email address.\n          format: email\n          type: string\n          example: jchill@example.com\n        employee_unique_id:\n          description: The employee's unique ID. The this field only returns when SAML single sign-on (SSO) is enabled or the `login_type` value is `101` (SSO).\n          type: string\n          example: HqDyI037Qjili1kNsSIrIg\n        first_name:\n          description: The user's first name.\n          maxLength: 64\n          type: string\n          example: Jill\n        group_ids:\n          description: The IDs of groups where the user is a member.\n          items:\n            type: string\n            example: t-_-d56CSWG-7BF15LLrOw\n          type: array\n        host_key:\n          description: The user's [host key](https://support.zoom.us/hc/en-us/articles/205172555-Using-your-host-key). This field is **only** returned if users are assigned a host key and you provided the `host_key` value for the `include_fields` query parameter in the API request.\n          type: string\n          example: '299492849'\n        id:\n          description: The user's ID. The API does **not** return this value for users with the `pending` status.\n          type: string\n          example: KDcuGIm1QgePTO8WbOqwIQ\n        im_group_ids:\n          description: The IDs of IM directory groups where the user is a member.\n          items:\n            type: string\n            example: t-_-d56CSWG-7BF15LLrOw\n          type: array\n        last_client_version:\n          description: The last client version that user used to log in.\n          type: string\n          example: 5.2.45120.0906(win)\n        last_login_time:\n          description: The user's last login time. This field has a three-day buffer period. For example, if user first logged in on `2020-01-01` and then logged out and logged in on `2020-01-02`, this value will still reflect the login time of `2020-01-01`. However, if the user logs in on `2020-01-04`, the value of this field will reflect the corresponding login time since it exceeds the three-day buffer period.\n          format: date-time\n          type: string\n          example: '2022-03-25T05:40:55Z'\n        last_name:\n          description: The user's last name.\n          maxLength: 64\n          type: string\n          example: Chill\n        plan_united_type:\n          description: This field is returned if the user is enrolled in the [Zoom United](https://zoom.us/pricing/zoom-bundles) plan.\n          type: string\n          example: '0'\n        pmi:\n          description: The user's [Personal Meeting ID (PMI)](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#understanding-personal-meeting-id-pmi).\n          format: int64\n          type: integer\n          example: 6589310093\n        role_id:\n          description: The unique ID of the user's assigned [role](/api-reference/zoom-api/methods#operation/roles).\n          type: string\n          example: '0'\n        status:\n          description: |-\n            The user's status: \n            * `active` — An active user. \n            * `inactive` — A deactivated user. \n            * `pending` — A pending user.\n          enum:\n            - active\n            - inactive\n            - pending\n          example: active\n          type: string\n          x-enum-descriptions:\n            - An active user\n            - A deactivated user\n            - A pending user\n        timezone:\n          description: The user's timezone.\n          type: string\n          example: Asia/Shanghai\n        type:\n          description: |-\n            The user's assigned plan type: \n            * `1` — Basic. \n            * `2` — Licensed. \n            * `3` — On-prem. \n            * `99` — None (this can only be set with `ssoCreate`).\n          enum:\n            - 1\n            - 2\n            - 3\n            - 99\n          example: 1\n          type: integer\n          x-enum-descriptions:\n            - Basic\n            - Licensed\n            - On-prem\n            - None (this can only be set with `ssoCreate`)\n        verified:\n          description: |-\n            Display whether the user's email address for the Zoom account is verified: \n            * `1` — A verified user email. \n            * `0` — The user's email **not** verified.\n          enum:\n            - 1\n            - 0\n          type: integer\n          example: 1\n      required:\n        - email\n        - type\n      type: object\n    CustomAttributeDetails:\n      description: User's Custom Attribute Details \n      properties:\n        key:\n          description: The custom attribute's unique ID.\n          type: string\n          example: cbf_cywdkexrtqc73f97gd4w6g\n        name:\n          description: The custom attribute's name.\n          type: string\n          example: A1\n        value:\n          description: The custom attribute's value.\n          type: string\n          example: '2323'\n      type: object\n    ListDashboardMeetingsResponse:\n      allOf:\n        - $ref: '#/components/schemas/DurationObject'\n        - $ref: '#/components/schemas/PaginationObject'\n        - $ref: '#/components/schemas/DashboardMeetingList'\n      description: List of dashboard meetings\n    DurationObject:\n      description: Duration Details \n      properties:\n        from:\n          description: Start date for this report in 'yyyy-mm-dd' format.\n          format: date\n          type: string\n          example: '2022-04-01'\n        to:\n          description: End date for this report in 'yyyy-mm-dd' format.\n          format: date\n          type: string\n          example: '2022-04-07'     \n      type: object\n    DashboardMeetingList:\n      description: List of dashboard meetings\n      type: object\n      properties:\n        meetings:\n          description: List of Meeting metric details.\n          items:\n            $ref: '#/components/schemas/MeetingMetricDetails'\n          type: array\n    MeetingMetricDetails:\n      description: Meeting metric details\n      properties:\n        host:\n          description: Host display name.\n          type: string\n          example: jchill meeting\n        custom_keys:\n          description: Custom keys and values assigned to the meeting.\n          items:\n            properties:\n              key:\n                description: Custom key associated with the meeting.\n                maxLength: 64\n                type: string\n                example: Host Nation\n              value:\n                description: Value of the custom key associated with the meeting.\n                maxLength: 256\n                type: string\n                example: US\n            type: object\n          maxItems: 10\n          type: array\n        dept:\n          description: Department of the host.\n          type: string\n          example: Developers\n        duration:\n          description: 'Meeting duration. Formatted as hh:mm:ss, for example: `16:08` for 16 minutes and 8 seconds.'\n          type: string\n          example: '00:56'\n        email:\n          description: Email address of the host.\n          type: string\n          example: user@example.com\n        end_time:\n          description: Meeting end time.\n          format: date-time\n          type: string\n          example: '2022-01-04T07:50:47Z'\n        has_3rd_party_audio:\n          description: Indicates whether or not [third party audio](https://support.zoom.us/hc/en-us/articles/202470795-3rd-Party-Audio-Conference) was used in the meeting.\n          type: boolean\n          example: true\n        has_archiving:\n          description: Whether the archiving feature was used in the meeting.\n          type: boolean\n          example: true\n        has_pstn:\n          description: Indicates whether or not the PSTN was used in the meeting.\n          type: boolean\n          example: true\n        has_recording:\n          description: 'Indicates whether or not the recording feature was used in the meeting. '\n          type: boolean\n          example: true\n        has_screen_share:\n          description: Indicates whether or not screenshare feature was used in the meeting.\n          type: boolean\n          example: true\n        has_sip:\n          description: Indicates whether or not someone joined the meeting using SIP.\n          type: boolean\n          example: true\n        has_video:\n          description: Indicates whether or not video was used in the meeting.\n          type: boolean\n          example: true\n        has_voip:\n          description: Indicates whether or not VoIP was used in the meeting.\n          type: boolean\n          example: true\n        id:\n          description: '[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in \"**long**\" format(represented as int64 data type in JSON), also known as the meeting number.'\n          format: int64\n          type: integer\n          example: 93201235621\n        in_room_participants:\n          description: The number of Zoom Room participants in the meeting.\n          type: integer\n          example: 2\n        participants:\n          description: Meeting participant count.\n          type: integer\n          example: 2\n        start_time:\n          description: Meeting start time.\n          format: date-time\n          type: string\n          example: '2022-01-04T08:04:27Z'\n        topic:\n          description: Meeting topic.\n          type: string\n          example: Share Now\n        tracking_fields:\n          description: Tracking fields and values assigned to the meeting.\n          items:\n            properties:\n              field:\n                description: Label of the tracking field.\n                maxLength: 64\n                type: string\n                example: field1\n              value:\n                description: Value of the tracking field.\n                maxLength: 256\n                type: string\n                example: value1\n            type: object\n          type: array\n        user_type:\n          description: License type of the user.\n          type: string\n          example: Licensed\n        uuid:\n          description: Meeting UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.\n          type: string\n          example: gm8s9L+PTEC+FG3sFbd1Cw==\n        audio_quality:\n          type: string\n          description: |-\n            The meeting's [audio quality score](https://support.zoom.us/hc/en-us/articles/360061244651-Using-meeting-quality-scores-and-network-alerts): \n            * `good` — The audio is almost flawless and the quality is excellent. \n            * `fair` — The audio occasionally has distortion, noise, and other problems, but the content is basically continuous. Participants can communicate normally. \n            * `poor` — The audio often has distortion, noise, and other problems, but the content is basically continuous. Participants can communicate normally. \n            * `bad` — The sound quality is extremely poor and the audio content is almost inaudible.\n          enum:\n            - good\n            - fair\n            - poor\n            - bad\n          example: good\n        video_quality:\n          type: string\n          description: |-\n            The meeting's [video quality score](https://support.zoom.us/hc/en-us/articles/360061244651-Using-meeting-quality-scores-and-network-alerts): \n            * `good` — The video is almost flawless and the quality is excellent. \n            * `fair` — The video definition is high, occasionally gets stuck, fast or slow, or other problems, but the frequency is very low and the video quality is good. \n            * `poor` — The video definition is not high, but not many problems exist. The video quality is mediocre. \n            * `bad` — The picture is very blurred and often gets stuck.\n          enum:\n            - good\n            - fair\n            - poor\n            - bad\n          example: good\n        screen_share_quality:\n          type: string\n          description: |-\n            The meeting's [screen share quality score](https://support.zoom.us/hc/en-us/articles/360061244651-Using-meeting-quality-scores-and-network-alerts): \n            * `good` — The video is almost flawless and the quality is excellent. \n            * `fair` — The video definition is high, occasionally gets stuck, fast or slow, or other problems, but the frequency is very low and the video quality is good. \n            * `poor` — The video definition is not high, but not many problems exist. The video quality is mediocre. \n            * `bad` — The picture is very blurred and often gets stuck.\n          enum:\n            - good\n            - fair\n            - poor\n            - bad\n          example: good\n      title: Metrics\n      type: object\n    ListDashboardMeetingParticipantsResponse:\n      allOf:\n        - $ref: '#/components/schemas/PaginationObject'\n        - $ref: '#/components/schemas/DashboardMeetingParticipantsList'\n      description: List of dashboard meetings\n    DashboardMeetingParticipantsList:\n      description: List of dashboard meeting participants\n      type: object\n      properties:\n        participants:\n          description: List of Meeting participants details.\n          items:\n            $ref: '#/components/schemas/MeetingParticipantsDetails'\n          type: array\n    MeetingParticipantsDetails:\n      description: Information about the meeting participants. If a participant left a meeting and rejoined the same meeting, their information will appear as many times as they joined the meeting.\n      properties:\n        audio_quality:\n          description: |-\n            The participant's [audio quality score](https://support.zoom.us/hc/en-us/articles/360061244651-Using-meeting-quality-scores-and-network-alerts). The API only returns this value when the **Meeting quality scores and network alerts on Dashboard** setting is enabled in the Zoom Web Portal and the **Show meeting quality score and network alerts on Dashboard** option is selected in [**Account Settings**](https://zoom.us/account/setting): \n            * `good` — The audio is almost flawless and the quality is excellent. \n            * `fair` — The audio occasionally has distortion, noise, and other problems, but the content is basically continuous. Participants can communicate normally. \n            * `poor` — The audio often has distortion, noise, and other problems, but the content is basically continuous. Participants can communicate normally. \n            * `bad` — The sound quality is extremely poor and the audio content is almost inaudible.\n          enum:\n            - ''\n            - good\n            - fair\n            - poor\n            - bad\n          type: string\n          example: good\n        camera:\n          description: |-\n            The type of camera that the participant used during the meeting. \n\n            **Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).\n          type: string\n          example: FaceTime HD Camera\n        connection_type:\n          description: The participant's connection type.\n          type: string\n          example: UDP\n        customer_key:\n          type: string\n          maxLength: 15\n          description: The participant's SDK identifier. This value can be alphanumeric, up to a maximum length of 15 characters.\n          example: 349589LkJyeW\n        data_center:\n          description: The data center where participant's meeting data is stored.\n          type: string\n          example: United States (SC Top)\n        device:\n          description: |-\n            The type of device the participant used to join the meeting: \n            * `Phone` — The participant joined via PSTN. \n            * `H.323/SIP` — The participant joined via an H.323 or SIP device. \n            * `Windows` — The participant joined via VoIP using a Windows device. \n            * `Mac` — The participant joined via VoIP using a Mac device. \n            * `iOS` — The participant joined via VoIP using an iOS device. \n            * `Android` — The participant joined via VoIP using an Android device. \n\n            **Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).\n          enum:\n            - Phone\n            - H.323/SIP\n            - Windows\n            - Mac\n            - iOS\n            - Android\n          type: string\n          example: Phone\n        domain:\n          description: |-\n            The participant's PC domain. \n\n            **Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).\n          type: string\n          example: example.com\n        email:\n          description: The participant's email address. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details.\n          format: email\n          type: string\n          example: user@example.com\n        from_sip_uri:\n          description: The meeting participant's SIP From header URI. The API only returns this response when the participant joins a meeting via SIP.\n          type: string\n          example: example.com\n        full_data_center:\n          description: The data center where participant's meeting data is stored. This field includes a semicolon-separated list of HTTP Tunnel (HT), Cloud Room Connector (CRC), and Real-Time Web Gateway (RWG) location information.\n          type: string\n          example: United States (SC Top);\n        harddisk_id:\n          description: |-\n            The participant's hard disk ID. \n\n            **Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).\n          type: string\n          example: Disk01\n        id:\n          description: The participant's universally unique ID. This value is the same as the participant's user ID if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging into Zoom, this returns an empty value.\n          type: string\n          example: zJKyaiAyTNC-MWjiWC18KQ\n        in_room_participants:\n          description: The number of participants that joined via Zoom Room.\n          type: integer\n          example: 2\n        ip_address:\n          description: The participant's IP address.\n          type: string\n          example: 10.100.111.8\n        join_time:\n          description: The time at which participant joined the meeting.\n          format: date-time\n          type: string\n          example: '2022-03-01T10:15:14Z'\n        leave_reason:\n          description: |-\n            The reason why the participant left the meeting, where `$name` is the participant's username: \n            * `$name left the meeting.` \n            * `$name got disconnected from the meeting.` \n            * `Host ended the meeting.` \n            * `Host closed the meeting.` \n            * `Host started a new meeting.` \n            * `Network connection error.` \n            * `Host did not join.` \n            * `Exceeded free meeting minutes limit.` \n            * `Removed by host.` \n            * `Unknown reason.` \n            * `Leave waiting room.` \n            * `Removed by host from waiting room.`\n          enum:\n            - $name left the meeting.\n            - $name got disconnected from the meeting.\n            - Host ended the meeting.\n            - Host closed the meeting.\n            - Host started a new meeting.\n            - Network connection error.\n            - Host did not join.\n            - Exceeded free meeting minutes limit.\n            - Removed by host.\n            - Unknown reason.\n            - Leave waiting room.\n            - Removed by host from waiting room.\n          type: string\n          example: Host ended the meeting.\n        leave_time:\n          description: The time at which a participant left the meeting. For live meetings, this field will only return if a participant has left the ongoing meeting.\n          format: date-time\n          type: string\n          example: '2022-03-01T10:17:35Z'\n        location:\n          description: The participant's location.\n          type: string\n          example: United States\n        mac_addr:\n          description: |-\n            The participant's MAC address. \n\n            **Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).\n          type: string\n          example: f85e-a012-92d8\n        microphone:\n          description: |-\n            The type of microphone that the participant used during the meeting. \n\n            **Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).\n          type: string\n          example: Microphone (2- High Definition Audio Device)\n        network_type:\n          description: |-\n            The participant's network type: \n\n            * `Wired` \n            * `Wifi` \n            * `PPP` — Point-to-Point. \n            * `Cellular` — 3G, 4G, and 5G cellular. \n            * `Others` — An unknown device.\n          enum:\n            - Wired\n            - Wifi\n            - PPP\n            - Cellular\n            - Others\n          type: string\n          example: Wired\n        participant_user_id:\n          description: |-\n            The participant's universally unique ID (UUID): \n            * If the participant joins the meeting by logging into Zoom, this value is the `id` value in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API response. \n            * If the participant joins the meeting **without** logging into Zoom, this returns an empty string value.\n          type: string\n          example: DYHrdpjrS3uaOf7dPkkg8w\n        pc_name:\n          description: The participant's PC name.\n          type: string\n          example: HW0010449\n        recording:\n          description: Whether the recording feature was used during the meeting.\n          type: boolean\n          example: false\n        registrant_id:\n          description: |-\n            The participant's unique registrant ID. This field only returns if you pass the `registrant_id` value for the `include_fields` query parameter. \n\n            This field does not return if the `type` query parameter is the `live` value.\n          type: string\n          example: fdgsfh2ey82fuh\n        role:\n          description: |-\n            The participant's role: \n            * `host` — Host. \n            * `attendee` — Attendee.\n          enum:\n            - host\n            - attendee\n          type: string\n          example: host\n        screen_share_quality:\n          description: |-\n            The participant's [screen share quality score](https://support.zoom.us/hc/en-us/articles/360061244651-Using-meeting-quality-scores-and-network-alerts). The API only returns this value when the **Meeting quality scores and network alerts on Dashboard** setting is enabled in the Zoom Web Portal and the **Show meeting quality score and network alerts on Dashboard** option is selected in [**Account Settings**](https://zoom.us/account/setting): \n            * `good` — The video is almost flawless and the quality is excellent. \n            * `fair` — The video definition is high, occasionally gets stuck, fast or slow, or other problems, but the frequency is very low and the video quality is good. \n            * `poor` — The video definition is not high, but not many problems exist. The video quality is mediocre. \n            * `bad` — The picture is very blurred and often gets stuck.\n          enum:\n            - ''\n            - good\n            - fair\n            - poor\n            - bad\n          type: string\n          example: good\n        share_application:\n          description: Whether the participant chose to share an iPhone/iPad app during the screenshare.\n          type: boolean\n          example: true\n        share_desktop:\n          description: Whether the participant chose to share their desktop during the screenshare.\n          type: boolean\n          example: true\n        share_whiteboard:\n          description: Whether the participant chose to share their whiteboard during the screenshare.\n          type: boolean\n          example: true\n        sip_uri:\n          description: The meeting participant's SIP (Session Initiation Protocol) Contact header URI. The API only returns this response when the participant joins a meeting via SIP.\n          type: string\n          example: example.com\n        speaker:\n          description: |-\n            The type of speaker that the participant used during the meeting. \n\n            **Note:** This response returns an empty string (`““`) value for any users who are **not** a part of the host's account (external users).\n          type: string\n          example: speaker (2- High Definition Audio Device)\n        status:\n          description: |-\n            The participant's status: \n            * `in_meeting` — In a meeting. \n            * `in_waiting_room` — In a waiting room.\n          enum:\n            - in_meeting\n            - in_waiting_room\n          type: string\n          example: in_meeting\n        user_id:\n          description: The participant's ID. This value assigned to a participant upon joining a meeting and is only valid for the meeting's duration.\n          type: string\n          example: '20162560'\n        user_name:\n          description: The participant's display name.\n          type: string\n          example: jchill\n        version:\n          description: The participant's Zoom client version.\n          type: string\n          example: 5.9.1.2581\n        video_quality:\n          description: |-\n            The participant's [video quality score](https://support.zoom.us/hc/en-us/articles/360061244651-Using-meeting-quality-scores-and-network-alerts). The API only returns this value when the **Meeting quality scores and network alerts on Dashboard** setting is enabled in the Zoom Web Portal and the **Show meeting quality score and network alerts on Dashboard** option is selected in [**Account Settings**](https://zoom.us/account/setting): \n            * `good` — The video is almost flawless and the quality is excellent. \n            * `fair` — The video definition is high, occasionally gets stuck, fast or slow, or other problems, but the frequency is very low and the video quality is good. \n            * `poor` — The video definition is not high, but not many problems exist. The video quality is mediocre. \n            * `bad` — The picture is very blurred and often gets stuck.\n          enum:\n            - ''\n            - good\n            - fair\n            - poor\n            - bad\n          type: string\n          example: good\n        bo_mtg_id:\n          type: string\n          description: The [breakout room](https://support.zoom.us/hc/en-us/articles/206476313-Managing-breakout-rooms) ID. Each breakout room is assigned a unique ID.\n          example: Dkgwu8nm/ExG1vM+GhLRhA==\n      type: object\n  securitySchemes:\n    bearerAuth:            \n      type: http\n      scheme: bearer\n      bearerFormat: JWT  \n    OAuth:\n      flows:\n        authorizationCode:\n          authorizationUrl: https://zoom.us/oauth/authorize\n          scopes: {}\n          tokenUrl: https://zoom.us/oauth/token\n      type: oauth2",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/zoom/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/zoom/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/past_webinars/{webinarId}/participants\": get: security: security \"OAuth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security",
		"sum type parameter"
	]
}