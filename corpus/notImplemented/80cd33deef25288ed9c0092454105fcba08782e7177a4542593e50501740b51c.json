{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/openl-tablets/openl-tablets"
		},
		"file": {
			"name": "openapiNothingToGenerate.yaml",
			"size": 0,
			"path": "Util/openl-openapi-parser/test-resources/test.converter/paths/openapiNothingToGenerate.yaml",
			"byteSize": 6480,
			"content": "openapi: 3.0.0\r\ninfo:\r\n  title: OpenAPI Petstore\r\n  description: This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters. For OAuth2 flow, you may use `user` as both username and password when asked to login.\r\n  license:\r\n    name: Apache-2.0\r\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\r\n  version: 1.0.0\r\nexternalDocs:\r\n  description: Find out more about OpenAPI generator\r\n  url: https://openapi-generator.tech\r\ntags:\r\n- name: pet\r\n  description: Everything about your Pets\r\n- name: store\r\n  description: Access to Petstore orders\r\n- name: user\r\n  description: Operations about user\r\npaths:\r\n  /pet:\r\n    post:\r\n      tags:\r\n      - pet\r\n      summary: Add a new pet to the store\r\n      operationId: addPet\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/Pet'\r\n      responses:\r\n        405:\r\n          description: Invalid input\r\n        200:\r\n          description: successful operation\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/Pet'\r\n      security:\r\n      - petstore_auth:\r\n        - write:pets\r\n        - read:pets\r\n      x-accepts: application/json\r\n      x-tags:\r\n      - tag: pet\r\n      x-contentType: application/json\r\ncomponents:\r\n  schemas:\r\n    Order:\r\n      title: Pet Order\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          format: int64\r\n        petId:\r\n          type: integer\r\n          format: int64\r\n        quantity:\r\n          type: integer\r\n          format: int32\r\n        shipDate:\r\n          type: string\r\n          format: date-time\r\n        status:\r\n          type: string\r\n          description: Order Status\r\n          enum:\r\n          - placed\r\n          - approved\r\n          - delivered\r\n        complete:\r\n          type: boolean\r\n          default: false\r\n      description: An order for a pets from the pet store\r\n      example:\r\n        petId: 6\r\n        quantity: 1\r\n        id: 0\r\n        shipDate: 2000-01-23T04:56:07.000+00:00\r\n        complete: false\r\n        status: placed\r\n      xml:\r\n        name: Order\r\n    Category:\r\n      title: Pet category\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          format: int64\r\n        name:\r\n          type: string\r\n      description: A category for a pet\r\n      example:\r\n        name: name\r\n        id: 6\r\n      xml:\r\n        name: Category\r\n    User:\r\n      title: a User\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          format: int64\r\n        username:\r\n          type: string\r\n        firstName:\r\n          type: string\r\n        lastName:\r\n          type: string\r\n        email:\r\n          type: string\r\n        password:\r\n          type: string\r\n        phone:\r\n          type: string\r\n        userStatus:\r\n          type: integer\r\n          description: User Status\r\n          format: int32\r\n      description: A User who is purchasing from the pet store\r\n      example:\r\n        firstName: firstName\r\n        lastName: lastName\r\n        password: password\r\n        userStatus: 6\r\n        phone: phone\r\n        id: 0\r\n        email: email\r\n        username: username\r\n      xml:\r\n        name: User\r\n    Tag:\r\n      title: Pet Tag\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          format: int64\r\n        name:\r\n          type: string\r\n      description: A tag for a pet\r\n      example:\r\n        name: name\r\n        id: 1\r\n      xml:\r\n        name: Tag\r\n    Pet:\r\n      title: a Pet\r\n      required:\r\n      - name\r\n      - photoUrls\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          format: int64\r\n        category:\r\n          $ref: '#/components/schemas/Category'\r\n        name:\r\n          type: string\r\n          example: doggie\r\n        photoUrls:\r\n          type: array\r\n          xml:\r\n            name: photoUrl\r\n            wrapped: true\r\n          items:\r\n            type: string\r\n        tags:\r\n          type: array\r\n          xml:\r\n            name: tag\r\n            wrapped: true\r\n          items:\r\n            $ref: '#/components/schemas/Tag'\r\n        status:\r\n          type: string\r\n          description: pet status in the store\r\n          enum:\r\n          - available\r\n          - pending\r\n          - sold\r\n      description: A pet for sale in the pet store\r\n      example:\r\n        photoUrls:\r\n        - photoUrls\r\n        - photoUrls\r\n        name: doggie\r\n        id: 0\r\n        category:\r\n          name: name\r\n          id: 6\r\n        tags:\r\n        - name: name\r\n          id: 1\r\n        - name: name\r\n          id: 1\r\n        status: available\r\n      xml:\r\n        name: Pet\r\n    ApiResponse:\r\n      title: An uploaded response\r\n      type: object\r\n      properties:\r\n        code:\r\n          type: integer\r\n          format: int32\r\n        type:\r\n          type: string\r\n        message:\r\n          type: string\r\n      description: Describes the result of uploading an image resource\r\n      example:\r\n        code: 0\r\n        type: type\r\n        message: message\r\n    body:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n          description: Updated name of the pet\r\n        status:\r\n          type: string\r\n          description: Updated status of the pet\r\n    body_1:\r\n      type: object\r\n      properties:\r\n        additionalMetadata:\r\n          type: string\r\n          description: Additional data to pass to server\r\n        file:\r\n          type: string\r\n          description: file to upload\r\n          format: binary\r\n  requestBodies:\r\n    UserArray:\r\n      description: List of user object\r\n      content:\r\n        application/json:\r\n          schema:\r\n            type: array\r\n            items:\r\n              $ref: '#/components/schemas/User'\r\n      required: true\r\n    Pet:\r\n      description: Pet object that needs to be added to the store\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/Pet'\r\n      required: true\r\n  securitySchemes:\r\n    petstore_auth:\r\n      type: oauth2\r\n      flows:\r\n        implicit:\r\n          authorizationUrl: /api/oauth/dialog\r\n          scopes:\r\n            write:pets: modify pets in your account\r\n            read:pets: read your pets\r\n    api_key:\r\n      type: apiKey\r\n      name: api_key\r\n      in: header",
			"canonicalURL": "/github.com/openl-tablets/openl-tablets@ced3429fe2ac07371d46d337c2e43477c07cc096/-/blob/Util/openl-openapi-parser/test-resources/test.converter/paths/openapiNothingToGenerate.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/openl-tablets/openl-tablets/blob/ced3429fe2ac07371d46d337c2e43477c07cc096/Util/openl-openapi-parser/test-resources/test.converter/paths/openapiNothingToGenerate.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/pet\": post: security: security \"petstore_auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}