{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/serverless-seoul/corgi"
		},
		"file": {
			"name": "open_api_fixture.json",
			"size": 0,
			"path": "src/__test__/e2e/open_api_fixture.json",
			"byteSize": 8613,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"MyAPI\",\n    \"version\": \"1.0.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://api.example.net/prod/\"\n    }\n  ],\n  \"tags\": [],\n  \"paths\": {\n    \"/api/me\": {\n      \"get\": {\n        \"description\": \"Describe current user\",\n        \"operationId\": \"describeMe\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserShow\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/messages\": {\n      \"get\": {\n        \"description\": \"List Messages\",\n        \"operationId\": \"listMessages\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"count\",\n            \"schema\": {\n              \"minimum\": 1,\n              \"maximum\": 100,\n              \"type\": \"integer\"\n            },\n            \"required\": false\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"after\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": false\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageList\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"description\": \"Create a new Message\",\n        \"operationId\": \"createMessage\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"description\": \"Body\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"message\": {\n                    \"$ref\": \"#/components/schemas/Message\"\n                  },\n                  \"attachments\": {\n                    \"items\": {\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"size\": {\n                          \"type\": \"integer\"\n                        },\n                        \"type\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"required\": [\"name\", \"size\"],\n                      \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                  }\n                },\n                \"required\": [\n                  \"message\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageShow\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/messages/{id}\": {\n      \"get\": {\n        \"description\": \"Describe given message\",\n        \"operationId\": \"describeMessage\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageShow\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"description\": \"Update given message\",\n        \"operationId\": \"updateMessage\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Body\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"message\": {\n                    \"$ref\": \"#/components/schemas/Message\"\n                  }\n                },\n                \"required\": [\n                  \"message\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageShow\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"description\": \"Delete given message\",\n        \"operationId\": \"deleteMessage\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Succeeded\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Message\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"status\": {\n            \"anyOf\": [\n              {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"active\"\n                ]\n              },\n              {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"deleted\"\n                ]\n              }\n            ]\n          },\n          \"user\": {\n            \"$ref\": \"#/components/schemas/User\"\n          },\n          \"content\": {\n            \"type\": \"string\"\n          },\n          \"readonly\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"status\",\n          \"user\",\n          \"content\"\n        ]\n      },\n      \"MessageShow\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Message\"\n          }\n        },\n        \"required\": [\n          \"data\"\n        ]\n      },\n      \"MessageList\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Message\"\n            }\n          },\n          \"paging\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"after\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"data\",\n          \"paging\"\n        ]\n      },\n      \"Succeeded\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"success\": {\n                \"type\": \"boolean\",\n                \"enum\": [\n                  true\n                ]\n              }\n            },\n            \"required\": [\n              \"success\"\n            ]\n          }\n        },\n        \"required\": [\n          \"data\"\n        ]\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"email\": {\n            \"format\": \"email\",\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"email\",\n          \"username\"\n        ]\n      },\n      \"UserShow\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"$ref\": \"#/components/schemas/User\"\n          }\n        },\n        \"required\": [\n          \"data\"\n        ]\n      },\n      \"UserList\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/User\"\n            }\n          },\n          \"paging\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"after\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"data\",\n          \"paging\"\n        ]\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/serverless-seoul/corgi@571c0ac9c40e31513a56dc93a675ea6f28786245/-/blob/src/__test__/e2e/open_api_fixture.json",
			"externalURLs": [
				{
					"url": "https://github.com/serverless-seoul/corgi/blob/571c0ac9c40e31513a56dc93a675ea6f28786245/src/__test__/e2e/open_api_fixture.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/messages\": get: responses: 200: contents: application/json: generate schema: field data: item: field status: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}