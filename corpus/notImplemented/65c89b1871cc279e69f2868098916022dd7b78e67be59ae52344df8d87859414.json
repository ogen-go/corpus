{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/interuss/dss"
		},
		"file": {
			"name": "observation.yaml",
			"size": 0,
			"path": "interfaces/automated-testing/rid/observation.yaml",
			"byteSize": 6063,
			"content": "openapi: 3.0.2\ninfo:\n  title: Remote ID Display Data Observation\n  version: 0.0.1\n  description: \u003e-\n    This interface is implemented by every Display Provider wishing to be tested by the automated testing framework.\n    The automated testing suite calls this interface to obtain current remote ID information from the perspective of the Display Provider.\npaths:\n  /display_data:\n    get:\n      parameters:\n        -\n          examples:\n            pyramids:\n              value: '29.97816,31.13296,29.98025,31.13535'\n          name: view\n          description: \u003e-\n            The area of this view: lat1,lng1,lat2,lng2.  The view is the smallest box bounded by\n            the provided corner points.\n          schema:\n            type: string\n          in: query\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDisplayDataResponse'\n          description: Current remote ID display data was retrieved successfully.\n      operationId: getDisplayData\n      summary: Poll display data\n      description: Request current remote ID display data as would be visualized by a Display Application.\n      security:\n        - RIDAuth:\n            - dss.read.identification_service_areas\n  /display_data/{id}:\n    get:\n      parameters:\n        -\n          examples:\n            default:\n              value: '1e3adb99-acc9-424f-a04e-a0743538849a'\n          name: id\n          description: \u003e-\n            ID of flight identified in `/display_data`.\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDetailsResponse'\n          description: Details about the requested flight were retrieved successfully.\n        '404':\n          description: Requested flight was not found.\n      operationId: getDetails\n      summary: Get flight details\n      description: Get the details of a flight identified in `/display_data`.\n      security:\n        - RIDAuth:\n            - dss.read.identification_service_areas\ncomponents:\n  schemas:\n    GetDisplayDataResponse:\n      description: Response to a request for current data that would be visualized by a Display Application.\n      type: object\n      properties:\n        flights:\n          description: Current information for set of discovered flights whose precise locations are known.\n          type: array\n          items:\n            $ref: '#/components/schemas/Flight'\n          default: []\n        clusters:\n          description: \u003e-\n            Current information for sets of discovered flights whose precise locations are not\n            known.\n          type: array\n          items:\n            $ref: '#/components/schemas/Cluster'\n          default: []\n    GetDetailsResponse:\n      description: Response to a request to get details about a flight.\n      type: object\n    Flight:\n      description: ''\n      required:\n        - id\n      type: object\n      properties:\n        id:\n          description: \u003e-\n            Identifier of flight that may be used to obtain details about the flight.\n            This is not necessarily the UTM/flight ID in the remote ID system.\n          type: string\n        most_recent_position:\n          description: Most recent position known for the flight.\n          allOf:\n            - $ref: '#/components/schemas/Position'\n        recent_paths:\n          description: Paths the flight recently traveled, if available.\n          type: array\n          items:\n            $ref: '#/components/schemas/Path'\n    Cluster:\n      description: 'A general area containing one or more flight.'\n      type: object\n      required:\n        - corners\n        - area_sqm\n        - number_of_flights\n      properties:\n        corners:\n          description: Two opposite corners of a rectangular lat-lng box bounding the cluster.\n          type: array\n          items:\n            $ref: '#/components/schemas/Position'\n          minItems: 2\n          maxItems: 2\n        area_sqm:\n          description: Area of the cluster in square meters.\n          type: number\n          format: double\n        number_of_flights:\n          description: Number of flights within the cluster.\n          type: number\n          format: int32\n          minValue: 1\n    Position:\n      description: 'A position on Earth.'\n      required:\n        - lat\n        - lng\n      type: object\n      properties:\n        lat:\n          format: double\n          description: \u003e-\n            Degrees of latitude north of the equator, with reference to the WGS84 ellipsoid.\n          type: number\n        lng:\n          format: double\n          description: \u003e-\n            Degrees of longitude east of the Prime Meridian, with reference to the WGS84\n            ellipsoid.\n          type: number\n        alt:\n          format: double\n          description: \u003e-\n            Geodetic altitude (NOT altitude above launch, altitude above ground, or EGM96):\n            aircraft distance above the WGS84 ellipsoid as measured along a line that passes\n            through the aircraft and is normal to the surface of the WGS84 ellipsoid.\n          type: number\n    Path:\n      description: Path followed by a flight.\n      required:\n        - positions\n      type: object\n      properties:\n        positions:\n          description: Sequential positions available for a flight.\n          type: array\n          items:\n            $ref: '#/components/schemas/Position'\n  securitySchemes:\n    RIDAuth:\n      flows:\n        clientCredentials:\n          tokenUrl: https://example.com/oauth/token\n          scopes:\n            dss.read.identification_service_areas: Client may read current remote ID information.\n      type: oauth2\n      description: |-\n        Authorization from, or on behalf of, an authorization authority, matching standard remote ID authorization.\n\nsecurity:\n  - RIDAuth:\n      - dss.read.identification_service_areas\n",
			"canonicalURL": "/github.com/interuss/dss@94d0e96aaf3bb24b00a8974417272fa68025637b/-/blob/interfaces/automated-testing/rid/observation.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/interuss/dss/blob/94d0e96aaf3bb24b00a8974417272fa68025637b/interfaces/automated-testing/rid/observation.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/display_data\": get: security: security \"RIDAuth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}