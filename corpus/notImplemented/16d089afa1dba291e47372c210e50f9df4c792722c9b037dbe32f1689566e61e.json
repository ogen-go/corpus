{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/iZettle/api-documentation"
		},
		"file": {
			"name": "api-reference-v2.yaml",
			"size": 0,
			"path": "finance-api/api-reference-v2.yaml",
			"byteSize": 15789,
			"content": "openapi: \"3.0.3\"\ninfo:\n  title: Finance API\n  description: \u003e\n    The Finance API is used to fetch finance-related information that is processed through Zettle. The information\n    includes account balance, all the transactions processed through Zettle, and payout.\n  version: \"2.0\"\nservers:\n  - url: https://finance.izettle.com/v2\n    description: Production\npaths:\n  /accounts/{accountTypeGroup}/balance:\n    get:\n      tags:\n        - accounts\n      operationId: getBalance\n      summary: Get account balance\n      description: Returns the balance in a merchant's preliminary or liquid account at a specific time.\n      parameters:\n        - $ref: \"#/components/parameters/accountTypeGroupParam\"\n        - name: at\n          in: query\n          description: \u003e\n            Used to fetch account balance at a certain point in time. The time is specified in UTC. If this parameter is \n            used, any transaction after that point will be ignored. If not, the balance of all transactions at the \n            current point in time is returned.\n          required: false\n          schema:\n            type: string\n            format: YYYY-MM-DDThh:mm:ss\n            example: \"2022-03-01T12:42:10\"\n            default: NOW()\n      responses:\n        \"200\":\n          description: \u003e\n            Returns when the operation is successful. The account balance in the currency's smallest unit. \n            For example, 300 with currency GBP is £3.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  totalBalance:\n                    type: integer\n                    description: \u003e\n                      The account balance in the currency's smallest unit. For example, 300 with currency GBP is £3. \n                      It can be negative when refunds are greater than sales.\n                    example: 300\n                  currencyId:\n                    description: The currency of the account. For example, GBP.\n                    type: string\n                    example: GBP\n        \"400\":\n          description: Returns when a required parameter is missing or in a wrong format in the request\n        \"401\":\n          description: \u003e\n            Returns when one of the following occurs:\n              - The authentication information is missing in the request.\n              - The authentication token has expired.\n              - The authentication token is invalid.\n        \"403\":\n          description: Returns when the scope being used in the request is incorrect.\n      security:\n        - ZettleOauth:\n            - READ:FINANCE\n  /accounts/{accountTypeGroup}/transactions:\n    get:\n      tags:\n        - accounts\n      operationId: getAccountTransactions\n      summary: Get account transactions\n      description: \u003e\n        Returns all transactions or transactions of certain types from a merchant's preliminary or\n        liquid account during a specific period.\n      parameters:\n        - $ref: \"#/components/parameters/accountTypeGroupParam\"\n        - name: start\n          in: query\n          description: \u003e\n            The start time in UTC (inclusive) from when the transactions will be fetched.\n          required: true\n          schema:\n            type: string\n            format: YYYY-MM-DDThh:mm:ss\n            example: \"2022-03-01T12:42:10\"\n        - name: end\n          in: query\n          description: \u003e\n            The end time in UTC (exclusive) before when the transactions will be fetched.\n          required: true\n          schema:\n            type: string\n            format: YYYY-MM-DDThh:mm:ss\n            example: \"2022-03-01T12:42:10\"\n        - name: includeTransactionType\n          in: query\n          description: \u003e\n            Specifies the transaction types to fetch. Multiple transaction types can be specified. Available \n            transaction types are:\n              | Transaction type        | Description | Applicable for account type |\n              |-------------------------|-------------|-----------------------------|\n              | ADJUSTMENT              | A bookkeeping adjustment | LIQUID, PRELIMINARY |\n              | ADVANCE                 | The cash advance given by Zettle to a merchant in the liquid account. A cash advance is a type of financing that is offered to merchants based on their sales history. The advance is paid back with monthly down payments. | LIQUID |\n              | ADVANCE_DOWNPAYMENT     | A down payment on a previously paid out cash advance in the liquid account. | LIQUID |\n              | ADVANCE_FEE_DOWNPAYMENT | The netting of a cash advance fee in the liquid account. | LIQUID |\n              | CASHBACK                | Money given to a merchant to retroactively adjust the card payment fee rate. | LIQUID |\n              | FAILED_PAYOUT           | A previous payout transaction failed and was made void. The payout money is returned to the merchant's liquid account. | LIQUID |\t\n              | FROZEN_FUNDS            | The money that is frozen to cover a chargeback. When the issuing bank initiates a chargeback, the money will be removed from the merchant's liquid account and marked as frozen to cover the chargeback. If the chargeback is later revoked, the money will be returned to the merchant's liquid account with a new and positive transaction of the same type. It effectively makes the initial FROZEN_FUNDS transaction void. | LIQUID |\n              | INVOICE_PAYMENT         | An invoice payment. If an invoice is paid through a card payment, the payment type is PAYMENT.| LIQUID, PRELIMINARY |\t\n              | INVOICE_PAYMENT_FEE     | An invoice payment fee. If an invoice is paid through a card payment, the payment fee type is PAYMENT_FEE. | LIQUID, PRELIMINARY |\n              | PAYMENT                 | A payment where Zettle handles the funds. This includes any type of payment, such as card payments and other alternative payment methods. In the case of a refund, a transaction of the same type will occur but with the inverted amount. Contains a reference to the payment in the Purchase API. | LIQUID, PRELIMINARY |\n              | PAYMENT_FEE             | The fee for a payment where Zettle handles the funds. The amount is positive in case of a refund. Contains a reference to the payment fee in the Purchase API. | LIQUID, PRELIMINARY |\n              | PAYMENT_PAYOUT          | A payment payout with a negative amount is a transfer of money for a single payment from merchant's liquid account to PayPal Wallet. A payment payout with a positive amount is a transfer of money for a refund from PayPal Wallet to the merchant's liquid account.  | LIQUID |\n              | PAYOUT                  | A payout can be positive or negative. If the account balance is paid out from the merchant’s liquid account to the merchant’s bank account or to PayPal Wallet for PayPal users, the payout is negative. If the merchant’s configuration has a minimum account balance, the payout is the liquid account balance minus the minimum account balance. For example, if the account balance is £147 and the minimum account balance is £47, the payout is £100. For PayPal users, if a refund happens, a payout will be made from PayPal Wallet to the liquid account. In this case, the amount is positive.  | LIQUID |\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ADJUSTMENT\n                - ADVANCE\n                - ADVANCE_DOWNPAYMENT\n                - ADVANCE_FEE_DOWNPAYMENT\n                - CASHBACK\n                - FAILED_PAYOUT\n                - FROZEN_FUNDS\n                - INVOICE_PAYMENT\n                - INVOICE_PAYMENT_FEE\n                - PAYMENT\n                - PAYMENT_FEE\n                - PAYMENT_PAYOUT\n                - PAYOUT\n        - name: limit\n          in: query\n          description: \u003e\n            The maximum number of transactions to return in a response. You must specify limit with any integer greater \n            than 0. To avoid a big dataset in a response, use limit and offset together to set response pagination.\n            \n            For example, to return only three transactions at a time from a collection of transactions for a specific \n            period, set limit as 3 and offset as 0 in the first request. Then set limit as 3 and increment offset with \n            3 in the second request and repeat the request until all transactions are fetched.\n          required: false\n          schema:\n            type: integer\n            default: 10000\n            example: 1000\n        - name: offset\n          in: query\n          description: \u003e\n            The number of transactions to skip before beginning to return in a response. You must specify offset with \n            any integer greater than or equal to 0. Use limit and offset together to set pagination on the response to \n            avoid returning a big dataset.\n          required: false\n          schema:\n            type: integer\n            default: 0\n            example: 3\n      responses:\n        \"200\":\n          description: Returns when the operation is successful.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                      description: \u003e\n                        The time when a transaction is made in the merchant's Zettle account. It's not the timestamp \n                        when a card transaction or a purchase was made. For example, transactions in the merchant's \n                        liquid account may take effect hours after card transactions or purchases take place.\n                      example: \"2022-03-01T12:42:10\"\n                    amount:\n                      type: string\n                      description: \u003e\n                        The amount of money of a transaction in the currency's smallest unit. For example, \n                        300 with currency GBP is £3. Depending on the transaction and the transaction type, the amount \n                        can be negative. One example for this is the PAYMENT transaction type in the case of a refund.\n                      example: 300\n                    originatorTransactionType:\n                      type: string\n                      description: The transaction type.\n                      example: PAYOUT\n                    originatorTransactionUuid:\n                      type: string\n                      description: The identifier of the originating transaction as UUID version 1.\n                      example: 5e8673e4-a52f-11ec-b909-0242ac120002\n        \"400\":\n          description: Returns when a required parameter is missing or in a wrong format in the request.\n        \"401\":\n          description: \u003e\n            Returns when one of the following occurs:\n              - The authentication information is missing in the request.\n              - The authentication token has expired.\n              - The authentication token is invalid.\n        \"403\":\n          description: Returns when the scope being used in the request is incorrect.\n\n      security:\n        - ZettleOauth:\n            - READ:FINANCE\n  /payout-info:\n    get:\n      tags:\n        - payout\n      operationId: getPayoutInfo\n      summary: Get payout info\n      description: \u003e\n        Returns payout related information from a merchant's liquid account. A payout is a deposit made to a merchant's \n        bank account or a PayPal Wallet for PayPal users. If the merchant's configuration has a minimum account balance, \n        then the payout will deposit the account balance minus the minimum account balance.\n      parameters:\n        - name: at\n          in: query\n          description: \u003e\n            Used to fetch payouts at a certain point in time. The time is specified in UTC. If this parameter is used, \n            any transaction after that time will be ignored. If not, the account balance at the current point in time is\n            returned.\n          required: false\n          schema:\n            type: string\n            format: YYYY-MM-DDThh:mm:ss\n            example: \"2022-03-01T12:42:10\"\n            default: NOW()\n      responses:\n        \"200\":\n          description: Returns when the operation is successful.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  totalBalance:\n                    type: integer\n                    description: \u003e\n                      The account balance in the currency's smallest unit. For example, 300 with currency GBP is £3. \n                      It can be negative when refunds are greater than sales.\n                    example: 300\n                  currencyId:\n                    description: The currency of the account. For example, GBP.\n                    type: string\n                    example: GBP\n                  nextPayoutAmount:\n                    description: \u003e\n                      The amount of money to be paid out to the merchant in the currency's smallest unit. For \n                      example, 300 with currency GBP is £3.\n                    type: integer\n                    example: 2000\n                  discountRemaining:\n                    description: \u003e\n                      The amount of discounts that remain in merchant's vouchers in the currency's smallest unit.\n                      The vouchers are offered by Zettle. For example, a merchant has a voucher worthy £100 from a \n                      Zettle marketing campaign. For a transaction of £200, Zettle will subtract £2 as transaction fee \n                      on the voucher. Then the merchant will have a remaining discount of £98, which would be\n                      represented as 9800 in the response.\n                    type: integer\n                    example: 9800\n                  periodicity:\n                    description: \u003e\n                      The period between each payout that is set by the merchant. It can be DAILY, WEEKLY or MONTHLY.\n                    type: string\n                    example: DAILY\n        \"400\":\n          description: Returns when a required parameter is missing or in a wrong format in the request.\n        \"401\":\n          description: \u003e\n            Returns when one of the following occurs:\n              - The authentication information is missing in the request.\n              - The authentication token has expired.\n              - The authentication token is invalid.\n        \"403\":\n          description: Returns when the scope being used in the request is incorrect.\n      security:\n        - ZettleOauth:\n            - READ:FINANCE\n\ncomponents:\n  securitySchemes:\n    ZettleOauth:\n      type: oauth2\n      description: \"For more information, see the [OAuth API documentation](https://developer.zettle.com/docs/api/oauth/overview).\"\n      flows:\n        authorizationCode:\n          authorizationUrl: \"https://oauth.zettle.com/authorize\"\n          tokenUrl: \"https://oauth.zettle.com/token\"\n          scopes:\n            \"READ:FINANCE\": Access to read finance data\n  parameters:\n    accountTypeGroupParam:\n      name: accountTypeGroup\n      in: path\n      description: \u003e\n        The type of a merchant's Zettle account. You can use one of the following account types:\n          - PRELIMINARY account where transactions are to be confirmed.\n          - LIQUID account where transactions are to be paid out to the merchant.\n      required: true\n      schema:\n        type: string\n        enum:\n          - PRELIMINARY\n          - LIQUID\n",
			"canonicalURL": "/github.com/iZettle/api-documentation@a041d44f11b87b6ac38569e3d4130002779e78e1/-/blob/finance-api/api-reference-v2.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/iZettle/api-documentation/blob/a041d44f11b87b6ac38569e3d4130002779e78e1/finance-api/api-reference-v2.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/accounts/{accountTypeGroup}/balance\": get: security: security \"ZettleOauth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}