{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mlpiper/mlpiper"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "mcenter_client/tests/mcenter_server_api/openapi/openapi.yaml",
			"byteSize": 98156,
			"content": "openapi: 3.0.1\ninfo:\n  description: MLOPs API document\n  title: MLOps API documentation\n  version: 1.0.0\nservers:\n- url: http://bran-c13:3456/v2\n- url: https://bran-c13:3456/v2\n\n\ntags:\n- description: Agent management\n  name: agents\n- description: Events management\n  name: events\n- description: Group management\n  name: groups\n- description: ION management\n  name: MLApp patterns\n- description: MLApp profile management\n  name: MLApp profiles\n- description: Models management\n  name: models\n- description: Pipeline patterns management\n  name: pipeline patterns\n- description: Pipeline profiles management\n  name: pipeline profiles\n- description: View management\n  name: reports\n- description: Repository management\n  name: repository\n- description: Role management\n  name: roles\n- description: Timeline capture management\n  name: timeline captures\n- description: User management\n  name: users\npaths:\n  /agents:\n    get:\n      operationId: agents_get\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Agent'\n                type: array\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error.\n      summary: Get list of agents\n      tags:\n      - agents\n      x-openapi-router-controller: mcenter_server_api.controllers.agents_controller\n    post:\n      operationId: agents_post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Agent'\n        description: Agent address object\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Agent'\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error.\n      summary: Register an agent\n      tags:\n      - agents\n      x-openapi-router-controller: mcenter_server_api.controllers.agents_controller\n  /agents/{agentId}:\n    delete:\n      operationId: agents_agent_id_delete\n      parameters:\n      - description: Agent identifier\n        in: path\n        name: agentId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Deregister an agent\n      tags:\n      - agents\n      x-openapi-router-controller: mcenter_server_api.controllers.agents_controller\n    get:\n      operationId: agents_agent_id_get\n      parameters:\n      - description: Agent identifier\n        in: path\n        name: agentId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Agent'\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: List details of specific agent\n      tags:\n      - agents\n      x-openapi-router-controller: mcenter_server_api.controllers.agents_controller\n    put:\n      operationId: agents_agent_id_put\n      parameters:\n      - description: Agent identifier\n        in: path\n        name: agentId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Agent'\n        description: Update agent object\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Agent'\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Update agent information\n      tags:\n      - agents\n      x-openapi-router-controller: mcenter_server_api.controllers.agents_controller\n  /alerts:\n    get:\n      operationId: alerts_get\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200'\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Get list of alerts\n      tags:\n      - events\n      x-openapi-router-controller: mcenter_server_api.controllers.events_controller\n  /auth/login:\n    post:\n      operationId: auth_login_post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n        description: username and password fields for authentication\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_1'\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error.\n      summary: Authenticate user\n      tags:\n      - users\n      x-openapi-router-controller: mcenter_server_api.controllers.users_controller\n  /auth/validate:\n    post:\n      operationId: auth_validate_post\n      parameters:\n      - description: Bearer Token\n        in: header\n        name: Authorization\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/inline_response_200_2'\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Register an user\n      tags:\n      - users\n      x-openapi-router-controller: mcenter_server_api.controllers.users_controller\n  /dashboard:\n    get:\n      operationId: dashboard_get\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Dashboard'\n                type: array\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Extract dashboard view\n      tags:\n      - reports\n      x-openapi-router-controller: mcenter_server_api.controllers.reports_controller\n  /dataScienceReport:\n    get:\n      operationId: data_science_report_get\n      parameters:\n      - description: MLApp instance identifier\n        in: path\n        name: mlAppInstanceId\n        required: true\n        schema:\n          type: string\n      - description: workflow node id for which to fetch view\n        in: query\n        name: workflowNodeId\n        schema:\n          type: string\n      - description: agent identifier\n        in: query\n        name: agentId\n        schema:\n          type: string\n      - description: Pipeline identifier\n        in: query\n        name: pipelineId\n        schema:\n          type: string\n      - description: start time from where to fetch health view\n        in: query\n        name: start\n        schema:\n          format: int64\n          type: integer\n      - description: end time from where to fetch health view\n        in: query\n        name: end\n        schema:\n          format: int64\n          type: integer\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataView'\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Extract data scientist view\n      tags:\n      - reports\n      x-openapi-router-controller: mcenter_server_api.controllers.reports_controller\n  /dbQuery:\n    get:\n      operationId: db_query_get\n      responses:\n        200:\n          content: {}\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n  /events:\n    get:\n      operationId: events_get\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Event'\n                type: array\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Get list of events\n      tags:\n      - events\n      x-openapi-router-controller: mcenter_server_api.controllers.events_controller\n  /healthReport:\n    get:\n      operationId: health_report_get\n      parameters:\n      - description: MLApp instance identifier\n        in: path\n        name: mlAppInstanceId\n        required: true\n        schema:\n          type: string\n      - description: start time from where to fetch health view\n        in: query\n        name: start\n        schema:\n          format: int64\n          type: integer\n      - description: end time from where to fetch health view\n        in: query\n        name: end\n        schema:\n          format: int64\n          type: integer\n      - description: Pipeline instance identifier, of first node to compare\n        in: query\n        name: pipelineInstanceA\n        schema:\n          type: string\n      - description: Pipeline instance identifier, of second node to compare\n        in: query\n        name: pipelineInstanceB\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HealthView'\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Extract health view\n      tags:\n      - reports\n      x-openapi-router-controller: mcenter_server_api.controllers.reports_controller\n  /me:\n    get:\n      operationId: me_get\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Get user detail of current user\n      tags:\n      - users\n      x-openapi-router-controller: mcenter_server_api.controllers.users_controller\n  /mlAppInstances:\n    get:\n      operationId: ml_app_instances_get\n      responses:\n        200:\n          content: {}\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n    post:\n      operationId: ml_app_instances_post\n      responses:\n        200:\n          content: {}\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n  /mlAppInstances/{mlAppInstanceId}:\n    get:\n      operationId: ml_app_instances_ml_app_instance_id_get\n      parameters:\n      - description: MLApp instance identifier\n        in: path\n        name: mlAppInstanceId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n  /mlAppInstances/{mlAppInstanceId}/archive:\n    delete:\n      operationId: ml_app_instances_ml_app_instance_id_archive_delete\n      parameters:\n      - description: MLApp instance identifier\n        in: path\n        name: mlAppInstanceId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n  /mlAppInstances/{mlAppInstanceId}/logs:\n    get:\n      operationId: ml_app_instances_ml_app_instance_id_logs_get\n      parameters:\n      - description: MLApp instance identifier\n        in: path\n        name: mlAppInstanceId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n  /mlAppInstances/{mlAppInstanceId}/logs/download:\n    get:\n      operationId: ml_app_instances_ml_app_instance_id_logs_download_get\n      parameters:\n      - description: MLApp instance identifier\n        in: path\n        name: mlAppInstanceId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Model file\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Download specific model\n      tags:\n      - models\n      x-openapi-router-controller: mcenter_server_api.controllers.models_controller\n  /mlAppInstances/{mlAppInstanceId}/logs/prepare:\n    post:\n      operationId: ml_app_instances_ml_app_instance_id_logs_prepare_post\n      parameters:\n      - description: MLApp instance identifier\n        in: path\n        name: mlAppInstanceId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n  /mlAppInstances/{mlAppInstanceId}/logs/prepareStatus:\n    post:\n      operationId: ml_app_instances_ml_app_instance_id_logs_prepare_status_post\n      parameters:\n      - description: MLApp instance identifier\n        in: path\n        name: mlAppInstanceId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n  /mlAppInstances/{mlAppInstanceId}/moveToProduction:\n    post:\n      operationId: ml_app_instances_ml_app_instance_id_move_to_production_post\n      parameters:\n      - description: MLApp instance identifier\n        in: path\n        name: mlAppInstanceId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n  /mlAppInstances/{mlAppInstanceId}/setModel:\n    post:\n      operationId: ml_app_instances_ml_app_instance_id_set_model_post\n      parameters:\n      - description: MLApp instance identifier\n        in: path\n        name: mlAppInstanceId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n  /mlAppInstances/{mlAppInstanceId}/stop:\n    delete:\n      operationId: ml_app_instances_ml_app_instance_id_stop_delete\n      parameters:\n      - description: MLApp instance identifier\n        in: path\n        name: mlAppInstanceId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n  /mlAppInstances/{mlAppInstanceId}/thresholds:\n    get:\n      operationId: ml_app_instances_ml_app_instance_id_thresholds_get\n      parameters:\n      - description: MLApp instance identifier\n        in: path\n        name: mlAppInstanceId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n    post:\n      operationId: ml_app_instances_ml_app_instance_id_thresholds_post\n      parameters:\n      - description: MLApp instance identifier\n        in: path\n        name: mlAppInstanceId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n  /models:\n    get:\n      operationId: models_get\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Model'\n                type: array\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Get metadata of models\n      tags:\n      - models\n      x-openapi-router-controller: mcenter_server_api.controllers.models_controller\n    post:\n      operationId: models_post\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Model'\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error.\n      summary: Upload a model\n      tags:\n      - models\n      x-openapi-router-controller: mcenter_server_api.controllers.models_controller\n  /models/{modelId}:\n    delete:\n      operationId: models_model_id_delete\n      parameters:\n      - description: Model identifier\n        in: path\n        name: modelId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Delete a model\n      tags:\n      - models\n      x-openapi-router-controller: mcenter_server_api.controllers.models_controller\n    get:\n      operationId: models_model_id_get\n      parameters:\n      - description: Model identifier\n        in: path\n        name: modelId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Model'\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Return metadata of specific model\n      tags:\n      - models\n      x-openapi-router-controller: mcenter_server_api.controllers.models_controller\n  /models/{modelId}/dataCharacteristic:\n    get:\n      operationId: models_model_id_data_characteristic_get\n      parameters:\n      - description: Model identifier\n        in: path\n        name: modelId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/ModelStat'\n                type: array\n          description: List of model characteristics (health)\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Fetch model characteristics also know as healths\n      tags:\n      - models\n      x-openapi-router-controller: mcenter_server_api.controllers.models_controller\n  /models/{modelId}/download:\n    get:\n      operationId: models_model_id_download_get\n      parameters:\n      - description: Model identifier\n        in: path\n        name: modelId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: Model file\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Download specific model\n      tags:\n      - models\n      x-openapi-router-controller: mcenter_server_api.controllers.models_controller\n  /models/{modelId}/review:\n    post:\n      operationId: models_model_id_review_post\n      parameters:\n      - description: Model identifier\n        in: path\n        name: modelId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelReview'\n        description: Model review parameters\n        required: true\n      responses:\n        200:\n          content: {}\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Review a model approve/reject for current mlApp\n      tags:\n      - models\n      x-openapi-router-controller: mcenter_server_api.controllers.models_controller\n  /models/{modelId}/source:\n    get:\n      operationId: models_model_id_source_get\n      parameters:\n      - description: Model identifier\n        in: path\n        name: modelId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/ModelSource'\n                type: array\n          description: Model provenance\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Fetch model provenance\n      tags:\n      - models\n      x-openapi-router-controller: mcenter_server_api.controllers.models_controller\n  /models/{modelId}/status:\n    get:\n      operationId: models_model_id_status_get\n      parameters:\n      - description: Model identifier\n        in: path\n        name: modelId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/ModelStatus'\n                type: array\n          description: Model status\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Fetch model status, list of mlApp approved/rejected for\n      tags:\n      - models\n      x-openapi-router-controller: mcenter_server_api.controllers.models_controller\n  /models/{modelId}/usage:\n    get:\n      operationId: models_model_id_usage_get\n      parameters:\n      - description: Model identifier\n        in: path\n        name: modelId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/ModelUsage'\n                type: array\n          description: Model usage timestamps\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Fetch model usages time linked to pipelines\n      tags:\n      - models\n      x-openapi-router-controller: mcenter_server_api.controllers.models_controller\n  /onboarding/groups:\n    get:\n      operationId: onboarding_groups_get\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Group'\n                type: array\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Get list of all groups\n      tags:\n      - groups\n      x-openapi-router-controller: mcenter_server_api.controllers.groups_controller\n    post:\n      operationId: onboarding_groups_post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Group'\n        description: Create group\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Add new group\n      tags:\n      - groups\n      x-openapi-router-controller: mcenter_server_api.controllers.groups_controller\n  /onboarding/groups/{groupId}:\n    delete:\n      operationId: onboarding_groups_group_id_delete\n      parameters:\n      - description: Group identifier\n        in: path\n        name: groupId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Delete a group\n      tags:\n      - groups\n      x-openapi-router-controller: mcenter_server_api.controllers.groups_controller\n    get:\n      operationId: onboarding_groups_group_id_get\n      parameters:\n      - description: Group identifier\n        in: path\n        name: groupId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Get details of specific group\n      tags:\n      - groups\n      x-openapi-router-controller: mcenter_server_api.controllers.groups_controller\n    put:\n      operationId: onboarding_groups_group_id_put\n      parameters:\n      - description: Group identifier\n        in: path\n        name: groupId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Group'\n        description: Group detail description\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error.\n      summary: Update group information\n      tags:\n      - groups\n      x-openapi-router-controller: mcenter_server_api.controllers.groups_controller\n  /onboarding/mlAppPatterns:\n    get:\n      operationId: onboarding_ml_app_patterns_get\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/MLAppPattern'\n                type: array\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Get list of all MLApp patterns\n      tags:\n      - MLApp patterns\n      x-openapi-router-controller: mcenter_server_api.controllers.ml_app_patterns_controller\n    post:\n      operationId: onboarding_ml_app_patterns_post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MLAppPattern'\n        description: MLApp pattern detail description\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MLAppPattern'\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Create a new MLApp pattern\n      tags:\n      - MLApp patterns\n      x-openapi-router-controller: mcenter_server_api.controllers.ml_app_patterns_controller\n  /onboarding/mlAppPatterns/{mlAppPatternId}:\n    delete:\n      operationId: onboarding_ml_app_patterns_ml_app_pattern_id_delete\n      parameters:\n      - description: MLApp pattern identifier\n        in: path\n        name: mlAppPatternId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Delete an existing MLApp pattern\n      tags:\n      - MLApp patterns\n      x-openapi-router-controller: mcenter_server_api.controllers.ml_app_patterns_controller\n    get:\n      operationId: onboarding_ml_app_patterns_ml_app_pattern_id_get\n      parameters:\n      - description: MLApp pattern identifier\n        in: path\n        name: mlAppPatternId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MLAppPattern'\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Get specific MLApp pattern\n      tags:\n      - MLApp patterns\n      x-openapi-router-controller: mcenter_server_api.controllers.ml_app_patterns_controller\n    put:\n      operationId: onboarding_ml_app_patterns_ml_app_pattern_id_put\n      parameters:\n      - description: MLApp pattern identifier\n        in: path\n        name: mlAppPatternId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MLAppPattern'\n        description: MLApp pattern detail configuration\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MLAppPattern'\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Update an existing MLApp pattern\n      tags:\n      - MLApp patterns\n      x-openapi-router-controller: mcenter_server_api.controllers.ml_app_patterns_controller\n  /onboarding/mlAppProfiles:\n    get:\n      operationId: onboarding_ml_app_profiles_get\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/MLAppProfile'\n                type: array\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Get list of all MLApp profiles\n      tags:\n      - MLApp profiles\n      x-openapi-router-controller: mcenter_server_api.controllers.ml_app_profiles_controller\n    post:\n      operationId: onboarding_ml_app_profiles_post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MLAppProfile'\n        description: MLApp profile detail description\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MLAppProfile'\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Create a new MLApp profile\n      tags:\n      - MLApp profiles\n      x-openapi-router-controller: mcenter_server_api.controllers.ml_app_profiles_controller\n  /onboarding/mlAppProfiles/{mlAppProfileId}:\n    delete:\n      operationId: onboarding_ml_app_profiles_ml_app_profile_id_delete\n      parameters:\n      - description: MLApp profile identifier\n        in: path\n        name: mlAppProfileId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Delete an existing MLApp profile\n      tags:\n      - MLApp profiles\n      x-openapi-router-controller: mcenter_server_api.controllers.ml_app_profiles_controller\n    get:\n      operationId: onboarding_ml_app_profiles_ml_app_profile_id_get\n      parameters:\n      - description: MLApp profile identifier\n        in: path\n        name: mlAppProfileId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MLAppProfile'\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Get specific MLApp profile\n      tags:\n      - MLApp profiles\n      x-openapi-router-controller: mcenter_server_api.controllers.ml_app_profiles_controller\n    put:\n      operationId: onboarding_ml_app_profiles_ml_app_profile_id_put\n      parameters:\n      - description: MLApp profile identifier\n        in: path\n        name: mlAppProfileId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MLAppProfile'\n        description: MLApp profile detail configuration\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MLAppProfile'\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Update an existing MLApp profile\n      tags:\n      - MLApp profiles\n      x-openapi-router-controller: mcenter_server_api.controllers.ml_app_profiles_controller\n  /onboarding/pipelinePatterns:\n    get:\n      operationId: onboarding_pipeline_patterns_get\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PipelinePattern'\n                type: array\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Get list of all pipeline patterns\n      tags:\n      - pipeline patterns\n      x-openapi-router-controller: mcenter_server_api.controllers.pipeline_patterns_controller\n    post:\n      operationId: onboarding_pipeline_patterns_post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PipelinePattern'\n        description: Pipeline detail description\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelinePattern'\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Create a new pipeline pattern\n      tags:\n      - pipeline patterns\n      x-openapi-router-controller: mcenter_server_api.controllers.pipeline_patterns_controller\n  /onboarding/pipelinePatterns/{pipelinePatternId}:\n    delete:\n      operationId: onboarding_pipeline_patterns_pipeline_pattern_id_delete\n      parameters:\n      - description: Pipeline pattern identifier\n        in: path\n        name: pipelinePatternId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Delete an existing pipeline pattern\n      tags:\n      - pipeline patterns\n      x-openapi-router-controller: mcenter_server_api.controllers.pipeline_patterns_controller\n    get:\n      operationId: onboarding_pipeline_patterns_pipeline_pattern_id_get\n      parameters:\n      - description: Pipeline pattern identifier\n        in: path\n        name: pipelinePatternId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelinePattern'\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Get specific pipeline pattern\n      tags:\n      - pipeline patterns\n      x-openapi-router-controller: mcenter_server_api.controllers.pipeline_patterns_controller\n    put:\n      operationId: onboarding_pipeline_patterns_pipeline_pattern_id_put\n      parameters:\n      - description: Pipeline pattern identifier\n        in: path\n        name: pipelinePatternId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PipelinePattern'\n        description: Pipeline pattern detail configuration\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelinePattern'\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Update an existing pipeline pattern\n      tags:\n      - pipeline patterns\n      x-openapi-router-controller: mcenter_server_api.controllers.pipeline_patterns_controller\n  /onboarding/pipelineProfiles:\n    get:\n      operationId: onboarding_pipeline_profiles_get\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PipelineProfile'\n                type: array\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error.\n      summary: Get list of all pipeline profiles\n      tags:\n      - pipeline profiles\n      x-openapi-router-controller: mcenter_server_api.controllers.pipeline_profiles_controller\n    post:\n      operationId: onboarding_pipeline_profiles_post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PipelineProfile'\n        description: Pipeline detail description\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelineProfile'\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Create a new pipeline profile\n      tags:\n      - pipeline profiles\n      x-openapi-router-controller: mcenter_server_api.controllers.pipeline_profiles_controller\n  /onboarding/pipelineProfiles/{pipelineProfileId}:\n    delete:\n      operationId: onboarding_pipeline_profiles_pipeline_profile_id_delete\n      parameters:\n      - description: Pipeline profile identifier\n        in: path\n        name: pipelineProfileId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Delete an existing pipeline profile\n      tags:\n      - pipeline profiles\n      x-openapi-router-controller: mcenter_server_api.controllers.pipeline_profiles_controller\n    get:\n      operationId: onboarding_pipeline_profiles_pipeline_profile_id_get\n      parameters:\n      - description: Pipeline profile identifier\n        in: path\n        name: pipelineProfileId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PipelineProfile'\n                type: array\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error.\n      summary: Get list of pipeline profiles\n      tags:\n      - pipeline profiles\n      x-openapi-router-controller: mcenter_server_api.controllers.pipeline_profiles_controller\n    put:\n      operationId: onboarding_pipeline_profiles_pipeline_profile_id_put\n      parameters:\n      - description: Pipeline profile identifier\n        in: path\n        name: pipelineProfileId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PipelineProfile'\n        description: Pipeline profile detail configuration\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelineProfile'\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Update an existing pipeline profile\n      tags:\n      - pipeline profiles\n      x-openapi-router-controller: mcenter_server_api.controllers.pipeline_profiles_controller\n  /reports:\n    get:\n      operationId: reports_get\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Report'\n                type: array\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Extract business report\n      tags:\n      - reports\n      x-openapi-router-controller: mcenter_server_api.controllers.reports_controller\n  /roles:\n    get:\n      operationId: roles_get\n      responses:\n        200:\n          content:\n            '*/*':\n              schema:\n                items:\n                  $ref: '#/components/schemas/Role'\n                type: array\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Get list of roles\n      tags:\n      - roles\n      x-openapi-router-controller: mcenter_server_api.controllers.roles_controller\n    post:\n      operationId: roles_post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Role'\n        description: Role detail description\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Register an role\n      tags:\n      - roles\n      x-openapi-router-controller: mcenter_server_api.controllers.roles_controller\n  /roles/{roleId}:\n    delete:\n      operationId: roles_role_id_delete\n      parameters:\n      - description: Role identifier\n        in: path\n        name: roleId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Deregister an role\n      tags:\n      - roles\n      x-openapi-router-controller: mcenter_server_api.controllers.roles_controller\n    get:\n      operationId: roles_role_id_get\n      parameters:\n      - description: Role identifier\n        in: path\n        name: roleId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: List details of specific role\n      tags:\n      - roles\n      x-openapi-router-controller: mcenter_server_api.controllers.roles_controller\n    put:\n      operationId: roles_role_id_put\n      parameters:\n      - description: Role identifier\n        in: path\n        name: roleId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Role'\n        description: Update role object\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Update role information\n      tags:\n      - roles\n      x-openapi-router-controller: mcenter_server_api.controllers.roles_controller\n  /settings/buildManifest:\n    get:\n      operationId: settings_build_manifest_get\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n  /settings/globalParameters:\n    get:\n      operationId: settings_global_parameters_get\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n  /sourcecontrol/credentials:\n    get:\n      operationId: sourcecontrol_credentials_get\n      responses:\n        200:\n          content: {}\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n    post:\n      operationId: sourcecontrol_credentials_post\n      responses:\n        200:\n          content: {}\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n  /sourcecontrol/credentials/{name}:\n    delete:\n      operationId: sourcecontrol_credentials_name_delete\n      parameters:\n      - description: Source control credential name\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n    get:\n      operationId: sourcecontrol_credentials_name_get\n      parameters:\n      - description: Source control credential name\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n  /sourcecontrol/repos:\n    get:\n      operationId: sourcecontrol_repos_get\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Repo'\n                type: array\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Get list of all registered repositories\n      tags:\n      - repository\n      x-openapi-router-controller: mcenter_server_api.controllers.repository_controller\n    post:\n      operationId: sourcecontrol_repos_post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Repo'\n        description: Repository details\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Repo'\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Register a repository\n      tags:\n      - repository\n      x-openapi-router-controller: mcenter_server_api.controllers.repository_controller\n  /sourcecontrol/repos/{repoId}:\n    delete:\n      operationId: sourcecontrol_repos_repo_id_delete\n      parameters:\n      - description: Source control repository identifier\n        in: path\n        name: repoId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n    get:\n      operationId: sourcecontrol_repos_repo_id_get\n      parameters:\n      - description: Source control repository identifier\n        in: path\n        name: repoId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n    put:\n      operationId: sourcecontrol_repos_repo_id_put\n      parameters:\n      - description: Source control repository identifier\n        in: path\n        name: repoId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n  /sourcecontrol/repos/{repoId}/refs:\n    get:\n      operationId: sourcecontrol_repos_repo_id_refs_get\n      parameters:\n      - description: Source control repository identifier\n        in: path\n        name: repoId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n  /stats:\n    get:\n      operationId: stats_get\n      responses:\n        200:\n          content: {}\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      x-openapi-router-controller: mcenter_server_api.controllers.default_controller\n  /timelineCaptures:\n    get:\n      operationId: timeline_captures_get\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/TimelineCapture'\n                type: array\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Get list of all timeline captures\n      tags:\n      - timeline captures\n      x-openapi-router-controller: mcenter_server_api.controllers.timeline_captures_controller\n    post:\n      operationId: timeline_captures_post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TimelineCapture'\n        description: Timeline capture details\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimelineCapture'\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Create a timeline capture\n      tags:\n      - timeline captures\n      x-openapi-router-controller: mcenter_server_api.controllers.timeline_captures_controller\n  /timelineCaptures/{timelineCaptureId}:\n    delete:\n      operationId: timeline_captures_timeline_capture_id_delete\n      parameters:\n      - description: Timeline capture identifier\n        in: path\n        name: timelineCaptureId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Delete a timeline capture\n      tags:\n      - timeline captures\n      x-openapi-router-controller: mcenter_server_api.controllers.timeline_captures_controller\n    get:\n      operationId: timeline_captures_timeline_capture_id_get\n      parameters:\n      - description: Timeline capture identifier\n        in: path\n        name: timelineCaptureId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimelineCapture'\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Return details of specific timeline capture\n      tags:\n      - timeline captures\n      x-openapi-router-controller: mcenter_server_api.controllers.timeline_captures_controller\n  /timelineCaptures/{timelineCaptureId}/download:\n    get:\n      operationId: timeline_captures_timeline_capture_id_download_get\n      parameters:\n      - description: Timeline capture identifier\n        in: path\n        name: timelineCaptureId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: timeline capture tar file\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Download specific model\n      tags:\n      - timeline captures\n      x-openapi-router-controller: mcenter_server_api.controllers.timeline_captures_controller\n  /timelineCaptures/{timelineCaptureId}/prepare:\n    post:\n      operationId: timeline_captures_timeline_capture_id_prepare_post\n      parameters:\n      - description: Timeline capture identifier\n        in: path\n        name: timelineCaptureId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Prepare timeline capture for download\n      tags:\n      - timeline captures\n      x-openapi-router-controller: mcenter_server_api.controllers.timeline_captures_controller\n  /timelineCaptures/{timelineCaptureId}/prepareStatus:\n    get:\n      operationId: timeline_captures_timeline_capture_id_prepare_status_get\n      parameters:\n      - description: Timeline capture identifier\n        in: path\n        name: timelineCaptureId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_2'\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Return status of timeline capture for download\n      tags:\n      - timeline captures\n      x-openapi-router-controller: mcenter_server_api.controllers.timeline_captures_controller\n  /users:\n    get:\n      operationId: users_get\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/User'\n                type: array\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Get list of users\n      tags:\n      - users\n      x-openapi-router-controller: mcenter_server_api.controllers.users_controller\n    post:\n      operationId: users_post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n        description: User detail description\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: OK\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Create a new user\n      tags:\n      - users\n      x-openapi-router-controller: mcenter_server_api.controllers.users_controller\n  /users/{userId}:\n    delete:\n      operationId: users_user_id_delete\n      parameters:\n      - description: User identifier\n        in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content: {}\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Deregister an user\n      tags:\n      - users\n      x-openapi-router-controller: mcenter_server_api.controllers.users_controller\n    get:\n      operationId: users_user_id_get\n      parameters:\n      - description: User identifier\n        in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: List details of specific user\n      tags:\n      - users\n      x-openapi-router-controller: mcenter_server_api.controllers.users_controller\n    put:\n      operationId: users_user_id_put\n      parameters:\n      - description: User identifier\n        in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n        description: Update user object\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: OK\n        404:\n          content: {}\n          description: Not found\n        500:\n          content: {}\n          description: Internal Server error\n      summary: Update user information\n      tags:\n      - users\n      x-openapi-router-controller: mcenter_server_api.controllers.users_controller\ncomponents:\n  parameters:\n    repoId:\n      description: Source control repository identifier\n      in: path\n      name: repoId\n      required: true\n      schema:\n        type: string\n    agentId:\n      description: Agent identifier\n      in: path\n      name: agentId\n      required: true\n      schema:\n        type: string\n    modelId:\n      description: Model identifier\n      in: path\n      name: modelId\n      required: true\n      schema:\n        type: string\n    roleId:\n      description: Role identifier\n      in: path\n      name: roleId\n      required: true\n      schema:\n        type: string\n    groupId:\n      description: Group identifier\n      in: path\n      name: groupId\n      required: true\n      schema:\n        type: string\n    mlAppProfileId:\n      description: MLApp profile identifier\n      in: path\n      name: mlAppProfileId\n      required: true\n      schema:\n        type: string\n    timelineCaptureId:\n      description: Timeline capture identifier\n      in: path\n      name: timelineCaptureId\n      required: true\n      schema:\n        type: string\n    pipelineProfileId:\n      description: Pipeline profile identifier\n      in: path\n      name: pipelineProfileId\n      required: true\n      schema:\n        type: string\n    mlAppInstanceId:\n      description: MLApp instance identifier\n      in: path\n      name: mlAppInstanceId\n      required: true\n      schema:\n        type: string\n    pipelinePatternId:\n      description: Pipeline pattern identifier\n      in: path\n      name: pipelinePatternId\n      required: true\n      schema:\n        type: string\n    userId:\n      description: User identifier\n      in: path\n      name: userId\n      required: true\n      schema:\n        type: string\n    mlAppPatternId:\n      description: MLApp pattern identifier\n      in: path\n      name: mlAppPatternId\n      required: true\n      schema:\n        type: string\n    name:\n      description: Source control credential name\n      in: path\n      name: name\n      required: true\n      schema:\n        type: string\n  schemas:\n    IntervalChart:\n      example:\n        graphType: graphType\n        legend: legend\n        creationTimes:\n        - key: 0\n        - key: 0\n      properties:\n        creationTimes:\n          items:\n            additionalProperties:\n              type: integer\n            type: object\n          type: array\n        graphType:\n          type: string\n        legend:\n          type: string\n      type: object\n    Group:\n      example:\n        createdBy: createdBy\n        created: 0\n        name: name\n        id: id\n        workflows:\n        - '{}'\n        - '{}'\n        agentSet:\n        - '{}'\n        - '{}'\n        agents:\n        - agents\n        - agents\n      properties:\n        agentSet:\n          items:\n            type: object\n          type: array\n        agents:\n          items:\n            type: string\n          type: array\n        created:\n          format: int64\n          minimum: 0\n          readOnly: true\n          type: integer\n        createdBy:\n          readOnly: true\n          type: string\n        id:\n          readOnly: true\n          type: string\n        name:\n          type: string\n        workflows:\n          items:\n            type: object\n          type: array\n      type: object\n    User:\n      example:\n        lastName: lastName\n        avatarURL: avatarURL\n        created: 0\n        accountType: accountType\n        authMode: authMode\n        firstName: firstName\n        password: password\n        roleIds:\n        - roleIds\n        - roleIds\n        createdBy: createdBy\n        name: name\n        id: id\n        email: email\n        contactNo: contactNo\n        username: username\n      properties:\n        accountType:\n          type: string\n        authMode:\n          type: string\n        avatarURL:\n          type: string\n        contactNo:\n          type: string\n        created:\n          format: int64\n          minimum: 0\n          readOnly: true\n          type: integer\n        createdBy:\n          readOnly: true\n          type: string\n        email:\n          type: string\n        firstName:\n          type: string\n        id:\n          readOnly: true\n          type: string\n        lastName:\n          type: string\n        name:\n          type: string\n        password:\n          type: string\n        roleIds:\n          items:\n            type: string\n          type: array\n        username:\n          type: string\n      required:\n      - username\n      type: object\n    Role_permissions:\n      example:\n        map:\n          Model: 6\n          ION Pattern: 1\n          Sandbox ION Instance: 5\n          Component: 5\n          Production ION Instance: 2\n          Profile: 7\n          Pipeline: 9\n      properties:\n        map:\n          $ref: '#/components/schemas/Role_permissions_map'\n    MLAppProfile_workflow:\n      example:\n        parent: parent\n        children: children\n        workflowNodeType: workflowNodeType\n        restServerPort: 6\n        parallelism: 1\n        pipelineMode: pipelineMode\n        id: id\n        isVisible: true\n        pipelineType: pipelineType\n        pipelineAgentSet:\n          agentId: agentId\n          pipelineProfileId: pipelineProfileId\n        pipelinePatternId: pipelinePatternId\n        cronSchedule: cronSchedule\n      properties:\n        parent:\n          type: string\n        children:\n          type: string\n        workflowNodeType:\n          type: string\n        restServerPort:\n          type: integer\n        parallelism:\n          type: integer\n        pipelineMode:\n          type: string\n        id:\n          type: string\n        isVisible:\n          type: boolean\n        pipelineType:\n          type: string\n        pipelineAgentSet:\n          $ref: '#/components/schemas/MLAppProfile_pipelineAgentSet'\n        pipelinePatternId:\n          type: string\n        cronSchedule:\n          type: string\n    Dashboard_ionHealthInfo:\n      example:\n        pipeline: pipeline\n        ionNodeId: ionNodeId\n        host: host\n        location: location\n        error: error\n      properties:\n        pipeline:\n          type: string\n        ionNodeId:\n          type: string\n        host:\n          type: string\n        location:\n          type: string\n        error:\n          type: string\n    Dashboard:\n      example:\n        ionHealthInfo:\n        - pipeline: pipeline\n          ionNodeId: ionNodeId\n          host: host\n          location: location\n          error: error\n        - pipeline: pipeline\n          ionNodeId: ionNodeId\n          host: host\n          location: location\n          error: error\n        pendingModels: 2\n        totalSamplesProcessed: 4\n        ionInstance: '{}'\n        avgLatency: 6\n        totalPredictions: 2\n        avgInferenceTime: 0\n        isMLHealthy: true\n        avgTrainingTime: 1\n        dataAlerts: 5\n        enableHealth: true\n        operationMode: operationMode\n        totalDataProcessed: 7\n        totalModelsProduced: 9\n        mlAlerts: 5\n        isSystemHealthy: true\n        totalModelsUpdated: 3\n        status: true\n      properties:\n        avgInferenceTime:\n          format: int64\n          type: integer\n        avgLatency:\n          format: int64\n          type: integer\n        avgTrainingTime:\n          format: int64\n          type: integer\n        dataAlerts:\n          format: int64\n          type: integer\n        enableHealth:\n          type: boolean\n        ionHealthInfo:\n          items:\n            $ref: '#/components/schemas/Dashboard_ionHealthInfo'\n          type: array\n        ionInstance:\n          properties: {}\n          type: object\n        isMLHealthy:\n          type: boolean\n        isSystemHealthy:\n          type: boolean\n        mlAlerts:\n          format: int64\n          type: integer\n        operationMode:\n          type: string\n        pendingModels:\n          format: int64\n          type: integer\n        status:\n          type: boolean\n        totalDataProcessed:\n          format: int64\n          type: integer\n        totalModelsProduced:\n          format: int64\n          type: integer\n        totalModelsUpdated:\n          format: int64\n          type: integer\n        totalPredictions:\n          format: int64\n          type: integer\n        totalSamplesProcessed:\n          format: int64\n          type: integer\n      type: object\n    ModelReview:\n      example:\n        action: action\n        description: description\n        mlAppInstanceId: mlAppInstanceId\n      properties:\n        action:\n          type: string\n        description:\n          type: string\n        mlAppInstanceId:\n          type: string\n      type: object\n    ModelSource:\n      example:\n        mode: mode\n        details:\n          createdTime: 0\n          description: description\n          user: user\n      properties:\n        details:\n          $ref: '#/components/schemas/ModelSource_details'\n        mode:\n          type: string\n      type: object\n    ModelSource_details:\n      example:\n        createdTime: 0\n        description: description\n        user: user\n      properties:\n        createdTime:\n          type: integer\n        description:\n          type: string\n        user:\n          type: string\n    MLAppPattern:\n      example:\n        enableHealth: true\n        isProfile: true\n        canaryThreshold: 0\n        workflow:\n        - parent: parent\n          children: children\n          workflowNodeType: workflowNodeType\n          restServerPort: 5\n          parallelism: 2\n          pipelineMode: pipelineMode\n          id: id\n          isVisible: true\n          pipelineType: pipelineType\n          pipelinePatternId: pipelinePatternId\n          cronSchedule: cronSchedule\n        - parent: parent\n          children: children\n          workflowNodeType: workflowNodeType\n          restServerPort: 5\n          parallelism: 2\n          pipelineMode: pipelineMode\n          id: id\n          isVisible: true\n          pipelineType: pipelineType\n          pipelinePatternId: pipelinePatternId\n          cronSchedule: cronSchedule\n        createdBy: createdBy\n        created: 6\n        modelPolicy: modelPolicy\n        runNow: true\n        name: name\n        runIterations: 5\n        globalThreshold: 1\n        id: id\n      properties:\n        canaryThreshold:\n          format: float\n          type: integer\n        created:\n          format: float\n          readOnly: true\n          type: integer\n        createdBy:\n          readOnly: true\n          type: string\n        enableHealth:\n          type: boolean\n        globalThreshold:\n          format: float\n          type: integer\n        id:\n          readOnly: true\n          type: string\n        isProfile:\n          type: boolean\n        modelPolicy:\n          type: string\n        name:\n          type: string\n        runIterations:\n          type: integer\n        runNow:\n          type: boolean\n        workflow:\n          items:\n            $ref: '#/components/schemas/MLAppPattern_workflow'\n          type: array\n      type: object\n    PipelineProfile:\n      example:\n        isProfile: true\n        pipeline: pipeline\n        createdBy: createdBy\n        defaultModelId: defaultModelId\n        created: 0\n        name: name\n        engineType: engineType\n        isUserDefined: true\n        pipelinePatternName: pipelinePatternName\n        id: id\n        isVisible: true\n        pipelinePatternId: pipelinePatternId\n      properties:\n        created:\n          format: int64\n          minimum: 0\n          readOnly: true\n          type: integer\n        createdBy:\n          readOnly: true\n          type: string\n        defaultModelId:\n          type: string\n        engineType:\n          type: string\n        id:\n          readOnly: true\n          type: string\n        isProfile:\n          type: boolean\n        isUserDefined:\n          type: boolean\n        isVisible:\n          type: boolean\n        name:\n          type: string\n        pipeline:\n          type: string\n        pipelinePatternId:\n          type: string\n        pipelinePatternName:\n          type: string\n      type: object\n    DataComparisonView_series:\n      example:\n        mode: mode\n        legend: legend\n        dbName: dbName\n        query: query\n        host: host\n      properties:\n        mode:\n          type: string\n        legend:\n          type: string\n        dbName:\n          type: string\n        query:\n          type: string\n        host:\n          type: string\n    ChartView_mlStat:\n      example:\n        graphType: graphType\n        name: name\n        id: id\n        category: category\n      properties:\n        graphType:\n          type: string\n        name:\n          type: string\n        id:\n          type: string\n        category:\n          type: string\n    inline_response_200:\n      example:\n        sandboxAlerts:\n        - - modelId: modelId\n            created: 0\n            pipelineInstanceId: pipelineInstanceId\n            createdTimestamp: 1\n            description: description\n            clearedTimestamp: 0\n            deletedTimestamp: 5\n            createdBy: createdBy\n            host: host\n            name: name\n            raiseAlert: true\n            id: id\n            workflowRunId: workflowRunId\n          - modelId: modelId\n            created: 0\n            pipelineInstanceId: pipelineInstanceId\n            createdTimestamp: 1\n            description: description\n            clearedTimestamp: 0\n            deletedTimestamp: 5\n            createdBy: createdBy\n            host: host\n            name: name\n            raiseAlert: true\n            id: id\n            workflowRunId: workflowRunId\n        - - modelId: modelId\n            created: 0\n            pipelineInstanceId: pipelineInstanceId\n            createdTimestamp: 1\n            description: description\n            clearedTimestamp: 0\n            deletedTimestamp: 5\n            createdBy: createdBy\n            host: host\n            name: name\n            raiseAlert: true\n            id: id\n            workflowRunId: workflowRunId\n          - modelId: modelId\n            created: 0\n            pipelineInstanceId: pipelineInstanceId\n            createdTimestamp: 1\n            description: description\n            clearedTimestamp: 0\n            deletedTimestamp: 5\n            createdBy: createdBy\n            host: host\n            name: name\n            raiseAlert: true\n            id: id\n            workflowRunId: workflowRunId\n        productionAlerts:\n        - - modelId: modelId\n            created: 0\n            pipelineInstanceId: pipelineInstanceId\n            createdTimestamp: 1\n            description: description\n            clearedTimestamp: 0\n            deletedTimestamp: 5\n            createdBy: createdBy\n            host: host\n            name: name\n            raiseAlert: true\n            id: id\n            workflowRunId: workflowRunId\n          - modelId: modelId\n            created: 0\n            pipelineInstanceId: pipelineInstanceId\n            createdTimestamp: 1\n            description: description\n            clearedTimestamp: 0\n            deletedTimestamp: 5\n            createdBy: createdBy\n            host: host\n            name: name\n            raiseAlert: true\n            id: id\n            workflowRunId: workflowRunId\n        - - modelId: modelId\n            created: 0\n            pipelineInstanceId: pipelineInstanceId\n            createdTimestamp: 1\n            description: description\n            clearedTimestamp: 0\n            deletedTimestamp: 5\n            createdBy: createdBy\n            host: host\n            name: name\n            raiseAlert: true\n            id: id\n            workflowRunId: workflowRunId\n          - modelId: modelId\n            created: 0\n            pipelineInstanceId: pipelineInstanceId\n            createdTimestamp: 1\n            description: description\n            clearedTimestamp: 0\n            deletedTimestamp: 5\n            createdBy: createdBy\n            host: host\n            name: name\n            raiseAlert: true\n            id: id\n            workflowRunId: workflowRunId\n      properties:\n        sandboxAlerts:\n          items:\n            items:\n              $ref: '#/components/schemas/Event'\n            type: array\n          type: array\n        productionAlerts:\n          items:\n            items:\n              $ref: '#/components/schemas/Event'\n            type: array\n          type: array\n    DataView_ion_status:\n      example:\n        createdBy: createdBy\n        name: name\n        createdTime: 5\n        status: status\n      properties:\n        createdBy:\n          type: string\n        name:\n          type: string\n        createdTime:\n          format: int64\n          type: integer\n        status:\n          type: string\n    ModelStatus:\n      example:\n        approvalDetails:\n        - '{}'\n        - '{}'\n        modelId: modelId\n        rejectionDetails:\n        - '{}'\n        - '{}'\n        user: user\n      properties:\n        approvalDetails:\n          items:\n            properties: {}\n            type: object\n          type: array\n        modelId:\n          type: string\n        rejectionDetails:\n          items:\n            properties: {}\n            type: object\n          type: array\n        user:\n          type: string\n      type: object\n    Agent:\n      example:\n        address: address\n        createdBy: createdBy\n        created: 0\n        id: id\n      properties:\n        address:\n          type: string\n        created:\n          format: int64\n          minimum: 0\n          readOnly: true\n          type: integer\n        createdBy:\n          readOnly: true\n          type: string\n        id:\n          readOnly: true\n          type: string\n      required:\n      - address\n      type: object\n    DataComparisonView:\n      example:\n        series:\n        - mode: mode\n          legend: legend\n          dbName: dbName\n          query: query\n          host: host\n        - mode: mode\n          legend: legend\n          dbName: dbName\n          query: query\n          host: host\n        name: name\n        attribute: attribute\n        type: type\n        similarityScore: 0.8008282\n      properties:\n        attribute:\n          type: string\n        name:\n          type: string\n        series:\n          items:\n            $ref: '#/components/schemas/DataComparisonView_series'\n          type: array\n        similarityScore:\n          format: float\n          type: number\n        type:\n          type: string\n      type: object\n    ModelStat:\n      example:\n        data: data\n        id: id\n        type: type\n      properties:\n        data:\n          type: string\n        id:\n          type: string\n        type:\n          type: string\n      type: object\n    ModelUsage:\n      example:\n        pipelineName: pipelineName\n        ionNodeId: ionNodeId\n        modelId: modelId\n        ionId: ionId\n        ionName: ionName\n        usageTimes:\n          start: 5\n          end: 5\n        mlAlerts: 6\n        user: user\n        dataAlerts: 0\n        predictions: 1\n        pipelineId: pipelineId\n      properties:\n        dataAlerts:\n          format: int64\n          type: integer\n        ionId:\n          type: string\n        ionName:\n          type: string\n        ionNodeId:\n          type: string\n        mlAlerts:\n          format: int64\n          type: integer\n        modelId:\n          type: string\n        pipelineId:\n          type: string\n        pipelineName:\n          type: string\n        predictions:\n          format: int64\n          type: integer\n        usageTimes:\n          $ref: '#/components/schemas/ModelUsage_usageTimes'\n        user:\n          type: string\n      type: object\n    Report:\n      example:\n        ionMetrics:\n          QoQ:\n            graphType: graphType\n            legend: legend\n            creationTimes:\n            - key: 0\n            - key: 0\n          MoM:\n            graphType: graphType\n            legend: legend\n            creationTimes:\n            - key: 0\n            - key: 0\n          WoW:\n            graphType: graphType\n            legend: legend\n            creationTimes:\n            - key: 0\n            - key: 0\n      properties:\n        ionMetrics:\n          $ref: '#/components/schemas/Report_ionMetrics'\n      type: object\n    MLAppProfile_pipelineAgentSet:\n      example:\n        agentId: agentId\n        pipelineProfileId: pipelineProfileId\n      properties:\n        agentId:\n          type: string\n        pipelineProfileId:\n          type: string\n    Role_permissions_map:\n      example:\n        Model: 6\n        ION Pattern: 1\n        Sandbox ION Instance: 5\n        Component: 5\n        Production ION Instance: 2\n        Profile: 7\n        Pipeline: 9\n      properties:\n        Model:\n          type: integer\n        ION Pattern:\n          type: integer\n        Sandbox ION Instance:\n          type: integer\n        Component:\n          type: integer\n        Production ION Instance:\n          type: integer\n        Profile:\n          type: integer\n        Pipeline:\n          type: integer\n    DataView_ion:\n      example:\n        pattern:\n          isProfile: true\n          workflow:\n          - parent: parent\n            children: children\n            workflowNodeType: workflowNodeType\n            restServerPort: 6\n            parallelism: 1\n            pipelineMode: pipelineMode\n            id: id\n            isVisible: true\n            pipelineType: pipelineType\n            pipelineAgentSet:\n              agentId: agentId\n              pipelineProfileId: pipelineProfileId\n            pipelinePatternId: pipelinePatternId\n            cronSchedule: cronSchedule\n          - parent: parent\n            children: children\n            workflowNodeType: workflowNodeType\n            restServerPort: 6\n            parallelism: 1\n            pipelineMode: pipelineMode\n            id: id\n            isVisible: true\n            pipelineType: pipelineType\n            pipelineAgentSet:\n              agentId: agentId\n              pipelineProfileId: pipelineProfileId\n            pipelinePatternId: pipelinePatternId\n            cronSchedule: cronSchedule\n          mlAppPatternId: mlAppPatternId\n          mlAppPatternName: mlAppPatternName\n          version: version\n        status:\n          createdBy: createdBy\n          name: name\n          createdTime: 5\n          status: status\n      properties:\n        pattern:\n          $ref: '#/components/schemas/MLAppProfile'\n        status:\n          $ref: '#/components/schemas/DataView_ion_status'\n    HealthView:\n      example:\n        kpi:\n          dbName: dbName\n          query: query\n          name: name\n          type: type\n        ionID: ionID\n        start: 1\n        isMLHealthy: true\n        bargraphs:\n        - series:\n          - mode: mode\n            legend: legend\n            dbName: dbName\n            query: query\n            host: host\n          - mode: mode\n            legend: legend\n            dbName: dbName\n            query: query\n            host: host\n          name: name\n          attribute: attribute\n          type: type\n          similarityScore: 0.8008282\n        - series:\n          - mode: mode\n            legend: legend\n            dbName: dbName\n            query: query\n            host: host\n          - mode: mode\n            legend: legend\n            dbName: dbName\n            query: query\n            host: host\n          name: name\n          attribute: attribute\n          type: type\n          similarityScore: 0.8008282\n        end: 6\n        heatmaps:\n        - dbName: dbName\n          query: query\n          name: name\n          attributes:\n          - attributes\n          - attributes\n          type: type\n        - dbName: dbName\n          query: query\n          name: name\n          attributes:\n          - attributes\n          - attributes\n          type: type\n        events:\n          dbName: dbName\n          query: query\n          name: name\n          type: type\n      properties:\n        bargraphs:\n          items:\n            $ref: '#/components/schemas/DataComparisonView'\n          type: array\n        end:\n          format: int64\n          type: integer\n        events:\n          $ref: '#/components/schemas/HealthView_events'\n        heatmaps:\n          items:\n            $ref: '#/components/schemas/HeatmapView'\n          type: array\n        ionID:\n          type: string\n        isMLHealthy:\n          type: boolean\n        kpi:\n          $ref: '#/components/schemas/HealthView_events'\n        start:\n          format: int64\n          type: integer\n      type: object\n    ChartView:\n      example:\n        dbName: dbName\n        query: query\n        mlStat:\n          graphType: graphType\n          name: name\n          id: id\n          category: category\n        id: id\n        title: title\n        configurable: true\n      properties:\n        configurable:\n          type: boolean\n        dbName:\n          type: string\n        id:\n          type: string\n        mlStat:\n          $ref: '#/components/schemas/ChartView_mlStat'\n        query:\n          type: string\n        title:\n          type: string\n      type: object\n    Role:\n      example:\n        createdBy: createdBy\n        created: 0\n        permissions:\n          map:\n            Model: 6\n            ION Pattern: 1\n            Sandbox ION Instance: 5\n            Component: 5\n            Production ION Instance: 2\n            Profile: 7\n            Pipeline: 9\n        name: name\n        description: description\n        id: id\n      properties:\n        created:\n          format: int64\n          minimum: 0\n          readOnly: true\n          type: integer\n        createdBy:\n          readOnly: true\n          type: string\n        description:\n          type: string\n        id:\n          readOnly: true\n          type: string\n        name:\n          type: string\n        permissions:\n          $ref: '#/components/schemas/Role_permissions'\n      required:\n      - description\n      - name\n      type: object\n    DataView:\n      example:\n        agentId: agentId\n        charts:\n        - dbName: dbName\n          query: query\n          mlStat:\n            graphType: graphType\n            name: name\n            id: id\n            category: category\n          id: id\n          title: title\n          configurable: true\n        - dbName: dbName\n          query: query\n          mlStat:\n            graphType: graphType\n            name: name\n            id: id\n            category: category\n          id: id\n          title: title\n          configurable: true\n        ionNodeId: ionNodeId\n        ionID: ionID\n        start: 5\n        ion:\n          pattern:\n            isProfile: true\n            workflow:\n            - parent: parent\n              children: children\n              workflowNodeType: workflowNodeType\n              restServerPort: 6\n              parallelism: 1\n              pipelineMode: pipelineMode\n              id: id\n              isVisible: true\n              pipelineType: pipelineType\n              pipelineAgentSet:\n                agentId: agentId\n                pipelineProfileId: pipelineProfileId\n              pipelinePatternId: pipelinePatternId\n              cronSchedule: cronSchedule\n            - parent: parent\n              children: children\n              workflowNodeType: workflowNodeType\n              restServerPort: 6\n              parallelism: 1\n              pipelineMode: pipelineMode\n              id: id\n              isVisible: true\n              pipelineType: pipelineType\n              pipelineAgentSet:\n                agentId: agentId\n                pipelineProfileId: pipelineProfileId\n              pipelinePatternId: pipelinePatternId\n              cronSchedule: cronSchedule\n            mlAppPatternId: mlAppPatternId\n            mlAppPatternName: mlAppPatternName\n            version: version\n          status:\n            createdBy: createdBy\n            name: name\n            createdTime: 5\n            status: status\n        isMLHealthy: true\n        end: 0\n        events:\n          dbName: dbName\n          query: query\n          name: name\n          type: type\n        pipelineId: pipelineId\n      properties:\n        agentId:\n          type: string\n        charts:\n          items:\n            $ref: '#/components/schemas/ChartView'\n          type: array\n        end:\n          format: int64\n          type: integer\n        events:\n          $ref: '#/components/schemas/HealthView_events'\n        ion:\n          $ref: '#/components/schemas/DataView_ion'\n        ionID:\n          type: string\n        ionNodeId:\n          type: string\n        isMLHealthy:\n          type: boolean\n        pipelineId:\n          type: string\n        start:\n          format: int64\n          type: integer\n      type: object\n    PipelinePattern:\n      example:\n        isProfile: true\n        pipeline: pipeline\n        createdBy: createdBy\n        defaultModelId: defaultModelId\n        created: 0\n        name: name\n        engineType: engineType\n        isUserDefined: true\n        id: id\n        isVisible: true\n      properties:\n        created:\n          format: int64\n          minimum: 0\n          readOnly: true\n          type: integer\n        createdBy:\n          readOnly: true\n          type: string\n        defaultModelId:\n          type: string\n        engineType:\n          type: string\n        id:\n          readOnly: true\n          type: string\n        isProfile:\n          type: boolean\n        isUserDefined:\n          type: boolean\n        isVisible:\n          type: boolean\n        name:\n          type: string\n        pipeline:\n          type: string\n      type: object\n    HeatmapView:\n      example:\n        dbName: dbName\n        query: query\n        name: name\n        attributes:\n        - attributes\n        - attributes\n        type: type\n      properties:\n        attributes:\n          items:\n            type: string\n          type: array\n        dbName:\n          type: string\n        name:\n          type: string\n        query:\n          type: string\n        type:\n          type: string\n      type: object\n    MLAppProfile:\n      example:\n        isProfile: true\n        workflow:\n        - parent: parent\n          children: children\n          workflowNodeType: workflowNodeType\n          restServerPort: 6\n          parallelism: 1\n          pipelineMode: pipelineMode\n          id: id\n          isVisible: true\n          pipelineType: pipelineType\n          pipelineAgentSet:\n            agentId: agentId\n            pipelineProfileId: pipelineProfileId\n          pipelinePatternId: pipelinePatternId\n          cronSchedule: cronSchedule\n        - parent: parent\n          children: children\n          workflowNodeType: workflowNodeType\n          restServerPort: 6\n          parallelism: 1\n          pipelineMode: pipelineMode\n          id: id\n          isVisible: true\n          pipelineType: pipelineType\n          pipelineAgentSet:\n            agentId: agentId\n            pipelineProfileId: pipelineProfileId\n          pipelinePatternId: pipelinePatternId\n          cronSchedule: cronSchedule\n        mlAppPatternId: mlAppPatternId\n        mlAppPatternName: mlAppPatternName\n        version: version\n      properties:\n        isProfile:\n          type: boolean\n        mlAppPatternId:\n          type: string\n        mlAppPatternName:\n          type: string\n        version:\n          type: string\n        workflow:\n          items:\n            $ref: '#/components/schemas/MLAppProfile_workflow'\n          type: array\n      type: object\n    Repo:\n      type: object\n    Report_ionMetrics:\n      example:\n        QoQ:\n          graphType: graphType\n          legend: legend\n          creationTimes:\n          - key: 0\n          - key: 0\n        MoM:\n          graphType: graphType\n          legend: legend\n          creationTimes:\n          - key: 0\n          - key: 0\n        WoW:\n          graphType: graphType\n          legend: legend\n          creationTimes:\n          - key: 0\n          - key: 0\n      properties:\n        QoQ:\n          $ref: '#/components/schemas/IntervalChart'\n        MoM:\n          $ref: '#/components/schemas/IntervalChart'\n        WoW:\n          $ref: '#/components/schemas/IntervalChart'\n    Model:\n      example:\n        modelId: modelId\n        created: 0\n        approvedForIons:\n        - approvedForIons\n        - approvedForIons\n        createdTimestamp: 1\n        format: format\n        clearedTimestamp: 0\n        reviewedBy: reviewedBy\n        modelSize: 5\n        deletedTimestamp: 5\n        createdBy: createdBy\n        rejectedForIons:\n        - rejectedForIons\n        - rejectedForIons\n        host: host\n        name: name\n        id: id\n        state: state\n        stateDescription: stateDescription\n      properties:\n        approvedForIons:\n          items:\n            type: string\n          type: array\n        clearedTimestamp:\n          type: integer\n        created:\n          format: int64\n          minimum: 0\n          readOnly: true\n          type: integer\n        createdBy:\n          readOnly: true\n          type: string\n        createdTimestamp:\n          type: integer\n        deletedTimestamp:\n          type: integer\n        format:\n          type: string\n        host:\n          type: string\n        id:\n          readOnly: true\n          type: string\n        modelId:\n          type: string\n        modelSize:\n          type: integer\n        name:\n          type: string\n        rejectedForIons:\n          items:\n            type: string\n          type: array\n        reviewedBy:\n          type: string\n        state:\n          type: string\n        stateDescription:\n          type: string\n      type: object\n    inline_response_200_1:\n      example:\n        token: token\n      properties:\n        token:\n          type: string\n    MLAppPattern_workflow:\n      example:\n        parent: parent\n        children: children\n        workflowNodeType: workflowNodeType\n        restServerPort: 5\n        parallelism: 2\n        pipelineMode: pipelineMode\n        id: id\n        isVisible: true\n        pipelineType: pipelineType\n        pipelinePatternId: pipelinePatternId\n        cronSchedule: cronSchedule\n      properties:\n        parent:\n          type: string\n        children:\n          type: string\n        workflowNodeType:\n          type: string\n        restServerPort:\n          type: integer\n        parallelism:\n          type: integer\n        pipelineMode:\n          type: string\n        id:\n          type: string\n        isVisible:\n          type: boolean\n        pipelineType:\n          type: string\n        pipelinePatternId:\n          type: string\n        cronSchedule:\n          type: string\n    Event:\n      example:\n        modelId: modelId\n        created: 0\n        pipelineInstanceId: pipelineInstanceId\n        createdTimestamp: 1\n        description: description\n        clearedTimestamp: 0\n        deletedTimestamp: 5\n        createdBy: createdBy\n        host: host\n        name: name\n        raiseAlert: true\n        id: id\n        workflowRunId: workflowRunId\n      properties:\n        clearedTimestamp:\n          type: integer\n        created:\n          format: int64\n          minimum: 0\n          readOnly: true\n          type: integer\n        createdBy:\n          readOnly: true\n          type: string\n        createdTimestamp:\n          type: integer\n        deletedTimestamp:\n          type: integer\n        description:\n          type: string\n        host:\n          type: string\n        id:\n          readOnly: true\n          type: string\n        modelId:\n          type: string\n        name:\n          type: string\n        pipelineInstanceId:\n          type: string\n        raiseAlert:\n          type: boolean\n        workflowRunId:\n          type: string\n      type: object\n    inline_response_200_2:\n      example:\n        status: status\n      properties:\n        status:\n          type: string\n    ModelUsage_usageTimes:\n      example:\n        start: 5\n        end: 5\n      properties:\n        start:\n          format: int64\n          type: integer\n        end:\n          format: int64\n          type: integer\n    TimelineCapture:\n      example:\n        workflowInstance: '{}'\n        createdBy: createdBy\n        created: 0\n        name: name\n        start: 1\n        end: 6\n        id: id\n        workflowInstanceId: workflowInstanceId\n        status: status\n      properties:\n        created:\n          format: int64\n          minimum: 0\n          readOnly: true\n          type: integer\n        createdBy:\n          readOnly: true\n          type: string\n        end:\n          format: int64\n          type: integer\n        id:\n          readOnly: true\n          type: string\n        name:\n          type: string\n        start:\n          format: int64\n          type: integer\n        status:\n          type: string\n        workflowInstance:\n          properties: {}\n          type: object\n        workflowInstanceId:\n          type: string\n      type: object\n    HealthView_events:\n      example:\n        dbName: dbName\n        query: query\n        name: name\n        type: type\n      properties:\n        dbName:\n          type: string\n        query:\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n  securitySchemes:\n    token:\n      description: Cookie-based authentication twisted for swagger 2.0\n      in: header\n      name: Cookie\n      type: apiKey\n",
			"canonicalURL": "/github.com/mlpiper/mlpiper@0fd2b6773f970c831038db47bf4920ada21a5f51/-/blob/mcenter_client/tests/mcenter_server_api/openapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/mlpiper/mlpiper/blob/0fd2b6773f970c831038db47bf4920ada21a5f51/mcenter_client/tests/mcenter_server_api/openapi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/auth/validate\": post: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}