{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/brex.onboarding/openapi.yaml",
			"byteSize": 18117,
			"content": "openapi: 3.0.1\ninfo:\n  title: Onboarding API\n  description: \u003e\n    This is a generated connector for [Brex Onboarding API v0.1](https://developer.brex.com/openapi/onboarding_api/) OpenAPI specification. \n\n    Onboarding APIs allows partners to refer their customers to Brex to streamline the process of creating new accounts \n    for these customers. By submitting information for referrals, it removes the need for customers to enter in this information again.\n  x-ballerina-init-description: \u003e \n    The connector initialization requires setting the API credentials.\n\n    Create a [Brex account](https://www.brex.com/) and obtain tokens by following [this guide](https://developer.brex.com/docs/authentication/).\n  x-ballerina-display:\n    label: brex.onboarding \n    iconPath: \"icon.png\"\n  contact:\n    name: Admin\n    url: https://brex.com\n    email: developer-access@brex.com\n  version: '0.1'\nservers:\n  - url: https://platform.staging.brexapps.com\n    description: 'Staging API (Note: this is not sandbox)'\n  - url: https://platform.brexapis.com\n    description: Production servers\nsecurity:\n  - oAuth2ClientCredentials: []\ntags:\n  - name: Referrals\n    description: \u003e\n\n      The Onboarding API enables partners to submit customer referrals to Brex\n      and receive a customized Brex application url \n\n      with all the partner provided information pre-filled into the application.\n      Partners have visibility into the application\n\n      approval status.\npaths:\n  /v1/referrals:\n    get:\n      tags:\n        - Referrals\n      summary: List referrals\n      description: |\n        Returns referrals created.\n        *Note*: This doesn't include referrals that have expired\n      operationId: listReferralsGet\n      parameters:\n        - name: cursor\n          in: query\n          description: The cursor\n          required: false\n          schema:\n            type: string\n            nullable: true\n      responses:\n        '200':\n          description: listReferralsGet 200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReferralPage'\n        '400':\n          description: Invalid cursor\n        '401':\n          description: Unauthorized\n    post:\n      tags:\n        - Referrals\n      summary: Creates a referral\n      description: \u003e-\n        This creates new referrals. The response will contain an identifier and\n        a unique personalized link to an application flow. Many fields are\n        optional and when they're provided they'll prefill the application flow\n        for Brex.  You should handle and store these references securely as they\n        contain sensitive information about the referral.\n      operationId: createReferralRequestPost\n      parameters: []\n      requestBody:\n        description: Create referral request.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateReferralRequest'\n        required: true\n      responses:\n        '200':\n          description: createReferralRequestPost 200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Referral'\n        '401':\n          description: Unauthorized\n  /v1/referrals/{id}:\n    get:\n      tags:\n        - Referrals\n      summary: Gets a referral by ID\n      description: Returns a referral object by ID if it exists\n      operationId: getReferralGet\n      parameters:\n        - name: id\n          in: path\n          description: Referral ID.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: getReferralGet 200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Referral'\n        '401':\n          description: Unauthorized\n        '404':\n          description: Referral not found\n  /v1/referrals/{id}/document_upload:\n    post:\n      tags:\n        - Referrals\n      summary: Create a new document upload\n      description: \u003e\n        The `url` will be a pre-signed S3 URL to upload the referral doc\n        securely. This URL can only be used for a `PUT` operation and expires 30\n        minutes after its creation. Once your upload is complete, we will use\n        this to prefill the application.\n      operationId: createDocumentPost\n      parameters:\n        - name: id\n          in: path\n          description: Referral ID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Create Document request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDocumentRequest'\n        required: true\n      responses:\n        '200':\n          description: createDocumentPost 200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n        '401':\n          description: Unauthorized\n        '404':\n          description: Referral not found\ncomponents:\n  schemas:\n    Account:\n      required:\n        - created_at\n        - id\n      type: object\n      properties:\n        id:\n          type: string\n          description: Brex cash management account Id.\n        instructions:\n          $ref: '#/components/schemas/Instruction'\n          nullable: true\n        created_at:\n          type: string\n          description: Created date and time.\n          format: date-time\n      description: \u003e-\n        If the application status is APPROVED, array of bank cash management\n        accounts (note there is currently only one account per customer).\n    Address:\n      type: object\n      properties:\n        line1:\n          type: string\n          description: Address line 1, no PO Box.\n          nullable: true\n        line2:\n          type: string\n          description: Address line 2 (e.g., apartment, suite, unit, or building).\n          nullable: true\n        city:\n          type: string\n          description: City, district, suburb, town, or village.\n          nullable: true\n        state:\n          type: string\n          description: \u003e-\n            For US-addressed the 2-letter State abbreviation. For\n            international-addresses the County, Providence, or Region.\n          nullable: true\n        country:\n          type: string\n          description: Two-letter country code (ISO 3166-1 alpha-2).\n          nullable: true\n        postal_code:\n          type: string\n          description: ZIP or postal code.\n          nullable: true\n        phone_number:\n          type: string\n          description: Phone number.\n          nullable: true\n      description: \u003e-\n        Company business address (must be in the US; no PO box or\n        virtual/forwarding addresses allowed).\n    Applicant:\n      required:\n        - email\n        - first_name\n        - last_name\n      type: object\n      properties:\n        last_name:\n          type: string\n          description: Last name of the applying customer.\n        first_name:\n          type: string\n          description: First name of the applying customer.\n        email:\n          type: string\n          description: Business Email of the applying customer.\n          format: email\n      description: Required information about the referred prospect.\n    Application:\n      required:\n        - status\n      type: object\n      description: Application information.\n      properties:\n        status:\n          $ref: '#/components/schemas/ApplicationStatus'\n    ApplicationStatus:\n      type: string\n      description: Application status of a product\n      enum:\n        - NO_ACCOUNT\n        - ACTIVE\n        - REJECTED\n        - CLOSED\n    BeneficialOwner:\n      required:\n        - legal_name\n        - prong\n      type: object\n      properties:\n        legal_name:\n          type: string\n          description: Legal full name.\n        company_relationship:\n            $ref: '#/components/schemas/CompanyRelationship'\n            nullable: true\n        date_of_birth:\n          type: string\n          description: Date of birth.\n          format: date\n          nullable: true\n        identity_document:\n          $ref: '#/components/schemas/IdentityDocument'\n          nullable: true\n        address:\n          $ref: '#/components/schemas/Address'\n          nullable: true\n        prong:\n          $ref: '#/components/schemas/Prong'\n      description: \u003e-\n        Federal law requires us to collect information for anyone who owns 25%\n        or more of the company.\n    Business:\n      type: object\n      properties:\n        legal_name:\n          type: string\n          description: Company legal name.\n          nullable: true\n        incorporation_type:\n          $ref: '#/components/schemas/IncorporationType'\n          nullable: true\n        employer_identification_number:\n          maxLength: 9\n          minLength: 9\n          type: string\n          description: Company Employer Identification Number(EIN).\n          nullable: true\n        website_url:\n          type: string\n          description: Business website (or link to Amazon store for sellers).\n          nullable: true\n        activity_description:\n          type: string\n          description: Brief description of the business activity.\n          nullable: true\n        address:\n          $ref: '#/components/schemas/Address'\n          nullable: true\n        beneficial_owners:\n          type: array\n          description: List of beneficial owners of the company\n          nullable: true\n          items:\n            $ref: '#/components/schemas/BeneficialOwner'\n        alternate_address:\n          $ref: '#/components/schemas/Address'\n          nullable: true\n      description: \u003e\n        Information about the business the application is for.\n    Cash:\n      required:\n        - application\n      type: object\n      properties:\n        accounts:\n          type: array\n          nullable: true\n          description: An array of bank cash management accounts\n          items:\n            $ref: '#/components/schemas/Account'\n        application:\n          $ref: '#/components/schemas/Application'\n      description: Available if customer applied for Brex Cash.\n    CompanyRelationship:\n      type: string\n      description: Relationship of this beneficial owner for this company.\n      enum:\n        - FOUNDER\n        - EXECUTIVE\n        - SENIOR_LEADERSHIP\n        - OTHER\n    ContactPreference:\n      type: string\n      description: \u003e-\n        When set to `EMAIL_OUTBOUND`, Brex will email the referred customer\n        directly to prompt them to create their account rather than rely on the\n        partner to direct the customer to claim the account. If not provided,\n        the partner is responsible to contact the customer and the value\n        defaults to `NO_OUTBOUND`.\n      enum:\n        - NO_OUTBOUND\n        - EMAIL_OUTBOUND\n    CreateDocumentRequest:\n      required:\n        - type\n      type: object\n      properties:\n        type:\n          $ref: '#/components/schemas/DocumentType'\n      description: Request for creating new document upload url.\n    CreateReferralRequest:\n      required:\n        - applicant\n        - referral_code\n      type: object\n      properties:\n        referral_code:\n          type: string\n          description: Partner referral code to attribute this prospect to if they sign up.\n        applicant:\n          $ref: '#/components/schemas/Applicant'\n        business:\n          $ref: '#/components/schemas/Business'\n          nullable: true\n        contact_preference:\n          $ref: '#/components/schemas/ContactPreference'\n          nullable: true\n      description: Submit a new referral to Brex for onboarding.\n    Document:\n      required:\n        - id\n        - uri\n      type: object\n      properties:\n        uri:\n          type: string\n          description: \u003e-\n            This is a presigned S3 link that should be used to attach the\n            document.\n\n            The maximum size accepted for this document is 50 MB\n        id:\n          type: string\n          description: Unique identifier for the document.\n    DocumentType:\n      type: string\n      description: |\n        Type of document being submitted. Allowable types:\n        - ARTICLES_OF_INCORPORATION\n        - IRS_EIN_CONFIRMATION (IRS CP 575 or 147C form)\n        - IRS_EIN_APPLICATION (IRS SS4 form)\n        - CERTIFICATE_GOOD_STANDING\n      enum:\n        - ARTICLES_OF_INCORPORATION\n        - IRS_EIN_CONFIRMATION\n        - IRS_EIN_APPLICATION\n        - CERTIFICATE_GOOD_STANDING\n    DomesticInstruction:\n      required:\n        - account_type\n        - bank_account_number\n        - bank_address\n        - bank_name\n        - bank_routing_number\n        - beneficiary_address\n        - beneficiary_name\n      type: object\n      properties:\n        account_type:\n          type: string\n          description: Account type.\n        bank_account_number:\n          type: string\n          description: Account number.\n        bank_routing_number:\n          type: string\n          description: Routing number.\n        beneficiary_name:\n          type: string\n          description: Beneficiary name.\n        beneficiary_address:\n          type: string\n          description: Beneficiary address.\n        bank_name:\n          type: string\n          description: Bank name.\n        bank_address:\n          type: string\n          description: Bank address.\n      description: Domestic ACH/Wire instructions.\n    IdentityDocument:\n      required:\n        - country\n        - number\n        - type\n      type: object\n      properties:\n        country:\n          type: string\n          description: Country where the identity document was issued.\n        type:\n          $ref: '#/components/schemas/IdentityDocumentType'\n        number:\n          type: string\n          description: US SSN or Passport number.\n      description: Document identifying the owner.\n    IdentityDocumentType:\n      type: string\n      description: Either US SSN or US/International Passport.\n      enum:\n        - SSN\n        - PASSPORT\n    IncorporationType:\n      type: string\n      description: Incorporation type of the company referred\n      enum:\n        - C_CORP\n        - S_CORP\n        - B_CORP\n        - LLC\n        - LLP\n        - SOLE_PROP\n        - ORG_501C3\n    Instruction:\n      required:\n        - domestic\n        - international\n      type: object\n      properties:\n        domestic:\n          $ref: '#/components/schemas/DomesticInstruction'\n        international:\n          $ref: '#/components/schemas/InternationalInstruction'\n      description: Domestic and international ACH/Wire instructions.\n    InternationalInstruction:\n      required:\n        - account_type\n        - bank_address\n        - bank_name\n        - beneficiary_address\n        - beneficiary_name\n        - special_instructions\n        - swift_account_number\n        - swift_bank_number\n      type: object\n      properties:\n        account_type:\n          type: string\n          description: Account type.\n        swift_account_number:\n          type: string\n          description: Swift account number.\n        swift_bank_number:\n          type: string\n          description: Swift bank number.\n        beneficiary_name:\n          type: string\n          description: Beneficiary name.\n        beneficiary_address:\n          type: string\n          description: Beneficiary address.\n        bank_name:\n          type: string\n          description: Bank name.\n        bank_address:\n          type: string\n          description: Bank address.\n        special_instructions:\n          type: string\n          description: Special instructions.\n      description: International Wire instructions.\n    Product:\n      required:\n        - cash\n      type: object\n      properties:\n        cash:\n          $ref: '#/components/schemas/Cash'\n      description: \u003e-\n        Array of Brex products that the customer has applied for. This is a\n        gated feature available to select clients only.\n    Prong:\n      type: string\n      description: \u003e\n        Beneficial owner type\n      enum:\n        - OWNERSHIP\n        - CONTROL\n        - BOTH\n    Referral:\n      required:\n        - expires_at\n        - id\n        - products\n        - referral_signup_url\n        - status\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique identifier for the referral.\n        referral_signup_url:\n          type: string\n          description: \u003e\n            Signup URL to redirect prospects to complete their onboarding flow.\n            *Note*: Necessary disclosures must be shown when the prospect clicks\n            on this link\n        expires_at:\n          type: string\n          description: The time at which this referral link expires at.\n          format: date-time\n        status:\n          $ref: '#/components/schemas/ReferralStatus'\n        products:\n          type: array\n          items:\n            $ref: '#/components/schemas/Product'\n    ReferralPage:\n      required:\n        - items\n      type: object\n      properties:\n        next_cursor:\n          type: string\n          nullable: true\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/Referral'\n    ReferralStatus:\n      type: string\n      description: \u003e-\n        Status of the referral. `UNCLAIMED` or `EXPIRED` unless the customer\n        completes sign up. Customers are attributed once `ACTIVE` until the\n        account is `CLOSED`.\n      enum:\n        - UNCLAIMED\n        - EXPIRED\n        - ACTIVE\n        - CLOSED\n  securitySchemes:\n    oAuth2ClientCredentials:\n      type: oauth2\n      description: \u003e\n\n        Refer to [these](https://developer.brex.com/docs/onboarding_examples/)\n        docs on how to use client credentials \n      flows:\n        clientCredentials:\n          tokenUrl: https://accounts.brex.com/oauth2/v1/token\n          scopes:\n            openid: openid\n            offline_access: offline access\n            https://onboarding.brexapis.com/referrals: referrals\nx-explorer-enabled: false\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/brex.onboarding/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/brex.onboarding/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/referrals/{id}/document_upload\": post: security: security \"oAuth2ClientCredentials\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}