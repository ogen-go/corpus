{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/factset/enterprise-sdk"
		},
		"file": {
			"name": "FactSetBenchmarks.v1.yaml",
			"size": 0,
			"path": "specs/FactSetBenchmarks.v1.yaml",
			"byteSize": 87264,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.5.0\n  title: FactSet Benchmarks API\n  contact:\n    name: FactSet Research Systems\n    email: api@factset.com\n  description: \u003e\n    FactSet Benchmarks API gives access to Index Constituents, Prices, Returns,\n    and Ratios. For a sample list of identifiers, use the /metrics endpoint.\n    Equity Only - Fixed Income Benchmark support coming soon.\nservers:\n  - url: https://api.factset.com/content\n    description: Production\nsecurity:\n  - FactSetApiKey: []\n  - FactSetOAuth2: []\npaths:\n  /factset-benchmarks/v1/constituents:\n    get:\n      tags:\n        - Benchmark Constituents\n      summary: \u003e-\n        Returns the requested Benchmark Constituents and respective Weights,\n        Price and Market Value.\n      operationId: getBenchmarkConstituents\n      description: \u003e\n        Returns the requested Benchmark Constituents and respective Weights,\n        Price and Market Value. You must be authorized for the `ids` requested.\n        Use the helper endpoint **/id-list** for valid identifiers.  \n      parameters:\n        - $ref: '#/components/parameters/constituentIds'\n        - $ref: '#/components/parameters/requestedDate'\n        - $ref: '#/components/parameters/currency'\n      responses:\n        '200':\n          description: Benchmark data items\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/benchmarkConstituentsResponse'\n              examples:\n                Result of Benchmark Constituent id SPY-US:\n                  $ref: '#/components/examples/resultofBenchmarkIDSPY-US'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n    post:\n      tags:\n        - Benchmark Constituents\n      summary: \u003e-\n        Returns the requested Benchmark Constituents and respective Weights,\n        Price and Market Value.\n      description: \u003e\n        Returns the requested Benchmark Constituents and respective Weights,\n        Price and Market Value. You must be authorized for the `ids` requested.\n        Use the helper endpoint **/id-list** for valid identifiers.\n      operationId: getBenchmarkConstituentsForList\n      requestBody:\n        required: true\n        description: Requests Benchmark Constituents for the given identifier and date.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/benchmarkConstituentsRequest'\n      responses:\n        '200':\n          description: Benchmark data items\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/benchmarkConstituentsResponse'\n              examples:\n                Result of Benchmark Constituent SPY-US:\n                  $ref: '#/components/examples/resultofBenchmarkIDSPY-US'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n  /factset-benchmarks/v1/fixed-income-constituents:\n    get:\n      tags:\n        - Benchmark Constituents\n      summary: \u003e-\n        Returns the requested Fixed Income Benchmark Constituents and respective\n        Weights, Price and Market Value.\n      operationId: getFIBenchmarkConstituents\n      description: \u003e\n        Returns the requested Fixed Income Benchmark Constituents and respective\n        Weights, Price and Market Value. You must be authorized for the `ids`\n        requested.\n      parameters:\n        - $ref: '#/components/parameters/fIConstituentIds'\n        - $ref: '#/components/parameters/requestedDate'\n        - $ref: '#/components/parameters/currency'\n      responses:\n        '200':\n          description: Fixed Income Constituent data items\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/fixedIncomeBenchmarkConstituentsResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n    post:\n      tags:\n        - Benchmark Constituents\n      summary: \u003e-\n        Returns the requested Benchmark Constituents and respective Weights,\n        Price and Market Value.\n      description: \u003e\n        Returns the requested Fixed Income Benchmark Constituents and respective\n        Weights, Price and Market Value. You must be authorized for the `ids`\n        requested.\n      operationId: getFIBenchmarkConstituentsForList\n      requestBody:\n        required: true\n        description: \u003e-\n          Requests Fixed Income Benchmark Constituents for the given identifier\n          and date.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/fixedIncomeBenchmarkConstituentsRequest'\n      responses:\n        '200':\n          description: Fixed Income Constituent data items\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/fixedIncomeBenchmarkConstituentsResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n  /factset-benchmarks/v1/index-snapshot:\n    get:\n      summary: \u003e-\n        Index Level Prices, Returns, and related information as of a single\n        date.\n      operationId: getIndexSnapshot\n      tags:\n        - Index Level\n      description: \u003e\n        Retrieves Index Level Prices and Returns information as of a specific\n        date. Simply submit a valid Benchmark ID (you can use the /id-list\n        endpoint for a sample list of ids), and date and retrieve Index Level\n        Prices, Returns, and related information.\n      parameters:\n        - $ref: '#/components/parameters/indexIds'\n        - $ref: '#/components/parameters/requestedDate'\n        - $ref: '#/components/parameters/returnType'\n        - $ref: '#/components/parameters/currency'\n        - $ref: '#/components/parameters/calendar'\n      responses:\n        '200':\n          description: \u003e-\n            An array of Index Level Prices and Returns information as of a\n            single date\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/indexSnapshotResponse'\n              examples:\n                Index Level Prices and Returns snapshot for S\u0026P 500 and Russell 3000 as of 2020-08-06:\n                  $ref: '#/components/examples/resultofIndexSnapshotMultiple'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n    post:\n      summary: \u003e-\n        Retrieves the Index Level Snapshot of Prices and Returns information for\n        a given identifier and single date.\n      operationId: getIndexSnapshotForList\n      tags:\n        - Index Level\n      description: \u003e\n        Retrieves Index Level Prices and Returns information as aligned with\n        FactSet's Benchmark Data Feed solution. Simply submit a valid Benchmark\n        ID (you can use the /id-list endpoint for a sample list of ids), and\n        date and retrieve Index Level Prices, Returns, and related information.\n      requestBody:\n        required: true\n        description: \u003e-\n          Requests the Index Level Snapshot for a requested list of identifiers\n          and specified date.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/indexSnapshotRequest'\n      responses:\n        '200':\n          description: \u003e-\n            An array of Index Level Prices and Returns information as of a\n            single date.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/indexSnapshotResponse'\n              examples:\n                Index Level Prices and Returns snapshot for S\u0026P 500 and Russell 3000 as of 2020-08-06:\n                  $ref: '#/components/examples/resultofIndexSnapshotMultiple'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n  /factset-benchmarks/v1/index-history:\n    get:\n      summary: \u003e-\n        Retrieves Index Level Prices and Returns information for a list of\n        identifiers and historical date range.\n      operationId: getIndexHistory\n      tags:\n        - Index Level\n      description: \u003e\n        Retrieves Index Level Prices and Returns information as of a date range\n        requested. Simply submit a valid Benchmark ID (you can use the /id-list\n        endpoint for a sample list of ids), and date range to retrieve Index\n        Level Prices, Returns, and related information.\n      parameters:\n        - $ref: '#/components/parameters/indexIds'\n        - $ref: '#/components/parameters/startDate'\n        - $ref: '#/components/parameters/endDate'\n        - $ref: '#/components/parameters/frequency'\n        - $ref: '#/components/parameters/returnType'\n        - $ref: '#/components/parameters/hedgeType'\n        - $ref: '#/components/parameters/currency'\n        - $ref: '#/components/parameters/calendar'\n      responses:\n        '200':\n          description: \u003e-\n            An array of Index Level Prices and Returns information for a\n            requested date range.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/indexHistoryResponse'\n              examples:\n                Index Level Prices and Returns snapshot for S\u0026P 500 and Russell 3000 from 2020-08-05 to 2020-08-06:\n                  $ref: '#/components/examples/resultofIndexHistoryMultiple'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n    post:\n      summary: \u003e-\n        Retrieves Index Level Prices and Returns information for a list of\n        identifiers and historical date range.\n      operationId: getIndexHistoryForList\n      tags:\n        - Index Level\n      description: \u003e\n        Retrieves Index Level Prices and Returns information as aligned with\n        FactSet's Benchmark Data Feed solution. Simply submit a valid Benchmark\n        ID (you can use the /id-list endpoint for a sample list of ids), and\n        date and retrieve Index Level Prices, Returns, and related information.\n      requestBody:\n        required: true\n        description: \u003e-\n          Requests Index Level History Prices and Returns for a list of\n          identifiers and specified date range.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/indexHistoryRequest'\n      responses:\n        '200':\n          description: \u003e-\n            An array of Index Level Prices and Returns information for a\n            requested date range.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/indexHistoryResponse'\n              examples:\n                Index Level Prices and Returns snapshot for S\u0026P 500 and Russell 3000 from 2020-08-05 to 2020-08-06:\n                  $ref: '#/components/examples/resultofIndexHistoryMultiple'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n  /factset-benchmarks/v1/ratios:\n    get:\n      tags:\n        - Index Level\n      summary: Returns the aggregated ratios of a requested benchmark\n      operationId: getBenchmarkRatios\n      description: \u003e\n        Retrieves the index level ratios for a requested benchmark. Ratios\n        supported are expressed through metrics parameter, and include\n        Categories of Profitability, Valuation, Coverage, and Leverage. \u003cp\u003e\n        Using FactSet Market Aggregates, the service combines fundamental,\n        estimates, and pricing content to derive ratios and per share values for\n        global equity market indexes and commercial benchmark vendors. The\n        constituents of the index are fetched on rolling basis over time period\n        requested, and then the metric requested is aggregated up to the index\n        level. To learn more about FMA, visit [OA\n        15778](https://my.apps.factset.com/oa/pages/15778).\u003c/p\u003e\n      parameters:\n        - $ref: '#/components/parameters/indexIds'\n        - $ref: '#/components/parameters/metrics'\n        - $ref: '#/components/parameters/startDate'\n        - $ref: '#/components/parameters/endDate'\n        - $ref: '#/components/parameters/frequency'\n        - $ref: '#/components/parameters/periodicity'\n        - $ref: '#/components/parameters/currency'\n      responses:\n        '200':\n          description: Benchmark Ratio data items\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/benchmarkRatiosResponse'\n              examples:\n                All Index Level Ratios for S\u0026P 500 as of latest year end:\n                  $ref: '#/components/examples/allRatiosSP50'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n    post:\n      tags:\n        - Index Level\n      summary: Returns the aggregated ratios of a requested benchmark\n      description: \u003e\n        Retrieves the index level ratios for a requested benchmark. Ratios\n        supported are expressed through metrics parameter, and include\n        Categories of Profitability, Valuation, Coverage, and Leverage. \u003cp\u003e\n        Using FactSet Market Aggregates, the service combines FactSet\n        Fundamental, FactSet Estimates, and FactSet Pricing content to derive\n        ratios and per share values for global equity market indexes and\n        commercial benchmark vendors. The constituents of the index are fetched\n        on rolling basis over time period requested, and then the metric\n        requested is aggregated up to the index level. To learn more about FMA,\n        visit [OA 15778](https://my.apps.factset.com/oa/pages/15778).\u003c/p\u003e\n      operationId: getBenchmarkRatiosForList\n      requestBody:\n        required: true\n        description: Requests benchmark ratios for a given id\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/benchmarkRatiosRequest'\n            examples:\n              Requesting all Index Level Ratios:\n                $ref: '#/components/examples/allRatiosRequest'\n      responses:\n        '200':\n          description: Benchmark Ratio Response Items\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/benchmarkRatiosResponse'\n              examples:\n                All Index Level Ratios for S\u0026P 500 as of latest year end:\n                  $ref: '#/components/examples/allRatiosSP50'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n  /factset-benchmarks/v1/id-list:\n    get:\n      summary: \u003e-\n        Returns a sample list of Benchmark Identifiers and the benchmark\n        categorization to use in other Benchmark API endpoints.\n      operationId: getBenchmarkIds\n      tags:\n        - Helper\n      description: \u003e-\n        Returns a **sample** list of Benchmark Identifiers to use in other\n        Benchmark API endpoints. This is a supporting API to be use alongside\n        the other Benchmark API endpoints. For example, use the fsymID value\n        returned in this response as the input to your `ids` parameter in the\n        /constituents endpoint to return constituents for that id.\u003cp\u003e *This is\n        not the full list of benchmark ids allowed in this service, but rather a\n        representation of the most commonly requested. For complete assistance\n        with ID lookup or concordance services, please reach out to FactSet\n        Support. *\u003c/p\u003e\n      parameters:\n        - $ref: '#/components/parameters/familyFilter'\n      responses:\n        '200':\n          description: List of sample Benchmark Ids\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/benchmarkIdListResponse'\n              examples:\n                Result of Benchmark Constituent SPY-US:\n                  $ref: '#/components/examples/resultofBenchmarkID-TOPIX'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\n    post:\n      summary: \u003e-\n        Returns a sample list of Benchmark Identifiers and the benchmark\n        categorization to use in other Benchmark API endpoints.\n      operationId: getBenchmarkIdsForList\n      tags:\n        - Helper\n      description: \u003e-\n        Returns a **sample** list of Benchmark Identifiers to use in other\n        Benchmark API endpoints. This is a supporting API to be use alongside\n        the other Benchmark API endpoints. For example, use the fsymID value\n        returned in this response as the input to your `ids` parameter in the\n        /constituents endpoint to return constituents for that id.\u003cp\u003e *This is\n        not the full list of benchmark ids allowed in this service, but rather a\n        representation of the most commonly requested. For complete assistance\n        with ID lookup or concordance services, please reach out to FactSet\n        Support.*\u003c/p\u003e\n      requestBody:\n        required: true\n        description: \u003e-\n          Requests a sample list of identifiers that can be used in other\n          Benchmarks API endpoints.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/benchmarkIdListRequest'\n      responses:\n        '200':\n          description: List of sample Benchmark Ids\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/benchmarkIdListResponse'\n              examples:\n                Result of Benchmark Constituent SPY-US:\n                  $ref: '#/components/examples/resultofBenchmarkID-TOPIX'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '415':\n          $ref: '#/components/responses/415'\n        '500':\n          $ref: '#/components/responses/500'\ncomponents:\n  securitySchemes:\n    FactSetOAuth2:\n      type: oauth2\n      flows:\n        clientCredentials:\n          tokenUrl: https://auth.factset.com/as/token.oauth2\n          scopes: {}\n    FactSetApiKey:\n      type: http\n      scheme: basic\n  parameters:\n    constituentIds:\n      name: ids\n      in: query\n      required: true\n      explode: false\n      schema:\n        type: array\n        items:\n          type: string\n        minItems: 1\n        maxItems: 1\n      description: \u003e-\n        Benchmark Identifiers. Reference the helper endpoint **/id-list** to get\n        a sample list of  valid identifiers. You must be authorized for the\n        `ids` requested, otherwise you will receive an error. \u003cp\u003e***ids limit**\n        =  1 per request*\u003c/p\u003e\n    fIConstituentIds:\n      name: ids\n      in: query\n      required: true\n      explode: false\n      schema:\n        type: array\n        items:\n          type: string\n        minItems: 1\n        maxItems: 1\n      example: LHMN0001\n      description: \u003e-\n        Fixed Income Benchmark Identifiers. You must be authorized for the `ids`\n        requested, otherwise you will receive an error. \u003cp\u003e***ids limit** =  1\n        per request*\u003c/p\u003e\n    indexIds:\n      name: ids\n      in: query\n      required: true\n      explode: false\n      schema:\n        type: array\n        items:\n          type: string\n        minItems: 1\n        maxItems: 500\n      description: \u003e-\n        Benchmark Identifiers. Reference the helper endpoint **/id-list** to get\n        a sample list of  valid identifiers. \u003cp\u003e***ids limit** =  500 per\n        request*\u003c/p\u003e *\u003cp\u003eMake note, GET Method URL request lines are also\n        limited to a total length of 8192 bytes (8KB). In cases where the\n        service allows for thousands of ids, which may lead to exceeding this\n        request line limit of 8KB, its advised for any requests with large\n        request lines to be requested through the respective \"POST\" method.\u003c/p\u003e*\n    requestedDate:\n      name: date\n      in: query\n      required: false\n      schema:\n        type: string\n      description: Date of holding expressed in YYYY-MM-DD format.\n    startDate:\n      name: startDate\n      in: query\n      required: false\n      schema:\n        type: string\n      description: Requested start date expressed in YYYY-MM-DD format.\n    endDate:\n      name: endDate\n      in: query\n      required: false\n      schema:\n        type: string\n      description: Requested End Date for Range expressed in YYYY-MM-DD format.\n    returnType:\n      name: returnType\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - GROSS\n          - NET\n        default: GROSS\n      description: \u003e-\n        The return type adjustment used in returns response items. Adjustment\n        can be made for GROSS and NET dividends that will be included in the\n        return calculation. The service will default to GROSS.\n    hedgeType:\n      name: hedgeType\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - UNHEDGED\n          - HEDGED\n        default: UNHEDGED\n      description: \u003e-\n        The hedge type adjustment used in returns response items. Adjustment can\n        be made for HEDGED and UNHEDGED values that will be included in the\n        return calculation. The service will default to UNHEDGED.\n    calendar:\n      name: calendar\n      in: query\n      schema:\n        type: string\n        enum:\n          - FIVEDAY\n          - SEVENDAY\n        default: FIVEDAY\n      description: Calendar of data returned. SEVENDAY includes weekends.\n      example: FIVEDAY\n    currency:\n      name: currency\n      in: query\n      required: false\n      schema:\n        type: string\n      description: Currency for response.\n    frequency:\n      name: frequency\n      in: query\n      schema:\n        type: string\n        enum:\n          - D\n          - W\n          - M\n          - AM\n          - CQ\n          - AY\n          - CY\n        default: D\n      description: |\n        Controls the display frequency of the data returned.\n          * **D** = Daily\n          * **W** = Weekly, based on the last day of the week of the start date.\n          * **M** = Monthly, based on the last trading day of the month.\n          * **AM** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).\n          * **CQ** = Quarterly based on the last trading day of the calendar quarter (March, June, September, or December).\n          * **AY** = Actual Annual, based on the start date.\n          * **CY** = Calendar Annual, based on the last trading day of the calendar year.\n      examples:\n        Daily:\n          summary: D - Daily frequency display based on trading calendar\n          value: D\n        Weekly:\n          summary: W - Weekly - based on the last day of the week of the start date\n          value: W\n        Monthly:\n          summary: M - Monthly - based on the last trading day of the month.\n          value: M\n        Actual Month:\n          summary: \u003e-\n            AM - Actual Month - based on the startDate (e.g., if the start date\n            is June 16, data is displayed for June 16, May 16, April 16 etc.).\n          value: AM\n        Calendar Quarterly:\n          summary: \u003e-\n            CQ - Calendar Quarterly - based on the last day of the week of the\n            startDate\n          value: CQ\n        Actual Annual:\n          summary: AY - Actual Annual - based on the startDate\n          value: AY\n        Calendar Annual:\n          summary: \u003e-\n            CY - Calendar Annual - based on the last trading day of the calendar\n            year.\n          value: CY\n    periodicity:\n      name: periodicity\n      in: query\n      schema:\n        type: string\n        enum:\n          - LTM\n          - LTMA\n          - STMA\n          - NTMA\n          - '0'\n          - '1'\n          - '2'\n          - QTR\n        default: LTM\n      required: false\n      description: \u003e\n        The calculation periodicity for the aggregated period. **Note** - Not\n        all periodicities are supported for each metric, depending on the type\n        of ratio. LTM is set as default and supported for all metrics. See\n        Metrics Parameter for additional detail on which periodicities are\n        available per metric.\n\n        |Periodicity| Description|\n\n        |:---|:---|\n\n        |LTM| Last Twelve Months\n\n        |LTMA| Last Twelve Months using Broker Actuals for Estimated Items\n\n        |STMA| Second Twelve Month Forward\n\n        |NTMA| 12 Month Forward\n\n        |0| Latest Reported Calendar Year\n\n        |1| Current Unreported Year\n\n        |2| Following Year\n\n        |QTR| Quarterly - Reported by companies\n    metrics:\n      name: metrics\n      in: query\n      required: true\n      explode: false\n      description: \u003e\n        Requested List of  FactSet Market Aggregates (FMA) or ratios. provided\n        the below complete metrics list.\n\n        |metric item|Description|category|periodicity\n\n        |:---|:---|:---|:---|\n\n        |GROSS_MARGIN|Gross Margin|Profitability (%)|NTMA, LTMA, STMA, LTM, QTR,\n        0, 1, 2\n\n        |OPER_INC_SALES|Operating Margin|Profitability (%)|LTM, QTR\n\n        |NET_MGN|Net Margin|Profitability (%)|NTMA, LTMA, STMA, LTM, QTR, 0, 1,\n        2\n\n        |EBIT_MARGIN|EBIT Margin|Profitability (%)| NTMA, LTMA, STMA, LTM, QTR,\n        0, 1, 2\n\n        |EBITDA_MARGIN|EBITDA Margin|Profitability (%)|NTMA, LTMA, STMA, LTM,\n        QTR, 0, 1, 2\n\n        |ROA|Return on Assets|Profitability (%)|LTM\n\n        |ROE|Return on Equity|Profitability (%)|NTMA, LTMA, LTM, 0, 1, 2\n\n        |ROIC|Return on Invested Capital|Profitability (%)| LTM\n\n        |FCF_MGN|Free Cash Flow Margin|Profitability (%)|LTM, QTR\n\n        |PE|Price/Earnings|Valuation|NTMA, LTMA, STMA, LTM, QTR, 0, 1, 2\n\n        |PEX|Price/Earnings (excl negatives)|Valuation|LTM\n\n        |PSALES|Price/Sales|Valuation|NTMA, LTMA, STMA, LTM, QTR, 0, 1, 2\n\n        |PBK|Price/Book Value|Valuation|NTMA, LTMA, LTM, 0, 1, 2\n\n        |PCF|Price/Cash Flow|Valuation|NTMA, LTMA, LTM, 0, 1, 2\n\n        |PCFX|Price/Cash Flow (excl negatives)|Valuation|LTM\n\n        |PFCF|Price/Free Cash Flow|Valuation|NTMA, LTMA, LTM, 0, 1, 2\n\n        |EVAL_EBIT|Enterprise Value/EBIT|Valuation|NTMA, LTMA, LTM, 0, 1, 2\n\n        |EVAL_EBITDA|Enterprise Value/EBITDA|Valuation|NTMA, LTMA, LTM, 0, 1, 2\n\n        |EVAL_SALES|Enterprise Value/Sales|Valuation|NTMA, LTMA, LTM, 0, 1, 2\n\n        |NDEBT_EBITDA|Net Debt/EBITDA|Coverage|NTMA, LTMA, LTM, 0, 1, 2\n\n        |NDEBT_EBITDA_MIN_CAPEX|Net Debt/(EBITDA-Capex)|Coverage|LTM\n\n        |DEBT_EBITDA|Total Debt/EBITDA|Coverage|LTM\n\n        |DEBT_EBIT|Total Debt/EBIT|Coverage|LTM\n\n        |EBIT_INT_EXP|EBIT/Interest Expense (Int. Coverage)|Coverage|LTM\n\n        |EBITDA_INT_EXP|EBITDA/Interest Expense|Coverage|LTM\n\n        |OPER_CF_INT_EXP|CFO/Interest Expense|Coverage|LTM\n\n        |LTD_EBITDA|LT Debt/EBITDA|Coverage|LTM\n\n        |NDEBT_FFO|Net Debt/FFO|Coverage|LTM\n\n        |LTD_FFO|LT Debt/FFO|Coverage|LTM\n\n        |FCF_DEBT|FCF/Total Debt|Coverage|LTM\n\n        |OPER_CF_DEBT|CFO/Total Debt|Coverage|LTM\n\n        |LTD_EQ|LT Debt/Total Equity|Leverage(%)|LTM\n\n        |LTD_TCAP|LT Debt/Total Capital|Leverage(%)|LTM\n\n        |LTD_ASSETS|LT Debt/Total Assets|Leverage(%)|LTM\n\n        |DEBT_ASSETS|Total Debt/Total Assets|Leverage(%)|LTM\n\n        |DEBT_EQ|Total Debt/Total Equity|Leverage(%)|LTM\n\n        |NDEBT_TCAP|Net Debt/Total Capital|Leverage(%)|LTM\n\n        |DEBT_TCAP|Total Debt/Total Capital|Leverage(%)|LTM\n\n        |\u003cp\u003e***metrics limit** =  38 per request*\u003c/p\u003e\n\n        *\u003cp\u003eMake note, GET Method URL request lines are also limited to a total\n\n        length of 8192 bytes (8KB). In cases where the service allows for\n        thousands\n\n        of ids, which may lead to exceeding this request line limit of 8KB, its\n\n        advised for any requests with large request lines to be requested\n        through\n\n        the respective \"POST\" method.\u003c/p\u003e*\n      schema:\n        type: array\n        items:\n          type: string\n        example:\n          - PEX\n          - LTD_EQ\n          - DEBT_EQ\n        minItems: 1\n        maxItems: 38\n      examples:\n        Single Metric:\n          summary: LTD_EQ\n          value:\n            - LTD_EQ\n        Multiple Metrics:\n          summary: PEX, LTD_EQ, DEBT_EQ\n          value:\n            - PEX\n            - LTD_EQ\n            - DEBT_EQ\n    familyFilter:\n      name: familyFilter\n      in: query\n      required: false\n      description: \u003e\n        Highest Level Filter to search by common Benchmark Families, such as\n        S\u0026P, MSCI, or Russell. This will retrieve all related benchmark ids. For\n        further filtering, use the response items such as the\n        categoryDescription field. Leave blank if you wish to see a full sample\n        list of ids. requested-\n\n        * **CHINA \u0026 HK INDICES** - Major Hong Kong and China Indices, such as\n        Hang Seng Index (HSI-HKX)\n\n        * **DOW JONES** - Dow Jones Global, Regions, Countries, Titans.\n\n        * **FACTSET MARKET INDICES** - Regional and Country Indices defined by\n        FactSet\n\n        * **FTSE** - FTSE Global, UK, Global All Cap, World, Xinhua, European,\n        GWA, JSE, Multinationals, and Style indices\n\n        * **GLOBAL INDICES** - A mix of major indices across the globe.\n\n        * **MSCI** - MSCI All Country, Asia Pacific, Thematic \u0026 Strategy,\n        Emerging, Developed, US.\n\n        * **RUSSELL** - US, Global, and Nomura.\n\n        * **S\u0026P** - US, ASX, Select Industry, BMI, Global, Thematic, Emerging,\n        TSX.\n\n        * **STOXX** - Total Market, Europe, and Nordic\n\n        * **TOPIX** - Topix Indices, such as TOPIX 500 (182301)\n      schema:\n        type: string\n        enum:\n          - CHINA_HK_INDICES\n          - DOW_JONES\n          - FACTSET_MARKET_INDICES\n          - FTSE\n          - GLOBAL_INDICES\n          - MSCI\n          - RUSSELL\n          - SP\n          - STOXX\n          - TOPIX\n  schemas:\n    benchmarkConstituentsRequest:\n      type: object\n      title: Benchmark Constituents Request\n      properties:\n        ids:\n          $ref: '#/components/schemas/constituentIds'\n        date:\n          $ref: '#/components/schemas/requestedDate'\n        currency:\n          $ref: '#/components/schemas/currency'\n      required:\n        - ids\n    benchmarkConstituentsResponse:\n      title: Benchmark Constituents Response\n      type: object\n      properties:\n        data:\n          description: \u003e\n            Array of metric objects representing the metrics that can be\n            requested\n\n            from the estimates APIs.\n          type: array\n          items:\n            $ref: '#/components/schemas/benchmarkConstituent'\n    benchmarkConstituent:\n      title: Benchmark Constituent\n      type: object\n      properties:\n        fsymId:\n          type: string\n          description: Benchmark Id\n          example: SPY-US\n        date:\n          description: Date of weight and shares.\n          type: string\n          format: date\n          example: '2020-07-01'\n        fsymSecurityId:\n          description: \u003e-\n            FactSet Security Identifier (-S). If Cash or Generic Id holding,\n            response will just pass through generic id (e.g. CASH_USD).\n          type: string\n          example: TKPJVY-S\n        fsymRegionalId:\n          description: \u003e-\n            FactSet Regional Identifier (-R). If Cash or Generic Id holding,\n            response will just pass through generic id (e.g. CASH_USD).\n          type: string\n          example: F07Q7W-R\n        currency:\n          description: Currency code for prices.\n          type: string\n          example: USD\n        weightClose:\n          description: Weight of Security in benchmark (percent).\n          type: number\n          format: double\n          example: 0.085717610340781\n        adjHolding:\n          description: Shares held adjusted. Units in Millions.\n          type: number\n          format: double\n          example: 0.884722\n        unadjHolding:\n          description: Shares held unadjusted. Units in Millions.\n          type: number\n          format: double\n          example: 0.884722\n        price:\n          description: Price of shares held.\n          type: number\n          format: double\n          example: 267.97\n        adjMarketValue:\n          description: Market value adjusted. Market Value represented in Millions.\n          type: number\n          format: double\n          example: 237.07895434\n        requestId:\n          type: string\n          description: Identifier specified in the request\n          example: SPY-US\n    fixedIncomeBenchmarkConstituentsRequest:\n      type: object\n      title: Fixed Income Benchmark Constituents Request\n      properties:\n        ids:\n          $ref: '#/components/schemas/fIConstituentIds'\n        date:\n          $ref: '#/components/schemas/requestedDate'\n        currency:\n          $ref: '#/components/schemas/currency'\n      required:\n        - ids\n    fixedIncomeBenchmarkConstituentsResponse:\n      title: Fixed Income Benchmark Constituents Response\n      type: object\n      properties:\n        data:\n          description: \u003e\n            Array of metric objects representing the metrics that can be\n            requested\n\n            from the estimates APIs.\n          type: array\n          items:\n            $ref: '#/components/schemas/fixedIncomeBenchmarkConstituent'\n    fixedIncomeBenchmarkConstituent:\n      title: Benchmark Constituent\n      type: object\n      properties:\n        fsymId:\n          type: string\n          description: Benchmark Id\n          example: LHMN0001\n        date:\n          description: Date of weight and shares.\n          type: string\n          format: date\n          example: '2021-04-12'\n        fsymSecurityId:\n          description: FactSet Security Identifier (-S).\n          type: string\n          example: FV4SC0-S\n        weightClose:\n          description: Weight of Security in benchmark (percent).\n          type: number\n          format: double\n          example: 0.00303380596473456\n        amountOutstanding:\n          description: Amount Outstanding for the Fixed Income Security.\n          type: number\n          format: double\n          example: 700000\n        price:\n          description: Fixed Income Price of security held.\n          type: number\n          format: double\n          example: 106.976\n        adjMarketValue:\n          description: Market value adjusted. Market Value represented in Millions.\n          type: number\n          format: double\n          example: 757.233375\n        requestId:\n          type: string\n          description: Identifier specified in the request\n          example: LHMN0001\n    indexSnapshotRequest:\n      type: object\n      title: Index Snapshot Request\n      properties:\n        ids:\n          $ref: '#/components/schemas/indexIds'\n        date:\n          $ref: '#/components/schemas/requestedDate'\n        returnType:\n          $ref: '#/components/schemas/returnType'\n        currency:\n          $ref: '#/components/schemas/currency'\n        calendar:\n          $ref: '#/components/schemas/calendar'\n      required:\n        - ids\n    indexSnapshotResponse:\n      title: Index Snapshot Response\n      type: object\n      properties:\n        data:\n          description: |\n            Array of index snapshot response objects.\n          type: array\n          items:\n            $ref: '#/components/schemas/indexSnapshot'\n    indexSnapshot:\n      title: Index Snapshot Object\n      type: object\n      properties:\n        fsymId:\n          type: string\n          description: \u003e-\n            Requested Identifier. Must be a valid Benchmark Identifier\n            recognized by FactSet.\n          example: SP50\n        date:\n          description: \u003e-\n            The respective date for values as of the date requested in\n            YYYY-MM-DD format.\n          type: string\n          format: date\n          example: '2020-07-01'\n        name:\n          description: Proper Name of Index.\n          type: string\n          example: S\u0026P 500\n        constituentNumber:\n          description: The total number of constituents as of the date requested.\n          type: integer\n          example: 502\n        currency:\n          description: \u003e-\n            Currency Code used in adjustments. If no Currency was requested, the\n            service will default to the local Calendar.\n          type: string\n          example: USD\n        marketValue:\n          description: \u003e-\n            Index Level Market Capitalization as of the date requested expressed\n            in millions.\n          type: number\n          format: double\n          example: 27696158.012077\n        price:\n          description: Index Level Price\n          type: number\n          format: double\n          example: 3349.15600690205\n        priceReturnPercent1D:\n          description: Index Level Price - 1 Day percent change\n          type: number\n          format: double\n          example: 0.642620385795123\n        priceReturnPercentQTD:\n          description: Index Level Price - Quarter-to-Date percent change\n          type: number\n          format: double\n          example: 8.02735451465131\n        priceReturnPercentYTD:\n          description: Index Level Price - Year-to-Date percent change\n          type: number\n          format: double\n          example: 3.66394447660916\n        totalReturnLevel:\n          description: \u003e-\n            Index Level Total Return Amount. (Gross or Net depends on requested\n            returnType)\n          type: number\n          format: double\n          example: 6870.86168040129\n        totalReturnPercent1D:\n          description: \u003e-\n            Index Level Total Return - 1 Day percent change. (Gross or Net\n            depends on requested returnType)\n          type: number\n          format: double\n          example: 0.653957589855003\n        totalReturnPercentQTD:\n          description: \u003e-\n            Index Level Total Return - Quarter-to-Date percent change. (Gross or\n            Net depends on requested returnType)\n          type: number\n          format: double\n          example: 8.17415047623613\n        totalReturnPercentYTD:\n          description: \u003e-\n            Index Level Total Return - Year-to-Date percent change. (Gross or\n            Net depends on requested returnType)\n          type: number\n          format: double\n          example: 4.84152796547426\n        returnType:\n          description: The requested Return Type - GROSS or NET\n          type: string\n          example: GROSS\n        requestId:\n          type: string\n          description: Benchmark Identifier specified in the request\n          example: SP50\n    indexHistoryRequest:\n      type: object\n      title: Index History Request\n      properties:\n        ids:\n          $ref: '#/components/schemas/indexIds'\n        startDate:\n          $ref: '#/components/schemas/startDate'\n        endDate:\n          $ref: '#/components/schemas/endDate'\n        frequency:\n          $ref: '#/components/schemas/frequency'\n        returnType:\n          $ref: '#/components/schemas/returnType'\n        hedgeType:\n          $ref: '#/components/schemas/hedgeType'\n        currency:\n          $ref: '#/components/schemas/currency'\n        calendar:\n          $ref: '#/components/schemas/calendar'\n      required:\n        - ids\n    indexHistoryResponse:\n      title: Index History Response\n      type: object\n      properties:\n        data:\n          description: |\n            Array of Index History response objects.\n          type: array\n          items:\n            $ref: '#/components/schemas/indexHistory'\n    indexHistory:\n      title: Index History Object\n      type: object\n      properties:\n        fsymId:\n          type: string\n          description: \u003e-\n            Requested Identifier. Must be a valid Benchmark Identifier\n            recognized by FactSet.\n          example: SP50\n        date:\n          description: \u003e-\n            The respective date for values as of the date requested in\n            YYYY-MM-DD format.\n          type: string\n          format: date\n          example: '2020-07-01'\n        name:\n          description: Proper Name of Index.\n          type: string\n          example: S\u0026P 500\n        constituentNumber:\n          description: The total number of constituents as of the date requested.\n          type: integer\n          example: 502\n        currency:\n          description: \u003e-\n            Currency Code used in adjustments. If no Currency was requested, the\n            service will default to LOCAL ('LOC').\n          type: string\n          example: USD\n        marketValue:\n          description: \u003e-\n            Index Level Market Capitalization as of the date requested expressed\n            in millions.\n          type: number\n          format: double\n          example: 27696158.012077\n        price:\n          description: Index Level Price\n          type: number\n          format: double\n          example: 3349.15600690205\n        priceReturnPercent:\n          description: Index Level Price Percent Change\n          type: number\n          format: double\n          example: 0.642620385795123\n        totalReturnLevel:\n          description: Index Level Total Return Amount\n          type: number\n          format: double\n          example: 6870.86168040129\n        totalReturnPercent:\n          description: Index Level Total Return Percent Change\n          type: number\n          format: double\n          example: 0.653957589855003\n        returnType:\n          description: The requested Return Type - GROSS or NET\n          type: string\n          example: GROSS\n        hedgeType:\n          description: The requested Hedge Type - HEDGED or UNHEDGED\n          type: string\n          example: UNHEDGED\n        requestId:\n          type: string\n          description: Benchmark Identifier specified in the request\n          example: SP50\n    benchmarkRatiosRequest:\n      type: object\n      title: Benchamrk Ratios Request\n      properties:\n        ids:\n          $ref: '#/components/schemas/indexIds'\n        startDate:\n          $ref: '#/components/schemas/startDate'\n        endDate:\n          $ref: '#/components/schemas/endDate'\n        periodicity:\n          $ref: '#/components/schemas/periodicity'\n        metrics:\n          $ref: '#/components/schemas/metrics'\n        frequency:\n          $ref: '#/components/schemas/frequency'\n        currency:\n          $ref: '#/components/schemas/currency'\n      required:\n        - ids\n        - metrics\n    benchmarkRatiosResponse:\n      title: Benchmark Ratios Response\n      type: object\n      properties:\n        data:\n          description: |\n            Array of Index History response objects.\n          type: array\n          items:\n            $ref: '#/components/schemas/benchmarkRatios'\n    benchmarkRatios:\n      title: Benchmark Ratios Object\n      type: object\n      properties:\n        fsymId:\n          type: string\n          description: \u003e-\n            Requested Identifier. Must be a valid Benchmark Identifier\n            recognized by FactSet.\n          example: SP50\n        date:\n          description: \u003e-\n            The respective date for values as of the date requested in\n            YYYY-MM-DD format.\n          type: string\n          format: date\n          example: '2020-12-31'\n        name:\n          description: Proper Name of Index.\n          type: string\n          example: S\u0026P 500\n        requestId:\n          type: string\n          description: Benchmark Identifier specified in the request.\n          example: SP50\n        metric:\n          type: string\n          description: Metric requested\n          example: GROSS_MARGIN\n        periodicity:\n          type: string\n          description: The periodicity submitted in the request.\n          example: LTM\n        currency:\n          type: string\n          description: The currency submitted in the request.\n          example: USD\n        value:\n          type: number\n          format: double\n          description: Ratio value based on the metric requested.\n          example: 35.4094680290153\n    benchmarkIdListRequest:\n      type: object\n      title: Benchmark Id List Request\n      properties:\n        familyFilter:\n          $ref: '#/components/schemas/familyFilter'\n    benchmarkIdListResponse:\n      title: Benchmark Id List Response\n      type: object\n      properties:\n        data:\n          description: |\n            Array of Benchmark Ids and their respective categorizations.\n          type: array\n          items:\n            $ref: '#/components/schemas/benchmarkIdList'\n    benchmarkIdList:\n      title: Benchmark Id List Object\n      type: object\n      properties:\n        fsymId:\n          type: string\n          description: Benchmark Id\n          example: '990100'\n        name:\n          type: string\n          description: Name of the Benchmark ID\n          example: MSCI World Index\n        familyName:\n          type: string\n          description: Name of the Benchmarks Family\n          example: MSCI\n        market:\n          type: string\n          description: Market grouping related to the Benchmark Family\n          example: Developed\n        categoryDescription:\n          type: string\n          description: Extended name or description of Benchmark Family \u0026 Market\n          example: International Indices\n    constituentIds:\n      title: Constituent Ids\n      type: array\n      items:\n        type: string\n      minItems: 1\n      maxItems: 1\n      description: \u003e-\n        Benchmark Identifiers. Reference the helper endpoint **/id-list** to get\n        a sample list of  valid identifiers. You must be authorized for the\n        `ids` requested, otherwise you will receive an error.\n      example:\n        - SP50\n    fIConstituentIds:\n      title: Fixed Income Constituent Ids\n      type: array\n      items:\n        type: string\n      minItems: 1\n      maxItems: 1\n      description: \u003e-\n        Fixed Income Benchmark Identifiers. Reference the helper endpoint\n        **/id-list** to get a sample list of  valid identifiers. You must be\n        authorized for the `ids` requested, otherwise you will receive an error.\n      example:\n        - LHMN0001\n    indexIds:\n      title: Index Ids\n      type: array\n      items:\n        type: string\n      minItems: 1\n      maxItems: 500\n      description: \u003e-\n        Benchmark Identifiers. Reference the helper endpoint **/id-list** to get\n        a sample list of  valid identifiers.\n      example:\n        - SP50\n    requestedDate:\n      title: Date\n      type: string\n      description: Date of holding expressed in YYYY-MM-DD format.\n      example: '2020-08-06'\n    startDate:\n      title: Start Date\n      type: string\n      description: Requested start date expressed in YYYY-MM-DD format.\n      example: '2018-12-31'\n    endDate:\n      title: End Date\n      type: string\n      description: Requested end date for Range expressed in YYYY-MM-DD format.\n      example: '2019-12-31'\n    returnType:\n      title: Return Type\n      type: string\n      enum:\n        - GROSS\n        - NET\n      default: GROSS\n      description: \u003e-\n        The return type adjustment used in returns response items. Adjustment\n        can be made for GROSS and NET dividends that will be included in the\n        return calculation. The service will default to GROSS.\n      example: GROSS\n    hedgeType:\n      title: Hedge Type\n      type: string\n      enum:\n        - UNHEDGED\n        - HEDGED\n      default: UNHEDGED\n      description: \u003e-\n        The hedge type adjustment used in returns response items. Adjustment can\n        be made for HEDGED and UNHEDGED values that will be included in the\n        return calculation. The service weill default to UNHEDGED.\n      example: UNHEDGED\n    calendar:\n      title: Calendar\n      type: string\n      enum:\n        - FIVEDAY\n        - SEVENDAY\n      default: FIVEDAY\n      description: Calendar of data returned. SEVENDAY includes weekends.\n      example: FIVEDAY\n    currency:\n      title: Currency\n      type: string\n      description: Currency for response.\n      example: USD\n    frequency:\n      title: Frequency\n      type: string\n      enum:\n        - D\n        - W\n        - M\n        - AM\n        - CQ\n        - AY\n        - CY\n      default: CY\n      description: |\n        Controls the display frequency of the data returned.\n          * **D** = Daily\n          * **W** = Weekly, based on the last day of the week of the start date.\n          * **M** = Monthly, based on the last trading day of the month.\n          * **AM** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.). \n          * **CQ** = Quarterly based on the last trading day of the calendar quarter (March, June, September, or December).\n          * **AY** = Actual Annual, based on the start date.\n          * **CY** = Calendar Annual, based on the last trading day of the calendar year.\n      example: CY\n    metrics:\n      title: Metrics\n      type: array\n      description: \u003e\n        Requested List of FactSet Market Aggregates (FMA) or ratios. provided\n        the below complete metrics list.\n\n        |metric item|Description|category|periodicity\n\n        |:---|:---|:---|:---|\n\n        |GROSS_MARGIN|Gross Margin|Profitability (%)|NTMA, LTMA, STMA, LTM, QTR,\n        0, 1, 2\n\n        |OPER_INC_SALES|Operating Margin|Profitability (%)|LTM, QTR\n\n        |NET_MGN|Net Margin|Profitability (%)|NTMA, LTMA, STMA, LTM, QTR, 0, 1,\n        2\n\n        |EBIT_MARGIN|EBIT Margin|Profitability (%)| NTMA, LTMA, STMA, LTM, QTR,\n        0, 1, 2\n\n        |EBITDA_MARGIN|EBITDA Margin|Profitability (%)|NTMA, LTMA, STMA, LTM,\n        QTR, 0, 1, 2\n\n        |ROA|Return on Assets|Profitability (%)|LTM\n\n        |ROE|Return on Equity|Profitability (%)|NTMA, LTMA, LTM, 0, 1, 2\n\n        |ROIC|Return on Invested Capital|Profitability (%)| LTM\n\n        |FCF_MGN|Free Cash Flow Margin|Profitability (%)|LTM, QTR\n\n        |PE|Price/Earnings|Valuation|NTMA, LTMA, STMA, LTM, QTR, 0, 1, 2\n\n        |PEX|Price/Earnings (excl negatives)|Valuation|LTM\n\n        |PSALES|Price/Sales|Valuation|NTMA, LTMA, STMA, LTM, QTR, 0, 1, 2\n\n        |PBK|Price/Book Value|Valuation|NTMA, LTMA, LTM, 0, 1, 2\n\n        |PCF|Price/Cash Flow|Valuation|NTMA, LTMA, LTM, 0, 1, 2\n\n        |PCFX|Price/Cash Flow (excl negatives)|Valuation|LTM\n\n        |PFCF|Price/Free Cash Flow|Valuation|NTMA, LTMA, LTM, 0, 1, 2\n\n        |EVAL_EBIT|Enterprise Value/EBIT|Valuation|NTMA, LTMA, LTM, 0, 1, 2\n\n        |EVAL_EBITDA|Enterprise Value/EBITDA|Valuation|NTMA, LTMA, LTM, 0, 1, 2\n\n        |EVAL_SALES|Enterprise Value/Sales|Valuation|NTMA, LTMA, LTM, 0, 1, 2\n\n        |NDEBT_EBITDA|Net Debt/EBITDA|Coverage|NTMA, LTMA, LTM, 0, 1, 2\n\n        |NDEBT_EBITDA_MIN_CAPEX|Net Debt/(EBITDA-Capex)|Coverage|LTM\n\n        |DEBT_EBITDA|Total Debt/EBITDA|Coverage|LTM\n\n        |DEBT_EBIT|Total Debt/EBIT|Coverage|LTM\n\n        |EBIT_INT_EXP|EBIT/Interest Expense (Int. Coverage)|Coverage|LTM\n\n        |EBITDA_INT_EXP|EBITDA/Interest Expense|Coverage|LTM\n\n        |OPER_CF_INT_EXP|CFO/Interest Expense|Coverage|LTM\n\n        |LTD_EBITDA|LT Debt/EBITDA|Coverage|LTM\n\n        |NDEBT_FFO|Net Debt/FFO|Coverage|LTM\n\n        |LTD_FFO|LT Debt/FFO|Coverage|LTM\n\n        |FCF_DEBT|FCF/Total Debt|Coverage|LTM\n\n        |OPER_CF_DEBT|CFO/Total Debt|Coverage|LTM\n\n        |LTD_EQ|LT Debt/Total Equity|Leverage(%)|LTM\n\n        |LTD_TCAP|LT Debt/Total Capital|Leverage(%)|LTM\n\n        |LTD_ASSETS|LT Debt/Total Assets|Leverage(%)|LTM\n\n        |DEBT_ASSETS|Total Debt/Total Assets|Leverage(%)|LTM\n\n        |DEBT_EQ|Total Debt/Total Equity|Leverage(%)|LTM\n\n        |NDEBT_TCAP|Net Debt/Total Capital|Leverage(%)|LTM\n\n        |DEBT_TCAP|Total Debt/Total Capital|Leverage(%)|LTM\n      items:\n        type: string\n      minItems: 1\n      maxItems: 38\n      example:\n        - PE\n    periodicity:\n      title: Periodicity\n      type: string\n      description: \u003e\n        The calculation periodicity for the aggregated period. **Note** - Not\n        all periodicities are supported for each metric, depending on the type\n        of ratio. LTM is set as default and supported for all metrics. See\n        Metrics Parameter for additional detail on which periodicities are\n        available per metric.\n\n        |Periodicity|Description|\n\n        |:---|:---|\n\n        |LTM|Last Twelve Months\n\n        |LTMA|Last Twelve Months using Broker Actuals for Estimated Items\n\n        |STMA| Second Twelve Month Forward\n\n        |NTMA| 12 Month Forward\n\n        |0| Latest Reported Calendar Year\n\n        |1| Current Unreported Year\n\n        |2| Following Year\n\n        |QTR| Quarterly - Reported by companies\n      enum:\n        - LTM\n        - LTMA\n        - STMA\n        - NTMA\n        - '0'\n        - '1'\n        - '2'\n        - QTR\n      default: LTM\n      example: LTM\n    familyFilter:\n      title: Family Filter\n      description: \u003e\n        Highest Level Filter to search by common Benchmark Families, such as\n        S\u0026P, MSCI, or Russell. This will retrieve all related benchmark ids. For\n        further filtering, use the response items such as the\n        categoryDescription field. Leave blank if you wish to see a full sample\n        list of ids. requested-\n\n        * **CHINA \u0026 HK INDICES** - Major Hong Kong and China Indices, such as\n        Hang Seng Index (HSI-HKX)\n\n        * **DOW JONES** - Dow Jones Global, Regions, Countries, Titans.\n\n        * **FACTSET MARKET INDICES** - Regional and Country Indices defined by\n        FactSet\n\n        * **FTSE** - FTSE Global, UK, Global All Cap, World, Xinhua, European,\n        GWA, JSE, Multinationals, and Style indices\n\n        * **GLOBAL INDICES** - A mix of major indices across the globe.\n\n        * **MSCI** - MSCI All Country, Asia Pacific, Thematic \u0026 Strategy,\n        Emerging, Developed, US.\n\n        * **RUSSELL** - US, Global, and Nomura.\n\n        * **S\u0026P** - US, ASX, Select Industry, BMI, Global, Thematic, Emerging,\n        TSX.\n\n        * **STOXX** - Total Market, Europe, and Nordic\n\n        * **TOPIX** - Topix Indices, such as TOPIX 500 (182301)\n      type: string\n      enum:\n        - CHINA_HK_INDICES\n        - DOW_JONES\n        - FACTSET_MARKET_INDICES\n        - FTSE\n        - GLOBAL_INDICES\n        - MSCI\n        - RUSSELL\n        - SP\n        - STOXX\n        - TOPIX\n      example: MSCI\n    errorResponse:\n      type: object\n      title: Error Response\n      properties:\n        status:\n          description: status\n          type: string\n          example: Bad Request\n        timestamp:\n          description: timestamp in YYYY-MM-DD HH:MM:SS.SSS\n          type: string\n          example: '2019-11-01 11:09:41.918'\n          format: date-time\n        path:\n          description: The Endpoint path {package}/version/{endpoint}\n          type: string\n          example: /factset-benchmarks/v1/{endpoint}\n        message:\n          description: The plain text error message\n          type: string\n          example: Validation Error\n        subErrors:\n          description: subErrors related to the error message. Null if not applicable.\n          type: object\n          properties:\n            object:\n              description: the operation ID\n              type: string\n            field:\n              description: Parameter Field Name\n              type: string\n            message:\n              description: Error message\n              type: string\n            rejectedValue:\n              description: Rejected Values in an Array\n              type: array\n              items:\n                type: string\n  responses:\n    '400':\n      description: \u003e-\n        Bad Request. This can occur for several reasons. Please review the\n        \"message\" for more details.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n          examples:\n            Bad Request - Date Format:\n              $ref: '#/components/examples/badRequestDateFormat'\n            Bad Request - Missing Required Parameter:\n              $ref: '#/components/examples/badRequestRequiredParameter'\n            Bad Request - Future Date:\n              $ref: '#/components/examples/badRequestFutureDate'\n            Bad Request - Invalid Parameter:\n              $ref: '#/components/examples/badRequestInvalidParameters'\n            Bad Request - More Than One Benchmark Identifier:\n              $ref: '#/components/examples/badRequestMoreThanOneBenchmarkIdentifier'\n            Bad Request - Malformed JSON:\n              $ref: '#/components/examples/badRequestMalformedJSON'\n            Bad Request - Read Timeout:\n              $ref: '#/components/examples/badRequestReadTimeout'\n    '401':\n      description: \u003e-\n        Unauthenticated USERNAME-SERIAL. Ensure you are logged in and have\n        successfully generated an API KEY for the IP range you are connecting\n        from. For more help, select the **Report Issue** in the top right corner\n        of this Developer Portal specification card and choose Connectivity 401\n        or 403 Responses.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n          examples:\n            Bad Request - Date Format:\n              $ref: '#/components/examples/unauthenticated'\n    '403':\n      description: \u003e-\n        The USERNAME-SERIAL attempted to request the endpoint is not authorized\n        to access. The request was a legal request, but the server is refusing\n        to respond. Please reach out to FactSet Account Team for assistance with\n        authorization.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n          examples:\n            Bad Request - forbidden:\n              $ref: '#/components/examples/forbidden'\n    '415':\n      description: \u003e-\n        Unsupported Media Type. This error may be returned when the caller sends\n        a resource in a format that is not accepted by the server. This can be\n        fixed by ensuring that Content-Type header is set to the correct value.\n        In this instance, \"application/json\" would be the appropriate value.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n          examples:\n            Bad Request - Unsupported Media Type:\n              $ref: '#/components/examples/unsupportedMediaType'\n    '500':\n      description: Internal Server Error.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorResponse'\n          examples:\n            Internal Server Error - Not Writable:\n              $ref: '#/components/examples/notWritable'\n            Internal Server Error - General Exception:\n              $ref: '#/components/examples/generalException'\n  examples:\n    resultofBenchmarkIDSPY-US:\n      summary: \u003e-\n        Result of Benchmark Constituent Id SPY-US (only first 10 records for\n        example purpose).\n      description: \u003e\n        This is the list of all constituents that make up the SPDR S\u0026P 500 ETF\n        (SPY-US) as of 2020-07-01. The ETF is used as a proxy for S\u0026P 500\n        Benchmark. To limit the response size of specification file, only first\n        10 items are shown.\n      value:\n        data:\n          - adjHolding: 0.89521\n            adjMarketValue: 304.908526\n            currency: USD\n            date: '2021-03-08'\n            fsymId: SPY-US\n            fsymRegionalId: F07Q7W-R\n            fsymSecurityId: TKPJVY-S\n            price: 340.6\n            requestId: SPY-US\n            unadjHolding: 0.89521\n            weightClose: 0.092687242574555\n          - adjHolding: 15.456894\n            adjMarketValue: 1168.69575534\n            currency: USD\n            date: '2021-03-08'\n            fsymId: SPY-US\n            fsymRegionalId: MKC1SV-R\n            fsymSecurityId: K6TLGQ-S\n            price: 75.61\n            requestId: SPY-US\n            unadjHolding: 15.456894\n            weightClose: 0.355264539145919\n          - adjHolding: 3.212757\n            adjMarketValue: 277.35731181\n            currency: USD\n            date: '2021-03-08'\n            fsymId: SPY-US\n            fsymRegionalId: RFPMVX-R\n            fsymSecurityId: C8QZP6-S\n            price: 86.33\n            requestId: SPY-US\n            unadjHolding: 3.212757\n            weightClose: 0.084312120677006\n          - adjHolding: 1.164754\n            adjMarketValue: 156.34492942\n            currency: USD\n            date: '2021-03-08'\n            fsymId: SPY-US\n            fsymRegionalId: JWH12W-R\n            fsymSecurityId: TLPSG8-S\n            price: 134.23\n            requestId: SPY-US\n            unadjHolding: 1.164754\n            weightClose: 0.047526320724968\n          - adjHolding: 6.780214\n            adjMarketValue: 178.18402392\n            currency: USD\n            date: '2021-03-08'\n            fsymId: SPY-US\n            fsymRegionalId: LY653H-R\n            fsymSecurityId: Q0KPX4-S\n            price: 26.28\n            requestId: SPY-US\n            unadjHolding: 6.780214\n            weightClose: 0.0541650509569\n          - adjHolding: 5.847468\n            adjMarketValue: 261.14792088\n            currency: USD\n            date: '2021-03-08'\n            fsymId: SPY-US\n            fsymRegionalId: FS32CR-R\n            fsymSecurityId: D1QS87-S\n            price: 44.66\n            requestId: SPY-US\n            unadjHolding: 5.847468\n            weightClose: 0.079384728948003\n          - adjHolding: 0.874856\n            adjMarketValue: 256.8139788\n            currency: USD\n            date: '2021-03-08'\n            fsymId: SPY-US\n            fsymRegionalId: CN7T72-R\n            fsymSecurityId: C0SZHB-S\n            price: 293.55\n            requestId: SPY-US\n            unadjHolding: 0.874856\n            weightClose: 0.078067280905002\n          - adjHolding: 3.484578\n            adjMarketValue: 242.178171\n            currency: USD\n            date: '2021-03-08'\n            fsymId: SPY-US\n            fsymRegionalId: X0N4MP-R\n            fsymSecurityId: D506QF-S\n            price: 69.5\n            requestId: SPY-US\n            unadjHolding: 3.484578\n            weightClose: 0.073618232904839\n          - adjHolding: 0.90688\n            adjMarketValue: 539.5210496\n            currency: USD\n            date: '2021-03-08'\n            fsymId: SPY-US\n            fsymRegionalId: V9977J-R\n            fsymSecurityId: JPYYTB-S\n            price: 594.92\n            requestId: SPY-US\n            unadjHolding: 0.90688\n            weightClose: 0.164005641476728\n          - adjHolding: 2.505859\n            adjMarketValue: 855.62555555\n            currency: USD\n            date: '2021-03-08'\n            fsymId: SPY-US\n            fsymRegionalId: KC6WDM-R\n            fsymSecurityId: BV8916-S\n            price: 341.45\n            requestId: SPY-US\n            unadjHolding: 2.505859\n            weightClose: 0.260096280220945\n    resultofBenchmarkID-TOPIX:\n      summary: The list of Benchmark Ids under the family TOPIX\n      description: \u003e-\n        Result of requesting a sample list of using familyFilter set to TOPIX.\n        Each fsymId represents a unique Benchmark Id that can be used in other\n        benchmark endpoints.\n      value:\n        data:\n          - fsymId: '180511'\n            name: Tokyo Stock Exchange 2nd Section\n            familyName: TOPIX\n            market: TOPIX Indices\n            categoryDescription: TOPIX Indices\n          - fsymId: '152470'\n            name: Tokyo Stock Exchange Mothers\n            familyName: TOPIX\n            market: TOPIX Indices\n            categoryDescription: TOPIX Indices\n          - fsymId: '152471'\n            name: Tokyo Stock Exchange REIT\n            familyName: TOPIX\n            market: TOPIX Indices\n            categoryDescription: TOPIX Indices\n          - fsymId: '180460'\n            name: TOPIX\n            familyName: TOPIX\n            market: TOPIX Indices\n            categoryDescription: TOPIX Indices\n          - fsymId: '182297'\n            name: TOPIX 100\n            familyName: TOPIX\n            market: TOPIX Indices\n            categoryDescription: TOPIX Indices\n          - fsymId: '152469'\n            name: TOPIX 1000\n            familyName: TOPIX\n            market: TOPIX Indices\n            categoryDescription: TOPIX Indices\n          - fsymId: '182301'\n            name: TOPIX 500\n            familyName: TOPIX\n            market: TOPIX Indices\n            categoryDescription: TOPIX Indices\n          - fsymId: '182295'\n            name: TOPIX Core 30\n            familyName: TOPIX\n            market: TOPIX Indices\n            categoryDescription: TOPIX Indices\n          - fsymId: '182296'\n            name: TOPIX Large 70\n            familyName: TOPIX\n            market: TOPIX Indices\n            categoryDescription: TOPIX Indices\n          - fsymId: '180710'\n            name: TOPIX Large Cap\n            familyName: TOPIX\n            market: TOPIX Indices\n            categoryDescription: TOPIX Indices\n          - fsymId: '182300'\n            name: TOPIX Mid 400\n            familyName: TOPIX\n            market: TOPIX Indices\n            categoryDescription: TOPIX Indices\n          - fsymId: '180711'\n            name: TOPIX Mid Cap\n            familyName: TOPIX\n            market: TOPIX Indices\n            categoryDescription: TOPIX Indices\n          - fsymId: '182302'\n            name: TOPIX Small\n            familyName: TOPIX\n            market: TOPIX Indices\n            categoryDescription: TOPIX Indices\n          - fsymId: '180712'\n            name: TOPIX Small Cap\n            familyName: TOPIX\n            market: TOPIX Indices\n            categoryDescription: TOPIX Indices\n    resultofIndexSnapshotMultiple:\n      summary: Index Snapshot of Prices and Returns for Two Companies as of 2020-08-06\n      description: The Price and Returns of S\u0026P 500 and Russell 3000 as of 2020-08-06\n      value:\n        data:\n          - constituentNumber: 505\n            currency: LOCAL\n            date: '2020-08-06'\n            fsymId: SP50\n            marketValue: 27696158.012077\n            name: S\u0026P 500\n            price: 3349.15600690205\n            priceReturnPercent1D: 0.642620385795123\n            priceReturnPercentQTD: 8.02735451465131\n            priceReturnPercentYTD: 3.66394447660916\n            requestId: SP50\n            returnType: GROSS\n            totalReturnLevel: 6870.86168040129\n            totalReturnPercent1D: 0.653957589855003\n            totalReturnPercentQTD: 8.17415047623613\n            totalReturnPercentYTD: 4.84152796547426\n          - constituentNumber: 3000\n            currency: LOCAL\n            date: '2020-08-06'\n            fsymId: R.3000\n            marketValue: 32954409.7735481\n            name: Russell 3000\n            price: 3596.989378\n            priceReturnPercent1D: 0.502392266457519\n            priceReturnPercentQTD: 8.22378331718046\n            priceReturnPercentYTD: 3.47683663855225\n            requestId: R.3000\n            returnType: GROSS\n            totalReturnLevel: 10597.086657\n            totalReturnPercent1D: 0.513265793869122\n            totalReturnPercentQTD: 8.35826463942657\n            totalReturnPercentYTD: 4.59191053652597\n    resultofIndexHistoryMultiple:\n      summary: Index History Prices and Returns for Two Companies over two days\n      description: \u003e-\n        The Price and Returns history for the S\u0026P 500 and Russell 3000 from\n        2020-08-05 to 2020-08-06\n      value:\n        data:\n          - currency: LOCAL\n            date: '2020-08-05'\n            fsymId: SP50\n            marketValue: 27519313.2948137\n            name: S\u0026P 500\n            price: 3327.77107160334\n            priceReturnPercent: 0.643080929116979\n            requestId: SP50\n            returnType: GROSS\n            hedgeType: UNHEDGED\n            totalReturnLevel: 6826.22108948631\n            totalReturnPercent: 0.643080929117001\n          - currency: LOCAL\n            date: '2020-08-06'\n            fsymId: SP50\n            marketValue: 27696158.012077\n            name: S\u0026P 500\n            price: 3349.15600690205\n            priceReturnPercent: 0.642620385795123\n            requestId: SP50\n            returnType: GROSS\n            hedgeType: UNHEDGED\n            totalReturnLevel: 6870.86168040129\n            totalReturnPercent: 0.653957589855003\n          - currency: LOCAL\n            date: '2020-08-05'\n            fsymId: R.3000\n            marketValue: 32788760.7030179\n            name: Russell 3000\n            price: 3579.008715\n            priceReturnPercent: 0.751585489130235\n            requestId: R.3000\n            returnType: GROSS\n            hedgeType: UNHEDGED\n            totalReturnLevel: 10542.973182\n            totalReturnPercent: 0.751900743100942\n          - currency: LOCAL\n            date: '2020-08-06'\n            fsymId: R.3000\n            marketValue: 32954409.7735481\n            name: Russell 3000\n            price: 3596.989378\n            priceReturnPercent: 0.502392266457519\n            requestId: R.3000\n            returnType: GROSS\n            hedgeType: UNHEDGED\n            totalReturnLevel: 10597.086657\n            totalReturnPercent: 0.513265793869122\n    allRatiosRequest:\n      summary: \u003e-\n        Requesting all available index level ratios for S\u0026P 500 on LTM basis as\n        of latest calendar year end\n      description: \u003e\n        Requesting all available index level ratios for S\u0026P 500 on LTM basis as\n        of latest calendar year end\n      value:\n        ids:\n          - SP50\n        periodicity: LTM\n        metrics:\n          - GROSS_MARGIN\n          - OPER_INC_SALES\n          - NET_MGN\n          - EBIT_MARGIN\n          - EBITDA_MARGIN\n          - ROA\n          - ROE\n          - ROIC\n          - FCF_MGN\n          - PE\n          - PEX\n          - PSALES\n          - PBK\n          - PCF\n          - PCFX\n          - PFCF\n          - EVAL_EBIT\n          - EVAL_EBITDA\n          - EVAL_SALES\n          - NDEBT_EBITDA\n          - NDEBT_EBITDA_MIN_CAPEX\n          - DEBT_EBITDA\n          - DEBT_EBIT\n          - EBIT_INT_EXP\n          - EBITDA_INT_EXP\n          - OPER_CF_INT_EXP\n          - LTD_EBITDA\n          - NDEBT_FFO\n          - LTD_FFO\n          - FCF_DEBT\n          - OPER_CF_DEBT\n          - LTD_EQ\n          - LTD_TCAP\n          - LTD_ASSETS\n          - DEBT_ASSETS\n          - DEBT_EQ\n          - NDEBT_TCAP\n          - DEBT_TCAP\n        frequency: CY\n    allRatiosSP50:\n      summary: Result of Fetching all avialable Index Level LTM Ratios for the S\u0026P 500\n      description: \u003e\n        The response of requesting all available Index Level Ratios on a Last\n        Twelve-Month basis as of latest calendar year end.\n      value:\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: GROSS_MARGIN\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 31.9792508103446\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: OPER_INC_SALES\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 14.1443835805019\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: NET_MGN\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 10.6712678960164\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: EBIT_MARGIN\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 13.9233219620531\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: EBITDA_MARGIN\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 20.2564469882192\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: ROA\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 3.57523339824615\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: ROE\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 16.4002812973854\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: ROIC\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 8.89427850180667\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: FCF_MGN\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 11.7909348774282\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: PE\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 21.5977805004107\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: PEX\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 21.0620470124885\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: PSALES\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 2.30475701679242\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: PBK\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 3.54209675605922\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: PCF\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 12.9919258671496\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: PCFX\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 12.7987467084674\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: PFCF\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 19.6190668285358\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: EVAL_EBIT\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 20.6321659086833\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: EVAL_EBITDA\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 14.0500792506603\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: EVAL_SALES\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 2.80945955717182\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: NDEBT_EBITDA\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 1.79159020571431\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: NDEBT_EBITDA_MIN_CAPEX\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 2.7472833444278\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: DEBT_EBITDA\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 2.56510943570962\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: DEBT_EBIT\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 3.76679465697695\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: EBIT_INT_EXP\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 7.11304856820085\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: EBITDA_INT_EXP\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 10.4497127870097\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: OPER_CF_INT_EXP\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 8.84109224468855\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: LTD_EBITDA\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 2.25145309045414\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: NDEBT_FFO\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 208.398439260982\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: LTD_FFO\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 262.009129565082\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: FCF_DEBT\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 18.426933255696\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: OPER_CF_DEBT\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 31.8745985665069\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: LTD_EQ\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 81.639940142797\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: LTD_TCAP\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 42.2975432060763\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: LTD_ASSETS\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 27.8191040539674\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: DEBT_ASSETS\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 31.6946627066638\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: DEBT_EQ\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 93.0134328265381\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: NDEBT_TCAP\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 33.6582025424296\n        - currency: USD\n          date: '2019-12-31'\n          fsymId: SP50\n          metric: DEBT_TCAP\n          name: S\u0026P 500\n          periodicity: LTM\n          requestId: SP50\n          value: 48.1901344711744\n    badRequestDateFormat:\n      summary: Bad Request - Date Format\n      description: \u003e-\n        This bad request occurs when a request doesn't use the YYYY-MM-DD in the\n        date parameters. To resolve, convert your date to YYYY-MM-DD.\n      value:\n        status: Bad Request\n        timestamp: '2020-07-02 11:52:36.464'\n        path: /factset-benchmarks/v1/{endpoint}\n        message: 'The date parameter must be in the following date format: YYYY-MM-DD'\n        subErrors: null\n    badRequestRequiredParameter:\n      summary: Bad Request - Required Parameter Missing\n      description: \u003e-\n        This error message occurs when the request does not include the required\n        parameters. Required parameters are indicated with a red asterisks\n        symbol in the specification file.\n      value:\n        status: Bad Request\n        timestamp: '2020-06-30 13:22:09.053'\n        path: /factset-benchmarks/v1/{endpoint}\n        message: The parameter 'ids' is required and may not be empty.\n        subErrors: null\n    badRequestFutureDate:\n      summary: Bad Request - Future Date\n      description: \u003e-\n        This error message occurs when a future date is requested in the date\n        parameters. Please revise your request to include dates as of today's\n        current date or any prior historical date.\n      value:\n        status: Bad Request\n        timestamp: '2020-06-30 13:38:36.528'\n        path: /factset-benchmarks/v1/{endpoint}\n        message: \u003e-\n          The use of future dates is not applicable in this endpoint. Please\n          revise your request to include dates up to today's current date.\n        subErrors: null\n    badRequestMoreThanOneBenchmarkIdentifier:\n      summary: Bad Request - More Than One Benchmark Identifier\n      description: \u003e-\n        This error message occurs when user is passing more than one identifier\n        as an input.\n      value:\n        status: Bad Request\n        timestamp: '2020-07-02 12:37:52.731'\n        path: /factset-benchmarks/v1/constituents\n        message: \u003e-\n          You submitted 2 ids. The max number of ids you may submit is 1. Please\n          try again with fewer ids.\n        subErrors: null\n    badRequestInvalidParameters:\n      summary: Bad Request - Passing invalid Benchmark Identifier\n      description: \u003e-\n        This error message occurs when user is passing Invalid Identifier.\n        Please use the helper endpoint */id-list* for sample Benchmark\n        Identifiers.\n      value:\n        status: Forbidden\n        timestamp: '2020-07-10 15:01:43.634'\n        path: /factset-benchmarks/v1/constituents\n        message: \u003e-\n          User is not authorized for the id requested, please reach out to\n          FactSet for support\n        subErrors: null\n    badRequestMalformedJSON:\n      summary: Bad Request - Malformed JSON Request\n      description: \u003e-\n        This error may be returned when the request body is specified as JSON.\n        But is not in proper JSON format.\n      value:\n        status: Bad Request\n        timestamp: '2020-07-02 11:59:09.649'\n        path: /factset-benchmarks/v1/{endpoint}\n        message: Malformed JSON Request\n        subErrors: null\n    badRequestReadTimeout:\n      summary: Bad Request - Read Timeout\n      description: \u003e-\n        This error may be returned if it takes more than 29 seconds to hear back\n        from the data fetch service.\n      value:\n        status: Bad Request\n        timestamp: '2020-07-02 16:18:38.949'\n        path: /factset-benchmarks/v1/{endpoint}\n        message: The request took too long. Try again with a smaller request.\n        subErrors: null\n    unauthenticated:\n      summary: User Authentication Failed\n      description: \u003e-\n        This occurs when a user is not properly authenticated or recognized by\n        the service. Please double check the USERNAME-SERIAL and API-Key used to\n        request and ensure you are within the IP range specified for the Key.\n        Report Issue under 401 error for help with troubleshooting.\n      value:\n        status: User Authentication Failed\n        timestamp: '2020-07-02 16:08:07.945'\n        path: /factset-benchmarks/v1/{endpoint}\n        message: User Authentication Failed.\n        subErrors: null\n    forbidden:\n      summary: Forbidden\n      description: \u003e-\n        The USERNAME-SERIAL attempted to request the endpoint/ID which is not\n        authorized to access. The request was a legal request, but the server is\n        refusing to respond. Please reach out to FactSet Account Team for\n        assistance with authorization.\n      value:\n        status: Forbidden\n        timestamp: '2020-07-02 17:21:52.197'\n        path: /factset-benchmarks/v1/{endpoint}\n        message: \u003e-\n          User is not authorized for the id requested, please reach out to\n          FactSet for support\n        subErrors: null\n    unsupportedMediaType:\n      summary: Unsupported Media Type\n      description: \u003e-\n        This bad request occurs when the media type passed in the request is not\n        supported. Currently the APIs only support 'application/json'.\n      value:\n        status: Unsupported Media Type\n        timestamp: '2020-07-02 09:42:27.237'\n        path: /factset-benchmarks/v1/{endpoint}\n        message: \u003e-\n          text/html media type is not supported. Supported media types are\n          application/json\n        subErrors: null\n    notWritable:\n      summary: Internal Server Error - Not Writable\n      description: \u003e-\n        This error may be returned when the server encounters an error writing\n        the JSON response.\n      value:\n        status: Internal Server Error\n        timestamp: '2019-11-05 09:48:29.18'\n        path: /factset-benchmarks/v1/{endpoint}\n        message: Error writing JSON output\n        subErrors: null\n    generalException:\n      summary: Internal Server Error - General Exception\n      description: \u003e-\n        This is the most general error that can be returned to by the service.\n        Please `Report Issue` to FactSet.\n      value:\n        status: Internal Server Error\n        timestamp: '2019-11-01 10:36:01.944'\n        path: /factset-benchmarks/v1/{endpoint}\n        message: Unexpected error\n        subErrors: null\n",
			"canonicalURL": "/github.com/factset/enterprise-sdk@dcf75a02daedc726c313912a349d2863114bc92c/-/blob/specs/FactSetBenchmarks.v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/factset/enterprise-sdk/blob/dcf75a02daedc726c313912a349d2863114bc92c/specs/FactSetBenchmarks.v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/factset-benchmarks/v1/constituents\": get: security: security \"FactSetOAuth2\" (index 1): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}