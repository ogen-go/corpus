{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dmontagu/fastapi-auth"
		},
		"file": {
			"name": "non_admin.json",
			"size": 0,
			"path": "tests/test_auth_app/schemas/non_admin.json",
			"byteSize": 17823,
			"content": "{\n    \"components\": {\n        \"schemas\": {\n            \"APIMessage\": {\n                \"properties\": {\n                    \"detail\": {\n                        \"title\": \"Detail\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"detail\"\n                ],\n                \"title\": \"APIMessage\",\n                \"type\": \"object\"\n            },\n            \"AuthRegistrationRequest\": {\n                \"properties\": {\n                    \"password\": {\n                        \"title\": \"Password\",\n                        \"type\": \"string\"\n                    },\n                    \"username\": {\n                        \"title\": \"Username\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"username\",\n                    \"password\"\n                ],\n                \"title\": \"AuthRegistrationRequest\",\n                \"type\": \"object\"\n            },\n            \"AuthTokens\": {\n                \"description\": \"*Must* inherit from BaseModel (and thus use underscores) to comply with OAuth 2.0 standard\",\n                \"properties\": {\n                    \"access_token\": {\n                        \"title\": \"Access Token\",\n                        \"type\": \"string\"\n                    },\n                    \"expires_in\": {\n                        \"title\": \"Expires In\",\n                        \"type\": \"integer\"\n                    },\n                    \"refresh_token\": {\n                        \"title\": \"Refresh Token\",\n                        \"type\": \"string\"\n                    },\n                    \"token_type\": {\n                        \"title\": \"Token Type\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"access_token\",\n                    \"refresh_token\",\n                    \"token_type\"\n                ],\n                \"title\": \"AuthTokens\",\n                \"type\": \"object\"\n            },\n            \"Body_login_token_post\": {\n                \"properties\": {\n                    \"client_id\": {\n                        \"title\": \"Client Id\",\n                        \"type\": \"string\"\n                    },\n                    \"client_secret\": {\n                        \"title\": \"Client Secret\",\n                        \"type\": \"string\"\n                    },\n                    \"grant_type\": {\n                        \"pattern\": \"password\",\n                        \"title\": \"Grant Type\",\n                        \"type\": \"string\"\n                    },\n                    \"password\": {\n                        \"title\": \"Password\",\n                        \"type\": \"string\"\n                    },\n                    \"scope\": {\n                        \"default\": \"\",\n                        \"title\": \"Scope\",\n                        \"type\": \"string\"\n                    },\n                    \"username\": {\n                        \"title\": \"Username\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"username\",\n                    \"password\"\n                ],\n                \"title\": \"Body_login_token_post\",\n                \"type\": \"object\"\n            },\n            \"HTTPValidationError\": {\n                \"properties\": {\n                    \"detail\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ValidationError\"\n                        },\n                        \"title\": \"Detail\",\n                        \"type\": \"array\"\n                    }\n                },\n                \"title\": \"HTTPValidationError\",\n                \"type\": \"object\"\n            },\n            \"UserResult\": {\n                \"properties\": {\n                    \"email\": {\n                        \"format\": \"email\",\n                        \"title\": \"Email\",\n                        \"type\": \"string\"\n                    },\n                    \"userId\": {\n                        \"format\": \"uuid\",\n                        \"title\": \"Userid\",\n                        \"type\": \"string\"\n                    },\n                    \"username\": {\n                        \"title\": \"Username\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"username\",\n                    \"userId\"\n                ],\n                \"title\": \"UserResult\",\n                \"type\": \"object\"\n            },\n            \"UserUpdate\": {\n                \"properties\": {\n                    \"email\": {\n                        \"format\": \"email\",\n                        \"title\": \"Email\",\n                        \"type\": \"string\"\n                    },\n                    \"password\": {\n                        \"title\": \"Password\",\n                        \"type\": \"string\"\n                    },\n                    \"username\": {\n                        \"title\": \"Username\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"title\": \"UserUpdate\",\n                \"type\": \"object\"\n            },\n            \"ValidationError\": {\n                \"properties\": {\n                    \"loc\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"title\": \"Location\",\n                        \"type\": \"array\"\n                    },\n                    \"msg\": {\n                        \"title\": \"Message\",\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"title\": \"Error Type\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"loc\",\n                    \"msg\",\n                    \"type\"\n                ],\n                \"title\": \"ValidationError\",\n                \"type\": \"object\"\n            }\n        },\n        \"securitySchemes\": {\n            \"OAuth2RefreshPasswordBearer\": {\n                \"flows\": {\n                    \"password\": {\n                        \"refreshUrl\": \"/api/v1/token/refresh\",\n                        \"scopes\": {\n                            \"admin\": \"Admin access.\"\n                        },\n                        \"tokenUrl\": \"/api/v1/token\"\n                    }\n                },\n                \"type\": \"oauth2\"\n            }\n        }\n    },\n    \"info\": {\n        \"title\": \"Fast API\",\n        \"version\": \"0.1.0\"\n    },\n    \"openapi\": \"3.0.2\",\n    \"paths\": {\n        \"/register\": {\n            \"post\": {\n                \"description\": \"Create new user without the need to be logged in.\",\n                \"operationId\": \"register\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/AuthRegistrationRequest\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserResult\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"summary\": \"Register\",\n                \"tags\": [\n                    \"auth\"\n                ]\n            }\n        },\n        \"/self\": {\n            \"get\": {\n                \"operationId\": \"read_self\",\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserResult\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"OAuth2RefreshPasswordBearer\": []\n                    }\n                ],\n                \"summary\": \"Read Self\",\n                \"tags\": [\n                    \"auth\"\n                ]\n            },\n            \"patch\": {\n                \"description\": \"Update a user.\",\n                \"operationId\": \"update_self\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/UserUpdate\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserResult\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"OAuth2RefreshPasswordBearer\": []\n                    }\n                ],\n                \"summary\": \"Update Self\",\n                \"tags\": [\n                    \"auth\"\n                ]\n            }\n        },\n        \"/token\": {\n            \"post\": {\n                \"description\": \"OAuth2 compatible token login, get an access token for future requests\",\n                \"operationId\": \"login\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/x-www-form-urlencoded\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/Body_login_token_post\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthTokens\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"summary\": \"Login\",\n                \"tags\": [\n                    \"auth\"\n                ]\n            }\n        },\n        \"/token/logout\": {\n            \"get\": {\n                \"description\": \"Invalidate the provided refresh token\",\n                \"operationId\": \"logout\",\n                \"parameters\": [\n                    {\n                        \"in\": \"header\",\n                        \"name\": \"authorization\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"title\": \"Authorization\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIMessage\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"summary\": \"Logout\",\n                \"tags\": [\n                    \"auth\"\n                ]\n            }\n        },\n        \"/token/logout/all\": {\n            \"get\": {\n                \"description\": \"Invalidate all outstanding refresh tokens for the user\",\n                \"operationId\": \"logout_all\",\n                \"parameters\": [\n                    {\n                        \"in\": \"header\",\n                        \"name\": \"authorization\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"title\": \"Authorization\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIMessage\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"summary\": \"Logout All\",\n                \"tags\": [\n                    \"auth\"\n                ]\n            }\n        },\n        \"/token/refresh\": {\n            \"post\": {\n                \"description\": \"Consume a refresh token to request a new access token\",\n                \"operationId\": \"refresh\",\n                \"parameters\": [\n                    {\n                        \"in\": \"header\",\n                        \"name\": \"authorization\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"title\": \"Authorization\",\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthTokens\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    },\n                    \"422\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        },\n                        \"description\": \"Validation Error\"\n                    }\n                },\n                \"summary\": \"Refresh\",\n                \"tags\": [\n                    \"auth\"\n                ]\n            }\n        },\n        \"/token/validate\": {\n            \"get\": {\n                \"operationId\": \"validate_token\",\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/APIMessage\"\n                                }\n                            }\n                        },\n                        \"description\": \"Successful Response\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"OAuth2RefreshPasswordBearer\": []\n                    }\n                ],\n                \"summary\": \"Validate Token\",\n                \"tags\": [\n                    \"auth\"\n                ]\n            }\n        }\n    }\n}",
			"canonicalURL": "/github.com/dmontagu/fastapi-auth@d0e86774f66bd43e80376de19bdf034eb228dc07/-/blob/tests/test_auth_app/schemas/non_admin.json",
			"externalURLs": [
				{
					"url": "https://github.com/dmontagu/fastapi-auth/blob/d0e86774f66bd43e80376de19bdf034eb228dc07/tests/test_auth_app/schemas/non_admin.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/token/validate\": get: security: security \"OAuth2RefreshPasswordBearer\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}