{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "watchful.li-1.0.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/watchful.li-1.0.0-swagger.yaml",
			"byteSize": 77003,
			"content": "openapi: 3.0.0\ninfo:\n  title: watchful.li\n  version: 1.0.0\n  x-apisguru-categories:\n    - hosting\n  x-logo:\n    backgroundColor: \"#1B4E65\"\n    url: https://d2071nnd6m4201.cloudfront.net/templates/balloon/images/logo.svg\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: swagger\n      url: https://watchful.li/api/v1/api-docs/\n      version: \"1.2\"\n  x-providerName: watchful.li\nexternalDocs:\n  url: https://watchful.li/faqs/tools/watchful-rest-api.html\ntags:\n  - description: Operations about audits\n    name: audits\n  - description: Operations about extensions\n    name: extensions\n  - description: Operations about feedbacks\n    name: feedbacks\n  - description: Operations about logs\n    name: logs\n  - description: Create reports in PDF\n    name: reports\n  - description: Operations about sites\n    name: sites\n  - description: Operations about SsoUser\n    name: ssousers\n  - description: Operations about tags\n    name: tags\npaths:\n  /audits:\n    get:\n      description: Returns a list of audits\n      operationId: getAudits\n      parameters:\n        - description: Number of object to return (max 100, default 25)\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - description: Start of the return (default 0)\n          in: query\n          name: limitstart\n          required: false\n          schema:\n            type: integer\n            format: int64\n            minimum: 0\n        - description: \"ORDER by this field separete by comas. Add + / - after field for\n            set ASC / DESC: type+,name-\"\n          in: query\n          name: order\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Audit\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Audit\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Audit\"\n        \"403\":\n          description: Invalid API Key\n      summary: Get a list of audits\n      tags:\n        - audits\n  /audits/metadata:\n    get:\n      description: Returns a list of fields\n      operationId: getFieldsAudits\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n      summary: Get the list of fields\n      tags:\n        - audits\n  \"/audits/{id}\":\n    delete:\n      description: Delete a specific audit\n      operationId: deleteAuditById\n      parameters:\n        - description: ID of audit that needs to be deleted\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: Audit correctly deleted\n          content:\n            application/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Delete a specific audit\n      tags:\n        - audits\n    get:\n      description: Returns a audit based on ID\n      operationId: getAuditById\n      parameters:\n        - description: ID of audit that needs to be fetched\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - description: \"Fields to return separate by comas: name,id\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Audit\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Audit\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Audit\"\n        \"400\":\n          description: Invalid ID\n        \"403\":\n          description: Invalid API Key\n      summary: Find audit by ID\n      tags:\n        - audits\n  /extensions:\n    get:\n      description: Returns a list Extensions\n      operationId: getExtensions\n      parameters:\n        - description: Do a 'LIKE' search, you can also use '%'\n          in: query\n          name: ext_name\n          required: false\n          schema:\n            type: string\n        - description: List of sites id separated by comma\n          in: query\n          name: siteids\n          required: false\n          schema:\n            type: string\n        - description: Do a 'LIKE' search, you can also use '%'. technical name of the\n            extension com_xxxx\n          in: query\n          name: ext_prefix\n          required: false\n          schema:\n            type: string\n        - description: Do a 'LIKE' search, you can also use '%'\n          in: query\n          name: version\n          required: false\n          schema:\n            type: string\n        - description: update available for this extension\n          in: query\n          name: vUpdate\n          required: false\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 0\n        - description: \"Fields to return separate by comas: name,id\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: Number of object to return (max 100, default 25)\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - description: Start of the return (default 0)\n          in: query\n          name: limitstart\n          required: false\n          schema:\n            type: integer\n            format: int64\n            minimum: 0\n        - description: \"ORDER by this field separete by comas. Add + / - after field for\n            set ASC / DESC: type+,name-\"\n          in: query\n          name: order\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Extension\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Extension\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Extension\"\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid\n      summary: Get a list Extensions\n      tags:\n        - extensions\n  /extensions/metadata:\n    get:\n      description: Returns a list of fields\n      operationId: getFieldsExtensions\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n      summary: Get the list of fields\n      tags:\n        - extensions\n  \"/extensions/{id}/ignore\":\n    post:\n      description: Set 'ignore updates' for a given extension / site_id\n      operationId: ignoreExtensionUpdate\n      parameters:\n        - description: ID of the extension\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: Extension successfully updated\n          content:\n            application/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n        \"404\":\n          description: Update not found for the given extension\n      summary: Set 'ignore updates' for a given extension / site_id\n      tags:\n        - extensions\n  \"/extensions/{id}/unignore\":\n    post:\n      description: Remove 'ignore updates' for a given extension\n      operationId: unignoreExtensionUpdate\n      parameters:\n        - description: ID of the extension\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: Extension successfully updated\n          content:\n            application/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n        \"404\":\n          description: Update not found for the given extension\n      summary: Remove 'ignore updates' for a given extension\n      tags:\n        - extensions\n  \"/extensions/{id}/update\":\n    post:\n      description: Update the extension on the remote site\n      operationId: updateExtension\n      parameters:\n        - description: ID of the extension\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: Extension successfully updated\n          content:\n            application/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n        \"404\":\n          description: Update not found for the given extension\n      summary: Update the extension on the remote site\n      tags:\n        - extensions\n  /feedbacks:\n    get:\n      description: Returns a list of feedbacks\n      operationId: getFeedbacks\n      parameters:\n        - description: Fields to return separate by comas (es. name,id)\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Feedback\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Feedback\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Feedback\"\n        \"403\":\n          description: Invalid API Key\n      summary: Get feedbacks\n      tags:\n        - feedbacks\n    post:\n      description: Create a feedback\n      operationId: createFeedbacks\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Feedback\"\n        description: JSON object Feedback\n        required: true\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Audit\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Audit\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Audit\"\n        \"201\":\n          description: Saved successfully\n        \"400\":\n          description: Invalid data\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Not saved\n      summary: Create a feedback\n      tags:\n        - feedbacks\n  /feedbacks/metadata:\n    get:\n      description: Returns a list of fields\n      operationId: getFieldsFeedbacks\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n      summary: Get the list of fields\n      tags:\n        - feedbacks\n  /logs:\n    get:\n      description: Returns a list of logs\n      parameters:\n        - description: Type of the log\n          in: query\n          name: log_type\n          schema:\n            type: string\n            enum:\n              - \"\"\n              - plugin_sends_error\n              - curlerror\n              - modified_file\n              - word_not_in_homepage\n              - file_not_exists\n              - update_available\n              - new_extension\n              - deleted_extension\n              - extension_not_saved\n              - modified_value_files\n              - custom\n        - description: Do a 'LIKE' search, you can also use '%'\n          in: query\n          name: log_entry\n          required: false\n          schema:\n            type: string\n        - description: Logs after this date, format YYYY-MM-DD HH:MM:SS\n          in: query\n          name: from\n          required: false\n          schema:\n            type: string\n        - description: Logs before this date, format YYYY-MM-DD HH:MM:SS\n          in: query\n          name: to\n          required: false\n          schema:\n            type: string\n        - description: \"Fields to return separate by comas: name,id\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: Number of object to return (max 100, default 25)\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - description: Start of the return (default 0)\n          in: query\n          name: limitstart\n          required: false\n          schema:\n            type: integer\n            format: int64\n            minimum: 0\n        - description: \"ORDER by this field separete by comas. Add + / - after field for\n            set ASC / DESC: type+,name-\"\n          in: query\n          name: order\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Log\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Log\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Log\"\n        \"403\":\n          description: Invalid API Key\n      summary: Get a list of logs\n      tags:\n        - logs\n  /logs/export:\n    get:\n      description: Returns a file contain the list of logs\n      operationId: getExportLogs\n      parameters:\n        - description: Format of exported file (PDF or CSV)\n          in: query\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - csv\n              - pdf\n        - description: Site id of the log\n          in: query\n          name: site\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - description: Type of the log\n          in: query\n          name: filter_type\n          schema:\n            type: string\n            enum:\n              - \"\"\n              - plugin_sends_error\n              - curlerror\n              - modified_file\n              - word_not_in_homepage\n              - file_not_exists\n              - update_available\n              - new_extension\n              - deleted_extension\n              - extension_not_saved\n              - modified_value_files\n              - custom\n        - description: Do a 'LIKE' search, you can also use '%'\n          in: query\n          name: search\n          required: false\n          schema:\n            type: string\n        - description: Logs after this date, format YYYY-MM-DD HH:MM:SS\n          in: query\n          name: startdate\n          required: false\n          schema:\n            type: string\n        - description: Logs before this date, format YYYY-MM-DD HH:MM:SS\n          in: query\n          name: enddate\n          required: false\n          schema:\n            type: string\n        - description: Number of object to return (max 100, default 25)\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - description: Start of the return (default 0)\n          in: query\n          name: startid\n          required: false\n          schema:\n            type: integer\n            format: int64\n            minimum: 0\n      responses:\n        \"200\":\n          description: No response was specified\n        \"403\":\n          description: Invalid API Key\n      summary: Get a CSV or PDF file contain the list of logs\n      tags:\n        - logs\n  /logs/metadata:\n    get:\n      description: Returns a list of fields\n      operationId: getFieldsLogs\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n      summary: Get the list of fields\n      tags:\n        - logs\n  /logs/types:\n    get:\n      description: Returns a list of log types\n      operationId: getTypesLogs\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n      summary: Get the list of log types\n      tags:\n        - logs\n  \"/logs/{id}\":\n    delete:\n      description: Delete a specific log\n      operationId: deleteLogById\n      parameters:\n        - description: ID of log that needs to be deleted\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: Log correctly deleted\n          content:\n            application/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Delete a specific log\n      tags:\n        - logs\n  /packages:\n    post:\n      responses:\n        default:\n          description: No description\n  \"/reports/sites/{id}\":\n    get:\n      description: Returns a PDF report based on a site ID\n      parameters:\n        - description: ID that needs to be fetched\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - description: \"Start of the report, format YYYY-MM-DD, default today-30day \"\n          in: query\n          name: from\n          required: false\n          schema:\n            type: string\n        - description: End of the report, format YYYY-MM-DD, default today\n          in: query\n          name: to\n          required: false\n          schema:\n            type: string\n        - description: \"Type of reports separate by comas: Ga,Logs,Uptime\"\n          in: query\n          name: reports\n          required: false\n          schema:\n            type: string\n        - description: Type of the log to show in the report\n          in: query\n          name: log_type\n          schema:\n            type: string\n            enum:\n              - \"\"\n              - plugin_sends_error\n              - curlerror\n              - modified_file\n              - word_not_in_homepage\n              - file_not_exists\n              - update_available\n              - new_extension\n              - deleted_extension\n              - extension_not_saved\n              - modified_value_files\n        - description: Define if you want show previous values in Google Analytics graph\n          in: query\n          name: compare\n          schema:\n            type: integer\n            enum:\n              - 0\n              - 1\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/pdf:\n              schema:\n                $ref: \"#/components/schemas/Reports\"\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Returns a PDF report for a specific site\n      tags:\n        - reports\n  \"/reports/tags/{id}\":\n    get:\n      description: Returns a report based on a site ID\n      parameters:\n        - description: ID that needs to be fetched\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - description: \"Start of the report, format YYYY-MM-DD, default today-30day \"\n          in: query\n          name: from\n          required: false\n          schema:\n            type: string\n        - description: End of the report, format YYYY-MM-DD, default today\n          in: query\n          name: to\n          required: false\n          schema:\n            type: string\n        - description: \"Type of reports separate by comas: Ga,Logs,Uptime\"\n          in: query\n          name: reports\n          required: false\n          schema:\n            type: string\n        - description: Type of the log to show in the report\n          in: query\n          name: log_type\n          schema:\n            type: string\n            enum:\n              - \"\"\n              - plugin_sends_error\n              - curlerror\n              - modified_file\n              - word_not_in_homepage\n              - file_not_exists\n              - update_available\n              - new_extension\n              - deleted_extension\n              - extension_not_saved\n              - modified_value_files\n        - description: Define if you want show previous values in Google Analytics graph\n          in: query\n          name: compare\n          schema:\n            type: integer\n            enum:\n              - 0\n              - 1\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/pdf:\n              schema:\n                $ref: \"#/components/schemas/Reports\"\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Find sites by ID\n      tags:\n        - reports\n  /sites:\n    get:\n      description: Returns a list of Sites\n      operationId: getSites\n      parameters:\n        - description: List of sites id separated by comma\n          in: query\n          name: siteids\n          required: false\n          schema:\n            type: string\n        - description: Site name. Do a 'LIKE' search, you can also use '%'\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Access URL. Do a 'LIKE' search, you can also use '%'\n          in: query\n          name: access_url\n          required: false\n          schema:\n            type: string\n        - description: Joomla version. Do a 'LIKE' search, you can also use '%'\n          in: query\n          name: j_version\n          required: false\n          schema:\n            type: string\n        - description: Ip address. Do a 'LIKE' search, you can also use '%'\n          in: query\n          name: ip\n          required: false\n          schema:\n            type: string\n        - description: \"Joomla core update status (1: update required, 0: update not\n            required)\"\n          in: query\n          name: jUpdate\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 0\n        - description: canUpdate\n          in: query\n          name: canUpdate\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 0\n        - description: Is published\n          in: query\n          name: published\n          required: false\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 0\n        - description: Has errors\n          in: query\n          name: error\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: nbUpdates\n          required: false\n          schema:\n            type: string\n        - description: Is online\n          in: query\n          name: up\n          required: false\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 0\n        - description: Fields to return separated by commas (e.g. name,id)\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: Number of objects to return (max 100, default 25)\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - description: Start of the return (default 0)\n          in: query\n          name: limitstart\n          required: false\n          schema:\n            type: integer\n            format: int64\n            minimum: 0\n        - description: \"ORDER by this field separete by comas. Add + / - after field for\n            set ASC / DESC: type+,name-\"\n          in: query\n          name: order\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Get a list of Sites\n      tags:\n        - sites\n    post:\n      description: Create a site\n      operationId: createSite\n      requestBody:\n        $ref: \"#/components/requestBodies/PostSite\"\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n        \"201\":\n          description: Saved successfully\n        \"400\":\n          description: Invalid data\n        \"403\":\n          description: Not allowed to add sites\n        \"404\":\n          description: Not saved\n      summary: Create a site\n      tags:\n        - sites\n  /sites/metadata:\n    get:\n      description: Returns a list of fields\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n      summary: Get the list of fields\n      tags:\n        - sites\n  \"/sites/{id}\":\n    delete:\n      description: Delete a specific Site\n      parameters:\n        - description: ID of Site that needs to be deleted\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: Deleted successfully\n          content:\n            application/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Delete a specific Site\n      tags:\n        - sites\n    get:\n      description: Return a site based on ID\n      operationId: getSiteById\n      parameters:\n        - description: ID that needs to be fetched\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - description: \"Fields to return separate by comas: name,id\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Find sites by ID\n      tags:\n        - sites\n    put:\n      description: Update a site\n      parameters:\n        - description: ID of the website that needs to be update\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      requestBody:\n        $ref: \"#/components/requestBodies/PostSite\"\n      responses:\n        \"200\":\n          description: Updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n        \"400\":\n          description: Invalid data\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Update a site\n      tags:\n        - sites\n  \"/sites/{id}/audits\":\n    get:\n      description: Return audits for a specific website\n      operationId: getSiteAudits\n      parameters:\n        - description: ID of the website\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - description: \"Fields to return separate by comas: name,id\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: Number of object to return (max 100, default 25)\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - description: Start of the return (default 0)\n          in: query\n          name: limitstart\n          required: false\n          schema:\n            type: integer\n            format: int64\n            minimum: 0\n        - description: ORDER by this field\n          in: query\n          name: order\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Audits\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Audits\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Audits\"\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Return audits for a specific website\n      tags:\n        - sites\n    post:\n      description: Create an audit for the site\n      operationId: createAudits\n      parameters:\n        - description: ID of the website\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Audit\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Audit\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Audit\"\n        \"201\":\n          description: Saved successfully\n        \"400\":\n          description: Invalid data\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Not saved\n      summary: Create an audit for the site\n      tags:\n        - sites\n  \"/sites/{id}/backupnow\":\n    post:\n      description: Add the site to the backup queue\n      operationId: addSiteToBackupQueue\n      parameters:\n        - description: ID of the website\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Add the site to the backup queue\n      tags:\n        - sites\n  \"/sites/{id}/backupprofiles\":\n    get:\n      description: Return backup profile\n      operationId: getBackupProfiles\n      parameters:\n        - description: ID of the website\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: No response was specified\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Return backup profile\n      tags:\n        - sites\n  \"/sites/{id}/backups\":\n    get:\n      description: List of latest backups\n      operationId: getListBackups\n      parameters:\n        - description: ID of the website\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: No response was specified\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: List of latest backups\n      tags:\n        - sites\n  \"/sites/{id}/backupstart\":\n    post:\n      description: Start a remote backup for the site\n      operationId: startSiteBackup\n      parameters:\n        - description: ID of the website\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Start a remote backup for the site\n      tags:\n        - sites\n  \"/sites/{id}/backupstep\":\n    post:\n      description: Step (continue) a remote backup for the site\n      operationId: stepSiteBackup\n      parameters:\n        - description: ID of the website\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Step (continue) a remote backup for the site\n      tags:\n        - sites\n  \"/sites/{id}/extensions\":\n    get:\n      description: Get extensions for a site\n      parameters:\n        - description: ID of the website\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - description: \"Fields to return separate by comas: name,id\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: Number of object to return (max 100, default 25)\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - description: Start of the return (default 0)\n          in: query\n          name: limitstart\n          required: false\n          schema:\n            type: integer\n            format: int64\n            minimum: 0\n        - description: ORDER by this field\n          in: query\n          name: order\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Extension\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Extension\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Extension\"\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid\n      summary: Get extensions for a site\n      tags:\n        - sites\n    post:\n      operationId: installExtension\n      parameters:\n        - description: ID of the website\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - description: URL to install the extension from\n          in: query\n          name: url\n          required: true\n          schema:\n            type: string\n            format: url\n      responses:\n        \"200\":\n          description: No response was specified\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Install extension\n      tags:\n        - sites\n  \"/sites/{id}/logs\":\n    get:\n      description: Return logs for a specific website\n      parameters:\n        - description: ID of the website\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - description: Do a 'LIKE' search, you can also use '%'\n          in: query\n          name: log_entry\n          required: false\n          schema:\n            type: string\n        - description: Type of the log\n          in: query\n          name: log_type\n          schema:\n            type: string\n            enum:\n              - \"\"\n              - plugin_sends_error\n              - curlerror\n              - modified_file\n              - word_not_in_homepage\n              - file_not_exists\n              - update_available\n              - new_extension\n              - deleted_extension\n              - extension_not_saved\n              - modified_value_files\n        - description: Logs after this date, format YYYY-MM-DD HH:MM:SS\n          in: query\n          name: from\n          required: false\n          schema:\n            type: string\n        - description: Logs before this date, format YYYY-MM-DD HH:MM:SS\n          in: query\n          name: to\n          required: false\n          schema:\n            type: string\n        - description: \"Fields to return separate by comas: name,id\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: Number of object to return (max 100, default 25)\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - description: Start of the return (default 0)\n          in: query\n          name: limitstart\n          required: false\n          schema:\n            type: integer\n            format: int64\n            minimum: 0\n        - description: \"ORDER by this field separete by comas. Add + / - after field for\n            set ASC / DESC: type+,name-\"\n          in: query\n          name: order\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Log\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Log\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Log\"\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Return logs for a specific website\n      tags:\n        - sites\n    post:\n      description: Create a custom log for a specific website\n      operationId: CreateLog\n      parameters:\n        - description: ID of the website\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PostLog\"\n        description: JSON object Log (only type custom)\n        required: true\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Log\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Log\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Log\"\n        \"201\":\n          description: Saved successfully\n        \"400\":\n          description: Invalid data\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Not saved\n      summary: Create a custom log for a specific website\n      tags:\n        - sites\n  \"/sites/{id}/monitor\":\n    delete:\n      description: Return boolean\n      operationId: deleteMonitor\n      parameters:\n        - description: ID of the website\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Monitor\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Monitor\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Monitor\"\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Delete uptime monitor\n      tags:\n        - sites\n    post:\n      description: Return boolean\n      operationId: postMonitor\n      parameters:\n        - description: ID of the website\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Monitor\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Monitor\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Monitor\"\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Post uptime monitor\n      tags:\n        - sites\n  \"/sites/{id}/scanner\":\n    get:\n      description: Scan the site for malware\n      operationId: scanner\n      parameters:\n        - description: ID of the website\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Scan the site for malware\n      tags:\n        - sites\n  \"/sites/{id}/seo\":\n    get:\n      description: SEO analyze for a page\n      operationId: seoAnalyze\n      parameters:\n        - description: ID of the website\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: SEO analyze for a page\n      tags:\n        - sites\n  \"/sites/{id}/tags\":\n    get:\n      description: Return tags for a specific website\n      parameters:\n        - description: ID of the website\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - description: Do a 'LIKE' search, you can also use '%'\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Bootstrap color of the tag\n          in: query\n          name: type\n          schema:\n            type: string\n            enum:\n              - \"\"\n              - default\n              - success\n              - warning\n              - important\n              - info\n              - inverse\n        - description: \"Fields to return separate by comas: name,id\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: Number of object to return (max 100, default 25)\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - description: Start of the return (default 0)\n          in: query\n          name: limitstart\n          required: false\n          schema:\n            type: integer\n            format: int64\n            minimum: 0\n        - description: ORDER by this field\n          in: query\n          name: order\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Return tags for a specific website\n      tags:\n        - sites\n    post:\n      description: Add tags for a specific website\n      operationId: postTags\n      parameters:\n        - description: ID of the website\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      requestBody:\n        $ref: \"#/components/requestBodies/Tag\"\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n        \"201\":\n          description: Saved successfully\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Add tags for a specific website\n      tags:\n        - sites\n  \"/sites/{id}/updatejoomla\":\n    post:\n      description: Update Joomla core on the remote site\n      operationId: updateJoomla\n      parameters:\n        - description: ID of the website\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: Joomla core successfully updated\n          content:\n            application/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID or Joomla Update not found\n      summary: Update Joomla core on the remote site\n      tags:\n        - sites\n  \"/sites/{id}/uptime\":\n    get:\n      description: Return uptime data\n      operationId: getUptime\n      parameters:\n        - description: ID of the website\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Uptime\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Uptime\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Uptime\"\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Return uptime data\n      tags:\n        - sites\n  \"/sites/{id}/validate\":\n    get:\n      description: validate the site\n      operationId: validateSite\n      parameters:\n        - description: ID of the website\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Log\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Log\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Log\"\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: validate the site, return the new logs\n      tags:\n        - sites\n  \"/sites/{id}/validatedebug\":\n    get:\n      operationId: validateDebugSite\n      parameters:\n        - description: ID of the website\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Log\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Log\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Log\"\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: validate the site, return the debug information\n      tags:\n        - sites\n  /ssousers:\n    get:\n      description: Returns a list of SSO Users\n      operationId: getSsoUsers\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SsoUsers\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SsoUsers\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/SsoUsers\"\n        \"403\":\n          description: Invalid API Key\n      summary: Get a list of SSO Users\n      tags:\n        - ssousers\n    post:\n      description: Create a SSO User\n      operationId: CreateSsoUsers\n      requestBody:\n        $ref: \"#/components/requestBodies/SsoUsers\"\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SsoUsers\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SsoUsers\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/SsoUsers\"\n        \"201\":\n          description: Saved successfully\n        \"400\":\n          description: Invalid data\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Not saved\n      summary: Create a SSO User\n      tags:\n        - ssousers\n  \"/ssousers/{id}\":\n    delete:\n      description: Delete a specific SSO User\n      operationId: deleteSsoUserById\n      parameters:\n        - description: ID of SSO User that needs to be deleted\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: SSO User correctly deleted\n          content:\n            application/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Delete a specific SSO User\n      tags:\n        - ssousers\n    get:\n      description: Returns a SSO User based on ID\n      operationId: getSsoUsersById\n      parameters:\n        - description: ID of SSO User that needs to be fetched\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - description: \"Fields to return separate by comas: name,id\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SsoUsers\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SsoUsers\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/SsoUsers\"\n        \"400\":\n          description: Invalid ID\n        \"403\":\n          description: Invalid API Key\n      summary: Find SSO User by ID\n      tags:\n        - ssousers\n    put:\n      description: Update a SSO User\n      operationId: UpdateSsoUsers\n      parameters:\n        - description: ID of SSO User that needs to be updated\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      requestBody:\n        $ref: \"#/components/requestBodies/SsoUsers\"\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SsoUsers\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SsoUsers\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/SsoUsers\"\n        \"201\":\n          description: Updated successfully\n        \"400\":\n          description: Invalid data\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Not saved\n      summary: Update a SSO User\n      tags:\n        - ssousers\n  /tags:\n    get:\n      description: Returns a list of tags\n      parameters:\n        - description: Do a 'LIKE' search, you can also use '%'\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Bootstrap color of the tag\n          in: query\n          name: type\n          schema:\n            type: string\n            enum:\n              - \"\"\n              - default\n              - success\n              - warning\n              - important\n              - info\n              - inverse\n        - description: \"Fields to return separate by comas: name,id\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: Number of object to return (max 100, default 25)\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - description: Start of the return (default 0)\n          in: query\n          name: limitstart\n          required: false\n          schema:\n            type: integer\n            format: int64\n            minimum: 0\n        - description: \"ORDER by this field separete by comas. Add + / - after field for\n            set ASC / DESC: type+,name-\"\n          in: query\n          name: order\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n        \"403\":\n          description: Invalid API Key\n      summary: Get a list of tags\n      tags:\n        - tags\n    post:\n      description: Create a tag\n      operationId: CreateTags\n      requestBody:\n        $ref: \"#/components/requestBodies/Tag\"\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n        \"201\":\n          description: Saved successfully\n        \"400\":\n          description: Invalid data\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Not saved\n      summary: Create a tag\n      tags:\n        - tags\n  /tags/metadata:\n    get:\n      description: Returns a list of fields\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n      summary: Get the list of fields\n      tags:\n        - tags\n  \"/tags/{id}\":\n    delete:\n      description: Delete a specific tag\n      parameters:\n        - description: ID of tag that needs to be deleted\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: Tag correctly deleted\n          content:\n            application/json:\n              schema:\n                type: string\n            application/xml:\n              schema:\n                type: string\n            text/plain:\n              schema:\n                type: string\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Delete a specific tag\n      tags:\n        - tags\n    get:\n      description: Returns a tag based on ID\n      operationId: getTagById\n      parameters:\n        - description: ID of tag that needs to be fetched\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - description: \"Fields to return separate by comas: name,id\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n        \"400\":\n          description: Invalid ID\n        \"403\":\n          description: Invalid API Key\n      summary: Find tag by ID\n      tags:\n        - tags\n    put:\n      description: Update a tag\n      operationId: UpdateTag\n      parameters:\n        - description: ID of tag\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Tag\"\n        description: JSON object of the updated tag\n        required: true\n      responses:\n        \"200\":\n          description: Updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n        \"400\":\n          description: Invalid data\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Update a tag\n      tags:\n        - tags\n  \"/tags/{id}/sites\":\n    get:\n      description: Returns a list of sites based with a specific tag id\n      operationId: getSitesByTags\n      parameters:\n        - description: ID of tag that needs to be fetched\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - description: Do a 'LIKE' search, you can also use '%'\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Do a 'LIKE' search, you can also use '%'\n          in: query\n          name: access_url\n          required: false\n          schema:\n            type: string\n        - description: Do a 'LIKE' search, you can also use '%'\n          in: query\n          name: j_version\n          required: false\n          schema:\n            type: string\n        - description: Do a 'LIKE' search, you can also use '%'\n          in: query\n          name: ip\n          required: false\n          schema:\n            type: string\n        - description: Joomla core update\n          in: query\n          name: jUpdate\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 0\n        - description: is published\n          in: query\n          name: published\n          required: false\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 0\n        - description: have errors\n          in: query\n          name: error\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: nbUpdates\n          required: false\n          schema:\n            type: string\n        - description: is the website online\n          in: query\n          name: up\n          required: false\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 0\n        - description: \"Fields to return separate by comas: name,id\"\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: Number of object to return (max 100, default 25)\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - description: Start of the return (default 0)\n          in: query\n          name: limitstart\n          required: false\n          schema:\n            type: integer\n            format: int64\n            minimum: 0\n        - description: \"ORDER by this field separete by comas. Add + / - after field for\n            set ASC / DESC: type+,name-\"\n          in: query\n          name: order\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/Site\"\n        \"403\":\n          description: Invalid API Key\n        \"404\":\n          description: Invalid ID\n      summary: Find sites by tag ID\n      tags:\n        - tags\nservers:\n  - url: https://watchful.li/api/v1\ncomponents:\n  requestBodies:\n    PostSite:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PostSite\"\n      description: JSON object Site\n      required: true\n    Tag:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Tag\"\n      description: JSON object Tag\n      required: true\n    SsoUsers:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/SsoUsers\"\n      description: JSON object SsoUsers\n      required: true\n  schemas:\n    Audit:\n      properties:\n        id:\n          description: Unique identifier for the audit\n          format: int64\n          type: integer\n      required:\n        - id\n    Audits:\n      items:\n        $ref: \"#/components/schemas/Audit\"\n      type: array\n    Extension:\n      properties:\n        date:\n          description: Date of release\n          type: string\n        ext_name:\n          description: Extension name\n          type: string\n        idx_site:\n          description: Unique identifier for the site\n          format: int64\n          type: integer\n        newVersion:\n          description: New version\n          type: string\n        type:\n          description: Datetime of the log\n          format: date-format\n          type: string\n        url:\n          description: Author URL\n          type: string\n        vUpdate:\n          description: Update is available\n          type: integer\n        version:\n          description: Extension version\n          type: string\n      required:\n        - idx_site\n        - type\n    Feedback:\n      properties:\n        id:\n          description: Unique identifier for the feedback\n          format: int64\n          type: integer\n      required:\n        - id\n    Log:\n      properties:\n        Site name:\n          description: Name of the site / readyonly\n          type: string\n        id_log:\n          description: Unique identifier for the log\n          format: int64\n          type: integer\n        idx_site:\n          description: Unique identifier for the site\n          format: int64\n          type: integer\n        log_date:\n          description: Datetime of the log\n          format: date-format\n          type: string\n        log_entry:\n          description: Log information\n          type: string\n        log_level:\n          description: Level of log\n          format: int64\n          type: integer\n        log_type:\n          description: Type of log\n          type: string\n        userid:\n          description: Unique identifier for the user\n          format: int64\n          type: integer\n      required:\n        - id_log\n        - idx_site\n        - log_date\n        - log_entry\n        - log_level\n        - userid\n    Monitor: {}\n    PostLog:\n      properties:\n        log_date:\n          description: Datetime of the log\n          format: date-format\n          type: string\n        log_entry:\n          description: Log information\n          type: string\n        log_level:\n          description: Level of log\n          format: int64\n          type: integer\n      required:\n        - log_entry\n        - log_level\n    PostSite:\n      properties:\n        access_url:\n          description: URL of the site\n          type: string\n        admin_url:\n          description: Adminsitration URL\n          type: string\n        akeebaProfile:\n          description: Akeeba Profile\n          format: date-format\n          type: string\n        backupSchedule:\n          description: Backup Schedule\n          type: string\n        dateBackup:\n          description: Date backup\n          format: date-format\n          type: string\n        name:\n          description: Friendly name for the site\n          type: string\n        notes:\n          description: Personnal note for the site\n          type: string\n        published:\n          description: Published status of site\n          type: boolean\n        secret_word:\n          description: Watchful secret word\n          type: string\n        tags:\n          description: JSON encoded array of tags for the site (e.g.\n            [{\u003cq\u003ename\u003c/q\u003e:\u003cq\u003emytag\u003c/q\u003e},{\u003cq\u003ename\u003c/q\u003e:\u003cq\u003eanothertag\u003c/q\u003e}])\n          format: json\n          type: string\n        word_akeeba:\n          description: Akeeba backup word\n          type: string\n        word_check:\n          description: Word checked for uptime\n          type: string\n      required:\n        - access_url\n    Reports: {}\n    Site:\n      properties:\n        access_url:\n          description: URL of the site\n          type: string\n        admin_url:\n          description: Adminsitration URL\n          type: string\n        akeebaProfile:\n          description: Akeeba Profile\n          format: date-format\n          type: string\n        backupSchedule:\n          description: Backup Schedule\n          type: string\n        canBackup:\n          description: Site can be backuped\n          type: boolean\n        canUpdate:\n          description: Site can use remote installer\n          type: boolean\n        dateBackup:\n          description: Date backup\n          format: date-format\n          type: string\n        date_last_check:\n          description: Watchful Last check\n          format: date-format\n          type: string\n        error:\n          description: Error status of site\n          type: boolean\n        ip:\n          description: server IP\n          type: string\n        jUpdate:\n          description: \"?\"\n          type: boolean\n        j_version:\n          description: Joomla site version\n          type: string\n        monitorid:\n          description: Id of the associated UptimeRobot monitor\n          type: boolean\n        name:\n          description: Friendly name for the site\n          type: string\n        nbUpdates:\n          description: Number of updates\n          format: date-format\n          type: string\n        new_j_version:\n          description: Joomla site version\n          type: string\n        notes:\n          description: Personnal note for the site\n          type: string\n        published:\n          description: Published status of site\n          type: boolean\n        secret_word:\n          description: Watchful secret word\n          type: string\n        siteid:\n          description: Unique identifier for the site\n          format: int64\n          type: integer\n        tags:\n          description: List of tags for this site\n          items: {}\n          type: array\n        up:\n          description: Site status\n          type: boolean\n        word_akeeba:\n          description: Akeeba backup word\n          type: string\n        word_check:\n          description: Word checked for uptime\n          type: string\n      required:\n        - siteid\n    SsoUsers:\n      properties:\n        email:\n          description: Email of the SSO User\n          type: string\n        groupid:\n          description: Security Joomla group ID\n          format: int64\n          type: integer\n        id:\n          description: Unique identifier for the SSO User\n          format: int64\n          type: integer\n        lastLoginDate:\n          description: Last login date on remote site\n          format: date-time\n          type: string\n        lastLoginSite:\n          description: Site Id of the last remote login\n          format: int64\n          type: integer\n        name:\n          description: Account display name\n          type: string\n        password:\n          description: Password of the SSO User\n          type: string\n        userid:\n          description: Watchful user account\n          format: int64\n          type: integer\n        username:\n          description: Username of the SSO User\n          type: string\n      required:\n        - email\n        - groupid\n        - id\n        - name\n        - password\n        - userid\n        - username\n    Tag:\n      properties:\n        id:\n          description: Unique identifier for the tag\n          format: int64\n          type: integer\n        name:\n          description: Friendly name for the tag\n          type: string\n        nbSites:\n          description: Number of sites use this tag (required field id)\n          type: integer\n        type:\n          default: default\n          description: Bootstrap color of the tag\n          enum:\n            - default\n            - success\n            - warning\n            - important\n            - info\n            - inverse\n          type: string\n      required:\n        - id\n        - name\n    Uptime: {}\n    Version: {}\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/watchful.li-1.0.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/watchful.li-1.0.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/reports/tags/{id}\": get: responses: 200: contents: unsupported content types: [application/pdf]",
	"NotImplemented": [
		"unsupported content types"
	]
}