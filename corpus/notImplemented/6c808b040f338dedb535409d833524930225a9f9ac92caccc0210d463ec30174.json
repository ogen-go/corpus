{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/apache/incubator-milagro-dta"
		},
		"file": {
			"name": "open-api.yaml",
			"size": 0,
			"path": "open-api.yaml",
			"byteSize": 12250,
			"content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http:#www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\nopenapi: 3.0.0\ninfo:\n  title: Apache Milagro Server\n  description: Milagro Secure - distributed / decentralized core security services. This is the HTTP API specification for the D-TA when it is running no plugins.\n  contact:\n    email: dev@milagro.apache.org\n  license:\n    name: http://www.apache.org/licenses/LICENSE-2.0\n  version: 1.0.0  \npaths:\n  /v1/identity:\n    post:\n      summary: Create an Identity Document\n      tags:\n        - identity      \n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                Name:\n                  type: string\n                  example: ExampleNodeName             \n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateIdentityResponse'\n        '400':\n          description: Invalid Request\n          content:\n            text/plain:\n             schema:\n              type: string\n    get:\n      summary: Get a list of identity documents\n      tags:\n       - identity\n      parameters: \n        - name: page\n          in: query\n          description: current page\n          schema:\n            type: integer\n            default: 0\n        - name: perPage\n          in: query\n          description: number of items to show\n          schema:\n            type: integer\n            default: 10\n        - name: sortBy\n          in: query\n          description: Sort By field. Prefix with \"-\" for descending\n          schema:\n            type: string\n            enum:\n              - dateCreatedAsc               \n              - dateCreatedDesc               \n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdentityListResponse'\n        '400':\n          description: Invalid Request\n          content:\n            text/plain:\n              schema:\n                type: string\n  /v1/identity/{IDDocumentCID}:\n    get:\n      summary: Get Details of an Identity\n      tags:\n        - identity\n      parameters: \n        - name: IDDocumentCID\n          in: path\n          description: IPFS hash address of Identity Document\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Identity'\n        '400':\n          description: Invalid Request\n          content:\n            text/plain:\n              schema:\n                type: string\n  /v1/order:\n    post:\n      summary: Create an order for a new Commitment\n      description: This request will return a Commitment (SECP256 public key) from the Master Fiduciary. The response also includes IPFS hash adresses of the Order Documents passed between the Principal and Master Fiduciary.\n      tags:\n      - order\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                BeneficiaryIDDocumentCID:\n                  type: string                  \n                  example: QmZJGAuHEzf3arcEDdRzS4ZVRY1onmQG3NCn9mXEYD4eon\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrderResponse'\n        '400':\n          description: Invalid Request\n          content:\n            text/plain:\n              schema:\n                type: string\n    get:\n      summary: Get a list of orders managed by this D-TA\n      tags: \n      - order\n      parameters: \n        - name: page\n          in: query\n          description: current page\n          schema:\n            type: integer\n            default: 0\n        - name: perPage\n          in: query\n          description: number of items to show\n          schema:\n            type: integer\n            default: 10\n        - name: sortBy\n          in: query\n          description: Sort By field. Prefix with \"-\" for descending\n          schema:\n            type: string\n            enum:\n              - dateCreatedAsc               \n              - dateCreatedDesc\n      responses:\n        '200':\n          description: Succesful Operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrderListResponse'\n        '400':\n          description: Invalid Request\n          content:\n            text/plain:\n             schema:\n              type: string\n  /v1/order/{OrderReference}:\n    get:\n      summary: Get details of an order\n      tags:\n      - order\n      parameters:\n      - name: OrderReference\n        in: path\n        description: Reference for a single order\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Succesful Operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetOrderResponse'\n        '400':\n          description: Invalid Request\n          content:\n            text/plain:\n             schema:\n              type: string\n  /v1/order/secret:\n    post:\n      summary: Returns the SECP256 Secret Key\n      tags:\n        - order\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                OrderReference:\n                  type: string                  \n                  example: 9f3ac746-c418-11e9-b78c-acde48001122\n                BeneficiaryIDDocumentCID:\n                  type: string                  \n                  example: QmfWg5GffUEzwahd9hkvdnqTGQs5PfusoEpx3kSDSdG4ze\n      responses:\n        '200':\n          description: Succesful Operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrderSecretResponse'\n        '400':\n          description: Invalid Request\n          content:\n            text/plain:\n             schema:\n              type: string\n  /v1/fulfill/order:\n    post:\n      summary: Create Public Address\n      tags:\n        - fulfill      \n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                OrderPart1CID:\n                  type: string\n                  example: Qme5S5xVfGYF46oftiLQDevPAGSKy1aggdtrZvvEdiXuqM\n                DocumentCID:\n                  type: string\n                  example: Qme5S5xVfGYF46oftiLQDevPAGSKy1aggdtrZvvEdiXuqM\n      responses:\n        '200':           \n          description: Succesful Operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FulfillOrderResponse'\n        '400':\n          description: Invalid Request\n          content:\n            text/plain:\n             schema:\n              type: string\n  /v1/fulfill/order/secret:\n    post:\n      summary: Return Private Key\n      tags:\n        - fulfill      \n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                OrderPart3CID:\n                  type: string\n                SenderDocumentCID:\n                  type: string                                  \n      responses:\n        '200':\n          description: Succesful Operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FulfillOrderSecretResponse'\n        '400':\n          description: Invalid Request\n          content:\n            text/plain:\n             schema:\n              type: string\n  /v1/status:\n    get:\n      description: Test Server Health\n      tags:\n        - system      \n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResponse'\n        '400':\n          description: Invalid Request\n          content:\n            text/plain:\n              schema:\n                type: string\nservers:\n  - url: 'http://localhost:5556'\n  - url: 'http://localhost:5558' \ncomponents:\n  schemas:\n      CreateIdentityResponse:\n        type: object\n        properties:\n          IDDocumentCID:\n            type: string      \n      IdentityListResponse:\n        type: object\n        properties:\n          IDDocumentList:\n            type: array\n            items: \n              $ref: '#/components/schemas/Identity'    \n      Identity:\n        type: object\n        properties:\n          IDDocumentCID:\n            type: string\n          AuthenticationReference:  \n            type: string\n          BeneficiaryECPublicKey: \n            type: string          \n          SikePublicKey:            \n            type: string\n          BlsPublicKey:\n            type: string                \n          Timestamp:\n            type: integer\n      OrderResponse:\n        type: object\n        properties:\n          OrderReference:\n            type: string\n          Commitment:\n            type: string\n          CreatedAt:\n            type: string\n      OrderListResponse:\n        type: object\n        properties:\n          OrderReference:\n            type: array\n            items:\n              type: string\n      GetOrderResponse:\n        type: object\n        properties:\n          Order:\n            type: object\n            properties:\n              Order: \n                type: string\n              TimeStamp:\n                type: integer                            \n      OrderSecretResponse:\n        type: object\n        properties:\n          Secret:\n            type: string\n          Commitment:\n            type: string\n          OrderReference:\n            type: string\n      FulfillOrderResponse:\n        type: object\n        properties: \n          OrderPart2CID:\n            type: string\n      FulfillOrderSecretResponse:\n        type: object\n        properties:\n          OrderPart4CID:\n            type: string\n      StatusResponse:\n        type: object\n        properties:\n          application:\n            type: string\n          apiVersion:\n              type: string\n          extensionVendor:\n            type: string\n          nodeCID:\n            type: string\n          timeStamp:\n            type: string\n          plugin:\n            type: string\n          nodeType:\n            type: string\ntags:\n  - name: identity\n    description: Actors in the system\n    externalDocs:\n      url: 'https://milagro.apache.org/docs/milagro-intro/'\n      description: Apache Milagro Docs\n  - name: order\n    description: Communication between Principals and Master Fiduciaries\n    externalDocs:\n      url: 'https://milagro.apache.org/docs/milagro-intro/'\n      description: Apache Milagro Docs\n  - name: fulfill\n    description: Actions performed by the Master Fiduciary\n    externalDocs:\n      url: 'https://milagro.apache.org/docs/milagro-intro/'\n      description: Apache Milagro Docs\n  - name: system\n    description: Test Server Health\n    externalDocs:\n      url: 'https://milagro.apache.org/docs/milagro-intro/'\n      description: Apache Milagro Docs\n  \n",
			"canonicalURL": "/github.com/apache/incubator-milagro-dta@2c2efe10124205fee885fffa8f7dbad83fcc1050/-/blob/open-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/apache/incubator-milagro-dta/blob/2c2efe10124205fee885fffa8f7dbad83fcc1050/open-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/identity/{IDDocumentCID}\": get: responses: 400: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}