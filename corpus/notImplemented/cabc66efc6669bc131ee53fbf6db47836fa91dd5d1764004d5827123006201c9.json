{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/taxrates.io/1.0.0/openapi.yaml",
			"byteSize": 32609,
			"content": "openapi: 3.0.3\nservers:\n  - url: https://api.taxrates.io/api\ninfo:\n  contact: {}\n  description: |-\n    \u003ch3\u003eIntroduction\u003c/h3\u003e\n    \u003cp\u003eTaxrates.io is a global tax rate service that automates the management of monitoring tax rates changes in 181 countries. We monitor over 14,000 US sales tax, VAT, GST rates for you and make updates via our API so you always have the most update tax rates.\u003c/p\u003e\n    \u003cp\u003eYou can use Taxrates.io as a virtual sandbox where we provide you with 30 days free trial.\u003c/p\u003e\n    \u003ch3\u003eCountries\u003c/h3\u003e\n    \u003cp\u003eWe currently support the following countries around the world. If you would like to request the addition of a new country, please email us atÂ \u003ca href=\"mailto:support@taxrates.io\"\u003esupport@taxrates.io\u003c/a\u003e\u003c/p\u003e\n    \u003ctable\u003e\n      \u003ctr\u003e\u003ctd\u003eAfghanistan\u003c/td\u003e\u003ctd\u003eGambia\u003c/td\u003e\u003ctd\u003eNicaragua\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eAlbania\u003c/td\u003e\u003ctd\u003eGeorgia\u003c/td\u003e\u003ctd\u003eNiger\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eAndorra\u003c/td\u003e\u003ctd\u003eGermany\u003c/td\u003e\u003ctd\u003eNigeria\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eAngola\u003c/td\u003e\u003ctd\u003eGhana\u003c/td\u003e\u003ctd\u003eNorth Korea\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eAntigua and Barbuda\u003c/td\u003e\u003ctd\u003eGreece\u003c/td\u003e\u003ctd\u003eNorway\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eArgentina\u003c/td\u003e\u003ctd\u003eGrenada\u003c/td\u003e\u003ctd\u003ePakistan\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eArmenia\u003c/td\u003e\u003ctd\u003eGuam\u003c/td\u003e\u003ctd\u003ePalestine\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eAruba\u003c/td\u003e\u003ctd\u003eGuatemala\u003c/td\u003e\u003ctd\u003ePanama\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eAustralia\u003c/td\u003e\u003ctd\u003eGuinea\u003c/td\u003e\u003ctd\u003ePapua New Guinea\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eAustria\u003c/td\u003e\u003ctd\u003eGuyana\u003c/td\u003e\u003ctd\u003eParaguay\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eAzerbaijan\u003c/td\u003e\u003ctd\u003eHaiti\u003c/td\u003e\u003ctd\u003ePeru\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eBahamas\u003c/td\u003e\u003ctd\u003eHonduras\u003c/td\u003e\u003ctd\u003ePhilippines\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eBangladesh\u003c/td\u003e\u003ctd\u003eHungary\u003c/td\u003e\u003ctd\u003ePoland\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eBarbados\u003c/td\u003e\u003ctd\u003eIceland\u003c/td\u003e\u003ctd\u003ePortugal\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eBelarus\u003c/td\u003e\u003ctd\u003eIndia\u003c/td\u003e\u003ctd\u003ePuerto Rico\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eBelgium\u003c/td\u003e\u003ctd\u003eIndonesia\u003c/td\u003e\u003ctd\u003eRepublic of the Congo\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eBelize\u003c/td\u003e\u003ctd\u003eIran\u003c/td\u003e\u003ctd\u003eRomania\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eBenin\u003c/td\u003e\u003ctd\u003eIreland\u003c/td\u003e\u003ctd\u003eRussian Federation\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eBhutan\u003c/td\u003e\u003ctd\u003eIsle of Man\u003c/td\u003e\u003ctd\u003eRwanda\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eBolivia\u003c/td\u003e\u003ctd\u003eIsrael\u003c/td\u003e\u003ctd\u003eSamoa\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eBonaire\u003c/td\u003e\u003ctd\u003eItaly\u003c/td\u003e\u003ctd\u003eSenegal\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eBosnia and Herzegovina\u003c/td\u003e\u003ctd\u003eJapan\u003c/td\u003e\u003ctd\u003eSerbia\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eBotswana\u003c/td\u003e\u003ctd\u003eJersey\u003c/td\u003e\u003ctd\u003eSeychelles\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eBrazil\u003c/td\u003e\u003ctd\u003eJordan\u003c/td\u003e\u003ctd\u003eSierra Leone\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eBulgaria\u003c/td\u003e\u003ctd\u003eJordan\u003c/td\u003e\u003ctd\u003eSingapore\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eBurkina Faso\u003c/td\u003e\u003ctd\u003eKazakhstan\u003c/td\u003e\u003ctd\u003eSlovakia\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eBurundi\u003c/td\u003e\u003ctd\u003eKenya\u003c/td\u003e\u003ctd\u003eSlovenia\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eCambodia\u003c/td\u003e\u003ctd\u003eKiribati\u003c/td\u003e\u003ctd\u003eSolomon Islands\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eCameroon\u003c/td\u003e\u003ctd\u003eKosovo\u003c/td\u003e\u003ctd\u003eSomalia\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eCape Verde\u003c/td\u003e\u003ctd\u003eKyrgyzstan\u003c/td\u003e\u003ctd\u003eSouth Africa\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eCentral African Republic\u003c/td\u003e\u003ctd\u003eLaos\u003c/td\u003e\u003ctd\u003eSouth Korea\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eChad\u003c/td\u003e\u003ctd\u003eLatvia\u003c/td\u003e\u003ctd\u003eSouth Sudan\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eChile\u003c/td\u003e\u003ctd\u003eLebanon\u003c/td\u003e\u003ctd\u003eSpain\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eChina\u003c/td\u003e\u003ctd\u003eLesotho\u003c/td\u003e\u003ctd\u003eSri Lanka\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eColumbia\u003c/td\u003e\u003ctd\u003eLiberia\u003c/td\u003e\u003ctd\u003eSt Lucia\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eComoros\u003c/td\u003e\u003ctd\u003eLiechtenstein\u003c/td\u003e\u003ctd\u003eSudan\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eCook Islands\u003c/td\u003e\u003ctd\u003eLithuania\u003c/td\u003e\u003ctd\u003eSuriname\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eCosta Rica\u003c/td\u003e\u003ctd\u003eLuxembourg\u003c/td\u003e\u003ctd\u003eSwaziland\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eCote d'Ivoire\u003c/td\u003e\u003ctd\u003eMacedonia\u003c/td\u003e\u003ctd\u003eSweden\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eCroatia\u003c/td\u003e\u003ctd\u003eMadagascar\u003c/td\u003e\u003ctd\u003eSwitzerland\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eCuba\u003c/td\u003e\u003ctd\u003eMalawi\u003c/td\u003e\u003ctd\u003eTahiti\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eCuracao\u003c/td\u003e\u003ctd\u003eMalaysia\u003c/td\u003e\u003ctd\u003eTaiwan\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eCyprus\u003c/td\u003e\u003ctd\u003eMaldives\u003c/td\u003e\u003ctd\u003eTajikistan\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eCzech Republic\u003c/td\u003e\u003ctd\u003eMali\u003c/td\u003e\u003ctd\u003eTanzania\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eDemocratic Republic of the Congo\u003c/td\u003e\u003ctd\u003eMalta\u003c/td\u003e\u003ctd\u003eThailand\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eDenmark\u003c/td\u003e\u003ctd\u003eMauritania\u003c/td\u003e\u003ctd\u003eTogo\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eDjbouti\u003c/td\u003e\u003ctd\u003eMauritius\u003c/td\u003e\u003ctd\u003eTonga\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eDominica\u003c/td\u003e\u003ctd\u003eMexico\u003c/td\u003e\u003ctd\u003eTrinidad and Tobago\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eDominican Republic\u003c/td\u003e\u003ctd\u003eMicronesia\u003c/td\u003e\u003ctd\u003eTunisia\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eEcuador\u003c/td\u003e\u003ctd\u003eMoldova\u003c/td\u003e\u003ctd\u003eTurkmenistan\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eEgypt\u003c/td\u003e\u003ctd\u003eMonaco\u003c/td\u003e\u003ctd\u003eTuvalu\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eEl Salvador\u003c/td\u003e\u003ctd\u003eMongolia\u003c/td\u003e\u003ctd\u003eUganda\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eEquatorial Guinea\u003c/td\u003e\u003ctd\u003eMontenegro\u003c/td\u003e\u003ctd\u003eUkraine\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eEritrea\u003c/td\u003e\u003ctd\u003eMorocco\u003c/td\u003e\u003ctd\u003eUnited Kingdom\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eEstonia\u003c/td\u003e\u003ctd\u003eMozambique\u003c/td\u003e\u003ctd\u003eUnited States\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eEthiopia\u003c/td\u003e\u003ctd\u003eMyanmar\u003c/td\u003e\u003ctd\u003eUruguay\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eFiji\u003c/td\u003e\u003ctd\u003eNamibia\u003c/td\u003e\u003ctd\u003eVanuatu\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eFinland\u003c/td\u003e\u003ctd\u003eNepal\u003c/td\u003e\u003ctd\u003eVenezuela\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eFrance\u003c/td\u003e\u003ctd\u003eNetherlands\u003c/td\u003e\u003ctd\u003eVietnam\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eGabon\u003c/td\u003e\u003ctd\u003eNew Zealand\u003c/td\u003e\u003ctd\u003eYemen\u003c/td\u003e\u003c/tr\u003e\n    \u003c/table\u003e\n    \u003ch3\u003eProducts codes\u003c/h3\u003e\n    \u003cp\u003eThe Taxrates.io APIâs provides product-level tax rates for a subset of product codes. These codes are to be used for products that are either exempt from tax in some jurisdictions or are taxed at reduced rates.\u003c/p\u003e\n    \u003cp\u003eWe will be expanding support for additional, less common categories over time. If you would like to request the addition of a new product category, please email us atÂ \u003ca href=\"mailto:support@taxrates.io\"\u003esupport@taxrates.io\u003c/a\u003e\u003c/p\u003e\n    \u003cp\u003ePlease select a product code/s when making a request to the Taxrates.io API\u003c/p\u003e\n    \u003ctable\u003e\n      \u003ctr\u003e\u003cth\u003eProduct code\u003c/th\u003e\u003cth\u003eProduct Description\u003c/th\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC010\u003c/td\u003e\u003ctd\u003eServices which are not subject to a service-specific tax\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC011\u003c/td\u003e\u003ctd\u003eSoftware - Downloaded\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC012\u003c/td\u003e\u003ctd\u003eBooks - Downloaded\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC011\u003c/td\u003e\u003ctd\u003eMusic - Downloaded\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC011\u003c/td\u003e\u003ctd\u003eMovies/Digital Video - Downloaded\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC011\u003c/td\u003e\u003ctd\u003eOther Electronic Goods - Downloaded\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC011\u003c/td\u003e\u003ctd\u003eStreaming Music/Audio Services new\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC011\u003c/td\u003e\u003ctd\u003eStreaming Video Services new\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC018\u003c/td\u003e\u003ctd\u003eSoftware as a Services, Generally (Remote Access to Hosted Software)\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC018\u003c/td\u003e\u003ctd\u003eRemote Access to Hosted Software - Personal Use\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC018\u003c/td\u003e\u003ctd\u003eRemote Access to Hosted Software - Business Use\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC021\u003c/td\u003e\u003ctd\u003eRemote Access to Hosted Business Custom Applications\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC021\u003c/td\u003e\u003ctd\u003ePersonal Cloud Storage/Backup\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC021\u003c/td\u003e\u003ctd\u003eBusiness Cloud Storage/Backup\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC021\u003c/td\u003e\u003ctd\u003eBusiness Data Warehouses\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC022\u003c/td\u003e\u003ctd\u003eInfrastructure as Service, Generally\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC022\u003c/td\u003e\u003ctd\u003eEcommerce Site/Webserver Hosting\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC022\u003c/td\u003e\u003ctd\u003eProvision of Virtual Computing Capacity\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC022\u003c/td\u003e\u003ctd\u003eSoftware - package or canned program\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC022\u003c/td\u003e\u003ctd\u003eSoftware - modifications to canned program\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC022\u003c/td\u003e\u003ctd\u003eSoftware - custom programs - material\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC022\u003c/td\u003e\u003ctd\u003eSoftware - custom programs - professional serv.\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC022\u003c/td\u003e\u003ctd\u003eInformation services\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC022\u003c/td\u003e\u003ctd\u003eData processing services\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC022\u003c/td\u003e\u003ctd\u003eMainframe computer access and processing serv.\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003eC022\u003c/td\u003e\u003ctd\u003eOnline Data processing services\u003c/td\u003e\u003c/tr\u003e\n    \u003c/table\u003e\n    \u003ch3\u003eFiltering\u003c/h3\u003e\n    \u003cp\u003eWhen calling the API endpoints you can use 'filter' parameters to get tax rate for the selected type. You can get the following tax types (Each tax rate will always have one of following types)\u003c/p\u003e\n    \u003ch3\u003eUS Sales tax Rates\u003c/h3\u003e\n    \u003col\u003e\n      \u003cli\u003eCombinedRate\u003c/li\u003e\n      \u003cli\u003eStateRate\u003c/li\u003e\n      \u003cli\u003eCountyRate\u003c/li\u003e\n      \u003cli\u003eCityRate\u003c/li\u003e\n      \u003cli\u003eSpecialRate\u003c/li\u003e\n    \u003c/ol\u003e\n    \u003cp\u003eWe recommend usingÂ \u003ca href=\"https://www.getpostman.com/\"\u003ePostman\u003c/a\u003eÂ when discovering our API. Happy using!\u003c/p\u003e\n    \u003ch3\u003eRate Limiting\u003c/h3\u003e\n    \u003cp\u003eWe limit API requests.\u003c/p\u003e\n    \u003cp\u003eIf youâre exceeding this rate and encountering 429 errors, review the following:\u003c/p\u003e\n    \u003cul\u003e\n      \u003cli\u003eOnly make requests in states / regions where you have enabled.\u003c/li\u003e\n      \u003cli\u003eCache responses if the order details havenât changed since the last calculation at checkout.\u003c/li\u003e\n    \u003c/ul\u003e\n    \u003ch3\u003eErrors\u003c/h3\u003e\n    \u003cp\u003eThe Taxrates.io API uses the following error codes:\u003cp/\u003e\n    \u003ctable\u003e\n      \u003ctr\u003e\u003cth\u003eCode\u003c/th\u003e\u003cth\u003eError Message\u003c/th\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003e400\u003c/td\u003e\u003ctd\u003eBad Request â Your request format is bad.\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003e401\u003c/td\u003e\u003ctd\u003eUnauthorized â Your API key is wrong.\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003e404\u003c/td\u003e\u003ctd\u003eNot Found â The specified resource could not be found.\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003e405\u003c/td\u003e\u003ctd\u003eMethod Not Allowed â You tried to access a resource with an invalid method.\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003e429\u003c/td\u003e\u003ctd\u003eToo Many Requests â Youâre requesting too many resources! Slow down!\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003e500\u003c/td\u003e\u003ctd\u003eInternal Server Error â We had a problem with our server. Try again later.\u003c/td\u003e\u003c/tr\u003e\n      \u003ctr\u003e\u003ctd\u003e503\u003c/td\u003e\u003ctd\u003eService Unavailable â Weâre temporarily offline for maintenance. Try again later.\u003c/td\u003e\u003c/tr\u003e\n    \u003c/table\u003e\n    \u003cp\u003eVerify your API token is correct and make sure youâre correctly setting theÂ \u003ca href=\"#authentication\"\u003eAuthorization header\u003c/a\u003e.\u003c/p\u003e\n    \u003cp\u003eIf youâre still not sure whatâs wrong,Â \u003ca href=\"mailto:support@taxrates.io\"\u003econtact us\u003c/a\u003eÂ and weâll investigate.\u003c/p\u003e\n    \u003ch3\u003eChangelog\u003c/h3\u003e\n    \u003cp\u003eStay on top of new developer-facing features, accuracy improvements, and bug fixes for our API. Have a request? Encounter an issue?Â \u003ca href=\"mailto:support@taxrates.io\"\u003eWeâd love to hear your feedback.\u003c/a\u003e\u003c/p\u003e\n\n\n    Contact Support:\n     Name: apiteam@taxrates.io\n  title: Taxrates.io API\n  version: 1.0.0\n  x-apisguru-categories:\n    - financial\n  x-logo:\n    url: https://pbs.twimg.com/profile_images/919999226955927553/lLFntE3W_400x400.jpg\n  x-origin:\n    - format: openapi\n      url: https://www.postman.com/collections/10601972-0bdabb72-f66a-4b75-bb29-e1c01dc81baa-TVev6RW8\n      version: \"3.0\"\n  x-providerName: taxrates.io\ntags:\n  - name: v3/tax\n  - name: v1/tax\npaths:\n  /v1/tax/countrycode:\n    get:\n      description: |\n        Get request. This method returns all tax rates for country discovered based on country code. The country code must be 2 letters ISO 3166-1 alfa-2 country code (see \u003ca href=\"https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes\"\u003ehere\u003c/a\u003e for more information). You can use 'filter' parameter to narrow results to selected type of tax\n        \u003cp\u003eFor US sales tax you can filter the tax rate you want for each state or zip code with one of the following: (they are case sensitive)\u003c/p\u003e\n        \u003cul\u003e\n          \u003cli\u003eCombinedRate\u003c/li\u003e\n          \u003cli\u003eStateRate\u003c/li\u003e\n          \u003cli\u003eCountyRate\u003c/li\u003e\n          \u003cli\u003eCityRate\u003c/li\u003e\n          \u003cli\u003eSpecialRate\u003c/li\u003e\n        \u003c/ul\u003e\n        \u003cpre\u003e\u003ccode class=\"js\"\u003evar taxrates_endpoint = 'tax/countrycode';\n          var taxrates_params = {'domain':'api.taxrates.io', 'country_code':'IE', 'product_code':'C010'};\n          var taxrates_url = '/api/v1/';\n          if ( localStorage.getItem(\"Taxrates_API_Client_Secret\") ){\n          jQuery.support.cors = true;\n          jQuery.ajax({\n              url: taxrates_url+taxrates_endpoint,\n              type: 'get',\n              method: 'get',\n              dataType: \"json\",\n              data: taxrates_params,\n              beforeSend: function (request) {\n                      request.withCredentials = true;\n                      request.setRequestHeader(\"Authorization\", \"Apikey \" + localStorage.getItem(\"Taxrates_API_Client_Secret\"));\n              },\n              headers: {\n                \"accept\": \"application/json\"\n              },\n              contentType: 'application/json; charset=utf-8',\n              success: function (data) {\n                //Maintain errors inside success because the API may return 200 in general, but different code inside\n                  if(data.ErrorCode=='404' || data.ErrorCode=='500'){\n                    //Maintain errors here\n                    console.log(data.ErrorMessage);\n                    return false;\n                  }else{\n                    var rates = [];\n                    var i=0;\n                    jQuery.each(data, function(k, v) {\n                        if(v.hasOwnProperty(\"taxes\")){\n                            jQuery.each(v.taxes, function(m, w) {\n                                rates[i] = [];\n                                //Only showing standard rate type\n                                if( w.Type == \"standard\" ){\n                                    rates[i][0] = w.Country;\n                                    rates[i][1] = w.Type;\n                                    rates[i][2] = w.data_value;\n                                    i++;\n                                }\n                            });\n                        }\n                    //Now you have all your rates inside rates variable.\n                    }).fail(function(xhr) {\n                            //Maintain your errors here\n                            return false;\n                    });\n                    return true;\n          }else{\n            //Not logged into taxrates.io\n            //Maintain your errors here\n            return false;\n          }\u003c/code\u003e\u003c/pre\u003e\n      operationId: taxRatesByCountryCode\n      parameters:\n        - description: \"Domain name: api.taxrates.io\"\n          in: query\n          name: domain\n          schema:\n            example: api.taxrates.io\n            type: string\n        - description: Country code alpha 2\n          in: query\n          name: country_code\n          schema:\n            example: US\n            type: string\n        - description: \"You can filter your taxes by one of following types: 'standard', 'reduced', 'second reduced', 'third reduced' and 'super reduced'.\"\n          in: query\n          name: filter\n          schema:\n            example: \"\"\n            type: string\n        - description: You must provide a zip code if one of your selected countries is United States and you've had selected a state on your Taxrates.io member's dashboard.\n          in: query\n          name: zip\n          schema:\n            example: \"71642\"\n            type: string\n        - description: Use one or many product code/s.\n          in: query\n          name: product_codes[]\n          schema:\n            example: C010\n            type: string\n        - description: Use for Canada\n          in: query\n          name: \"province \"\n          schema:\n            example: \"\"\n            type: string\n        - in: query\n          name: date\n          schema:\n            example: 2020-09-02\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                Success:\n                  value:\n                    country_name: \u003cstring\u003e\n                    taxes:\n                      - Country: \u003cstring\u003e\n                        Type: \u003cstring\u003e\n                        data_name: \u003cstring\u003e\n                        data_value: \u003cstring\u003e\n                      - Country: \u003cstring\u003e\n                        Type: \u003cstring\u003e\n                        data_name: \u003cstring\u003e\n                        data_value: \u003cstring\u003e\n              schema:\n                properties:\n                  country_name:\n                    example: \u003cstring\u003e\n                    type: string\n                  taxes:\n                    items:\n                      properties:\n                        Country:\n                          example: \u003cstring\u003e\n                          type: string\n                        Type:\n                          example: \u003cstring\u003e\n                          type: string\n                        data_name:\n                          example: \u003cstring\u003e\n                          type: string\n                        data_value:\n                          example: \u003cstring\u003e\n                          type: string\n                      type: object\n                    type: array\n                type: object\n          description: Success\n        \"404\":\n          content:\n            text/plain:\n              examples:\n                Country not found. Have you provided correct alpha-2 country code?:\n                  value: \"\"\n          description: Country not found. Have you provided correct alpha-2 country code?\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Unexpected error:\n                  value:\n                    code: \u003cinteger\u003e\n                    fields: \u003cstring\u003e\n                    message: \u003cstring\u003e\n              schema:\n                properties:\n                  code:\n                    example: \u003cinteger\u003e\n                    type: string\n                  fields:\n                    example: \u003cstring\u003e\n                    type: string\n                  message:\n                    example: \u003cstring\u003e\n                    type: string\n                type: object\n          description: Unexpected error\n      summary: Tax rates by Country Code\n      tags:\n        - v1/tax\n  /v1/tax/ip:\n    get:\n      description: |\n        Get request. This method returns all tax rates for country discovered on either your IP address or IP address param. The IP param is not required. When empty, the taxrates.io will try to discover your IP address and based on this will retrieve the tax rates. You can use 'filter' parameter to narrow results to selected type of tax\n        \u003cp\u003eFor US sales tax you can filter the tax rate you want for each state or zip code with one of the following: (they are case sensitive)\u003c/p\u003e\n        \u003cul\u003e\n          \u003cli\u003eCombinedRate\u003c/li\u003e\n          \u003cli\u003eStateRate\u003c/li\u003e\n          \u003cli\u003eCountyRate\u003c/li\u003e\n          \u003cli\u003eCityRate\u003c/li\u003e\n          \u003cli\u003eSpecialRate\u003c/li\u003e\n        \u003c/ul\u003e\n        \u003cpre\u003e\u003ccode class=\"js\"\u003evar taxrates_endpoint = 'tax/ip';\n          var taxrates_params = {'domain':'api.taxrates.io', 'ip':'208.80.152.201', 'product_code':'C010'};\n          var taxrates_url = '/api/v1/';\n          if ( localStorage.getItem(\"Taxrates_API_Client_Secret\") ){\n          jQuery.support.cors = true;\n          jQuery.ajax({\n              url: taxrates_url+taxrates_endpoint,\n              type: 'get',\n              method: 'get',\n              dataType: \"json\",\n              data: taxrates_params,\n              beforeSend: function (request) {\n                      request.withCredentials = true;\n                      request.setRequestHeader(\"Authorization\", \"Apikey \" + localStorage.getItem(\"Taxrates_API_Client_Secret\"));\n              },\n              headers: {\n                \"accept\": \"application/json\"\n              },\n              contentType: 'application/json; charset=utf-8',\n              success: function (data) {\n                //Maintain errors inside success because the API may return 200 in general, but different code inside\n                  if(data.ErrorCode=='404' || data.ErrorCode=='500'){\n                    //Maintain errors here\n                    console.log(data.ErrorMessage);\n                    return false;\n                  }else{\n                    var rates = [];\n                    var i=0;\n                    jQuery.each(data, function(k, v) {\n                        if(v.hasOwnProperty(\"taxes\")){\n                            jQuery.each(v.taxes, function(m, w) {\n                                rates[i] = [];\n                                //Only showing standard rate type\n                                if( w.Type == \"standard\" ){\n                                    rates[i][0] = w.Country;\n                                    rates[i][1] = w.Type;\n                                    rates[i][2] = w.data_value;\n                                    i++;\n                                }\n                            });\n                        }\n                    //Now you have all your rates inside rates variable.\n                    }).fail(function(xhr) {\n                            //Maintain your errors here\n                            return false;\n                    });\n                    return true;\n          }else{\n            //Not logged into taxrates.io\n            //Maintain your errors here\n            return false;\n          }\u003c/code\u003e\u003c/pre\u003e\n      operationId: taxRatesByIpAddress\n      parameters:\n        - description: \"Domain name: api.taxrates.io\"\n          in: query\n          name: domain\n          schema:\n            example: api.taxrates.io\n            type: string\n        - description: Customer's IP address\n          in: query\n          name: ip\n          schema:\n            example: 86.139.70.49\n            type: string\n        - description: For US sales tax you can filter the tax type\n          in: query\n          name: filter\n          schema:\n            example: \"\"\n            type: string\n        - description: For US sales tax a Zipcode must be proivded\n          in: query\n          name: zip\n          schema:\n            example: \"\"\n            type: string\n        - description: Your can filter your taxes by product code\n          in: query\n          name: product_code\n          schema:\n            example: C010\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                \"An array of tax rates for VAT, GST \u0026 TAX\":\n                  value:\n                    - country_name: \u003cstring\u003e\n                      taxes:\n                        - Country: \u003cstring\u003e\n                          Type: \u003cstring\u003e\n                          data_name: \u003cstring\u003e\n                          data_value: \u003cstring\u003e\n                        - Country: \u003cstring\u003e\n                          Type: \u003cstring\u003e\n                          data_name: \u003cstring\u003e\n                          data_value: \u003cstring\u003e\n                    - country_name: \u003cstring\u003e\n                      taxes:\n                        - Country: \u003cstring\u003e\n                          Type: \u003cstring\u003e\n                          data_name: \u003cstring\u003e\n                          data_value: \u003cstring\u003e\n                        - Country: \u003cstring\u003e\n                          Type: \u003cstring\u003e\n                          data_name: \u003cstring\u003e\n                          data_value: \u003cstring\u003e\n              schema:\n                items:\n                  properties:\n                    country_name:\n                      example: \u003cstring\u003e\n                      type: string\n                    taxes:\n                      items:\n                        properties:\n                          Country:\n                            example: \u003cstring\u003e\n                            type: string\n                          Type:\n                            example: \u003cstring\u003e\n                            type: string\n                          data_name:\n                            example: \u003cstring\u003e\n                            type: string\n                          data_value:\n                            example: \u003cstring\u003e\n                            type: string\n                        type: object\n                      type: array\n                  type: object\n                type: array\n          description: An array of tax rates for VAT, GST \u0026 TAX\n        \"404\":\n          content:\n            text/plain:\n              examples:\n                Geolocation can not be processed/No matching country found:\n                  value: \"\"\n          description: Geolocation can not be processed/No matching country found\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Unexpected error:\n                  value:\n                    code: \u003cinteger\u003e\n                    fields: \u003cstring\u003e\n                    message: \u003cstring\u003e\n              schema:\n                properties:\n                  code:\n                    example: \u003cinteger\u003e\n                    type: string\n                  fields:\n                    example: \u003cstring\u003e\n                    type: string\n                  message:\n                    example: \u003cstring\u003e\n                    type: string\n                type: object\n          description: Unexpected error\n      summary: Tax rates by IP address\n      tags:\n        - v1/tax\n  /v3/tax/rates:\n    get:\n      description: |\n        \u003cp\u003eGet request. This method returns all tax rates configured on your account. Based on your country selection the endpoint will return all taxes for all countries. You can use the 'filter' parameter to narrow results to selected type of tax. Use 'zip' parameter when you have selected the United States.\u003c/p\u003e\n        \u003cp\u003eWe have development an easy to use scheduler so you can call the API to get the rates every hour or day. Please click on the following link to see the \u003ca href=\"https://gist.github.com/gregbird/cd904ff230cdf86253716aa351154edb\"\u003ecode on Github\u003c/a\u003e.\u003c/p\u003e\n        \u003cp\u003e\u003cb\u003ePlease note\u003c/b\u003e in cases when a US state doesn't have sales tax and when a product is tax exempt for a zip code or for a state the API response will be \"null\"\u003c/p\u003e\n        \u003cp\u003eTo get a response you need to have selected a product code in your Taxrates.io dashboard, please see the Introduction section above for description of the different types of product codes.\u003c/p\u003e\n        \u003cp\u003eFor US sales tax you can filter the tax rate you want for each state or zip code with one of the following: (they are case sensitive)\u003c/p\u003e\n        \u003cul\u003e\n          \u003cli\u003eCombinedRate\u003c/li\u003e\n          \u003cli\u003eStateRate\u003c/li\u003e\n          \u003cli\u003eCountyRate\u003c/li\u003e\n          \u003cli\u003eCityRate\u003c/li\u003e\n          \u003cli\u003eSpecialRate\u003c/li\u003e\n        \u003c/ul\u003e\n        \u003cpre\u003e\u003ccode class=\"js\"\u003e\n          var taxrates_endpoint = 'tax/rates';\n          var taxrates_params = {'domain':'api.taxrates.io'};\n          var taxrates_url = '/api/v3/';\n          if ( localStorage.getItem(\"Taxrates_API_Client_Secret\") ){\n          jQuery.support.cors = true;\n          jQuery.ajax({\n              url: taxrates_url+taxrates_endpoint,\n              type: 'get',\n              method: 'get',\n              dataType: \"json\",\n              data: taxrates_params,\n              beforeSend: function (request) {\n                      request.withCredentials = true;\n                      request.setRequestHeader(\"Authorization\", \"Apikey \" + localStorage.getItem(\"Taxrates_API_Client_Secret\"));\n              },\n              headers: {\n                \"accept\": \"application/json\"\n              },\n              contentType: 'application/json; charset=utf-8',\n              success: function (data, textStatus, jqXHR) {\n                //Maintain errors inside success because the API may return 200 in general, but different code inside\n                  if(data.ErrorCode=='404' || data.ErrorCode=='500'){\n                    //Maintain errors here\n                    console.log(data.ErrorMessage);\n                    return false;\n                  }else{\n                    var rates = [];\n                    var i=0;\n                    var taxrates_range = '';\n                    jQuery.each(data, function(k, v) {\n                        if(v.hasOwnProperty(\"rates\")){\n                            jQuery.each(v.rates, function(m, w) {\n                                rates[i] = [];\n                                //Only showing standard rate type\n                                if( w.Type == \"standard\" ){\n                                    rates[i][0] = w.Type;\n                                    rates[i][1] = w.data_value;\n                                    rates[i][2] = w.product_code;\n                                    i++;\n                                }\n                            });\n                        }\n                    }).fail(function(xhr) {\n                            //Maintain your errors here\n                            return false;\n                    });\n                    var cursor = jqXHR.getResponseHeader('X-Cursor-Next');\n                    if (cursor) {\n                      // get next page...\n                    }\n                    return true;\n          }else{\n            //Not logged into taxrates.io\n            //Maintain your errors here\n            return false;\n          }\u003c/code\u003e\u003c/pre\u003e\n      operationId: allTaxRates\n      parameters:\n        - description: \"Domain name: api.taxrates.io\"\n          in: query\n          name: domain\n          schema:\n            example: \u003cstring\u003e\n            type: string\n        - description: \"You can filter your taxes by one of following types: 'standard', 'CombinedRate', 'CountyRate', 'CityRate', 'SPDRate' and 'MTARate'.\"\n          in: query\n          name: filter\n          schema:\n            example: \"\"\n            type: string\n        - description: Cursor shows from which record you want to get information. Default value is 0, next value can be retrieved from X-Cursor-Next header.\n          in: query\n          name: cursor\n          schema:\n            example: \"\"\n            type: string\n        - in: query\n          name: Product_code\n          schema:\n            example: C012\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                An array of locations with tax rates:\n                  value:\n                    - id: \u003cinteger\u003e\n                      name: \u003cstring\u003e\n                      rates:\n                        - data_name: \u003cstring\u003e\n                          data_value: \u003cstring\u003e\n                          product_code: \u003cstring\u003e\n                          type: \u003cstring\u003e\n                        - data_name: \u003cstring\u003e\n                          data_value: \u003cstring\u003e\n                          product_code: \u003cstring\u003e\n                          type: \u003cstring\u003e\n                      state: \u003cstring\u003e\n                      zip: \u003cstring\u003e\n                    - id: \u003cinteger\u003e\n                      name: \u003cstring\u003e\n                      rates:\n                        - data_name: \u003cstring\u003e\n                          data_value: \u003cstring\u003e\n                          product_code: \u003cstring\u003e\n                          type: \u003cstring\u003e\n                        - data_name: \u003cstring\u003e\n                          data_value: \u003cstring\u003e\n                          product_code: \u003cstring\u003e\n                          type: \u003cstring\u003e\n                      state: \u003cstring\u003e\n                      zip: \u003cstring\u003e\n              schema:\n                items:\n                  properties:\n                    id:\n                      example: \u003cinteger\u003e\n                      type: string\n                    name:\n                      example: \u003cstring\u003e\n                      type: string\n                    rates:\n                      items:\n                        properties:\n                          data_name:\n                            example: \u003cstring\u003e\n                            type: string\n                          data_value:\n                            example: \u003cstring\u003e\n                            type: string\n                          product_code:\n                            example: \u003cstring\u003e\n                            type: string\n                          type:\n                            example: \u003cstring\u003e\n                            type: string\n                        type: object\n                      type: array\n                    state:\n                      example: \u003cstring\u003e\n                      type: string\n                    zip:\n                      example: \u003cstring\u003e\n                      type: string\n                  type: object\n                type: array\n          description: An array of locations with tax rates\n        \"404\":\n          content:\n            text/plain:\n              examples:\n                No configured tax rates found. Have you added any country to your account?:\n                  value: \"\"\n          description: No configured tax rates found. Have you added any country to your account?\n        \"500\":\n          content:\n            application/json:\n              examples:\n                Unexpected error:\n                  value:\n                    code: \u003cinteger\u003e\n                    fields: \u003cstring\u003e\n                    message: \u003cstring\u003e\n              schema:\n                properties:\n                  code:\n                    example: \u003cinteger\u003e\n                    type: string\n                  fields:\n                    example: \u003cstring\u003e\n                    type: string\n                  message:\n                    example: \u003cstring\u003e\n                    type: string\n                type: object\n          description: Unexpected error\n      summary: All tax rates\n      tags:\n        - v3/tax\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/taxrates.io/1.0.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/taxrates.io/1.0.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/tax/ip\": get: responses: 404: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}