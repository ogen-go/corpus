{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/microcks/microcks"
		},
		"file": {
			"name": "cars-openapi.json",
			"size": 0,
			"path": "webapp/src/test/resources/io/github/microcks/util/openapi/cars-openapi.json",
			"byteSize": 5377,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"OpenAPI Car API\",\n    \"description\": \"Sample OpenAPI API using cars\",\n    \"contact\": {\n      \"name\": \"Laurent Broudoux\",\n      \"url\": \"https://github.com/lbroudoux\",\n      \"email\": \"laurent.broudoux@gmail.com\"\n    },\n    \"license\": {\n      \"name\": \"MIT License\",\n      \"url\": \"https://opensource.org/licenses/MIT\"\n    },\n    \"version\": \"1.0.0\"\n  },\n  \"paths\": {\n    \"/owner/{owner}/car\": {\n      \"get\": {\n        \"summary\": \"List all cars of owner\",\n        \"description\": \"List all cars of owner description\",\n        \"operationId\": \"getCarsOp\",\n        \"parameters\": [\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Result page wanted\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"examples\": {\n              \"laurent_cars\": {\n                \"value\": 0\n              }\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Number of result in page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"examples\": {\n              \"laurent_cars\": {\n                \"value\": 20\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Car\"\n                  }\n                },\n                \"examples\": {\n                  \"laurent_cars\": {\n                    \"value\": \"[\\n    {\\\"name\\\": \\\"307\\\", \\\"model\\\": \\\"Peugeot 307\\\", \\\"year\\\": 2003},\\n    {\\\"name\\\": \\\"jean-pierre\\\", \\\"model\\\": \\\"Peugeot Traveler\\\", \\\"year\\\": 2017}\\n]\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Add a car to current owner\",\n        \"description\": \"Add a car to current owner description\",\n        \"operationId\": \"addCarOp\",\n        \"requestBody\": {\n          \"description\": \"Car body\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Car\"\n              },\n              \"examples\": {\n                \"laurent_307\": {\n                  \"summary\": \"Creation of a valid car\",\n                  \"description\": \"Should return 201\",\n                  \"value\": \"{\\\"name\\\": \\\"307\\\", \\\"model\\\": \\\"Peugeot 307\\\", \\\"year\\\": 2003}\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Car created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Car\"\n                },\n                \"examples\": {\n                  \"laurent_307\": {\n                    \"summary\": \"Creation of a valid car response\",\n                    \"value\": \"{\\\"name\\\": \\\"307\\\", \\\"model\\\": \\\"Peugeot 307\\\", \\\"year\\\": 2003}\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {}\n        }\n      },\n      \"parameters\": [\n        {\n          \"name\": \"owner\",\n          \"in\": \"path\",\n          \"description\": \"Owner of the cars\",\n          \"required\": true,\n          \"schema\": {\n            \"format\": \"string\",\n            \"type\": \"string\"\n          },\n          \"examples\": {\n            \"laurent_cars\": {\n              \"summary\": \"Value for laurent related examples\",\n              \"value\": \"laurent\"\n            },\n            \"laurent_307\": {\n              \"$ref\": \"#/components/examples/param_laurent\"\n            }\n          }\n        }\n      ]\n    },\n    \"/owner/{owner}/car/{car}/passenger\": {\n      \"post\": {\n        \"summary\": \"Add some passengers to the car\",\n        \"description\": \"Add some passengers to the car description\",\n        \"operationId\": \"addPassengerOp\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            }\n          }\n        }\n      },\n      \"parameters\": [\n        {\n          \"name\": \"owner\",\n          \"in\": \"path\",\n          \"description\": \"Owner of the car\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"car\",\n          \"in\": \"path\",\n          \"description\": \"The car to manage passengers for\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ]\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Car\": {\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"description\": \"Name of the car\",\n            \"type\": \"string\"\n          },\n          \"year\": {\n            \"description\": \"Build year\",\n            \"type\": \"integer\"\n          },\n          \"model\": {\n            \"description\": \"Model of the car\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"examples\": {\n      \"param_laurent\": {\n        \"value\": \"laurent\"\n      }\n    }\n  },\n  \"tags\": [\n    {\n      \"name\": \"car\",\n      \"description\": \"\"\n    }\n  ]\n}",
			"canonicalURL": "/github.com/microcks/microcks@073200620b3f9b1525985cb0492dd8995738119b/-/blob/webapp/src/test/resources/io/github/microcks/util/openapi/cars-openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/microcks/microcks/blob/073200620b3f9b1525985cb0492dd8995738119b/webapp/src/test/resources/io/github/microcks/util/openapi/cars-openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/owner/{owner}/car/{car}/passenger\": post: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}