{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/davidmoten/openapi-to-plantuml"
		},
		"file": {
			"name": "ecommerce.yml",
			"size": 0,
			"path": "src/test/resources/demo/ecommerce.yml",
			"byteSize": 11869,
			"content": "openapi: 3.0.0\ninfo:\n  title: eCommerce\n  description: BCE eCommerce API\n  version: v1\nservers:\n  - url: 'https://virtserver.swaggerhub.com/advanced5/bce/v1'\n    description: SwaggerHub API Auto Mocking\nsecurity:\n  - password:\n      - read\n      - write\npaths:\n  /companies:\n    get:\n      summary: Get a list of companies\n      description: List of companies/company name/codes that could be linked to\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Company'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /tax-rates:\n    get:\n      summary: Get a list of tax/VAT codes\n      description: List of VAT Codes \u0026 Rates\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TaxRate'\n  /exchange-rates:\n    get:\n      summary: Get a list of exchange rates\n      description: List of all Currencies + exchange rates\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ExchangeRate'\n  /products/categories:\n    get:\n      summary: Get a list of product categories\n      description: List of Stock/product categories\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/StockCategory'\n  /products:\n    get:\n      summary: Get a list of catalogue items.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Product'\n    post:\n      summary: Add a new product\n      requestBody:\n        $ref: '#/components/requestBodies/Product'\n      responses:\n        '201':\n          description: Created\n  '/products/{stockItemCode}':\n    put:\n      summary: Update a product\n      parameters:\n        - name: stockItemCode\n          in: path\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n      requestBody:\n        $ref: '#/components/requestBodies/Product'\n      responses:\n        '200':\n          description: Success\n  /customers:\n    get:\n      summary: Get a list of customers.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Customer'\n    post:\n      summary: Add a new customer\n      requestBody:\n        $ref: '#/components/requestBodies/Customer'\n      responses:\n        '201':\n          description: Created\n  '/customers/{customerCode}':\n    put:\n      summary: Update an existing customer.\n      parameters:\n        - name: customerCode\n          in: path\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/Customer'\n      responses:\n        '200':\n          description: Success\n  /sales-orders:\n    get:\n      summary: Get a list of sales orders\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SalesOrder'\n    post:\n      summary: Add a new sales order\n      requestBody:\n        $ref: '#/components/requestBodies/SalesOrder'\n      responses:\n        '201':\n          description: Created\n  /receipts:\n    get:\n      summary: Get a list of receipts\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Receipt'\n    post:\n      summary: Add a new receipt\n      requestBody:\n        $ref: '#/components/requestBodies/Receipt'\n      responses:\n        '201':\n          description: Created\n  '/receipts/{id}':\n    put:\n      summary: Update an existing receipt.\n      parameters:\n        - name: id\n          in: path\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: integer\n      requestBody:\n        $ref: '#/components/requestBodies/Receipt'\n      responses:\n        '200':\n          description: Success\n  /locations:\n    get:\n      summary: Get a list of Locations\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Location'\n  /bank-accounts:\n    get:\n      summary: Get a list of bank accounts\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BankAccount'\n  /discounts:\n    get:\n      summary: Get a list of discounts\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Discount'\n  /ping:\n    get:\n      summary: Server heartbeat operation\n      description: Response indicates that the service is functional.\n      responses:\n        '200':\n          description: OK\n      security: []\ncomponents:\n  schemas:\n    Company:\n      type: object\n      properties:\n        CompanyId:\n          type: string\n        CompanyName:\n          type: string\n        Address:\n          $ref: '#/components/schemas/Address'\n        CompanyNumber:\n          type: integer\n        VATNumber:\n          type: integer\n    TaxRate:\n      type: object\n      properties:\n        TaxRateId:\n          type: integer\n        Name:\n          type: string\n        Rate:\n          type: number\n        CountryCode:\n          type: string\n    ExchangeRate:\n      type: object\n      properties:\n        CurrencyCode:\n          type: string\n        CountryCode:\n          type: string\n        Description:\n          type: string\n        RateVsGbp:\n          type: number\n    StockCategory:\n      type: object\n      properties:\n        CategoryId:\n          type: integer\n        CategoryName:\n          type: string\n    Product:\n      type: object\n      properties:\n        StockItemId:\n          type: integer\n        StockItemCode:\n          type: string\n        StockItemName:\n          type: string\n        StockItemDescription:\n          type: string\n        SalesUoM:\n          type: number\n        ListPrice:\n          type: number\n        VatRate:\n          $ref: '#/components/schemas/TaxRate'\n        ManufacturerPartNumber:\n          type: string\n        ManufacturerPartName:\n          type: string\n        Weight:\n          type: number\n        Url:\n          type: string\n        LeadTime:\n          type: number\n        Barcode:\n          type: integer\n        DefaultStockLocation:\n          $ref: '#/components/schemas/Location'\n      description: Catalogue Item\n    Customer:\n      type: object\n      properties:\n        CustomerCode:\n          type: string\n        AccountCode:\n          type: string\n        AccountName:\n          type: string\n        Address:\n          $ref: '#/components/schemas/Address'\n        VatNumber:\n          type: integer\n        VatType:\n          type: string\n        Currency:\n          type: string\n        MainContact:\n          $ref: '#/components/schemas/Contact'\n        DeliveryAddress:\n          $ref: '#/components/schemas/Address'\n        Discounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/Discount'\n        AccountStatus:\n          type: string\n      description: Full details for a customer\n    SalesOrder:\n      type: object\n      properties:\n        SalesOrderCode:\n          type: string\n        CustomerCode:\n          type: string\n        OrderDescription:\n          type: string\n        Status:\n          type: string\n        CustomerRef:\n          type: string\n        VatType:\n          type: string\n        Currency:\n          type: string\n        StockItemCode:\n          type: string\n        Quantity:\n          type: number\n        Total:\n          type: number\n        PickedDate:\n          type: string\n          format: date-time\n      description: Full sales order detail\n    Receipt:\n      type: object\n      properties:\n        Id:\n          type: integer\n        CustomerCode:\n          type: string\n        BankAccount:\n          type: string\n        Amount:\n          type: number\n        Currency:\n          type: string\n        Date:\n          type: string\n          format: date-time\n        Reference:\n          type: string\n      description: Receipt details\n    BankAccount:\n      type: object\n      properties:\n        AccountCode:\n          type: string\n        AccountName:\n          type: string\n    Discount:\n      type: object\n      properties:\n        CustomerCode:\n          type: string\n        ProductCode:\n          type: string\n        DiscountRate:\n          type: number\n        DiscountStart:\n          type: string\n          format: date-time\n        DiscountEnd:\n          type: string\n          format: date-time\n    Address:\n      type: object\n      properties:\n        AddressLine1:\n          type: string\n        AddressLine2:\n          type: string\n        AddressLine3:\n          type: string\n        AddressLine4:\n          type: string\n        PostalCode:\n          type: string\n        CountryCode:\n          type: string\n    Contact:\n      type: object\n      properties:\n        Name:\n          type: string\n        ContactMethods:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContactMethod'\n        Address:\n          $ref: '#/components/schemas/Address'\n    ContactMethod:\n      type: object\n      properties:\n        Type:\n          type: string\n          enum:\n            - Tel\n            - Mobile\n            - Email\n        Address:\n          type: string\n    Location:\n      type: object\n      properties:\n        LocationCode:\n          type: string\n        Name:\n          type: string\n        Address:\n          $ref: '#/components/schemas/Address'\n    Error:\n      type: object\n      properties:\n        Reference:\n          type: string\n        Message:\n          type: string\n  requestBodies:\n    Product:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Product'\n    Customer:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Customer'\n    SalesOrder:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SalesOrder'\n    Receipt:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Receipt'\n  securitySchemes:\n    password:\n      type: oauth2\n      flows:\n        password:\n          tokenUrl: 'http://example.com/oauth/token'\n          scopes:\n            write: allows modifying resources\n            read: allows reading resources",
			"canonicalURL": "/github.com/davidmoten/openapi-to-plantuml@c4984f52cd528d20cbbbcf1439a60df24ec343c3/-/blob/src/test/resources/demo/ecommerce.yml",
			"externalURLs": [
				{
					"url": "https://github.com/davidmoten/openapi-to-plantuml/blob/c4984f52cd528d20cbbbcf1439a60df24ec343c3/src/test/resources/demo/ecommerce.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/receipts\": get: security: security \"password\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}