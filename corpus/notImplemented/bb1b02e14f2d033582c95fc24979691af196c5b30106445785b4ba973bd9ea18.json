{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/cloudmersive.barcode/openapi.yaml",
			"byteSize": 10850,
			"content": "openapi: 3.0.1\ninfo:\n  x-ballerina-display:\n    label: Cloudmersive Barcode\n    iconPath: \"icon.png\"\n  title: barcodeapi\n  description: This is a generated connector from [Cloudmersive](https://account.cloudmersive.com) OpenAPI specification.\n\n    The Cloudmersive Barcode APIs let you generate barcode images, and recognize values from images of barcodes.\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n    \n    Create a [Cloudmersive account](https://account.cloudmersive.com/login) and obtain tokens following [this guide](https://account.cloudmersive.com/keys).\n  version: v1\nservers:\n- url: https://testapi.cloudmersive.com/\npaths:\n  /barcode/lookup/ean:\n    post:\n      tags:\n      - BarcodeLookup\n      summary: Lookup EAN barcode value, return product data\n      description: Lookup an input EAN barcode and return key details about the product\n      operationId: Barcode Ean Lookup\n      requestBody:\n        description: Barcode value\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n          application/xml:\n            schema:\n              type: string\n          text/xml:\n            schema:\n              type: string\n          application/x-www-form-urlencoded:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BarcodeLookupResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/BarcodeLookupResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/BarcodeLookupResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/BarcodeLookupResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: value\n  # /barcode/scan/image:\n  #   post:\n  #     tags:\n  #     - BarcodeScan\n  #     summary: Scan and recognize an image of a barcode\n  #     description: Scan an image or photo of a barcode and return the result.  Supported\n  #       barcode types include AZTEC, CODABAR, CODE_39, CODE_93, CODE_128, DATA_MATRIX,\n  #       EAN_8, EAN_13, ITF, MAXICODE, PDF_417, QR_CODE, RSS_14, RSS_EXPANDED, UPC_A,\n  #       UPC_E, All_1D, UPC_EAN_EXTENSION, MSI, PLESSEY, IMB\n  #     operationId: Barcode Scan_Image\n  #     requestBody:\n  #       content:\n  #         multipart/form-data:\n  #           schema:\n  #             description: The image file to scan\n  #             required:\n  #             - imageFile\n  #             properties:\n  #               imageFile:\n  #                 type: string\n  #                 description: Image file to perform the operation on.  Common file\n  #                   formats such as PNG, JPEG are supported.\n  #                 format: binary\n  #       required: true\n  #     responses:\n  #       200:\n  #         description: OK\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/BarcodeScanResult'\n  #           text/json:\n  #             schema:\n  #               $ref: '#/components/schemas/BarcodeScanResult'\n  #           application/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/BarcodeScanResult'\n  #           text/xml:\n  #             schema:\n  #               $ref: '#/components/schemas/BarcodeScanResult'\n  #     security:\n  #     - Apikey: []\n  /barcode/generate/qrcode:\n    post:\n      tags:\n      - GenerateBarcode\n      summary: Generate a QR code barcode as PNG file\n      description: Generate a QR code barcode as a PNG file, a type of 2D barcode\n        which can encode free-form text information\n      operationId: Generate Barcode_QRCode\n      requestBody:\n        description: QR code text to convert into the QR code barcode\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n          application/xml:\n            schema:\n              type: string\n          text/xml:\n            schema:\n              type: string\n          application/x-www-form-urlencoded:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                title: OutputContent\n                type: string\n                description: Output file content from the operation\n                format: byte\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: value\n  /barcode/generate/upc-a:\n    post:\n      tags:\n      - GenerateBarcode\n      summary: Generate a UPC-A code barcode as PNG file\n      description: Validate and generate a UPC-A barcode as a PNG file, a type of\n        1D barcode\n      operationId: Generate Barcode_UPCA\n      requestBody:\n        description: UPC-A barcode value to generate from\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n          application/xml:\n            schema:\n              type: string\n          text/xml:\n            schema:\n              type: string\n          application/x-www-form-urlencoded:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                title: OutputContent\n                type: string\n                description: Output file content from the operation\n                format: byte\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: value\n  /barcode/generate/upc-e:\n    post:\n      tags:\n      - GenerateBarcode\n      summary: Generate a UPC-E code barcode as PNG file\n      description: Validates and generate a UPC-E barcode as a PNG file, a type of\n        1D barcode\n      operationId: Generate Barcode_UPCE\n      requestBody:\n        description: UPC-E barcode value to generate from\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n          application/xml:\n            schema:\n              type: string\n          text/xml:\n            schema:\n              type: string\n          application/x-www-form-urlencoded:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                title: OutputContent\n                type: string\n                description: Output file content from the operation\n                format: byte\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: value\n  /barcode/generate/ean-13:\n    post:\n      tags:\n      - GenerateBarcode\n      summary: Generate a EAN-13 code barcode as PNG file\n      description: Validates and generate a EAN-13 barcode as a PNG file, a type of\n        1D barcode\n      operationId: Generate Barcode_EAN13\n      requestBody:\n        description: Barcode value to generate from\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n          application/xml:\n            schema:\n              type: string\n          text/xml:\n            schema:\n              type: string\n          application/x-www-form-urlencoded:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                title: OutputContent\n                type: string\n                description: Output file content from the operation\n                format: byte\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: value\n  /barcode/generate/ean-8:\n    post:\n      tags:\n      - GenerateBarcode\n      summary: Generate a EAN-8 code barcode as PNG file\n      description: Validates and generate a EAN-8 barcode as a PNG file, a type of\n        1D barcode\n      operationId: Generate Barcode_EAN8\n      requestBody:\n        description: Barcode value to generate from\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n          application/xml:\n            schema:\n              type: string\n          text/xml:\n            schema:\n              type: string\n          application/x-www-form-urlencoded:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                title: OutputContent\n                type: string\n                description: Output file content from the operation\n                format: byte\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: value\ncomponents:\n  schemas:\n    BarcodeLookupResponse:\n      type: object\n      properties:\n        Successful:\n          type: boolean\n          description: True if operation was successful, false otherwise\n        Matches:\n          type: array\n          description: Resulting product matches for the input barcode\n          items:\n            $ref: '#/components/schemas/ProductMatch'\n      description: Result of performing a barcode lookup\n    ProductMatch:\n      type: object\n      properties:\n        EAN:\n          type: string\n          description: EAN code for the product\n        Title:\n          type: string\n          description: Title of the product\n      description: Matching product for the input barcode\n    BarcodeScanResult:\n      type: object\n      properties:\n        Successful:\n          type: boolean\n          description: True if the operation was successful, false otherwise\n        BarcodeType:\n          type: string\n          description: The type of the barcode; possible values are AZTEC, CODABAR,\n            CODE_39, CODE_93, CODE_128, DATA_MATRIX, EAN_8, EAN_13, ITF, MAXICODE,\n            PDF_417, QR_CODE, RSS_14, RSS_EXPANDED, UPC_A, UPC_E, All_1D, UPC_EAN_EXTENSION,\n            MSI, PLESSEY, IMB\n        RawText:\n          type: string\n          description: The barcode text\n      description: Result of the barcode scan\n  securitySchemes:\n    Apikey:\n      type: apiKey\n      description: Represents API Key `Apikey`\n      name: Apikey\n      in: header\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/cloudmersive.barcode/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/cloudmersive.barcode/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/barcode/generate/ean-13\": post: requestBody: contents: application/x-www-form-urlencoded: primitive: complex form schema not implemented",
	"NotImplemented": [
		"complex form schema"
	]
}