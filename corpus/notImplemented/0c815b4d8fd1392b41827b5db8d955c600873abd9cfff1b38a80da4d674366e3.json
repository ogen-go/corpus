{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/carboclan/liqui3d"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/openapi.yml",
			"byteSize": 20513,
			"content": "openapi: 3.0.0\ninfo:\n  title: Dex Demo Embedded REST API\n  version: 0.0.1\n\nservers:\n  - url: https://testnet.serverfuse.tools/api/v1/\n    description: Long-lived testnet.\n  - url: https://localnet.dex-demo/api/v1/\n    description: URL to the REST API as embedded within the DEX demo client.\n\ntags:\n  - name: auth\n    description: Authentication\n  - name: exchange\n    description: Exchange\n  - name: user\n    description: User\n  - name: market\n    description: Market\n\nsecurity:\n  - SessionCookie: []\n  - CSRFToken: []\n\npaths:\n  /auth/login:\n    post:\n      summary: Logs a user in.\n      security:\n        - CSRFToken: []\n      tags:\n        - auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n                password:\n                  type: string\n      responses:\n        '204':\n          description: User successfully logged in. The session ID is returned in a cookie.\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n                example: uex_session=12345abc;\n        '403':\n          description: Authentication failed.\n\n  /auth/logout:\n    post:\n      summary: Logs a user out.\n      tags:\n        - auth\n      responses:\n        '204':\n          description: User successfully logged out.\n\n  /auth/change_password:\n    post:\n      summary: Changes a user's password.\n      description: All sessions using the previous password will be logged out.\n      tags:\n        - auth\n      security:\n        - CSRFToken: []\n        - SessionCookie: []\n        - OTP: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                old_password:\n                  type: string\n                new_password:\n                  type: string\n      responses:\n        '204':\n          description: Password successfully changed.\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n                example: uex_session=12345abc;\n        '403':\n          description: Invalid password.\n\n  /exchange/orders:\n    post:\n      summary: Posts an order. Funds will be immediately debited.\n      tags:\n        - exchange\n      security:\n        - CSRFToken: []\n        - SessionCookie: []\n        - OTP: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OrderCreationRequest'\n      responses:\n        '204':\n          description: Order successfully posted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrderCreationResponse'\n    put:\n      summary: Modifies an existing order. Funds will immediately debited if the quantity increases, or credited if the quantity decreases.\n      tags:\n        - exchange\n      security:\n        - CSRFToken: []\n        - SessionCookie: []\n        - OTP: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Order'\n      responses:\n        '200':\n          description: Order successfully modified.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrderCreationResponse'\n\n  /exchange/orders/{order_id}:\n    get:\n      summary: Gets an order by its ID.\n      tags:\n        - exchange\n      parameters:\n        - in: path\n          name: order_id\n          schema:\n            type: string\n          required: true\n          description: Numeric ID of the order.\n      responses:\n        '200':\n          description: Returns the looked-up order.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrderWithFills'\n        '404':\n          description: Order not found.\n    delete:\n      summary: Cancels an order by its ID.\n      tags:\n        - exchange\n      security:\n        - CSRFToken: []\n        - SessionCookie: []\n        - OTP: []\n      parameters:\n        - in: path\n          name: order_id\n          schema:\n            type: string\n          required: true\n          description: Numeric ID of the order.\n      responses:\n        '200':\n          description: Order successfully cancelled.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockInclusionResponse'\n        '403':\n          description: Order is not owned by current user.\n        '422':\n          description: Order is already cancelled.\n        '404':\n          description: Order not found.\n\n  /exchange/orders/cancel:\n    post:\n      summary: Cancels a group of orders.\n      tags:\n        - exchange\n      security:\n        - CSRFToken: []\n        - SessionCookie: []\n        - OTP: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                order_ids:\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: Bulk cancel completed. Some response may have failed; see the response body itself to deal with individual errors.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  oneOf:\n                    - $ref: '#/components/schemas/BlockInclusionResponse'\n                    - $ref: '#/components/schemas/BlockInclusionFailure'\n\n  /user/balance:\n    get:\n      summary: Returns the user's balance across all supported chains.\n      tags:\n        - user\n      responses:\n        '200':\n          description: The user's balances.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Balance'\n\n  /user/orders:\n    get:\n      summary: Gets all orders created by this user.\n      tags:\n        - user\n      parameters:\n        - $ref: '#/components/parameters/Start'\n      responses:\n        '200':\n          description: The user's orders.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  next_id:\n                    type: string\n                  orders:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/OrderWithFills'\n\n  /user/fills:\n    get:\n      summary: Gets all fills relevant to this user.\n      tags:\n        - user\n      parameters:\n        - $ref: '#/components/parameters/StartBlock'\n        - $ref: '#/components/parameters/EndBlock'\n      responses:\n        '200':\n          description: The user's fills.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  fills:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Fill'\n\n  /user/send:\n    post:\n      summary: Transfers Funds\n      tags:\n        - user\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                to:\n                  type: string\n                amount:\n                  type: string\n                asset_id:\n                  type: string\n      responses:\n        '200':\n          description: Status of the transfer.\n          content:\n            application/json:\n              schema:\n                type: object\n                allOf:\n                  - $ref: '#/components/schemas/BlockInclusionResponse'\n\n  /user/withdrawals:\n    post:\n      summary: Initiates a withdrawal of a cleared asset.\n      tags:\n        - user\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                beneficiary:\n                  type: string\n                  description: The address of the recipient who will unlock funds on the relay chain. Hex-encoded.\n                asset_id:\n                  type: string\n                  description: The ID of the cleared asset to be withdrawn.\n                quantity:\n                  type: string\n                  description: The amount of the cleared asset to withdraw, as represented in the asset's base units.\n      responses:\n        '200':\n          description: Withdrawal successfully initiated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Withdrawal'\n    get:\n      summary: Gets the user's list of withdrawals.\n      tags:\n        - user\n      responses:\n        '200':\n          description: List of withdrawals.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  owner:\n                    type: string\n                  withdrawals:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Withdrawal'\n\n  /user/deposits:\n    post:\n      summary: Registers a relay chain deposit on the DEX demo.\n      tags:\n        - user\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                asset_id:\n                  type: string\n                  description: The asset ID deposited.\n                quantity:\n                  type: string\n                  description: The amount of the asset deposited.\n                relay_chain_id:\n                  type: string\n                  enum: ['ETH']\n                relay_chain_transaction_hash:\n                  type: string\n                  description: The transaction hash of the deposit on the relay chain.\n      responses:\n        '200':\n          description: Deposit successfully initiated.\n          content:\n            application/json:\n              schema:\n                type: object\n                allOf:\n                  - $ref: '#/components/schemas/BlockInclusionResponse'\n\n  /markets/{market_id}/candles:\n    get:\n      summary: Gets candlestick prices for the provided market.\n      tags:\n        - market\n      parameters:\n        - in: path\n          name: market_id\n          required: true\n          description: The ID of the market to fetch candles for.\n          schema:\n            type: string\n        - in: query\n          name: start\n          description: ISO8601 date of when to start the candle query.\n          schema:\n            type: string\n        - in: query\n          name: end\n          description: ISO8601 date of when to end the candle query.\n          schema:\n            type: string\n        - in: query\n          name: granularity\n          description: Granularity of candle data to return.\n          schema:\n            type: string\n            enum: ['1m', '5m', '15m', '60m', '1d']\n      responses:\n        '200':\n          description: Candle data.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CandlestickResponse'\n\n  /markets/{market_id}/spread/{block_number}:\n    get:\n      summary: Gets the batch auction state for the provided market ID and the block number.\n      tags:\n        - market\n      parameters:\n        - in: path\n          name: market_id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: block_number\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The batch state.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Spread'\n\n  /markets/{market_id}/book:\n    get:\n      summary: Gets all open order at latest block by market\n      tags:\n        - market\n      parameters:\n        - in: path\n          name: market_id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The batch state.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Spread'\n\n  /markets/{market_id}/batches/{block_number}:\n    get:\n      summary: Gets all executed batches at a block (or latest)\n      tags:\n        - market\n      parameters:\n        - in: path\n          name: market_id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: block_number\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The batch state.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchesResponse'\n\n  /markets/{market_id}/daily:\n    get:\n      summary: Daily Price Stats\n      tags:\n        - market\n      parameters:\n        - in: path\n          name: market_id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The stats.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  pair:\n                    type: string\n                  volume:\n                    type: string\n                  change:\n                    type: string\n                  last:\n                    type: string\n                  high:\n                    type: string\n                  low:\n                    type: string\n\n\n  /markets:\n    get:\n      summary: Lists all markets.\n      tags:\n        - market\n      responses:\n        '200':\n          description: List of markets.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Market'\n\ncomponents:\n  securitySchemes:\n    SessionCookie:\n      type: apiKey\n      in: cookie\n      name: uex_session\n\n    CSRFToken:\n      type: apiKey\n      in: header\n      name: X-CSRF-Token\n\n    OTP:\n      type: apiKey\n      in: header\n      name: X-OTP-Token\n\n  parameters:\n    StartId:\n      in: query\n      name: start_id\n      required: false\n      description: The smallest ID to include in this request.\n      schema:\n        type: string\n    EndId:\n      in: query\n      name: end_id\n      required: false\n      description: The largest ID to include in this request.\n      schema:\n        type: string\n    StartBlock:\n      in: query\n      name: start_block\n      required: false\n      description: The block to start counting from.\n      schema:\n        type: integer\n    EndBlock:\n      in: query\n      name: end_block\n      required: false\n      description: The block to end counting at.\n      schema:\n        type: integer\n    Start:\n      in: query\n      name: start\n      required: false\n      description: The ID to begin counting at.\n      schema:\n        type: integer\n\n  schemas:\n    BlockInclusionResponse:\n      type: object\n      properties:\n        block_inclusion:\n          type: object\n          properties:\n            block_number:\n              type: string\n            transaction_hash:\n              type: string\n            block_timestamp:\n              type: number\n\n    BlockInclusionFailure:\n      type: object\n      properties:\n        error:\n          type: object\n          properties:\n            codespace:\n              type: integer\n            code:\n              type: integer\n\n    BatchesResponse:\n      allOf:\n        - $ref: '#/components/schemas/BlockInclusionResponse'\n        - $ref: '#/components/schemas/BatchInfo'\n    BatchInfo:\n      type: object\n      properties:\n        price:\n          type: string\n        amount:\n          type: string\n\n    OrderCreationRequest:\n      type: object\n      properties:\n        market_id:\n          type: string\n        direction:\n          type: string\n          enum: ['BID', 'ASK']\n        price:\n          type: string\n        quantity:\n          type: string\n        type:\n          type: string\n          enum: ['MARKET', 'LIMIT']\n        time_in_force:\n          type: integer\n\n    OrderCreationResponse:\n      allOf:\n        - $ref: '#/components/schemas/BlockInclusionResponse'\n        - $ref: '#/components/schemas/Order'\n    Order:\n      type: object\n      properties:\n        id:\n          type: string\n        market_id:\n          type: string\n        direction:\n          type: string\n          enum: ['BID', 'ASK']\n        price:\n          type: string\n        quantity:\n          type: string\n        status:\n          type: string\n          enum: ['FILLED', 'CANCELLED', 'OPEN']\n        type:\n          type: string\n          enum: ['MARKET', 'LIMIT']\n        time_in_force:\n          type: integer\n\n    OrderWithFills:\n      allOf:\n        - $ref: '#/components/schemas/Order'\n      properties:\n        quantity_filled:\n          type: string\n\n    Balance:\n      type: object\n      properties:\n        balances:\n          type: array\n          items:\n            type: object\n            properties:\n              asset_id:\n                type: string\n              name:\n                type: string\n              symbol:\n                type: string\n              liquid:\n                type: string\n                description: Amount of this asset available for trading.\n              at_risk:\n                type: string\n                description: Amount of this asset current on the order book.\n\n    Fill:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/BlockInclusionResponse'\n      properties:\n        quantity_filled:\n          type: string\n        quantity_unfilled:\n          type: string\n        direction:\n          type: string\n          enum: ['BID', 'ASK']\n        order_id:\n          type: string\n        pair:\n          type: string\n        price:\n          type: string\n        owner:\n          type: string\n\n    CandlestickResponse:\n      type: object\n      properties:\n        market_id:\n          type: string\n        candles:\n          type: array\n          items:\n            type: object\n            properties:\n              date:\n                type: string\n                description: \"ISO8601\"\n              open:\n                type: string\n              close:\n                type: string\n              high:\n                type: string\n              low:\n                type: string\n\n    Spread:\n      type: object\n      properties:\n        block_number:\n          type: string\n        market_id:\n          type: string\n        bids:\n          type: array\n          items:\n            $ref: '#/components/schemas/PriceQuantity'\n        asks:\n          type: array\n          items:\n            $ref: '#/components/schemas/PriceQuantity'\n\n    PriceQuantity:\n      type: object\n      properties:\n        price:\n          type: string\n        quantity:\n          type: string\n\n    Market:\n      type: object\n      properties:\n        id:\n          type: string\n        pair:\n          type: string\n        base_asset_id:\n          type: string\n        quote_asset_id:\n          type: string\n\n    Withdrawal:\n      type: object\n      properties:\n        beneficiary:\n          type: string\n          description: The address of the recipient who will unlock funds on the remote chain. Hex-encoded.\n        merkle_proof:\n          type: string\n          description: The Merkle proof required to unlock funds on the relay chain.\n        merkle_leaf:\n          type: string\n          description: The Merkle leaf hash of the withdrawal.\n        asset_id:\n          type: string\n          description: The ID of the cleared asset to be withdrawn.\n        burn_id:\n          type: string\n          description: The ID of the underlying burn used to initiate this withdrawal.\n        quantity:\n          type: string\n          description: The amount of the cleared asset to withdraw, as represented in the asset's base units.\n        initiated_block:\n          type: number\n          description: The block number when this withdrawal was initiated.\n        owner:\n          type: string\n          description: The address whose funds are being withdrawn.\n",
			"canonicalURL": "/github.com/carboclan/liqui3d@df219d2eb62eb5f2924adbf5bc6ed15495922510/-/blob/openapi/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/carboclan/liqui3d/blob/df219d2eb62eb5f2924adbf5bc6ed15495922510/openapi/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/exchange/orders/cancel\": post: security: security \"SessionCookie\" (index 1): cookie security not implemented",
	"NotImplemented": [
		"cookie security"
	]
}