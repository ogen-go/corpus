{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OpenPSD/specs"
		},
		"file": {
			"name": "psd2.yaml",
			"size": 0,
			"path": "psd2.yaml",
			"byteSize": 81769,
			"content": "openapi: 3.0.0\ntags:\n    - name: accounts\n      description: 'Listing of accounts'\n    - name: consents\n      description: 'Managing consents'\n    - name: funds\n      description: 'Check funds'\n    - name: payments\n      description: 'Initiate payments'\ninfo:\n  version: 0.0.3\n  title: OpenPSD NextGen PSD2 \n  description: PSD2 API based on the Berlin Group specification 1.1 for NextGen PSD2 (May 11 2018)\n  contact:\n    name: OpenPSD\n    email: webmaster@openpsd.org\n    url: http://openpsd.org\n  termsOfService: http://openpsd.org/\n  license:\n    name: Berlin Group specification is published under the Creative Commons Attribution-NoDerivatives 4.0 International Public License\n    url: https://creativecommons.org/licenses/by-nd/4.0/\nservers:\n  - url: '{protocol}://api.openpsd.org/psd2/v1'\n    variables:\n      protocol:\n        enum:\n          - https\n        default: https\n    description: Sandbox  \ncomponents:\n  schemas:\n    consentId:\n      type: string\n      description: 'Identification of the consent resource as it is used in the API structure. Shall be contained, if a consent resource was generated.'\n      example: 'qwer3456tzui7890'\n    frequency:\n      type: string\n      enum:\n        - Daily\n        - Weekly\n        - EveryTwoWeeks\n        - Monthly\n        - EveryTwoMonths\n        - Quarterly\n        - SemiAnnual\n        - Annual\n    transactionFeeIndicator:\n      type: boolean\n    scaStatus:\n      type: string\n      description: This data element is containing information about the status of the SCA method applied. This is free text but might be coded in a future version of the specification.\n    scaAuthenticationData:\n      type: string\n      description: SCA authentication data, depending on the chosen authentication method. If the data is binary, then it is base64 encoded.\n    psuMessage:\n      type: string\n      description: 'Text to be displayed to the PSU'\n    paymentId:\n      type: string\n      description: 'resource identification of the generated payment initiation resource.'\n    HrefType:\n      type: string\n    Authorization:\n      type: string\n      example: 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhbGxvd2VkX25vZGVzIjoiZmRhYWU1ODYtYWE1NS00MzJjLTQxODEtYjRiYzY2MDljNzQ2IiwiZXhwIjoxNTU4NTMyMTI0LCJvd25lciI6IjViMDQxYzljNDVmOTJlMGExNzdlOThjYyJ9.uif9dlFO8qEQGrLh9bThtT4H_sUeL43nfx0PL-RTgd5KL9WaO5TADLPIgBu02h2I39jRRb978ZYiv2xseAK8xpR13vz8cQUjIX0FpLnrKomfvl_nyzefVkcUH_DrNGkcPZswoVNFbfeUWER1c8I0fUudVsnxHExRJ_S-Lq1vWCSDChy89Vm_bliYdt8DppyELaBadFPqxeRRkn-szpr8sAvDgbb-OccT3LsiylkqJ5g4BWqj9qLpBO4xkzSTLjdKvgipRcNwv_dKOcwF3OI90TAaX1aEm856Zg1hBLrYnae1oceBfRYl7rjtDQo3S_R0j5pLhb7Kd-ErHec6nyaoOQ'\n    ConsentStatus:\n      type: string\n      enum:\n        - received\n        - rejected\n        - valid\n        - revokedByPsu\n        - expired\n        - terminatedByTpp\n      description: 'authentication status of the consent'\n      example: 'received'\n    Currency:\n      type: string\n      pattern: '^[A-Z]{3}$'\n      description: ISO 4217 Alpha 3 currency code\n      maxLength: 3\n      example: 'EUR'\n    ExchangeRate:\n      type: object\n      required:\n        - currencyFrom\n        - rateFrom\n        - currencyTo\n        - rateTo\n        - rateDate\n      properties:\n        currencyFrom:\n          $ref: '#/components/schemas/Currency'\n        rateFrom:\n          type: string\n        currencyTo:\n          $ref: '#/components/schemas/Currency'\n        rateTo:\n          type: string\n        rateDate:\n          type: string\n          format: date\n          example: '2017-10-30'\n        rateContract:\n          type: string\n    PSUData:\n      type: object\n      properties:\n        password:\n          type: string\n          example: 'very42secret%'\n    Address:\n      type: object\n      required:\n        - country\n      properties:\n        street:\n          type: string\n          maxLength: 70\n        buildingNumber:\n          type: string\n        city:\n          type: string\n        postalCode:\n          type: string\n        country:\n          type: string\n    Remittance:\n      type: object\n      required:\n        - reference\n      properties:\n        reference:\n          type: string\n          maxLength: 35\n        referenceType:\n          type: string\n          maxLength: 35\n        referenceIssuer:\n          type: string\n          maxLength: 35\n    Amount:\n      type: object\n      required:\n        - currency\n        - amount\n      properties:\n        currency:\n          $ref: '#/components/schemas/Currency'\n        amount:\n          type: string\n          description: 'The amount given with fractional digits, where fractions must be compliant to the currency definition. Up to 14 significant figures. Negative amounts are signed by minus. The decimal separator is a dot.'\n          example: '123.42'\n    AccountReference:\n      type: object\n      description: 'This type is containing any account identification which can be used on payload-level to address specific accounts. The ASPSP will document which account reference type it will support. Exactly one of the attributes defined as \"conditional\" shall be used.'\n      properties:\n        iban:\n          type: string\n          pattern: '^[A-Z]{2}[0-9]{2}[A-Z0-9]{1-30}$'\n          description: 'This data element can be used in the body of the Consent Request Message for retrieving account access consent from this payment account.'\n          example: 'DE89370400440532013000'\n        bban:\n          type: string\n          format: bban\n          description: This data element can be used in the body of the Consent Request Message for retrieving account access consent from this account. This data elements is used for payment accounts which have no IBAN.\n        pan:\n          type: string\n          maxLength: 35\n          description: 'Primary Account Number (PAN) of a card, can be tokenized by the ASPSP due to PCI DSS requirements. This data element can be used in the body of the Consent Request Message for retrieving account access consent from this card.'\n        maskedPan:\n          type: string\n          maxLength: 35\n          description: 'Primary Account Number (PAN) of a card, can be tokenized by the ASPSP due to PCI DSS requirements. This data element can be used in the body of the Consent Request Message for retrieving account access consent from this card.'\n        msisdn:\n          type: string\n          maxLength: 35\n          description: An alias to access a payment account via a registered mobile phone number. This alias might be needed e.g. in the payment initiation service. The support of this alias must be explicitly documented by the ASPSP for the corresponding API Calls.\n        currency:\n          $ref: '#/components/schemas/Currency'\n    AccountAccess:\n      type: object\n      properties:\n        accounts:\n          type: array\n          items:\n            $ref: '#/components/schemas/AccountReference'\n          description: 'Is asking for detailed account information. If the array is empty, the TPP is asking for an accessible account list. This may be restricted in a PSU/ASPSP authorization dialogue.'\n        balances:\n          type: array\n          items:\n            $ref: '#/components/schemas/AccountReference'\n          description: 'Is asking for balances of the addressed accounts. If the array is empty, the TPP is asking for the balances of all accessible account lists. This may be restricted in a PSU/ASPSP authorization dialogue'\n        transactions:\n          type: array\n          items:\n            $ref: '#/components/schemas/AccountReference'\n          description: 'Is asking for transactions of the addressed accounts. If the array is empty, the TPP is asking for the transactions of all accessible account lists. This may be restricted in a PSU/ASPSP authorization dialogue'\n        availableAccounts:\n          type: string\n          enum:\n            - allAccounts\n            - allAccountsWithBalances\n          description: 'Optional if supported by API provide. Only the values \"allAccounts\" or \"allAccountsWithBalances\" is admitted.'\n        allPsd2:\n          type: string\n          enum:\n            - allAccounts\n          description: 'Optional if supported by API provide. Only the value \"allAccounts\" is admitted.'\n          example: 'allAccounts'\n    AccountDetails:\n      type: object\n      required:\n        - currency\n      properties:\n        resourceid:\n          type: string\n          maxLength: 35\n          description: This is the data element to be used in the path when retrieving data from a dedicated account.\n        iban:\n          type: string\n          format: iban\n          description: 'This data element can be used in the body of the Consent Request Message for retrieving account access consent from this payment account.'\n          example: 'DE89370400440532013000'\n        bban:\n          type: string\n          format: bban\n          description: This data element can be used in the body of the Consent Request Message for retrieving account access consent from this account. This data elements is used for payment accounts which have no IBAN.\n        pan:\n          type: string\n          maxLength: 35\n          description: 'Primary Account Number (PAN) of a card, can be tokenized by the ASPSP due to PCI DSS requirements. This data element can be used in the body of the Consent Request Message for retrieving account access consent from this card.'\n        maskedPan:\n          type: string\n          maxLength: 35\n          description: 'Primary Account Number (PAN) of a card, can be tokenized by the ASPSP due to PCI DSS requirements. This data element can be used in the body of the Consent Request Message for retrieving account access consent from this card.'\n        msisdn:\n          type: string\n          maxLength: 35\n          description: An alias to access a payment account via a registered mobile phone number. This alias might be needed e.g. in the payment initiation service. The support of this alias must be explicitly documented by the ASPSP for the corresponding API Calls.\n        currency:\n          $ref: '#/components/schemas/Currency'\n        name:\n          type: string\n          maxLength: 35\n          description: Name given by the bank or the PSU in OnlineBanking.\n        product:\n          type: string\n          maxLength: 35\n          description: Product Name of the Bank for this account, proprietary definition\n        cashAccountType:\n          type: string\n          description: ExternalCashAccountType1Code from ISO 20022\n        bic:\n          type: string\n          pattern: '([a-zA-Z]{4})([a-zA-Z]{2})(([2-9a-zA-Z]{1})([0-9a-np-zA-NP-Z]{1}))((([0-9a-wy-zA-WY-Z]{1})([0-9a-zA-Z]{2}))|([xX]{3})|)'\n          description: The BIC associated to the account.\n          format: bicfi\n        linkedAccounts:\n          type: string\n          maxLength: 70\n          description: Case of a set of pending card transactions, the APSP will provide the relevant cash account the card is set up on.\n        usage:\n          type: string\n          maxLength: 140\n          description: 'Specifies the usage of the account - PRIV: private personal account - ORGA: professional account'\n          example: 'PRIV'\n        details:\n          type: string\n          maxLength: 140\n          description: 'Specifications that might be provided by the ASPSP - characteristics of the account - characteristics of the relevant card'\n        balances:\n          type: array\n          items:\n            $ref: '#/components/schemas/Balance'\n        _links:\n          $ref: '#/components/schemas/Links'\n          description: 'Links to the account, which can be directly used for retrieving account information from this dedicated account. Links to \"balances\" and/or \"transactions\"'\n    AccountReport:\n      type: object\n      required:\n        - booked\n        - _links\n      properties:\n        booked:\n          type: array\n          items:\n            $ref: '#/components/schemas/Transaction'\n        pending:\n          type: array\n          items:\n            $ref: '#/components/schemas/Transaction'\n        _links:\n          $ref: '#/components/schemas/Links'\n          description: 'The following links might be used within this context, account link (mandatory), first_page_link (optional), second_page_link (optional), current_page_ link (optional), last_page_link (optional)'\n    Balance:\n      type: object\n      required:\n        - balanceAmount\n        - balanceType\n      properties:\n        balanceAmount:\n          $ref: '#/components/schemas/Amount'\n        balanceType:\n          type: string\n          enum:\n            - closingBooked\n            - expected\n            - authorised\n            - openingBooked\n            - interimAvailable\n            - forwardAvailable\n          example: 'interimAvailable'\n        lastChangeDateTime:\n          type: string\n          format: date-time\n        referenceDate:\n          type: string\n          format: date\n          example: '2017-10-30'\n        lastCommittedTransaction:\n          type: string\n          maxLength: 35\n    TransactionStatus:\n      type: string\n      enum:\n       - ACCP\n       - ACSC \n       - ACSP \n       - ACTC \n       - ACWC\n       - ACWP\n       - RCVD\n       - PDNG\n       - RJCT\n      example: 'ACTC'\n    Transaction:\n      type: object\n      required:\n        - transactionAmount\n      properties:\n        transactionId:\n          type: string\n          description: 'Can be used as access-id in the API, where more details on an transaction is offered.'\n        entryReference:\n          type: string\n          description: 'Is the identification of the transaction as used e.g. for reference for deltafunction on application level. The same identification as for example used within camt.05x messages'\n          maxLength: 35\n        endToEndId:\n          type: string\n          description: Unique end to end identity.\n          maxLength: 35\n        mandateId:\n          type: string\n          description: Identification of a Cheque.\n          maxLength: 35\n          example: 'Mandate-2018-04-20-1234'\n        creditorId:\n          type: string\n          description: Identification of Creditors, e.g. a SEPA Creditor ID\n          maxLength: 35\n        bookingDate:\n          type: string\n          format: date\n          description: The Date when an entry is posted to an account on the ASPSPs books.\n          example: '2017-10-30'\n        valueDate:\n          type: string\n          format: date\n          description: The Date at which assets become available to the account owner in case of a credit\n          example: '2017-10-30'\n        transactionAmount:\n          $ref: '#/components/schemas/Amount'\n        exchangeRates:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExchangeRate'\n        creditorName:\n          type: string\n          description: Identification of Creditors, e.g. a SEPA Creditor ID\n          maxLength: 70\n        creditorAccount:\n          $ref: '#/components/schemas/AccountReference'\n        ultimateCreditor:\n          type: string\n          maxLength: 70\n        debtorName:\n          type: string\n          description: Name of the debtor if a \"Credited\" transaction\n          maxLength: 70\n        debtorAccount:\n          $ref: '#/components/schemas/AccountReference'\n        ultimateDebtor:\n          type: string\n          maxLength: 70\n        remittanceInformationStructured:\n          type: string\n          maxLength: 140\n          description: Reference to be transported in the field.\n        puposeCode:\n          type: string\n        bankTransactionCode:\n          type: string\n          description: Bank transaction code as used by the ASPSP and using the sub elements of this structured code defined by ISO20022\n        proprietaryBankTransactionCode:\n          type: string\n          maxLength: 35\n          description: 'proprietary bank transaction code as used within a community or within an ASPSP e.g. for MT94x based transaction reports'\n          example: 'PMNT-RCVD-ESDD'\n        _links:\n          $ref: '#/components/schemas/Links'\n          description: 'The following links could be used here: transactionDetails for retrieving details of a transaction.'\n    Links:\n      type: object\n      properties:\n        scaRedirect:\n          $ref: '#/components/schemas/HrefType'\n          description: 'A link to an ASPSP site where SCA is performed within the Redirect SCA approach.'\n        scaOAuth:\n          $ref: '#/components/schemas/HrefType'\n          description: The link refers to a JSON document specifying the OAuth details of the ASPSP’s authorisation server. JSON document follows the definition given in https://tools.ietf.org/html/draft-ietf-oauth- discovery.\n        updatePsuIdentification:\n          $ref: '#/components/schemas/HrefType'\n          description: 'The link to the payment initiation or account information resource, which needs to be updated by the psu identification if not delivered yet.'\n        updateProprietaryData:\n          $ref: '#/components/schemas/HrefType'\n          description: The link to the payment initiation or account information resource, which needs to be updated by the proprietary data.\n        updatePsuAuthentication:\n          $ref: '#/components/schemas/HrefType'\n          description: 'The link to the payment initiation or account information resource, which needs to be updated by a psu password and eventually the psu identification if not delivered yet.'\n        selectAuthenticationMethod:\n          $ref: '#/components/schemas/HrefType'\n          description: 'This is a link to a resource, where the TPP can select the applicable second factor authentication methods for the PSU, if there were several available authentication methods.'\n        authoriseTransaction:\n          $ref: '#/components/schemas/HrefType'\n          description: 'The link to the payment initiation or consent resource, where the \"Transaction Authorization\"Request\" is sent to. This is the link to the resource which will authorize the payment or the consent by checking the SCA authentication data within the Embedded SCA approach.'\n        self:\n          $ref: '#/components/schemas/HrefType'\n          description: The link to the payment initiation resource created by the request itself. This link can be used later to retrieve the transaction status of the payment initiation.\n        status:\n          type: string\n          description: Status of the resource.\n        account:\n          $ref: '#/components/schemas/HrefType'\n          description: A link to the resource providing the details of one account\n        balances:\n          $ref: '#/components/schemas/HrefType'\n          description: A link to the resource providing the balance of a dedicated account.\n        transactions:\n          $ref: '#/components/schemas/HrefType'\n          description: A link to the resource providing the transaction history of a dediated amount.\n        transactionsDetails:\n          $ref: '#/components/schemas/HrefType'\n          description: A link to the resource providing details of a dedicated transaction.\n        first:\n          $ref: '#/components/schemas/HrefType'\n          description: Navigation link for paginated account reports.\n        next:\n          $ref: '#/components/schemas/HrefType'\n          description: Navigation link for paginated account reports.\n        previous:\n          $ref: '#/components/schemas/HrefType'\n          description: Navigation link for paginated account reports.\n        last:\n          $ref: '#/components/schemas/HrefType'\n          description: Navigation link for paginated account reports.\n        download:\n          $ref: '#/components/schemas/HrefType'\n          description: Download link for huge AIS data packages.\n    Authentication:\n      type: object\n      required:\n        - authenticationType\n        - authenticationMethodId\n      properties:\n        authenticationType:\n          type: string\n          enum:\n            - SMS_OTP\n            - CHIP_OTP\n            - PHOTO_OTP\n            - PUSH_OTP\n        authenticationVersion:\n          type: string\n          description: 'Depending on the \"authenticationType\". This version can be used by differentiating authentication tools used within performing OTP generation in the same authentication type. This version can be referred to in the ASPSP’s documentation.'\n        authenticationMethodId:\n          type: string\n          maxLength: 35\n          description: 'An identification provided by the ASPSP for the later identification of the authentication method selection.'\n        name:\n          type: string\n          description: 'This is the name of the authentication method defined by the PSU in the Online Banking frontend of the ASPSP. Alternatively this could be a description provided by the ASPSP like \"SMS OTP on phone +49160 xxxxx 28\". This name shall be used by the TPP when presenting a list of authentication methods to the PSU, if available.'\n        explanation:\n          type: string\n          description: 'detailed information about the sca method for the PSU.'\n    Challenge:\n      type: object\n      properties:\n        image:\n          type: string\n          description: 'PNG data (max. 512 kilobyte) to be displayed to the PSU, Base64 encoding. This attribute is used only, when PHOTO_OTP or CHIP_OTP is the selected SCA method.'\n        data:\n          type: string\n          description: 'String challenge data'\n        imageLink:\n          type: string\n          description: 'A link where the ASPSP will provides the challenge image for the TPP.'\n        otpMaxLength:\n          type: integer\n          description: 'The maximal length for the OTP to be typed in by the PSU.'\n        otpFormat:\n          type: string\n          description: 'The format type of the OTP to be typed in. The admitted values are \"characters\" or \"integer\".'\n          enum:\n            - characters\n            - integer\n        additionalInformation:\n          type: string\n          description: 'Additional explanation for the PSU to explain e.g. fallback mechanism for the chosen sca method'\n    MessageCode:\n      type: string\n      enum:\n        # ServiceUnspecificHTTPErrorCodes \n        - CERTIFICATE_INVALID\n        - CERTIFICATE_EXPIRED\n        - CERTIFICATE_BLOCKED\n        - CERTIFICATE_REVOKED\n        - CERTIFICATE_MISSING\n        - SIGNATURE_INVALID\n        - SIGNATURE_MISSING\n        - FORMAT_ERROR\n        - PARAMETER_NOT_SUPPORTED\n        - PSU_CREDENTIALS_INVALID\n        - SERVICE_INVALID\n        - SERVICE_BLOCKED\n        - CORPORATE_ID_INVALID\n        - CONSENT_UNKNOWN\n        - CONSENT_INVALID\n        - CONSENT_EXPIRED\n        - TOKEN_UNKNOWN\n        - TOKEN_INVALID\n        - TOKEN_EXPIRED\n        - RESOURCE_UNKNOWN\n        - RESOURCE_EXPIRED\n        - TIMESTAMP_INVALID\n        - PERIOD_INVALID\n        - SCA_METHOD_UNKNOWN\n        # PISSpecificHTTPErrorCodes\n        - PRODUCT_INVALID\n        - PRODUCT_UNKNOWN\n        - PAYMENT_FAILED\n        - REQUIRED_KID_MISSING\n        - EXECUTION_DATE_INVALID\n        # AISSpecificHTTPErrorCodes\n        - SESSIONS_NOT_SUPPORTED\n        - ACCESS_EXCEEDED\n        - REQUESTED_FORMATS_INVALID\n        # PIISSpecificErrorCodes\n        - CARD_INVALID\n        - NO_PIIS_ACTIVATION\n      example: TOKEN_INVALID\n    TppMessage:\n      type: object\n      required:\n        - category\n        - code\n        - text\n      properties:\n        category:\n          type: string\n          enum:\n            - WARNING\n            - ERROR\n          example: 'ERROR'\n        code:\n          $ref: '#/components/schemas/MessageCode'\n        text:\n          type: string\n          maxLength: 512\n          example: 'additional text information of the ASPSP up to 512 characters'\n        path:\n          type: string\n    recurringIndicator:\n      type: boolean\n      description: '\"true\" if the consent is for recurring access to the account data \"false\", if the consent is for one access to the account data'\n    CreateConsentsRequest:\n      type: object\n      required:\n        - access\n        - recurringIndicator\n        - validUntil\n        - frequencyPerDay\n        - combinedServiceIndicator\n      properties:\n        access:\n          $ref: '#/components/schemas/AccountAccess'\n        recurringIndicator:\n          $ref: '#/components/schemas/recurringIndicator'\n        validUntil:\n          type: string\n          format: date\n          description: 'This parameter is requesting a valid until date for the requested consent. The content is the local ASPSP date in ISODate Format, e.g. 2017-10-30. If a maximal available date is requested, a date in far future is to be used: \"9999-12-31\". The consent object to be retrieved by the GET Consent Request will contain the adjusted date.'\n          example: '2017-10-30'\n        frequencyPerDay:\n          type: integer\n          description: 'This field indicates the requested maximum frequency for an access per day. For a one-off access, this attribute is set to \"1\".'\n          example: 1\n        combinedServiceIndicator:\n          type: boolean\n          description: 'If \"true\" indicates that a payment initiation service will be addressed in the same \"session\", cp. Section 8.'\n    CreateConsentsResponse:\n      type: object\n      required:\n        - consentStatus\n        - _links\n      properties:\n        consentStatus:\n          $ref: '#/components/schemas/ConsentStatus'\n        consentId:\n          $ref: '#/components/schemas/consentId'\n        scaMethods:\n          type: array\n          items:\n            $ref: '#/components/schemas/Authentication'\n        chosenScaMethod:\n          $ref: '#/components/schemas/Authentication'\n        challengeData:\n          $ref: '#/components/schemas/Challenge'\n        _links:\n          $ref: '#/components/schemas/Links'\n        psuMessage:\n          $ref: '#/components/schemas/psuMessage'\n    SinglePaymentInitiationRequest:\n      type: object\n    BulkPaymentInitiationRequest:\n      type: object\n    PeriodicPaymentInitiationRequest:\n      type: object\n      required:\n        - startDate\n      properties:\n        startDate:\n          type: string\n          format: date\n          example: '2017-10-30'\n        executionRule:\n          type: string\n          enum: [following, preceeding]\n        endDate:\n          type: string\n          format: date\n          example: '2018-10-30'\n        frequency:\n          $ref: '#/components/schemas/frequency'\n        dayOfExecution:\n          type: integer\n          minimum: 1\n          maximum: 31\n    UpdatePSUDataAuthenticationRequest:\n      type: object\n      properties:\n        psuData:\n          $ref: '#/components/schemas/PSUData'\n    UpdatePSUDataAuthenticationResponse:\n      type: object\n      required:\n        - transactionStatus\n      properties:\n        chosenScaMethod:\n          $ref: '#/components/schemas/Authentication'\n        challengeData:\n          $ref: '#/components/schemas/Challenge'\n        scaMethods:\n          type: array\n          items:\n            $ref: '#/components/schemas/Authentication'\n        _links:\n          $ref: '#/components/schemas/Links'\n        transactionStatus:\n          $ref: '#/components/schemas/TransactionStatus'\n        consentStatus:\n          $ref: '#/components/schemas/ConsentStatus'\n        psuMessage:\n          $ref: '#/components/schemas/psuMessage'\n    UpdatePSUDataSelectAuthenticationRequest:\n      type: object\n      required:\n        - authenticationMethodId\n      properties:\n        authenticationMethodId:\n          type: string\n    UpdatePSUDataSelectAuthenticationResponse:\n      type: object\n      required:\n        - transactionStatus\n      properties:\n        chosenScaMethod:\n          $ref: '#/components/schemas/Authentication'\n        challengeData:\n          $ref: '#/components/schemas/Challenge'\n        _links:\n          $ref: '#/components/schemas/Links'\n        transactionStatus:\n          $ref: '#/components/schemas/TransactionStatus'\n        consentStatus:\n          $ref: '#/components/schemas/ConsentStatus'\n        psuMessage:\n          $ref: '#/components/schemas/psuMessage'\n    UpdatePSUDataIdentificationResponse:\n      type: object\n      required:\n        - transactionStatus\n      properties:\n        transactionStatus:\n          $ref: '#/components/schemas/TransactionStatus'\n        consentStatus:\n          $ref: '#/components/schemas/ConsentStatus'\n        psuMessage:\n          $ref: '#/components/schemas/psuMessage'\n    UpdatePSUDataTransactionAuthorisationRequest:\n      type: object\n      required:\n        - scaAuthenticationData\n      properties:\n        scaAuthenticationData:\n          $ref: '#/components/schemas/scaAuthenticationData'\n    UpdatePSUDataTransactionAuthorisationResponse:\n      type: object\n      required:\n        - transactionStatus\n      properties:\n        transactionStatus:\n          $ref: '#/components/schemas/TransactionStatus'\n        consentStatus:\n          $ref: '#/components/schemas/ConsentStatus'\n  # Reusable path, query, header and cookie parameters\n  parameters:\n    Content-Type:\n      name: Content-Type\n      in: header\n      description: 'Content-Type'\n      required: true\n      schema:\n        type: string\n        enum:\n          - application/json\n          - application/xml\n          - application/text\n      example: 'application/json'\n    account-id:\n      name: account-id\n      in: path\n      description: 'This identification is denoting the addressed account. The account-id is retrieved by using a \"Read Account List\" call. The account-id is the \"resourceId\" attribute of the account structure. Its value is constant at least throughout the lifecycle of a given consent.'\n      required: true\n      schema:\n        type: string\n    transaction-id:\n      name: transaction-id\n      in: path\n      description: Transaction ID\n      required: true\n      schema:\n        type: integer\n      example: 1234570\n    resourceId:\n      name: resourceId\n      in: path\n      description: This identification is given by the attribute resourceId of the corresponding entry of a transaction list.\n      required: true\n      schema:\n        type: string\n        maxLength: 35\n      example: '3dc3d5b3-7023-4848-9853-f5400a64e80f'\n    consentId:\n      name: consentId\n      in: path\n      description: ID of the corresponding consent object as returned by an Account Information Consent Request\n      required: true\n      schema:\n        type: string\n      example: 'qwer3456tzui7890'\n    payment-product:\n      name: payment-product\n      in: path\n      description: The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT). The ASPSP will publish which of the payment products/endpoints will be supported.\n      required: true\n      schema:\n        type: string\n        enum:\n          - sepa-credit-transfers\n          - instant-sepa-credit-transfers\n          - target-2-payments\n          - cross-border-credit-transfers\n      example: 'sepa-credit-transfers'\n    payment-service:\n      name: payment-service\n      in: path\n      description: 'The payment service to use.'\n      required: true\n      schema:\n        type: string\n        enum:\n          - payments\n          - bulk-payments\n          - periodic-payments\n      example: 'payments'\n    paymentId:\n      name: paymentId\n      in: path\n      description: payment Id\n      required: true\n      schema:\n       type: string\n      example: '1234-wertiq-983'\n    withBalance:\n      name: withBalance\n      in: query\n      description: 'If contained, this function reads the list of accessible payment accounts including the booking balance, if granted by the PSU in the related consent and available by the ASPSP. This parameter might be ignored by the ASPSP.'\n      required: false\n      schema:\n        type: boolean\n    X-Request-ID:\n      name: X-Request-ID\n      in: header\n      description: 'ID of the request, unique to the call, as determined by the initiating party.'\n      required: true\n      schema:\n        type: string\n        format: uuid\n      example: '123e4567-e89b-12d3-a456-426655440000'\n    Consent-ID:\n      name: Consent-ID\n      in: header\n      description: 'Shall be contained since \"Establish Consent Transaction\" was performed via this API before.'\n      required: true\n      schema:\n        type: string\n      example: 'qwer3456tzui7890'\n    Authorization:\n      name: Authorization\n      in: header\n      description: 'Is contained only, if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA was performed in the related consent authorisation.'\n      required: false\n      schema:\n        type: string\n      example: 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhbGxvd2VkX25vZGVzIjoiZmRhYWU1ODYtYWE1NS00MzJjLTQxODEtYjRiYzY2MDljNzQ2IiwiZXhwIjoxNTU4NTMyMTI0LCJvd25lciI6IjViMDQxYzljNDVmOTJlMGExNzdlOThjYyJ9.uif9dlFO8qEQGrLh9bThtT4H_sUeL43nfx0PL-RTgd5KL9WaO5TADLPIgBu02h2I39jRRb978ZYiv2xseAK8xpR13vz8cQUjIX0FpLnrKomfvl_nyzefVkcUH_DrNGkcPZswoVNFbfeUWER1c8I0fUudVsnxHExRJ_S-Lq1vWCSDChy89Vm_bliYdt8DppyELaBadFPqxeRRkn-szpr8sAvDgbb-OccT3LsiylkqJ5g4BWqj9qLpBO4xkzSTLjdKvgipRcNwv_dKOcwF3OI90TAaX1aEm856Zg1hBLrYnae1oceBfRYl7rjtDQo3S_R0j5pLhb7Kd-ErHec6nyaoOQ'\n    Digest:\n      name: Digest\n      in: header\n      description: 'Is contained if and only if the \"Signature\" element is contained in the header of the request.'\n      required: false\n      schema:\n        type: string\n      example: 'SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A='\n    Signature:\n      name: Signature\n      in: header\n      description: 'A signature of the request by the TPP on application level. This might be mandated by ASPSP.'\n      required: false\n      schema:\n        type: string\n      example: 'keyId=\"SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D- Trust%20GmbH,C=DE\",algorithm=\"rsa-sha256\",headers=\"Digest X-Request-ID PSU-ID TPP-Redirect-URI Date\",signature=\"Base64(RSA-SHA256(signing string))\"'\n    dateFrom:\n      name: dateFrom\n      in: query\n      description: 'Starting date (inclusive the date dateFrom) of the transaction list, mandated if no delta access is required'\n      example: '2017-10-30'\n      required: false\n      schema:\n        type: string\n        format: date\n    dateTo:\n      name: dateTo\n      in: query\n      description: 'End date (inclusive the data dateTo) of the transaction list, default is now if not given.'\n      required: false\n      example: '2017-10-30'\n      schema:\n        type: string\n        format: date\n    entryReferenceFrom:\n      name: entryReferenceFrom\n      in: query\n      description: 'This data attribute is indicating that the AISP is in favour to get all transactions after the transaction with identification entryReferenceFrom alternatively to the above defined period. This is a implementation of a delta access. If this data element is contained, the entries \"dateFrom\" and \"dateTo\" might be ignored by the ASPSP if a delta report is supported.'\n      required: false\n      schema:\n        type: string\n    bookingStatus:\n      name: bookingStatus\n      in: query\n      description: 'Permitted codes are \"booked\", \"pending\" and \"both \"booked\" shall be supported by the ASPSP. To support the \"pending\" and \"both\" feature is optional for the ASPSP, Error code if not supported in the online banking frontend'\n      required: true\n      schema:\n        type: string\n      example: 'booked'\n    PSU-ID:\n      name: PSU-ID\n      in: header\n      description: Might be mandated in the ASPSP's documentation, if OAuth is not chosen as Pre-Step.\n      required: false\n      schema:\n        type: string\n      example: 'PSU-1234'\n    PSU-ID-Type:\n      name: PSU-ID-Type\n      in: header\n      description: Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.\n      required: false\n      schema:\n        type: string\n    PSU-Corporate-ID:\n      name: PSU-Corporate-ID\n      in: header\n      description: Might be mandated in the ASPSP's documentation. Only used in a corporate context.\n      required: false\n      schema:\n        type: string\n    PSU-Corporate-ID-Type:\n      name: PSU-Corporate-ID-Type\n      in: header\n      description: Might be mandated in the ASPSPs documentation. Only used in a corporate context.\n      required: false\n      schema:\n        type: string\n    PSU-IP-Address:\n      name: PSU-IP-Address\n      in: header\n      description: The forwarded IP Address header field consists of the corresponding HTTP request IP Address field between PSU and TPP.\n      required: true\n      schema:\n        type: string\n      example: '172.25.77.8'\n    PSU-IP-Port:\n      name: PSU-IP-Port\n      in: header\n      description: The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP, if available.\n      required: false\n      schema:\n        type: string\n      example: '9988'\n    PSU-Accept:\n      name: PSU-Accept\n      in: header\n      description: The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n      required: false\n      schema:\n        type: string\n    PSU-Accept-Charset:\n      name: PSU-Accept-Charset\n      in: header\n      description: The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n      required: false\n      schema:\n        type: string\n    PSU-Accept-Encoding:\n      name: PSU-Accept-Encoding\n      in: header\n      description: The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n      required: false\n      schema:\n        type: string\n    PSU-Accept-Language:\n      name: PSU-Accept-Language\n      in: header\n      description: The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between PSU and TPP, if available.\n      required: false\n      schema:\n        type: string\n    PSU-User-Agent:\n      name: PSU-User-Agent\n      in: header\n      description: The forwarded Agent header field of the HTTP request between PSU and TPP, if available.\n      required: false\n      schema:\n        type: string\n    PSU-Http-Method:\n      name: PSU-Http-Method\n      in: header\n      description: HTTP method used at the PSU - TPP interface, if available.\n      required: false\n      schema:\n        type: string\n        enum: [GET, POST, PUT, DELETE, PATCH]\n    PSU-Device-ID:\n      name: PSU-Device-ID\n      in: header\n      description: UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available. UUID identifies either a device or a device dependant application installation. In case of an installation identification this ID need to be unaltered until removal from device.\n      required: false\n      schema:\n        type: string\n    PSU-Geo-Location:\n      name: PSU-Geo-Location\n      in: header\n      description: The forwarded Geo Location of the corresponding HTTP request between PSU and TPP if available.\n      required: false\n      schema:\n        type: string\n    deltaList:\n      name: deltaList\n      in: query\n      description: 'This data attribute is indicating that the AISP is in favour to get all transactions after the last report access for this PSU on the addressed account. This is another implementation of a delta access-report. This delta indicator might be rejected by the ASPSP if this function is not supported.'\n      required: false\n      schema:\n        type: boolean\n    TPP-Redirect-Preferred:\n      name: TPP-Redirect-Preferred\n      in: header\n      description: 'If it equals \"true\", the TPP prefers a redirect over an embedded SCA approach. If it equals \"false\", the TPP prefers not to be redirected for SCA. The ASPSP will then choose between the Embedded or the Decoupled SCA approach, depending on the choice of the SCA procedure by the TPP/PSU. If the parameter is not used, the ASPSP will choose the SCA approach to be applied depending on the SCA method chosen by the TPP/PSU.'\n      required: false\n      schema:\n        type: boolean\n    TPP-Redirect-URI:\n      name: TPP-Redirect-URI\n      in: header\n      description: 'URI of the TPP, where the transaction flow shall be redirected to after a Redirect. Mandatory for the SCA OAuth Approach.'\n      required: false\n      schema:\n        type: string\n    TPP-Nok-Redirect-URI:\n      name: TPP-Nok-Redirect-URI\n      in: header\n      description: 'If this URI is contained, the TPP is asking to redirect the transaction flow to this address instead of the TPP-Redirect-URI in case of a negative result of the redirect SCA method. This might be ignored by the ASPSP.'\n      required: false\n      schema:\n        type: string\n    TPP-Signature-Certificate:\n      name: TPP-Signature-Certificate\n      in: header\n      description: 'The certificate used for signing the request, in base64 encoding. It shall be contained if a signature is used, see above.'\n      required: false\n      schema:\n        type: string\n      example: 'VFBQJ3NfZUlEQVNfQ2VydGlmaWNhdGU='\n    Accept: \n      name: Accept\n      in: header\n      description: 'The TPP can indicate the formats of account reports supported together with a priorisation following the HTTP header definition.'\n      required: false\n      schema:\n        type: string\n        enum:\n          - xml\n          - JSON\n          - text\n      example: JSON\n  # Security scheme definition (see Authentication)\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: x-openpsd-key\n  # Reusable request bodies\n  # requestBodies:\n  # Reusable responses, such as 401 Unauthorized or 400 Bad Request\n  responses:\n    '400BadRequest':\n      description: Validation error occurred. This code will cover malformed syntax in request or incorrect data in payload.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TppMessage'\n    '401Unauthorized':\n      description: The TPP or the PSU is not correctly authorized to perform the request. Retry the request with correct authentication information.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TppMessage'\n    '403Forbidden':\n      description: Returned if the resource that was referenced in the path exists but cannot be accessed by the TPP or the PSU. This code should only be used for non-sensitive id references as it will reveal that the resource exists even though it cannot be accessed.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TppMessage'\n    '404NotFound':\n      description: Returned if the resource that was referenced in the path does not exist or cannot be referenced by the TPP or the PSU. When in doubt if a specific id in the path is sensitive or not, use the HTTP response code 404 instead of the HTTP response code 403.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TppMessage'\n    '405MethodNotAllowed':\n      description: This code is only sent when the HTTP method (PUT, POST, DELETE, GET etc.) is not supported on a specific endpoint. It has nothing to do with the consent, payment or account information data model.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TppMessage'\n    '406NotAcceptable':\n      description: The ASPSP cannot generate the content that the TPP specified in the Accept header.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TppMessage'\n    '408RequestTimeout':\n      description: The server is still working correctly, but an individual request has timed out.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TppMessage'\n    '415UnsupportedMedia':\n      description: The TPP has supplied a media type which the ASPSP does not support.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TppMessage'\n    '429TooManyRequests':\n      description: The TPP has exceeded the number of requests allowed by the consent or by the RTS.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TppMessage'\n    '500InternalServerError':\n      description: Internal server error occurred.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TppMessage'\n    '503ServiceUnavailable':\n      description: The ASPSP server is currently unavailable. Generally, this is a temporary state.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TppMessage'\n    default:\n      description: Unexpected Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TppMessage'\n  # Reusable response headers\n  headers:\n    Content-Type:\n      required: true\n      schema:\n        type: string\n        enum:\n          - application/json\n          - application/xml\n          - application/text\n        example: 'application/json'\n      description: 'Possible values are application/json, application/xml or application/text'\n    Location:\n      required: true\n      schema:\n        type: string\n      description: 'Location of the created resource.'\n      example: 'https://www.testbank.com/psd2/v1/payments/sepa-credit-transfers/1234-wertiq-983'\n    X-Request-ID:\n      required: true\n      schema:\n        type: string\n        format: UUID\n        example: '123e4567-e89b-12d3-a456-426655440000'\n      description: 'ID of the request, unique to the call, as determined by the initiating party.'\n    ASPSP-SCA-Approach:\n      required: false\n      schema:\n        type: string\n        enum:\n          - EMBEDDED\n          - DECOUPLED\n          - REDIRECT\n        example: 'DECOUPLED'\n      description: 'Possible values are: EMBEDDED / DECOUPLED / REDIRECT. OAuth will be subsumed by the value REDIRECT'\n  # Reusable examples\n  #examples:\n  # Reusable links\n  #links:\n  # Reusable callbacks\n  #callbacks:\npaths:\n  '/accounts':\n    get:\n      tags:\n        - accounts\n      summary: list of accounts\n      description: 'Reads a list of bank accounts, with balances where required. It is assumed that a consent of the PSU to this access is already given and stored on the ASPSP system. The addressed list of accounts depends then on the PSU ID and the stored consent addressed by consentId, respectively the OAuth2 access token.'\n      operationId: getAccounts\n      parameters:\n        - $ref: \"#/components/parameters/X-Request-ID\"\n        - $ref: \"#/components/parameters/withBalance\"\n        - $ref: \"#/components/parameters/Consent-ID\"\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Digest\"\n        - $ref: \"#/components/parameters/Signature\"\n        - $ref: \"#/components/parameters/TPP-Signature-Certificate\"\n      security:\n        - ApiKeyAuth: []\n      responses:\n        '200':\n          description: OK\n          headers:\n            X-Request-ID:\n              $ref: '#/components/headers/X-Request-ID'\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - accounts\n                properties:\n                  accounts:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/AccountDetails'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '405':\n          $ref: '#/components/responses/405MethodNotAllowed'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '429':\n          $ref: '#/components/responses/429TooManyRequests'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n  '/accounts/{account-id}':\n    get:\n      tags:\n        - accounts\n      summary: account details\n      description: 'Reads a list of bank accounts, with balances where required. It is assumed that a consent of the PSU to this access is already given and stored on the ASPSP system. The addressed list of accounts depends then on the PSU ID and the stored consent addressed by consentId, respectively the OAuth2 access token.'\n      operationId: getAccountbyId\n      parameters:\n        - $ref: \"#/components/parameters/account-id\"\n        - $ref: \"#/components/parameters/X-Request-ID\"\n        - $ref: \"#/components/parameters/withBalance\"\n        - $ref: \"#/components/parameters/Consent-ID\"\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Digest\"\n        - $ref: \"#/components/parameters/Signature\"\n        - $ref: \"#/components/parameters/TPP-Signature-Certificate\"\n      security:\n        - ApiKeyAuth: []\n      responses:\n        '200':\n          description: OK\n          headers:\n            X-Request-ID:\n              $ref: '#/components/headers/X-Request-ID'\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - account\n                properties:\n                  account:\n                    $ref: '#/components/schemas/AccountDetails'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '405':\n          $ref: '#/components/responses/405MethodNotAllowed'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '429':\n          $ref: '#/components/responses/429TooManyRequests'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n  '/accounts/{account-id}/balances':\n    get:\n      tags:\n        - accounts\n      summary: balances for account\n      description: Reads the balance list for a given account.\n      operationId: getBalanceForAccountByAccountId\n      parameters:\n        - $ref: \"#/components/parameters/account-id\"\n        - $ref: \"#/components/parameters/X-Request-ID\"\n        - $ref: \"#/components/parameters/Consent-ID\"\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Digest\"\n        - $ref: \"#/components/parameters/Signature\"\n        - $ref: \"#/components/parameters/TPP-Signature-Certificate\"\n      security:\n        - ApiKeyAuth: []\n      responses:\n        '200':\n          description: OK\n          headers:\n            X-Request-ID:\n              $ref: '#/components/headers/X-Request-ID'\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - balances\n                properties:\n                  account:\n                    $ref: '#/components/schemas/AccountReference'\n                  balances:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Balance'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '405':\n          $ref: '#/components/responses/405MethodNotAllowed'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '429':\n          $ref: '#/components/responses/429TooManyRequests'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n  '/accounts/{account-id}/transactions':\n    get:\n      tags:\n        - accounts\n      summary: transactions for account\n      description: 'Reads a transaction list For a given account, additional parameters are e.g. the attributes \"date_from\" and \"date_to\". If the attribute \"withbalance\" is used, the ASPSP will add balances to the transaction list. The latter might be provided by the ASPSP anyhow, if transaction lists without balances are not supported.'\n      operationId: getTransactionsForAccountByAccountId\n      parameters:\n        - $ref: \"#/components/parameters/X-Request-ID\"\n        - $ref: \"#/components/parameters/Consent-ID\"\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Digest\"\n        - $ref: \"#/components/parameters/Signature\"\n        - $ref: \"#/components/parameters/TPP-Signature-Certificate\"\n        - $ref: '#/components/parameters/account-id'\n        - $ref: '#/components/parameters/dateFrom'\n        - $ref: '#/components/parameters/dateTo'\n        - $ref: '#/components/parameters/entryReferenceFrom'\n        - $ref: '#/components/parameters/bookingStatus'\n        - $ref: '#/components/parameters/deltaList'\n        - $ref: '#/components/parameters/Accept'\n      security:\n        - ApiKeyAuth: []\n      responses:\n        '200':\n          description: OK\n          headers:\n            Content-Type:\n              $ref: '#/components/headers/Content-Type'\n            X-Request-ID:\n              $ref: '#/components/headers/X-Request-ID'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  account:\n                    $ref: '#/components/schemas/AccountReference'\n                  transactions:\n                    $ref: '#/components/schemas/AccountReport'\n                  _links:\n                    $ref: '#/components/schemas/Links'\n                  balances:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Balance'\n            application/xml:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '405':\n          $ref: '#/components/responses/405MethodNotAllowed'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '429':\n          $ref: '#/components/responses/429TooManyRequests'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n  '/accounts/{account-id}/transactions/{resourceId}':\n    get:\n      tags:\n        - accounts\n      summary: transaction details for transaction of an account\n      description: Reads transaction details of an addressed transaction.\n      operationId: getTransactionByTransactionIdForAccountByAccountId\n      parameters:\n        - $ref: \"#/components/parameters/X-Request-ID\"\n        - $ref: \"#/components/parameters/Consent-ID\"\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Digest\"\n        - $ref: \"#/components/parameters/Signature\"\n        - $ref: \"#/components/parameters/TPP-Signature-Certificate\"\n        - $ref: '#/components/parameters/resourceId'\n        - $ref: '#/components/parameters/account-id'\n      responses:\n        '200':\n          description: OK\n          headers:\n            Content-Type:\n              $ref: '#/components/headers/Content-Type'\n            X-Request-ID:\n              $ref: '#/components/headers/X-Request-ID'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  transactionsDetails:\n                    $ref: '#/components/schemas/Transaction'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '405':\n          $ref: '#/components/responses/405MethodNotAllowed'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '429':\n          $ref: '#/components/responses/429TooManyRequests'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n  '/consents':\n    post:\n      tags:\n        - consents\n      summary: create a consent\n      description: 'Creates a consent resource, defining access rights to dedicated accounts of a given PSU-ID. These accounts must be addressed explicitly in the method as parameters.'\n      operationId: createConsent\n      parameters:\n        - $ref: \"#/components/parameters/X-Request-ID\"\n        - $ref: \"#/components/parameters/PSU-ID\"\n        - $ref: \"#/components/parameters/PSU-ID-Type\"\n        - $ref: \"#/components/parameters/PSU-Corporate-ID\"\n        - $ref: \"#/components/parameters/PSU-Corporate-ID-Type\"\n        - $ref: \"#/components/parameters/PSU-IP-Address\"\n        - $ref: \"#/components/parameters/PSU-IP-Port\"\n        - $ref: \"#/components/parameters/PSU-Accept\"\n        - $ref: \"#/components/parameters/PSU-Accept-Charset\"\n        - $ref: \"#/components/parameters/PSU-Accept-Encoding\"\n        - $ref: \"#/components/parameters/PSU-Accept-Language\"\n        - $ref: \"#/components/parameters/PSU-User-Agent\"\n        - $ref: \"#/components/parameters/PSU-Http-Method\"\n        - $ref: \"#/components/parameters/PSU-Device-ID\"\n        - $ref: \"#/components/parameters/PSU-Geo-Location\"\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/TPP-Redirect-Preferred\"\n        - $ref: \"#/components/parameters/TPP-Redirect-URI\"\n        - $ref: \"#/components/parameters/TPP-Nok-Redirect-URI\"\n        - $ref: \"#/components/parameters/Digest\"\n        - $ref: \"#/components/parameters/Signature\"\n        - $ref: \"#/components/parameters/TPP-Signature-Certificate\"\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateConsentsRequest'\n      responses:\n        '201':\n          description: Consent Request was correctly performed.\n          headers:\n            Location:\n              $ref: '#/components/headers/Location'\n            X-Request-ID:\n              $ref: '#/components/headers/X-Request-ID'\n            ASPSP-SCA-Approach:\n              $ref: '#/components/headers/ASPSP-SCA-Approach'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateConsentsResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '405':\n          $ref: '#/components/responses/405MethodNotAllowed'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n  '/consents/{consentId}':\n    get:\n      tags:\n        - consents\n      summary: get consent details\n      operationId: getConsent\n      description: 'Reads the exact definition of the given consent resource {consentId}'\n      parameters:\n        - $ref: '#/components/parameters/consentId'\n        - $ref: \"#/components/parameters/X-Request-ID\"\n        - $ref: \"#/components/parameters/Digest\"\n        - $ref: \"#/components/parameters/Signature\"\n        - $ref: \"#/components/parameters/TPP-Signature-Certificate\"\n      security:\n        - ApiKeyAuth: []\n      responses:\n        '200':\n          description: OK\n          headers:\n            X-Request-ID:\n              $ref: '#/components/headers/X-Request-ID'\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - access\n                  - recurringIndicator\n                  - validUntil\n                  - frequencyPerDay\n                  - lastActionDate\n                  - consentStatus\n                properties:\n                  access:\n                    $ref: \"#/components/schemas/AccountAccess\"\n                  recurringIndicator:\n                    $ref: \"#/components/schemas/recurringIndicator\"\n                  validUntil:\n                    type: string\n                    format: date\n                  frequencyPerDay:\n                    type: integer\n                  lastActionDate:\n                    type: string\n                    format: date\n                  consentStatus:\n                    $ref: \"#/components/schemas/ConsentStatus\"\n                  scaStatus:\n                    $ref: \"#/components/schemas/scaStatus\"               \n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '405':\n          $ref: '#/components/responses/405MethodNotAllowed'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n    put:\n      tags:\n        - consents\n      summary: update consent\n      operationId: updateConsent\n      description: 'Updates data on the consent resource, authorises a consent within the Embedded SCA Approach where needed.'\n      parameters:\n        - $ref: \"#/components/parameters/consentId\"\n        - $ref: \"#/components/parameters/X-Request-ID\"\n        - $ref: \"#/components/parameters/PSU-ID\"\n        - $ref: \"#/components/parameters/PSU-ID-Type\"\n        - $ref: \"#/components/parameters/PSU-Corporate-ID\"\n        - $ref: \"#/components/parameters/PSU-Corporate-ID-Type\"\n        - $ref: \"#/components/parameters/PSU-IP-Address\"\n        - $ref: \"#/components/parameters/PSU-IP-Port\"\n        - $ref: \"#/components/parameters/PSU-Accept\"\n        - $ref: \"#/components/parameters/PSU-Accept-Charset\"\n        - $ref: \"#/components/parameters/PSU-Accept-Encoding\"\n        - $ref: \"#/components/parameters/PSU-Accept-Language\"\n        - $ref: \"#/components/parameters/PSU-User-Agent\"\n        - $ref: \"#/components/parameters/PSU-Http-Method\"\n        - $ref: \"#/components/parameters/PSU-Device-ID\"\n        - $ref: \"#/components/parameters/PSU-Geo-Location\"\n        - $ref: \"#/components/parameters/Digest\"\n        - $ref: \"#/components/parameters/Signature\"\n        - $ref: \"#/components/parameters/TPP-Signature-Certificate\"\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/UpdatePSUDataAuthenticationRequest'\n                - $ref: '#/components/schemas/UpdatePSUDataSelectAuthenticationRequest'\n                - $ref: '#/components/schemas/UpdatePSUDataTransactionAuthorisationRequest'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/UpdatePSUDataAuthenticationResponse'\n                  - $ref: '#/components/schemas/UpdatePSUDataSelectAuthenticationResponse'\n                  - $ref: '#/components/schemas/UpdatePSUDataIdentificationResponse'\n                  - $ref: '#/components/schemas/UpdatePSUDataTransactionAuthorisationResponse'\n          headers:\n            X-Request-ID:\n              $ref: '#/components/headers/X-Request-ID'\n            ASPSP-SCA-Approach:\n              $ref: '#/components/headers/ASPSP-SCA-Approach'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '405':\n          $ref: '#/components/responses/405MethodNotAllowed'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n    delete:\n      tags:\n        - consents\n      summary: delete consent\n      description: Deletes a created consent with ID.\n      operationId: deleteConsent\n      parameters:\n        - $ref: \"#/components/parameters/consentId\"\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/X-Request-ID\"\n      security:\n        - ApiKeyAuth: []\n      responses:\n        '204':\n          description: Consent resource was successfully deleted.\n          headers:\n            X-Request-ID:\n              $ref: '#/components/headers/X-Request-ID'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n  '/consents/{consentId}/status':\n    get:\n      tags:\n        - consents\n      summary: get status of a consent\n      operationId: getStatusForConsentById\n      description: Reads the transaction status of the addressed consent resource.\n      parameters:\n        - $ref: '#/components/parameters/consentId'\n        - $ref: \"#/components/parameters/X-Request-ID\"\n        - $ref: \"#/components/parameters/Digest\"\n        - $ref: \"#/components/parameters/Signature\"\n        - $ref: \"#/components/parameters/TPP-Signature-Certificate\"\n      security:\n        - ApiKeyAuth: []\n      responses:\n        '200':\n          description: 'Transaction status'\n          headers:\n            X-Request-ID:\n              $ref: '#/components/headers/X-Request-ID'\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - consentStatus\n                properties:\n                  consentStatus:\n                    $ref: '#/components/schemas/ConsentStatus'\n                  scaStatus:\n                    $ref: '#/components/schemas/scaStatus'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '405':\n          $ref: '#/components/responses/405MethodNotAllowed'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n  '/{payment-service}/{payment-product}':\n    post:\n      tags:\n        - payments\n      summary: creates a payment\n      description: 'Creates a payment initiation resource addressable under {paymentId} with all data relevant for the corresponding payment product. This is the first step in the API to initiate the related payment.'\n      operationId: createPayment\n      parameters:\n        - $ref: '#/components/parameters/payment-service'\n        - $ref: '#/components/parameters/payment-product'\n        - $ref: '#/components/parameters/Content-Type'\n        - $ref: \"#/components/parameters/X-Request-ID\"\n        - $ref: \"#/components/parameters/PSU-ID\"\n        - $ref: \"#/components/parameters/PSU-ID-Type\"\n        - $ref: \"#/components/parameters/PSU-Corporate-ID\"\n        - $ref: \"#/components/parameters/PSU-Corporate-ID-Type\"\n        - $ref: \"#/components/parameters/PSU-IP-Address\"\n        - $ref: \"#/components/parameters/PSU-IP-Port\"\n        - $ref: \"#/components/parameters/PSU-Accept\"\n        - $ref: \"#/components/parameters/PSU-Accept-Charset\"\n        - $ref: \"#/components/parameters/PSU-Accept-Encoding\"\n        - $ref: \"#/components/parameters/PSU-Accept-Language\"\n        - $ref: \"#/components/parameters/PSU-User-Agent\"\n        - $ref: \"#/components/parameters/PSU-Http-Method\"\n        - $ref: \"#/components/parameters/PSU-Device-ID\"\n        - $ref: \"#/components/parameters/PSU-Geo-Location\"\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Consent-ID\"\n        - $ref: \"#/components/parameters/TPP-Redirect-Preferred\"\n        - $ref: \"#/components/parameters/TPP-Redirect-URI\"\n        - $ref: \"#/components/parameters/TPP-Nok-Redirect-URI\"\n        - $ref: \"#/components/parameters/Digest\"\n        - $ref: \"#/components/parameters/Signature\"\n        - $ref: \"#/components/parameters/TPP-Signature-Certificate\"\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/SinglePaymentInitiationRequest'\n                - $ref: '#/components/schemas/BulkPaymentInitiationRequest'\n                - $ref: '#/components/schemas/PeriodicPaymentInitiationRequest'\n          application/xml:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/SinglePaymentInitiationRequest'\n                - $ref: '#/components/schemas/BulkPaymentInitiationRequest'\n                - $ref: '#/components/schemas/PeriodicPaymentInitiationRequest'\n      responses:\n        '201':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - transactionStatus\n                  - paymentId\n                  - _links\n                properties:\n                  transactionStatus:\n                    $ref: '#/components/schemas/TransactionStatus'\n                  paymentId:\n                    $ref: '#/components/schemas/paymentId'\n                  transactionFees:\n                    $ref: '#/components/schemas/Amount'\n                  transactionFeeIndicator:\n                    $ref: '#/components/schemas/transactionFeeIndicator'\n                  scaMethods:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Authentication'\n                  chosenScaMethod:\n                    $ref: '#/components/schemas/Authentication'\n                  challengeData:\n                    $ref: '#/components/schemas/Challenge'\n                  _links:\n                    $ref: '#/components/schemas/Links'\n                  psuMessage:\n                    $ref: '#/components/schemas/psuMessage'\n                  tppMessages:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/TppMessage'\n            application/xml:\n              schema:\n                type: object\n                required:\n                  - transactionStatus\n                  - paymentId\n                  - _links\n                properties:\n                  transactionStatus:\n                    $ref: '#/components/schemas/TransactionStatus'\n                  paymentId:\n                    $ref: '#/components/schemas/paymentId'\n                  transactionFees:\n                    $ref: '#/components/schemas/Amount'\n                  transactionFeeIndicator:\n                    type: boolean\n                    description: 'If equals \"true\", the transaction will involve specific transaction cost as shown by the ASPSP in their public price list or as agreed between ASPSP and PSU. If equals \"false\", the transaction will not involve additional specific transaction costs to the PSU.'\n                  scaMethods:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Authentication'\n                  chosenScaMethod:\n                    $ref: '#/components/schemas/Authentication'\n                  challengeData:\n                    $ref: '#/components/schemas/Challenge'\n                  _links:\n                    $ref: '#/components/schemas/Links'\n                  psuMessage:\n                    $ref: '#/components/schemas/psuMessage'\n                  tppMessages:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/TppMessage'\n          headers:\n            Location:\n              $ref: '#/components/headers/Location'\n            X-Request-ID:\n              $ref: '#/components/headers/X-Request-ID'\n            ASPSP-SCA-Approach:\n              $ref: '#/components/headers/ASPSP-SCA-Approach'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n  '/{payment-service}/{payment-product}/{paymentId}':\n    put:\n      tags:\n        - payments\n      summary: update payment \n      operationId: updatePayment\n      description: 'Updates data on the payment resource if needed. It may authorise a payment within the Embedded SCA Approach where needed.'\n      parameters:\n        - $ref: '#/components/parameters/payment-service'\n        - $ref: '#/components/parameters/payment-product'\n        - $ref: '#/components/parameters/paymentId'\n        - $ref: \"#/components/parameters/X-Request-ID\"\n        - $ref: \"#/components/parameters/PSU-ID\"\n        - $ref: \"#/components/parameters/PSU-ID-Type\"\n        - $ref: \"#/components/parameters/PSU-Corporate-ID\"\n        - $ref: \"#/components/parameters/PSU-Corporate-ID-Type\"\n        - $ref: \"#/components/parameters/PSU-IP-Address\"\n        - $ref: \"#/components/parameters/PSU-IP-Port\"\n        - $ref: \"#/components/parameters/PSU-Accept\"\n        - $ref: \"#/components/parameters/PSU-Accept-Charset\"\n        - $ref: \"#/components/parameters/PSU-Accept-Encoding\"\n        - $ref: \"#/components/parameters/PSU-Accept-Language\"\n        - $ref: \"#/components/parameters/PSU-User-Agent\"\n        - $ref: \"#/components/parameters/PSU-Http-Method\"\n        - $ref: \"#/components/parameters/PSU-Device-ID\"\n        - $ref: \"#/components/parameters/PSU-Geo-Location\"\n        - $ref: \"#/components/parameters/Digest\"\n        - $ref: \"#/components/parameters/Signature\"\n        - $ref: \"#/components/parameters/TPP-Signature-Certificate\"\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/UpdatePSUDataAuthenticationRequest'\n                - $ref: '#/components/schemas/UpdatePSUDataSelectAuthenticationRequest'\n                - $ref: '#/components/schemas/UpdatePSUDataTransactionAuthorisationRequest'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/UpdatePSUDataAuthenticationResponse'\n                  - $ref: '#/components/schemas/UpdatePSUDataSelectAuthenticationResponse'\n                  - $ref: '#/components/schemas/UpdatePSUDataIdentificationResponse'\n                  - $ref: '#/components/schemas/UpdatePSUDataTransactionAuthorisationResponse'\n          headers:\n            X-Request-ID:\n              $ref: '#/components/headers/X-Request-ID'\n            ASPSP-SCA-Approach:\n              $ref: '#/components/headers/ASPSP-SCA-Approach'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n    get:\n      tags:\n        - payments\n      summary: get payment details\n      operationId: getPayment\n      description: Reads the details of an initiated payment.\n      parameters:\n        - $ref: '#/components/parameters/payment-service'\n        - $ref: '#/components/parameters/payment-product'\n        - $ref: '#/components/parameters/paymentId'\n        - $ref: '#/components/parameters/Content-Type'\n        - $ref: \"#/components/parameters/X-Request-ID\"\n        - $ref: \"#/components/parameters/PSU-ID\"\n        - $ref: \"#/components/parameters/PSU-ID-Type\"\n        - $ref: \"#/components/parameters/PSU-Corporate-ID\"\n        - $ref: \"#/components/parameters/PSU-Corporate-ID-Type\"\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Consent-ID\"\n        - $ref: \"#/components/parameters/PSU-IP-Address\"\n        - $ref: \"#/components/parameters/TPP-Redirect-Preferred\"\n        - $ref: \"#/components/parameters/TPP-Redirect-URI\"\n        - $ref: \"#/components/parameters/TPP-Nok-Redirect-URI\"\n        - $ref: \"#/components/parameters/Digest\"\n        - $ref: \"#/components/parameters/Signature\"\n        - $ref: \"#/components/parameters/TPP-Signature-Certificate\"\n      security:\n        - ApiKeyAuth: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n            application/xml:\n              schema:\n                type: object\n          headers:\n            Location:\n              $ref: '#/components/headers/Location'\n            X-Request-ID:\n              $ref: '#/components/headers/X-Request-ID'\n            ASPSP-SCA-Approach:\n              $ref: '#/components/headers/ASPSP-SCA-Approach'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n  '/{payment-service}/{payment-product}/{paymentId}/status':\n    get:\n      tags:\n        - payments\n      summary: get the status of a payment\n      operationId: getPaymentStatus\n      description: Reads the transaction status of the payment\n      parameters:\n        - $ref: '#/components/parameters/payment-service'\n        - $ref: '#/components/parameters/payment-product'\n        - $ref: '#/components/parameters/paymentId'\n        - $ref: \"#/components/parameters/X-Request-ID\"\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Digest\"\n        - $ref: \"#/components/parameters/Signature\"\n        - $ref: \"#/components/parameters/TPP-Signature-Certificate\"\n      security:\n        - ApiKeyAuth: []\n      responses:\n        '200':\n          description: OK\n          headers:\n            X-Request-ID:\n              $ref: '#/components/headers/X-Request-ID'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  transactionStatus:\n                    $ref: '#/components/schemas/TransactionStatus'\n                  scaStatus:\n                    $ref: '#/components/schemas/scaStatus'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'\n  '/funds-confirmations':\n    post:\n      tags:\n        - funds\n      summary: check funds\n      operationId: createFundsConfirmationRequest\n      description: 'Checks whether funds are available for a payment transaction on an account linked with a given tuple cardissuer/cardnumber, or an IBAN and TPP respectively'\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - account\n                - instructedAmount\n              properties:\n                cardNumber:\n                  type: string\n                account:\n                  $ref: \"#/components/schemas/AccountReference\"\n                payee:\n                  type: string\n                  maxLength: 70\n                instructedAmount:\n                  $ref: \"#/components/schemas/Amount\"\n      parameters:\n        - $ref: \"#/components/parameters/X-Request-ID\"\n        - $ref: \"#/components/parameters/Digest\"\n        - $ref: \"#/components/parameters/Signature\"\n        - $ref: \"#/components/parameters/TPP-Signature-Certificate\"\n      responses:\n        '200':\n          description: OK\n          headers:\n            Location:\n              $ref: '#/components/headers/Location'\n            X-Request-ID:\n              $ref: '#/components/headers/X-Request-ID'\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - fundsAvaiable\n                properties:\n                  fundsAvaiable:\n                    type: boolean\n                    description: 'Equals \"true\" if sufficient funds are available at the time of the request, \"false\" otherwise.'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n        '405':\n          $ref: '#/components/responses/405MethodNotAllowed'\n        '500':\n          $ref: '#/components/responses/500InternalServerError'",
			"canonicalURL": "/github.com/OpenPSD/specs@a50d567d9afe3513626a98b84fee888c9d491fd3/-/blob/psd2.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/OpenPSD/specs/blob/a50d567d9afe3513626a98b84fee888c9d491fd3/psd2.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/{payment-service}/{payment-product}\": post: requestBody: contents: application/json: generate schema: oneOf: oneOf CreatePaymentReqApplicationJSON: variant BulkPaymentInitiationRequest: no unique fields, unable to parse without discriminator: discriminator inference not implemented",
	"NotImplemented": [
		"discriminator inference"
	]
}