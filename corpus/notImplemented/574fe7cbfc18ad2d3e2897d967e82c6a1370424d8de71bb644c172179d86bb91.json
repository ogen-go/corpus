{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/SDA-SE/sda-dropwizard-commons"
		},
		"file": {
			"name": "custom-openapi.yaml",
			"size": 0,
			"path": "sda-commons-server-openapi/src/test/resources/custom-openapi.yaml",
			"byteSize": 2716,
			"content": "openapi: 3.0.1\ninfo:\n  title: A manually written OpenAPI file\n  description: This is an example file that was written by hand\n  contact:\n    email: info@sda.se\n  version: '1.1'\npaths:\n  /house:\n    # this path will be added\n    put:\n      summary: Update a house\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/House'\n      responses:\n        \"201\":\n          description: The house has been updated\n    # this block will be replaced by the scanner output\n    get:\n      responses:\n        \"200\":\n          description: A successful response for the house\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/House'\n        \"500\":\n          description: An unexpected internal error\n  # this path will be added\n  /embed:\n    get:\n      responses:\n        \"200\":\n          description: A response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Embedded'\n  # this path will be added\n  /embedAllOf:\n    get:\n      responses:\n        \"200\":\n          description: A response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmbeddedAllOf'\n  # this path will be added\n  /embedAnyOf:\n    get:\n      responses:\n        \"200\":\n          description: A response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmbeddedAnyOf'\ncomponents:\n  schemas:\n    # this schema will be replaced by the scanner output\n    House:\n      description: A House description\n    # this schema will be added\n    Embedded:\n      description: An item that has embedded properties\n      properties:\n        _embedded:\n          properties:\n            one:\n              type: string\n            two:\n              type: string\n    # this schema will be added\n    EmbeddedAllOf:\n      description: An item that has embedded properties in multiple of allOf\n      allOf:\n        - properties:\n            _embedded:\n              properties:\n                three:\n                  type: string\n        - properties:\n            _embedded:\n              properties:\n                four:\n                  type: string\n    # this schema will be added\n    EmbeddedAnyOf:\n      description: An item that has embedded properties in multiple of anyOf\n      anyOf:\n        - properties:\n            _embedded:\n              properties:\n                three:\n                  type: string\n        - properties:\n            _embedded:\n              properties:\n                four:\n                  type: string\n",
			"canonicalURL": "/github.com/SDA-SE/sda-dropwizard-commons@e3db60750b22ca3b6be91256b4585e9d8138a323/-/blob/sda-commons-server-openapi/src/test/resources/custom-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/SDA-SE/sda-dropwizard-commons/blob/e3db60750b22ca3b6be91256b4585e9d8138a323/sda-commons-server-openapi/src/test/resources/custom-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/embedAnyOf\": get: responses: 200: contents: application/json: generate schema: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}