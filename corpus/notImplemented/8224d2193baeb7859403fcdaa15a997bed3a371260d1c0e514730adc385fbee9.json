{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sgutierr/3scaledemo"
		},
		"file": {
			"name": "stock-spec-v1.0.json",
			"size": 0,
			"path": "cicd/stock-spec-v1.0.json",
			"byteSize": 21906,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"title\": \"Stock\",\n        \"version\": \"4.0\",\n        \"description\": \" The STOCK API provides an interface for managing stocks. This API does not include security concerns associated with a user account. This is about personal data, which can be conceived as manageable by the user.\\n\",\n        \"contact\": {\n            \"name\": \"Red Hat\",\n            \"url\": \"http://redhat.com\",\n            \"email\": \"sgutierr@redhat.com\"\n        },\n        \"license\": {\n            \"name\": \"Mozilla 2.0\",\n            \"url\": \"https://www.mozilla.org/en-US/MPL/2.0/\"\n        }\n    },\n    \"paths\": {\n        \"/api/health\": {\n            \"get\": {\n                \"tags\": [\n                    \"health-controller\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"*/*\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ResponseEntity\"\n                                }\n                            }\n                        },\n                        \"description\": \"OK\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    }\n                },\n                \"operationId\": \"healthUsingGET\",\n                \"summary\": \"health\"\n            }\n        },\n        \"/api/stock\": {\n            \"get\": {\n                \"tags\": [\n                    \"stock-controller\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/StockValueControllerResponse\"\n                                    }\n                                },\n                                \"examples\": {\n                                    \"response\": {\n                                        \"value\": [\n                                            {\n                                                \"product_id\": \"some text\",\n                                                \"store_id\": 68,\n                                                \"units\": 73\n                                            },\n                                            {\n                                                \"product_id\": \"some text\",\n                                                \"store_id\": 90,\n                                                \"units\": 47\n                                            }\n                                        ]\n                                    },\n                                    \"example2\": {\n                                        \"value\": [\n                                            {\n                                                \"product_id\": \"some text\",\n                                                \"store_id\": 81,\n                                                \"units\": 50\n                                            },\n                                            {\n                                                \"product_id\": \"some text\",\n                                                \"store_id\": 90,\n                                                \"units\": 49\n                                            }\n                                        ]\n                                    }\n                                }\n                            }\n                        },\n                        \"description\": \"OK\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    }\n                },\n                \"operationId\": \"getStockUsingGET_2\",\n                \"summary\": \"getStock\"\n            },\n            \"post\": {\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Item added in the inventory\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Stock delete\"\n                    }\n                }\n            }\n        },\n        \"/api/stock/{storeid}\": {\n            \"get\": {\n                \"tags\": [\n                    \"stock-controller\"\n                ],\n                \"parameters\": [\n                    {\n                        \"examples\": {\n                            \"example1\": {\n                                \"value\": \"1\"\n                            }\n                        },\n                        \"name\": \"storeid\",\n                        \"description\": \"storeid\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/StockValueControllerResponse\"\n                                },\n                                \"examples\": {\n                                    \"example1\": {\n                                        \"value\": {\n                                            \"product_id\": \"some text demo \",\n                                            \"store_id\": 87,\n                                            \"units\": 80\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        \"description\": \"OK\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    }\n                },\n                \"operationId\": \"getStockUsingGET_1\",\n                \"summary\": \"getStock\"\n            },\n            \"delete\": {\n                \"parameters\": [\n                    {\n                        \"name\": \"storeid\",\n                        \"description\": \"Store ID\",\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Store deleted\"\n                    }\n                }\n            }\n        },\n        \"/api/stock/{storeid}/{productid}\": {\n            \"get\": {\n                \"tags\": [\n                    \"stock-controller\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"storeid\",\n                        \"description\": \"storeid\",\n                        \"schema\": {\n                            \"format\": \"int32\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"productid\",\n                        \"description\": \"productid\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/StockValueControllerResponse\"\n                                },\n                                \"examples\": {\n                                    \"example1\": {\n                                        \"value\": {\n                                            \"product_id\": \"some AVAYA\",\n                                            \"store_id\": 34,\n                                            \"units\": 81\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        \"description\": \"OK\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    }\n                },\n                \"operationId\": \"getStockUsingGET\",\n                \"summary\": \"getStock\"\n            }\n        },\n        \"/api/store\": {\n            \"get\": {\n                \"tags\": [\n                    \"stock-controller\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/StoreValueControllerResponse\"\n                                    }\n                                }\n                            }\n                        },\n                        \"description\": \"OK\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"403\": {\n                        \"description\": \"Forbidden\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    }\n                },\n                \"operationId\": \"getStoresUsingGET\",\n                \"summary\": \"getStores\"\n            }\n        },\n        \"/invoices\": {\n            \"summary\": \"Path used to manage the list of invoices.\",\n            \"description\": \"The REST endpoint/path used to list and create zero or more `invoice` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.\",\n            \"get\": {\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/invoice\"\n                                    }\n                                }\n                            }\n                        },\n                        \"description\": \"Successful response - returns an array of `invoice` entities.\"\n                    }\n                },\n                \"operationId\": \"getinvoices\",\n                \"summary\": \"List All invoices\",\n                \"description\": \"Gets a list of all `invoice` entities.\"\n            },\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"A new `invoice` to be created.\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/invoice\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Successful response.\"\n                    }\n                },\n                \"operationId\": \"createinvoice\",\n                \"summary\": \"Create a invoice\",\n                \"description\": \"Creates a new instance of a `invoice`.\"\n            }\n        },\n        \"/invoices/{invoiceId}\": {\n            \"summary\": \"Path used to manage a single invoice.\",\n            \"description\": \"The REST endpoint/path used to get, update, and delete single instances of an `invoice`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.\",\n            \"get\": {\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/invoice\"\n                                },\n                                \"examples\": {\n                                    \"invoiceexample\": {\n                                        \"value\": {\n                                            \"id\": \"some text\",\n                                            \"name\": \"some text\",\n                                            \"paymentPerYear\": 55,\n                                            \"paymentValue\": 8.45,\n                                            \"startsOnDay\": 95,\n                                            \"startsOnMonth\": 83,\n                                            \"startsOnYear\": 44\n                                        }\n                                    }\n                                }\n                            }\n                        },\n                        \"description\": \"Successful response - returns a single `invoice`.\"\n                    },\n                    \"401\": {\n                        \"description\": \"No authorized response\"\n                    }\n                },\n                \"operationId\": \"getinvoice\",\n                \"summary\": \"Get a invoice\",\n                \"description\": \"Gets the details of a single instance of a `invoice`.\"\n            },\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"Updated `invoice` information.\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/invoice\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"202\": {\n                        \"description\": \"Successful response.\"\n                    }\n                },\n                \"operationId\": \"updateinvoice\",\n                \"summary\": \"Update a invoice\",\n                \"description\": \"Updates an existing `invoice`.\"\n            },\n            \"delete\": {\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Successful response.\"\n                    }\n                },\n                \"operationId\": \"deleteinvoice\",\n                \"summary\": \"Delete a invoice\",\n                \"description\": \"Deletes an existing `invoice`.\"\n            },\n            \"parameters\": [\n                {\n                    \"name\": \"invoiceId\",\n                    \"description\": \"A unique identifier for a `invoice`.\",\n                    \"schema\": {\n                        \"type\": \"string\"\n                    },\n                    \"in\": \"path\",\n                    \"required\": true\n                }\n            ]\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"ResponseEntity\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"body\": {\n                        \"type\": \"object\"\n                    },\n                    \"statusCode\": {\n                        \"enum\": [\n                            \"100\",\n                            \"101\",\n                            \"102\",\n                            \"103\",\n                            \"200\",\n                            \"201\",\n                            \"202\",\n                            \"203\",\n                            \"204\",\n                            \"205\",\n                            \"206\",\n                            \"207\",\n                            \"208\",\n                            \"226\",\n                            \"300\",\n                            \"301\",\n                            \"302\",\n                            \"303\",\n                            \"304\",\n                            \"305\",\n                            \"307\",\n                            \"308\",\n                            \"400\",\n                            \"401\",\n                            \"402\",\n                            \"403\",\n                            \"404\",\n                            \"405\",\n                            \"406\",\n                            \"407\",\n                            \"408\",\n                            \"409\",\n                            \"410\",\n                            \"411\",\n                            \"412\",\n                            \"413\",\n                            \"414\",\n                            \"415\",\n                            \"416\",\n                            \"417\",\n                            \"418\",\n                            \"419\",\n                            \"420\",\n                            \"421\",\n                            \"422\",\n                            \"423\",\n                            \"424\",\n                            \"426\",\n                            \"428\",\n                            \"429\",\n                            \"431\",\n                            \"451\",\n                            \"500\",\n                            \"501\",\n                            \"502\",\n                            \"503\",\n                            \"504\",\n                            \"505\",\n                            \"506\",\n                            \"507\",\n                            \"508\",\n                            \"509\",\n                            \"510\",\n                            \"511\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"statusCodeValue\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    }\n                }\n            },\n            \"StockValueControllerResponse\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"product_id\": {\n                        \"type\": \"string\"\n                    },\n                    \"store_id\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"units\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    }\n                }\n            },\n            \"StoreValueControllerResponse\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"store_id\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"store_name\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"invoice\": {\n                \"title\": \"Root Type for invoice\",\n                \"description\": \"Invoice entity\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"paymentPerYear\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"paymentValue\": {\n                        \"format\": \"double\",\n                        \"type\": \"number\"\n                    },\n                    \"startsOnDay\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"startsOnMonth\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"startsOnYear\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"example\": {\n                    \"id\": \"\",\n                    \"name\": \"some text\",\n                    \"paymentPerYear\": 39,\n                    \"paymentValue\": 90.87,\n                    \"startsOnDay\": 21,\n                    \"startsOnMonth\": 24,\n                    \"startsOnYear\": 55\n                }\n            }\n        },\n        \"securitySchemes\": {\n            \"apikey\": {\n                \"type\": \"apiKey\",\n                \"description\": \"3scale API-Key\",\n                \"name\": \"api-key\",\n                \"in\": \"header\"\n            }\n        }\n    },\n    \"security\": [\n        {\n            \"apikey\": [\n            ]\n        }\n    ],\n    \"tags\": [\n        {\n            \"name\": \"stock-controller\",\n            \"description\": \"Stock Controller\"\n        },\n        {\n            \"name\": \"health-controller\",\n            \"description\": \"Health Controller\"\n        }\n    ]\n}",
			"canonicalURL": "/github.com/sgutierr/3scaledemo@f47931d9b3771bf71e761d97fea6a7859bc3e853/-/blob/cicd/stock-spec-v1.0.json",
			"externalURLs": [
				{
					"url": "https://github.com/sgutierr/3scaledemo/blob/f47931d9b3771bf71e761d97fea6a7859bc3e853/cicd/stock-spec-v1.0.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/health\": get: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}