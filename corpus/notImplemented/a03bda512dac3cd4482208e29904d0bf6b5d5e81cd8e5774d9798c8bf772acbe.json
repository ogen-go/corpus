{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/TOMP-WG/CDS-M"
		},
		"file": {
			"name": "tomp-cds.yaml",
			"size": 0,
			"path": "tomp-cds.yaml",
			"byteSize": 15652,
			"content": "openapi: 3.0.0\ninfo:\n  title: City Data Specification\n  description: This document describes as well the city part of the API as the Transport Operator (or MaaS Provider) part.\n  version: \"0.1\"\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n\npaths:\n  /meta-data/:\n    parameters:\n      - $ref: '#/components/parameters/apiVersion'\n    get:\n      description: This is the meta data used that must be used to construct the data that has to be delivered at the other endpoint. The TOs can get this information before constructing the information they have to supply.\n      tags:\n        - City\n      responses:\n        '200':\n          description: The bookings matching the query\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/meta-data'\n\n  /trip-data/:\n    parameters:\n      - $ref: '#/components/parameters/apiVersion'\n    post:\n      description: The TO/MP should deliver data on a frequent base. This endpoint must be used.\n      tags:\n        - Transport Operator / MaaS Provider\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/data'\n      responses:\n        '200':\n          description: The bookings matching the query\n\ncomponents:\n  schemas: \n    meta-data:\n      type: array\n      items:\n        oneOf:\n          - $ref: '#/components/schemas/feature'\n          - $ref: '#/components/schemas/dimensionDescription'\n          - $ref: '#/components/schemas/valuesDescription'\n\n    data:\n      properties:\n        type: \n          $ref: '#/components/schemas/featureCollection'\n\n    featureCollection:\n      type: object\n      description: GeoJSon feature collection. There should be one description feature, one feature with geometry per area to report, one dimensionfeature per dimension (so at least 8 city, origin, destination, mode, year, month, day, hour, day_of_week, week)\n      required:\n       - type\n       - features\n      externalDocs:\n        url: https://tools.ietf.org/html/rfc7946#section-3.3\n      properties:\n        type:\n          type: string\n          enum:\n          - FeatureCollection\n        features:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/description'\n              - $ref: '#/components/schemas/feature'\n              - $ref: '#/components/schemas/dimensionDescription'\n              - $ref: '#/components/schemas/originDestinationData'\n\n    feature:\n      type: object\n      description: GeoJSon feature\n      required:\n       - type\n       - id\n       - geometry\n      externalDocs:\n        url: https://tools.ietf.org/html/rfc7946#section-3.2\n      properties:\n        type:\n          type: string\n          enum:\n            - Feature\n        id:\n          type: integer\n        geometry:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/point'\n              - $ref: '#/components/schemas/lineString'\n              - $ref: '#/components/schemas/polygon'\n              - $ref: '#/components/schemas/multiPoint'\n              - $ref: '#/components/schemas/multiPolygon'\n              - $ref: '#/components/schemas/multilineString'\n        properties:\n          type: object\n    \n    description:\n      type: object\n      description: the discriptor entry for this dataset. Type should be 'Dataset'\n      properties:\n        type:\n          type: string\n          enum:\n            - Feature\n        geometry:\n          description: should be null\n          example: null\n        properties:\n          type: object\n          properties:\n            type:\n              type: string\n              enum: [Dataset]\n            name:\n              description: name for this dataset\n              type: string\n            description:\n              description: short description of the dataset\n              type: string\n\n    dimensionDescription:\n      type: object\n      description: the discriptor entry for this dataset. Type should be 'Dimension'.\n      discriminator:\n        propertyName: type\n      properties:\n        type:\n          type: string\n          enum:\n            - Feature\n        geometry:\n          description: should be null\n          example: null\n        properties:\n          type: object\n          properties:\n            type:\n              type: string\n              enum: [Dimension]\n            name:\n              $ref: '#/components/schemas/dimensionClasses'\n            description:\n              description: short description of the dimension\n              type: string\n            dimensionElements: \n              type: array\n              items:\n                anyOf:\n                  - $ref: '#/components/schemas/cityDimension'\n                  - $ref: '#/components/schemas/odDimension'\n                  - $ref: '#/components/schemas/modeDimension'\n                  - $ref: '#/components/schemas/yearDimension'\n                  - $ref: '#/components/schemas/monthDimension'\n                  - $ref: '#/components/schemas/dayDimension'\n                  - $ref: '#/components/schemas/hourDimension'\n                  - $ref: '#/components/schemas/dayOfWeekDimension'\n                  - $ref: '#/components/schemas/weekDimension'\n\n    valuesDescription:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - Feature\n        geometry:\n          description: should be null\n          example: null\n        properties:\n          $ref: '#/components/schemas/allValues'\n\n    allValues:\n      type: object\n      properties:\n        measumements:      \n          type: array\n          items:\n            type: string\n            enum: [total_movements,unique_users,total_km,total_duration_minutes,total_co2,total_pm10,total_nox,total_number_of_stops,total_non_moving_assets,total_parking_time,total_charging_minutes,total_out_of_geofence]\n          example:\n            - total_movements\n            - unique_users\n            - total_km\n            - total_duration_minutes\n            - total_co2\n            - total_pm10\n            - total_nox\n            - total_number_of_stops\n            - total_non_moving_assets\n            - total_parking_time\n            - total_charging_minutes\n            - total_out_of_geofence      \n\n    dimensionClasses:\n      type: string\n      description: all available dimensions. The dimensions should be in every originDestinationData. To report data from a specific area (e.g. number of parked assets), you should provide -1 in the destination field.\n      enum: \n        - city\n        - origin\n        - destination\n        - mode\n        - year\n        - month\n        - day\n        - week\n        - day_of_week\n        - hour\n        \n    cityDimension:\n      type: string\n      description: The available cities [\"Amsterdam\", \"Antwerp\"]\n      enum: \n        - Amsterdam\n\n    odDimension:\n      type: number\n      description: the available id's of the area's in the real features\n      example: 1\n\n    yearDimension:\n      type: number\n      description: The allowed years\n      minimum: 2020\n      maximum: 2999\n      example: 2020\n\n    modeDimension:\n      type: string\n      description: The allowed modalities. to be completed.\n      enum: \n        - bike\n        - scooter\n        - shared-car\n\n    monthDimension:\n      type: number\n      description: the month index, starting with January = 1\n      minimum: 1\n      maximum: 12\n      example: 3\n\n    dayDimension:\n      type: number\n      description: the day index in the month.\n      minimum: 1\n      maximum: 31\n      example: 9\n\n    dayOfWeekDimension:\n      type: number\n      description: the day of week index. Sunday = 0, Monday = 1 etc\n      minimum: 0\n      maximum: 6\n      example: 1\n\n    weekDimension:\n      type: number\n      description: the week in the year index (https://en.wikipedia.org/wiki/ISO_week_date). \n      minimum: 1\n      maximum: 53\n      example: 11\n\n    hourDimension:\n      type: number\n      description: the hour of the measurements. All measurements should be grouped by starting hour.\n      minimum: 0\n      maximum: 23\n      example: 8\n      \n    originDestinationData:\n      type: object\n      description: these objects contain all the information. Besides the dimensions described above, all measured data will be in these objects. Can be extended with custom measurements. The dimensions should be in the dimensions described above.\n      additionalProperties: true\n      properties:\n        type:\n          type: string\n          enum:\n            - Feature\n        geometry:\n          description: should be null\n          example: null\n        properties:\n          type: object\n          properties:\n            type:\n              type: string\n              enum: [TabularDatasetRow] \n            city:\n              type: string\n            origin:\n              type: number\n            destination:\n              type: number\n            mode:\n              type: string\n            year:\n              type: number\n            month:\n              type: number\n            day:\n              type: number\n            hour:\n              type: number\n            day_of_week:\n              type: number\n            week:\n              type: number\n            total_movements:\n              type: number\n              description: total amount of movements from origin to destination\n            unique_users:\n              type: number\n              description: unique amount of travellers booking an asset\n            total_km:\n              type: number\n              description: total amount of km of the trips started in this our\n            total_duration_minutes:\n              type: number \n              description: total amount of minutes of the trips started in this our\n            total_co2:\n              type: number\n              description: total amount of exhausted CO2 of the trips started in this our\n            total_pm10:\n              type: number\n              description: total amount of created PM10 of the trips started in this our\n            total_nox:\n              type: number\n              description: total amount of exhausted NOx of the trips started in this our\n            total_number_of_stops:\n              type: number\n              description: total amount of stops longer than 1 minute, starting in the specified hour\n            total_out_of_geofence:\n              type: number\n              description: total amount of assets that have been outside the geofence during the trip\n            total_non_moving_assets_0:\n              type: number\n              description: total amount of assets that are not used in this hour. This property is only applicable for areas. Therefore the destination property should be -1.\n            total_non_moving_assets_15:\n              type: number\n              description: total amount of assets that are not used for over 15 minutes in this hour. This property is only applicable for areas. Therefore the destination property should be -1.\n            total_non_moving_assets_30:\n              type: number\n              description: total amount of assets that are not used for over 30 minutes in this hour. This property is only applicable for areas. Therefore the destination property should be -1.\n            total_non_moving_assets_45:\n              type: number\n              description: total amount of assets that are not used for over 45 minutes in this hour. This property is only applicable for areas. Therefore the destination property should be -1.\n            total_parking_time:\n              type: number\n              description: total amount of minutes that assets are not used (included pauzed). This property is only applicable for areas. Therefore the destination property should be -1.\n            total_not_used_time:\n              type: number\n              description: total amount of minutes that assets are not used (excluded pauzed). This property is only applicable for areas. Therefore the destination property should be -1.\n            total_charging_minutes:\n              type: number\n              description: total duration in minutes that assets are being charged. This property is only applicable for areas. Therefore the destination property should be -1.\n\n    geometry:\n      type: object\n      description: GeoJSon geometry\n      required:\n        - type\n      discriminator:\n        propertyName: type\n      externalDocs:\n        url: http://geojson.org/geojson-spec.html#geometry-objects\n      properties:\n        type:\n          type: string\n          description: the geometry type\n  \n    point:\n      type: object\n      description: GeoJSon geometry, WGS84\n      externalDocs:\n        url: http://geojson.org/geojson-spec.html#id2\n      allOf:\n        - $ref: \"#/components/schemas/geometry\"\n      properties:\n        type:\n          type: string\n          enum:\n          - Point\n        coordinates:\n          type: array\n          minItems: 2\n          maxItems: 2\n          example: [4.320554696391217,51.99267196727367]\n          items:\n            type: number\n  \n    lineString:\n      type: object\n      description: GeoJSon geometry\n      externalDocs:\n        url: http://geojson.org/geojson-spec.html#id3\n      allOf:\n        - $ref: \"#/components/schemas/geometry\"\n      properties:\n        type:\n          type: string\n          enum:\n          - LineString\n        coordinates:\n          type: array\n          minItems: 2\n          items:\n            $ref: '#/components/schemas/point'\n  \n    polygon:\n      type: object\n      description: GeoJSon geometry\n      externalDocs:\n        url: http://geojson.org/geojson-spec.html#id4\n      allOf:\n        - $ref: \"#/components/schemas/geometry\"\n      properties:\n        type:\n          type: string\n          enum:\n          - Polygon\n        coordinates:\n          type: array\n          items:\n            type: array\n            items:\n              $ref: '#/components/schemas/point'\n  \n    multiPoint:\n      type: object\n      description: GeoJSon geometry\n      externalDocs:\n        url: http://geojson.org/geojson-spec.html#id5\n      allOf:\n        - $ref: \"#/components/schemas/geometry\"\n      properties:\n        type:\n          type: string\n          enum:\n          - MultiPoint\n        coordinates:\n          type: array\n          items:\n            $ref: '#/components/schemas/point'\n  \n    multilineString:\n      type: object\n      description: GeoJSon geometry\n      externalDocs:\n        url: http://geojson.org/geojson-spec.html#id6\n      allOf:\n        - $ref: \"#/components/schemas/geometry\"\n      properties:\n        type:\n          type: string\n          enum:\n          - MultilineString\n        coordinates:\n          type: array\n          items:\n            type: array\n            items:\n              $ref: '#/components/schemas/point'\n  \n    multiPolygon:\n      type: object\n      description: GeoJSon geometry\n      externalDocs:\n        url: http://geojson.org/geojson-spec.html#id6\n      allOf:\n        - $ref: \"#/components/schemas/geometry\"\n      properties:\n        type:\n          type: string\n          enum:\n          - Multipolygon\n        coordinates:\n          type: array\n          items:\n            type: array\n            items:\n              type: array\n              items:\n                $ref: '#/components/schemas/point'\n  \n  parameters:\n    apiVersion:\n      in: header\n      name: Api-Version\n      required: true\n      schema:\n        type: string\n      description: Version of the API.\n      example: 0.1\n",
			"canonicalURL": "/github.com/TOMP-WG/CDS-M@ce48d5818cf8683f77ad7eb5750e196efb5b1564/-/blob/tomp-cds.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/TOMP-WG/CDS-M/blob/ce48d5818cf8683f77ad7eb5750e196efb5b1564/tomp-cds.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/meta-data/\": get: responses: 200: contents: application/json: generate schema: item: oneOf: collect variants: oneOf[0]: field geometry: item: oneOf: collect variants: FeatureGeometryItem: sum types with same names not implemented",
	"NotImplemented": [
		"sum types with same names"
	]
}