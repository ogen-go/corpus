{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/joolfe/postman-to-openapi"
		},
		"file": {
			"name": "ResponsesMultiLang.yml",
			"size": 0,
			"path": "test/resources/output/ResponsesMultiLang.yml",
			"byteSize": 5042,
			"content": "openapi: 3.0.0\ninfo:\n  title: Responses\n  description: Postman collection with saved responses\n  version: 1.2.0\nservers:\n  - url: https://60bb37ab42e1d000176206c3.mockapi.io\npaths:\n  /users:\n    post:\n      tags:\n        - default\n      summary: Create new User\n      description: Create a new user into your amazing API\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              example:\n                id: '100'\n                createdAt: '2021-06-04T15:50:38.568Z'\n                name: Carol\n                avatar: https://cdn.fakercloud.com/avatars/nelsonjoyce_128.jpg\n      responses:\n        '201':\n          description: Created\n          headers:\n            Server:\n              schema:\n                type: string\n                example: Cowboy\n            Connection:\n              schema:\n                type: string\n                example: keep-alive\n            X-Powered-By:\n              schema:\n                type: string\n                example: Express\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n                example: '*'\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n                example: GET,PUT,POST,DELETE,OPTIONS\n            Access-Control-Allow-Headers:\n              schema:\n                type: string\n                example: X-Requested-With,Content-Type,Cache-Control,access_token\n            Content-Type:\n              schema:\n                type: string\n                example: application/json\n            Content-Length:\n              schema:\n                type: integer\n                example: '131'\n            Vary:\n              schema:\n                type: string\n                example: Accept-Encoding\n            Date:\n              schema:\n                type: string\n                example: Sat, 05 Jun 2021 08:42:32 GMT\n            Via:\n              schema:\n                type: number\n                example: 1.1 vegur\n          content:\n            application/json:\n              schema:\n                type: object\n              example:\n                id: '51'\n                createdAt: '2021-06-04T15:50:38.568Z'\n                name: Carol\n                avatar: https://cdn.fakercloud.com/avatars/nelsonjoyce_128.jpg\n            text/plain:\n              schema:\n                type: string\n              example: '\"Success\"'\n  /users/{user_id}:\n    get:\n      tags:\n        - default\n      summary: Get User data\n      description: Retrieve the user data\n      parameters:\n        - name: user_id\n          in: path\n          schema:\n            type: number\n          required: true\n          description: This is just a user identifier\n          example: '54'\n      responses:\n        '200':\n          description: OK\n          headers:\n            Server:\n              schema:\n                type: string\n                example: Cowboy\n            Connection:\n              schema:\n                type: string\n                example: keep-alive\n            X-Powered-By:\n              schema:\n                type: string\n                example: Express\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n                example: '*'\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n                example: GET,PUT,POST,DELETE,OPTIONS\n            Access-Control-Allow-Headers:\n              schema:\n                type: string\n                example: X-Requested-With,Content-Type,Cache-Control,access_token\n            Content-Type:\n              schema:\n                type: string\n                example: application/json\n            Content-Length:\n              schema:\n                type: integer\n                example: '127'\n            Etag:\n              schema:\n                type: string\n                example: '\"1711725458\"'\n            Vary:\n              schema:\n                type: string\n                example: Accept-Encoding\n            Date:\n              schema:\n                type: string\n                example: Sat, 05 Jun 2021 08:48:00 GMT\n            Via:\n              schema:\n                type: number\n                example: 1.1 vegur\n          content:\n            application/json:\n              schema:\n                type: object\n              example:\n                id: '50'\n                createdAt: '2021-06-04T23:41:02.287Z'\n                name: Leanne\n                avatar: https://cdn.fakercloud.com/avatars/bartjo_128.jpg\n        '404':\n          description: Not Found\n          content:\n            text/plain:\n              schema:\n                type: string\n              examples:\n                example-0:\n                  summary: Get User data NOT FOUND\n                  value: '\"Not found\"'\n                example-1:\n                  summary: Get User data NOT FOUND\n                  value: '\"User not exist\"'\n",
			"canonicalURL": "/github.com/joolfe/postman-to-openapi@73718f5d77979d163176fac05796dbfa5755dc4e/-/blob/test/resources/output/ResponsesMultiLang.yml",
			"externalURLs": [
				{
					"url": "https://github.com/joolfe/postman-to-openapi/blob/73718f5d77979d163176fac05796dbfa5755dc4e/test/resources/output/ResponsesMultiLang.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/users/{user_id}\": get: responses: 404: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}