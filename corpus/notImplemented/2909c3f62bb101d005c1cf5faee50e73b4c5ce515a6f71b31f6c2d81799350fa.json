{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/glademiller/openapiv3"
		},
		"file": {
			"name": "quayio.json",
			"size": 0,
			"path": "fixtures/quayio.json",
			"byteSize": 241354,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n       \"termsOfService\": \"https://quay.io/tos\",\n       \"version\": \"v1\",\n       \"contact\": {\n          \"email\": \"support@quay.io\"\n       },\n       \"description\": \"This API allows you to perform many of the operations required to work with Quay repositories, users, and organizations. You can find out more at Quay.\",\n       \"title\": \"Quay Frontend\"\n    },\n    \"paths\": {\n       \"/api/v1/organization/{orgname}/invoices\": {\n          \"x-name\": \"endpoints.api.billing.OrganizationInvoiceList\",\n          \"parameters\": [\n             {\n                \"description\": \"The name of the organization\",\n                \"required\": true,\n                \"name\": \"orgname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"billing\",\n          \"x-path\": \"/api/v1/organization/{orgname}/invoices\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"billing\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"listOrgInvoices\",\n             \"description\": \"List the invoices for the specified orgnaization.\"\n          }\n       },\n       \"/api/v1/plans/\": {\n          \"x-name\": \"endpoints.api.billing.ListPlans\",\n          \"x-tag\": \"billing\",\n          \"x-path\": \"/api/v1/plans/\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"tags\": [\n                \"billing\"\n             ],\n             \"description\": \"List the avaialble plans.\",\n             \"operationId\": \"listPlans\"\n          }\n       },\n       \"/api/v1/repository/{repository}/build/\": {\n          \"x-name\": \"endpoints.api.build.RepositoryBuildList\",\n          \"parameters\": [\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"Returns all builds since the given unix timecode\",\n                   \"required\": false,\n                   \"name\": \"since\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"integer\"\n                   }\n                },\n                {\n                   \"description\": \"The maximum number of builds to return\",\n                   \"required\": false,\n                   \"name\": \"limit\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"integer\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"build\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:read\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getRepoBuilds\",\n             \"description\": \"Get the list of repository builds.\"\n          },\n          \"x-path\": \"/api/v1/repository/{repository}/build/\",\n          \"x-tag\": \"build\",\n          \"post\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"build\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:write\"\n                   ]\n                }\n             ],\n             \"operationId\": \"requestRepoBuild\",\n             \"description\": \"Request that a repository be built and pushed from the specified input.\",\n             \"requestBody\": {\n                \"content\": {\n                   \"application/json\": {\n                      \"schema\": {\n                         \"$ref\": \"#/components/schemas/RepositoryBuildRequest\"\n                      }\n                   }\n                },\n                \"description\": \"Request body contents.\",\n                \"required\": true\n             }\n          }\n       },\n       \"/api/v1/repository/{repository}/build/{build_uuid}/status\": {\n          \"x-name\": \"endpoints.api.build.RepositoryBuildStatus\",\n          \"parameters\": [\n             {\n                \"description\": \"The UUID of the build\",\n                \"required\": true,\n                \"name\": \"build_uuid\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"build\",\n          \"x-path\": \"/api/v1/repository/{repository}/build/{build_uuid}/status\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The UUID of the build\",\n                   \"required\": true,\n                   \"name\": \"build_uuid\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"build\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:read\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getRepoBuildStatus\",\n             \"description\": \"Return the status for the builds specified by the build uuids.\"\n          }\n       },\n       \"/api/v1/repository/{repository}/build/{build_uuid}\": {\n          \"x-name\": \"endpoints.api.build.RepositoryBuildResource\",\n          \"parameters\": [\n             {\n                \"description\": \"The UUID of the build\",\n                \"required\": true,\n                \"name\": \"build_uuid\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The UUID of the build\",\n                   \"required\": true,\n                   \"name\": \"build_uuid\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"build\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:read\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getRepoBuild\",\n             \"description\": \"Returns information about a build.\"\n          },\n          \"x-path\": \"/api/v1/repository/{repository}/build/{build_uuid}\",\n          \"x-tag\": \"build\",\n          \"delete\": {\n             \"responses\": {\n                \"204\": {\n                   \"description\": \"Deleted\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The UUID of the build\",\n                   \"required\": true,\n                   \"name\": \"build_uuid\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"build\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"cancelRepoBuild\",\n             \"description\": \"Cancels a repository build if it has not yet been picked up by a build worker.\"\n          }\n       },\n       \"/api/v1/repository/{repository}/build/{build_uuid}/logs\": {\n          \"x-name\": \"endpoints.api.build.RepositoryBuildLogs\",\n          \"parameters\": [\n             {\n                \"description\": \"The UUID of the build\",\n                \"required\": true,\n                \"name\": \"build_uuid\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"build\",\n          \"x-path\": \"/api/v1/repository/{repository}/build/{build_uuid}/logs\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The UUID of the build\",\n                   \"required\": true,\n                   \"name\": \"build_uuid\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"build\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:write\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getRepoBuildLogs\",\n             \"description\": \"Return the build logs for the build specified by the build uuid.\"\n          }\n       },\n       \"/api/v1/discovery\": {\n          \"x-name\": \"endpoints.api.discovery.DiscoveryResource\",\n          \"x-tag\": \"discovery\",\n          \"x-path\": \"/api/v1/discovery\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"tags\": [\n                \"discovery\"\n             ],\n             \"description\": \"List all of the API endpoints available in the swagger API format.\",\n             \"parameters\": [\n                {\n                   \"description\": \"Whether to include internal APIs.\",\n                   \"required\": false,\n                   \"name\": \"internal\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"boolean\"\n                   }\n                }\n             ],\n             \"operationId\": \"discovery\"\n          }\n       },\n       \"/api/v1/repository/{repository}/image/{image_id}\": {\n          \"x-name\": \"endpoints.api.image.RepositoryImage\",\n          \"parameters\": [\n             {\n                \"description\": \"The Docker image ID\",\n                \"required\": true,\n                \"name\": \"image_id\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"image\",\n          \"x-path\": \"/api/v1/repository/{repository}/image/{image_id}\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The Docker image ID\",\n                   \"required\": true,\n                   \"name\": \"image_id\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"image\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:read\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getImage\",\n             \"description\": \"Get the information available for the specified image.\"\n          }\n       },\n       \"/api/v1/repository/{repository}/image/{image_id}/changes\": {\n          \"x-name\": \"endpoints.api.image.RepositoryImageChanges\",\n          \"parameters\": [\n             {\n                \"description\": \"The Docker image ID\",\n                \"required\": true,\n                \"name\": \"image_id\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"image\",\n          \"x-path\": \"/api/v1/repository/{repository}/image/{image_id}/changes\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The Docker image ID\",\n                   \"required\": true,\n                   \"name\": \"image_id\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"image\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:read\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getImageChanges\",\n             \"description\": \"Get the list of changes for the specified image.\"\n          }\n       },\n       \"/api/v1/repository/{repository}/image/\": {\n          \"x-name\": \"endpoints.api.image.RepositoryImageList\",\n          \"parameters\": [\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"image\",\n          \"x-path\": \"/api/v1/repository/{repository}/image/\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"image\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:read\"\n                   ]\n                }\n             ],\n             \"operationId\": \"listRepositoryImages\",\n             \"description\": \"List the images for the specified repository.\"\n          }\n       },\n       \"/api/v1/organization/{orgname}/aggregatelogs\": {\n          \"x-name\": \"endpoints.api.logs.OrgAggregateLogs\",\n          \"parameters\": [\n             {\n                \"description\": \"The name of the organization\",\n                \"required\": true,\n                \"name\": \"orgname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"logs\",\n          \"x-path\": \"/api/v1/organization/{orgname}/aggregatelogs\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"Username for which to filter logs.\",\n                   \"required\": false,\n                   \"name\": \"performer\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"Latest time to which to get logs. (%m/%d/%Y %Z)\",\n                   \"required\": false,\n                   \"name\": \"endtime\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"Earliest time from which to get logs. (%m/%d/%Y %Z)\",\n                   \"required\": false,\n                   \"name\": \"starttime\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"logs\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getAggregateOrgLogs\",\n             \"description\": \"Gets the aggregated logs for the specified organization.\"\n          }\n       },\n       \"/api/v1/organization/{orgname}/logs\": {\n          \"x-name\": \"endpoints.api.logs.OrgLogs\",\n          \"parameters\": [\n             {\n                \"description\": \"The name of the organization\",\n                \"required\": true,\n                \"name\": \"orgname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"logs\",\n          \"x-path\": \"/api/v1/organization/{orgname}/logs\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The page number for the logs\",\n                   \"required\": false,\n                   \"name\": \"page\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"integer\"\n                   }\n                },\n                {\n                   \"description\": \"Username for which to filter logs.\",\n                   \"required\": false,\n                   \"name\": \"performer\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"Latest time to which to get logs. (%m/%d/%Y %Z)\",\n                   \"required\": false,\n                   \"name\": \"endtime\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"Earliest time from which to get logs. (%m/%d/%Y %Z)\",\n                   \"required\": false,\n                   \"name\": \"starttime\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"logs\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"listOrgLogs\",\n             \"description\": \"List the logs for the specified organization.\"\n          }\n       },\n       \"/api/v1/repository/{repository}/logs\": {\n          \"x-name\": \"endpoints.api.logs.RepositoryLogs\",\n          \"parameters\": [\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"logs\",\n          \"x-path\": \"/api/v1/repository/{repository}/logs\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The page number for the logs\",\n                   \"required\": false,\n                   \"name\": \"page\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"integer\"\n                   }\n                },\n                {\n                   \"description\": \"Latest time to which to get logs (%m/%d/%Y %Z)\",\n                   \"required\": false,\n                   \"name\": \"endtime\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"Earliest time from which to get logs (%m/%d/%Y %Z)\",\n                   \"required\": false,\n                   \"name\": \"starttime\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"logs\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"listRepoLogs\",\n             \"description\": \"List the logs for the specified repository.\"\n          }\n       },\n       \"/api/v1/repository/{repository}/aggregatelogs\": {\n          \"x-name\": \"endpoints.api.logs.RepositoryAggregateLogs\",\n          \"parameters\": [\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"logs\",\n          \"x-path\": \"/api/v1/repository/{repository}/aggregatelogs\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"Latest time to which to get logs (%m/%d/%Y %Z)\",\n                   \"required\": false,\n                   \"name\": \"endtime\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"Earliest time from which to get logs (%m/%d/%Y %Z)\",\n                   \"required\": false,\n                   \"name\": \"starttime\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"logs\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getAggregateRepoLogs\",\n             \"description\": \"Returns the aggregated logs for the specified repository.\"\n          }\n       },\n       \"/api/v1/organization/{orgname}/members/{membername}\": {\n          \"x-name\": \"endpoints.api.organization.OrganizationMember\",\n          \"parameters\": [\n             {\n                \"description\": \"The name of the organization\",\n                \"required\": true,\n                \"name\": \"orgname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The username of the organization member\",\n                \"required\": true,\n                \"name\": \"membername\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The username of the organization member\",\n                   \"required\": true,\n                   \"name\": \"membername\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"organization\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getOrganizationMember\",\n             \"description\": \"Retrieves the details of a member of the organization.\"\n          },\n          \"x-path\": \"/api/v1/organization/{orgname}/members/{membername}\",\n          \"x-tag\": \"organization\",\n          \"delete\": {\n             \"responses\": {\n                \"204\": {\n                   \"description\": \"Deleted\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The username of the organization member\",\n                   \"required\": true,\n                   \"name\": \"membername\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"organization\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"removeOrganizationMember\",\n             \"description\": \"Removes a member from an organization, revoking all its repository\\n        priviledges and removing it from all teams in the organization.\"\n          }\n       },\n       \"/api/v1/organization/{orgname}\": {\n          \"x-name\": \"endpoints.api.organization.Organization\",\n          \"parameters\": [\n             {\n                \"description\": \"The name of the organization\",\n                \"required\": true,\n                \"name\": \"orgname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"organization\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getOrganization\",\n             \"description\": \"Get the details for the specified organization\"\n          },\n          \"x-path\": \"/api/v1/organization/{orgname}\",\n          \"x-tag\": \"organization\",\n          \"put\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"organization\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"changeOrganizationDetails\",\n             \"description\": \"Change the details for the specified organization.\",\n             \"requestBody\": {\n                \"content\": {\n                   \"application/json\": {\n                      \"schema\": {\n                         \"$ref\": \"#/components/schemas/UpdateOrg\"\n                      }\n                   }\n                },\n                \"description\": \"Request body contents.\",\n                \"required\": true\n             }\n          }\n       },\n       \"/api/v1/organization/{orgname}/applications/{client_id}\": {\n          \"x-name\": \"endpoints.api.organization.OrganizationApplicationResource\",\n          \"parameters\": [\n             {\n                \"description\": \"The name of the organization\",\n                \"required\": true,\n                \"name\": \"orgname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The OAuth client ID\",\n                \"required\": true,\n                \"name\": \"client_id\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The OAuth client ID\",\n                   \"required\": true,\n                   \"name\": \"client_id\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"organization\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getOrganizationApplication\",\n             \"description\": \"Retrieves the application with the specified client_id under the specified organization\"\n          },\n          \"x-path\": \"/api/v1/organization/{orgname}/applications/{client_id}\",\n          \"x-tag\": \"organization\",\n          \"put\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The OAuth client ID\",\n                   \"required\": true,\n                   \"name\": \"client_id\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"organization\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"updateOrganizationApplication\",\n             \"description\": \"Updates an application under this organization.\",\n             \"requestBody\": {\n                \"content\": {\n                   \"application/json\": {\n                      \"schema\": {\n                         \"$ref\": \"#/components/schemas/UpdateApp\"\n                      }\n                   }\n                },\n                \"description\": \"Request body contents.\",\n                \"required\": true\n             }\n          },\n          \"delete\": {\n             \"responses\": {\n                \"204\": {\n                   \"description\": \"Deleted\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The OAuth client ID\",\n                   \"required\": true,\n                   \"name\": \"client_id\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"organization\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"deleteOrganizationApplication\",\n             \"description\": \"Deletes the application under this organization.\"\n          }\n       },\n       \"/api/v1/organization/{orgname}/applications\": {\n          \"x-name\": \"endpoints.api.organization.OrganizationApplications\",\n          \"parameters\": [\n             {\n                \"description\": \"The name of the organization\",\n                \"required\": true,\n                \"name\": \"orgname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"organization\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getOrganizationApplications\",\n             \"description\": \"List the applications for the specified organization\"\n          },\n          \"x-path\": \"/api/v1/organization/{orgname}/applications\",\n          \"x-tag\": \"organization\",\n          \"post\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"organization\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"createOrganizationApplication\",\n             \"description\": \"Creates a new application under this organization.\",\n             \"requestBody\": {\n                \"content\": {\n                   \"application/json\": {\n                      \"schema\": {\n                         \"$ref\": \"#/components/schemas/NewApp\"\n                      }\n                   }\n                },\n                \"description\": \"Request body contents.\",\n                \"required\": true\n             }\n          }\n       },\n       \"/api/v1/organization/{orgname}/members\": {\n          \"x-name\": \"endpoints.api.organization.OrganizationMemberList\",\n          \"parameters\": [\n             {\n                \"description\": \"The name of the organization\",\n                \"required\": true,\n                \"name\": \"orgname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"organization\",\n          \"x-path\": \"/api/v1/organization/{orgname}/members\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"organization\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getOrganizationMembers\",\n             \"description\": \"List the human members of the specified organization.\"\n          }\n       },\n       \"/api/v1/app/{client_id}\": {\n          \"x-name\": \"endpoints.api.organization.ApplicationInformation\",\n          \"parameters\": [\n             {\n                \"description\": \"The OAuth client ID\",\n                \"required\": true,\n                \"name\": \"client_id\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"organization\",\n          \"x-path\": \"/api/v1/app/{client_id}\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"tags\": [\n                \"organization\"\n             ],\n             \"description\": \"Get information on the specified application.\",\n             \"parameters\": [\n                {\n                   \"description\": \"The OAuth client ID\",\n                   \"required\": true,\n                   \"name\": \"client_id\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"operationId\": \"getApplicationInformation\"\n          }\n       },\n       \"/api/v1/repository/{repository}/permissions/team/{teamname}\": {\n          \"x-name\": \"endpoints.api.permission.RepositoryTeamPermission\",\n          \"parameters\": [\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The name of the team to which the permission applies\",\n                \"required\": true,\n                \"name\": \"teamname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the team to which the permission applies\",\n                   \"required\": true,\n                   \"name\": \"teamname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"permission\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getTeamPermissions\",\n             \"description\": \"Fetch the permission for the specified team.\"\n          },\n          \"x-path\": \"/api/v1/repository/{repository}/permissions/team/{teamname}\",\n          \"x-tag\": \"permission\",\n          \"put\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the team to which the permission applies\",\n                   \"required\": true,\n                   \"name\": \"teamname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"permission\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"changeTeamPermissions\",\n             \"description\": \"Update the existing team permission.\",\n             \"requestBody\": {\n                \"content\": {\n                   \"application/json\": {\n                      \"schema\": {\n                         \"$ref\": \"#/components/schemas/TeamPermission\"\n                      }\n                   }\n                },\n                \"description\": \"Request body contents.\",\n                \"required\": true\n             }\n          },\n          \"delete\": {\n             \"responses\": {\n                \"204\": {\n                   \"description\": \"Deleted\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the team to which the permission applies\",\n                   \"required\": true,\n                   \"name\": \"teamname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"permission\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"deleteTeamPermissions\",\n             \"description\": \"Delete the permission for the specified team.\"\n          }\n       },\n       \"/api/v1/repository/{repository}/permissions/user/\": {\n          \"x-name\": \"endpoints.api.permission.RepositoryUserPermissionList\",\n          \"parameters\": [\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"permission\",\n          \"x-path\": \"/api/v1/repository/{repository}/permissions/user/\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"permission\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"listRepoUserPermissions\",\n             \"description\": \"List all user permissions.\"\n          }\n       },\n       \"/api/v1/repository/{repository}/permissions/team/\": {\n          \"x-name\": \"endpoints.api.permission.RepositoryTeamPermissionList\",\n          \"parameters\": [\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"permission\",\n          \"x-path\": \"/api/v1/repository/{repository}/permissions/team/\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"permission\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"listRepoTeamPermissions\",\n             \"description\": \"List all team permission.\"\n          }\n       },\n       \"/api/v1/repository/{repository}/permissions/user/{username}\": {\n          \"x-name\": \"endpoints.api.permission.RepositoryUserPermission\",\n          \"parameters\": [\n             {\n                \"description\": \"The username of the user to which the permission applies\",\n                \"required\": true,\n                \"name\": \"username\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The username of the user to which the permission applies\",\n                   \"required\": true,\n                   \"name\": \"username\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"permission\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getUserPermissions\",\n             \"description\": \"Get the Fetch the permission for the specified user.\"\n          },\n          \"x-path\": \"/api/v1/repository/{repository}/permissions/user/{username}\",\n          \"x-tag\": \"permission\",\n          \"put\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The username of the user to which the permission applies\",\n                   \"required\": true,\n                   \"name\": \"username\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"permission\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"changeUserPermissions\",\n             \"description\": \"Update the perimssions for an existing repository.\",\n             \"requestBody\": {\n                \"content\": {\n                   \"application/json\": {\n                      \"schema\": {\n                         \"$ref\": \"#/components/schemas/UserPermission\"\n                      }\n                   }\n                },\n                \"description\": \"Request body contents.\",\n                \"required\": true\n             }\n          },\n          \"delete\": {\n             \"responses\": {\n                \"204\": {\n                   \"description\": \"Deleted\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The username of the user to which the permission applies\",\n                   \"required\": true,\n                   \"name\": \"username\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"permission\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"deleteUserPermissions\",\n             \"description\": \"Delete the permission for the user.\"\n          }\n       },\n       \"/api/v1/repository/{repository}/permissions/user/{username}/transitive\": {\n          \"x-name\": \"endpoints.api.permission.RepositoryUserTransitivePermission\",\n          \"parameters\": [\n             {\n                \"description\": \"The username of the user to which the permissions apply\",\n                \"required\": true,\n                \"name\": \"username\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"permission\",\n          \"x-path\": \"/api/v1/repository/{repository}/permissions/user/{username}/transitive\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The username of the user to which the permissions apply\",\n                   \"required\": true,\n                   \"name\": \"username\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"permission\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getUserTransitivePermission\",\n             \"description\": \"Get the fetch the permission for the specified user.\"\n          }\n       },\n       \"/api/v1/organization/{orgname}/prototypes\": {\n          \"x-name\": \"endpoints.api.prototype.PermissionPrototypeList\",\n          \"parameters\": [\n             {\n                \"description\": \"The name of the organization\",\n                \"required\": true,\n                \"name\": \"orgname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"prototype\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getOrganizationPrototypePermissions\",\n             \"description\": \"List the existing prototypes for this organization.\"\n          },\n          \"x-path\": \"/api/v1/organization/{orgname}/prototypes\",\n          \"x-tag\": \"prototype\",\n          \"post\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"prototype\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"createOrganizationPrototypePermission\",\n             \"description\": \"Create a new permission prototype.\",\n             \"requestBody\": {\n                \"content\": {\n                   \"application/json\": {\n                      \"schema\": {\n                         \"$ref\": \"#/components/schemas/NewPrototype\"\n                      }\n                   }\n                },\n                \"description\": \"Request body contents.\",\n                \"required\": true\n             }\n          }\n       },\n       \"/api/v1/organization/{orgname}/prototypes/{prototypeid}\": {\n          \"x-name\": \"endpoints.api.prototype.PermissionPrototype\",\n          \"parameters\": [\n             {\n                \"description\": \"The name of the organization\",\n                \"required\": true,\n                \"name\": \"orgname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The ID of the prototype\",\n                \"required\": true,\n                \"name\": \"prototypeid\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-path\": \"/api/v1/organization/{orgname}/prototypes/{prototypeid}\",\n          \"x-tag\": \"prototype\",\n          \"put\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The ID of the prototype\",\n                   \"required\": true,\n                   \"name\": \"prototypeid\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"prototype\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"updateOrganizationPrototypePermission\",\n             \"description\": \"Update the role of an existing permission prototype.\",\n             \"requestBody\": {\n                \"content\": {\n                   \"application/json\": {\n                      \"schema\": {\n                         \"$ref\": \"#/components/schemas/PrototypeUpdate\"\n                      }\n                   }\n                },\n                \"description\": \"Request body contents.\",\n                \"required\": true\n             }\n          },\n          \"delete\": {\n             \"responses\": {\n                \"204\": {\n                   \"description\": \"Deleted\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The ID of the prototype\",\n                   \"required\": true,\n                   \"name\": \"prototypeid\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"prototype\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"deleteOrganizationPrototypePermission\",\n             \"description\": \"Delete an existing permission prototype.\"\n          }\n       },\n       \"/api/v1/repository\": {\n          \"post\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"tags\": [\n                \"repository\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:create\"\n                   ]\n                }\n             ],\n             \"operationId\": \"createRepo\",\n             \"description\": \"Create a new repository.\",\n             \"requestBody\": {\n                \"content\": {\n                   \"application/json\": {\n                      \"schema\": {\n                         \"$ref\": \"#/components/schemas/NewRepo\"\n                      }\n                   }\n                },\n                \"description\": \"Request body contents.\",\n                \"required\": true\n             }\n          },\n          \"x-name\": \"endpoints.api.repository.RepositoryList\",\n          \"x-tag\": \"repository\",\n          \"x-path\": \"/api/v1/repository\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"Whether to include the repository's popularity metric.\",\n                   \"required\": false,\n                   \"name\": \"popularity\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"boolean\"\n                   }\n                },\n                {\n                   \"description\": \"Whether to include when the repository was last modified.\",\n                   \"required\": false,\n                   \"name\": \"last_modified\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"boolean\"\n                   }\n                },\n                {\n                   \"description\": \"Adds any repositories visible to the user by virtue of being public\",\n                   \"required\": false,\n                   \"name\": \"public\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"boolean\"\n                   }\n                },\n                {\n                   \"description\": \"Filters the repositories returned to those starred by the user\",\n                   \"required\": false,\n                   \"name\": \"starred\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"boolean\"\n                   }\n                },\n                {\n                   \"description\": \"Filters the repositories returned to this namespace\",\n                   \"required\": false,\n                   \"name\": \"namespace\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"Limit on the number of results (int)\",\n                   \"required\": false,\n                   \"name\": \"limit\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"integer\"\n                   }\n                },\n                {\n                   \"description\": \"Offset page number. (int)\",\n                   \"required\": false,\n                   \"name\": \"page\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"integer\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"repository\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:read\"\n                   ]\n                }\n             ],\n             \"operationId\": \"listRepos\",\n             \"description\": \"Fetch the list of repositories visible to the current user under a variety of situations.\"\n          }\n       },\n       \"/api/v1/repository/{repository}/changevisibility\": {\n          \"post\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"repository\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"changeRepoVisibility\",\n             \"description\": \"Change the visibility of a repository.\",\n             \"requestBody\": {\n                \"content\": {\n                   \"application/json\": {\n                      \"schema\": {\n                         \"$ref\": \"#/components/schemas/ChangeVisibility\"\n                      }\n                   }\n                },\n                \"description\": \"Request body contents.\",\n                \"required\": true\n             }\n          },\n          \"x-name\": \"endpoints.api.repository.RepositoryVisibility\",\n          \"parameters\": [\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"repository\",\n          \"x-path\": \"/api/v1/repository/{repository}/changevisibility\"\n       },\n       \"/api/v1/repository/{repository}\": {\n          \"x-name\": \"endpoints.api.repository.Repository\",\n          \"parameters\": [\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"repository\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:read\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getRepo\",\n             \"description\": \"Fetch the specified repository.\"\n          },\n          \"x-path\": \"/api/v1/repository/{repository}\",\n          \"x-tag\": \"repository\",\n          \"put\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"repository\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:write\"\n                   ]\n                }\n             ],\n             \"operationId\": \"updateRepo\",\n             \"description\": \"Update the description in the specified repository.\",\n             \"requestBody\": {\n                \"content\": {\n                   \"application/json\": {\n                      \"schema\": {\n                         \"$ref\": \"#/components/schemas/RepoUpdate\"\n                      }\n                   }\n                },\n                \"description\": \"Request body contents.\",\n                \"required\": true\n             }\n          },\n          \"delete\": {\n             \"responses\": {\n                \"204\": {\n                   \"description\": \"Deleted\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"repository\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"deleteRepository\",\n             \"description\": \"Delete a repository.\"\n          }\n       },\n       \"/api/v1/repository/{repository}/notification/\": {\n          \"x-name\": \"endpoints.api.repositorynotification.RepositoryNotificationList\",\n          \"parameters\": [\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"repositorynotification\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"listRepoNotifications\",\n             \"description\": \"List the notifications for the specified repository.\"\n          },\n          \"x-path\": \"/api/v1/repository/{repository}/notification/\",\n          \"x-tag\": \"repositorynotification\",\n          \"post\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"repositorynotification\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"createRepoNotification\",\n             \"description\": \"Create a new notification for the specified repository.\",\n             \"requestBody\": {\n                \"content\": {\n                   \"application/json\": {\n                      \"schema\": {\n                         \"$ref\": \"#/components/schemas/NotificationCreateRequest\"\n                      }\n                   }\n                },\n                \"description\": \"Request body contents.\",\n                \"required\": true\n             }\n          }\n       },\n       \"/api/v1/repository/{repository}/notification/{uuid}/test\": {\n          \"post\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The UUID of the notification\",\n                   \"required\": true,\n                   \"name\": \"uuid\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"repositorynotification\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"testRepoNotification\",\n             \"description\": \"Queues a test notification for this repository.\"\n          },\n          \"x-name\": \"endpoints.api.repositorynotification.TestRepositoryNotification\",\n          \"parameters\": [\n             {\n                \"description\": \"The UUID of the notification\",\n                \"required\": true,\n                \"name\": \"uuid\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"repositorynotification\",\n          \"x-path\": \"/api/v1/repository/{repository}/notification/{uuid}/test\"\n       },\n       \"/api/v1/repository/{repository}/notification/{uuid}\": {\n          \"x-name\": \"endpoints.api.repositorynotification.RepositoryNotification\",\n          \"parameters\": [\n             {\n                \"description\": \"The UUID of the notification\",\n                \"required\": true,\n                \"name\": \"uuid\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The UUID of the notification\",\n                   \"required\": true,\n                   \"name\": \"uuid\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"repositorynotification\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getRepoNotification\",\n             \"description\": \"Get information for the specified notification.\"\n          },\n          \"x-path\": \"/api/v1/repository/{repository}/notification/{uuid}\",\n          \"x-tag\": \"repositorynotification\",\n          \"delete\": {\n             \"responses\": {\n                \"204\": {\n                   \"description\": \"Deleted\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The UUID of the notification\",\n                   \"required\": true,\n                   \"name\": \"uuid\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"repositorynotification\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"deleteRepoNotification\",\n             \"description\": \"Deletes the specified notification.\"\n          }\n       },\n       \"/api/v1/repository/{repository}/tokens/\": {\n          \"x-name\": \"endpoints.api.repotoken.RepositoryTokenList\",\n          \"parameters\": [\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"repotoken\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"listRepoTokens\",\n             \"description\": \"List the tokens for the specified repository.\"\n          },\n          \"x-path\": \"/api/v1/repository/{repository}/tokens/\",\n          \"x-tag\": \"repotoken\",\n          \"post\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"repotoken\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"createToken\",\n             \"description\": \"Create a new repository token.\",\n             \"requestBody\": {\n                \"content\": {\n                   \"application/json\": {\n                      \"schema\": {\n                         \"$ref\": \"#/components/schemas/NewToken\"\n                      }\n                   }\n                },\n                \"description\": \"Request body contents.\",\n                \"required\": true\n             }\n          }\n       },\n       \"/api/v1/repository/{repository}/tokens/{code}\": {\n          \"x-name\": \"endpoints.api.repotoken.RepositoryToken\",\n          \"parameters\": [\n             {\n                \"description\": \"The token code\",\n                \"required\": true,\n                \"name\": \"code\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The token code\",\n                   \"required\": true,\n                   \"name\": \"code\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"repotoken\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getTokens\",\n             \"description\": \"Fetch the specified repository token information.\"\n          },\n          \"x-path\": \"/api/v1/repository/{repository}/tokens/{code}\",\n          \"x-tag\": \"repotoken\",\n          \"put\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The token code\",\n                   \"required\": true,\n                   \"name\": \"code\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"repotoken\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"changeToken\",\n             \"description\": \"Update the permissions for the specified repository token.\",\n             \"requestBody\": {\n                \"content\": {\n                   \"application/json\": {\n                      \"schema\": {\n                         \"$ref\": \"#/components/schemas/TokenPermission\"\n                      }\n                   }\n                },\n                \"description\": \"Request body contents.\",\n                \"required\": true\n             }\n          },\n          \"delete\": {\n             \"responses\": {\n                \"204\": {\n                   \"description\": \"Deleted\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The token code\",\n                   \"required\": true,\n                   \"name\": \"code\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"repotoken\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"deleteToken\",\n             \"description\": \"Delete the repository token.\"\n          }\n       },\n       \"/api/v1/user/robots/{robot_shortname}\": {\n          \"x-name\": \"endpoints.api.robot.UserRobot\",\n          \"parameters\": [\n             {\n                \"description\": \"The short name for the robot, without any user or organization prefix\",\n                \"required\": true,\n                \"name\": \"robot_shortname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"tags\": [\n                \"robot\"\n             ],\n             \"description\": \"Returns the user's robot with the specified name.\",\n             \"parameters\": [\n                {\n                   \"description\": \"The short name for the robot, without any user or organization prefix\",\n                   \"required\": true,\n                   \"name\": \"robot_shortname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"operationId\": \"getUserRobot\"\n          },\n          \"x-path\": \"/api/v1/user/robots/{robot_shortname}\",\n          \"x-tag\": \"robot\",\n          \"put\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"tags\": [\n                \"robot\"\n             ],\n             \"description\": \"Create a new user robot with the specified name.\",\n             \"parameters\": [\n                {\n                   \"description\": \"The short name for the robot, without any user or organization prefix\",\n                   \"required\": true,\n                   \"name\": \"robot_shortname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"operationId\": \"createUserRobot\"\n          },\n          \"delete\": {\n             \"responses\": {\n                \"204\": {\n                   \"description\": \"Deleted\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"tags\": [\n                \"robot\"\n             ],\n             \"description\": \"Delete an existing robot.\",\n             \"parameters\": [\n                {\n                   \"description\": \"The short name for the robot, without any user or organization prefix\",\n                   \"required\": true,\n                   \"name\": \"robot_shortname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"operationId\": \"deleteUserRobot\"\n          }\n       },\n       \"/api/v1/user/robots\": {\n          \"x-name\": \"endpoints.api.robot.UserRobotList\",\n          \"x-tag\": \"robot\",\n          \"x-path\": \"/api/v1/user/robots\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"tags\": [\n                \"robot\"\n             ],\n             \"description\": \"List the available robots for the user.\",\n             \"parameters\": [\n                {\n                   \"description\": \"Whether to include repostories and teams in which the robots have permission.\",\n                   \"required\": false,\n                   \"name\": \"permissions\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"boolean\"\n                   }\n                }\n             ],\n             \"operationId\": \"getUserRobots\"\n          }\n       },\n       \"/api/v1/organization/{orgname}/robots/{robot_shortname}/permissions\": {\n          \"x-name\": \"endpoints.api.robot.OrgRobotPermissions\",\n          \"parameters\": [\n             {\n                \"description\": \"The name of the organization\",\n                \"required\": true,\n                \"name\": \"orgname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The short name for the robot, without any user or organization prefix\",\n                \"required\": true,\n                \"name\": \"robot_shortname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"robot\",\n          \"x-path\": \"/api/v1/organization/{orgname}/robots/{robot_shortname}/permissions\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"tags\": [\n                \"robot\"\n             ],\n             \"description\": \"Returns the list of repository permissions for the org's robot.\",\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The short name for the robot, without any user or organization prefix\",\n                   \"required\": true,\n                   \"name\": \"robot_shortname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"operationId\": \"getOrgRobotPermissions\"\n          }\n       },\n       \"/api/v1/organization/{orgname}/robots/{robot_shortname}/regenerate\": {\n          \"post\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The short name for the robot, without any user or organization prefix\",\n                   \"required\": true,\n                   \"name\": \"robot_shortname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"robot\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"regenerateOrgRobotToken\",\n             \"description\": \"Regenerates the token for an organization robot.\"\n          },\n          \"x-name\": \"endpoints.api.robot.RegenerateOrgRobot\",\n          \"parameters\": [\n             {\n                \"description\": \"The name of the organization\",\n                \"required\": true,\n                \"name\": \"orgname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The short name for the robot, without any user or organization prefix\",\n                \"required\": true,\n                \"name\": \"robot_shortname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"robot\",\n          \"x-path\": \"/api/v1/organization/{orgname}/robots/{robot_shortname}/regenerate\"\n       },\n       \"/api/v1/organization/{orgname}/robots\": {\n          \"x-name\": \"endpoints.api.robot.OrgRobotList\",\n          \"parameters\": [\n             {\n                \"description\": \"The name of the organization\",\n                \"required\": true,\n                \"name\": \"orgname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"robot\",\n          \"x-path\": \"/api/v1/organization/{orgname}/robots\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"Whether to include repostories and teams in which the robots have permission.\",\n                   \"required\": false,\n                   \"name\": \"permissions\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"boolean\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"robot\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getOrgRobots\",\n             \"description\": \"List the organization's robots.\"\n          }\n       },\n       \"/api/v1/user/robots/{robot_shortname}/permissions\": {\n          \"x-name\": \"endpoints.api.robot.UserRobotPermissions\",\n          \"parameters\": [\n             {\n                \"description\": \"The short name for the robot, without any user or organization prefix\",\n                \"required\": true,\n                \"name\": \"robot_shortname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"robot\",\n          \"x-path\": \"/api/v1/user/robots/{robot_shortname}/permissions\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"tags\": [\n                \"robot\"\n             ],\n             \"description\": \"Returns the list of repository permissions for the user's robot.\",\n             \"parameters\": [\n                {\n                   \"description\": \"The short name for the robot, without any user or organization prefix\",\n                   \"required\": true,\n                   \"name\": \"robot_shortname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"operationId\": \"getUserRobotPermissions\"\n          }\n       },\n       \"/api/v1/user/robots/{robot_shortname}/regenerate\": {\n          \"post\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"tags\": [\n                \"robot\"\n             ],\n             \"description\": \"Regenerates the token for a user's robot.\",\n             \"parameters\": [\n                {\n                   \"description\": \"The short name for the robot, without any user or organization prefix\",\n                   \"required\": true,\n                   \"name\": \"robot_shortname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"operationId\": \"regenerateUserRobotToken\"\n          },\n          \"x-name\": \"endpoints.api.robot.RegenerateUserRobot\",\n          \"parameters\": [\n             {\n                \"description\": \"The short name for the robot, without any user or organization prefix\",\n                \"required\": true,\n                \"name\": \"robot_shortname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"robot\",\n          \"x-path\": \"/api/v1/user/robots/{robot_shortname}/regenerate\"\n       },\n       \"/api/v1/organization/{orgname}/robots/{robot_shortname}\": {\n          \"x-name\": \"endpoints.api.robot.OrgRobot\",\n          \"parameters\": [\n             {\n                \"description\": \"The name of the organization\",\n                \"required\": true,\n                \"name\": \"orgname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The short name for the robot, without any user or organization prefix\",\n                \"required\": true,\n                \"name\": \"robot_shortname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The short name for the robot, without any user or organization prefix\",\n                   \"required\": true,\n                   \"name\": \"robot_shortname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"robot\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getOrgRobot\",\n             \"description\": \"Returns the organization's robot with the specified name.\"\n          },\n          \"x-path\": \"/api/v1/organization/{orgname}/robots/{robot_shortname}\",\n          \"x-tag\": \"robot\",\n          \"put\": {\n             \"responses\": {\n                \"201\": {\n                   \"description\": \"Succesfully created\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/Robot\"\n                         }\n                      }\n                   }\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"$ref\": \"#/components/parameters/OrgName\"\n                },\n                {\n                   \"$ref\": \"#/components/parameters/RobotShortName\"\n                }\n             ],\n             \"tags\": [\n                \"robot\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"createOrgRobot\",\n             \"description\": \"Create a new robot in the organization.\"\n          },\n          \"delete\": {\n             \"responses\": {\n                \"204\": {\n                   \"description\": \"Deleted\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The short name for the robot, without any user or organization prefix\",\n                   \"required\": true,\n                   \"name\": \"robot_shortname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"robot\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"deleteOrgRobot\",\n             \"description\": \"Delete an existing organization robot.\"\n          }\n       },\n       \"/api/v1/find/all\": {\n          \"x-name\": \"endpoints.api.search.ConductSearch\",\n          \"x-tag\": \"search\",\n          \"x-path\": \"/api/v1/find/all\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The search query.\",\n                   \"required\": false,\n                   \"name\": \"query\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"search\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:read\"\n                   ]\n                }\n             ],\n             \"operationId\": \"conductSearch\",\n             \"description\": \"Get a list of entities and resources that match the specified query.\"\n          }\n       },\n       \"/api/v1/entities/{prefix}\": {\n          \"x-name\": \"endpoints.api.search.EntitySearch\",\n          \"x-tag\": \"search\",\n          \"x-path\": \"/api/v1/entities/{prefix}\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"tags\": [\n                \"search\"\n             ],\n             \"description\": \"Get a list of entities that match the specified prefix.\",\n             \"parameters\": [\n                {\n                   \"description\": \"\",\n                   \"required\": true,\n                   \"name\": \"prefix\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"Whether to include orgs names.\",\n                   \"required\": false,\n                   \"name\": \"includeOrgs\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"boolean\"\n                   }\n                },\n                {\n                   \"description\": \"Whether to include team names.\",\n                   \"required\": false,\n                   \"name\": \"includeTeams\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"boolean\"\n                   }\n                },\n                {\n                   \"description\": \"Namespace to use when querying for org entities.\",\n                   \"required\": false,\n                   \"name\": \"namespace\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"operationId\": \"getMatchingEntities\"\n          }\n       },\n       \"/api/v1/repository/{repository}/image/{imageid}/packages\": {\n          \"x-name\": \"endpoints.api.secscan.RepositoryImagePackages\",\n          \"parameters\": [\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The image ID\",\n                \"required\": true,\n                \"name\": \"imageid\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"secscan\",\n          \"x-path\": \"/api/v1/repository/{repository}/image/{imageid}/packages\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The image ID\",\n                   \"required\": true,\n                   \"name\": \"imageid\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"secscan\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:read\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getRepoImagePackages\",\n             \"description\": \"Fetches the packages added/removed in the given repo image.\"\n          }\n       },\n       \"/api/v1/repository/{repository}/tag/{tag}/vulnerabilities\": {\n          \"x-name\": \"endpoints.api.secscan.RepositoryTagVulnerabilities\",\n          \"parameters\": [\n             {\n                \"description\": \"The name of the tag\",\n                \"required\": true,\n                \"name\": \"tag\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"secscan\",\n          \"x-path\": \"/api/v1/repository/{repository}/tag/{tag}/vulnerabilities\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the tag\",\n                   \"required\": true,\n                   \"name\": \"tag\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"Minimum vulnerability priority\",\n                   \"required\": false,\n                   \"name\": \"minimumPriority\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"secscan\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:read\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getRepoTagVulnerabilities\",\n             \"description\": \"Fetches the vulnerabilities (if any) for a repository tag.\"\n          }\n       },\n       \"/api/v1/repository/{repository}/tag/{tag}/revert\": {\n          \"post\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the tag\",\n                   \"required\": true,\n                   \"name\": \"tag\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"tag\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:write\"\n                   ]\n                }\n             ],\n             \"operationId\": \"revertTag\",\n             \"description\": \"Reverts a repository tag back to a previous image in the repository.\",\n             \"requestBody\": {\n                \"content\": {\n                   \"application/json\": {\n                      \"schema\": {\n                         \"$ref\": \"#/components/schemas/RevertTag\"\n                      }\n                   }\n                },\n                \"description\": \"Request body contents.\",\n                \"required\": true\n             }\n          },\n          \"x-name\": \"endpoints.api.tag.RevertTag\",\n          \"parameters\": [\n             {\n                \"description\": \"The name of the tag\",\n                \"required\": true,\n                \"name\": \"tag\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"tag\",\n          \"x-path\": \"/api/v1/repository/{repository}/tag/{tag}/revert\"\n       },\n       \"/api/v1/repository/{repository}/tag/{tag}/images\": {\n          \"x-name\": \"endpoints.api.tag.RepositoryTagImages\",\n          \"parameters\": [\n             {\n                \"description\": \"The name of the tag\",\n                \"required\": true,\n                \"name\": \"tag\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"tag\",\n          \"x-path\": \"/api/v1/repository/{repository}/tag/{tag}/images\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the tag\",\n                   \"required\": true,\n                   \"name\": \"tag\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"If specified, only images wholely owned by this tag are returned.\",\n                   \"required\": false,\n                   \"name\": \"owned\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"boolean\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"tag\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:read\"\n                   ]\n                }\n             ],\n             \"operationId\": \"listTagImages\",\n             \"description\": \"List the images for the specified repository tag.\"\n          }\n       },\n       \"/api/v1/repository/{repository}/tag/{tag}\": {\n          \"x-name\": \"endpoints.api.tag.RepositoryTag\",\n          \"parameters\": [\n             {\n                \"description\": \"The name of the tag\",\n                \"required\": true,\n                \"name\": \"tag\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-path\": \"/api/v1/repository/{repository}/tag/{tag}\",\n          \"x-tag\": \"tag\",\n          \"put\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the tag\",\n                   \"required\": true,\n                   \"name\": \"tag\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"tag\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:write\"\n                   ]\n                }\n             ],\n             \"operationId\": \"changeTagImage\",\n             \"description\": \"Change which image a tag points to or create a new tag.\",\n             \"requestBody\": {\n                \"content\": {\n                   \"application/json\": {\n                      \"schema\": {\n                         \"$ref\": \"#/components/schemas/MoveTag\"\n                      }\n                   }\n                },\n                \"description\": \"Request body contents.\",\n                \"required\": true\n             }\n          },\n          \"delete\": {\n             \"responses\": {\n                \"204\": {\n                   \"description\": \"Deleted\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the tag\",\n                   \"required\": true,\n                   \"name\": \"tag\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"tag\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:write\"\n                   ]\n                }\n             ],\n             \"operationId\": \"deleteFullTag\",\n             \"description\": \"Delete the specified repository tag.\"\n          }\n       },\n       \"/api/v1/repository/{repository}/tag/\": {\n          \"x-name\": \"endpoints.api.tag.ListRepositoryTags\",\n          \"parameters\": [\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"tag\",\n          \"x-path\": \"/api/v1/repository/{repository}/tag/\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"Page index for the results. Default 1.\",\n                   \"required\": false,\n                   \"name\": \"page\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"integer\"\n                   }\n                },\n                {\n                   \"description\": \"Limit to the number of results to return per page. Max 100.\",\n                   \"required\": false,\n                   \"name\": \"limit\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"integer\"\n                   }\n                },\n                {\n                   \"description\": \"Filters the tags to the specific tag.\",\n                   \"required\": false,\n                   \"name\": \"specificTag\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"tag\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:read\"\n                   ]\n                }\n             ],\n             \"operationId\": \"listRepoTags\",\n             \"description\": \"\"\n          }\n       },\n       \"/api/v1/organization/{orgname}/team/{teamname}/members\": {\n          \"x-name\": \"endpoints.api.team.TeamMemberList\",\n          \"parameters\": [\n             {\n                \"description\": \"The name of the organization\",\n                \"required\": true,\n                \"name\": \"orgname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The name of the team\",\n                \"required\": true,\n                \"name\": \"teamname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"team\",\n          \"x-path\": \"/api/v1/organization/{orgname}/team/{teamname}/members\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The name of the team\",\n                   \"required\": true,\n                   \"name\": \"teamname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"Whether to include pending members\",\n                   \"required\": false,\n                   \"name\": \"includePending\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"boolean\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"team\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getOrganizationTeamMembers\",\n             \"description\": \"Retrieve the list of members for the specified team.\"\n          }\n       },\n       \"/api/v1/organization/{orgname}/team/{teamname}/invite/{email}\": {\n          \"put\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"\",\n                   \"required\": true,\n                   \"name\": \"email\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"\",\n                   \"required\": true,\n                   \"name\": \"teamname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"team\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"inviteTeamMemberEmail\",\n             \"description\": \"Invites an email address to an existing team.\"\n          },\n          \"x-name\": \"endpoints.api.team.InviteTeamMember\",\n          \"x-tag\": \"team\",\n          \"x-path\": \"/api/v1/organization/{orgname}/team/{teamname}/invite/{email}\",\n          \"delete\": {\n             \"responses\": {\n                \"204\": {\n                   \"description\": \"Deleted\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"\",\n                   \"required\": true,\n                   \"name\": \"email\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"\",\n                   \"required\": true,\n                   \"name\": \"teamname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"team\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"deleteTeamMemberEmailInvite\",\n             \"description\": \"Delete an invite of an email address to join a team.\"\n          }\n       },\n       \"/api/v1/organization/{orgname}/team/{teamname}\": {\n          \"x-name\": \"endpoints.api.team.OrganizationTeam\",\n          \"parameters\": [\n             {\n                \"description\": \"The name of the organization\",\n                \"required\": true,\n                \"name\": \"orgname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The name of the team\",\n                \"required\": true,\n                \"name\": \"teamname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-path\": \"/api/v1/organization/{orgname}/team/{teamname}\",\n          \"x-tag\": \"team\",\n          \"put\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The name of the team\",\n                   \"required\": true,\n                   \"name\": \"teamname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"team\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"updateOrganizationTeam\",\n             \"description\": \"Update the org-wide permission for the specified team.\",\n             \"requestBody\": {\n                \"content\": {\n                   \"application/json\": {\n                      \"schema\": {\n                         \"$ref\": \"#/components/schemas/TeamDescription\"\n                      }\n                   }\n                },\n                \"description\": \"Request body contents.\",\n                \"required\": true\n             }\n          },\n          \"delete\": {\n             \"responses\": {\n                \"204\": {\n                   \"description\": \"Deleted\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The name of the team\",\n                   \"required\": true,\n                   \"name\": \"teamname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"team\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"deleteOrganizationTeam\",\n             \"description\": \"Delete the specified team.\"\n          }\n       },\n       \"/api/v1/organization/{orgname}/team/{teamname}/members/{membername}\": {\n          \"x-name\": \"endpoints.api.team.TeamMember\",\n          \"parameters\": [\n             {\n                \"description\": \"The name of the organization\",\n                \"required\": true,\n                \"name\": \"orgname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The username of the team member\",\n                \"required\": true,\n                \"name\": \"membername\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The name of the team\",\n                \"required\": true,\n                \"name\": \"teamname\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-path\": \"/api/v1/organization/{orgname}/team/{teamname}/members/{membername}\",\n          \"x-tag\": \"team\",\n          \"put\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The username of the team member\",\n                   \"required\": true,\n                   \"name\": \"membername\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The name of the team\",\n                   \"required\": true,\n                   \"name\": \"teamname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"team\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"updateOrganizationTeamMember\",\n             \"description\": \"Adds or invites a member to an existing team.\"\n          },\n          \"delete\": {\n             \"responses\": {\n                \"204\": {\n                   \"description\": \"Deleted\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The name of the organization\",\n                   \"required\": true,\n                   \"name\": \"orgname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The username of the team member\",\n                   \"required\": true,\n                   \"name\": \"membername\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The name of the team\",\n                   \"required\": true,\n                   \"name\": \"teamname\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"team\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"org:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"deleteOrganizationTeamMember\",\n             \"description\": \"Delete a member of a team. If the user is merely invited to join\\n        the team, then the invite is removed instead.\"\n          }\n       },\n       \"/api/v1/repository/{repository}/trigger/\": {\n          \"x-name\": \"endpoints.api.trigger.BuildTriggerList\",\n          \"parameters\": [\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"trigger\",\n          \"x-path\": \"/api/v1/repository/{repository}/trigger/\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"trigger\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"listBuildTriggers\",\n             \"description\": \"List the triggers for the specified repository.\"\n          }\n       },\n       \"/api/v1/repository/{repository}/trigger/{trigger_uuid}/activate\": {\n          \"post\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The UUID of the build trigger\",\n                   \"required\": true,\n                   \"name\": \"trigger_uuid\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"trigger\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"activateBuildTrigger\",\n             \"description\": \"Activate the specified build trigger.\",\n             \"requestBody\": {\n                \"content\": {\n                   \"application/json\": {\n                      \"schema\": {\n                         \"$ref\": \"#/components/schemas/BuildTriggerActivateRequest\"\n                      }\n                   }\n                },\n                \"description\": \"Request body contents.\",\n                \"required\": true\n             }\n          },\n          \"x-name\": \"endpoints.api.trigger.BuildTriggerActivate\",\n          \"parameters\": [\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The UUID of the build trigger\",\n                \"required\": true,\n                \"name\": \"trigger_uuid\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"trigger\",\n          \"x-path\": \"/api/v1/repository/{repository}/trigger/{trigger_uuid}/activate\"\n       },\n       \"/api/v1/repository/{repository}/trigger/{trigger_uuid}/start\": {\n          \"post\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The UUID of the build trigger\",\n                   \"required\": true,\n                   \"name\": \"trigger_uuid\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"trigger\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"manuallyStartBuildTrigger\",\n             \"description\": \"Manually start a build from the specified trigger.\",\n             \"requestBody\": {\n                \"content\": {\n                   \"application/json\": {\n                      \"schema\": {\n                         \"$ref\": \"#/components/schemas/RunParameters\"\n                      }\n                   }\n                },\n                \"description\": \"Request body contents.\",\n                \"required\": true\n             }\n          },\n          \"x-name\": \"endpoints.api.trigger.ActivateBuildTrigger\",\n          \"parameters\": [\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The UUID of the build trigger\",\n                \"required\": true,\n                \"name\": \"trigger_uuid\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"trigger\",\n          \"x-path\": \"/api/v1/repository/{repository}/trigger/{trigger_uuid}/start\"\n       },\n       \"/api/v1/repository/{repository}/trigger/{trigger_uuid}/builds\": {\n          \"x-name\": \"endpoints.api.trigger.TriggerBuildList\",\n          \"parameters\": [\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The UUID of the build trigger\",\n                \"required\": true,\n                \"name\": \"trigger_uuid\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"trigger\",\n          \"x-path\": \"/api/v1/repository/{repository}/trigger/{trigger_uuid}/builds\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The UUID of the build trigger\",\n                   \"required\": true,\n                   \"name\": \"trigger_uuid\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The maximum number of builds to return\",\n                   \"required\": false,\n                   \"name\": \"limit\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"integer\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"trigger\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"listTriggerRecentBuilds\",\n             \"description\": \"List the builds started by the specified trigger.\"\n          }\n       },\n       \"/api/v1/repository/{repository}/trigger/{trigger_uuid}\": {\n          \"x-name\": \"endpoints.api.trigger.BuildTrigger\",\n          \"parameters\": [\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             },\n             {\n                \"description\": \"The UUID of the build trigger\",\n                \"required\": true,\n                \"name\": \"trigger_uuid\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The UUID of the build trigger\",\n                   \"required\": true,\n                   \"name\": \"trigger_uuid\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"trigger\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getBuildTrigger\",\n             \"description\": \"Get information for the specified build trigger.\"\n          },\n          \"x-path\": \"/api/v1/repository/{repository}/trigger/{trigger_uuid}\",\n          \"x-tag\": \"trigger\",\n          \"delete\": {\n             \"responses\": {\n                \"204\": {\n                   \"description\": \"Deleted\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"parameters\": [\n                {\n                   \"description\": \"The UUID of the build trigger\",\n                   \"required\": true,\n                   \"name\": \"trigger_uuid\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                },\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"tags\": [\n                \"trigger\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:admin\"\n                   ]\n                }\n             ],\n             \"operationId\": \"deleteBuildTrigger\",\n             \"description\": \"Delete the specified build trigger.\"\n          }\n       },\n       \"/api/v1/user/\": {\n          \"x-name\": \"endpoints.api.user.User\",\n          \"x-tag\": \"user\",\n          \"x-path\": \"/api/v1/user/\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/UserView\"\n                         }\n                      }\n                   }\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"tags\": [\n                \"user\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"user:read\"\n                   ]\n                }\n             ],\n             \"operationId\": \"getLoggedInUser\",\n             \"description\": \"Get user information for the authenticated user.\"\n          }\n       },\n       \"/api/v1/users/{username}\": {\n          \"x-name\": \"endpoints.api.user.Users\",\n          \"x-tag\": \"user\",\n          \"x-path\": \"/api/v1/users/{username}\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"tags\": [\n                \"user\"\n             ],\n             \"description\": \"Get user information for the specified user.\",\n             \"parameters\": [\n                {\n                   \"description\": \"\",\n                   \"required\": true,\n                   \"name\": \"username\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"operationId\": \"getUserInformation\"\n          }\n       },\n       \"/api/v1/user/starred\": {\n          \"post\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"tags\": [\n                \"user\"\n             ],\n             \"security\": [\n                {\n                   \"oauth2_implicit\": [\n                      \"repo:read\"\n                   ]\n                }\n             ],\n             \"operationId\": \"createStar\",\n             \"description\": \"Star a repository.\",\n             \"requestBody\": {\n                \"content\": {\n                   \"application/json\": {\n                      \"schema\": {\n                         \"$ref\": \"#/components/schemas/NewStarredRepository\"\n                      }\n                   }\n                },\n                \"description\": \"Request body contents.\",\n                \"required\": true\n             }\n          },\n          \"x-name\": \"endpoints.api.user.StarredRepositoryList\",\n          \"x-tag\": \"user\",\n          \"x-path\": \"/api/v1/user/starred\",\n          \"get\": {\n             \"responses\": {\n                \"200\": {\n                   \"description\": \"Successful invocation\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"tags\": [\n                \"user\"\n             ],\n             \"description\": \"List all starred repositories.\",\n             \"parameters\": [\n                {\n                   \"description\": \"Limit on the number of results (int)\",\n                   \"required\": false,\n                   \"name\": \"limit\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"integer\"\n                   }\n                },\n                {\n                   \"description\": \"Offset page number. (int)\",\n                   \"required\": false,\n                   \"name\": \"page\",\n                   \"in\": \"query\",\n                   \"schema\": {\n                      \"type\": \"integer\"\n                   }\n                }\n             ],\n             \"operationId\": \"listStarredRepos\"\n          }\n       },\n       \"/api/v1/user/starred/{repository}\": {\n          \"x-name\": \"endpoints.api.user.StarredRepository\",\n          \"parameters\": [\n             {\n                \"description\": \"The full path of the repository. e.g. namespace/name\",\n                \"required\": true,\n                \"name\": \"repository\",\n                \"in\": \"path\",\n                \"schema\": {\n                   \"type\": \"string\"\n                }\n             }\n          ],\n          \"x-tag\": \"user\",\n          \"x-path\": \"/api/v1/user/starred/{repository}\",\n          \"delete\": {\n             \"responses\": {\n                \"204\": {\n                   \"description\": \"Deleted\"\n                },\n                \"400\": {\n                   \"description\": \"Bad Request\",\n                   \"content\": {\n                      \"*/*\": {\n                         \"schema\": {\n                            \"$ref\": \"#/components/schemas/GeneralError\"\n                         }\n                      }\n                   }\n                },\n                \"401\": {\n                   \"description\": \"Session required\"\n                },\n                \"403\": {\n                   \"description\": \"Unauthorized access\"\n                },\n                \"404\": {\n                   \"description\": \"Not found\"\n                }\n             },\n             \"tags\": [\n                \"user\"\n             ],\n             \"description\": \"Removes a star from a repository.\",\n             \"parameters\": [\n                {\n                   \"description\": \"The full path of the repository. e.g. namespace/name\",\n                   \"required\": true,\n                   \"name\": \"repository\",\n                   \"in\": \"path\",\n                   \"schema\": {\n                      \"type\": \"string\"\n                   }\n                }\n             ],\n             \"operationId\": \"deleteStar\"\n          }\n       }\n    },\n    \"tags\": [\n       {\n          \"name\": \"billing\",\n          \"description\": \"Billing information, subscriptions, and plan information.\"\n       },\n       {\n          \"name\": \"build\",\n          \"description\": \"Create, list, cancel and get status/logs of repository builds.\"\n       },\n       {\n          \"name\": \"discovery\",\n          \"description\": \"API discovery information.\"\n       },\n       {\n          \"name\": \"image\",\n          \"description\": \"List and lookup repository images, and download image diffs.\"\n       },\n       {\n          \"name\": \"logs\",\n          \"description\": \"Access usage logs for organizations or repositories.\"\n       },\n       {\n          \"name\": \"organization\",\n          \"description\": \"Manage organizations, members and OAuth applications.\"\n       },\n       {\n          \"name\": \"permission\",\n          \"description\": \"Manage repository permissions.\"\n       },\n       {\n          \"name\": \"prototype\",\n          \"description\": \"Manage default permissions added to repositories.\"\n       },\n       {\n          \"name\": \"repository\",\n          \"description\": \"List, create and manage repositories.\"\n       },\n       {\n          \"name\": \"repositorynotification\",\n          \"description\": \"List, create and manage repository events/notifications.\"\n       },\n       {\n          \"name\": \"repotoken\",\n          \"description\": \"Manage repository access tokens (DEPRECATED).\"\n       },\n       {\n          \"name\": \"robot\",\n          \"description\": \"Manage user and organization robot accounts.\"\n       },\n       {\n          \"name\": \"search\",\n          \"description\": \"Conduct searches against all registry context.\"\n       },\n       {\n          \"name\": \"secscan\",\n          \"description\": \"List and manage repository vulnerabilities and other sec information.\"\n       },\n       {\n          \"name\": \"tag\",\n          \"description\": \"Manage the tags of a repository.\"\n       },\n       {\n          \"name\": \"team\",\n          \"description\": \"Create, list and manage an organization's teams.\"\n       },\n       {\n          \"name\": \"trigger\",\n          \"description\": \"Create, list and manage build triggers.\"\n       },\n       {\n          \"name\": \"user\",\n          \"description\": \"Manage the current user.\"\n       }\n    ],\n    \"servers\": [\n       {\n          \"url\": \"https://quay.io/\"\n       }\n    ],\n    \"components\": {\n       \"parameters\": {\n          \"OrgName\": {\n             \"description\": \"The name of the organization\",\n             \"required\": true,\n             \"name\": \"orgname\",\n             \"in\": \"path\",\n             \"schema\": {\n                \"type\": \"string\",\n                \"minLength\": 4,\n                \"maxLength\": 30,\n                \"pattern\": \"[a-z0-9_]+\"\n             }\n          },\n          \"RobotShortName\": {\n             \"description\": \"The short name for the robot, without any user or organization prefix\",\n             \"required\": true,\n             \"name\": \"robot_shortname\",\n             \"in\": \"path\",\n             \"schema\": {\n                \"type\": \"string\",\n                \"minLength\": 4,\n                \"maxLength\": 30,\n                \"pattern\": \"[a-z0-9_]+\"\n             }\n          }\n       },\n       \"securitySchemes\": {\n          \"oauth2_implicit\": {\n             \"type\": \"oauth2\",\n             \"flows\": {\n                \"implicit\": {\n                   \"authorizationUrl\": \"https://quay.io/oauth/authorize\",\n                   \"scopes\": {\n                      \"repo:write\": \"This application will be able to view, push and pull to all repositories to which the granting user or robot account has write access\",\n                      \"repo:read\": \"This application will be able to view and pull all repositories visible to the granting user or robot account\",\n                      \"repo:create\": \"This application will be able to create repositories in to any namespaces that the granting user or robot account is allowed to create repositories\",\n                      \"repo:admin\": \"This application will have administrator access to all repositories to which the granting user or robot account has access\",\n                      \"org:admin\": \"This application will be able to administer your organizations including creating robots, creating teams, adjusting team membership, and changing billing settings. You should have absolute trust in the requesting application before granting this permission.\",\n                      \"user:read\": \"This application will be able to read user information such as username and email address.\"\n                   }\n                }\n             }\n          }\n       },\n       \"schemas\": {\n          \"Robot\": {\n             \"type\": \"object\",\n             \"description\": \"A robot account\",\n             \"properties\": {\n                \"token\": {\n                   \"type\": \"string\"\n                },\n                \"name\": {\n                   \"type\": \"string\"\n                }\n             }\n          },\n          \"RepositoryBuildRequest\": {\n             \"type\": \"object\",\n             \"description\": \"Description of a new repository build.\",\n             \"properties\": {\n                \"docker_tags\": {\n                   \"minItems\": 1,\n                   \"items\": {\n                      \"type\": \"string\"\n                   },\n                   \"uniqueItems\": true,\n                   \"type\": \"array\",\n                   \"description\": \"The tags to which the built images will be pushed. If none specified, \\\"latest\\\" is used.\"\n                },\n                \"pull_robot\": {\n                   \"type\": \"string\",\n                   \"description\": \"Username of a Quay robot account to use as pull credentials\"\n                },\n                \"subdirectory\": {\n                   \"type\": \"string\",\n                   \"description\": \"Subdirectory in which the Dockerfile can be found\"\n                },\n                \"file_id\": {\n                   \"type\": \"string\",\n                   \"description\": \"The file id that was generated when the build spec was uploaded\"\n                },\n                \"archive_url\": {\n                   \"type\": \"string\",\n                   \"description\": \"The URL of the .tar.gz to build. Must start with \\\"http\\\" or \\\"https\\\".\"\n                }\n             }\n          },\n          \"NotificationCreateRequest\": {\n             \"required\": [\n                \"event\",\n                \"method\",\n                \"config\"\n             ],\n             \"type\": \"object\",\n             \"description\": \"Information for creating a notification on a repository\",\n             \"properties\": {\n                \"eventConfig\": {\n                   \"type\": \"object\",\n                   \"description\": \"JSON config information for the specific event of notification\"\n                },\n                \"title\": {\n                   \"type\": \"string\",\n                   \"description\": \"The human-readable title of the notification\"\n                },\n                \"config\": {\n                   \"type\": \"object\",\n                   \"description\": \"JSON config information for the specific method of notification\"\n                },\n                \"event\": {\n                   \"type\": \"string\",\n                   \"description\": \"The event on which the notification will respond\"\n                },\n                \"method\": {\n                   \"type\": \"string\",\n                   \"description\": \"The method of notification (such as email or web callback)\"\n                }\n             }\n          },\n          \"UserPermission\": {\n             \"required\": [\n                \"role\"\n             ],\n             \"type\": \"object\",\n             \"description\": \"Description of a user permission.\",\n             \"properties\": {\n                \"role\": {\n                   \"enum\": [\n                      \"read\",\n                      \"write\",\n                      \"admin\"\n                   ],\n                   \"type\": \"string\",\n                   \"description\": \"Role to use for the user\"\n                }\n             }\n          },\n          \"NewStarredRepository\": {\n             \"required\": [\n                \"namespace\",\n                \"repository\"\n             ],\n             \"type\": \"object\",\n             \"properties\": {\n                \"namespace\": {\n                   \"type\": \"string\",\n                   \"description\": \"Namespace in which the repository belongs\"\n                },\n                \"repository\": {\n                   \"type\": \"string\",\n                   \"description\": \"Repository name\"\n                }\n             }\n          },\n          \"MoveTag\": {\n             \"required\": [\n                \"image\"\n             ],\n             \"type\": \"object\",\n             \"description\": \"Description of to which image a new or existing tag should point\",\n             \"properties\": {\n                \"image\": {\n                   \"type\": \"string\",\n                   \"description\": \"Image identifier to which the tag should point\"\n                }\n             }\n          },\n          \"UpdateUser\": {\n             \"type\": \"object\",\n             \"description\": \"Fields which can be updated in a user.\",\n             \"properties\": {\n                \"username\": {\n                   \"type\": \"string\",\n                   \"description\": \"The user's username\"\n                },\n                \"invoice_email\": {\n                   \"type\": \"boolean\",\n                   \"description\": \"Whether the user desires to receive an invoice email.\"\n                },\n                \"password\": {\n                   \"type\": \"string\",\n                   \"description\": \"The user's password\"\n                },\n                \"email\": {\n                   \"type\": \"string\",\n                   \"description\": \"The user's email address\"\n                },\n                \"tag_expiration\": {\n                   \"minimum\": 0,\n                   \"type\": \"integer\",\n                   \"maximum\": 2592000\n                }\n             }\n          },\n          \"BuildTriggerActivateRequest\": {\n             \"required\": [\n                \"config\"\n             ],\n             \"type\": \"object\",\n             \"properties\": {\n                \"pull_robot\": {\n                   \"type\": \"string\",\n                   \"description\": \"The name of the robot that will be used to pull images.\"\n                },\n                \"config\": {\n                   \"type\": \"object\",\n                   \"description\": \"Arbitrary json.\"\n                }\n             }\n          },\n          \"UpdateApp\": {\n             \"required\": [\n                \"name\",\n                \"redirect_uri\",\n                \"application_uri\"\n             ],\n             \"type\": \"object\",\n             \"description\": \"Description of an updated application.\",\n             \"properties\": {\n                \"redirect_uri\": {\n                   \"type\": \"string\",\n                   \"description\": \"The URI for the application's OAuth redirect\"\n                },\n                \"avatar_email\": {\n                   \"type\": \"string\",\n                   \"description\": \"The e-mail address of the avatar to use for the application\"\n                },\n                \"name\": {\n                   \"type\": \"string\",\n                   \"description\": \"The name of the application\"\n                },\n                \"application_uri\": {\n                   \"type\": \"string\",\n                   \"description\": \"The URI for the application's homepage\"\n                },\n                \"description\": {\n                   \"type\": \"string\",\n                   \"description\": \"The human-readable description for the application\"\n                }\n             }\n          },\n          \"ChangeVisibility\": {\n             \"required\": [\n                \"visibility\"\n             ],\n             \"type\": \"object\",\n             \"description\": \"Change the visibility for the repository.\",\n             \"properties\": {\n                \"visibility\": {\n                   \"enum\": [\n                      \"public\",\n                      \"private\"\n                   ],\n                   \"type\": \"string\",\n                   \"description\": \"Visibility which the repository will start with\"\n                }\n             }\n          },\n          \"TeamDescription\": {\n             \"required\": [\n                \"role\"\n             ],\n             \"type\": \"object\",\n             \"description\": \"Description of a team\",\n             \"properties\": {\n                \"role\": {\n                   \"enum\": [\n                      \"member\",\n                      \"creator\",\n                      \"admin\"\n                   ],\n                   \"type\": \"string\",\n                   \"description\": \"Org wide permissions that should apply to the team\"\n                },\n                \"description\": {\n                   \"type\": \"string\",\n                   \"description\": \"Markdown description for the team\"\n                }\n             }\n          },\n          \"NewPrototype\": {\n             \"required\": [\n                \"role\",\n                \"delegate\"\n             ],\n             \"type\": \"object\",\n             \"description\": \"Description of a new prototype\",\n             \"properties\": {\n                \"activating_user\": {\n                   \"required\": [\n                      \"name\"\n                   ],\n                   \"type\": \"object\",\n                   \"description\": \"Repository creating user to whom the rule should apply\",\n                   \"properties\": {\n                      \"name\": {\n                         \"type\": \"string\",\n                         \"description\": \"The username for the activating_user\"\n                      }\n                   }\n                },\n                \"role\": {\n                   \"enum\": [\n                      \"read\",\n                      \"write\",\n                      \"admin\"\n                   ],\n                   \"type\": \"string\",\n                   \"description\": \"Role that should be applied to the delegate\"\n                },\n                \"delegate\": {\n                   \"required\": [\n                      \"name\",\n                      \"kind\"\n                   ],\n                   \"type\": \"object\",\n                   \"description\": \"Information about the user or team to which the rule grants access\",\n                   \"properties\": {\n                      \"kind\": {\n                         \"enum\": [\n                            \"user\",\n                            \"team\"\n                         ],\n                         \"type\": \"string\",\n                         \"description\": \"Whether the delegate is a user or a team\"\n                      },\n                      \"name\": {\n                         \"type\": \"string\",\n                         \"description\": \"The name for the delegate team or user\"\n                      }\n                   }\n                }\n             }\n          },\n          \"TokenPermission\": {\n             \"required\": [\n                \"role\"\n             ],\n             \"type\": \"object\",\n             \"description\": \"Description of a token permission\",\n             \"properties\": {\n                \"role\": {\n                   \"enum\": [\n                      \"read\",\n                      \"write\",\n                      \"admin\"\n                   ],\n                   \"type\": \"string\",\n                   \"description\": \"Role to use for the token\"\n                }\n             }\n          },\n          \"RunParameters\": {\n             \"additionalProperties\": false,\n             \"type\": \"object\",\n             \"description\": \"Optional run parameters for activating the build trigger\",\n             \"properties\": {\n                \"branch_name\": {\n                   \"type\": \"string\",\n                   \"description\": \"(SCM only) If specified, the name of the branch to build.\"\n                },\n                \"refs\": {\n                   \"type\": \"object\",\n                   \"description\": \"(SCM Only) If specified, the ref to build.\"\n                },\n                \"commit_sha\": {\n                   \"type\": \"string\",\n                   \"description\": \"(Custom Only) If specified, the ref/SHA1 used to checkout a git repository.\"\n                }\n             }\n          },\n          \"NewRepo\": {\n             \"required\": [\n                \"repository\",\n                \"visibility\",\n                \"description\"\n             ],\n             \"type\": \"object\",\n             \"description\": \"Description of a new repository\",\n             \"properties\": {\n                \"namespace\": {\n                   \"type\": \"string\",\n                   \"description\": \"Namespace in which the repository should be created. If omitted, the username of the caller is used\"\n                },\n                \"visibility\": {\n                   \"enum\": [\n                      \"public\",\n                      \"private\"\n                   ],\n                   \"type\": \"string\",\n                   \"description\": \"Visibility which the repository will start with\"\n                },\n                \"repository\": {\n                   \"type\": \"string\",\n                   \"description\": \"Repository name\"\n                },\n                \"description\": {\n                   \"type\": \"string\",\n                   \"description\": \"Markdown encoded description for the repository\"\n                }\n             }\n          },\n          \"RevertTag\": {\n             \"required\": [\n                \"image\"\n             ],\n             \"type\": \"object\",\n             \"description\": \"Reverts a tag to a specific image\",\n             \"properties\": {\n                \"image\": {\n                   \"type\": \"string\",\n                   \"description\": \"Image identifier to which the tag should point\"\n                }\n             }\n          },\n          \"UserView\": {\n             \"required\": [\n                \"verified\",\n                \"anonymous\",\n                \"avatar\"\n             ],\n             \"type\": \"object\",\n             \"description\": \"Describes a user\",\n             \"properties\": {\n                \"organizations\": {\n                   \"items\": {\n                      \"type\": \"object\"\n                   },\n                   \"type\": \"array\",\n                   \"description\": \"Information about the organizations in which the user is a member\"\n                },\n                \"verified\": {\n                   \"type\": \"boolean\",\n                   \"description\": \"Whether the user's email address has been verified\"\n                },\n                \"avatar\": {\n                   \"type\": \"object\",\n                   \"description\": \"Avatar data representing the user's icon\"\n                },\n                \"anonymous\": {\n                   \"type\": \"boolean\",\n                   \"description\": \"true if this user data represents a guest user\"\n                },\n                \"logins\": {\n                   \"items\": {\n                      \"type\": \"object\"\n                   },\n                   \"type\": \"array\",\n                   \"description\": \"The list of external login providers against which the user has authenticated\"\n                },\n                \"can_create_repo\": {\n                   \"type\": \"boolean\",\n                   \"description\": \"Whether the user has permission to create repositories\"\n                },\n                \"preferred_namespace\": {\n                   \"type\": \"boolean\",\n                   \"description\": \"If true, the user's namespace is the preferred namespace to display\"\n                },\n                \"email\": {\n                   \"type\": \"string\",\n                   \"description\": \"The user's email address\"\n                }\n             }\n          },\n          \"NewApp\": {\n             \"required\": [\n                \"name\"\n             ],\n             \"type\": \"object\",\n             \"description\": \"Description of a new organization application.\",\n             \"properties\": {\n                \"redirect_uri\": {\n                   \"type\": \"string\",\n                   \"description\": \"The URI for the application's OAuth redirect\"\n                },\n                \"avatar_email\": {\n                   \"type\": \"string\",\n                   \"description\": \"The e-mail address of the avatar to use for the application\"\n                },\n                \"name\": {\n                   \"type\": \"string\",\n                   \"description\": \"The name of the application\"\n                },\n                \"application_uri\": {\n                   \"type\": \"string\",\n                   \"description\": \"The URI for the application's homepage\"\n                },\n                \"description\": {\n                   \"type\": \"string\",\n                   \"description\": \"The human-readable description for the application\"\n                }\n             }\n          },\n          \"UpdateOrg\": {\n             \"type\": \"object\",\n             \"description\": \"Description of updates for an existing organization\",\n             \"properties\": {\n                \"invoice_email\": {\n                   \"type\": \"boolean\",\n                   \"description\": \"Whether the organization desires to receive emails for invoices\"\n                },\n                \"email\": {\n                   \"type\": \"string\",\n                   \"description\": \"Organization contact email\"\n                },\n                \"tag_expiration\": {\n                   \"minimum\": 0,\n                   \"type\": \"integer\",\n                   \"maximum\": 2592000\n                }\n             }\n          },\n          \"NewToken\": {\n             \"required\": [\n                \"friendlyName\"\n             ],\n             \"type\": \"object\",\n             \"description\": \"Description of a new token.\",\n             \"properties\": {\n                \"friendlyName\": {\n                   \"type\": \"string\",\n                   \"description\": \"Friendly name to help identify the token\"\n                }\n             }\n          },\n          \"NewUser\": {\n             \"required\": [\n                \"username\",\n                \"password\",\n                \"email\"\n             ],\n             \"type\": \"object\",\n             \"description\": \"Fields which must be specified for a new user.\",\n             \"properties\": {\n                \"username\": {\n                   \"type\": \"string\",\n                   \"description\": \"The user's username\"\n                },\n                \"password\": {\n                   \"type\": \"string\",\n                   \"description\": \"The user's password\"\n                },\n                \"email\": {\n                   \"type\": \"string\",\n                   \"description\": \"The user's email address\"\n                },\n                \"invite_code\": {\n                   \"type\": \"string\",\n                   \"description\": \"The optional invite code\"\n                }\n             }\n          },\n          \"RepoUpdate\": {\n             \"required\": [\n                \"description\"\n             ],\n             \"type\": \"object\",\n             \"description\": \"Fields which can be updated in a repository.\",\n             \"properties\": {\n                \"description\": {\n                   \"type\": \"string\",\n                   \"description\": \"Markdown encoded description for the repository\"\n                }\n             }\n          },\n          \"PrototypeUpdate\": {\n             \"required\": [\n                \"role\"\n             ],\n             \"type\": \"object\",\n             \"description\": \"Description of a the new prototype role\",\n             \"properties\": {\n                \"role\": {\n                   \"enum\": [\n                      \"read\",\n                      \"write\",\n                      \"admin\"\n                   ],\n                   \"type\": \"string\",\n                   \"description\": \"Role that should be applied to the permission\"\n                }\n             }\n          },\n          \"TeamPermission\": {\n             \"required\": [\n                \"role\"\n             ],\n             \"type\": \"object\",\n             \"description\": \"Description of a team permission.\",\n             \"properties\": {\n                \"role\": {\n                   \"enum\": [\n                      \"read\",\n                      \"write\",\n                      \"admin\"\n                   ],\n                   \"type\": \"string\",\n                   \"description\": \"Role to use for the team\"\n                }\n             }\n          },\n          \"GeneralError\": {\n             \"type\": \"object\",\n             \"properties\": {\n                \"message\": {\n                   \"type\": \"string\"\n                }\n             }\n          }\n       }\n    }\n }",
			"canonicalURL": "/github.com/glademiller/openapiv3@2dbc9402c4802a287d9317c44cdcd8b395f7bdbe/-/blob/fixtures/quayio.json",
			"externalURLs": [
				{
					"url": "https://github.com/glademiller/openapiv3/blob/2dbc9402c4802a287d9317c44cdcd8b395f7bdbe/fixtures/quayio.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/v1/repository/{repository}/build/{build_uuid}\": get: responses: 400: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}