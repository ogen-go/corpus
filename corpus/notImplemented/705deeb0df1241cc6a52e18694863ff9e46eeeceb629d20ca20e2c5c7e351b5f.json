{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mikaelvesavuori/better-apis-workshop"
		},
		"file": {
			"name": "schema.yml",
			"size": 0,
			"path": "api/schema.yml",
			"byteSize": 5143,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Fake User\n  description: This is a simple workshop combined with a fairly elaborate demonstration of how to approach improving an API to production-grade levels.\n\nservers:\n  - url: https://RANDOM.execute-api.REGION.amazonaws.com/shared/\n    description: API server\n\npaths:\n  /fakeUser:\n    get:\n      description: Returns a fake user\n      responses:\n        default:\n          $ref: '#/components/responses/401'\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SingleFakeUser'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '406':\n          $ref: '#/components/responses/406'\n        '429':\n          $ref: '#/components/responses/429'\n      parameters:\n        - in: header\n          name: Authorization\n          description: User name (email) of the user to authorize\n          required: true\n          schema:\n            type: string\n            minLength: 4\n            maxLength: 30\n            pattern: ^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$\n        - in: header\n          name: X-Client-Version\n          description: API client version to use\n          required: true\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 2\n            format: int32\n\n  /featureToggles:\n    post:\n      description: Returns feature toggles\n      responses:\n        default:\n          $ref: '#/components/responses/403'\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FeatureToggles'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '406':\n          $ref: '#/components/responses/406'\n        '429':\n          $ref: '#/components/responses/429'\n      requestBody:\n        $ref: '#/components/requestBodies/FeatureToggles'\n\n\ncomponents:\n  schemas:\n    SingleFakeUser:\n      type: object\n      additionalProperties: false\n      properties:\n        name:\n          type: string\n          description: The fake user's name.\n          minLength: 4\n          maxLength: 30\n          pattern: ^[\\w\\-\\s]{4,30}$\n        image:\n          type: string\n          description: The fake user's image URL (cat photo).\n          minLength: 10\n          maxLength: 100\n          pattern: /[\\w\\-\\.\\/:]*$/\n        id:\n          type: string\n          description: The fake user' ID.\n          minLength: 8\n          maxLength: 40\n          pattern: /[\\w\\-]*$/\n        email:\n          type: string\n          description: The fake user's fake email address.\n          minLength: 4\n          maxLength: 30\n          pattern: ^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$\n\n    FeatureToggles:\n      type: object\n      additionalProperties: false\n      properties:\n        enableBetaFeatures:\n          type: boolean\n          description: Can the user access beta features?\n        userGroup:\n          type: string\n          description: What is the user's group?\n          minLength: 2\n          maxLength: 24\n          pattern: ^[A-Za-z_-]{2,24}$\n\n  requestBodies:\n    FeatureToggles:\n      description: User name (email) of the user to authorize\n      required: true\n      content:\n        application/json:\n          schema:\n            type: string\n            minLength: 4\n            maxLength: 30\n            pattern: ^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$\n\n  responses:\n    401:\n      description: Unauthorized\n      content:\n        text/plain:\n          schema:\n            title: Unauthorized\n            type: string\n            example: Unauthorized\n            minLength: 3\n            maxLength: 30\n            pattern: ^[A-Za-z0-9.!\\s]{3,30}$\n    403:\n      description: Forbidden\n      content:\n        text/plain:\n          schema:\n            title: Forbidden\n            type: string\n            example: Forbidden\n            minLength: 3\n            maxLength: 30\n            pattern: ^[A-Za-z0-9.!\\s]{3,30}$\n    404:\n      description: Not found\n      content:\n        text/plain:\n          schema:\n            title: Not found\n            type: string\n            example: Not found\n            minLength: 3\n            maxLength: 30\n            pattern: ^[A-Za-z0-9.!\\s]{3,30}$\n    406:\n      description: Not acceptable\n      content:\n        text/plain:\n          schema:\n            title: Not acceptable\n            type: string\n            example: Not acceptable\n            minLength: 3\n            maxLength: 30\n            pattern: ^[A-Za-z0-9.!\\s]{3,30}$\n    429:\n      description: Too many requests\n      content:\n        text/plain:\n          schema:\n            title: Too many requests\n            type: string\n            example: Too many requests\n            minLength: 3\n            maxLength: 30\n            pattern: ^[A-Za-z0-9.!\\s]{3,30}$",
			"canonicalURL": "/github.com/mikaelvesavuori/better-apis-workshop@d230314af9e8b07482338a229633298abafd5748/-/blob/api/schema.yml",
			"externalURLs": [
				{
					"url": "https://github.com/mikaelvesavuori/better-apis-workshop/blob/d230314af9e8b07482338a229633298abafd5748/api/schema.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/fakeUser\": get: responses: 401: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}