{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "googleapis.com-people-v1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/googleapis.com-people-v1-swagger.yaml",
			"byteSize": 81967,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n  description: Provides access to information about profiles and contacts.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: People\n  version: v1\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-apisguru-categories:\n    - social\n  x-logo:\n    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: google\n      url: https://people.googleapis.com/$discovery/rest?version=v1\n      version: v1\n  x-preferred: true\n  x-providerName: googleapis.com\n  x-serviceName: people\nexternalDocs:\n  url: https://developers.google.com/people/\ntags:\n  - name: contactGroups\n  - name: people\npaths:\n  /v1/contactGroups:\n    get:\n      description: |-\n        List all contact groups owned by the authenticated user. Members of the\n        contact groups are not populated.\n      operationId: people.contactGroups.list\n      parameters:\n        - description: The maximum number of resources to return.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: |-\n            The next_page_token value returned from a previous call to\n            [ListContactGroups](/people/api/rest/v1/contactgroups/list).\n            Requests the next page of resources.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n        - description: \u003e-\n            A sync token, returned by a previous call to `contactgroups.list`.\n\n            Only resources changed since the sync token was created will be returned.\n          in: query\n          name: syncToken\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ListContactGroupsResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/contacts\n          Oauth2c:\n            - https://www.googleapis.com/auth/contacts\n        - Oauth2:\n            - https://www.googleapis.com/auth/contacts.readonly\n          Oauth2c:\n            - https://www.googleapis.com/auth/contacts.readonly\n      tags:\n        - contactGroups\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: Create a new contact group owned by the authenticated user.\n      operationId: people.contactGroups.create\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateContactGroupRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ContactGroup\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/contacts\n          Oauth2c:\n            - https://www.googleapis.com/auth/contacts\n      tags:\n        - contactGroups\n  /v1/contactGroups:batchGet:\n    get:\n      description: \u003e-\n        Get a list of contact groups owned by the authenticated user by\n        specifying\n\n        a list of contact group resource names.\n      operationId: people.contactGroups.batchGet\n      parameters:\n        - description: Specifies the maximum number of members to return for each group.\n          in: query\n          name: maxMembers\n          schema:\n            type: integer\n        - description: The resource names of the contact groups to get.\n          in: query\n          name: resourceNames\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/BatchGetContactGroupsResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/contacts\n          Oauth2c:\n            - https://www.googleapis.com/auth/contacts\n        - Oauth2:\n            - https://www.googleapis.com/auth/contacts.readonly\n          Oauth2c:\n            - https://www.googleapis.com/auth/contacts.readonly\n      tags:\n        - contactGroups\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n  /v1/people:batchGet:\n    get:\n      description: \u003e-\n        Provides information about a list of specific people by specifying a\n        list\n\n        of requested resource names. Use `people/me` to indicate the authenticated\n\n        user.\n\n        \u003cbr\u003e\n\n        The request throws a 400 error if 'personFields' is not specified.\n      operationId: people.people.getBatchGet\n      parameters:\n        - description: \u003e-\n            **Required.** A field mask to restrict which fields on each person\n            are\n\n            returned. Multiple fields can be specified by separating them with commas.\n\n            Valid values are:\n\n\n            * addresses\n\n            * ageRanges\n\n            * biographies\n\n            * birthdays\n\n            * braggingRights\n\n            * coverPhotos\n\n            * emailAddresses\n\n            * events\n\n            * genders\n\n            * imClients\n\n            * interests\n\n            * locales\n\n            * memberships\n\n            * metadata\n\n            * names\n\n            * nicknames\n\n            * occupations\n\n            * organizations\n\n            * phoneNumbers\n\n            * photos\n\n            * relations\n\n            * relationshipInterests\n\n            * relationshipStatuses\n\n            * residences\n\n            * sipAddresses\n\n            * skills\n\n            * taglines\n\n            * urls\n\n            * userDefined\n          in: query\n          name: personFields\n          schema:\n            type: string\n        - description: \u003e-\n            **Required.** Comma-separated list of person fields to be included\n            in the\n\n            response. Each path should start with `person.`: for example,\n\n            `person.names` or `person.photos`.\n          in: query\n          name: requestMask.includeField\n          schema:\n            type: string\n        - description: \u003e-\n            The resource names of the people to provide information about.\n\n\n            - To get information about the authenticated user, specify `people/me`.\n\n            - To get information about a google account, specify\n              `people/`\u003cvar\u003eaccount_id\u003c/var\u003e.\n            - To get information about a contact, specify the resource name that\n              identifies the contact as returned by\n            [`people.connections.list`](/people/api/rest/v1/people.connections/list).\n\n\n            You can include up to 50 resource names in one request.\n          in: query\n          name: resourceNames\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/GetPeopleResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/contacts\n          Oauth2c:\n            - https://www.googleapis.com/auth/contacts\n        - Oauth2:\n            - https://www.googleapis.com/auth/contacts.readonly\n          Oauth2c:\n            - https://www.googleapis.com/auth/contacts.readonly\n        - Oauth2:\n            - https://www.googleapis.com/auth/user.addresses.read\n          Oauth2c:\n            - https://www.googleapis.com/auth/user.addresses.read\n        - Oauth2:\n            - https://www.googleapis.com/auth/user.birthday.read\n          Oauth2c:\n            - https://www.googleapis.com/auth/user.birthday.read\n        - Oauth2:\n            - https://www.googleapis.com/auth/user.emails.read\n          Oauth2c:\n            - https://www.googleapis.com/auth/user.emails.read\n        - Oauth2:\n            - https://www.googleapis.com/auth/user.phonenumbers.read\n          Oauth2c:\n            - https://www.googleapis.com/auth/user.phonenumbers.read\n        - Oauth2:\n            - https://www.googleapis.com/auth/userinfo.email\n          Oauth2c:\n            - https://www.googleapis.com/auth/userinfo.email\n        - Oauth2:\n            - https://www.googleapis.com/auth/userinfo.profile\n          Oauth2c:\n            - https://www.googleapis.com/auth/userinfo.profile\n      tags:\n        - people\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n  /v1/people:createContact:\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: Create a new contact and return the person resource for that contact.\n      operationId: people.people.createContact\n      parameters:\n        - description: The resource name of the owning person resource.\n          in: query\n          name: parent\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Person\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Person\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/contacts\n          Oauth2c:\n            - https://www.googleapis.com/auth/contacts\n      tags:\n        - people\n  \"/v1/{resourceName}\":\n    delete:\n      description: |-\n        Delete an existing contact group owned by the authenticated user by\n        specifying a contact group resource name.\n      operationId: people.contactGroups.delete\n      parameters:\n        - description: Set to true to also delete the contacts in the specified group.\n          in: query\n          name: deleteContacts\n          schema:\n            type: boolean\n        - description: The resource name of the contact group to delete.\n          in: path\n          name: resourceName\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/contacts\n          Oauth2c:\n            - https://www.googleapis.com/auth/contacts\n      tags:\n        - contactGroups\n    get:\n      description: \u003e-\n        Get a specific contact group owned by the authenticated user by\n        specifying\n\n        a contact group resource name.\n      operationId: people.contactGroups.get\n      parameters:\n        - description: Specifies the maximum number of members to return.\n          in: query\n          name: maxMembers\n          schema:\n            type: integer\n        - description: \u003e-\n            **Required.** Comma-separated list of person fields to be included\n            in the\n\n            response. Each path should start with `person.`: for example,\n\n            `person.names` or `person.photos`.\n          in: query\n          name: requestMask.includeField\n          schema:\n            type: string\n        - description: The resource name of the contact group to get.\n          in: path\n          name: resourceName\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ContactGroup\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/contacts\n          Oauth2c:\n            - https://www.googleapis.com/auth/contacts\n        - Oauth2:\n            - https://www.googleapis.com/auth/contacts.readonly\n          Oauth2c:\n            - https://www.googleapis.com/auth/contacts.readonly\n        - Oauth2:\n            - https://www.googleapis.com/auth/user.addresses.read\n          Oauth2c:\n            - https://www.googleapis.com/auth/user.addresses.read\n        - Oauth2:\n            - https://www.googleapis.com/auth/user.birthday.read\n          Oauth2c:\n            - https://www.googleapis.com/auth/user.birthday.read\n        - Oauth2:\n            - https://www.googleapis.com/auth/user.emails.read\n          Oauth2c:\n            - https://www.googleapis.com/auth/user.emails.read\n        - Oauth2:\n            - https://www.googleapis.com/auth/user.phonenumbers.read\n          Oauth2c:\n            - https://www.googleapis.com/auth/user.phonenumbers.read\n        - Oauth2:\n            - https://www.googleapis.com/auth/userinfo.email\n          Oauth2c:\n            - https://www.googleapis.com/auth/userinfo.email\n        - Oauth2:\n            - https://www.googleapis.com/auth/userinfo.profile\n          Oauth2c:\n            - https://www.googleapis.com/auth/userinfo.profile\n      tags:\n        - contactGroups\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    put:\n      description: |-\n        Update the name of an existing contact group owned by the authenticated\n        user.\n      operationId: people.contactGroups.update\n      parameters:\n        - description: \u003e-\n            The resource name for the contact group, assigned by the server. An\n            ASCII\n\n            string, in the form of `contactGroups/`\u003cvar\u003econtact_group_id\u003c/var\u003e.\n          in: path\n          name: resourceName\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateContactGroupRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ContactGroup\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/contacts\n          Oauth2c:\n            - https://www.googleapis.com/auth/contacts\n      tags:\n        - contactGroups\n  \"/v1/{resourceName}/connections\":\n    get:\n      description: |-\n        Provides a list of the authenticated user's contacts merged with any\n        connected profiles.\n        \u003cbr\u003e\n        The request throws a 400 error if 'personFields' is not specified.\n      operationId: people.people.connections.list\n      parameters:\n        - description: \u003e-\n            The number of connections to include in the response. Valid values\n            are\n\n            between 1 and 2000, inclusive. Defaults to 100.\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: The token of the page to be returned.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n        - description: \u003e-\n            **Required.** A field mask to restrict which fields on each person\n            are\n\n            returned. Multiple fields can be specified by separating them with commas.\n\n            Valid values are:\n\n\n            * addresses\n\n            * ageRanges\n\n            * biographies\n\n            * birthdays\n\n            * braggingRights\n\n            * coverPhotos\n\n            * emailAddresses\n\n            * events\n\n            * genders\n\n            * imClients\n\n            * interests\n\n            * locales\n\n            * memberships\n\n            * metadata\n\n            * names\n\n            * nicknames\n\n            * occupations\n\n            * organizations\n\n            * phoneNumbers\n\n            * photos\n\n            * relations\n\n            * relationshipInterests\n\n            * relationshipStatuses\n\n            * residences\n\n            * sipAddresses\n\n            * skills\n\n            * taglines\n\n            * urls\n\n            * userDefined\n          in: query\n          name: personFields\n          schema:\n            type: string\n        - description: \u003e-\n            **Required.** Comma-separated list of person fields to be included\n            in the\n\n            response. Each path should start with `person.`: for example,\n\n            `person.names` or `person.photos`.\n          in: query\n          name: requestMask.includeField\n          schema:\n            type: string\n        - description: \u003e-\n            Whether the response should include a sync token, which can be used\n            to get\n\n            all changes since the last request. For subsequent sync requests use the\n\n            `sync_token` param instead. Initial sync requests that specify\n\n            `request_sync_token` have an additional rate limit.\n          in: query\n          name: requestSyncToken\n          schema:\n            type: boolean\n        - description: The resource name to return connections for. Only `people/me` is\n            valid.\n          in: path\n          name: resourceName\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n        - description: |-\n            The order in which the connections should be sorted. Defaults to\n            `LAST_MODIFIED_ASCENDING`.\n          in: query\n          name: sortOrder\n          schema:\n            type: string\n            enum:\n              - LAST_MODIFIED_ASCENDING\n              - LAST_MODIFIED_DESCENDING\n              - FIRST_NAME_ASCENDING\n              - LAST_NAME_ASCENDING\n        - description: \u003e-\n            A sync token returned by a previous call to\n            `people.connections.list`.\n\n            Only resources changed since the sync token was created will be returned.\n\n            Sync requests that specify `sync_token` have an additional rate limit.\n          in: query\n          name: syncToken\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ListConnectionsResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/contacts\n          Oauth2c:\n            - https://www.googleapis.com/auth/contacts\n        - Oauth2:\n            - https://www.googleapis.com/auth/contacts.readonly\n          Oauth2c:\n            - https://www.googleapis.com/auth/contacts.readonly\n      tags:\n        - people\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n  \"/v1/{resourceName}/members:modify\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    post:\n      description: |-\n        Modify the members of a contact group owned by the authenticated user.\n        \u003cbr\u003e\n        The only system contact groups that can have members added are\n        `contactGroups/myContacts` and `contactGroups/starred`. Other system\n        contact groups are deprecated and can only have contacts removed.\n      operationId: people.contactGroups.members.modify\n      parameters:\n        - description: The resource name of the contact group to modify.\n          in: path\n          name: resourceName\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ModifyContactGroupMembersRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/ModifyContactGroupMembersResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/contacts\n          Oauth2c:\n            - https://www.googleapis.com/auth/contacts\n      tags:\n        - contactGroups\n  \"/v1/{resourceName}:deleteContact\":\n    delete:\n      description: Delete a contact person. Any non-contact data will not be deleted.\n      operationId: people.people.deleteContact\n      parameters:\n        - description: The resource name of the contact to delete.\n          in: path\n          name: resourceName\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/contacts\n          Oauth2c:\n            - https://www.googleapis.com/auth/contacts\n      tags:\n        - people\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n  \"/v1/{resourceName}:deleteContactPhoto\":\n    delete:\n      description: Delete a contact's photo.\n      operationId: people.people.deleteContactPhoto\n      parameters:\n        - description: \u003e-\n            **Optional.** Not specifying any fields will skip the post mutate\n            read.\n\n            A field mask to restrict which fields on the person are\n\n            returned. Multiple fields can be specified by separating them with commas.\n\n            Valid values are:\n\n\n            * addresses\n\n            * ageRanges\n\n            * biographies\n\n            * birthdays\n\n            * braggingRights\n\n            * coverPhotos\n\n            * emailAddresses\n\n            * events\n\n            * genders\n\n            * imClients\n\n            * interests\n\n            * locales\n\n            * memberships\n\n            * metadata\n\n            * names\n\n            * nicknames\n\n            * occupations\n\n            * organizations\n\n            * phoneNumbers\n\n            * photos\n\n            * relations\n\n            * relationshipInterests\n\n            * relationshipStatuses\n\n            * residences\n\n            * sipAddresses\n\n            * skills\n\n            * taglines\n\n            * urls\n\n            * userDefined\n          in: query\n          name: personFields\n          schema:\n            type: string\n        - description: The resource name of the contact whose photo will be deleted.\n          in: path\n          name: resourceName\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/DeleteContactPhotoResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/contacts\n          Oauth2c:\n            - https://www.googleapis.com/auth/contacts\n      tags:\n        - people\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n  \"/v1/{resourceName}:updateContact\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    patch:\n      description: \u003e-\n        Update contact data for an existing contact person. Any non-contact data\n\n        will not be modified.\n\n\n        The request throws a 400 error if `updatePersonFields` is not specified.\n\n        \u003cbr\u003e\n\n        The request throws a 400 error if `person.metadata.sources` is not\n\n        specified for the contact to be updated.\n\n        \u003cbr\u003e\n\n        The request throws a 400 error with an error with reason\n\n        `\"failedPrecondition\"` if `person.metadata.sources.etag` is different than\n\n        the contact's etag, which indicates the contact has changed since its data\n\n        was read. Clients should get the latest person and re-apply their updates\n\n        to the latest person.\n      operationId: people.people.updateContact\n      parameters:\n        - description: \u003e-\n            The resource name for the person, assigned by the server. An ASCII\n            string\n\n            with a max length of 27 characters, in the form of\n\n            `people/`\u003cvar\u003eperson_id\u003c/var\u003e.\n          in: path\n          name: resourceName\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n        - description: \u003e-\n            **Required.** A field mask to restrict which fields on the person\n            are\n\n            updated. Multiple fields can be specified by separating them with commas.\n\n            All updated fields will be replaced. Valid values are:\n\n\n            * addresses\n\n            * biographies\n\n            * birthdays\n\n            * emailAddresses\n\n            * events\n\n            * genders\n\n            * imClients\n\n            * interests\n\n            * locales\n\n            * memberships\n\n            * names\n\n            * nicknames\n\n            * occupations\n\n            * organizations\n\n            * phoneNumbers\n\n            * relations\n\n            * residences\n\n            * sipAddresses\n\n            * urls\n\n            * userDefined\n          in: query\n          name: updatePersonFields\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Person\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Person\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/contacts\n          Oauth2c:\n            - https://www.googleapis.com/auth/contacts\n      tags:\n        - people\n  \"/v1/{resourceName}:updateContactPhoto\":\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/uploadType\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n    patch:\n      description: Update a contact's photo.\n      operationId: people.people.updateContactPhoto\n      parameters:\n        - description: Person resource name\n          in: path\n          name: resourceName\n          required: true\n          x-reservedExpansion: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateContactPhotoRequest\"\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/UpdateContactPhotoResponse\"\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/contacts\n          Oauth2c:\n            - https://www.googleapis.com/auth/contacts\n      tags:\n        - people\nservers:\n  - url: https://people.googleapis.com/\ncomponents:\n  parameters:\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        type: string\n        enum:\n          - json\n          - media\n          - proto\n        default: json\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API\n        access, quota, and reports. Required unless you provide an OAuth 2.0\n        token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n        default: true\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications. Can be\n        any arbitrary string assigned to a user, but should not exceed 40\n        characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        type: string\n        enum:\n          - \"1\"\n          - \"2\"\n  requestBodies:\n    Person:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Person\"\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/contacts: See, edit, download, and permanently delete your contacts\n            https://www.googleapis.com/auth/contacts.readonly: See and download your contacts\n            https://www.googleapis.com/auth/user.addresses.read: View your street addresses\n            https://www.googleapis.com/auth/user.birthday.read: View your complete date of birth\n            https://www.googleapis.com/auth/user.emails.read: View your email addresses\n            https://www.googleapis.com/auth/user.phonenumbers.read: View your phone numbers\n            https://www.googleapis.com/auth/userinfo.email: View your email address\n            https://www.googleapis.com/auth/userinfo.profile: See your personal info, including any personal info you've made\n              publicly available\n    Oauth2c:\n      description: Oauth 2.0 accessCode authentication\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n          scopes:\n            https://www.googleapis.com/auth/contacts: See, edit, download, and permanently delete your contacts\n            https://www.googleapis.com/auth/contacts.readonly: See and download your contacts\n            https://www.googleapis.com/auth/user.addresses.read: View your street addresses\n            https://www.googleapis.com/auth/user.birthday.read: View your complete date of birth\n            https://www.googleapis.com/auth/user.emails.read: View your email addresses\n            https://www.googleapis.com/auth/user.phonenumbers.read: View your phone numbers\n            https://www.googleapis.com/auth/userinfo.email: View your email address\n            https://www.googleapis.com/auth/userinfo.profile: See your personal info, including any personal info you've made\n              publicly available\n  schemas:\n    Address:\n      description: \u003e-\n        A person's physical address. May be a P.O. box or street address. All\n        fields\n\n        are optional.\n      properties:\n        city:\n          description: The city of the address.\n          type: string\n        country:\n          description: The country of the address.\n          type: string\n        countryCode:\n          description: \u003e-\n            The [ISO 3166-1 alpha-2](http://www.iso.org/iso/country_codes.htm)\n            country\n\n            code of the address.\n          type: string\n        extendedAddress:\n          description: The extended address of the address; for example, the apartment\n            number.\n          type: string\n        formattedType:\n          description: \u003e-\n            The read-only type of the address translated and formatted in the\n            viewer's\n\n            account locale or the `Accept-Language` HTTP header locale.\n          type: string\n        formattedValue:\n          description: \u003e-\n            The unstructured value of the address. If this is not set by the\n            user it\n\n            will be automatically constructed from structured values.\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        poBox:\n          description: The P.O. box of the address.\n          type: string\n        postalCode:\n          description: The postal code of the address.\n          type: string\n        region:\n          description: The region of the address; for example, the state or province.\n          type: string\n        streetAddress:\n          description: The street address.\n          type: string\n        type:\n          description: \u003e-\n            The type of the address. The type can be custom or one of these\n            predefined\n\n            values:\n\n\n            * `home`\n\n            * `work`\n\n            * `other`\n          type: string\n      type: object\n    AgeRangeType:\n      description: A person's age range.\n      properties:\n        ageRange:\n          description: The age range.\n          enum:\n            - AGE_RANGE_UNSPECIFIED\n            - LESS_THAN_EIGHTEEN\n            - EIGHTEEN_TO_TWENTY\n            - TWENTY_ONE_OR_OLDER\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n      type: object\n    BatchGetContactGroupsResponse:\n      description: The response to a batch get contact groups request.\n      properties:\n        responses:\n          description: The list of responses for each requested contact group resource.\n          items:\n            $ref: \"#/components/schemas/ContactGroupResponse\"\n          type: array\n      type: object\n    Biography:\n      description: A person's short biography.\n      properties:\n        contentType:\n          description: The content type of the biography.\n          enum:\n            - CONTENT_TYPE_UNSPECIFIED\n            - TEXT_PLAIN\n            - TEXT_HTML\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        value:\n          description: The short biography.\n          type: string\n      type: object\n    Birthday:\n      description: |-\n        A person's birthday. At least one of the `date` and `text` fields are\n        specified. The `date` and `text` fields typically represent the same\n        date, but are not guaranteed to.\n      properties:\n        date:\n          $ref: \"#/components/schemas/Date\"\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        text:\n          description: A free-form string representing the user's birthday.\n          type: string\n      type: object\n    BraggingRights:\n      description: A person's bragging rights.\n      properties:\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        value:\n          description: The bragging rights; for example, `climbed mount everest`.\n          type: string\n      type: object\n    ContactGroup:\n      description: A contact group.\n      properties:\n        etag:\n          description: \u003e-\n            The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of\n            the\n\n            resource. Used for web cache validation.\n          type: string\n        formattedName:\n          description: \u003e-\n            The read-only name translated and formatted in the viewer's account\n            locale\n\n            or the `Accept-Language` HTTP header locale for system groups names.\n\n            Group names set by the owner are the same as name.\n          type: string\n        groupType:\n          description: The read-only contact group type.\n          enum:\n            - GROUP_TYPE_UNSPECIFIED\n            - USER_CONTACT_GROUP\n            - SYSTEM_CONTACT_GROUP\n          type: string\n        memberCount:\n          description: \u003e-\n            The total number of contacts in the group irrespective of max\n            members in\n\n            specified in the request.\n          format: int32\n          type: integer\n        memberResourceNames:\n          description: \u003e-\n            The list of contact person resource names that are members of the\n            contact\n\n            group. The field is not populated for LIST requests and can only be updated\n\n            through the\n\n            [ModifyContactGroupMembers](/people/api/rest/v1/contactgroups/members/modify).\n          items:\n            type: string\n          type: array\n        metadata:\n          $ref: \"#/components/schemas/ContactGroupMetadata\"\n        name:\n          description: \u003e-\n            The contact group name set by the group owner or a system provided\n            name\n\n            for system groups.\n          type: string\n        resourceName:\n          description: \u003e-\n            The resource name for the contact group, assigned by the server. An\n            ASCII\n\n            string, in the form of `contactGroups/`\u003cvar\u003econtact_group_id\u003c/var\u003e.\n          type: string\n      type: object\n    ContactGroupMembership:\n      description: A Google contact group membership.\n      properties:\n        contactGroupId:\n          description: The read-only contact group ID for the contact group membership.\n          type: string\n        contactGroupResourceName:\n          description: \u003e-\n            The resource name for the contact group, assigned by the server. An\n            ASCII\n\n            string, in the form of `contactGroups/`\u003cvar\u003econtact_group_id\u003c/var\u003e.\n\n            Only contact_group_resource_name can be used for modifying memberships.\n\n            Any contact group membership can be removed, but only user group or\n\n            \"myContacts\" or \"starred\" system groups memberships can be added. A\n\n            contact must always have at least one contact group membership.\n          type: string\n      type: object\n    ContactGroupMetadata:\n      description: The read-only metadata about a contact group.\n      properties:\n        deleted:\n          description: \u003e-\n            True if the contact group resource has been deleted. Populated only\n            for\n\n            [`ListContactGroups`](/people/api/rest/v1/contactgroups/list) requests\n\n            that include a sync token.\n          type: boolean\n        updateTime:\n          description: The time the group was last updated.\n          format: google-datetime\n          type: string\n      type: object\n    ContactGroupResponse:\n      description: The response for a specific contact group.\n      properties:\n        contactGroup:\n          $ref: \"#/components/schemas/ContactGroup\"\n        requestedResourceName:\n          description: The original requested resource name.\n          type: string\n        status:\n          $ref: \"#/components/schemas/Status\"\n      type: object\n    CoverPhoto:\n      description: |-\n        A person's read-only cover photo. A large image shown on the person's\n        profile page that represents who they are or what they care about.\n      properties:\n        default:\n          description: |-\n            True if the cover photo is the default cover photo;\n            false if the cover photo is a user-provided cover photo.\n          type: boolean\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        url:\n          description: The URL of the cover photo.\n          type: string\n      type: object\n    CreateContactGroupRequest:\n      description: A request to create a new contact group.\n      properties:\n        contactGroup:\n          $ref: \"#/components/schemas/ContactGroup\"\n      type: object\n    Date:\n      description: \u003e-\n        Represents a whole or partial calendar date, e.g. a birthday. The time\n        of day\n\n        and time zone are either specified elsewhere or are not significant. The date\n\n        is relative to the Proleptic Gregorian Calendar. This can represent:\n\n\n        * A full date, with non-zero year, month and day values\n\n        * A month and day value, with a zero year, e.g. an anniversary\n\n        * A year on its own, with zero month and day values\n\n        * A year and month value, with a zero day, e.g. a credit card expiration date\n\n\n        Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.\n      properties:\n        day:\n          description: \u003e-\n            Day of month. Must be from 1 to 31 and valid for the year and month,\n            or 0\n\n            if specifying a year by itself or a year and month where the day is not\n\n            significant.\n          format: int32\n          type: integer\n        month:\n          description: \u003e-\n            Month of year. Must be from 1 to 12, or 0 if specifying a year\n            without a\n\n            month and day.\n          format: int32\n          type: integer\n        year:\n          description: \u003e-\n            Year of date. Must be from 1 to 9999, or 0 if specifying a date\n            without\n\n            a year.\n          format: int32\n          type: integer\n      type: object\n    DeleteContactPhotoResponse:\n      description: The response for deleteing a contact's photo.\n      properties:\n        person:\n          $ref: \"#/components/schemas/Person\"\n      type: object\n    DomainMembership:\n      description: A read-only G Suite Domain membership.\n      properties:\n        inViewerDomain:\n          description: True if the person is in the viewer's G Suite domain.\n          type: boolean\n      type: object\n    EmailAddress:\n      description: A person's email address.\n      properties:\n        displayName:\n          description: The display name of the email.\n          type: string\n        formattedType:\n          description: \u003e-\n            The read-only type of the email address translated and formatted in\n            the\n\n            viewer's account locale or the `Accept-Language` HTTP header locale.\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        type:\n          description: \u003e-\n            The type of the email address. The type can be custom or one of\n            these\n\n            predefined values:\n\n\n            * `home`\n\n            * `work`\n\n            * `other`\n          type: string\n        value:\n          description: The email address.\n          type: string\n      type: object\n    Empty:\n      description: \u003e-\n        A generic empty message that you can re-use to avoid defining duplicated\n\n        empty messages in your APIs. A typical example is to use it as the request\n\n        or the response type of an API method. For instance:\n\n            service Foo {\n              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n            }\n\n        The JSON representation for `Empty` is empty JSON object `{}`.\n      properties: {}\n      type: object\n    Event:\n      description: An event related to the person.\n      properties:\n        date:\n          $ref: \"#/components/schemas/Date\"\n        formattedType:\n          description: |-\n            The read-only type of the event translated and formatted in the\n            viewer's account locale or the `Accept-Language` HTTP header locale.\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        type:\n          description: \u003e-\n            The type of the event. The type can be custom or one of these\n            predefined\n\n            values:\n\n\n            * `anniversary`\n\n            * `other`\n          type: string\n      type: object\n    FieldMetadata:\n      description: Metadata about a field.\n      properties:\n        primary:\n          description: \u003e-\n            True if the field is the primary field; false if the field is a\n            secondary\n\n            field.\n          type: boolean\n        source:\n          $ref: \"#/components/schemas/Source\"\n        verified:\n          description: |-\n            True if the field is verified; false if the field is unverified. A\n            verified field is typically a name, email address, phone number, or\n            website that has been confirmed to be owned by the person.\n          type: boolean\n      type: object\n    Gender:\n      description: A person's gender.\n      properties:\n        formattedValue:\n          description: \u003e-\n            The read-only value of the gender translated and formatted in the\n            viewer's\n\n            account locale or the `Accept-Language` HTTP header locale.\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        value:\n          description: |-\n            The gender for the person. The gender can be custom or one of these\n            predefined values:\n\n            * `male`\n            * `female`\n            * `other`\n            * `unknown`\n          type: string\n      type: object\n    GetPeopleResponse:\n      properties:\n        responses:\n          description: The response for each requested resource name.\n          items:\n            $ref: \"#/components/schemas/PersonResponse\"\n          type: array\n      type: object\n    ImClient:\n      description: A person's instant messaging client.\n      properties:\n        formattedProtocol:\n          description: \u003e-\n            The read-only protocol of the IM client formatted in the viewer's\n            account\n\n            locale or the `Accept-Language` HTTP header locale.\n          type: string\n        formattedType:\n          description: |-\n            The read-only type of the IM client translated and formatted in the\n            viewer's account locale or the `Accept-Language` HTTP header locale.\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        protocol:\n          description: \u003e-\n            The protocol of the IM client. The protocol can be custom or one of\n            these\n\n            predefined values:\n\n\n            * `aim`\n\n            * `msn`\n\n            * `yahoo`\n\n            * `skype`\n\n            * `qq`\n\n            * `googleTalk`\n\n            * `icq`\n\n            * `jabber`\n\n            * `netMeeting`\n          type: string\n        type:\n          description: |-\n            The type of the IM client. The type can be custom or one of these\n            predefined values:\n\n            * `home`\n            * `work`\n            * `other`\n          type: string\n        username:\n          description: The user name used in the IM client.\n          type: string\n      type: object\n    Interest:\n      description: One of the person's interests.\n      properties:\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        value:\n          description: The interest; for example, `stargazing`.\n          type: string\n      type: object\n    ListConnectionsResponse:\n      properties:\n        connections:\n          description: The list of people that the requestor is connected to.\n          items:\n            $ref: \"#/components/schemas/Person\"\n          type: array\n        nextPageToken:\n          description: The token that can be used to retrieve the next page of results.\n          type: string\n        nextSyncToken:\n          description: The token that can be used to retrieve changes since the last\n            request.\n          type: string\n        totalItems:\n          description: The total number of items in the list without pagination.\n          format: int32\n          type: integer\n        totalPeople:\n          description: |-\n            **DEPRECATED** (Please use totalItems)\n            The total number of people in the list without pagination.\n          format: int32\n          type: integer\n      type: object\n    ListContactGroupsResponse:\n      description: The response to a list contact groups request.\n      properties:\n        contactGroups:\n          description: |-\n            The list of contact groups. Members of the contact groups are not\n            populated.\n          items:\n            $ref: \"#/components/schemas/ContactGroup\"\n          type: array\n        nextPageToken:\n          description: The token that can be used to retrieve the next page of results.\n          type: string\n        nextSyncToken:\n          description: The token that can be used to retrieve changes since the last\n            request.\n          type: string\n        totalItems:\n          description: The total number of items in the list without pagination.\n          format: int32\n          type: integer\n      type: object\n    Locale:\n      description: A person's locale preference.\n      properties:\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        value:\n          description: |-\n            The well-formed [IETF BCP 47](https://tools.ietf.org/html/bcp47)\n            language tag representing the locale.\n          type: string\n      type: object\n    Membership:\n      description: |-\n        A person's membership in a group. Only contact group memberships can be\n        modified.\n      properties:\n        contactGroupMembership:\n          $ref: \"#/components/schemas/ContactGroupMembership\"\n        domainMembership:\n          $ref: \"#/components/schemas/DomainMembership\"\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n      type: object\n    ModifyContactGroupMembersRequest:\n      description: |-\n        A request to modify an existing contact group's members. Contacts can be\n        removed from any group but they can only be added to a user group or\n        \"myContacts\" or \"starred\" system groups.\n      properties:\n        resourceNamesToAdd:\n          description: \u003e-\n            The resource names of the contact people to add in the form of in\n            the form\n\n            `people/`\u003cvar\u003eperson_id\u003c/var\u003e.\n          items:\n            type: string\n          type: array\n        resourceNamesToRemove:\n          description: \u003e-\n            The resource names of the contact people to remove in the form of in\n            the\n\n            form of `people/`\u003cvar\u003eperson_id\u003c/var\u003e.\n          items:\n            type: string\n          type: array\n      type: object\n    ModifyContactGroupMembersResponse:\n      description: The response to a modify contact group members request.\n      properties:\n        canNotRemoveLastContactGroupResourceNames:\n          description: |-\n            The contact people resource names that cannot be removed from their\n            last contact group.\n          items:\n            type: string\n          type: array\n        notFoundResourceNames:\n          description: The contact people resource names that were not found.\n          items:\n            type: string\n          type: array\n      type: object\n    Name:\n      description: A person's name. If the name is a mononym, the family name is empty.\n      properties:\n        displayName:\n          description: \u003e-\n            The read-only display name formatted according to the locale\n            specified by\n\n            the viewer's account or the `Accept-Language` HTTP header.\n          type: string\n        displayNameLastFirst:\n          description: \u003e-\n            The read-only display name with the last name first formatted\n            according to\n\n            the locale specified by the viewer's account or the\n\n            `Accept-Language` HTTP header.\n          type: string\n        familyName:\n          description: The family name.\n          type: string\n        givenName:\n          description: The given name.\n          type: string\n        honorificPrefix:\n          description: The honorific prefixes, such as `Mrs.` or `Dr.`\n          type: string\n        honorificSuffix:\n          description: The honorific suffixes, such as `Jr.`\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        middleName:\n          description: The middle name(s).\n          type: string\n        phoneticFamilyName:\n          description: The family name spelled as it sounds.\n          type: string\n        phoneticFullName:\n          description: The full name spelled as it sounds.\n          type: string\n        phoneticGivenName:\n          description: The given name spelled as it sounds.\n          type: string\n        phoneticHonorificPrefix:\n          description: The honorific prefixes spelled as they sound.\n          type: string\n        phoneticHonorificSuffix:\n          description: The honorific suffixes spelled as they sound.\n          type: string\n        phoneticMiddleName:\n          description: The middle name(s) spelled as they sound.\n          type: string\n      type: object\n    Nickname:\n      description: A person's nickname.\n      properties:\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        type:\n          description: The type of the nickname.\n          enum:\n            - DEFAULT\n            - MAIDEN_NAME\n            - INITIALS\n            - GPLUS\n            - OTHER_NAME\n          type: string\n        value:\n          description: The nickname.\n          type: string\n      type: object\n    Occupation:\n      description: A person's occupation.\n      properties:\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        value:\n          description: The occupation; for example, `carpenter`.\n          type: string\n      type: object\n    Organization:\n      description: |-\n        A person's past or current organization. Overlapping date ranges are\n        permitted.\n      properties:\n        current:\n          description: |-\n            True if the organization is the person's current organization;\n            false if the organization is a past organization.\n          type: boolean\n        department:\n          description: The person's department at the organization.\n          type: string\n        domain:\n          description: |-\n            The domain name associated with the organization; for example,\n            `google.com`.\n          type: string\n        endDate:\n          $ref: \"#/components/schemas/Date\"\n        formattedType:\n          description: \u003e-\n            The read-only type of the organization translated and formatted in\n            the\n\n            viewer's account locale or the `Accept-Language` HTTP header locale.\n          type: string\n        jobDescription:\n          description: The person's job description at the organization.\n          type: string\n        location:\n          description: The location of the organization office the person works at.\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        name:\n          description: The name of the organization.\n          type: string\n        phoneticName:\n          description: The phonetic name of the organization.\n          type: string\n        startDate:\n          $ref: \"#/components/schemas/Date\"\n        symbol:\n          description: \u003e-\n            The symbol associated with the organization; for example, a stock\n            ticker\n\n            symbol, abbreviation, or acronym.\n          type: string\n        title:\n          description: The person's job title at the organization.\n          type: string\n        type:\n          description: \u003e-\n            The type of the organization. The type can be custom or  one of\n            these\n\n            predefined values:\n\n\n            * `work`\n\n            * `school`\n          type: string\n      type: object\n    Person:\n      description: \u003e-\n        Information about a person merged from various data sources such as the\n\n        authenticated user's contacts and profile data.\n\n\n        Most fields can have multiple items. The items in a field have no guaranteed\n\n        order, but each non-empty field is guaranteed to have exactly one field with\n\n        `metadata.primary` set to true.\n      properties:\n        addresses:\n          description: The person's street addresses.\n          items:\n            $ref: \"#/components/schemas/Address\"\n          type: array\n        ageRange:\n          description: |-\n            **DEPRECATED** (Please use `person.ageRanges` instead)**\n\n            The person's read-only age range.\n          enum:\n            - AGE_RANGE_UNSPECIFIED\n            - LESS_THAN_EIGHTEEN\n            - EIGHTEEN_TO_TWENTY\n            - TWENTY_ONE_OR_OLDER\n          type: string\n        ageRanges:\n          description: The person's read-only age ranges.\n          items:\n            $ref: \"#/components/schemas/AgeRangeType\"\n          type: array\n        biographies:\n          description: The person's biographies.\n          items:\n            $ref: \"#/components/schemas/Biography\"\n          type: array\n        birthdays:\n          description: The person's birthdays.\n          items:\n            $ref: \"#/components/schemas/Birthday\"\n          type: array\n        braggingRights:\n          description: The person's bragging rights.\n          items:\n            $ref: \"#/components/schemas/BraggingRights\"\n          type: array\n        coverPhotos:\n          description: The person's read-only cover photos.\n          items:\n            $ref: \"#/components/schemas/CoverPhoto\"\n          type: array\n        emailAddresses:\n          description: The person's email addresses.\n          items:\n            $ref: \"#/components/schemas/EmailAddress\"\n          type: array\n        etag:\n          description: \u003e-\n            The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of\n            the\n\n            resource. Used for web cache validation.\n          type: string\n        events:\n          description: The person's events.\n          items:\n            $ref: \"#/components/schemas/Event\"\n          type: array\n        genders:\n          description: The person's genders.\n          items:\n            $ref: \"#/components/schemas/Gender\"\n          type: array\n        imClients:\n          description: The person's instant messaging clients.\n          items:\n            $ref: \"#/components/schemas/ImClient\"\n          type: array\n        interests:\n          description: The person's interests.\n          items:\n            $ref: \"#/components/schemas/Interest\"\n          type: array\n        locales:\n          description: The person's locale preferences.\n          items:\n            $ref: \"#/components/schemas/Locale\"\n          type: array\n        memberships:\n          description: The person's group memberships.\n          items:\n            $ref: \"#/components/schemas/Membership\"\n          type: array\n        metadata:\n          $ref: \"#/components/schemas/PersonMetadata\"\n        names:\n          description: The person's names.\n          items:\n            $ref: \"#/components/schemas/Name\"\n          type: array\n        nicknames:\n          description: The person's nicknames.\n          items:\n            $ref: \"#/components/schemas/Nickname\"\n          type: array\n        occupations:\n          description: The person's occupations.\n          items:\n            $ref: \"#/components/schemas/Occupation\"\n          type: array\n        organizations:\n          description: The person's past or current organizations.\n          items:\n            $ref: \"#/components/schemas/Organization\"\n          type: array\n        phoneNumbers:\n          description: The person's phone numbers.\n          items:\n            $ref: \"#/components/schemas/PhoneNumber\"\n          type: array\n        photos:\n          description: The person's read-only photos.\n          items:\n            $ref: \"#/components/schemas/Photo\"\n          type: array\n        relations:\n          description: The person's relations.\n          items:\n            $ref: \"#/components/schemas/Relation\"\n          type: array\n        relationshipInterests:\n          description: The person's read-only relationship interests.\n          items:\n            $ref: \"#/components/schemas/RelationshipInterest\"\n          type: array\n        relationshipStatuses:\n          description: The person's read-only relationship statuses.\n          items:\n            $ref: \"#/components/schemas/RelationshipStatus\"\n          type: array\n        residences:\n          description: The person's residences.\n          items:\n            $ref: \"#/components/schemas/Residence\"\n          type: array\n        resourceName:\n          description: \u003e-\n            The resource name for the person, assigned by the server. An ASCII\n            string\n\n            with a max length of 27 characters, in the form of\n\n            `people/`\u003cvar\u003eperson_id\u003c/var\u003e.\n          type: string\n        sipAddresses:\n          description: The person's SIP addresses.\n          items:\n            $ref: \"#/components/schemas/SipAddress\"\n          type: array\n        skills:\n          description: The person's skills.\n          items:\n            $ref: \"#/components/schemas/Skill\"\n          type: array\n        taglines:\n          description: The person's read-only taglines.\n          items:\n            $ref: \"#/components/schemas/Tagline\"\n          type: array\n        urls:\n          description: The person's associated URLs.\n          items:\n            $ref: \"#/components/schemas/Url\"\n          type: array\n        userDefined:\n          description: The person's user defined data.\n          items:\n            $ref: \"#/components/schemas/UserDefined\"\n          type: array\n      type: object\n    PersonMetadata:\n      description: The read-only metadata about a person.\n      properties:\n        deleted:\n          description: \u003e-\n            True if the person resource has been deleted. Populated only for\n\n            [`connections.list`](/people/api/rest/v1/people.connections/list) requests\n\n            that include a sync token.\n          type: boolean\n        linkedPeopleResourceNames:\n          description: Resource names of people linked to this resource.\n          items:\n            type: string\n          type: array\n        objectType:\n          description: |-\n            **DEPRECATED** (Please use\n            `person.metadata.sources.profileMetadata.objectType` instead)\n\n            The type of the person object.\n          enum:\n            - OBJECT_TYPE_UNSPECIFIED\n            - PERSON\n            - PAGE\n          type: string\n        previousResourceNames:\n          description: \u003e-\n            Any former resource names this person has had. Populated only for\n\n            [`connections.list`](/people/api/rest/v1/people.connections/list) requests\n\n            that include a sync token.\n\n\n            The resource name may change when adding or removing fields that link a\n\n            contact and profile such as a verified email, verified phone number, or\n\n            profile URL.\n          items:\n            type: string\n          type: array\n        sources:\n          description: The sources of data for the person.\n          items:\n            $ref: \"#/components/schemas/Source\"\n          type: array\n      type: object\n    PersonResponse:\n      description: The response for a single person\n      properties:\n        httpStatusCode:\n          description: |-\n            **DEPRECATED** (Please use status instead)\n\n            [HTTP 1.1 status code]\n            (http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html).\n          format: int32\n          type: integer\n        person:\n          $ref: \"#/components/schemas/Person\"\n        requestedResourceName:\n          description: \u003e-\n            The original requested resource name. May be different than the\n            resource\n\n            name on the returned person.\n\n\n            The resource name can change when adding or removing fields that link a\n\n            contact and profile such as a verified email, verified phone number, or a\n\n            profile URL.\n          type: string\n        status:\n          $ref: \"#/components/schemas/Status\"\n      type: object\n    PhoneNumber:\n      description: A person's phone number.\n      properties:\n        canonicalForm:\n          description: \u003e-\n            The read-only canonicalized [ITU-T\n\n            E.164](https://law.resource.org/pub/us/cfr/ibr/004/itu-t.E.164.1.2008.pdf)\n\n            form of the phone number.\n          type: string\n        formattedType:\n          description: \u003e-\n            The read-only type of the phone number translated and formatted in\n            the\n\n            viewer's account locale or the `Accept-Language` HTTP header locale.\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        type:\n          description: |-\n            The type of the phone number. The type can be custom or one of these\n            predefined values:\n\n            * `home`\n            * `work`\n            * `mobile`\n            * `homeFax`\n            * `workFax`\n            * `otherFax`\n            * `pager`\n            * `workMobile`\n            * `workPager`\n            * `main`\n            * `googleVoice`\n            * `other`\n          type: string\n        value:\n          description: The phone number.\n          type: string\n      type: object\n    Photo:\n      description: |-\n        A person's read-only photo. A picture shown next to the person's name to\n        help others recognize the person.\n      properties:\n        default:\n          description: |-\n            True if the photo is a default photo;\n            false if the photo is a user-provided photo.\n          type: boolean\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        url:\n          description: \u003e-\n            The URL of the photo. You can change the desired size by appending a\n            query\n\n            parameter `sz=`\u003cvar\u003esize\u003c/var\u003e at the end of the url. Example:\n\n            `https://lh3.googleusercontent.com/-T_wVWLlmg7w/AAAAAAAAAAI/AAAAAAAABa8/00gzXvDBYqw/s100/photo.jpg?sz=50`\n          type: string\n      type: object\n    ProfileMetadata:\n      description: The read-only metadata about a profile.\n      properties:\n        objectType:\n          description: The profile object type.\n          enum:\n            - OBJECT_TYPE_UNSPECIFIED\n            - PERSON\n            - PAGE\n          type: string\n        userTypes:\n          description: The user types.\n          items:\n            enum:\n              - USER_TYPE_UNKNOWN\n              - GOOGLE_USER\n              - GPLUS_USER\n              - GOOGLE_APPS_USER\n            type: string\n          type: array\n      type: object\n    Relation:\n      description: A person's relation to another person.\n      properties:\n        formattedType:\n          description: \u003e-\n            The type of the relation translated and formatted in the viewer's\n            account\n\n            locale or the locale specified in the Accept-Language HTTP header.\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        person:\n          description: The name of the other person this relation refers to.\n          type: string\n        type:\n          description: \u003e-\n            The person's relation to the other person. The type can be custom or\n            one of\n\n            these predefined values:\n\n\n            * `spouse`\n\n            * `child`\n\n            * `mother`\n\n            * `father`\n\n            * `parent`\n\n            * `brother`\n\n            * `sister`\n\n            * `friend`\n\n            * `relative`\n\n            * `domesticPartner`\n\n            * `manager`\n\n            * `assistant`\n\n            * `referredBy`\n\n            * `partner`\n          type: string\n      type: object\n    RelationshipInterest:\n      description: A person's read-only relationship interest .\n      properties:\n        formattedValue:\n          description: \u003e-\n            The value of the relationship interest translated and formatted in\n            the\n\n            viewer's account locale or the locale specified in the Accept-Language\n\n            HTTP header.\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        value:\n          description: \u003e-\n            The kind of relationship the person is looking for. The value can be\n            custom\n\n            or one of these predefined values:\n\n\n            * `friend`\n\n            * `date`\n\n            * `relationship`\n\n            * `networking`\n          type: string\n      type: object\n    RelationshipStatus:\n      description: A person's read-only relationship status.\n      properties:\n        formattedValue:\n          description: \u003e-\n            The read-only value of the relationship status translated and\n            formatted in\n\n            the viewer's account locale or the `Accept-Language` HTTP header locale.\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        value:\n          description: |-\n            The relationship status. The value can be custom or one of these\n            predefined values:\n\n            * `single`\n            * `inARelationship`\n            * `engaged`\n            * `married`\n            * `itsComplicated`\n            * `openRelationship`\n            * `widowed`\n            * `inDomesticPartnership`\n            * `inCivilUnion`\n          type: string\n      type: object\n    Residence:\n      description: A person's past or current residence.\n      properties:\n        current:\n          description: |-\n            True if the residence is the person's current residence;\n            false if the residence is a past residence.\n          type: boolean\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        value:\n          description: The address of the residence.\n          type: string\n      type: object\n    SipAddress:\n      description: \u003e-\n        A person's SIP address. Session Initial Protocol addresses are used for\n        VoIP\n\n        communications to make voice or video calls over the internet.\n      properties:\n        formattedType:\n          description: \u003e-\n            The read-only type of the SIP address translated and formatted in\n            the\n\n            viewer's account locale or the `Accept-Language` HTTP header locale.\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        type:\n          description: \u003e-\n            The type of the SIP address. The type can be custom or or one of\n            these\n\n            predefined values:\n\n\n            * `home`\n\n            * `work`\n\n            * `mobile`\n\n            * `other`\n          type: string\n        value:\n          description: \u003e-\n            The SIP address in the\n\n            [RFC 3261 19.1](https://tools.ietf.org/html/rfc3261#section-19.1) SIP URI\n\n            format.\n          type: string\n      type: object\n    Skill:\n      description: A skill that the person has.\n      properties:\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        value:\n          description: The skill; for example, `underwater basket weaving`.\n          type: string\n      type: object\n    Source:\n      description: The source of a field.\n      properties:\n        etag:\n          description: \u003e-\n            **Only populated in `person.metadata.sources`.**\n\n\n            The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the\n\n            source. Used for web cache validation.\n          type: string\n        id:\n          description: The unique identifier within the source type generated by the server.\n          type: string\n        profileMetadata:\n          $ref: \"#/components/schemas/ProfileMetadata\"\n        type:\n          description: The source type.\n          enum:\n            - SOURCE_TYPE_UNSPECIFIED\n            - ACCOUNT\n            - PROFILE\n            - DOMAIN_PROFILE\n            - CONTACT\n          type: string\n        updateTime:\n          description: |-\n            **Only populated in `person.metadata.sources`.**\n\n            Last update timestamp of this source.\n          format: google-datetime\n          type: string\n      type: object\n    Status:\n      description: \u003e-\n        The `Status` type defines a logical error model that is suitable for\n\n        different programming environments, including REST APIs and RPC APIs. It is\n\n        used by [gRPC](https://github.com/grpc). Each `Status` message contains\n\n        three pieces of data: error code, error message, and error details.\n\n\n        You can find out more about this error model and how to work with it in the\n\n        [API Design Guide](https://cloud.google.com/apis/design/errors).\n      properties:\n        code:\n          description: The status code, which should be an enum value of google.rpc.Code.\n          format: int32\n          type: integer\n        details:\n          description: \u003e-\n            A list of messages that carry the error details.  There is a common\n            set of\n\n            message types for APIs to use.\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type URL.\n            type: object\n          type: array\n        message:\n          description: |-\n            A developer-facing error message, which should be in English. Any\n            user-facing error message should be localized and sent in the\n            google.rpc.Status.details field, or localized by the client.\n          type: string\n      type: object\n    Tagline:\n      description: A read-only brief one-line description of the person.\n      properties:\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        value:\n          description: The tagline.\n          type: string\n      type: object\n    UpdateContactGroupRequest:\n      description: \u003e-\n        A request to update an existing user contact group. All updated fields\n        will\n\n        be replaced.\n      properties:\n        contactGroup:\n          $ref: \"#/components/schemas/ContactGroup\"\n      type: object\n    UpdateContactPhotoRequest:\n      description: |-\n        A request to update an existing contact's photo.\n        All requests must have a valid photo format: JPEG or PNG.\n      properties:\n        personFields:\n          description: \u003e-\n            **Optional.** Not specifying any fields will skip the post mutate\n            read.\n\n            A field mask to restrict which fields on the person are\n\n            returned. Multiple fields can be specified by separating them with commas.\n\n            Valid values are:\n\n\n            * addresses\n\n            * ageRanges\n\n            * biographies\n\n            * birthdays\n\n            * braggingRights\n\n            * coverPhotos\n\n            * emailAddresses\n\n            * events\n\n            * genders\n\n            * imClients\n\n            * interests\n\n            * locales\n\n            * memberships\n\n            * metadata\n\n            * names\n\n            * nicknames\n\n            * occupations\n\n            * organizations\n\n            * phoneNumbers\n\n            * photos\n\n            * relations\n\n            * relationshipInterests\n\n            * relationshipStatuses\n\n            * residences\n\n            * sipAddresses\n\n            * skills\n\n            * taglines\n\n            * urls\n\n            * userDefined\n          format: google-fieldmask\n          type: string\n        photoBytes:\n          description: Raw photo bytes\n          format: byte\n          type: string\n      type: object\n    UpdateContactPhotoResponse:\n      description: The response for updating a contact's photo.\n      properties:\n        person:\n          $ref: \"#/components/schemas/Person\"\n      type: object\n    Url:\n      description: A person's associated URLs.\n      properties:\n        formattedType:\n          description: \u003e-\n            The read-only type of the URL translated and formatted in the\n            viewer's\n\n            account locale or the `Accept-Language` HTTP header locale.\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        type:\n          description: \u003e-\n            The type of the URL. The type can be custom or one of these\n            predefined\n\n            values:\n\n\n            * `home`\n\n            * `work`\n\n            * `blog`\n\n            * `profile`\n\n            * `homePage`\n\n            * `ftp`\n\n            * `reservations`\n\n            * `appInstallPage`: website for a Google+ application.\n\n            * `other`\n          type: string\n        value:\n          description: The URL.\n          type: string\n      type: object\n    UserDefined:\n      description: Arbitrary user data that is populated by the end users.\n      properties:\n        key:\n          description: The end user specified key of the user defined data.\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/FieldMetadata\"\n        value:\n          description: The end user specified value of the user defined data.\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/googleapis.com-people-v1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/googleapis.com-people-v1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/{resourceName}:updateContact\": patch: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}