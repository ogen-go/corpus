{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "azure.com-authorization-authorization-RoleBasedCalls-2018-01-01-preview-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/azure.com-authorization-authorization-RoleBasedCalls-2018-01-01-preview-swagger.yaml",
			"byteSize": 35488,
			"content": "openapi: 3.0.0\ninfo:\n  description: Role based access control provides you a way to apply granular level policy\n    administration down to individual resources or resource groups. These\n    operations enable you to manage role definitions and role assignments. A\n    role definition describes the set of actions that can be performed on\n    resources. A role assignment grants access to Azure Active Directory users.\n  title: AuthorizationManagementClient\n  version: 2018-01-01-preview\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/authorization/resource-manager/Microsoft.Authorization/preview/2018-01-01-preview/authorization-RoleBasedCalls.json\n      version: \"2.0\"\n  x-providerName: azure.com\n  x-serviceName: authorization-authorization-RoleBasedCalls\n  x-tags:\n    - Azure\n    - Microsoft\nsecurity:\n  - azure_auth:\n      - user_impersonation\npaths:\n  /providers/Microsoft.Authorization/providerOperations:\n    get:\n      description: Gets provider operations metadata for all resource providers.\n      operationId: ProviderOperationsMetadata_List\n      parameters:\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - description: Specifies whether to expand the values.\n          in: query\n          name: $expand\n          required: false\n          schema:\n            type: string\n            default: resourceTypes\n      responses:\n        \"200\":\n          description: OK - Returns an array of the operations metadata.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProviderOperationsMetadataListResult\"\n              examples:\n                GetConfigurations:\n                  $ref: \"#/components/examples/GetConfigurations\"\n      tags:\n        - ProviderOperationsMetadata\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}\":\n    get:\n      description: Gets provider operations metadata for the specified resource provider.\n      operationId: ProviderOperationsMetadata_Get\n      parameters:\n        - $ref: \"#/components/parameters/ResourceProviderNamespaceParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - description: Specifies whether to expand the values.\n          in: query\n          name: $expand\n          required: false\n          schema:\n            type: string\n            default: resourceTypes\n      responses:\n        \"200\":\n          description: OK - Returns the operations metadata.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProviderOperationsMetadata\"\n              examples:\n                GetConfigurations:\n                  $ref: \"#/components/examples/GetConfigurations\"\n      tags:\n        - ProviderOperationsMetadata\n  \"/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments\":\n    get:\n      description: Gets all role assignments for the subscription.\n      operationId: RoleAssignments_List\n      parameters:\n        - description: The filter to apply on the operation. Use $filter=atScope() to\n            return all role assignments at or above the scope. Use\n            $filter=principalId eq {id} to return all role assignments at, above\n            or below the scope for the specified principal.\n          in: query\n          name: $filter\n          required: false\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: OK - Returns an array of role assignments.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RoleAssignmentListResult\"\n              examples:\n                GetConfigurations:\n                  $ref: \"#/components/examples/GetConfigurations\"\n      tags:\n        - RoleAssignments\n      x-ms-odata: \"#/components/schemas/RoleAssignmentFilter\"\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments\":\n    get:\n      description: Gets role assignments for a resource group.\n      operationId: RoleAssignments_ListForResourceGroup\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupNameParameter\"\n        - description: The filter to apply on the operation. Use $filter=atScope() to\n            return all role assignments at or above the scope. Use\n            $filter=principalId eq {id} to return all role assignments at, above\n            or below the scope for the specified principal.\n          in: query\n          name: $filter\n          required: false\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: OK - Returns an array of role assignments.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RoleAssignmentListResult\"\n              examples:\n                GetConfigurations:\n                  $ref: \"#/components/examples/GetConfigurations\"\n      tags:\n        - RoleAssignments\n      x-ms-odata: \"#/components/schemas/RoleAssignmentFilter\"\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions\":\n    get:\n      description: Gets all permissions the caller has for a resource group.\n      operationId: Permissions_ListForResourceGroup\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: OK - Returns an array of permissions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PermissionGetResult\"\n              examples:\n                GetConfigurations:\n                  $ref: \"#/components/examples/GetConfigurations\"\n      tags:\n        - Permissions\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions\":\n    get:\n      description: Gets all permissions the caller has for a resource.\n      operationId: Permissions_ListForResource\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/ResourceProviderNamespaceParameter\"\n        - description: The parent resource identity.\n          in: path\n          name: parentResourcePath\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: parentResourcePath\n        - description: The resource type of the resource.\n          in: path\n          name: resourceType\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: resourceType\n        - description: The name of the resource to get the permissions for.\n          in: path\n          name: resourceName\n          required: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: resourceName\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: OK - Returns an array of permissions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PermissionGetResult\"\n              examples:\n                GetConfigurations:\n                  $ref: \"#/components/examples/GetConfigurations\"\n      tags:\n        - Permissions\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments\":\n    get:\n      description: Gets role assignments for a resource.\n      operationId: RoleAssignments_ListForResource\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupNameParameter\"\n        - $ref: \"#/components/parameters/ResourceProviderNamespaceParameter\"\n        - description: The parent resource identity.\n          in: path\n          name: parentResourcePath\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: parentResourcePath\n        - description: The resource type of the resource.\n          in: path\n          name: resourceType\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: resourceType\n        - description: The name of the resource to get role assignments for.\n          in: path\n          name: resourceName\n          required: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: resourceName\n        - description: The filter to apply on the operation. Use $filter=atScope() to\n            return all role assignments at or above the scope. Use\n            $filter=principalId eq {id} to return all role assignments at, above\n            or below the scope for the specified principal.\n          in: query\n          name: $filter\n          required: false\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n      responses:\n        \"200\":\n          description: OK - Returns an array of role assignments.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RoleAssignmentListResult\"\n              examples:\n                GetConfigurations:\n                  $ref: \"#/components/examples/GetConfigurations\"\n      tags:\n        - RoleAssignments\n      x-ms-odata: \"#/components/schemas/RoleAssignmentFilter\"\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/{roleId}\":\n    delete:\n      description: Deletes a role assignment.\n      operationId: RoleAssignments_DeleteById\n      parameters:\n        - description: The ID of the role assignment to delete.\n          in: path\n          name: roleId\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: roleAssignmentId\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK - Returns information about the role assignment.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RoleAssignment\"\n              examples:\n                GetConfigurations:\n                  $ref: \"#/components/examples/GetConfigurations\"\n      tags:\n        - RoleAssignments\n    get:\n      description: Gets a role assignment by ID.\n      operationId: RoleAssignments_GetById\n      parameters:\n        - description: The ID of the role assignment to get.\n          in: path\n          name: roleId\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: roleassignmentId\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK - Returns the role assignment.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RoleAssignment\"\n              examples:\n                GetConfigurations:\n                  $ref: \"#/components/examples/GetConfigurations\"\n      tags:\n        - RoleAssignments\n    put:\n      description: Creates a role assignment by ID.\n      operationId: RoleAssignments_CreateById\n      parameters:\n        - description: The ID of the role assignment to create.\n          in: path\n          name: roleId\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: roleAssignmentId\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        $ref: \"#/components/requestBodies/RoleAssignmentCreateParameters\"\n      responses:\n        \"201\":\n          description: Created - Returns the role assignment.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RoleAssignment\"\n              examples:\n                GetConfigurations:\n                  $ref: \"#/components/examples/GetConfigurations\"\n      tags:\n        - RoleAssignments\n  \"/{scope}/providers/Microsoft.Authorization/roleAssignments\":\n    get:\n      description: Gets role assignments for a scope.\n      operationId: RoleAssignments_ListForScope\n      parameters:\n        - description: The scope of the role assignments.\n          in: path\n          name: scope\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: scope\n        - description: The filter to apply on the operation. Use $filter=atScope() to\n            return all role assignments at or above the scope. Use\n            $filter=principalId eq {id} to return all role assignments at, above\n            or below the scope for the specified principal.\n          in: query\n          name: $filter\n          required: false\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK - Returns an array of role assignments.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RoleAssignmentListResult\"\n              examples:\n                GetConfigurations:\n                  $ref: \"#/components/examples/GetConfigurations\"\n      tags:\n        - RoleAssignments\n      x-ms-odata: \"#/components/schemas/RoleAssignmentFilter\"\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}\":\n    delete:\n      description: Deletes a role assignment.\n      operationId: RoleAssignments_Delete\n      parameters:\n        - description: The scope of the role assignment to delete.\n          in: path\n          name: scope\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: scope\n        - description: The name of the role assignment to delete.\n          in: path\n          name: roleAssignmentName\n          required: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: roleAssignmentName\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK - Returns information about the role assignment.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RoleAssignment\"\n              examples:\n                GetConfigurations:\n                  $ref: \"#/components/examples/GetConfigurations\"\n      tags:\n        - RoleAssignments\n    get:\n      description: Get the specified role assignment.\n      operationId: RoleAssignments_Get\n      parameters:\n        - description: The scope of the role assignment.\n          in: path\n          name: scope\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: scope\n        - description: The name of the role assignment to get.\n          in: path\n          name: roleAssignmentName\n          required: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: roleAssignmentName\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK - Returns information about the role assignment.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RoleAssignment\"\n              examples:\n                GetConfigurations:\n                  $ref: \"#/components/examples/GetConfigurations\"\n      tags:\n        - RoleAssignments\n    put:\n      description: Creates a role assignment.\n      operationId: RoleAssignments_Create\n      parameters:\n        - description: The scope of the role assignment to create. The scope can be any\n            REST resource instance. For example, use\n            '/subscriptions/{subscription-id}/' for a subscription,\n            '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}'\n            for a resource group, and\n            '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'\n            for a resource.\n          in: path\n          name: scope\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: scope\n        - description: The name of the role assignment to create. It can be any valid GUID.\n          in: path\n          name: roleAssignmentName\n          required: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: roleAssignmentName\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        $ref: \"#/components/requestBodies/RoleAssignmentCreateParameters\"\n      responses:\n        \"201\":\n          description: Created - Returns information about the role assignment.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RoleAssignment\"\n              examples:\n                GetConfigurations:\n                  $ref: \"#/components/examples/GetConfigurations\"\n      tags:\n        - RoleAssignments\n  \"/{scope}/providers/Microsoft.Authorization/roleDefinitions\":\n    get:\n      description: Get all role definitions that are applicable at scope and above.\n      operationId: RoleDefinitions_List\n      parameters:\n        - description: The scope of the role definition.\n          in: path\n          name: scope\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: scope\n        - description: The filter to apply on the operation. Use atScopeAndBelow filter to\n            search below the given scope as well.\n          in: query\n          name: $filter\n          required: false\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK - Returns an array of role definitions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RoleDefinitionListResult\"\n              examples:\n                GetConfigurations:\n                  $ref: \"#/components/examples/GetConfigurations\"\n      tags:\n        - RoleDefinitions\n      x-ms-odata: \"#/components/schemas/RoleDefinitionFilter\"\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}\":\n    delete:\n      description: Deletes a role definition.\n      operationId: RoleDefinitions_Delete\n      parameters:\n        - description: The scope of the role definition.\n          in: path\n          name: scope\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: scope\n        - description: The ID of the role definition to delete.\n          in: path\n          name: roleDefinitionId\n          required: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: roleDefinitionId\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK - Returns information about the role definition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RoleDefinition\"\n              examples:\n                GetConfigurations:\n                  $ref: \"#/components/examples/GetConfigurations\"\n      tags:\n        - RoleDefinitions\n    get:\n      description: Get role definition by name (GUID).\n      operationId: RoleDefinitions_Get\n      parameters:\n        - description: The scope of the role definition.\n          in: path\n          name: scope\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: scope\n        - description: The ID of the role definition.\n          in: path\n          name: roleDefinitionId\n          required: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: roleDefinitionId\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK - Returns information about the role definition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RoleDefinition\"\n              examples:\n                GetConfigurations:\n                  $ref: \"#/components/examples/GetConfigurations\"\n      tags:\n        - RoleDefinitions\n    put:\n      description: Creates or updates a role definition.\n      operationId: RoleDefinitions_CreateOrUpdate\n      parameters:\n        - description: The scope of the role definition.\n          in: path\n          name: scope\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: scope\n        - description: The ID of the role definition.\n          in: path\n          name: roleDefinitionId\n          required: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: roleDefinitionId\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RoleDefinition\"\n        description: The values for the role definition.\n        required: true\n      responses:\n        \"201\":\n          description: OK - Returns information about the role definition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RoleDefinition\"\n              examples:\n                GetConfigurations:\n                  $ref: \"#/components/examples/GetConfigurations\"\n      tags:\n        - RoleDefinitions\nx-ms-paths:\n  \"/{roleId}?disambiguation_dummy\":\n    get:\n      description: Gets a role definition by ID.\n      operationId: RoleDefinitions_GetById\n      parameters:\n        - description: The fully qualified role definition ID. Use the format,\n            /subscriptions/{guid}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}\n            for subscription level role definitions, or\n            /providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}\n            for tenant level role definitions.\n          in: path\n          name: roleId\n          required: true\n          x-ms-skip-url-encoding: true\n          schema:\n            type: string\n          examples:\n            GetConfigurations:\n              value: roleDefinitionId\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: OK - Returns information about the role definition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RoleDefinition\"\n              examples:\n                GetConfigurations:\n                  $ref: \"#/components/examples/GetConfigurations\"\n      tags:\n        - RoleDefinitions\nservers:\n  - url: https://management.azure.com\ncomponents:\n  examples:\n    GetConfigurations:\n      value:\n        id: /subscriptions/subID/providers/Microsoft.Authorization/roleDefinitions/roleDefinitionId\n        name: roleDefinitionId\n        properties:\n          assignableScopes:\n            - /subscriptions/subId\n          description: Role description\n          permissions:\n            - actions:\n                - action\n              dataActions:\n                - dataAction\n              notActions: []\n              notDataActions: []\n          roleName: Role name\n          type: roletype\n        type: Microsoft.Authorization/roleDefinitions\n  parameters:\n    ApiVersionParameter:\n      description: The API version to use for this operation.\n      in: query\n      name: api-version\n      required: true\n      schema:\n        type: string\n      examples:\n        GetConfigurations:\n          value: 2018-01-01-preview\n    ResourceGroupNameParameter:\n      description: The name of the resource group.\n      in: path\n      name: resourceGroupName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        GetConfigurations:\n          value: rgname\n    ResourceProviderNamespaceParameter:\n      description: The namespace of the resource provider.\n      in: path\n      name: resourceProviderNamespace\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        GetConfigurations:\n          value: resourceProviderNamespace\n    SubscriptionIdParameter:\n      description: The ID of the target subscription.\n      in: path\n      name: subscriptionId\n      required: true\n      schema:\n        type: string\n      examples:\n        GetConfigurations:\n          value: subId\n  requestBodies:\n    RoleAssignmentCreateParameters:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/RoleAssignmentCreateParameters\"\n      description: Parameters for the role assignment.\n      required: true\n  securitySchemes:\n    azure_auth:\n      description: Azure Active Directory OAuth2 Flow\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize\n          scopes:\n            user_impersonation: impersonate your user account\n  schemas:\n    Permission:\n      description: Role definition permissions.\n      properties:\n        actions:\n          description: Allowed actions.\n          items:\n            type: string\n          type: array\n        dataActions:\n          description: Allowed Data actions.\n          items:\n            type: string\n          type: array\n        notActions:\n          description: Denied actions.\n          items:\n            type: string\n          type: array\n        notDataActions:\n          description: Denied Data actions.\n          items:\n            type: string\n          type: array\n    PermissionGetResult:\n      description: Permissions information.\n      properties:\n        nextLink:\n          description: The URL to use for getting the next set of results.\n          type: string\n        value:\n          description: An array of permissions.\n          items:\n            $ref: \"#/components/schemas/Permission\"\n          type: array\n    ProviderOperation:\n      description: Operation\n      properties:\n        description:\n          description: The operation description.\n          type: string\n        displayName:\n          description: The operation display name.\n          type: string\n        isDataAction:\n          description: The dataAction flag to specify the operation type.\n          type: boolean\n        name:\n          description: The operation name.\n          type: string\n        origin:\n          description: The operation origin.\n          type: string\n        properties:\n          description: The operation properties.\n          type: object\n          x-ms-client-flatten: true\n    ProviderOperationsMetadata:\n      description: Provider Operations metadata\n      properties:\n        displayName:\n          description: The provider display name.\n          type: string\n        id:\n          description: The provider id.\n          type: string\n        name:\n          description: The provider name.\n          type: string\n        operations:\n          description: The provider operations.\n          items:\n            $ref: \"#/components/schemas/ProviderOperation\"\n          type: array\n        resourceTypes:\n          description: The provider resource types\n          items:\n            $ref: \"#/components/schemas/ResourceType\"\n          type: array\n        type:\n          description: The provider type.\n          type: string\n    ProviderOperationsMetadataListResult:\n      description: Provider operations metadata list\n      properties:\n        nextLink:\n          description: The URL to use for getting the next set of results.\n          type: string\n        value:\n          description: The list of providers.\n          items:\n            $ref: \"#/components/schemas/ProviderOperationsMetadata\"\n          type: array\n    ResourceType:\n      description: Resource Type\n      properties:\n        displayName:\n          description: The resource type display name.\n          type: string\n        name:\n          description: The resource type name.\n          type: string\n        operations:\n          description: The resource type operations.\n          items:\n            $ref: \"#/components/schemas/ProviderOperation\"\n          type: array\n    RoleAssignment:\n      description: Role Assignments\n      properties:\n        id:\n          description: The role assignment ID.\n          readOnly: true\n          type: string\n        name:\n          description: The role assignment name.\n          readOnly: true\n          type: string\n        properties:\n          $ref: \"#/components/schemas/RoleAssignmentPropertiesWithScope\"\n        type:\n          description: The role assignment type.\n          readOnly: true\n          type: string\n    RoleAssignmentCreateParameters:\n      description: Role assignment create parameters.\n      properties:\n        properties:\n          $ref: \"#/components/schemas/RoleAssignmentProperties\"\n    RoleAssignmentFilter:\n      description: Role Assignments filter\n      properties:\n        canDelegate:\n          description: The Delegation flag for the roleassignment\n          type: boolean\n        principalId:\n          description: Returns role assignment of the specific principal.\n          type: string\n    RoleAssignmentListResult:\n      description: Role assignment list operation result.\n      properties:\n        nextLink:\n          description: The URL to use for getting the next set of results.\n          type: string\n        value:\n          description: Role assignment list.\n          items:\n            $ref: \"#/components/schemas/RoleAssignment\"\n          type: array\n    RoleAssignmentProperties:\n      description: Role assignment properties.\n      properties:\n        canDelegate:\n          description: The delgation flag used for creating a role assignment\n          type: boolean\n        principalId:\n          description: The principal ID assigned to the role. This maps to the ID inside\n            the Active Directory. It can point to a user, service principal, or\n            security group.\n          type: string\n        roleDefinitionId:\n          description: The role definition ID used in the role assignment.\n          type: string\n    RoleAssignmentPropertiesWithScope:\n      description: Role assignment properties with scope.\n      properties:\n        canDelegate:\n          description: The Delegation flag for the roleassignment\n          type: boolean\n        principalId:\n          description: The principal ID.\n          type: string\n        roleDefinitionId:\n          description: The role definition ID.\n          type: string\n        scope:\n          description: The role assignment scope.\n          type: string\n    RoleDefinition:\n      description: Role definition.\n      properties:\n        id:\n          description: The role definition ID.\n          readOnly: true\n          type: string\n        name:\n          description: The role definition name.\n          readOnly: true\n          type: string\n        properties:\n          $ref: \"#/components/schemas/RoleDefinitionProperties\"\n        type:\n          description: The role definition type.\n          readOnly: true\n          type: string\n    RoleDefinitionFilter:\n      description: Role Definitions filter\n      properties:\n        roleName:\n          description: Returns role definition with the specific name.\n          type: string\n        type:\n          description: Returns role definition with the specific type.\n          type: string\n    RoleDefinitionListResult:\n      description: Role definition list operation result.\n      properties:\n        nextLink:\n          description: The URL to use for getting the next set of results.\n          type: string\n        value:\n          description: Role definition list.\n          items:\n            $ref: \"#/components/schemas/RoleDefinition\"\n          type: array\n    RoleDefinitionProperties:\n      description: Role definition properties.\n      properties:\n        assignableScopes:\n          description: Role definition assignable scopes.\n          items:\n            type: string\n          type: array\n        description:\n          description: The role definition description.\n          type: string\n        permissions:\n          description: Role definition permissions.\n          items:\n            $ref: \"#/components/schemas/Permission\"\n          type: array\n        roleName:\n          description: The role name.\n          type: string\n        type:\n          description: The role type.\n          type: string\n          x-ms-client-name: roleType\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/azure.com-authorization-authorization-RoleBasedCalls-2018-01-01-preview-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/azure.com-authorization-authorization-RoleBasedCalls-2018-01-01-preview-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments\": get: security: security \"azure_auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}