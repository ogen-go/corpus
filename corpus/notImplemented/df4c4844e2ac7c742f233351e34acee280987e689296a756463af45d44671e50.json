{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/EricWittmann/api-samples"
		},
		"file": {
			"name": "studio.json",
			"size": 0,
			"path": "demo/studio.json",
			"byteSize": 17692,
			"content": "{\n    \"openapi\": \"3.0.2\",\n    \"info\": {\n        \"title\": \"Apicurio Studio API\",\n        \"version\": \"0.2.16.Final\",\n        \"description\": \"The back-end REST API for Apicurio!\",\n        \"contact\": {\n            \"name\": \"Eric Wittmann\",\n            \"url\": \"http://www.apicur.io/\",\n            \"email\": \"eric.wittmann@gmail.com\"\n        },\n        \"license\": {\n            \"name\": \"Apache 2.0\",\n            \"url\": \"https://www.apache.org/licenses/LICENSE-2.0\"\n        }\n    },\n    \"servers\": [\n        {\n            \"url\": \"https://studio-api.apicur.io/\",\n            \"description\": \"\"\n        }\n    ],\n    \"paths\": {\n        \"/designs\": {\n            \"summary\": \"Manage All APIs\",\n            \"description\": \"Path/endpoint used to manage the user's list of APIs (get a list of APIs, create \\na new API, import an existing API).\",\n            \"get\": {\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/ApiDesign\"\n                                    }\n                                }\n                            }\n                        },\n                        \"description\": \"When successful, returns a list of API designs available to the authenticated user.\"\n                    }\n                },\n                \"operationId\": \"listDesigns\",\n                \"summary\": \"List API Designs\",\n                \"description\": \"Lists all API designs for the user.\"\n            },\n            \"put\": {\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ImportApiDesign\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ApiDesign\"\n                                }\n                            }\n                        },\n                        \"description\": \"Upon successfully importing the API, information about the newly added API design\\nin Apicurio will be returned.\"\n                    }\n                },\n                \"operationId\": \"importDesign\",\n                \"summary\": \"Import API Design\",\n                \"description\": \"Used to import an API design into Apicurio\"\n            },\n            \"post\": {\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/NewApiDesign\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ApiDesign\"\n                                }\n                            }\n                        },\n                        \"description\": \"If successful, returns information about the newly created API design.\"\n                    }\n                },\n                \"operationId\": \"createDesign\",\n                \"summary\": \"Create API Design\",\n                \"description\": \"Creates a new (empty) API design in Apicurio.\"\n            }\n        },\n        \"/designs/{designId}\": {\n            \"summary\": \"Manage a Single API\",\n            \"description\": \"Endpoint/path used to manage the details about a single API design by its unique\\nidentifier.\",\n            \"get\": {\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ApiDesign\"\n                                }\n                            }\n                        },\n                        \"description\": \"Succesful response returns information about the A\"\n                    }\n                },\n                \"operationId\": \"getDesign\",\n                \"summary\": \"Get API Design Details\",\n                \"description\": \"Gets information about a single API design.\"\n            },\n            \"delete\": {\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"If successful, the API will be deleted an an empty 200 response will be returned.\"\n                    }\n                },\n                \"operationId\": \"deleteDesign\",\n                \"summary\": \"Delete an API Design\",\n                \"description\": \"Delets a single API design from Apicurio.\"\n            },\n            \"parameters\": [\n                {\n                    \"name\": \"designId\",\n                    \"description\": \"The unique ID of an API design.\",\n                    \"schema\": {\n                        \"type\": \"string\"\n                    },\n                    \"in\": \"path\",\n                    \"required\": true\n                }\n            ]\n        },\n        \"/designs/{designId}/contributors\": {\n            \"parameters\": [\n                {\n                    \"name\": \"designId\",\n                    \"description\": \"The unique ID of an API design.\",\n                    \"schema\": {\n                        \"type\": \"string\"\n                    },\n                    \"in\": \"path\",\n                    \"required\": true\n                }\n            ]\n        },\n        \"/designs/{designId}/publications\": {\n            \"get\": {\n                \"parameters\": [\n                    {\n                        \"name\": \"start\",\n                        \"description\": \"Index of the last item in the result set to fetch.  Defaults to 20.\",\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"name\": \"end\",\n                        \"description\": \"Index of the first item in the result set to fetch.  Defaults to 0.\",\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/ApiPublication\"\n                                    }\n                                }\n                            }\n                        },\n                        \"description\": \"A successful response returns an array of `ApiPublication` items.\"\n                    }\n                },\n                \"operationId\": \"getPublications\",\n                \"summary\": \"Get API Publications\",\n                \"description\": \"Endpoint used to get a list of all publications for an API.\"\n            },\n            \"post\": {\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/NewApiPublication\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"On a successful publish, returns an empty `201` response.\"\n                    }\n                },\n                \"operationId\": \"publishApi\",\n                \"summary\": \"Publish an API\",\n                \"description\": \"Endpoint used to publish an API to a git repository such as GitLab, GitHub, or \\nBitbucket.   The user must have at least one linked account set up for this \\noperation to work.\"\n            },\n            \"parameters\": [\n                {\n                    \"name\": \"designId\",\n                    \"description\": \"The unique ID of an API design.\",\n                    \"schema\": {\n                        \"type\": \"string\"\n                    },\n                    \"in\": \"path\",\n                    \"required\": true\n                }\n            ]\n        },\n        \"/designs/{designId}/content\": {\n            \"parameters\": [\n                {\n                    \"name\": \"designId\",\n                    \"description\": \"The unique ID of an API design.\",\n                    \"schema\": {\n                        \"type\": \"string\"\n                    },\n                    \"in\": \"path\",\n                    \"required\": true\n                }\n            ]\n        },\n        \"/designs/{designId}/invitations\": {\n            \"parameters\": [\n                {\n                    \"name\": \"designId\",\n                    \"description\": \"The unique ID of an API design.\",\n                    \"schema\": {\n                        \"type\": \"string\"\n                    },\n                    \"in\": \"path\",\n                    \"required\": true\n                }\n            ]\n        },\n        \"/designs/{designId}/collaborators\": {\n            \"parameters\": [\n                {\n                    \"name\": \"designId\",\n                    \"description\": \"The unique ID of an API design.\",\n                    \"schema\": {\n                        \"type\": \"string\"\n                    },\n                    \"in\": \"path\",\n                    \"required\": true\n                }\n            ]\n        },\n        \"/designs/{designId}/activity\": {\n            \"parameters\": [\n                {\n                    \"name\": \"designId\",\n                    \"description\": \"The unique ID of an API design.\",\n                    \"schema\": {\n                        \"type\": \"string\"\n                    },\n                    \"in\": \"path\",\n                    \"required\": true\n                }\n            ]\n        },\n        \"/designs/{designId}/invitations/{inviteId}\": {\n            \"parameters\": [\n                {\n                    \"name\": \"designId\",\n                    \"description\": \"The unique ID of an API design.\",\n                    \"schema\": {\n                        \"type\": \"string\"\n                    },\n                    \"in\": \"path\",\n                    \"required\": true\n                },\n                {\n                    \"name\": \"inviteId\",\n                    \"description\": \"The unique ID of a single invitation.\",\n                    \"schema\": {\n                        \"type\": \"string\"\n                    },\n                    \"in\": \"path\",\n                    \"required\": true\n                }\n            ]\n        },\n        \"/designs/{designId}/collaborators/{userId}\": {\n            \"parameters\": [\n                {\n                    \"name\": \"designId\",\n                    \"description\": \"The unique ID of an API design.\",\n                    \"schema\": {\n                        \"type\": \"string\"\n                    },\n                    \"in\": \"path\",\n                    \"required\": true\n                },\n                {\n                    \"name\": \"userId\",\n                    \"description\": \"The User ID of the collaborator.\",\n                    \"schema\": {\n                        \"type\": \"string\"\n                    },\n                    \"in\": \"path\",\n                    \"required\": true\n                }\n            ]\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"ImportApiDesign\": {\n                \"title\": \"Root Type for ImportApiDesign\",\n                \"description\": \"The root of the ImportApiDesign type's schema.\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"url\": {\n                        \"description\": \"Pass in a URL to the API content (can be either JSON or YAML).  Mutually exclusive\\nwith the `data` property.\",\n                        \"type\": \"string\"\n                    },\n                    \"data\": {\n                        \"description\": \"Pass in the content of the API design (in either YAML or JSON format) encoded\\nusing base64.  Mutually exclusive with the `url` property.\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"example\": \"{\\n    \\\"data\\\": \\\"ewogICAgIm9wZW5hcGkiOiAiMy4wLjIiCn0K\\\"\\n}\"\n            },\n            \"ApiDesign\": {\n                \"title\": \"Root Type for ApiDesign\",\n                \"description\": \"The root of the ApiDesign type's schema.\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"createdBy\": {\n                        \"type\": \"string\"\n                    },\n                    \"createdOn\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"tags\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"example\": \"{\\n    \\\"id\\\": \\\"12345\\\",\\n    \\\"name\\\": \\\"My Great API\\\",\\n    \\\"description\\\": \\\"The description of my great API.\\\",\\n    \\\"createdBy\\\": \\\"first.last@gmail.com\\\",\\n    \\\"createdOn\\\": \\\"2018-03-27T09:33:00Z\\\",\\n    \\\"tags\\\": [\\n        \\\"tag-1\\\", \\\"tag-2\\\", \\\"tag-3\\\"\\n    ]\\n}\"\n            },\n            \"NewApiDesign\": {\n                \"title\": \"Root Type for NewApiDesign\",\n                \"description\": \"The root of the NewApiDesign type's schema.\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"specVersion\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"example\": \"{\\n    \\\"specVersion\\\": \\\"3.0.2\\\",\\n    \\\"name\\\": \\\"My New API\\\",\\n    \\\"description\\\": \\\"The description of my new API.\\\"\\n}\"\n            },\n            \"ApiPublication\": {\n                \"title\": \"Root Type for ApiPublication\",\n                \"description\": \"The root of the ApiPublication type's schema.\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"by\": {\n                        \"type\": \"string\"\n                    },\n                    \"on\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"info\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"example\": \"{\\n    \\\"by\\\": \\\"user@email-address.com\\\",\\n    \\\"on\\\": \\\"2018-02-10T07:30:00Z\\\",\\n    \\\"info\\\": \\\"some info string\\\"\\n}\"\n            },\n            \"NewApiPublication\": {\n                \"title\": \"Root Type for NewApiPublication\",\n                \"description\": \"The root of the NewApiPublication type's schema.\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"type\": {\n                        \"type\": \"string\"\n                    },\n                    \"org\": {\n                        \"type\": \"string\"\n                    },\n                    \"repo\": {\n                        \"type\": \"string\"\n                    },\n                    \"team\": {\n                        \"type\": \"string\"\n                    },\n                    \"group\": {\n                        \"type\": \"string\"\n                    },\n                    \"project\": {\n                        \"type\": \"string\"\n                    },\n                    \"branch\": {\n                        \"type\": \"string\"\n                    },\n                    \"resource\": {\n                        \"type\": \"string\"\n                    },\n                    \"format\": {\n                        \"type\": \"string\"\n                    },\n                    \"commitMessage\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"example\": \"{\\n    \\\"type\\\": \\\"GitHub\\\",\\n    \\\"org\\\": \\\"SampleOrg\\\",\\n    \\\"repo\\\": \\\"ApiDesignRepo\\\",\\n    \\\"branch\\\": \\\"master\\\",\\n    \\\"resource\\\": \\\"/path/to/apis/sample-api.yaml\\\",\\n    \\\"format\\\": \\\"YAML\\\",\\n    \\\"commitMessage\\\": \\\"Publishing API to my API design repository!\\\"\\n}\"\n            }\n        },\n        \"securitySchemes\": {\n            \"KeycloakOAuth\": {\n                \"openIdConnectUrl\": \"https://studio-auth.apicur.io/auth/realms/apicurio/protocol/openid-connect/token\",\n                \"type\": \"openIdConnect\",\n                \"description\": \"\"\n            }\n        }\n    },\n    \"security\": [\n        {\n            \"KeycloakOAuth\": [\n            ]\n        }\n    ]\n}",
			"canonicalURL": "/github.com/EricWittmann/api-samples@c66cd48d9c43f67d7a4eac07f60ed3ae2b732cac/-/blob/demo/studio.json",
			"externalURLs": [
				{
					"url": "https://github.com/EricWittmann/api-samples/blob/c66cd48d9c43f67d7a4eac07f60ed3ae2b732cac/demo/studio.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/designs\": get: security: security \"KeycloakOAuth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}