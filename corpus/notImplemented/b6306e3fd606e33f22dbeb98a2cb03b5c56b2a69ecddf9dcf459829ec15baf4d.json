{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hivemq/mqtt-cli"
		},
		"file": {
			"name": "hivemq-openapi.yaml",
			"size": 0,
			"path": "specs/hivemq-openapi.yaml",
			"byteSize": 62063,
			"content": "openapi: 3.0.1\ninfo:\n  contact:\n    url: https://www.hivemq.com\n  description: \"\\n# Introduction\\n\\nHiveMQ's REST API provides endpoints for the following\\\n    \\ use cases:\\n- Listing all MQTT Clients\\n- Getting detailed information about\\\n    \\ a specific MQTT client\\n- Listing all subscriptions for a specific MQTT client\\n\\\n    - Getting the connection status for a specific MQTT client\\n- Creating and restoring\\\n    \\ a backup\\n- Starting and stopping a trace recording\\n- Downloading backups and\\\n    \\ trace recordings\\n\\n## API style\\nHiveMQ's API is organized in a [RESTful](http://en.wikipedia.org/wiki/Representational_State_Transfer)\\\n    \\ fashion.\\n\\nThe API has predictable resource-oriented URLs that consume and\\\n    \\ return JSON with the content-type `application/json`.\\nIt uses standard HTTP\\\n    \\ response codes and verbs. Some endpoints do return files, those are using the\\\n    \\ content type `application/octet-stream` or `application/zip`.\\n\\nThe base URL\\\n    \\ is the Host and configured port of your HiveMQ instances. In most cases it makes\\\n    \\ sense to configure a reverse-proxy or load balancer to access HiveMQ's REST\\\n    \\ API.\\n\\n## Pagination\\nSome endpoints support returning the results in a paginated\\\n    \\ fashion. In those cases a cursor can be returned that contains the relative\\\n    \\ URL for the next page.\\nThe desired page size can be specified by using the\\\n    \\ `limit` query parameter.\\n\\nExample URL: `http://my-broker-host:8888/api/v1/mqtt/clients?limit=100`\\n\\\n    \\nExample Response:\\n```\\n{\\n  \\\"items\\\": [\\n    {\\n      \\\"id\\\": \\\"client-id-1\\\"\\\n    \\n    },\\n\\n    ...\\n\\n    {\\n      \\\"id\\\": \\\"client-id-99\\\"\\n    }\\n  ],\\n  \\\"\\\n    _links\\\": {\\n    \\\"next\\\": \\\"/api/v1/mqtt/clients?cursor=a-MvelExpd5y0SrXBxDhBvnGmohbpzwGDQFdUyOYWBACqs1TgI4-cUo-A=\u0026limit=100\\\"\\\n    \\n  }\\n}\\n```\\nTo fetch the next page with more results, the URL `http://my-broker-host:8888/api/v1/mqtt/clients?cursor=a-MvelExpd5y0SrXBxDhBvnGmohbpzwGDQFdUyOYWBACqs1TgI4-cUo-A=\u0026limit=100`\\\n    \\ is called.\\nIf the value for `_links.next` is not present, then this is the\\\n    \\ last page and no further pages are available.\\n\\n**Note**: If a generated REST\\\n    \\ API client is used the cursor value must be extracted from the `next URL` and\\\n    \\ then\\npassed as the cursor in the API call for fetching the next page.\\n\\nSteps\\\n    \\ to use pagination in a REST API client:\\n1. Returned next URL:\\n```\\nhttp://my-broker-host:8888/api/v1/mqtt/clients?cursor=a-MvelExpd5y0SrXBxDhBvnGmohbpzwGDQFdUyOYWBACqs1TgI4-cUo-A=\u0026limit=100\\n\\\n    ```\\n\\n2. Extract the cursor from the next URL:\\n```\\na-MvelExpd5y0SrXBxDhBvnGmohbpzwGDQFdUyOYWBACqs1TgI4-cUo-A=\\n\\\n    ```\\n\\n3. Use the cursor in the REST API client to fetch the next page:\\n```\\n\\\n    restClient.mqttClientsGet(pageLimitForRequest, \\\"a-MvelExpd5y0SrXBxDhBvnGmohbpzwGDQFdUyOYWBACqs1TgI4-cUo-A=\\\"\\\n    );\\n```\\n\\n## Errors\\nConventional HTTP response codes are used to indicate the\\\n    \\ success or failure of an API request. Codes in the 2xx range generally indicate\\\n    \\ success. Codes in the 4xx range indicate an error that failed given the information\\\n    \\ provided (e.g., a required parameter was omitted). Codes in the 5xx range indicate\\\n    \\ an error on the server side.\\n\\nFor all errors a JSON response with additional\\\n    \\ details is returned in the format [Problem JSON](https://tools.ietf.org/html/rfc7807).\\n\\\n    \\n## OpenAPI\\nHiveMQ's REST API provides an OpenAPI 3.0 schema definition that\\\n    \\ can imported into popular API tooling (e.g. Postman) or can be used to generate\\\n    \\ client-code for multiple programming languages.\\n\"\n  title: HiveMQ REST API\n  version: 4.8.1\n  x-logo:\n    url: https://www.hivemq.com/img/svg/hivemq-bee.svg\ntags:\n- description: \"These endpoints can be used to create, download, inspect and restore\\\n    \\ backups created by HiveMQ.\\n\\nMore information about the backup and restore\\\n    \\ capabilities of HiveMQ can be found in the [HiveMQ documentation](https://www.hivemq.com/docs/hivemq/latest/user-guide/backup-restore.html).\\n\\\n    \\n### Backup Requirements\\nSome prerequisites are necessary to create a backup\\\n    \\ or restore from a backup:\\n\\n- All HiveMQ nodes have at least version 4.4.0\\n\\\n    - Only one backup/restore can be executed at the same time\\n\\n### Export Requirements\\n\\\n    The following requirements are necessary to successfully create a backup:\\n\\n\\\n    - All HiveMQ nodes have at least 1GB of free disk space\\n- No cluster topology\\\n    \\ changes occur during the export. The backup is aborted when the topology changes\\\n    \\ to avoid inconsistent data in the backup.\\n\\n\\n### Restore Requirements\\n\\n\\\n    The requirements to successfully restore data from a backup are:\\n\\n- A clean\\\n    \\ HiveMQ deployment. This means that no clients must be connected and no persistent\\\n    \\ data exists on every HiveMQ node. The import will not start if there is data\\\n    \\ available in your cluster.\\n- Message data used by Extensions are only restored\\\n    \\ if the corresponding extension is already started before the restore is started.\"\n  name: Backup \u0026 Restore\n- description: \"A Trace Recording is a combination of filters which allows you to\\\n    \\ select messages of specific clients or topics, which are logged to a file in\\\n    \\ a human readable format.\\nEach trace recording creates cluster-wide trace files\\\n    \\ that can be downloaded as a collective zip file.\\n\\nYou can log any MQTT message\\\n    \\ sent or received by the broker with a filter you apply. A Filter can either\\\n    \\ be a client identifier or a topic. Many filter combinations are possible. All\\\n    \\ filters are regular expressions.\\n\\nThese endpoints can be used to create, download,\\\n    \\ inspect, stop and delete trace recordings.\\n\\nMore information about the trace\\\n    \\ recording capabilities of HiveMQ can be found in the [HiveMQ documentation](https://www.hivemq.com/docs/hivemq/latest/control-center/analytic.html#trace-recording).\\n\"\n  name: Trace Recordings\n- description: \"These endpoints can be used to inspect the MQTT clients that are known\\\n    \\ to HiveMQ.\\n\\nWith millions of connected clients, keeping track of specific\\\n    \\ clients can become a challenge. The HiveMQ REST API provides endpoints to list\\\n    \\ and view all the MQTT clients known to HiveMQ. \\nInformation about subscriptions,\\\n    \\ connection status, TLS, and more, offer detailed insights into every client.\"\n  name: MQTT Clients\npaths:\n  /api/v1/management/backups:\n    get:\n      description: |-\n        Lists all available backups with their current state.\n\n        This endpoint can be used to get an overview over all backups that are in progress or can be restored.\n\n        Canceled or failed backups are included in the results for up to 1 hour after they have been requested.\n\n        This endpoint requires at least HiveMQ version 4.4.0. on all cluster nodes.\n      operationId: getAllBackups\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                empty-results:\n                  description: Empty result if no backups are known.\n                  summary: Empty result if no backups are known\n                  value:\n                    items: []\n                multiple-results:\n                  description: Example response with one stored backup and one backup\n                    that is currently in progress.\n                  summary: Multiple results in different states\n                  value:\n                    items:\n                    - id: 20200506-081317\n                      createdAt: 2020-05-06T08:13:17Z\n                      bytes: 85550653\n                      state: COMPLETED\n                    - id: 20201006-1902318\n                      createdAt: 2020-05-06T08:13:17Z\n                      state: IN_PROGRESS\n                    - id: 20201006-1902318\n                      createdAt: 2020-05-06T08:13:17Z\n                      state: FAILED\n                      failReason: Another backup is already in progress.\n              schema:\n                $ref: '#/components/schemas/BackupList'\n          description: Success\n        \"503\":\n          content:\n            application/json:\n              examples:\n                version-check-failed:\n                  description: Version check failed\n                  summary: Version check failed\n                  value:\n                    errors:\n                    - title: Endpoint not active yet\n                      detail: \"Not all cluster nodes support this endpoint yet, please\\\n                        \\ try again later\"\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Not all cluster nodes at minimum version\n      summary: List all available backups\n      tags:\n      - Backup \u0026 Restore\n    post:\n      description: |-\n        Triggers the creation of a new backup.\n\n        This endpoint requires at least HiveMQ version 4.4.0. on all cluster nodes.\n      operationId: createBackup\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                example:\n                  description: Example response with in-progress backup.\n                  summary: Created backup that is currently in progress\n                  value:\n                    backup:\n                      id: 20201006-1902318\n                      createdAt: 2020-05-06T08:13:17Z\n                      state: IN_PROGRESS\n              schema:\n                $ref: '#/components/schemas/BackupItem'\n          description: Success\n        \"503\":\n          content:\n            application/json:\n              examples:\n                version-check-failed:\n                  description: Version check failed\n                  summary: Version check failed\n                  value:\n                    errors:\n                    - title: Endpoint not active yet\n                      detail: \"Not all cluster nodes support this endpoint yet, please\\\n                        \\ try again later\"\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Not all cluster nodes at minimum version\n      summary: Create a new backup\n      tags:\n      - Backup \u0026 Restore\n  /api/v1/management/backups/{backupId}:\n    get:\n      description: |-\n        Returns the information for a specific backup with its current state.\n\n         This endpoint can be used to check the progress of a specific backup when it is being created or being restored.\n\n          Canceled or failed backups are returned for up to 1 hour after the have been requested.\n\n         This endpoint requires at least HiveMQ version 4.4.0. on all cluster nodes.\n      operationId: getBackup\n      parameters:\n      - description: The id of the backup.\n        in: path\n        name: backupId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                get-example:\n                  description: Example response.\n                  summary: Example with a completed backup\n                  value:\n                    backup:\n                      id: 20200506-081317\n                      createdAt: 2020-05-06T08:13:17Z\n                      bytes: 85550653\n                      state: COMPLETED\n              schema:\n                $ref: '#/components/schemas/BackupItem'\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              examples:\n                param-missing:\n                  description: Bad request\n                  summary: Required URL parameter missing\n                  value:\n                    errors:\n                    - title: Required parameter missing\n                      detail: Required URL parameter 'parameterName' is missing\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Bad request\n        \"404\":\n          content:\n            application/json:\n              examples:\n                not-found:\n                  description: Not found\n                  summary: Not found\n                  value:\n                    errors:\n                    - title: Resource not found\n                      detail: Resource with id 'my-resource-id' not found\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Resource not found\n        \"503\":\n          content:\n            application/json:\n              examples:\n                version-check-failed:\n                  description: Version check failed\n                  summary: Version check failed\n                  value:\n                    errors:\n                    - title: Endpoint not active yet\n                      detail: \"Not all cluster nodes support this endpoint yet, please\\\n                        \\ try again later\"\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Not all cluster nodes at minimum version\n      summary: Get backup information\n      tags:\n      - Backup \u0026 Restore\n    post:\n      description: |-\n        Triggers the restore of a stored backup.\n\n        This endpoint requires at least HiveMQ version 4.4.0. on all cluster nodes.\n      operationId: restoreBackup\n      parameters:\n      - description: The id of the backup.\n        in: path\n        name: backupId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                example:\n                  description: Example response.\n                  summary: Created backup that is currently in progress\n                  value:\n                    backup:\n                      id: 20201006-1902318\n                      createdAt: 2020-05-06T08:13:17Z\n                      state: IN_PROGRESS\n              schema:\n                $ref: '#/components/schemas/BackupItem'\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              examples:\n                param-missing:\n                  description: Bad request\n                  summary: Required URL parameter missing\n                  value:\n                    errors:\n                    - title: Required parameter missing\n                      detail: Required URL parameter 'parameterName' is missing\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Bad request\n        \"404\":\n          content:\n            application/json:\n              examples:\n                not-found:\n                  description: Example not found\n                  summary: Not found\n                  value:\n                    errors:\n                    - title: Resource not found\n                      detail: Resource with id 'my-resource-id' not found\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Resource not found\n        \"503\":\n          content:\n            application/json:\n              examples:\n                version-check-failed:\n                  description: Version check failed\n                  summary: Version check failed\n                  value:\n                    errors:\n                    - title: Endpoint not active yet\n                      detail: \"Not all cluster nodes support this endpoint yet, please\\\n                        \\ try again later\"\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Not all cluster nodes at minimum version\n      summary: Restore a new backup\n      tags:\n      - Backup \u0026 Restore\n  /api/v1/management/files/backups/{backupId}:\n    get:\n      description: \"Download a specific backup file. \\n\\n This endpoint returns the\\\n        \\ content of the backup file with the content-type `application/octet-stream`.\\\n        \\ \\n\\n Only backups in the states `COMPLETED`, `RESTORE_IN_PROGRESS`, `RESTORE_FAILED`\\\n        \\ or `RESTORE_COMPLETED` can be downloaded.\\n\\n This endpoint requires at\\\n        \\ least HiveMQ version 4.4.0. on all cluster nodes.\"\n      operationId: downloadBackupFile\n      parameters:\n      - description: The id of the backup.\n        in: path\n        name: backupId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/octet-stream:\n              examples:\n                file-download:\n                  description: File download\n                  summary: File download\n                  value: \u003craw data\u003e\n              schema:\n                type: string\n                format: binary\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              examples:\n                param-missing:\n                  description: Bad request\n                  summary: Required URL parameter missing\n                  value:\n                    errors:\n                    - title: Required parameter missing\n                      detail: Required URL parameter 'parameterName' is missing\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Bad request\n        \"404\":\n          content:\n            application/json:\n              examples:\n                not-found:\n                  description: Resource not found\n                  summary: Not found\n                  value:\n                    errors:\n                    - title: Resource not found\n                      detail: Resource with id 'my-resource-id' not found\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Resource not found\n        \"503\":\n          content:\n            application/json:\n              examples:\n                temporarily-not-available:\n                  description: The endpoint is temporarily not available\n                  summary: Temporarily not available\n                  value:\n                    errors:\n                    - title: The endpoint is temporarily not available\n                      detail: \"The endpoint is temporarily not available, please try\\\n                        \\ again later\"\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Cluster node not reachable during download\n      summary: Download a backup file\n      tags:\n      - Backup \u0026 Restore\n  /api/v1/management/files/trace-recordings/{traceRecordingId}:\n    get:\n      description: \"Download a specific trace recording. \\n\\n This endpoint returns\\\n        \\ the content of the trace recording with the content-type `application/zip`.\\\n        \\ \\n\\nOnly trace recordings in the states `IN_PROGRESS`, `STOPPED` and `ABORTED`\\\n        \\ can be downloaded.\"\n      operationId: downloadTraceRecordingFile\n      parameters:\n      - description: The id of the trace recording.\n        in: path\n        name: traceRecordingId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/zip:\n              examples:\n                file-download:\n                  description: File download\n                  summary: File download\n                  value: \u003craw data\u003e\n              schema:\n                type: string\n                format: binary\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              examples:\n                param-missing:\n                  description: Bad request\n                  summary: Required URL parameter missing\n                  value:\n                    errors:\n                    - title: Required parameter missing\n                      detail: Required URL parameter 'parameterName' is missing\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Bad request\n        \"404\":\n          content:\n            application/json:\n              examples:\n                not-found:\n                  description: Resource not found\n                  summary: Not found\n                  value:\n                    errors:\n                    - title: Resource not found\n                      detail: Resource with id 'my-resource-id' not found\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Resource not found\n      summary: Download a trace recording\n      tags:\n      - Trace Recordings\n  /api/v1/management/trace-recordings:\n    get:\n      description: \"Lists all known trace recordings. \\n\\nTrace recordings can be\\\n        \\ in different states. These states are:\\n- `SCHEDULED` if the start date\\\n        \\ for a trace recording is in the future\\n- `STOPPED` if a trace recording\\\n        \\ has reached its end date or was stopped manually\\n- `IN_PROGRESS` when the\\\n        \\ trace recording is currently ongoing\\n- `ABORTED` if the trace recording\\\n        \\ was aborted by the server\\n\"\n      operationId: getAllTraceRecordings\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                single-result:\n                  description: Example response with one recording that is in progress.\n                  summary: Single result\n                  value:\n                    items:\n                    - name: test\n                      startAt: 2020-07-23T12:07:30.000Z\n                      endAt: 2020-07-23T13:07:30.000Z\n                      clientIdFilters:\n                      - regex: \"client-[0-9]\"\n                      topicFilters:\n                      - regex: topic/.*\n                      events:\n                      - MQTT_MESSAGE_CONNECT\n                      - MQTT_MESSAGE_DISCONNECT\n                      state: IN_PROGRESS\n              schema:\n                $ref: '#/components/schemas/TraceRecordingList'\n          description: Success\n      summary: Get all trace recordings\n      tags:\n      - Trace Recordings\n    post:\n      description: \"Creates a new trace recording. \\n\\n To create a trace recording\\\n        \\ you must specify a name, start date, end date, a set of filters and the\\\n        \\ desired packets that should be traced.\\n\\nAt least one client or topic filter\\\n        \\ and at least one packet is required to create a trace recording.\\n\\nThe\\\n        \\ client and topic filters can be [regular expressions](https://www.hivemq.com/docs/hivemq/4.3/control-center/analytic.html#regular-expressions).\"\n      operationId: createTraceRecording\n      requestBody:\n        content:\n          application/json:\n            examples:\n              simple-query:\n                description: \"A sample trace recording with a duration of 1 hour,\\\n                  \\ tracing one client, topic filter and CONNECT events.\"\n                summary: Simple query\n                value:\n                  traceRecording:\n                    name: test\n                    startAt: 2020-07-23T12:07:30.000Z\n                    endAt: 2020-07-23T13:07:30.000Z\n                    clientIdFilters:\n                    - regex: \"client-[0-9]\"\n                    topicFilters:\n                    - regex: topic/.*\n                    events:\n                    - MQTT_MESSAGE_CONNECT\n            schema:\n              $ref: '#/components/schemas/TraceRecordingItem'\n        description: The trace recording to create\n      responses:\n        \"201\":\n          content:\n            application/json:\n              examples:\n                simple-query-result:\n                  description: Response from the server after it created the trace\n                    recording. Includes the resulting current state of the recording.\n                  summary: Simple query - result\n                  value:\n                    traceRecording:\n                      name: test\n                      startAt: 2020-07-23T12:07:30.000Z\n                      endAt: 2020-07-23T13:07:30.000Z\n                      clientIdFilters:\n                      - regex: test\n                      topicFilters:\n                      - regex: test-topic\n                      events:\n                      - MQTT_MESSAGE_CONNECT\n                      state: IN_PROGRESS\n              schema:\n                $ref: '#/components/schemas/TraceRecordingItem'\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              examples:\n                body-param-missing:\n                  description: Bad request\n                  summary: Required body entity parameter missing\n                  value:\n                    errors:\n                    - title: Required parameter missing\n                      detail: Required body entity parameter is missing\n                invalid-resource:\n                  description: Bad request\n                  summary: Invalid resource\n                  value:\n                    errors:\n                    - title: Invalid resource\n                      detail: \"The fields {name, events, startAt, endAt} must be specified\\\n                        \\ at creation\"\n                param-missing:\n                  description: Bad request\n                  summary: Required URL parameter missing\n                  value:\n                    errors:\n                    - title: Required parameter missing\n                      detail: Required URL parameter 'parameterName' is missing\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Bad request\n      summary: Create a trace recording\n      tags:\n      - Trace Recordings\n  /api/v1/management/trace-recordings/{traceRecordingId}:\n    delete:\n      description: \"Deletes an existing trace recording. \\n\\n \"\n      operationId: deleteTraceRecording\n      parameters:\n      - description: The name of the trace recording to delete.\n        in: path\n        name: traceRecordingId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: \"Success, no response body\"\n        \"400\":\n          content:\n            application/json:\n              examples:\n                param-missing:\n                  description: Bad request\n                  summary: Required URL parameter missing\n                  value:\n                    errors:\n                    - title: Required parameter missing\n                      detail: Required URL parameter 'parameterName' is missing\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Bad request\n        \"404\":\n          content:\n            application/json:\n              examples:\n                not-found:\n                  description: Resource not found\n                  summary: Not found\n                  value:\n                    errors:\n                    - title: Resource not found\n                      detail: Resource with id 'my-resource-id' not found\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Resource not found\n      summary: Delete a trace recording\n      tags:\n      - Trace Recordings\n    patch:\n      description: \"Stops an existing trace recording.\\n\\nOnly the state of the trace\\\n        \\ recording can be set to `STOPPED` with this endpoint, changes to other fields\\\n        \\ are ignored.\"\n      operationId: stopTraceRecording\n      parameters:\n      - description: The name of the trace recording to patch/stop.\n        in: path\n        name: traceRecordingId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            examples:\n              stop-query:\n                description: Request to stop a trace recording by defining its state\n                  as STOPPED.\n                summary: Stop query\n                value:\n                  traceRecording:\n                    state: STOPPED\n            schema:\n              $ref: '#/components/schemas/TraceRecordingItem'\n        description: The trace recording to change\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                stop-response:\n                  description: A stopped trace recording returned after a stop query\n                    was sent.\n                  summary: Stop query - response\n                  value:\n                    traceRecording:\n                      name: test\n                      startAt: 2020-07-23T12:07:30.000Z\n                      endAt: 2020-07-23T13:07:30.000Z\n                      clientIdFilters:\n                      - regex: test\n                      topicFilters:\n                      - regex: test-topic\n                      events:\n                      - MQTT_MESSAGE_CONNECT\n                      state: STOPPED\n              schema:\n                $ref: '#/components/schemas/TraceRecordingItem'\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              examples:\n                body-param-missing:\n                  description: Bad request\n                  summary: Required body entity parameter missing\n                  value:\n                    errors:\n                    - title: Required parameter missing\n                      detail: Required body entity parameter is missing\n                invalid-resource:\n                  description: Bad request\n                  summary: Invalid resource\n                  value:\n                    errors:\n                    - title: Invalid resource\n                      detail: \"The fields {name, events, startAt, endAt} must be specified\\\n                        \\ at creation\"\n                param-missing:\n                  description: Bad request\n                  summary: Required URL parameter missing\n                  value:\n                    errors:\n                    - title: Required parameter missing\n                      detail: Required URL parameter 'parameterName' is missing\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Bad request\n        \"404\":\n          content:\n            application/json:\n              examples:\n                not-found:\n                  description: Resource not found\n                  summary: Not found\n                  value:\n                    errors:\n                    - title: Resource not found\n                      detail: Resource with id 'my-resource-id' not found\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Resource not found\n      summary: Stop a trace recording.\n      tags:\n      - Trace Recordings\n  /api/v1/mqtt/clients:\n    get:\n      description: \"Lists all client sessions (online and offline) known to the whole\\\n        \\ HiveMQ cluster.\\n\\nThe result contains each client's client identifier.\\\n        \\ For more details about each client you can call the endpoints that have\\\n        \\ a clientId in their URL.\\n\\nThis endpoint uses pagination with a cursor.\\n\\\n        The results are not sorted in any way, no ordering of any kind is guaranteed.\\n\\\n        \\nThis endpoint requires at least HiveMQ version 4.4.0. on all cluster nodes.\"\n      operationId: getAllMqttClients\n      parameters:\n      - description: Specifies the page size for the returned results. Has to be between\n          50 and 2500. Default page size is 500.\n        in: query\n        name: limit\n        schema:\n          type: integer\n          format: int32\n      - description: The cursor that has been returned by the previous result page.\n          Do not pass this parameter if you want to fetch the first page.\n        in: query\n        name: cursor\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                empty-results:\n                  description: Empty result if no clients are known.\n                  summary: Empty result if no clients are known\n                  value:\n                    items: []\n                multiple-results-last-page:\n                  description: Example response with multiple clients. No more pages\n                    left.\n                  summary: \"Multiple results, last page\"\n                  value:\n                    items:\n                    - id: client-12\n                    - id: client-5\n                    - id: client-32\n                    - id: my-client-id2\n                    - id: my-client-id\n                multiple-results-pages-left:\n                  description: Example response with multiple clients. More pages\n                    left.\n                  summary: \"Multiple results, more pages left\"\n                  value:\n                    items:\n                    - id: client-12\n                    - id: client-5\n                    - id: client-32\n                    - id: my-client-id2\n                    - id: my-client-id\n                    _links:\n                      next: /api/v1/mqtt/clients?cursor=a-MvelExpd5y0SrXBxDhBvnGmohbpzwGDQFdUyOYWBACqs1TgI4-cUo-A=\u0026limit=5\n                single-result:\n                  description: Example response with one known client.\n                  summary: Single result\n                  value:\n                    items:\n                    - id: client-12\n              schema:\n                $ref: '#/components/schemas/ClientList'\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              examples:\n                param-missing:\n                  description: Bad request\n                  summary: Required URL parameter missing\n                  value:\n                    errors:\n                    - title: Required parameter missing\n                      detail: Required URL parameter 'parameterName' is missing\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Bad request\n        \"410\":\n          content:\n            application/json:\n              examples:\n                cursor-invalid:\n                  description: Cursor not valid anymore\n                  summary: The passed cursor is not valid anymore\n                  value:\n                    errors:\n                    - title: Cursor not valid anymore\n                      detail: \"The passed cursor is not valid anymore, you can request\\\n                        \\ this resource without a cursor to start from the beginning\"\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Cursor not valid anymore\n        \"503\":\n          content:\n            application/json:\n              examples:\n                version-check-failed:\n                  description: Version check failed\n                  summary: Version check failed\n                  value:\n                    errors:\n                    - title: Endpoint not active yet\n                      detail: \"Not all cluster nodes support this endpoint yet, please\\\n                        \\ try again later\"\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Not all cluster nodes at minimum version\n      summary: List all MQTT clients\n      tags:\n      - MQTT Clients\n  /api/v1/mqtt/clients/{clientId}:\n    delete:\n      description: \"Invalidates the client session for a client with the given client\\\n        \\ identifier. If the client is currently connected, it will be disconnected\\\n        \\ as well.\\n\\n If your client identifiers contain special characters, please\\\n        \\ make sure that the clientId is URL encoded (a.k.a. percent-encoding, as\\\n        \\ in RFC 3986).\"\n      operationId: invalidateClientSession\n      parameters:\n      - description: The MQTT client identifier.\n        in: path\n        name: clientId\n        required: true\n        schema:\n          type: string\n      - description: Whether to prevent the will message.\n        in: query\n        name: preventWillMessage\n        schema:\n          type: boolean\n          default: false\n      responses:\n        \"204\":\n          content:\n            application/json: {}\n          description: Success (no content)\n        \"400\":\n          content:\n            application/json:\n              examples:\n                param-invalid:\n                  description: Bad request\n                  summary: Query parameter can not be parsed\n                  value:\n                    errors:\n                    - title: Parameter invalid\n                      detail: Query parameter 'parameter-name' is invalid\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Bad request\n        \"404\":\n          content:\n            application/json:\n              examples:\n                not-found:\n                  description: Not found\n                  summary: Not found\n                  value:\n                    errors:\n                    - title: Resource not found\n                      detail: Resource with id 'my-resource-id' not found\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Resource not found\n      summary: Invalidate a client session\n      tags:\n      - MQTT Clients\n    get:\n      description: \"Returns detailed information for a specific client with it is\\\n        \\ current state.\\n\\n Including all session and connection information.\\nIf\\\n        \\ your client identifiers contain special characters, please make sure that\\\n        \\ the clientId is URL Encoded (a.k.a. percent-encoding, as in RFC 3986).\"\n      operationId: getMqttClientDetails\n      parameters:\n      - description: The MQTT client identifier.\n        in: path\n        name: clientId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                offline-client:\n                  description: Offline client\n                  summary: offline-client\n                  value:\n                    client:\n                      id: client-1\n                      connected: false\n                      sessionExpiryInterval: 12345\n                      messageQueueSize: 543\n                      willPresent: false\n                online-client:\n                  description: Online client\n                  summary: online-client\n                  value:\n                    client:\n                      id: client-2\n                      connected: true\n                      sessionExpiryInterval: 15000\n                      connectedAt: 2020-07-20T14:59:50.580Z\n                      messageQueueSize: 0\n                      willPresent: false\n                      restrictions:\n                        maxMessageSize: 268435460\n                        maxQueueSize: 1000\n                        queuedMessageStrategy: DISCARD\n                      connection:\n                        keepAlive: 60\n                        mqttVersion: MQTTv5\n                        connectedListenerId: TCP Listener\n                        connectedNodeId: bRIG4\n                        cleanStart: true\n                        sourceIp: 127.0.0.1\n                online-client-tls-proxy:\n                  description: Online client with TLS and Proxy Protocol enabled\n                  summary: online-client-tls-proxy\n                  value:\n                    client:\n                      id: client-1\n                      connected: true\n                      sessionExpiryInterval: 12345\n                      connectedAt: 2020-07-17T14:47:59.704Z\n                      messageQueueSize: 543\n                      willPresent: true\n                      restrictions:\n                        maxMessageSize: 20000\n                      connection:\n                        keepAlive: 120\n                        mqttVersion: 3.1.1\n                        connectedListenerId: Tcp Listener\n                        connectedNodeId: node1\n                        username: username\n                        password: cGFzc3dvcmQ=\n                        cleanStart: true\n                        sourceIp: 192.168.1.200\n                        proxyInformation:\n                          sourceIp: 127.0.0.2\n                          sourcePort: 8080\n                          destinationIp: 127.0.0.3\n                          destinationPort: 50123\n                          tlvs:\n                          - key: PP2_TYPE_ALPN\n                            value: \"1\"\n                          - key: PP2_TYPE_AUTHORITY\n                            value: \"2\"\n                        tlsInformation:\n                          cipherSuite: cipher_suite\n                          tlsVersion: \"1.2\"\n                          certificateInformation:\n                            commonName: common-name\n                            organization: org\n                            organizationalUnit: org-unit\n                            serial: \"-3522625861374876620\"\n                            validFrom: 2020-07-20T14:56:02.000Z\n                            validUntil: 2020-07-21T14:56:12.000Z\n                            country: DE\n                            state: BY\n                            version: \"2\"\n              schema:\n                $ref: '#/components/schemas/ClientItem'\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              examples:\n                param-missing:\n                  description: Bad request\n                  summary: Required URL parameter missing\n                  value:\n                    errors:\n                    - title: Required parameter missing\n                      detail: Required URL parameter 'parameterName' is missing\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Bad request\n        \"404\":\n          content:\n            application/json:\n              examples:\n                not-found:\n                  description: Not found\n                  summary: Not found\n                  value:\n                    errors:\n                    - title: Resource not found\n                      detail: Resource with id 'my-resource-id' not found\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Resource not found\n      summary: Get detailed client information\n      tags:\n      - MQTT Clients\n  /api/v1/mqtt/clients/{clientId}/connection:\n    delete:\n      description: \"Disconnects a specific client if its is currently connected.\\n\\\n        \\n If your client identifiers contain special characters, please make sure\\\n        \\ that the clientId is URL Encoded (a.k.a. percent-encoding, as in RFC 3986).\"\n      operationId: disconnectClient\n      parameters:\n      - description: The MQTT client identifier.\n        in: path\n        name: clientId\n        required: true\n        schema:\n          type: string\n      - description: Whether to prevent the will message.\n        in: query\n        name: preventWillMessage\n        schema:\n          type: boolean\n          default: false\n      responses:\n        \"204\":\n          content:\n            application/json: {}\n          description: Success (no content)\n        \"400\":\n          content:\n            application/json:\n              examples:\n                param-invalid:\n                  description: Bad request\n                  summary: Query parameter can not be parsed\n                  value:\n                    errors:\n                    - title: Parameter invalid\n                      detail: Query parameter 'parameter-name' is invalid\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Bad request\n        \"404\":\n          content:\n            application/json:\n              examples:\n                not-found:\n                  description: Not found\n                  summary: Not found\n                  value:\n                    errors:\n                    - title: Resource not found\n                      detail: Resource with id 'my-resource-id' not found\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Resource not found\n      summary: Disconnect a client\n      tags:\n      - MQTT Clients\n    get:\n      description: \"Returns the information if a specific client is currently connected.\\n\\\n        \\n If you are only interested in the connection status of a client prefer\\\n        \\ this endpoint over the the full client detail.\\nIf your client identifiers\\\n        \\ contain special characters, please make sure that the clientId is URL Encoded\\\n        \\ (a.k.a. percent-encoding, as in RFC 3986).\"\n      operationId: getMqttClientConnectionState\n      parameters:\n      - description: The MQTT client identifier.\n        in: path\n        name: clientId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                online-client:\n                  description: Online client\n                  summary: online-client\n                  value:\n                    connection:\n                      connected: false\n              schema:\n                $ref: '#/components/schemas/ConnectionItem'\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              examples:\n                param-missing:\n                  description: Bad request\n                  summary: Required URL parameter missing\n                  value:\n                    errors:\n                    - title: Required parameter missing\n                      detail: Required URL parameter 'parameterName' is missing\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Bad request\n        \"404\":\n          content:\n            application/json:\n              examples:\n                not-found:\n                  description: Not found\n                  summary: Not found\n                  value:\n                    errors:\n                    - title: Resource not found\n                      detail: Resource with id 'my-resource-id' not found\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Resource not found\n      summary: Get a clients connection state\n      tags:\n      - MQTT Clients\n  /api/v1/mqtt/clients/{clientId}/subscriptions:\n    get:\n      description: \"List all subscriptions for a specific client.\\n\\nThis endpoint\\\n        \\ does not support pagination with cursor at the moment, but it might be added\\\n        \\ in future versions. Please make sure to check if a cursor is returned and\\\n        \\ another page is available to have a future-proof implementation.\"\n      operationId: getSubscriptionsForMqttClient\n      parameters:\n      - description: The MQTT client identifier.\n        in: path\n        name: clientId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                empty-result:\n                  description: Empty result if client has no subscriptions.\n                  summary: Empty result if client has no subscriptions\n                  value:\n                    items: []\n                multiple-results:\n                  description: Example response with multiple results.\n                  summary: Multiple results\n                  value:\n                    items:\n                    - topicFilter: topic/0\n                      qos: AT_MOST_ONCE\n                      retainHandling: SEND\n                      retainAsPublished: true\n                      noLocal: false\n                      subscriptionIdentifier: 1\n                    - topicFilter: topic/2\n                      qos: EXACTLY_ONCE\n                      retainHandling: SEND\n                      retainAsPublished: false\n                      noLocal: true\n                      subscriptionIdentifier: 3\n                    - topicFilter: $share/sharename/topic/1\n                      qos: AT_LEAST_ONCE\n                      retainHandling: DO_NOT_SEND\n                      retainAsPublished: false\n                      noLocal: false\n                      subscriptionIdentifier: 2\n              schema:\n                $ref: '#/components/schemas/ClientSubscriptionList'\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              examples:\n                param-missing:\n                  description: Bad request\n                  summary: Required URL parameter missing\n                  value:\n                    errors:\n                    - title: Required parameter missing\n                      detail: Required URL parameter 'parameterName' is missing\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Bad request\n        \"404\":\n          content:\n            application/json:\n              examples:\n                not-found:\n                  description: Not found\n                  summary: Not found\n                  value:\n                    errors:\n                    - title: Resource not found\n                      detail: Resource with id 'my-resource-id' not found\n              schema:\n                $ref: '#/components/schemas/Errors'\n          description: Resource not found\n      summary: List all subscriptions for MQTT client\n      tags:\n      - MQTT Clients\ncomponents:\n  schemas:\n    Backup:\n      type: object\n      properties:\n        bytes:\n          type: integer\n          format: int64\n          description: The size of this backup file in bytes.\n          nullable: true\n        createdAt:\n          type: string\n          format: date-time\n          description: Time the backup was created at\n        failReason:\n          type: string\n          description: \"The reason why this backup failed, only present for failed\\\n            \\ backups.\"\n          nullable: true\n        id:\n          type: string\n          description: The id of this backup\n        state:\n          type: string\n          description: The current state of the backup\n          enum:\n          - COMPLETED\n          - RESTORE_COMPLETED\n          - IN_PROGRESS\n          - RESTORE_IN_PROGRESS\n          - FAILED\n          - RESTORE_FAILED\n    BackupItem:\n      type: object\n      properties:\n        backup:\n          $ref: '#/components/schemas/Backup'\n    BackupList:\n      type: object\n      properties:\n        items:\n          type: array\n          description: List of result items that are returned by this endpoint\n          items:\n            $ref: '#/components/schemas/Backup'\n    CertificateInformation:\n      type: object\n      description: The client certificate sent by the client\n      nullable: true\n      properties:\n        commonName:\n          type: string\n          description: Common name\n          nullable: true\n        country:\n          type: string\n          description: Country\n          nullable: true\n        organization:\n          type: string\n          description: Organization\n          nullable: true\n        organizationalUnit:\n          type: string\n          description: Organizational unit\n          nullable: true\n        serial:\n          type: string\n          description: The certificates serial\n          nullable: true\n        state:\n          type: string\n          description: State\n          nullable: true\n        validFrom:\n          type: string\n          format: date-time\n          description: Valid from date\n        validUntil:\n          type: string\n          format: date-time\n          description: Valid until date\n        version:\n          type: string\n          description: Certificate version\n          nullable: true\n    Client:\n      type: object\n      description: List of result items that are returned by this endpoint\n      properties:\n        id:\n          type: string\n    ClientDetails:\n      type: object\n      properties:\n        connected:\n          type: boolean\n          description: If this client is connected\n        connectedAt:\n          type: string\n          format: date-time\n          description: Time the client connection was established\n          nullable: true\n        connection:\n          $ref: '#/components/schemas/ConnectionDetails'\n        id:\n          type: string\n          description: The MQTT client identifier\n        messageQueueSize:\n          type: integer\n          format: int64\n          description: The current message queue size for this client\n        restrictions:\n          $ref: '#/components/schemas/ClientRestrictions'\n        sessionExpiryInterval:\n          type: integer\n          format: int64\n          description: The session expiry interval\n          nullable: true\n        willPresent:\n          type: boolean\n          description: If a will is present for this client\n    ClientItem:\n      type: object\n      properties:\n        client:\n          $ref: '#/components/schemas/ClientDetails'\n    ClientList:\n      type: object\n      properties:\n        _links:\n          $ref: '#/components/schemas/PaginationCursor'\n        items:\n          type: array\n          description: List of result items that are returned by this endpoint\n          items:\n            $ref: '#/components/schemas/Client'\n    ClientRestrictions:\n      type: object\n      description: The restrictions that are in effect for this client\n      nullable: true\n      properties:\n        maxMessageSize:\n          type: integer\n          format: int64\n          description: maximum MQTT message size\n          nullable: true\n        maxQueueSize:\n          type: integer\n          format: int64\n          description: maximum queue size\n          nullable: true\n        queuedMessageStrategy:\n          type: string\n          description: The queue strategy if the queue is full\n          nullable: true\n    ClientSubscription:\n      type: object\n      description: List of result items that are returned by this endpoint\n      properties:\n        noLocal:\n          type: boolean\n          description: The No Local flag\n        qos:\n          type: string\n          description: The Quality of Service level\n          enum:\n          - AT_MOST_ONCE\n          - AT_LEAST_ONCE\n          - EXACTLY_ONCE\n        retainAsPublished:\n          type: boolean\n          description: The Retain As Published flag\n        retainHandling:\n          type: string\n          description: Retain handling option\n          enum:\n          - SEND\n          - SEND_IF_NEW_SUBSCRIPTION\n          - DO_NOT_SEND\n        subscriptionIdentifier:\n          type: integer\n          format: int32\n          description: The subscription identifier\n          nullable: true\n        topicFilter:\n          type: string\n          description: The MQTT topic filter\n    ClientSubscriptionList:\n      type: object\n      properties:\n        _links:\n          $ref: '#/components/schemas/PaginationCursor'\n        items:\n          type: array\n          description: List of result items that are returned by this endpoint\n          items:\n            $ref: '#/components/schemas/ClientSubscription'\n    Connection:\n      type: object\n      description: Information about the client's connection state\n      properties:\n        connected:\n          type: boolean\n          description: If this client is currently connected\n    ConnectionDetails:\n      type: object\n      description: Information about the clients connection\n      nullable: true\n      properties:\n        cleanStart:\n          type: boolean\n          description: Clean start flag\n        connectedListenerId:\n          type: string\n          description: Id of the HiveMQ listener the client is connected to\n        connectedNodeId:\n          type: string\n          description: Id of the HiveMQ node the client is connected to\n        keepAlive:\n          type: integer\n          format: int32\n          description: Connection Keep Alive in seconds\n          nullable: true\n        mqttVersion:\n          type: string\n          description: MQTT version of the client\n        password:\n          type: string\n          format: byte\n          description: Password\n          nullable: true\n        proxyInformation:\n          $ref: '#/components/schemas/ProxyInformation'\n        sourceIp:\n          type: string\n          description: The client's IP\n          nullable: true\n        tlsInformation:\n          $ref: '#/components/schemas/TlsInformation'\n        username:\n          type: string\n          description: Username\n          nullable: true\n    ConnectionItem:\n      type: object\n      properties:\n        connection:\n          $ref: '#/components/schemas/Connection'\n    Error:\n      type: object\n      properties:\n        detail:\n          type: string\n          description: Detailed contextual description of this error\n        title:\n          type: string\n          description: The type of this error\n    Errors:\n      type: object\n      properties:\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/Error'\n    PaginationCursor:\n      type: object\n      description: Links for pagination\n      nullable: true\n      properties:\n        next:\n          type: string\n    ProxyInformation:\n      type: object\n      description: Proxy Protocol information\n      nullable: true\n      properties:\n        destinationIp:\n          type: string\n          description: The client's destination IP as seen by the proxy\n        destinationPort:\n          type: integer\n          format: int32\n          description: The client's destination port as seen by the proxy\n        sourceIp:\n          type: string\n          description: The client's IP as seen by the proxy\n        sourcePort:\n          type: integer\n          format: int32\n          description: The client's Port as seen by the proxy\n        tlvs:\n          type: array\n          description: Additional TLV fields contained in the proxy protocol information\n          items:\n            $ref: '#/components/schemas/TLV'\n          nullable: true\n    TLV:\n      type: object\n      description: Additional TLV fields contained in the proxy protocol information\n      nullable: true\n      properties:\n        key:\n          type: string\n          description: TLV Key\n        value:\n          type: string\n          description: TLV value\n    TlsInformation:\n      type: object\n      description: TLS information\n      nullable: true\n      properties:\n        certificateInformation:\n          $ref: '#/components/schemas/CertificateInformation'\n        cipherSuite:\n          type: string\n          description: The used cipher suite\n        tlsVersion:\n          type: string\n          description: The used TLS version\n    TraceFilter:\n      type: object\n      description: Topic filters to trace\n      properties:\n        regex:\n          type: string\n          description: Regex pattern this filter will trace for.\n    TraceRecording:\n      type: object\n      description: \"Trace recording item describing the desired (and optionally, when\\\n        \\ receiving from the server: current) state of a trace recording\"\n      properties:\n        clientIdFilters:\n          type: array\n          description: Client ID filters to trace\n          items:\n            $ref: '#/components/schemas/TraceFilter'\n          uniqueItems: true\n        endAt:\n          type: string\n          format: date-time\n          description: Time the trace recording is scheduled to stop at. Must be at\n            a later time from the start time\n        events:\n          type: array\n          description: MQTT events to trace\n          items:\n            type: string\n            description: MQTT events to trace\n            enum:\n            - MQTT_MESSAGE_CONNECT\n            - MQTT_MESSAGE_CONNACK\n            - MQTT_MESSAGE_SUBSCRIBE\n            - MQTT_MESSAGE_SUBACK\n            - MQTT_MESSAGE_PUBLISH\n            - MQTT_MESSAGE_PUBACK\n            - MQTT_MESSAGE_PUBREC\n            - MQTT_MESSAGE_PUBREL\n            - MQTT_MESSAGE_PUBCOMP\n            - MQTT_MESSAGE_UNSUBSCRIBE\n            - MQTT_MESSAGE_UNSUBACK\n            - MQTT_MESSAGE_PINGREQ\n            - MQTT_MESSAGE_PINGRESP\n            - MQTT_MESSAGE_DISCONNECT\n            - MQTT_MESSAGE_AUTH\n          uniqueItems: true\n        name:\n          type: string\n          description: \"Name of the trace recording. Must be unique, contain at least\\\n            \\ three characters and only combinations of numbers, letters, dashes and\\\n            \\ underscores are allowed\"\n        startAt:\n          type: string\n          format: date-time\n          description: Time the trace recording is scheduled to start at\n        state:\n          type: string\n          description: \"Current state of the recording. Only sent by the API, ignored\\\n            \\ if specified on POST\"\n          enum:\n          - SCHEDULED\n          - IN_PROGRESS\n          - ABORTED\n          - STOPPED\n        topicFilters:\n          type: array\n          description: Topic filters to trace\n          items:\n            $ref: '#/components/schemas/TraceFilter'\n          uniqueItems: true\n    TraceRecordingItem:\n      type: object\n      properties:\n        traceRecording:\n          $ref: '#/components/schemas/TraceRecording'\n      required:\n      - traceRecording\n    TraceRecordingList:\n      type: object\n      properties:\n        items:\n          type: array\n          description: List of result items that are returned by this endpoint\n          items:\n            $ref: '#/components/schemas/TraceRecording'\n",
			"canonicalURL": "/github.com/hivemq/mqtt-cli@fd9b57d995a4019e0fa918eb0abc7bf77af38d87/-/blob/specs/hivemq-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/hivemq/mqtt-cli/blob/fd9b57d995a4019e0fa918eb0abc7bf77af38d87/specs/hivemq-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/v1/mqtt/clients/{clientId}\": delete: responses: 204: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}