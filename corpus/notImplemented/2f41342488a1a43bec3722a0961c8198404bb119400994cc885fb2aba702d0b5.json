{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/imfht/flaskapps"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "connexion-master/tests/fixtures/different_schemas/openapi.yaml",
			"byteSize": 8690,
			"content": "openapi: 3.0.0\ninfo:\n  title: '{{title}}'\n  version: '1.0'\nservers:\n  - url: /v1.0\npaths:\n  /test_schema:\n    post:\n      summary: Returns the image_version\n      description: Returns the image_version\n      operationId: fakeapi.hello.schema\n      responses:\n        '200':\n          description: goodbye response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/new_stack'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              x-body-name: new_stack\n              $ref: '#/components/schemas/new_stack'\n        required: true\n  '/test_schema/response/object/{valid}':\n    get:\n      summary: Returns an image_version as an object\n      description: Returns image_version\n      operationId: fakeapi.hello.schema_response_object\n      parameters:\n        - name: valid\n          in: path\n          description: Whether to return a valid or invalid schema in the response body\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Requested new_stack data model\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/new_stack'\n  '/test_schema/response/string/{valid}':\n    get:\n      summary: Returns an image_version as a string\n      description: Returns image_version\n      operationId: fakeapi.hello.schema_response_string\n      parameters:\n        - name: valid\n          in: path\n          description: Whether to return a valid or invalid schema in the response body\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Requested new_stack data model\n          content:\n            text/plain:\n              schema:\n                type: string\n  '/test_schema/response/integer/{valid}':\n    get:\n      summary: Returns an image_version as an integer\n      description: Returns image_version\n      operationId: fakeapi.hello.schema_response_integer\n      parameters:\n        - name: valid\n          in: path\n          description: Whether to return a valid or invalid schema in the response body\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Requested new_stack data model\n          content:\n            text/plain:\n              schema:\n                type: integer\n  '/test_schema/response/number/{valid}':\n    get:\n      summary: Returns an image_version as a number(float)\n      description: Returns image_version\n      operationId: fakeapi.hello.schema_response_number\n      parameters:\n        - name: valid\n          in: path\n          description: Whether to return a valid or invalid schema in the response body\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Requested new_stack data model\n          content:\n            text/plain:\n              schema:\n                type: number\n  '/test_schema/response/boolean/{valid}':\n    get:\n      summary: Returns an image_version as a boolean\n      description: Returns image_version\n      operationId: fakeapi.hello.schema_response_boolean\n      parameters:\n        - name: valid\n          in: path\n          description: Whether to return a valid or invalid schema in the response body\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Requested new_stack data model\n          content:\n            text/plain:\n              schema:\n                type: boolean\n  '/test_schema/response/array/{valid}':\n    get:\n      summary: Returns an image_version as a boolean\n      description: Returns image_version\n      operationId: fakeapi.hello.schema_response_array\n      parameters:\n        - name: valid\n          in: path\n          description: Whether to return a valid or invalid schema in the response body\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Requested new_stack data model\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/new_stack'\n  /test_schema_in_query:\n    post:\n      summary: Returns the image_version\n      description: Returns the image_version\n      operationId: fakeapi.hello.schema_query\n      parameters:\n        - name: image_version\n          required: true\n          in: query\n          schema:\n            type: string\n        - name: not_required\n          required: false\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: goodbye response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/new_stack'\n  /test_schema_list:\n    post:\n      summary: Returns empty response\n      description: Returns empty response\n      operationId: fakeapi.hello.schema_list\n      responses:\n        '200':\n          description: goodbye response\n          content:\n            application/json:\n              schema:\n                type: string\n      requestBody:\n        $ref: '#/components/requestBodies/fakeapi.hello.schema_listNewStack'\n  /test_schema_map:\n    post:\n      summary: Returns empty response\n      description: Returns empty response\n      operationId: fakeapi.hello.schema_map\n      responses:\n        '200':\n          description: goodbye response\n          content:\n            application/json:\n              schema:\n                type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties:\n                $ref: '#/components/schemas/new_stack'\n        required: true\n  /test_schema_recursive:\n    post:\n      summary: Returns empty response\n      description: Returns empty response\n      operationId: fakeapi.hello.schema_recursive\n      responses:\n        '200':\n          description: goodbye response\n          content:\n            application/json:\n              schema:\n                type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/simple_tree'\n        required: true\n  /test_schema_format:\n    post:\n      summary: Returns empty response\n      description: Returns empty response\n      operationId: fakeapi.hello.schema_format\n      responses:\n        '200':\n          description: goodbye response\n          content:\n            application/json:\n              schema:\n                type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              format: email\n        required: true\n  /schema_int:\n    post:\n      description: test schema int\n      operationId: fakeapi.hello.test_schema_int\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              x-body-name: test_int\n              type: integer\n        required: true\n  /schema_array:\n    post:\n      description: test schema array\n      operationId: fakeapi.hello.test_schema_array\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        $ref: '#/components/requestBodies/fakeapi.hello.schema_listNewStack'\n  /define_global_response:\n    get:\n      description: Should allow global response definitions\n      operationId: fakeapi.hello.test_global_response_definition\n      responses:\n        '200':\n          $ref: '#/components/responses/GeneralList'\ncomponents:\n  responses:\n    GeneralList:\n      description: A nice string array\n      content:\n        'application/json':\n          schema:\n            type: array\n            items:\n              type: string\n  requestBodies:\n    fakeapi.hello.schema_listNewStack:\n      content:\n        application/json:\n          schema:\n            x-body-name: test_array\n            type: array\n            items:\n              type: string\n      required: true\n  schemas:\n    new_stack:\n      type: object\n      properties:\n        image_version:\n          type: string\n          description: Docker image version to deploy\n      required:\n        - image_version\n    simple_tree:\n      type: object\n      properties:\n        children:\n          type: array\n          items:\n            $ref: '#/components/schemas/simple_tree'\n          description: Docker image version to deploy\n      additionalProperties: false\n",
			"canonicalURL": "/github.com/imfht/flaskapps@d6fc9b7e32d7dc6b493c269b8ccbaa6ee2d690c1/-/blob/connexion-master/tests/fixtures/different_schemas/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/imfht/flaskapps/blob/d6fc9b7e32d7dc6b493c269b8ccbaa6ee2d690c1/connexion-master/tests/fixtures/different_schemas/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/test_schema/response/integer/{valid}\": get: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}