{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/asuarez.dev/searchly/1.0/openapi.yaml",
			"byteSize": 16568,
			"content": "openapi: 3.0.1\nservers:\n  - url: https://searchly.asuarez.dev/api/v1\ninfo:\n  contact:\n    email: hi@asuarez.dev\n  description: |\n    # Introduction\n    The SearchLy API provides similarity searching based on song lyrics.\n\n    # Operations\n    The API allows for the `/similarity/by_song` operation, which allows clients to search the similarity for an existing song in the database. Also, the API has an additional `/similarity/by_content` endpoint which allows clients to search similarity given a free String input through a JSON request body. Additional `/song/search` operation is available for searching songs given a query String.\n\n    # Endpoint\n    The API endpoint for the SearchLy API v1 is as follows:\n    ```\n    https://searchly.asuarez.dev/api/v1\n    ```\n\n    # Motivation\n    This project was built in order to create an API for searching similarities based on song lyrics. There are a lot of songs in the industry and most of them are talking about the same topic. What I wanted to prove with SearchLy was to estimate how similar are two songs between them based on the meaning of their lyrics.\n\n    SearchLy is using a database of 100k songs from AZLyrics, using [this scraper](https://github.com/AlbertSuarez/azlyrics-scraper), which is being updated periodically. Then, using word2vec and NMSLIB, it was possible to create an index where you can search similarities using the k-nearest neighbors (KNN) algorithm.\n\n    \u003e **Note**: I am currently using a micro-instance from DigitalOcean where the API is deployed, so you should expect a bad performance. However, if this API becomes popular I will deploy it in a bigger instance.\n  title: SearchLy API v1\n  version: \"1.0\"\n  x-apisguru-categories:\n    - media\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/AlbertSuarez/searchly/master/src/searchly/static/openapi/openapi_v1.yaml\n      version: \"3.0\"\n  x-providerName: asuarez.dev\n  x-serviceName: searchly\nexternalDocs:\n  description: SearchLy demo\n  url: https://searchly.asuarez.dev/\ntags:\n  - name: similarity\n    x-displayName: Similarity search\n  - name: song\n    x-displayName: Song search\npaths:\n  /similarity/by_content:\n    post:\n      description: |\n        Endpoint for an end-user client to search similarity by content.\n\n        If you want to run the /similarity/by_content operation, you can do so via an HTTP POST command to the following URL:\n\n        ```\n        https://searchly.asuarez.dev/api/v1/similarity/by_content\n        ```\n      operationId: src.searchly.api.v1.controllers.similarity.by_content\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                content:\n                  description: Content for searching similarity.\n                  type: string\n              type: object\n        description: Body wrapper for the request.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIResponseSimilarity\"\n          description: Standard SearchLy API v1 JSON response. You should check the `error` attribute to determine if there was an error.\n        default:\n          content:\n            application/text:\n              schema:\n                description: Error description.\n                type: string\n          description: Unexpected error.\n      summary: API endpoint to search similarity using content\n      tags:\n        - similarity\n      x-code-samples:\n        - lang: python\n          source: |\n            # Make sure you have installed the required packages:\n            #   pip install requests\n\n            import requests\n\n            url = 'https://searchly.asuarez.dev/api/v1/similarity/by_content'\n            request_body = {\"content\": \"CONTENT\"}\n\n            # Make the classify request\n            response = requests.post(url, json=request_body)\n\n            # The response is formatted in JSON\n            json_response = response.json()\n        - lang: Java\n          source: |\n            try {\n              URL myurl = new URL(\"https://searchly.asuarez.dev/api/v1/similarity/by_content\");\n              con = (HttpURLConnection) myurl.openConnection();\n              con.setRequestMethod(\"POST\");\n              StringBuilder content;\n\n              String jsonInputString = \"{\" +\n                  \"\\\"content\\\": \\\"CONTENT\\\"\" +\n                \"}\";\n              try (OutputStream os = con.getOutputStream()) {\n                byte[] input = jsonInputString.getBytes(\"utf-8\");\n                os.write(input, 0, input.length);\n              }\n\n              try (BufferedReader br = new BufferedReader(\n                      new InputStreamReader(con.getInputStream(), \"utf-8\"))) {\n                StringBuilder response = new StringBuilder();\n                String responseLine = null;\n                while ((responseLine = br.readLine()) != null) {\n                  response.append(responseLine.trim());\n                }\n                System.out.println(response.toString());\n              }\n\n            } finally {\n              con.disconnect();\n            }\n        - lang: C#\n          source: |\n            var httpWebRequest = (HttpWebRequest)WebRequest.Create(\"https://searchly.asuarez.dev/api/v1/similarity/by_content\");\n            httpWebRequest.ContentType = \"application/json\";\n            httpWebRequest.Method = \"POST\";\n\n            using (var streamWriter = new StreamWriter(httpWebRequest.GetRequestStream()))\n            {\n              string json = \"{\" +\n                  \"\\\"content\\\": \\\"CONTENT\\\"\" +\n                \"}\";\n              streamWriter.Write(json);\n            }\n\n            var httpResponse = (HttpWebResponse)httpWebRequest.GetResponse();\n            using (var streamReader = new StreamReader(httpResponse.GetResponseStream()))\n            {\n              var result = streamReader.ReadToEnd();\n            }\n        - lang: php\n          source: |\n            \u003c?php\n              // The data to send to the API\n              $postData = array(\n                'content' =\u003e 'CONTENT'\n              );\n\n              // Setup cURL\n              $ch = curl_init('https://searchly.asuarez.dev/api/v1/similarity/by_content');\n              curl_setopt_array($ch, array(\n                CURLOPT_POST =\u003e TRUE,\n                CURLOPT_RETURNTRANSFER =\u003e TRUE,\n                CURLOPT_HTTPHEADER =\u003e array(\n                    'Content-Type: application/json'\n                ),\n                CURLOPT_POSTFIELDS =\u003e json_encode($postData)\n              ));\n\n              // Send the request\n              $response = curl_exec($ch);\n            ?\u003e\n        - lang: shell\n          source: |\n            curl \"https://searchly.asuarez.dev/api/v1/similarity/by_content\"\\\n            -d content=\"CONTENT\"\n  /similarity/by_song:\n    get:\n      description: |\n        Endpoint for an end-user client to search similarity by song identifier.\n\n        If you want to run the /similarity/by_song operation, you can do so via an HTTP GET command to the following URL:\n\n        ```\n        https://searchly.asuarez.dev/api/v1/similarity/by_song\n        ```\n      operationId: src.searchly.api.v1.controllers.similarity.by_song\n      parameters:\n        - description: Song identifier.\n          example: 234\n          in: query\n          name: song_id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIResponseSimilarity\"\n          description: Standard SearchLy API v1 JSON response. You should check the `error` attribute to determine if there was an error.\n        default:\n          content:\n            application/text:\n              schema:\n                description: Error description.\n                type: string\n          description: Unexpected error.\n      summary: API endpoint to search similarity using a song identifier\n      tags:\n        - similarity\n      x-code-samples:\n        - lang: python\n          source: |\n            # Make sure you have installed the required packages:\n            #   pip install requests\n\n            import requests\n\n            url = 'https://searchly.asuarez.dev/api/v1/similarity/by_song'\n            payload = {'song_id': SONG_IDENTIFIER}\n\n            # Make the classify request\n            response = requests.get(url, params=payload)\n\n            # The response is formatted in JSON\n            json_response = response.json()\n        - lang: Java\n          source: |\n            try {\n              URL myurl = new URL(\"https://searchly.asuarez.dev/api/v1/similarity/by_song\" +\n                \"?song_id=\" + \"SONG_IDENTIFIER\");\n              con = (HttpURLConnection) myurl.openConnection();\n              con.setRequestMethod(\"GET\");\n              StringBuilder content;\n\n              try (BufferedReader br = new BufferedReader(\n                      new InputStreamReader(con.getInputStream(), \"utf-8\"))) {\n                StringBuilder response = new StringBuilder();\n                String responseLine = null;\n                while ((responseLine = br.readLine()) != null) {\n                  response.append(responseLine.trim());\n                }\n                System.out.println(response.toString());\n              }\n\n            } finally {\n              con.disconnect();\n            }\n        - lang: C#\n          source: |\n            var httpWebRequest = (HttpWebRequest)WebRequest.Create(\"https://searchly.asuarez.dev/api/v1/similarity/by_song\" +\n              \"?song_id=\" + \"SONG_IDENTIFIER\");\n            httpWebRequest.Method = \"GET\";\n\n            var httpResponse = (HttpWebResponse)httpWebRequest.GetResponse();\n            using (var streamReader = new StreamReader(httpResponse.GetResponseStream()))\n            {\n              var result = streamReader.ReadToEnd();\n            }\n        - lang: php\n          source: |\n            \u003c?php\n              // Setup cURL\n              $ch = curl_init('https://searchly.asuarez.dev/api/v1/similarity/by_song'.'?song_id='.'SONG_IDENTIFIER');\n\n              // Send the request\n              $response = curl_exec($ch);\n            ?\u003e\n        - lang: shell\n          source: |\n            curl \"https://searchly.asuarez.dev/api/v1/similarity/by_song?song_id=SONG_IDENTIFIER\"\n  /song/search:\n    get:\n      description: |\n        Endpoint for an end-user client to search songs from the database given a String query.\n\n        If you want to run the /song/search operation, you can do so via an HTTP GET command to the following URL:\n\n        ```\n        https://searchly.asuarez.dev/api/v1/song/search\n        ```\n      operationId: src.searchly.api.v1.controllers.song.search\n      parameters:\n        - description: Query.\n          example: Miley Cyrus\n          in: query\n          name: query\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIResponseSong\"\n          description: Standard SearchLy API v1 JSON response. You should check the `error` attribute to determine if there was an error.\n        default:\n          content:\n            application/text:\n              schema:\n                description: Error description.\n                type: string\n          description: Unexpected error.\n      summary: API endpoint to search songs from the database given a query\n      tags:\n        - song\n      x-code-samples:\n        - lang: python\n          source: |\n            # Make sure you have installed the required packages:\n            #   pip install requests\n\n            import requests\n\n            url = 'https://searchly.asuarez.dev/api/v1/song/search'\n            payload = {'query': 'QUERY'}\n\n            # Make the classify request\n            response = requests.get(url, params=payload)\n\n            # The response is formatted in JSON\n            json_response = response.json()\n        - lang: Java\n          source: |\n            try {\n              URL myurl = new URL(\"https://searchly.asuarez.dev/api/v1/song/search\" +\n                \"?query=\" + \"QUERY\");\n              con = (HttpURLConnection) myurl.openConnection();\n              con.setRequestMethod(\"GET\");\n              StringBuilder content;\n\n              try (BufferedReader br = new BufferedReader(\n                      new InputStreamReader(con.getInputStream(), \"utf-8\"))) {\n                StringBuilder response = new StringBuilder();\n                String responseLine = null;\n                while ((responseLine = br.readLine()) != null) {\n                  response.append(responseLine.trim());\n                }\n                System.out.println(response.toString());\n              }\n\n            } finally {\n              con.disconnect();\n            }\n        - lang: C#\n          source: |\n            var httpWebRequest = (HttpWebRequest)WebRequest.Create(\"https://searchly.asuarez.dev/api/v1/song/search\" +\n              \"?query=\" + \"QUERY\");\n            httpWebRequest.Method = \"GET\";\n\n            var httpResponse = (HttpWebResponse)httpWebRequest.GetResponse();\n            using (var streamReader = new StreamReader(httpResponse.GetResponseStream()))\n            {\n              var result = streamReader.ReadToEnd();\n            }\n        - lang: php\n          source: |\n            \u003c?php\n              // Setup cURL\n              $ch = curl_init('https://searchly.asuarez.dev/api/v1/song/search'.'?query='.'QUERY');\n\n              // Send the request\n              $response = curl_exec($ch);\n            ?\u003e\n        - lang: shell\n          source: |\n            curl \"https://searchly.asuarez.dev/api/v1/song/search?query=QUERY\"\ncomponents:\n  schemas:\n    APIResponseSimilarity:\n      properties:\n        error:\n          description: Whether or not the request was successfully processed or not.\n          type: boolean\n        message:\n          description: Error message if the request was unsuccessful.\n          type: string\n        response:\n          description: Contains the response data if the request was successful.\n          properties:\n            similarity_list:\n              description: Contains all the similarity items representing songs.\n              items:\n                description: Song similarity item.\n                properties:\n                  artist_name:\n                    description: Artist's song name.\n                    type: string\n                  artist_url:\n                    description: Artist URL.\n                    type: string\n                  id:\n                    description: Song internal identifier.\n                    type: integer\n                  index_id:\n                    description: Index internal identifier.\n                    type: integer\n                  lyrics:\n                    description: Song lyrics.\n                    type: string\n                  percentage:\n                    description: Similarity percentage.\n                    format: float\n                    type: number\n                  song_name:\n                    description: Song name.\n                    type: string\n                  song_url:\n                    description: Song URL.\n                    type: string\n                type: object\n              type: array\n          type: object\n      type: object\n    APIResponseSong:\n      properties:\n        error:\n          description: Whether or not the request was successfully processed or not.\n          type: boolean\n        message:\n          description: Error message if the request was unsuccessful.\n          type: string\n        response:\n          description: Contains the response data if the request was successful.\n          properties:\n            results:\n              description: Contains all the songs.\n              items:\n                description: Song item.\n                properties:\n                  id:\n                    description: Song internal identifier.\n                    type: integer\n                  name:\n                    description: Song and Artist name.\n                    type: string\n                type: object\n              type: array\n          type: object\n      type: object\nx-logo:\n  altText: SearchLy\n  url: https://searchly.asuarez.dev/static/img/logo.png\nx-tagGroups:\n  - name: Similarity\n    tags:\n      - similarity\n  - name: Song\n    tags:\n      - song\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/asuarez.dev/searchly/1.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/asuarez.dev/searchly/1.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/similarity/by_content\": post: responses: default: contents: unsupported content types: [application/text]",
	"NotImplemented": [
		"unsupported content types"
	]
}