{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wso2/product-apim"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "modules/integration/tests-common/clients/admin/api/openapi.yaml",
			"byteSize": 317079,
			"content": "openapi: 3.0.1\ninfo:\n  contact:\n    email: architecture@wso2.com\n    name: WSO2\n    url: http://wso2.com/products/api-manager/\n  description: |\n    This document specifies a **RESTful API** for WSO2 **API Manager** - **Admin Portal**.\n    Please see [full OpenAPI Specification](https://raw.githubusercontent.com/wso2/carbon-apimgt/v6.7.206/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/resources/admin-api.yaml) of the API which is written using [OAS 3.0](http://swagger.io/) specification.\n\n    # Authentication\n    Our REST APIs are protected using OAuth2 and access control is achieved through scopes. Before you start invoking\n    the the API you need to obtain an access token with the required scopes. This guide will walk you through the steps\n    that you will need to follow to obtain an access token.\n    First you need to obtain the consumer key/secret key pair by calling the dynamic client registration (DCR) endpoint. You can add your preferred grant types\n    in the payload. A sample payload is shown below.\n    ```\n      {\n      \"callbackUrl\":\"www.google.lk\",\n      \"clientName\":\"rest_api_admin\",\n      \"owner\":\"admin\",\n      \"grantType\":\"client_credentials password refresh_token\",\n      \"saasApp\":true\n      }\n    ```\n    Create a file (payload.json) with the above sample payload, and use the cURL shown bellow to invoke the DCR endpoint. Authorization header of this should contain the\n    base64 encoded admin username and password.\n    **Format of the request**\n    ```\n      curl -X POST -H \"Authorization: Basic Base64(admin_username:admin_password)\" -H \"Content-Type: application/json\"\n      \\ -d @payload.json https://\u003chost\u003e:\u003cservlet_port\u003e/client-registration/v0.17/register\n    ```\n    **Sample request**\n    ```\n      curl -X POST -H \"Authorization: Basic YWRtaW46YWRtaW4=\" -H \"Content-Type: application/json\"\n      \\ -d @payload.json https://localhost:9443/client-registration/v0.17/register\n    ```\n    Following is a sample response after invoking the above curl.\n    ```\n    {\n    \"clientId\": \"fOCi4vNJ59PpHucC2CAYfYuADdMa\",\n    \"clientName\": \"rest_api_admin\",\n    \"callBackURL\": \"www.google.lk\",\n    \"clientSecret\": \"a4FwHlq0iCIKVs2MPIIDnepZnYMa\",\n    \"isSaasApplication\": true,\n    \"appOwner\": \"admin\",\n    \"jsonString\": \"{\\\"grant_types\\\":\\\"client_credentials password refresh_token\\\",\\\"redirect_uris\\\":\\\"www.google.lk\\\",\\\"client_name\\\":\\\"rest_api_admin\\\"}\",\n    \"jsonAppAttribute\": \"{}\",\n    \"tokenType\": null\n    }\n    ```\n    Next you must use the above client id and secret to obtain the access token.\n    We will be using the password grant type for this, you can use any grant type you desire.\n    You also need to add the proper **scope** when getting the access token. All possible scopes for Admin REST API can be viewed in **OAuth2 Security** section\n    of this document and scope for each resource is given in **authorizations** section of resource documentation.\n    Following is the format of the request if you are using the password grant type.\n    ```\n    curl -k -d \"grant_type=password\u0026username=\u003cadmin_username\u003e\u0026password=\u003cadmin_passowrd\u003e\u0026scope=\u003cscopes seperated by space\u003e\"\n    \\ -H \"Authorization: Basic base64(cliet_id:client_secret)\"\n    \\ https://\u003chost\u003e:\u003cgateway_port\u003e/token\n    ```\n    **Sample request**\n    ```\n    curl https://localhost:8243/token -k \\\n    -H \"Authorization: Basic Zk9DaTR2Tko1OVBwSHVjQzJDQVlmWXVBRGRNYTphNEZ3SGxxMGlDSUtWczJNUElJRG5lcFpuWU1h\" \\\n    -d \"grant_type=password\u0026username=admin\u0026password=admin\u0026scope=apim:admin apim:tier_view\"\n    ```\n    Shown below is a sample response to the above request.\n    ```\n    {\n    \"access_token\": \"e79bda48-3406-3178-acce-f6e4dbdcbb12\",\n    \"refresh_token\": \"a757795d-e69f-38b8-bd85-9aded677a97c\",\n    \"scope\": \"apim:admin apim:tier_view\",\n    \"token_type\": \"Bearer\",\n    \"expires_in\": 3600\n    }\n    ```\n    Now you have a valid access token, which you can use to invoke an API.\n    Navigate through the API descriptions to find the required API, obtain an access token as described above and invoke the API with the authentication header.\n    If you use a different authentication mechanism, this process may change.\n\n    # Try out in Postman\n    If you want to try-out the embedded postman collection with \"Run in Postman\" option, please follow the guidelines listed below.\n    * All of the OAuth2 secured endpoints have been configured with an Authorization Bearer header with a parameterized access token. Before invoking any REST API resource make sure you run the `Register DCR Application` and `Generate Access Token` requests to fetch an access token with all required scopes.\n    * Make sure you have an API Manager instance up and running.\n    * Update the `basepath` parameter to match the hostname and port of the APIM instance.\n\n    [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/f5ac2ca9fb22afef6ed6)\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  title: WSO2 API Manager - Admin\n  version: v2\nservers:\n- url: https://apis.wso2.com/api/am/admin/v3\npaths:\n  /throttling/policies/search:\n    get:\n      description: |\n        This operation provides you a list of available Throttling Policies qualifying the given keyword match.\n      operationId: throttlingPolicySearch\n      parameters:\n      - description: |\n          **Search**.\n          You can search by providing a keyword. Allowed to search by type only.\n        explode: true\n        in: query\n        name: query\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlePolicyDetailsList'\n          description: |\n            OK.\n            List of qualifying Throttling Policies is returned.\n          headers:\n            Content-Type:\n              description: The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tier_view\n      summary: |\n        Retrieve/Search Throttling Policies\n      tags:\n      - Throttling Policy Search\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/search?query=type:sub\"'\n      x-accepts: application/json\n  /throttling/policies/application:\n    get:\n      description: |\n        Retrieves all existing application throttling policies.\n      parameters:\n      - description: |\n          Media types acceptable for the response. Default is application/json.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header of the\n          formerly retrieved variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Modified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationThrottlePolicyList'\n          description: |\n            OK.\n            Policies returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tier_view\n      summary: Get all Application Throttling Policies\n      tags:\n      - Application Policy (Collection)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/application\"'\n      x-accepts: application/json\n    post:\n      description: |\n        This operation can be used to add a new application level throttling policy.\n      parameters:\n      - description: |\n          Media type of the entity in the body. Default is application/json.\n        explode: false\n        in: header\n        name: Content-Type\n        required: true\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ApplicationThrottlePolicy'\n        description: |\n          Application level policy object that should to be added\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                policyId: e0fd4a15-969e-4056-94c8-8a7b56f8103f\n                policyName: 20PerMin\n                displayName: 20PerMin\n                description: Allows 20 request per minute\n                isDeployed: true\n                defaultLimit:\n                  type: REQUESTCOUNTLIMIT\n                  requestCount:\n                    timeUnit: min\n                    unitTime: 1\n                    requestCount: 20\n              schema:\n                $ref: '#/components/schemas/ApplicationThrottlePolicy'\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n            Location header contains URL of newly created entity.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                Location of the newly created Policy object.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"415\":\n          content:\n            application/json:\n              example:\n                code: 415\n                message: Unsupported media type\n                description: The entity of the request was not in a supported format\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsupported Media Type. The entity of the request was not in\n            a supported format.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tier_manage\n      summary: Add an Application Throttling Policy\n      tags:\n      - Application Policy (Collection)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/application\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /throttling/policies/application/{policyId}:\n    delete:\n      description: |\n        Deletes an application level throttling policy.\n      parameters:\n      - description: |\n          Thorttle policy UUID\n        explode: false\n        in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Unmodified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Resource successfully deleted.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tier_manage\n      summary: Delete an Application Throttling policy\n      tags:\n      - Application Policy (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/application/4e098fff-7f94-459a-981f-d257332f69d0\"'\n      x-accepts: application/json\n    get:\n      description: |\n        Retrieves an application throttling policy.\n      parameters:\n      - description: |\n          Thorttle policy UUID\n        explode: false\n        in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header of the\n          formerly retrieved variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Modified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                policyId: e0fd4a15-969e-4056-94c8-8a7b56f8103f\n                policyName: 20PerMin\n                displayName: 20PerMin\n                description: Allows 20 request per minute\n                isDeployed: true\n                defaultLimit:\n                  type: REQUESTCOUNTLIMIT\n                  requestCount:\n                    timeUnit: min\n                    unitTime: 1\n                    requestCount: 20\n              schema:\n                $ref: '#/components/schemas/ApplicationThrottlePolicy'\n          description: |\n            OK.\n            Policy returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tier_view\n      summary: Get an Application Throttling Policy\n      tags:\n      - Application Policy (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/application/4e098fff-7f94-459a-981f-d257332f69d0\"'\n      x-accepts: application/json\n    put:\n      description: |\n        Updates an existing application level throttling policy. Upon a succesfull update, you will receive the updated application policy as the response.\n      parameters:\n      - description: |\n          Thorttle policy UUID\n        explode: false\n        in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Media type of the entity in the body. Default is application/json.\n        explode: false\n        in: header\n        name: Content-Type\n        required: true\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Unmodified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ApplicationThrottlePolicy'\n        description: |\n          Policy object that needs to be modified\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                policyId: e0fd4a15-969e-4056-94c8-8a7b56f8103f\n                policyName: 20PerMin\n                displayName: 20PerMin\n                description: Allows 20 request per minute\n                isDeployed: true\n                defaultLimit:\n                  type: REQUESTCOUNTLIMIT\n                  requestCount:\n                    timeUnit: min\n                    unitTime: 1\n                    requestCount: 20\n              schema:\n                $ref: '#/components/schemas/ApplicationThrottlePolicy'\n          description: |\n            OK.\n            Policy updated.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional request.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional reuquests.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tier_manage\n      summary: Update an Application Throttling policy\n      tags:\n      - Application Policy (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/application/4e098fff-7f94-459a-981f-d257332f69d0\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /policies/mediation:\n    get:\n      description: |\n        This operation provides you a list of all available global mediation policies.\n      parameters:\n      - description: |\n          Maximum size of resource array to return.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 25\n          type: integer\n        style: form\n      - description: |\n          Starting point within the complete list of items qualified.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      - description: -Not supported yet-\n        explode: true\n        in: query\n        name: query\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Media types acceptable for the response. Default is application/json.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/mediationList'\n          description: |\n            OK.\n            List of mediation policies is returned.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:mediation_policy_view\n      summary: |\n        Get all Global Mediation Policies\n      tags:\n      - Mediation Policy (Collection)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/policies/mediation\"'\n      x-accepts: application/json\n    post:\n      description: |\n        This operation can be used to add a new global mediation policy.\n      parameters:\n      - description: |\n          Media type of the entity in the body. Default is application/json.\n        explode: false\n        in: header\n        name: Content-Type\n        required: true\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Unmodified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Mediation'\n        description: mediation policy to upload\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Mediation'\n          description: |\n            OK.\n            Mediation policy added successfully.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the uploaded thumbnail image of the API.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:mediation_policy_create\n      summary: Add a Global Mediation Policy\n      tags:\n      - Mediation Policy (Collection)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/policies/mediation\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /policies/mediation/{mediationPolicyId}:\n    delete:\n      description: |\n        This operation can be used to delete an existing global mediation policy providing the Id of the mediation policy.\n      parameters:\n      - description: |\n          Mediation policy Id\n        explode: false\n        in: path\n        name: mediationPolicyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Unmodified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Mediation policy successfully deleted.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:mediation_policy_create\n      summary: Delete a Global Mediation Policy\n      tags:\n      - Mediation Policy (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/policies/mediation/2253cf01-0356-4cc1-9941-3034a8c29007\"'\n      x-accepts: application/json\n    get:\n      description: |\n        This operation can be used to retrieve a particular global mediation policy.\n      parameters:\n      - description: |\n          Mediation policy Id\n        explode: false\n        in: path\n        name: mediationPolicyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Media types acceptable for the response. Default is application/json.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header of the\n          formerly retrieved variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Modified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Mediation'\n          description: |\n            OK.\n            Mediation Policy returned.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:mediation_policy_view\n      summary: Get a Global Mediation Policy\n      tags:\n      - Mediation Policy (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/policies/mediation/2253cf01-0356-4cc1-9941-3034a8c29007\"'\n      x-accepts: application/json\n    put:\n      description: |\n        This operation can be used to update an existing global mediation policy.\n      parameters:\n      - description: |\n          Mediation policy Id\n        explode: false\n        in: path\n        name: mediationPolicyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Media type of the entity in the body. Default is application/json.\n        explode: false\n        in: header\n        name: Content-Type\n        required: true\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Unmodified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Mediation'\n        description: |\n          Mediation policy object that needs to be updated\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Mediation'\n          description: |\n            OK.\n            Successful response with updated mediation policy object\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:mediation_policy_create\n      summary: Update a Global Mediation Policy\n      tags:\n      - Mediation Policy (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/policies/mediation/2253cf01-0356-4cc1-9941-3034a8c29007\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /throttling/policies/subscription:\n    get:\n      description: |\n        This operation can be used to retrieve all Subscription level throttling policies.\n      parameters:\n      - description: |\n          Media types acceptable for the response. Default is application/json.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header of the\n          formerly retrieved variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Modified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionThrottlePolicyList'\n          description: |\n            OK.\n            Policies returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tier_view\n      summary: Get all Subscription Throttling Policies\n      tags:\n      - Subscription Policy (Collection)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/subscription\"'\n      x-accepts: application/json\n    post:\n      description: |\n        This operation can be used to add a Subscription level throttling policy specifying the details of the policy in the payload.\n      parameters:\n      - description: |\n          Media type of the entity in the body. Default is application/json.\n        explode: false\n        in: header\n        name: Content-Type\n        required: true\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionThrottlePolicy'\n        description: |\n          Subscripion level policy object that should to be added\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                policyId: 78c3ebff-176d-40d8-9377-fb3276528291\n                policyName: Gold\n                displayName: Gold\n                description: Allows 5000 requests per minute\n                isDeployed: true\n                graphQLMaxComplexity: 0\n                graphQLMaxDepth: 0\n                subscriberCount: 0\n                defaultLimit:\n                  type: REQUESTCOUNTLIMIT\n                  requestCount:\n                    timeUnit: min\n                    unitTime: 1\n                    requestCount: 5000\n                rateLimitCount: 0\n                customAttributes: []\n                stopOnQuotaReach: true\n                billingPlan: FREE\n              schema:\n                $ref: '#/components/schemas/SubscriptionThrottlePolicy'\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n            Location header contains URL of newly created entity.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                Location of the newly created Policy object.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"415\":\n          content:\n            application/json:\n              example:\n                code: 415\n                message: Unsupported media type\n                description: The entity of the request was not in a supported format\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsupported Media Type. The entity of the request was not in\n            a supported format.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tier_manage\n      summary: Add a Subscription Throttling Policy\n      tags:\n      - Subscription Policy (Collection)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/subscription\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /throttling/policies/subscription/{policyId}:\n    delete:\n      description: |\n        This operation can be used to delete a subscription level throttling policy by specifying the Id of the policy as a path paramter.\n      parameters:\n      - description: |\n          Thorttle policy UUID\n        explode: false\n        in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Unmodified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Resource successfully deleted.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tier_manage\n      summary: Delete a Subscription Policy\n      tags:\n      - Subscription Policy (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/subscription/c948c723-71dd-4d50-8c77-0a0e99c8cbb1\"'\n      x-accepts: application/json\n    get:\n      description: |\n        This operation can be used to retrieves subscription level throttling policy by specifying the Id of the policy as a path paramter\n      parameters:\n      - description: |\n          Thorttle policy UUID\n        explode: false\n        in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header of the\n          formerly retrieved variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Modified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                policyId: 78c3ebff-176d-40d8-9377-fb3276528291\n                policyName: Gold\n                displayName: Gold\n                description: Allows 5000 requests per minute\n                isDeployed: true\n                graphQLMaxComplexity: 0\n                graphQLMaxDepth: 0\n                subscriberCount: 0\n                defaultLimit:\n                  type: REQUESTCOUNTLIMIT\n                  requestCount:\n                    timeUnit: min\n                    unitTime: 1\n                    requestCount: 5000\n                rateLimitCount: 0\n                customAttributes: []\n                stopOnQuotaReach: true\n                billingPlan: FREE\n              schema:\n                $ref: '#/components/schemas/SubscriptionThrottlePolicy'\n          description: |\n            OK.\n            Policy returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tier_view\n      summary: Get a Subscription Policy\n      tags:\n      - Subscription Policy (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/subscription/c948c723-71dd-4d50-8c77-0a0e99c8cbb1\"'\n      x-accepts: application/json\n    put:\n      description: |\n        Updates an existing subscription level throttling policy.\n      parameters:\n      - description: |\n          Thorttle policy UUID\n        explode: false\n        in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Media type of the entity in the body. Default is application/json.\n        explode: false\n        in: header\n        name: Content-Type\n        required: true\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Unmodified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionThrottlePolicy'\n        description: |\n          Policy object that needs to be modified\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                policyId: 78c3ebff-176d-40d8-9377-fb3276528291\n                policyName: Gold\n                displayName: Gold\n                description: Allows 5000 requests per minute\n                isDeployed: true\n                graphQLMaxComplexity: 0\n                graphQLMaxDepth: 0\n                subscriberCount: 0\n                defaultLimit:\n                  type: REQUESTCOUNTLIMIT\n                  requestCount:\n                    timeUnit: min\n                    unitTime: 1\n                    requestCount: 5000\n                rateLimitCount: 0\n                customAttributes: []\n                stopOnQuotaReach: true\n                billingPlan: FREE\n              schema:\n                $ref: '#/components/schemas/SubscriptionThrottlePolicy'\n          description: |\n            OK.\n            Policy updated.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tier_manage\n      summary: Update a Subscription Policy\n      tags:\n      - Subscription Policy (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/subscription/c948c723-71dd-4d50-8c77-0a0e99c8cbb1\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /throttling/policies/custom:\n    get:\n      description: |\n        Retrieves all custom rules.\n\n        **NOTE:**\n        * Only super tenant users are allowed for this operation.\n      parameters:\n      - description: |\n          Media types acceptable for the response. Default is application/json.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header of the\n          formerly retrieved variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Modified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomRuleList'\n          description: |\n            OK.\n            Policies returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tier_view\n      summary: Get all Custom Rules\n      tags:\n      - Custom Rules (Collection)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/custom\"'\n      x-accepts: application/json\n    post:\n      description: |\n        Adds a new custom rule.\n\n        **NOTE:**\n        * Only super tenant users are allowed for this operation.\n      parameters:\n      - description: |\n          Media type of the entity in the body. Default is application/json.\n        explode: false\n        in: header\n        name: Content-Type\n        required: true\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomRule'\n        description: |\n          Custom Rule object that should to be added\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                policyId: 7c7ed7c4-5a7c-4e08-850a-a95bbfcc2fb6\n                policyName: custom\n                description: Allow 10 requests per minute for admin user\n                isDeployed: true\n                siddhiQuery: \"FROM RequestStream\\nSELECT userId, ( userId == 'admin@carbon.super'\\\n                  \\ ) AS isEligible , str:concat('admin@carbon.super','') as throttleKey\\n\\\n                  INSERT INTO EligibilityStream; \\n\\nFROM EligibilityStream[isEligible==true]#throttler:timeBatch(1\\\n                  \\ min) \\nSELECT throttleKey, (count(userId) \u003e= 10) as isThrottled,\\\n                  \\ expiryTimeStamp group by throttleKey \\nINSERT ALL EVENTS into\\\n                  \\ ResultStream;\"\n                keyTemplate: $userId\n              schema:\n                $ref: '#/components/schemas/CustomRule'\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n            Location header contains URL of newly created entity.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                Location of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"415\":\n          content:\n            application/json:\n              example:\n                code: 415\n                message: Unsupported media type\n                description: The entity of the request was not in a supported format\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsupported Media Type. The entity of the request was not in\n            a supported format.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tier_manage\n      summary: Add a Custom Rule\n      tags:\n      - Custom Rules (Collection)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/custom\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /throttling/policies/custom/{ruleId}:\n    delete:\n      description: |\n        Delete a custom rule. We need to provide the Id of the policy as a path parameter.\n\n        **NOTE:**\n        * Only super tenant users are allowed for this operation.\n      parameters:\n      - description: |\n          Custom rule UUID\n        explode: false\n        in: path\n        name: ruleId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Unmodified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Resource successfully deleted.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tier_manage\n      summary: Delete a Custom Rule\n      tags:\n      - Custom Rules (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/custom/33662a62-8db1-4d75-af08-afd63c6bd0b4\"'\n      x-accepts: application/json\n    get:\n      description: |\n        Retrieves a custom rule. We need to provide the policy Id as a path parameter.\n\n        **NOTE:**\n        * Only super tenant users are allowed for this operation.\n      parameters:\n      - description: |\n          Custom rule UUID\n        explode: false\n        in: path\n        name: ruleId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header of the\n          formerly retrieved variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Modified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                policyId: 7c7ed7c4-5a7c-4e08-850a-a95bbfcc2fb6\n                policyName: custom\n                description: Allow 10 requests per minute for admin user\n                isDeployed: true\n                siddhiQuery: \"FROM RequestStream\\nSELECT userId, ( userId == 'admin@carbon.super'\\\n                  \\ ) AS isEligible , str:concat('admin@carbon.super','') as throttleKey\\n\\\n                  INSERT INTO EligibilityStream; \\n\\nFROM EligibilityStream[isEligible==true]#throttler:timeBatch(1\\\n                  \\ min) \\nSELECT throttleKey, (count(userId) \u003e= 10) as isThrottled,\\\n                  \\ expiryTimeStamp group by throttleKey \\nINSERT ALL EVENTS into\\\n                  \\ ResultStream;\"\n                keyTemplate: $userId\n              schema:\n                $ref: '#/components/schemas/CustomRule'\n          description: |\n            OK.\n            Policy returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tier_view\n      summary: Get a Custom Rule\n      tags:\n      - Custom Rules (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/custom/33662a62-8db1-4d75-af08-afd63c6bd0b4\"'\n      x-accepts: application/json\n    put:\n      description: |\n        Updates an existing custom rule.\n\n        **NOTE:**\n        * Only super tenant users are allowed for this operation.\n      parameters:\n      - description: |\n          Custom rule UUID\n        explode: false\n        in: path\n        name: ruleId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Media type of the entity in the body. Default is application/json.\n        explode: false\n        in: header\n        name: Content-Type\n        required: true\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Unmodified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomRule'\n        description: |\n          Policy object that needs to be modified\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                policyId: 7c7ed7c4-5a7c-4e08-850a-a95bbfcc2fb6\n                policyName: custom\n                description: Allow 10 requests per minute for admin user\n                isDeployed: true\n                siddhiQuery: \"FROM RequestStream\\nSELECT userId, ( userId == 'admin@carbon.super'\\\n                  \\ ) AS isEligible , str:concat('admin@carbon.super','') as throttleKey\\n\\\n                  INSERT INTO EligibilityStream; \\n\\nFROM EligibilityStream[isEligible==true]#throttler:timeBatch(1\\\n                  \\ min) \\nSELECT throttleKey, (count(userId) \u003e= 10) as isThrottled,\\\n                  \\ expiryTimeStamp group by throttleKey \\nINSERT ALL EVENTS into\\\n                  \\ ResultStream;\"\n                keyTemplate: $userId\n              schema:\n                $ref: '#/components/schemas/CustomRule'\n          description: |\n            OK.\n            Policy updated.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tier_manage\n      summary: Update a Custom Rule\n      tags:\n      - Custom Rules (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/custom/33662a62-8db1-4d75-af08-afd63c6bd0b4\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /throttling/policies/advanced:\n    get:\n      description: |\n        Retrieves all existing advanced throttling policies.\n      parameters:\n      - description: |\n          Media types acceptable for the response. Default is application/json.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header of the\n          formerly retrieved variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Modified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AdvancedThrottlePolicyList'\n          description: |\n            OK.\n            Policies returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tier_view\n      summary: Get all Advanced Throttling Policies\n      tags:\n      - Advanced Policy (Collection)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/advanced\"'\n      x-accepts: application/json\n    post:\n      description: |\n        Add a new advanced throttling policy.\n      parameters:\n      - description: |\n          Media type of the entity in the body. Default is application/json.\n        explode: false\n        in: header\n        name: Content-Type\n        required: true\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AdvancedThrottlePolicy'\n        description: |\n          Advanced level policy object that should to be added\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                policyId: 4cf46441-a538-4f79-a499-ab81200c9bca\n                policyName: 10KPerMin\n                displayName: 10KPerMin\n                description: Allows 10000 requests per minute\n                isDeployed: true\n                defaultLimit:\n                  type: REQUESTCOUNTLIMIT\n                  requestCount:\n                    timeUnit: min\n                    unitTime: 1\n                    requestCount: 10000\n                conditionalGroups: []\n              schema:\n                $ref: '#/components/schemas/AdvancedThrottlePolicy'\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n            Location header contains URL of newly created entity.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                Location of the newly created Advanced Throttling Policy.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"415\":\n          content:\n            application/json:\n              example:\n                code: 415\n                message: Unsupported media type\n                description: The entity of the request was not in a supported format\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsupported Media Type. The entity of the request was not in\n            a supported format.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tier_manage\n      summary: Add an Advanced Throttling Policy\n      tags:\n      - Advanced Policy (Collection)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/advanced\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /throttling/policies/advanced/{policyId}:\n    delete:\n      description: |\n        Deletes an advanced throttling policy.\n      parameters:\n      - description: |\n          Thorttle policy UUID\n        explode: false\n        in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Unmodified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Resource successfully deleted.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tier_manage\n      summary: Delete an Advanced Throttling Policy\n      tags:\n      - Advanced Policy (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/advanced/229a3c46-c836-43c8-b988-8eebd9c7774b\"'\n      x-accepts: application/json\n    get:\n      description: |\n        Retrieves an advanced throttling policy.\n      parameters:\n      - description: |\n          Thorttle policy UUID\n        explode: false\n        in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header of the\n          formerly retrieved variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Modified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                policyId: 4cf46441-a538-4f79-a499-ab81200c9bca\n                policyName: 10KPerMin\n                displayName: 10KPerMin\n                description: Allows 10000 requests per minute\n                isDeployed: true\n                defaultLimit:\n                  type: REQUESTCOUNTLIMIT\n                  requestCount:\n                    timeUnit: min\n                    unitTime: 1\n                    requestCount: 10000\n                conditionalGroups: []\n              schema:\n                $ref: '#/components/schemas/AdvancedThrottlePolicy'\n          description: |\n            OK.\n            Policy returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tier_view\n      summary: Get an Advanced Throttling Policy\n      tags:\n      - Advanced Policy (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/advanced/229a3c46-c836-43c8-b988-8eebd9c7774b\"'\n      x-accepts: application/json\n    put:\n      description: |\n        Updates an existing Advanced throttling policy.\n      parameters:\n      - description: |\n          Thorttle policy UUID\n        explode: false\n        in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Media type of the entity in the body. Default is application/json.\n        explode: false\n        in: header\n        name: Content-Type\n        required: true\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Unmodified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AdvancedThrottlePolicy'\n        description: |\n          Policy object that needs to be modified\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                policyId: 4cf46441-a538-4f79-a499-ab81200c9bca\n                policyName: 10KPerMin\n                displayName: 10KPerMin\n                description: Allows 10000 requests per minute\n                isDeployed: true\n                defaultLimit:\n                  type: REQUESTCOUNTLIMIT\n                  requestCount:\n                    timeUnit: min\n                    unitTime: 1\n                    requestCount: 10000\n                conditionalGroups: []\n              schema:\n                $ref: '#/components/schemas/AdvancedThrottlePolicy'\n          description: |\n            OK.\n            Policy updated.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                The URL of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tier_manage\n      summary: Update an Advanced Throttling Policy\n      tags:\n      - Advanced Policy (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/advanced/229a3c46-c836-43c8-b988-8eebd9c7774b\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /throttling/policies/export:\n    get:\n      description: |\n        This operation can be used to export the details of a particular Throttling Policy.\n      operationId: exportThrottlingPolicy\n      parameters:\n      - description: UUID of the ThrottlingPolicy\n        explode: true\n        in: query\n        name: policyId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Throttling Policy Name\n        explode: true\n        in: query\n        name: name\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Type of the Throttling Policy\n        explode: true\n        in: query\n        name: type\n        required: false\n        schema:\n          enum:\n          - sub\n          - app\n          - api\n          - global\n          type: string\n        style: form\n      - description: |\n          Format of output documents. Can be YAML or JSON.\n        explode: true\n        in: query\n        name: format\n        required: false\n        schema:\n          enum:\n          - JSON\n          - YAML\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                type: rate-limiting policy\n                subtype: application\n                version: v4.1.0\n                data:\n                  policyId: cd828243-a0db-430c-97e9-9e41fd865d48\n                  policyName: 50PerMin\n                  displayName: 50PerMin\n                  description: Allows 50 request per minute\n                  isDeployed: true\n                  type: ApplicationThrottlePolicy\n                  defaultLimit:\n                    type: BANDWIDTHLIMIT\n                    requestCount:\n                      timeUnit: min\n                      unitTime: 1\n                      requestCount: 50\n                    bandwidth:\n                      timeUnit: min\n                      unitTime: 5\n                      dataAmount: 100\n                      dataUnit: MB\n                    eventCount:\n                      timeUnit: min\n                      unitTime: 5\n                      eventCount: 16\n              schema:\n                $ref: '#/components/schemas/ExportThrottlePolicy'\n          description: |\n            OK.\n            Export Successful.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tier_manage\n        - apim:policies_import_export\n      summary: Export a Throttling Policy\n      tags:\n      - Import Export Throttling Policy\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/export?policyId=96077508-fd01-4fae-bc64-5de0e2baf43c\u0026name=Bronze\u0026type=subscription\u0026format=YAML\"'\n      x-accepts: application/json\n  /throttling/policies/import:\n    post:\n      description: |\n        This operation can be used to import a Throttling Policy\n      operationId: importThrottlingPolicy\n      parameters:\n      - description: |\n          Update an existing throttlingpolicy with the same name\n        explode: true\n        in: query\n        name: overwrite\n        required: false\n        schema:\n          type: boolean\n        style: form\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: Json File\n                  format: binary\n                  type: string\n              required:\n              - file\n        required: true\n      responses:\n        \"200\":\n          description: |\n            Created.\n            Throttling Policy Imported Successfully.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"409\":\n          content:\n            application/json:\n              example:\n                code: 409\n                message: Conflict\n                description: Specified resource already exists\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Conflict. Specified resource already exists.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tier_manage\n        - apim:policies_import_export\n      summary: Import a Throttling Policy\n      tags:\n      - Import Export Throttling Policy\n      x-code-samples:\n      - lang: Curl\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/import?overwrite=True\"'\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /throttling/deny-policies:\n    get:\n      description: |\n        Retrieves all existing deny policies.\n      parameters:\n      - description: |\n          Media types acceptable for the response. Default is application/json.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header of the\n          formerly retrieved variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Modified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockingConditionList'\n          description: |\n            OK.\n            Deny Policies returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:bl_view\n      summary: Get all Deny Policies\n      tags:\n      - Deny Policies (Collection)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/deny-policies\"'\n      x-accepts: application/json\n    post:\n      description: |\n        Adds a new deny policy\n      parameters:\n      - description: |\n          Media type of the entity in the body. Default is application/json.\n        explode: false\n        in: header\n        name: Content-Type\n        required: true\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BlockingCondition'\n        description: |\n          Blocking condition object that should to be added\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockingCondition'\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n            Location header contains URL of newly created entity.\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Location:\n              description: |\n                Location of the newly created resource.\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"415\":\n          content:\n            application/json:\n              example:\n                code: 415\n                message: Unsupported media type\n                description: The entity of the request was not in a supported format\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsupported Media Type. The entity of the request was not in\n            a supported format.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:bl_manage\n      summary: Add a deny policy\n      tags:\n      - Deny Policies (Collection)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/deny-policies\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /throttling/deny-policy/{conditionId}:\n    delete:\n      description: |\n        Deletes an existing deny policy\n      parameters:\n      - description: |\n          Blocking condition identifier\n        explode: false\n        in: path\n        name: conditionId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Unmodified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Resource successfully deleted.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:bl_manage\n      summary: Delete a Deny Policy\n      tags:\n      - Deny Policy (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/deny-policy/b513eb68-69e8-4c32-92cf-852c101363c\"'\n      x-accepts: application/json\n    get:\n      description: |\n        Retrieves a Deny policy providing the condition Id\n      parameters:\n      - description: |\n          Blocking condition identifier\n        explode: false\n        in: path\n        name: conditionId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header of the\n          formerly retrieved variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Modified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockingCondition'\n          description: |\n            OK.\n            Condition returned\n          headers:\n            ETag:\n              description: |\n                Entity Tag of the response resource.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Last-Modified:\n              description: |\n                Date and time the resource has been modifed the last time.\n                Used by caches, or in conditional requests (Will be supported in future).\n              explode: false\n              schema:\n                type: string\n              style: simple\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:bl_view\n      summary: Get a Deny Policy\n      tags:\n      - Deny Policy (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/deny-policy/b513eb68-69e8-4c32-92cf-852c101363c\"'\n      x-accepts: application/json\n    patch:\n      description: |\n        Update a deny policy by Id\n      parameters:\n      - description: |\n          Blocking condition identifier\n        explode: false\n        in: path\n        name: conditionId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Media type of the entity in the body. Default is application/json.\n        explode: false\n        in: header\n        name: Content-Type\n        required: true\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Unmodified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BlockingConditionStatus'\n        description: |\n          Blocking condition with updated status\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockingCondition'\n          description: |\n            OK.\n            Resource successfully updated.\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:bl_manage\n      summary: Update a Deny Policy\n      tags:\n      - Deny Policy (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X PATCH -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/throttling/policies/deny-policy/b513eb68-69e8-4c32-92cf-852c101363c\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /applications:\n    get:\n      description: |\n        This operation can be used to retrieve list of applications owned by the given user, If no user\n        is provided, the applications owned by the user associated with the provided access token will be returned.\n      parameters:\n      - description: |\n          username of the application creator\n        explode: true\n        in: query\n        name: user\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Maximum size of resource array to return.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 25\n          type: integer\n        style: form\n      - description: |\n          Starting point within the complete list of items qualified.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      - description: |\n          Media types acceptable for the response. Default is application/json.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Application Name\n        explode: true\n        in: query\n        name: name\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Tenant domain of the applications to get. This has to be specified only if it is required to get applications of\n          a tenant other than the requester's tenant. So, if not specified, the default will be set as the\n          requester's tenant domain. This cross tenant Application access is allowed only for super tenant admin\n          users **only at a migration process**.\n        explode: true\n        in: query\n        name: tenantDomain\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationList'\n          description: |\n            OK.\n            Application list returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:app_owner_change\n        - apim:app_import_export\n      summary: |\n        Retrieve/Search Applications\n      tags:\n      - Application (Collection)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/applications\"'\n      x-accepts: application/json\n  /applications/{applicationId}:\n    delete:\n      description: |\n        This operation can be used to delete an application by specifying its id.\n      parameters:\n      - description: |\n          Application UUID\n        explode: false\n        in: path\n        name: applicationId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Resource successfully deleted.\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowResponse'\n          description: |\n            Accepted.\n            The request has been accepted.\n          headers:\n            Location:\n              description: |\n                Location of the existing Application.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:app_import_export\n      summary: |\n        Delete an Application\n      tags:\n      - Applications\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/applications/0a043c2b-ee75-4ef3-9e1c-fc2610ccfa8b\"'\n      x-accepts: application/json\n  /applications/{applicationId}/change-owner:\n    post:\n      description: |\n        This operation is used to change the owner of an Application.\n        In order to change the owner of an application, we need to pass the new application owner as a query parameter\n      parameters:\n      - explode: true\n        in: query\n        name: owner\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: |\n          Application UUID\n        explode: false\n        in: path\n        name: applicationId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Application owner changed successfully.\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"412\":\n          content:\n            application/json:\n              example:\n                code: 412\n                message: Precondition Failed\n                description: The request has not been performed because one of the\n                  preconditions is not met\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed. The request has not been performed because\n            one of the preconditions is not met.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:app_owner_change\n      summary: Change Application Owner\n      tags:\n      - Application\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/applications/0a043c2b-ee75-4ef3-9e1c-fc2610ccfa8b/change-owner?owner=admin\"'\n      x-accepts: application/json\n  /export/applications:\n    get:\n      description: |\n        This operation can be used to export the details of a particular application as a zip file.\n      parameters:\n      - description: |\n          Application Name\n        explode: true\n        in: query\n        name: appName\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: |\n          Owner of the Application\n        explode: true\n        in: query\n        name: appOwner\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: |\n          Export application keys\n        explode: true\n        in: query\n        name: withKeys\n        required: false\n        schema:\n          type: boolean\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: binary\n                type: string\n            application/zip:\n              schema:\n                format: binary\n                type: string\n          description: |\n            OK.\n            Export Successful.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:app_import_export\n      summary: Export an Application\n      tags:\n      - Application (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/export/applications?appName=sampleApp\u0026appOwner=admin\u0026withKeys=true\"\n          \u003e exported-application.zip'\n      x-accepts: application/json\n  /export/api:\n    get:\n      description: |\n        This operation can be used to export the details of a particular API as a zip file.\n      parameters:\n      - description: |\n          API Name\n        explode: true\n        in: query\n        name: name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: |\n          Version of the API\n        explode: true\n        in: query\n        name: version\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: |\n          Provider name of the API\n        explode: true\n        in: query\n        name: providerName\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Format of output documents. Can be YAML or JSON.\n        explode: true\n        in: query\n        name: format\n        required: false\n        schema:\n          enum:\n          - JSON\n          - YAML\n          type: string\n        style: form\n      - description: |\n          Preserve API Status on export\n        explode: true\n        in: query\n        name: preserveStatus\n        required: false\n        schema:\n          type: boolean\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/zip:\n              schema:\n                format: binary\n                type: string\n          description: |\n            OK.\n            Export Successful.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:api_import_export\n      summary: Export an API\n      tags:\n      - API (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/export/api?name=PizzaShackAPI\u0026version=1.0.0\u0026providerName=admin\u0026format=YAML\u0026preserveStatus=true\"\n          \u003e exportAPI.zip'\n      x-accepts: application/json\n  /export/api-product:\n    get:\n      description: |\n        This operation can be used to export the details of a particular API Product as a zip file.\n      parameters:\n      - description: |\n          API Product Name\n        explode: true\n        in: query\n        name: name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: |\n          Version of the API Product\n        explode: true\n        in: query\n        name: version\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: |\n          Provider name of the API Product\n        explode: true\n        in: query\n        name: providerName\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Format of output documents. Can be YAML or JSON.\n        explode: true\n        in: query\n        name: format\n        required: false\n        schema:\n          enum:\n          - JSON\n          - YAML\n          type: string\n        style: form\n      - description: |\n          Preserve API Product Status on export\n        explode: true\n        in: query\n        name: preserveStatus\n        required: false\n        schema:\n          type: boolean\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/zip:\n              schema:\n                format: binary\n                type: string\n          description: |\n            OK.\n            Export Successful.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:api_product_import_export\n      summary: Export an API Product\n      tags:\n      - API Product (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/export/api-product?name=PizzaShackAPIProduct\u0026version=1.0.0\u0026providerName=admin\u0026format=YAML\u0026preserveStatus=true\"\n          \u003e exportAPIProduct.zip'\n      x-accepts: application/json\n  /import/applications:\n    post:\n      description: |\n        This operation can be used to import an application.\n      parameters:\n      - description: |\n          Preserve Original Creator of the Application\n        explode: true\n        in: query\n        name: preserveOwner\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: |\n          Skip importing Subscriptions of the Application\n        explode: true\n        in: query\n        name: skipSubscriptions\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: |\n          Expected Owner of the Application in the Import Environment\n        explode: true\n        in: query\n        name: appOwner\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          Skip importing Keys of the Application\n        explode: true\n        in: query\n        name: skipApplicationKeys\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: |\n          Update if application exists\n        explode: true\n        in: query\n        name: update\n        required: false\n        schema:\n          type: boolean\n        style: form\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: |\n                    Zip archive consisting of exported Application Configuration.\n                  format: binary\n                  type: string\n              required:\n              - file\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApplicationInfo'\n          description: |\n            OK.\n            Successful response with the updated object information as entity in the body.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"207\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIInfoList'\n          description: |\n            Multi Status.\n            Partially successful response with skipped APIs information object as entity in the body.\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:app_import_export\n      summary: Import an Application\n      tags:\n      - Application (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F file=@exported-application.zip \"https://127.0.0.1:9443/api/am/admin/v3/import/applications?preserveOwner=true\u0026skipSubscriptions=false\u0026appOwner=admin\u0026skipApplicationKeys=false\u0026update=true\"'\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /import/api:\n    post:\n      description: |\n        This operation can be used to import an API.\n      parameters:\n      - description: |\n          Preserve Original Provider of the API. This is the user choice to keep or replace the API provider.\n        explode: true\n        in: query\n        name: preserveProvider\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: |\n          Whether to update the API or not. This is used when updating already existing APIs.\n        explode: true\n        in: query\n        name: overwrite\n        required: false\n        schema:\n          type: boolean\n        style: form\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: |\n                    Zip archive consisting on exported api configuration\n                  format: binary\n                  type: string\n              required:\n              - file\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            Created.\n            API Imported Successfully.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"409\":\n          content:\n            application/json:\n              example:\n                code: 409\n                message: Conflict\n                description: Specified resource already exists\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Conflict. Specified resource already exists.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:api_import_export\n      summary: Import an API\n      tags:\n      - API (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F file=@admin-PizzaShackAPI-1.0.0.zip \"https://127.0.0.1:9443/api/am/admin/v3/import/api?preserveProvider=false\u0026overwrite=false\"'\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /import/api-product:\n    post:\n      description: |\n        This operation can be used to import an API Product.\n      parameters:\n      - description: |\n          Preserve Original Provider of the API Product. This is the user choice to keep or replace the API Product provider.\n        explode: true\n        in: query\n        name: preserveProvider\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: |\n          Whether to import the dependent APIs or not.\n        explode: true\n        in: query\n        name: importAPIs\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: |\n          Whether to update the API Product or not. This is used when updating already existing API Products.\n        explode: true\n        in: query\n        name: overwriteAPIProduct\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: |\n          Whether to update the dependent APIs or not. This is used when updating already existing dependent APIs of an API Product.\n        explode: true\n        in: query\n        name: overwriteAPIs\n        required: false\n        schema:\n          type: boolean\n        style: form\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: |\n                    Zip archive consisting on exported API Product configuration\n                  format: binary\n                  type: string\n              required:\n              - file\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            Created.\n            API Product Imported Successfully.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"409\":\n          content:\n            application/json:\n              example:\n                code: 409\n                message: Conflict\n                description: Specified resource already exists\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Conflict. Specified resource already exists.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:api_product_import_export\n      summary: Import an API Product\n      tags:\n      - API Product (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F file=@exportAPIProduct.zip \"https://127.0.0.1:9443/api/am/admin/v3/import/api-product?preserveProvider=false\u0026overwriteAPIProduct=false\u0026overwriteAPIs=false\u0026importAPIs=false\"'\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /labels:\n    get:\n      description: |\n        Get all Registered Labels\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelList'\n          description: |\n            OK.\n            Labels returned\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:label_read\n      summary: Get all registered Labels\n      tags:\n      - Label Collection\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/labels\"'\n      x-accepts: application/json\n    post:\n      description: |\n        Add a new gateway label\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Label'\n        description: |\n          Label object that should to be added\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Label'\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:label_manage\n      summary: Add a Label\n      tags:\n      - Label\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/labels\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /labels/{labelId}:\n    delete:\n      description: |\n        Delete a Label by label Id\n      parameters:\n      - description: |\n          Label UUID\n        explode: false\n        in: path\n        name: labelId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Unmodified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Label successfully deleted.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:label_manage\n      summary: Delete a Label\n      tags:\n      - Label\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/labels/d7cf8523-9180-4255-84fa-6cb171c1f779\"'\n      x-accepts: application/json\n    put:\n      description: |\n        Update a Label by label Id\n      parameters:\n      - description: |\n          Label UUID\n        explode: false\n        in: path\n        name: labelId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Label'\n        description: |\n          Label object with updated information\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Label'\n          description: |\n            OK.\n            Label updated.\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:label_manage\n      summary: Update a Label\n      tags:\n      - Label\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/labels/d7cf8523-9180-4255-84fa-6cb171c1f779\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /environments:\n    get:\n      description: |\n        Get all Registered Environments\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnvironmentList'\n          description: |\n            OK.\n            Environments returned\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:environment_read\n      summary: Get all registered Environments\n      tags:\n      - Environment Collection\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/environments\"'\n      x-accepts: application/json\n    post:\n      description: |\n        Add a new geteway environment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Environment'\n        description: |\n          Environment object that should to be added\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Environment'\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:environment_manage\n      summary: Add an Environment\n      tags:\n      - Environment\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/environments\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /environments/{environmentId}:\n    delete:\n      description: |\n        Delete a Environment by Environment Id\n      parameters:\n      - description: |\n          Environment UUID (or Environment name defined in config)\n        explode: false\n        in: path\n        name: environmentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Environment successfully deleted.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:environment_manage\n      summary: Delete an Environment\n      tags:\n      - Environment\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/environments/d7cf8523-9180-4255-84fa-6cb171c1f779\"'\n      x-accepts: application/json\n    put:\n      description: |\n        Update a gateway Environment by environment Id\n      parameters:\n      - description: |\n          Environment UUID (or Environment name defined in config)\n        explode: false\n        in: path\n        name: environmentId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Environment'\n        description: |\n          Environment object with updated information\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Environment'\n          description: |\n            OK.\n            Environment updated.\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:environment_manage\n      summary: Update an Environment\n      tags:\n      - Environment\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/environments/d7cf8523-9180-4255-84fa-6cb171c1f779\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /bot-detection-data:\n    get:\n      description: |\n        Get all bot detected data\n      operationId: getBotDetectionData\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BotDetectionDataList'\n          description: |\n            OK.\n            Bot detected data returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:bot_data\n      summary: |\n        Get all Bot Detected Data\n      tags:\n      - Bot Detection Data\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/bot-detection-data\"'\n      x-accepts: application/json\n  /monetization/publish-usage:\n    post:\n      description: |\n        Publish usage records of monetized APIs\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublishStatus'\n          description: Usage records successfully published.\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublishStatus'\n          description: Request is sucessfully accepted for processing.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:monetization_usage_publish\n      summary: Publish Usage Records\n      tags:\n      - Monetization (Collection)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/monetization/publish-usage\"'\n      x-accepts: application/json\n  /monetization/publish-usage/status:\n    get:\n      description: |\n        Get the status of monetization usage publisher\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MonetizationUsagePublishInfo'\n          description: |\n            OK.\n            Status returned\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:monetization_usage_publish\n      summary: Get the Status of Monetization Usage Publisher\n      tags:\n      - Monetization (Collection)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/monetization/publish-usage/status\"'\n      x-accepts: application/json\n  /workflows:\n    get:\n      description: |\n        This operation can be used to retrieve list of workflow pending processes.\n      parameters:\n      - description: |\n          Maximum size of resource array to return.\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 25\n          type: integer\n        style: form\n      - description: |\n          Starting point within the complete list of items qualified.\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          default: 0\n          type: integer\n        style: form\n      - description: |\n          Media types acceptable for the response. Default is application/json.\n        explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          default: application/json\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          We need to show the values of each workflow process separately .for that we use workflow type.\n          Workflow type can be AM_APPLICATION_CREATION, AM_SUBSCRIPTION_CREATION,   AM_USER_SIGNUP, AM_APPLICATION_REGISTRATION_PRODUCTION, AM_APPLICATION_REGISTRATION_SANDBOX.\n        explode: true\n        in: query\n        name: workflowType\n        required: false\n        schema:\n          enum:\n          - AM_APPLICATION_CREATION\n          - AM_SUBSCRIPTION_CREATION\n          - AM_USER_SIGNUP\n          - AM_APPLICATION_REGISTRATION_PRODUCTION\n          - AM_APPLICATION_REGISTRATION_SANDBOX\n          - AM_SUBSCRIPTION_DELETION\n          - AM_APPLICATION_DELETION\n          - AM_API_STATE\n          - AM_API_PRODUCT_STATE\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowList'\n          description: |\n            OK.\n            Workflow pendding process list returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource (Will be supported in future).\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:api_workflow_view\n      summary: |\n        Retrieve All Pending Workflow Processes\n      tags:\n      - Workflow (Collection)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/workflows\"'\n      x-accepts: application/json\n  /workflows/{externalWorkflowRef}:\n    get:\n      description: |\n        Using this operation, you can retrieve complete details of a pending workflow request that either belongs to application creation, application subscription, application registration, api state change, user self sign up.. You need to provide the External_Workflow_Reference of the workflow Request to retrive it.\n      parameters:\n      - description: |\n          from the externel workflow reference we decide what is the the pending request that the are requesting.\n        explode: false\n        in: path\n        name: externalWorkflowRef\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on the ETag of the formerly retrieved\n          variant of the resource (Will be supported in future).\n        explode: false\n        in: header\n        name: If-None-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowInfo'\n          description: |\n            OK.\n            Requested Workflow Pending is returned\n        \"304\":\n          content: {}\n          description: |\n            Not Modified.\n            Empty body because the client has already the latest version of the requested resource.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:api_workflow_view\n      summary: |\n        Get Pending Workflow Details by External Workflow Reference\n      tags:\n      - Workflows (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/workflows/c43a325c-260b-4302-81cb-768eafaa3aed\"'\n      x-accepts: application/json\n  /workflows/update-workflow-status:\n    post:\n      description: |\n        This operation can be used to approve or reject a workflow task.\n      parameters:\n      - description: |\n          Workflow reference id\n        explode: true\n        in: query\n        name: workflowReferenceId\n        required: true\n        schema:\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Workflow'\n        description: |\n          Workflow event that need to be updated\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Workflow'\n          description: |\n            OK.\n            Workflow request information is returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:api_workflow_approve\n      summary: Update Workflow Status\n      tags:\n      - Workflows (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/workflows/update-workflow-status?workflowReferenceId=56e3a170-a7a7-45f8-b051-7e43a58a67e1\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /tenant-info/{username}:\n    get:\n      description: |\n        This operation is to get tenant id of the provided user\n      operationId: getTenantInfoByUsername\n      parameters:\n      - description: |\n          The state represents the current state of the tenant. Supported states are [ active, inactive]\n        explode: false\n        in: path\n        name: username\n        required: true\n        schema:\n          default: john\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TenantInfo'\n          description: |\n            OK.\n            Tenant id of the user retrieved.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tenantInfo\n      summary: |\n        Get Tenant Id of User\n      tags:\n      - Tenants\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/tenant-info/john\"'\n      x-accepts: application/json\n  /custom-urls/{tenantDomain}:\n    get:\n      description: |\n        This operation is to get custom-url information of the provided tenant-domain\n      operationId: getCustomUrlInfoByTenantDomain\n      parameters:\n      - description: |\n          The tenant domain name.\n        explode: false\n        in: path\n        name: tenantDomain\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomUrlInfo'\n          description: |\n            OK.\n            Custom url info of the tenant is retrieved.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tenantInfo\n      summary: |\n        Get Custom URL Info of a Tenant Domain\n      tags:\n      - Tenants\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/custom-urls/wso2.com\"'\n      x-accepts: application/json\n  /api-categories:\n    get:\n      description: |\n        Get all API categories\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APICategoryList'\n          description: |\n            OK.\n            Categories returned\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:admin_operations\n      summary: Get all API Categories\n      tags:\n      - API Category (Collection)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/api-categories\"'\n      x-accepts: application/json\n    post:\n      description: |\n        Add a new API category\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/APICategory'\n        description: |\n          API Category object that should to be added\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APICategory'\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:admin_operations\n      summary: Add API Category\n      tags:\n      - API Category (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/api-categories\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /api-categories/{apiCategoryId}:\n    delete:\n      description: |\n        Delete an API Category by API Category Id\n      parameters:\n      - description: |\n          API Category UUID\n        explode: false\n        in: path\n        name: apiCategoryId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on ETag (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Match\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: |\n          Validator for conditional requests; based on Last Modified header (Will be supported in future).\n        explode: false\n        in: header\n        name: If-Unmodified-Since\n        required: false\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            API Category successfully deleted.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:admin_operations\n      summary: Delete an API Category\n      tags:\n      - API Category (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/api-categories/d7cf8523-9180-4255-84fa-6cb171c1f779\"'\n      x-accepts: application/json\n    put:\n      description: |\n        Update an API Category by category Id\n      parameters:\n      - description: |\n          API Category UUID\n        explode: false\n        in: path\n        name: apiCategoryId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/APICategory'\n        description: |\n          API Category object with updated information\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APICategory'\n          description: |\n            OK.\n            Label updated.\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:admin_operations\n      summary: Update an API Category\n      tags:\n      - API Category (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/api-categories/d7cf8523-9180-4255-84fa-6cb171c1f779\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /settings:\n    get:\n      description: |\n        Retreive admin settings\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Settings'\n          description: |\n            OK.\n            Settings returned\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:admin_settings\n      summary: Retreive Admin Settings\n      tags:\n      - Settings\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/settings\"'\n      x-accepts: application/json\n  /alert-types:\n    get:\n      description: |\n        This operation is used to get the list of supportd alert types for the apim admin dashboard\n      operationId: getAdminAlertTypes\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlertTypesList'\n          description: |\n            OK.\n            The list of admin alert types are returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:admin_alert_manage\n      summary: |\n        Get all Admin Alert Types\n      tags:\n      - Alerts\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/alert-types\"'\n      x-accepts: application/json\n  /alert-subscriptions:\n    delete:\n      description: |\n        This operation is used to unsubscribe the respective user from all the admin alert types.\n      operationId: unsubscribeAllAlerts\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            The user is unsubscribed from the alerts successfully.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:admin_alert_manage\n      summary: |\n        Unsubscribe User from all Admin Alerts\n      tags:\n      - Alert Subscriptions\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/alert-subscriptions\"'\n      x-accepts: application/json\n    get:\n      description: |\n        This operation is used to get the list of subscribed alert types by the user.\n      operationId: getSubscribedAlertTypes\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlertsSubscription'\n          description: |\n            OK.\n            The list of subscribed alert types are returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:admin_alert_manage\n      summary: |\n        Get Subscribed Alert Types\n      tags:\n      - Alert Subscriptions\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/alert-subscriptions\"'\n      x-accepts: application/json\n    put:\n      description: |\n        This operation is used to subscribe to admin alerts\n      operationId: subscribeToAlerts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AlertsSubscription'\n        description: The alerts list and the email list to subscribe.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlertsSubscription'\n          description: |\n            OK.\n            Successful response with the newly subscribed alerts.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:admin_alert_manage\n      summary: |\n        Subscribe to an Admin Alert\n      tags:\n      - Alert Subscriptions\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/alert-subscriptions\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /alert-subscriptions/bot-detection:\n    get:\n      description: |\n        Get the list of subscriptions which are subscribed to receive email alerts for bot detection\n      operationId: getBotDetectionAlertSubscriptions\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BotDetectionAlertSubscriptionList'\n          description: |\n            OK.\n            The list of bot detection alert subscriptions are returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:admin_alert_manage\n      summary: |\n        Get Subscriptions for Bot Detection\n      tags:\n      - Bot Detection Alert Subscriptions\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/alert-subscriptions/bot-detection\"'\n      x-accepts: application/json\n    post:\n      description: |\n        Register a subscription for bot detection alerts\n      operationId: subscribeForBotDetectionAlerts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BotDetectionAlertSubscription'\n        description: |\n          The email to register to receive bot detection alerts\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BotDetectionAlertSubscription'\n          description: |\n            OK.\n            Bot detection alert subscription is registered successfully.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:admin_alert_manage\n      summary: Subscribe for Bot Detection Alerts\n      tags:\n      - Bot Detection Alert Subscriptions\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/alert-subscriptions/bot-detection\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /alert-subscriptions/bot-detection/{uuid}:\n    delete:\n      description: |\n        Delete a Bot Detection Alert Subscription\n      operationId: unsubscribeFromBotDetectionAlerts\n      parameters:\n      - description: uuid of the subscription\n        explode: false\n        in: path\n        name: uuid\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Bot detection alert subscription is deleted successfully.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:admin_alert_manage\n      summary: Unsubscribe from bot detection alerts.\n      tags:\n      - Bot Detection Alert Subscriptions\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/alert-subscriptions/bot-detection\"'\n      x-accepts: application/json\n  /system-scopes/{scopeName}:\n    get:\n      description: |\n        This operation will return the scope list of particular user\n        In order to get it, we need to pass the userId as a query parameter\n      operationId: systemScopesScopeNameGet\n      parameters:\n      - explode: true\n        in: query\n        name: username\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |\n          scope name to be validated\n        explode: false\n        in: path\n        name: scopeName\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScopeSettings'\n          description: |\n            OK.\n            Particular scope exists for the given user.\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:scope_manage\n      summary: Retrieve Scopes for a Particular User\n      tags:\n      - System Scopes\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/system-scopes/YXBpbTpzdWJzY3JpYmU?username=john\"'\n      x-accepts: application/json\n  /system-scopes:\n    get:\n      description: |\n        This operation is used to get the list of role scope mapping from tenant-conf for the apim admin dashboard\n      operationId: systemScopesGet\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScopeList'\n          description: |\n            OK.\n            The list of role scope mappings are returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:scope_manage\n        - apim:admin\n      summary: |\n        Get Role Scope Mappings\n      tags:\n      - System Scopes\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/system-scopes\"'\n      x-accepts: application/json\n    put:\n      description: |\n        This operation is used to update the roles for all scopes\n      operationId: updateRolesForScope\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScopeList'\n        description: |\n          Scope list object with updated scope to role mappings\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScopeList'\n          description: |\n            OK.\n            Successful response with the newly added roles.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:scope_manage\n      summary: |\n        Update Roles For Scope\n      tags:\n      - System Scopes\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/system-scopes\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /system-scopes/role-aliases:\n    get:\n      description: |\n        This operation can be used to retreive role alias mapping\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleAliasList'\n          description: |\n            OK.\n            The list of role mappings are returned.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:scope_manage\n      summary: Retrieve Role Alias Mappings\n      tags:\n      - System Scopes\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/system-scopes/role-aliases\"'\n      x-accepts: application/json\n    put:\n      description: |\n        This operation can be used to add a new role alias mapping for system scope roles\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RoleAliasList'\n        description: role-alias mapping\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleAliasList'\n          description: |\n            OK.\n            Role mapping alias returned\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:scope_manage\n        - apim:admin\n      summary: Add a New Role Alias\n      tags:\n      - System Scopes\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/system-scopes/role-aliases\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /tenant-theme:\n    get:\n      description: |\n        This operation can be used to export a DevPortal tenant theme as a zip file.\n      operationId: exportTenantTheme\n      responses:\n        \"200\":\n          content:\n            application/zip:\n              schema:\n                format: binary\n                type: string\n          description: |\n            OK.\n            Tenant Theme Exported Successfully.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tenant_theme_manage\n      summary: Export a DevPortal Tenant Theme\n      tags:\n      - Tenant Theme\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/tenant-theme\" \u003e theme.zip'\n      x-accepts: application/json\n    put:\n      description: |\n        This operation can be used to import a DevPortal tenant theme.\n      operationId: importTenantTheme\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: |\n                    Zip archive consisting of tenant theme configuration\n                  format: binary\n                  type: string\n              required:\n              - file\n        required: true\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            Ok.\n            Tenant Theme Imported Successfully.\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"413\":\n          content:\n            application/json:\n              example:\n                code: 413\n                message: Payload Too Large\n                description: Request entity is larger than limits defined by server\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Payload Too Large. Request entity is larger than limits defined\n            by server.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:tenant_theme_manage\n      summary: Import a DevPortal Tenant Theme\n      tags:\n      - Tenant Theme\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F file=@theme.zip \"https://127.0.0.1:9443/api/am/admin/v3/tenant-theme\"'\n      x-contentType: multipart/form-data\n      x-accepts: application/json\n  /tenant-config:\n    get:\n      description: |\n        This operation can be used to export a tenant-config.json used in deployment.\n      operationId: exportTenantConfig\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: |\n            OK.\n            Tenant config Exported Successfully.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n      summary: Export a tenant-Config.\n      tags:\n      - Tenant Config\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/tenant-config\" \u003e tenant-config.json'\n      x-accepts: application/json\n    put:\n      description: |\n        This operation can be used to update tenant-config.\n      operationId: updateTenantConfig\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        description: tenant-config\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: |\n            OK.\n            Role mapping alias returned\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"413\":\n          content:\n            application/json:\n              example:\n                code: 413\n                message: Payload Too Large\n                description: Request entity is larger than limits defined by server\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Payload Too Large. Request entity is larger than limits defined\n            by server.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n      summary: Update a tenant-config.\n      tags:\n      - Tenant Config\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/tenant-config\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /tenant-config-schema:\n    get:\n      description: |\n        This operation can be used to export a tenant-config-schema.json used in deployment.\n      operationId: exportTenantConfigSchema\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: |\n            OK.\n            Tenant config schema exported successfully.\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"403\":\n          content:\n            application/json:\n              example:\n                code: 403\n                message: Forbidden\n                description: The request must be conditional but no condition has\n                  been specified\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Forbidden. The request must be conditional but no condition\n            has been specified.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              example:\n                code: 500\n                message: Internal Server Error\n                description: The server encountered an internal error. Please contact\n                  administrator.\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal Server Error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n      summary: Export a tenant-Config-Schema.\n      tags:\n      - Tenant Config Schema\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/tenant-config-schema\" \u003e tenant-config-schema.json'\n      x-accepts: application/json\n  /key-managers:\n    get:\n      description: |\n        Get all Key managers\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeyManagerList'\n          description: |\n            OK.\n            KeyManagers returned\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:admin_operations\n      summary: Get all Key managers\n      tags:\n      - Key Manager (Collection)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/key-managers\"'\n      x-accepts: application/json\n    post:\n      description: |\n        Add a new API Key Manager\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/KeyManager'\n        description: |\n          Key Manager object that should to be added\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeyManager'\n          description: |\n            Created.\n            Successful response with the newly created object as entity in the body.\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:admin_operations\n      summary: Add a new API Key Manager\n      tags:\n      - Key Manager (Collection)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/key-managers\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /key-managers/{keyManagerId}:\n    delete:\n      description: |\n        Delete a Key Manager by keyManager id\n      parameters:\n      - description: |\n          Key Manager UUID\n        explode: false\n        in: path\n        name: keyManagerId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: |\n            OK.\n            Key Manager successfully deleted.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:admin_operations\n      summary: Delete a Key Manager\n      tags:\n      - Key Manager (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X DELETE -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/key-managers/8d263942-a6df-4cc2-a804-7a2525501450\"'\n      x-accepts: application/json\n    get:\n      description: |\n        Retrieve a single Key Manager Configuration. We should provide the Id of the KeyManager as a path parameter.\n      parameters:\n      - description: |\n          Key Manager UUID\n        explode: false\n        in: path\n        name: keyManagerId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeyManager'\n          description: |\n            OK.\n            KeyManager Configuration returned\n          headers:\n            Content-Type:\n              description: |\n                The content type of the body.\n              explode: false\n              schema:\n                type: string\n              style: simple\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n        \"406\":\n          content:\n            application/json:\n              example:\n                code: 406\n                message: Not Acceptable\n                description: The requested media type is not supported\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Acceptable. The requested media type is not supported.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:admin_operations\n      summary: Get a Key Manager Configuration\n      tags:\n      - Key Manager (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          \"https://127.0.0.1:9443/api/am/admin/v3/key-managers/8d263942-a6df-4cc2-a804-7a2525501450\"'\n      x-accepts: application/json\n    put:\n      description: |\n        Update a Key Manager by keyManager id\n      parameters:\n      - description: |\n          Key Manager UUID\n        explode: false\n        in: path\n        name: keyManagerId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/KeyManager'\n        description: |\n          Key Manager object with updated information\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeyManager'\n          description: |\n            OK.\n            Label updated.\n        \"400\":\n          content:\n            application/json:\n              example:\n                code: 400\n                message: Bad Request\n                description: Invalid request or validation error\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request. Invalid request or validation error.\n        \"404\":\n          content:\n            application/json:\n              example:\n                code: 404\n                message: Not Found\n                description: The specified resource does not exist\n                moreInfo: \"\"\n                error: []\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found. The specified resource does not exist.\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:admin_operations\n      summary: Update a Key Manager\n      tags:\n      - Key Manager (Individual)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -H \"Content-Type: application/json\" -d @data.json \"https://127.0.0.1:9443/api/am/admin/v3/key-managers/8d263942-a6df-4cc2-a804-7a2525501450\"'\n      x-contentType: application/json\n      x-accepts: application/json\n  /key-managers/discover:\n    post:\n      description: |\n        Retrieve well-known information from key manager's well-known endpoint\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                url:\n                  description: Well-Known Endpoint\n                  type: string\n                type:\n                  default: \"false\"\n                  description: |\n                    Key Manager Type\n                  type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeyManagerWellKnownResponse'\n          description: |\n            OK.\n            KeyManagers returned\n      security:\n      - OAuth2Security:\n        - apim:admin\n        - apim:admin_operations\n      summary: Retrieve Well-known information from Key Manager Well-known Endpoint\n      tags:\n      - Key Manager (Collection)\n      x-code-samples:\n      - lang: Shell\n        source: 'curl -k -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\"\n          -F \"type=WSO2-IS\" \"https://127.0.0.1:9443/api/am/admin/v3/key-managers/discover\"'\n      x-contentType: multipart/form-data\n      x-accepts: application/json\ncomponents:\n  parameters:\n    username:\n      description: |\n        username of the new application owner\n      explode: true\n      in: query\n      name: username\n      required: true\n      schema:\n        type: string\n      style: form\n    scopeName:\n      description: |\n        scope name to be validated\n      explode: false\n      in: path\n      name: scopeName\n      required: true\n      schema:\n        type: string\n      style: simple\n    labelId:\n      description: |\n        Label UUID\n      explode: false\n      in: path\n      name: labelId\n      required: true\n      schema:\n        type: string\n      style: simple\n    environmentId:\n      description: |\n        Environment UUID (or Environment name defined in config)\n      explode: false\n      in: path\n      name: environmentId\n      required: true\n      schema:\n        type: string\n      style: simple\n    policyId:\n      description: |\n        Thorttle policy UUID\n      explode: false\n      in: path\n      name: policyId\n      required: true\n      schema:\n        type: string\n      style: simple\n    ruleId:\n      description: |\n        Custom rule UUID\n      explode: false\n      in: path\n      name: ruleId\n      required: true\n      schema:\n        type: string\n      style: simple\n    applicationId:\n      description: |\n        Application UUID\n      explode: false\n      in: path\n      name: applicationId\n      required: true\n      schema:\n        type: string\n      style: simple\n    conditionId:\n      description: |\n        Blocking condition identifier\n      explode: false\n      in: path\n      name: conditionId\n      required: true\n      schema:\n        type: string\n      style: simple\n    Accept:\n      description: |\n        Media types acceptable for the response. Default is application/json.\n      explode: false\n      in: header\n      name: Accept\n      required: false\n      schema:\n        default: application/json\n        type: string\n      style: simple\n    Content-Type:\n      description: |\n        Media type of the entity in the body. Default is application/json.\n      explode: false\n      in: header\n      name: Content-Type\n      required: true\n      schema:\n        default: application/json\n        type: string\n      style: simple\n    If-None-Match:\n      description: |\n        Validator for conditional requests; based on the ETag of the formerly retrieved\n        variant of the resource (Will be supported in future).\n      explode: false\n      in: header\n      name: If-None-Match\n      required: false\n      schema:\n        type: string\n      style: simple\n    If-Modified-Since:\n      description: |\n        Validator for conditional requests; based on Last Modified header of the\n        formerly retrieved variant of the resource (Will be supported in future).\n      explode: false\n      in: header\n      name: If-Modified-Since\n      required: false\n      schema:\n        type: string\n      style: simple\n    If-Match:\n      description: |\n        Validator for conditional requests; based on ETag (Will be supported in future).\n      explode: false\n      in: header\n      name: If-Match\n      required: false\n      schema:\n        type: string\n      style: simple\n    If-Unmodified-Since:\n      description: |\n        Validator for conditional requests; based on Last Modified header (Will be supported in future).\n      explode: false\n      in: header\n      name: If-Unmodified-Since\n      required: false\n      schema:\n        type: string\n      style: simple\n    limit:\n      description: |\n        Maximum size of resource array to return.\n      explode: true\n      in: query\n      name: limit\n      required: false\n      schema:\n        default: 25\n        type: integer\n      style: form\n    offset:\n      description: |\n        Starting point within the complete list of items qualified.\n      explode: true\n      in: query\n      name: offset\n      required: false\n      schema:\n        default: 0\n        type: integer\n      style: form\n    mediationPolicyId:\n      description: |\n        Mediation policy Id\n      explode: false\n      in: path\n      name: mediationPolicyId\n      required: true\n      schema:\n        type: string\n      style: simple\n    user:\n      description: |\n        username of the application creator\n      explode: true\n      in: query\n      name: user\n      required: false\n      schema:\n        type: string\n      style: form\n    workflowReferenceId-Q:\n      description: |\n        Workflow reference id\n      explode: true\n      in: query\n      name: workflowReferenceId\n      required: true\n      schema:\n        type: string\n      style: form\n    apiCategoryId:\n      description: |\n        API Category UUID\n      explode: false\n      in: path\n      name: apiCategoryId\n      required: true\n      schema:\n        type: string\n      style: simple\n    keyManagerId:\n      description: |\n        Key Manager UUID\n      explode: false\n      in: path\n      name: keyManagerId\n      required: true\n      schema:\n        type: string\n      style: simple\n  responses:\n    BadRequest:\n      content:\n        application/json:\n          example:\n            code: 400\n            message: Bad Request\n            description: Invalid request or validation error\n            moreInfo: \"\"\n            error: []\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Bad Request. Invalid request or validation error.\n    Conflict:\n      content:\n        application/json:\n          example:\n            code: 409\n            message: Conflict\n            description: Specified resource already exists\n            moreInfo: \"\"\n            error: []\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Conflict. Specified resource already exists.\n    Forbidden:\n      content:\n        application/json:\n          example:\n            code: 403\n            message: Forbidden\n            description: The request must be conditional but no condition has been\n              specified\n            moreInfo: \"\"\n            error: []\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Forbidden. The request must be conditional but no condition has\n        been specified.\n    InternalServerError:\n      content:\n        application/json:\n          example:\n            code: 500\n            message: Internal Server Error\n            description: The server encountered an internal error. Please contact\n              administrator.\n            moreInfo: \"\"\n            error: []\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Internal Server Error.\n    NotAcceptable:\n      content:\n        application/json:\n          example:\n            code: 406\n            message: Not Acceptable\n            description: The requested media type is not supported\n            moreInfo: \"\"\n            error: []\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Not Acceptable. The requested media type is not supported.\n    NotFound:\n      content:\n        application/json:\n          example:\n            code: 404\n            message: Not Found\n            description: The specified resource does not exist\n            moreInfo: \"\"\n            error: []\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Not Found. The specified resource does not exist.\n    PayloadTooLarge:\n      content:\n        application/json:\n          example:\n            code: 413\n            message: Payload Too Large\n            description: Request entity is larger than limits defined by server\n            moreInfo: \"\"\n            error: []\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Payload Too Large. Request entity is larger than limits defined\n        by server.\n    PreconditionFailed:\n      content:\n        application/json:\n          example:\n            code: 412\n            message: Precondition Failed\n            description: The request has not been performed because one of the preconditions\n              is not met\n            moreInfo: \"\"\n            error: []\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Precondition Failed. The request has not been performed because\n        one of the preconditions is not met.\n    Unauthorized:\n      content:\n        application/json:\n          example:\n            code: 401\n            message: Unauthorized\n            description: The user is not authorized\n            moreInfo: \"\"\n            error: []\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Unauthorized. The user is not authorized.\n    UnsupportedMediaType:\n      content:\n        application/json:\n          example:\n            code: 415\n            message: Unsupported media type\n            description: The entity of the request was not in a supported format\n            moreInfo: \"\"\n            error: []\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Unsupported Media Type. The entity of the request was not in a\n        supported format.\n  schemas:\n    Error:\n      properties:\n        code:\n          description: Error code\n          format: int64\n          type: integer\n        message:\n          description: Error message.\n          type: string\n        description:\n          description: |\n            A detail description about the error message.\n          type: string\n        moreInfo:\n          description: |\n            Preferably an url with more details about the error.\n          type: string\n        error:\n          description: |\n            If there are more than one error list them out.\n            For example, list out validation errors by each field.\n          items:\n            $ref: '#/components/schemas/ErrorListItem'\n          type: array\n      required:\n      - code\n      - message\n      title: Error object returned with 4XX HTTP status\n      type: object\n    ErrorListItem:\n      properties:\n        code:\n          description: Error code\n          type: string\n        message:\n          description: |\n            Description about individual errors occurred\n          type: string\n      required:\n      - code\n      - message\n      title: Description of individual errors that may have occurred during a request.\n      type: object\n    ThrottlePolicyDetailsList:\n      example:\n        count: 1\n        list:\n        - policyId: 3\n          policyName: 30PerMin\n          displayName: 30PerMin\n          isDeployed: false\n          description: Allows 30 request per minute\n          type: type\n          uuid: 0c6439fd-9b16-3c2e-be6e-1086e0b9aa93\n        - policyId: 3\n          policyName: 30PerMin\n          displayName: 30PerMin\n          isDeployed: false\n          description: Allows 30 request per minute\n          type: type\n          uuid: 0c6439fd-9b16-3c2e-be6e-1086e0b9aa93\n      properties:\n        count:\n          description: |\n            Number of Throttling Policies returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/ThrottlePolicyDetails'\n          type: array\n      title: Policy List\n      type: object\n    ThrottlePolicyDetails:\n      example:\n        policyId: 3\n        policyName: 30PerMin\n        displayName: 30PerMin\n        isDeployed: false\n        description: Allows 30 request per minute\n        type: type\n        uuid: 0c6439fd-9b16-3c2e-be6e-1086e0b9aa93\n      properties:\n        policyId:\n          description: Id of policy\n          example: 3\n          readOnly: true\n          type: integer\n        uuid:\n          description: UUId of policy\n          example: 0c6439fd-9b16-3c2e-be6e-1086e0b9aa93\n          readOnly: true\n          type: string\n        policyName:\n          description: Name of policy\n          example: 30PerMin\n          maxLength: 60\n          minLength: 1\n          type: string\n        displayName:\n          description: Display name of the policy\n          example: 30PerMin\n          maxLength: 512\n          type: string\n        description:\n          description: Description of the policy\n          example: Allows 30 request per minute\n          maxLength: 1024\n          type: string\n        isDeployed:\n          default: false\n          description: Indicates whether the policy is deployed successfully or not.\n          type: boolean\n        type:\n          description: Indicates the type of throttle policy\n          type: string\n      required:\n      - policyName\n      title: Generic Policy\n      type: object\n    ThrottlePolicy:\n      discriminator:\n        propertyName: type\n      properties:\n        policyId:\n          description: Id of policy\n          example: 0c6439fd-9b16-3c2e-be6e-1086e0b9aa93\n          readOnly: true\n          type: string\n        policyName:\n          description: Name of policy\n          example: 30PerMin\n          maxLength: 60\n          minLength: 1\n          type: string\n        displayName:\n          description: Display name of the policy\n          example: 30PerMin\n          maxLength: 512\n          type: string\n        description:\n          description: Description of the policy\n          example: Allows 30 request per minute\n          maxLength: 1024\n          type: string\n        isDeployed:\n          default: false\n          description: Indicates whether the policy is deployed successfully or not.\n          type: boolean\n        type:\n          description: Indicates the type of throttle policy\n          type: string\n      required:\n      - policyName\n      title: Generic Throttling Policy\n      type: object\n    ExportThrottlePolicy:\n      example:\n        data: '{}'\n        subtype: subtype\n        type: type\n        version: version\n      properties:\n        type:\n          type: string\n        subtype:\n          type: string\n        version:\n          type: string\n        data:\n          type: object\n      title: Export Throttling Policy\n      type: object\n    AdvancedThrottlePolicyInfo:\n      allOf:\n      - $ref: '#/components/schemas/ThrottlePolicy'\n      - $ref: '#/components/schemas/AdvancedThrottlePolicyInfo_allOf'\n      title: Advanced Throttling Policy\n    AdvancedThrottlePolicy:\n      allOf:\n      - $ref: '#/components/schemas/ThrottlePolicy'\n      - $ref: '#/components/schemas/AdvancedThrottlePolicy_allOf'\n      title: Advanced Throttling Policy\n    AdvancedThrottlePolicyList:\n      example:\n        count: 1\n        list:\n        - null\n        - null\n      properties:\n        count:\n          description: |\n            Number of Advanced Throttling Policies returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/AdvancedThrottlePolicyInfo'\n          type: array\n      title: Advanced Throttling Policy List\n      type: object\n    ApplicationThrottlePolicy:\n      allOf:\n      - $ref: '#/components/schemas/ThrottlePolicy'\n      - $ref: '#/components/schemas/ApplicationThrottlePolicy_allOf'\n      title: Application Throttling Policy\n    ApplicationThrottlePolicyList:\n      example:\n        count: 1\n        list:\n        - null\n        - null\n      properties:\n        count:\n          description: |\n            Number of Application Throttling Policies returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/ApplicationThrottlePolicy'\n          type: array\n      title: Application Level Throttling Policy List\n      type: object\n    SubscriptionThrottlePolicy:\n      allOf:\n      - $ref: '#/components/schemas/ThrottlePolicy'\n      - $ref: '#/components/schemas/GraphQLQuery'\n      - $ref: '#/components/schemas/SubscriptionThrottlePolicy_allOf'\n      title: Subscription Throttling Policy\n    SubscriptionThrottlePolicyPermission:\n      properties:\n        permissionType:\n          enum:\n          - ALLOW\n          - DENY\n          example: deny\n          type: string\n        roles:\n          example:\n          - Internal/everyone\n          items:\n            type: string\n          type: array\n      required:\n      - permissionType\n      - roles\n      title: SubscriptionThrottlePolicyPermission\n      type: object\n    GraphQLQuery:\n      properties:\n        graphQLMaxComplexity:\n          description: Maximum Complexity of the GraphQL query\n          example: 400\n          type: integer\n        graphQLMaxDepth:\n          description: Maximum Depth of the GraphQL query\n          example: 10\n          type: integer\n      title: GraphQL Query\n      type: object\n    SubscriptionThrottlePolicyList:\n      example:\n        count: 1\n        list:\n        - null\n        - null\n      properties:\n        count:\n          description: |\n            Number of Subscription Throttling Policies returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/SubscriptionThrottlePolicy'\n          type: array\n      title: Subscription Level Throttling Policy List\n      type: object\n    CustomRule:\n      allOf:\n      - $ref: '#/components/schemas/ThrottlePolicy'\n      - $ref: '#/components/schemas/CustomRule_allOf'\n      title: Custom Rule\n    CustomRuleList:\n      example:\n        count: 1\n        list:\n        - null\n        - null\n      properties:\n        count:\n          description: |\n            Number of Custom Rules returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/CustomRule'\n          type: array\n      title: Custom Rule List\n      type: object\n    ConditionalGroup:\n      properties:\n        description:\n          description: Description of the Conditional Group\n          type: string\n        conditions:\n          description: |\n            Individual throttling conditions. They can be defined as either HeaderCondition, IPCondition, JWTClaimsCondition, QueryParameterCondition\n            Please see schemas of each of those throttling condition in Definitions section.\n          example: |\n            [\n              {\n                \"type\": \"HEADERCONDITION\",\n                \"invertCondition\": false,\n                \"headerCondition\":\n                {\n                  \"headerName\": \"Host\",\n                  \"headerValue\": \"10.100.7.77\"\n                }\n              },\n              {\n                \"type\": \"IPCONDITION\",\n                \"invertCondition\": false,\n                \"ipCondition\":\n                {\n                  \"ipConditionType\": \"IPSPECIFIC\",\n                  \"specificIP\": \"10.100.1.22\",\n                  \"startingIP\": null,\n                  \"endingIP\": null\n                }\n              },\n              {\n                \"type\": \"QUERYPARAMETERCONDITION\",\n                \"invertCondition\": false,\n                \"queryParameterCondition\":\n                {\n                  \"parameterName\": \"name\",\n                  \"parameterValue\": \"admin\"\n                }\n              },\n              {\n                \"type\": \"JWTCLAIMSCONDITION\",\n                \"invertCondition\": true,\n                \"jwtClaimsCondition\":\n                {\n                  \"claimUrl\": \"claimUrl0\",\n                  \"attribute\": \"claimAttr0\"\n                }\n              }\n            ]\n          items:\n            $ref: '#/components/schemas/ThrottleCondition'\n          type: array\n        limit:\n          $ref: '#/components/schemas/ThrottleLimit'\n      required:\n      - conditions\n      - limit\n      title: Conditional Groups for Throttling\n      type: object\n    ThrottleCondition:\n      description: Conditions used for Throttling\n      properties:\n        type:\n          description: |\n            Type of the throttling condition. Allowed values are \"HEADERCONDITION\", \"IPCONDITION\", \"JWTCLAIMSCONDITION\"\n            and \"QUERYPARAMETERCONDITION\".\n          enum:\n          - HEADERCONDITION\n          - IPCONDITION\n          - JWTCLAIMSCONDITION\n          - QUERYPARAMETERCONDITION\n          type: string\n        invertCondition:\n          default: false\n          description: |\n            Specifies whether inversion of the condition to be matched against the request.\n\n            **Note:** When you add conditional groups for advanced throttling policies, this paramater should have the\n            same value ('true' or 'false') for the same type of conditional group.\n          type: boolean\n        headerCondition:\n          $ref: '#/components/schemas/HeaderCondition'\n        ipCondition:\n          $ref: '#/components/schemas/IPCondition'\n        jwtClaimsCondition:\n          $ref: '#/components/schemas/JWTClaimsCondition'\n        queryParameterCondition:\n          $ref: '#/components/schemas/QueryParameterCondition'\n      required:\n      - type\n      title: Throttling Conditions\n      type: object\n    HeaderCondition:\n      properties:\n        headerName:\n          description: Name of the header\n          type: string\n        headerValue:\n          description: Value of the header\n          type: string\n      required:\n      - headerName\n      - headerValue\n      title: HTTP Header based throttling condition\n      type: object\n    IPCondition:\n      properties:\n        ipConditionType:\n          description: Type of the IP condition. Allowed values are \"IPRANGE\" and\n            \"IPSPECIFIC\"\n          enum:\n          - IPRANGE\n          - IPSPECIFIC\n          type: string\n        specificIP:\n          description: Specific IP when \"IPSPECIFIC\" is used as the ipConditionType\n          type: string\n        startingIP:\n          description: Staring IP when \"IPRANGE\" is used as the ipConditionType\n          type: string\n        endingIP:\n          description: Ending IP when \"IPRANGE\" is used as the ipConditionType\n          type: string\n      required:\n      - specificIP\n      title: IP based throttling condition\n      type: object\n    JWTClaimsCondition:\n      properties:\n        claimUrl:\n          description: JWT claim URL\n          type: string\n        attribute:\n          description: Attribute to be matched\n          type: string\n      required:\n      - attribute\n      - claimUrl\n      title: JWT claim attibute based throttling condition\n      type: object\n    QueryParameterCondition:\n      properties:\n        parameterName:\n          description: Name of the query parameter\n          type: string\n        parameterValue:\n          description: Value of the query parameter to be matched\n          type: string\n      required:\n      - parameterName\n      - parameterValue\n      title: Query parameter based throttling condition\n      type: object\n    ThrottleLimitBase:\n      properties:\n        timeUnit:\n          description: Unit of the time. Allowed values are \"sec\", \"min\", \"hour\",\n            \"day\"\n          example: min\n          type: string\n        unitTime:\n          description: Time limit that the throttling limit applies.\n          example: 10\n          type: integer\n      required:\n      - timeUnit\n      - unitTime\n      title: Throttle Limit Base\n      type: object\n    ThrottleLimit:\n      properties:\n        type:\n          description: |\n            Type of the throttling limit. Allowed values are \"REQUESTCOUNTLIMIT\" and \"BANDWIDTHLIMIT\".\n            Please see schemas of \"RequestCountLimit\" and \"BandwidthLimit\" throttling limit types in\n            Definitions section.\n          enum:\n          - REQUESTCOUNTLIMIT\n          - BANDWIDTHLIMIT\n          - EVENTCOUNTLIMIT\n          example: REQUESTCOUNTLIMIT\n          type: string\n        requestCount:\n          $ref: '#/components/schemas/RequestCountLimit'\n        bandwidth:\n          $ref: '#/components/schemas/BandwidthLimit'\n        eventCount:\n          $ref: '#/components/schemas/EventCountLimit'\n      required:\n      - type\n      title: Throttle Limit\n      type: object\n    MonetizationInfo:\n      properties:\n        monetizationPlan:\n          description: Flag to indicate the monetization plan\n          enum:\n          - FIXEDRATE\n          - DYNAMICRATE\n          example: FixedRate\n          type: string\n        properties:\n          additionalProperties:\n            type: string\n          description: Map of custom properties related to each monetization plan\n          type: object\n      required:\n      - monetizationPlan\n      - properties\n      title: API monetization details object\n      type: object\n    BandwidthLimit:\n      allOf:\n      - $ref: '#/components/schemas/ThrottleLimitBase'\n      - $ref: '#/components/schemas/BandwidthLimit_allOf'\n      title: Bandwidth Limit object\n    RequestCountLimit:\n      allOf:\n      - $ref: '#/components/schemas/ThrottleLimitBase'\n      - $ref: '#/components/schemas/RequestCountLimit_allOf'\n      title: Request Count Limit object\n    EventCountLimit:\n      allOf:\n      - $ref: '#/components/schemas/ThrottleLimitBase'\n      - $ref: '#/components/schemas/EventCountLimit_allOf'\n      title: Event Count Limit object\n    BlockingCondition:\n      description: Blocking Conditions\n      example:\n        conditionStatus: true\n        conditionId: b513eb68-69e8-4c32-92cf-852c101363cf\n        conditionValue:\n          fixedIp: 192.168.1.1\n          invert: false\n        conditionType: IP\n      properties:\n        conditionId:\n          description: Id of the blocking condition\n          example: b513eb68-69e8-4c32-92cf-852c101363cf\n          type: string\n        conditionType:\n          description: Type of the blocking condition\n          enum:\n          - API\n          - APPLICATION\n          - IP\n          - IPRANGE\n          - USER\n          example: IP\n          type: string\n        conditionValue:\n          description: Value of the blocking condition\n          example:\n            fixedIp: 192.168.1.1\n            invert: false\n          properties: {}\n          type: object\n        conditionStatus:\n          description: Status of the blocking condition\n          example: true\n          type: boolean\n      required:\n      - conditionType\n      - conditionValue\n      title: Blocking Conditions\n      type: object\n    BlockingConditionList:\n      example:\n        count: 1\n        list:\n        - conditionStatus: true\n          conditionId: b513eb68-69e8-4c32-92cf-852c101363cf\n          conditionValue:\n            fixedIp: 192.168.1.1\n            invert: false\n          conditionType: IP\n        - conditionStatus: true\n          conditionId: b513eb68-69e8-4c32-92cf-852c101363cf\n          conditionValue:\n            fixedIp: 192.168.1.1\n            invert: false\n          conditionType: IP\n      properties:\n        count:\n          description: |\n            Number of Blocking Conditions returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/BlockingCondition'\n          type: array\n      title: Blocking Conditions List\n      type: object\n    BlockingConditionStatus:\n      description: Blocking Conditions Status\n      properties:\n        conditionId:\n          description: Id of the blocking condition\n          example: b513eb68-69e8-4c32-92cf-852c101363cf\n          type: string\n        conditionStatus:\n          description: Status of the blocking condition\n          example: true\n          type: boolean\n      required:\n      - conditionStatus\n      title: Blocking Conditions Status\n      type: object\n    CustomAttribute:\n      properties:\n        name:\n          description: Name of the custom attribute\n          example: customAttr1\n          type: string\n        value:\n          description: Value of the custom attribute\n          example: value1\n          type: string\n      required:\n      - name\n      - value\n      title: Name-Value pair\n      type: object\n    mediationList:\n      example:\n        next: next\n        previous: previous\n        count: 1\n        list:\n        - name: json_fault.xml\n          id: 01234567-0123-0123-0123-012345678901\n          type: in\n        - name: json_fault.xml\n          id: 01234567-0123-0123-0123-012345678901\n          type: in\n      properties:\n        count:\n          description: |\n            Number of mediation sequences returned.\n          example: 1\n          type: integer\n        next:\n          description: |\n            Link to the next subset of sequences qualified.\n            Empty if no more sequences are to be returned.\n          type: string\n        previous:\n          description: |\n            Link to the previous subset of sequences qualified.\n            Empty if current subset is the first subset returned.\n          type: string\n        list:\n          items:\n            $ref: '#/components/schemas/MediationInfo'\n          type: array\n      title: Mediation List\n      type: object\n    MediationInfo:\n      example:\n        name: json_fault.xml\n        id: 01234567-0123-0123-0123-012345678901\n        type: in\n      properties:\n        name:\n          example: json_fault.xml\n          type: string\n        id:\n          example: 01234567-0123-0123-0123-012345678901\n          type: string\n        type:\n          enum:\n          - in\n          - out\n          - fault\n          example: in\n          type: string\n      required:\n      - id\n      - name\n      - type\n      title: MediationInfo\n      type: object\n    Mediation:\n      example:\n        name: custom_log_in_message.xml\n        id: 01234567-0123-0123-0123-012345678901\n        type: IN\n        config: \u003csequence xmlns=\"http://ws.apache.org/ns/synapse\" name=\"custom_log_in_message\"\u003e\n          \u003clog level=\"full\"\u003e \u003cproperty name=\"IN_MESSAGE\" value=\"IN_MESSAGE_21133232\"/\u003e\n          \u003c/log\u003e \u003c/sequence\u003e\n      properties:\n        id:\n          example: 01234567-0123-0123-0123-012345678901\n          readOnly: true\n          type: string\n        name:\n          example: custom_log_in_message.xml\n          type: string\n        type:\n          enum:\n          - IN\n          - OUT\n          - FAULT\n          example: IN\n          type: string\n        config:\n          example: \u003csequence xmlns=\"http://ws.apache.org/ns/synapse\" name=\"custom_log_in_message\"\u003e\n            \u003clog level=\"full\"\u003e \u003cproperty name=\"IN_MESSAGE\" value=\"IN_MESSAGE_21133232\"/\u003e\n            \u003c/log\u003e \u003c/sequence\u003e\n          type: string\n      required:\n      - config\n      - name\n      - type\n      title: Mediation\n      type: object\n    ApplicationList:\n      example:\n        next: /applications?limit=1\u0026offset=2\u0026user=\n        previous: /applications?limit=1\u0026offset=0\u0026user=\n        count: 1\n        list:\n        - owner: admin\n          groupId: groupId\n          name: CalculatorApp\n          applicationId: 01234567-0123-0123-0123-012345678901\n          status: APPROVED\n        - owner: admin\n          groupId: groupId\n          name: CalculatorApp\n          applicationId: 01234567-0123-0123-0123-012345678901\n          status: APPROVED\n      properties:\n        count:\n          description: |\n            Number of applications returned.\n          example: 1\n          type: integer\n        next:\n          description: |\n            Link to the next subset of resources qualified.\n            Empty if no more resources are to be returned.\n          example: /applications?limit=1\u0026offset=2\u0026user=\n          type: string\n        previous:\n          description: |\n            Link to the previous subset of resources qualified.\n            Empty if current subset is the first subset returned.\n          example: /applications?limit=1\u0026offset=0\u0026user=\n          type: string\n        list:\n          items:\n            $ref: '#/components/schemas/ApplicationInfo'\n          type: array\n      title: Application List\n      type: object\n    ApplicationInfo:\n      example:\n        owner: admin\n        groupId: groupId\n        name: CalculatorApp\n        applicationId: 01234567-0123-0123-0123-012345678901\n        status: APPROVED\n      properties:\n        applicationId:\n          example: 01234567-0123-0123-0123-012345678901\n          type: string\n        name:\n          example: CalculatorApp\n          type: string\n        owner:\n          example: admin\n          type: string\n        status:\n          example: APPROVED\n          type: string\n        groupId:\n          type: string\n      title: Application info object with basic application details\n      type: object\n    APIInfoList:\n      properties:\n        count:\n          description: |\n            Number of API Info objects returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/APIInfo'\n          type: array\n      title: API Info List\n      type: object\n    APIInfo:\n      properties:\n        name:\n          description: The name of the API.\n          example: PizzaShackAPI\n          type: string\n        version:\n          description: The version of the API\n          example: 1.0.0\n          type: string\n        provider:\n          description: The provider of the API\n          example: admin\n          type: string\n      title: API info object with basic API details\n      type: object\n    Label:\n      example:\n        accessUrls:\n        - http://localhost:9443/\n        - http://localhost:9443/\n        name: Public\n        description: Label to use for public Gateway\n        id: ece92bdc-e1e6-325c-b6f4-656208a041e9\n      properties:\n        id:\n          example: ece92bdc-e1e6-325c-b6f4-656208a041e9\n          readOnly: true\n          type: string\n        name:\n          example: Public\n          maxLength: 255\n          minLength: 1\n          type: string\n        description:\n          example: Label to use for public Gateway\n          maxLength: 1024\n          type: string\n        accessUrls:\n          items:\n            example: http://localhost:9443/\n            type: string\n          type: array\n      required:\n      - name\n      title: Label\n      type: object\n    LabelList:\n      example:\n        count: 1\n        list:\n        - accessUrls:\n          - http://localhost:9443/\n          - http://localhost:9443/\n          name: Public\n          description: Label to use for public Gateway\n          id: ece92bdc-e1e6-325c-b6f4-656208a041e9\n        - accessUrls:\n          - http://localhost:9443/\n          - http://localhost:9443/\n          name: Public\n          description: Label to use for public Gateway\n          id: ece92bdc-e1e6-325c-b6f4-656208a041e9\n      properties:\n        count:\n          description: |\n            Number of Labels returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/Label'\n          type: array\n      title: Label List\n      type: object\n    Environment:\n      example:\n        endpointURIs:\n        - protocol: default\n          endpointURI: default\n        - protocol: default\n          endpointURI: default\n        isReadOnly: false\n        provider: wso2\n        displayName: US Region\n        name: us-region\n        description: Gateway environment in US Region\n        id: ece92bdc-e1e6-325c-b6f4-656208a041e9\n        additionalProperties:\n        - value: wso2\n          key: Organization\n        - value: wso2\n          key: Organization\n        vhosts:\n        - httpContext: pets\n          wssPort: 8099\n          httpPort: 80\n          wsPort: 9099\n          host: mg.wso2.com\n          httpsPort: 443\n        - httpContext: pets\n          wssPort: 8099\n          httpPort: 80\n          wsPort: 9099\n          host: mg.wso2.com\n          httpsPort: 443\n      properties:\n        id:\n          example: ece92bdc-e1e6-325c-b6f4-656208a041e9\n          readOnly: true\n          type: string\n        name:\n          example: us-region\n          maxLength: 255\n          minLength: 1\n          pattern: (^[^~!@#;:%^*()+={}|\\\\\u003c\u003e\"',\u0026$\\s+]*$)\n          type: string\n        displayName:\n          example: US Region\n          maxLength: 255\n          minLength: 1\n          type: string\n        description:\n          example: Gateway environment in US Region\n          maxLength: 1023\n          type: string\n        provider:\n          example: wso2\n          type: string\n        isReadOnly:\n          example: false\n          readOnly: true\n          type: boolean\n        vhosts:\n          items:\n            $ref: '#/components/schemas/VHost'\n          minItems: 1\n          type: array\n        endpointURIs:\n          items:\n            $ref: '#/components/schemas/GatewayEnvironmentProtocolURI'\n          type: array\n        additionalProperties:\n          items:\n            $ref: '#/components/schemas/AdditionalProperty'\n          type: array\n      required:\n      - name\n      - vhosts\n      title: Environment\n      type: object\n    EnvironmentList:\n      example:\n        count: 1\n        list:\n        - endpointURIs:\n          - protocol: default\n            endpointURI: default\n          - protocol: default\n            endpointURI: default\n          isReadOnly: false\n          provider: wso2\n          displayName: US Region\n          name: us-region\n          description: Gateway environment in US Region\n          id: ece92bdc-e1e6-325c-b6f4-656208a041e9\n          additionalProperties:\n          - value: wso2\n            key: Organization\n          - value: wso2\n            key: Organization\n          vhosts:\n          - httpContext: pets\n            wssPort: 8099\n            httpPort: 80\n            wsPort: 9099\n            host: mg.wso2.com\n            httpsPort: 443\n          - httpContext: pets\n            wssPort: 8099\n            httpPort: 80\n            wsPort: 9099\n            host: mg.wso2.com\n            httpsPort: 443\n        - endpointURIs:\n          - protocol: default\n            endpointURI: default\n          - protocol: default\n            endpointURI: default\n          isReadOnly: false\n          provider: wso2\n          displayName: US Region\n          name: us-region\n          description: Gateway environment in US Region\n          id: ece92bdc-e1e6-325c-b6f4-656208a041e9\n          additionalProperties:\n          - value: wso2\n            key: Organization\n          - value: wso2\n            key: Organization\n          vhosts:\n          - httpContext: pets\n            wssPort: 8099\n            httpPort: 80\n            wsPort: 9099\n            host: mg.wso2.com\n            httpsPort: 443\n          - httpContext: pets\n            wssPort: 8099\n            httpPort: 80\n            wsPort: 9099\n            host: mg.wso2.com\n            httpsPort: 443\n      properties:\n        count:\n          description: |\n            Number of Environments returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/Environment'\n          type: array\n      title: Environment List\n      type: object\n    VHost:\n      example:\n        httpContext: pets\n        wssPort: 8099\n        httpPort: 80\n        wsPort: 9099\n        host: mg.wso2.com\n        httpsPort: 443\n      properties:\n        host:\n          example: mg.wso2.com\n          maxLength: 255\n          minLength: 1\n          pattern: ^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$\n          type: string\n        httpContext:\n          example: pets\n          maxLength: 255\n          minLength: 0\n          pattern: ^\\/?([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])*$\n          type: string\n        httpPort:\n          example: 80\n          type: integer\n        httpsPort:\n          example: 443\n          type: integer\n        wsPort:\n          example: 9099\n          type: integer\n        wssPort:\n          example: 8099\n          type: integer\n      required:\n      - host\n      title: Virtual Host\n      type: object\n    AdditionalProperty:\n      example:\n        value: wso2\n        key: Organization\n      properties:\n        key:\n          example: Organization\n          type: string\n        value:\n          example: wso2\n          type: string\n      title: Additional Gateway Properties\n      type: object\n    GatewayEnvironmentProtocolURI:\n      example:\n        protocol: default\n        endpointURI: default\n      properties:\n        protocol:\n          example: default\n          type: string\n        endpointURI:\n          example: default\n          type: string\n      required:\n      - endpointURI\n      - protocol\n      title: Gateway Environment protocols and URIs\n      type: object\n    PublishStatus:\n      example:\n        message: Records published successfully\n        status: successfull\n      properties:\n        status:\n          description: Status of the usage publish request\n          example: successfull\n          type: string\n        message:\n          description: detailed message of the status\n          example: Records published successfully\n          type: string\n      title: Usage publish status\n      type: object\n    MonetizationUsagePublishInfo:\n      example:\n        startedTime: \"1599196134000\"\n        lastPublsihedTime: \"1599196134000\"\n        state: RUNNING\n        status: SUCCESSFULL\n      properties:\n        state:\n          description: State of usage publish job\n          example: RUNNING\n          type: string\n        status:\n          description: Status of usage publish job\n          example: SUCCESSFULL\n          type: string\n        startedTime:\n          description: Timestamp of the started time of the Job\n          example: \"1599196134000\"\n          type: string\n        lastPublsihedTime:\n          description: Timestamp of the last published time\n          example: \"1599196134000\"\n          type: string\n      title: Usage publish status\n      type: object\n    Workflow:\n      example:\n        description: Approve workflow request.\n        attributes: {}\n        status: APPROVED\n      properties:\n        status:\n          description: |\n            This attribute declares whether this workflow task is approved or rejected.\n          enum:\n          - APPROVED\n          - REJECTED\n          example: APPROVED\n          type: string\n        attributes:\n          additionalProperties:\n            type: string\n          description: |\n            Custom attributes to complete the workflow task\n          example: {}\n          type: object\n        description:\n          example: Approve workflow request.\n          type: string\n      required:\n      - status\n      title: workflow\n      type: object\n    TenantInfo:\n      description: The tenant information of the user\n      example:\n        tenantId: -1234\n        tenantDomain: carbon.super\n        username: john\n      properties:\n        username:\n          example: john\n          type: string\n        tenantDomain:\n          example: carbon.super\n          type: string\n        tenantId:\n          example: -1234\n          type: integer\n      title: Tenant information\n      type: object\n    CustomUrlInfo:\n      description: The custom url information of the tenant domain\n      example:\n        devPortal:\n          url: http://example.com\n        tenantAdminUsername: john@foo.com\n        tenantDomain: carbon.super\n        enabled: true\n      properties:\n        tenantDomain:\n          example: carbon.super\n          type: string\n        tenantAdminUsername:\n          example: john@foo.com\n          type: string\n        enabled:\n          example: true\n          type: boolean\n        devPortal:\n          $ref: '#/components/schemas/CustomUrlInfo_devPortal'\n      title: Custom url information\n      type: object\n    APICategory:\n      example:\n        numberOfAPIs: 1\n        name: Finance\n        description: Finance related APIs\n        id: 01234567-0123-0123-0123-012345678901\n      properties:\n        id:\n          example: 01234567-0123-0123-0123-012345678901\n          readOnly: true\n          type: string\n        name:\n          example: Finance\n          maxLength: 255\n          minLength: 1\n          type: string\n        description:\n          example: Finance related APIs\n          maxLength: 1024\n          type: string\n        numberOfAPIs:\n          example: 1\n          readOnly: true\n          type: integer\n      required:\n      - name\n      title: API Category\n      type: object\n    APICategoryList:\n      example:\n        count: 1\n        list:\n        - numberOfAPIs: 1\n          name: Finance\n          description: Finance related APIs\n          id: 01234567-0123-0123-0123-012345678901\n        - numberOfAPIs: 1\n          name: Finance\n          description: Finance related APIs\n          id: 01234567-0123-0123-0123-012345678901\n      properties:\n        count:\n          description: |\n            Number of API categories returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/APICategory'\n          type: array\n      title: API Category List\n      type: object\n    FileInfo:\n      properties:\n        relativePath:\n          description: relative location of the file (excluding the base context and\n            host of the Admin API)\n          example: api-categories/01234567-0123-0123-0123-012345678901/thumbnail\n          type: string\n        mediaType:\n          description: media-type of the file\n          example: image/jpeg\n          type: string\n      title: File Information including meta data\n      type: object\n    Settings:\n      example:\n        analyticsEnabled: false\n        keyManagerConfiguration:\n        - defaultConsumerKeyClaim: azp\n          displayName: default\n          configurations:\n          - default: admin\n            values:\n            - '{}'\n            - '{}'\n            name: consumer_key\n            multiple: true\n            tooltip: Entet username to connect to key manager\n            label: Consumer Key\n            type: select\n            required: true\n            mask: true\n          - default: admin\n            values:\n            - '{}'\n            - '{}'\n            name: consumer_key\n            multiple: true\n            tooltip: Entet username to connect to key manager\n            label: Consumer Key\n            type: select\n            required: true\n            mask: true\n          defaultScopesClaim: scope\n          type: default\n        - defaultConsumerKeyClaim: azp\n          displayName: default\n          configurations:\n          - default: admin\n            values:\n            - '{}'\n            - '{}'\n            name: consumer_key\n            multiple: true\n            tooltip: Entet username to connect to key manager\n            label: Consumer Key\n            type: select\n            required: true\n            mask: true\n          - default: admin\n            values:\n            - '{}'\n            - '{}'\n            name: consumer_key\n            multiple: true\n            tooltip: Entet username to connect to key manager\n            label: Consumer Key\n            type: select\n            required: true\n            mask: true\n          defaultScopesClaim: scope\n          type: default\n        scopes:\n        - scopes\n        - scopes\n      properties:\n        scopes:\n          items:\n            type: string\n          type: array\n        keyManagerConfiguration:\n          items:\n            $ref: '#/components/schemas/Settings_keyManagerConfiguration'\n          type: array\n        analyticsEnabled:\n          description: To determine whether analytics is enabled or not\n          example: false\n          type: boolean\n      title: Settings\n      type: object\n    ScopeList:\n      example:\n        count: 60\n        list:\n        - roles:\n          - admin\n          - Internal/publisher\n          name: apim:api_publish\n          description: Publish API\n          tag: publisher\n        - roles:\n          - admin\n          - Internal/publisher\n          name: apim:api_publish\n          description: Publish API\n          tag: publisher\n      properties:\n        count:\n          description: |\n            Number of scopes available for tenant.\n          example: 60\n          readOnly: true\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/Scope'\n          type: array\n      title: Scope Role Mapping List\n      type: object\n    Scope:\n      example:\n        roles:\n        - admin\n        - Internal/publisher\n        name: apim:api_publish\n        description: Publish API\n        tag: publisher\n      properties:\n        tag:\n          description: |\n            Portal name.\n          example: publisher\n          type: string\n        name:\n          description: |\n            Scope name.\n          example: apim:api_publish\n          type: string\n        description:\n          description: |\n            About scope.\n          example: Publish API\n          type: string\n        roles:\n          description: |\n            Roles for the particular scope.\n          example:\n          - admin\n          - Internal/publisher\n          items:\n            type: string\n          type: array\n      title: Scope Role\n      type: object\n    KeyManagerWellKnownResponse:\n      example:\n        valid: true\n        value:\n          clientRegistrationEndpoint: https://localhost:9444/keymanager-operations/dcr/register\n          displayName: WSO2 Identity Server\n          enableMapOAuthConsumerApps: false\n          introspectionEndpoint: https://localhost:9444/oauth2/introspect\n          scopeManagementEndpoint: https://wso2is.com:9444/api/identity/oauth2/v1.0/scopes\n          description: This is a key manager for Developers\n          type: WSO2-IS\n          issuer: https://localhost:9444/services\n          enabled: true\n          tokenEndpoint: https://localhost:9444/oauth2/token\n          consumerKeyClaim: azp\n          scopesClaim: scp\n          alias: https://localhost:9443/oauth2/token\n          id: 01234567-0123-0123-0123-012345678901\n          userInfoEndpoint: https://localhost:9444/oauth2/userinfo?schema=openid\n          displayTokenEndpoint: https://localhost:9444/oauth2/token\n          displayRevokeEndpoint: https://localhost:9444/oauth2/revoke\n          enableSelfValidationJWT: true\n          enableTokenEncryption: false\n          availableGrantTypes:\n          - client_credentials\n          - client_credentials\n          claimMapping:\n          - remoteClaim: http://idp.org/username\n            localClaim: http://wso2.org/username\n          - remoteClaim: http://idp.org/username\n            localClaim: http://wso2.org/username\n          revokeEndpoint: https://localhost:9444/oauth2/revoke\n          certificates:\n            type: JWKS\n            value: value\n          name: WSO2 Identity Server\n          wellKnownEndpoint: wellKnownEndpoint\n          authorizeEndpoint: https://localhost:9444/oauth2/authorize\n          enableTokenHashing: false\n          enableOAuthAppCreation: false\n          additionalProperties:\n            self_validate_jwt: true\n            Username: admin\n            Password: admin\n          tokenValidation:\n          - enable: false\n            id: 0\n            type: REFERENCE\n            value: '{}'\n          - enable: false\n            id: 0\n            type: REFERENCE\n            value: '{}'\n          tokenType: EXCHANGED\n          enableTokenGeneration: true\n      properties:\n        valid:\n          default: false\n          example: true\n          type: boolean\n        value:\n          $ref: '#/components/schemas/KeyManager'\n      title: Key Manager Well-Known Response.\n      type: object\n    KeyManager:\n      example:\n        clientRegistrationEndpoint: https://localhost:9444/keymanager-operations/dcr/register\n        displayName: WSO2 Identity Server\n        enableMapOAuthConsumerApps: false\n        introspectionEndpoint: https://localhost:9444/oauth2/introspect\n        scopeManagementEndpoint: https://wso2is.com:9444/api/identity/oauth2/v1.0/scopes\n        description: This is a key manager for Developers\n        type: WSO2-IS\n        issuer: https://localhost:9444/services\n        enabled: true\n        tokenEndpoint: https://localhost:9444/oauth2/token\n        consumerKeyClaim: azp\n        scopesClaim: scp\n        alias: https://localhost:9443/oauth2/token\n        id: 01234567-0123-0123-0123-012345678901\n        userInfoEndpoint: https://localhost:9444/oauth2/userinfo?schema=openid\n        displayTokenEndpoint: https://localhost:9444/oauth2/token\n        displayRevokeEndpoint: https://localhost:9444/oauth2/revoke\n        enableSelfValidationJWT: true\n        enableTokenEncryption: false\n        availableGrantTypes:\n        - client_credentials\n        - client_credentials\n        claimMapping:\n        - remoteClaim: http://idp.org/username\n          localClaim: http://wso2.org/username\n        - remoteClaim: http://idp.org/username\n          localClaim: http://wso2.org/username\n        revokeEndpoint: https://localhost:9444/oauth2/revoke\n        certificates:\n          type: JWKS\n          value: value\n        name: WSO2 Identity Server\n        wellKnownEndpoint: wellKnownEndpoint\n        authorizeEndpoint: https://localhost:9444/oauth2/authorize\n        enableTokenHashing: false\n        enableOAuthAppCreation: false\n        additionalProperties:\n          self_validate_jwt: true\n          Username: admin\n          Password: admin\n        tokenValidation:\n        - enable: false\n          id: 0\n          type: REFERENCE\n          value: '{}'\n        - enable: false\n          id: 0\n          type: REFERENCE\n          value: '{}'\n        tokenType: EXCHANGED\n        enableTokenGeneration: true\n      properties:\n        id:\n          example: 01234567-0123-0123-0123-012345678901\n          readOnly: true\n          type: string\n        name:\n          example: WSO2 Identity Server\n          maxLength: 100\n          minLength: 1\n          type: string\n        displayName:\n          description: |\n            display name of Key Manager to  show in UI\n          example: WSO2 Identity Server\n          maxLength: 100\n          type: string\n        type:\n          example: WSO2-IS\n          maxLength: 45\n          minLength: 1\n          type: string\n        description:\n          example: This is a key manager for Developers\n          maxLength: 256\n          type: string\n        wellKnownEndpoint:\n          description: |\n            Well-Known Endpoint of Identity Provider.\n          type: string\n        introspectionEndpoint:\n          example: https://localhost:9444/oauth2/introspect\n          type: string\n        clientRegistrationEndpoint:\n          example: https://localhost:9444/keymanager-operations/dcr/register\n          type: string\n        tokenEndpoint:\n          example: https://localhost:9444/oauth2/token\n          type: string\n        displayTokenEndpoint:\n          example: https://localhost:9444/oauth2/token\n          type: string\n        revokeEndpoint:\n          example: https://localhost:9444/oauth2/revoke\n          type: string\n        displayRevokeEndpoint:\n          example: https://localhost:9444/oauth2/revoke\n          type: string\n        userInfoEndpoint:\n          example: https://localhost:9444/oauth2/userinfo?schema=openid\n          type: string\n        authorizeEndpoint:\n          example: https://localhost:9444/oauth2/authorize\n          type: string\n        certificates:\n          $ref: '#/components/schemas/KeyManager_certificates'\n        issuer:\n          example: https://localhost:9444/services\n          type: string\n        alias:\n          description: |\n            The alias of Identity Provider.\n            If the tokenType is EXCHANGED, the alias value should be inclusive in the audience values of the JWT token\n          example: https://localhost:9443/oauth2/token\n          type: string\n        scopeManagementEndpoint:\n          example: https://wso2is.com:9444/api/identity/oauth2/v1.0/scopes\n          type: string\n        availableGrantTypes:\n          items:\n            example: client_credentials\n            type: string\n          type: array\n        enableTokenGeneration:\n          example: true\n          type: boolean\n        enableTokenEncryption:\n          default: false\n          example: false\n          type: boolean\n        enableTokenHashing:\n          default: false\n          example: false\n          type: boolean\n        enableMapOAuthConsumerApps:\n          default: false\n          example: false\n          type: boolean\n        enableOAuthAppCreation:\n          default: false\n          example: false\n          type: boolean\n        enableSelfValidationJWT:\n          default: true\n          example: true\n          type: boolean\n        claimMapping:\n          items:\n            $ref: '#/components/schemas/ClaimMappingEntry'\n          type: array\n        consumerKeyClaim:\n          example: azp\n          type: string\n        scopesClaim:\n          example: scp\n          type: string\n        tokenValidation:\n          items:\n            $ref: '#/components/schemas/TokenValidation'\n          type: array\n        enabled:\n          example: true\n          type: boolean\n        additionalProperties:\n          example:\n            self_validate_jwt: true\n            Username: admin\n            Password: admin\n          properties: {}\n          type: object\n        tokenType:\n          default: DIRECT\n          description: The type of the tokens to be used (exchanged or without exchanged).\n            Accepted values are EXCHANGED and DIRECT.\n          enum:\n          - EXCHANGED\n          - DIRECT\n          - BOTH\n          example: EXCHANGED\n          type: string\n      required:\n      - name\n      - type\n      title: Key Manager\n      type: object\n    KeyManagerInfo:\n      example:\n        name: WSO2 IS\n        description: This is a key manager for Developers\n        id: 01234567-0123-0123-0123-012345678901\n        type: IS\n        tokenType: EXCHANGED\n        enabled: true\n      properties:\n        id:\n          example: 01234567-0123-0123-0123-012345678901\n          type: string\n        name:\n          example: WSO2 IS\n          type: string\n        type:\n          example: IS\n          type: string\n        description:\n          example: This is a key manager for Developers\n          type: string\n        enabled:\n          example: true\n          type: boolean\n        tokenType:\n          default: DIRECT\n          description: The type of the tokens to be used (exchanged or without exchanged).\n            Accepted values are EXCHANGED and DIRECT.\n          enum:\n          - EXCHANGED\n          - DIRECT\n          - BOTH\n          example: EXCHANGED\n          type: string\n      required:\n      - name\n      - type\n      title: Key Manager Info\n      type: object\n    KeyManagerConfiguration:\n      example:\n        default: admin\n        values:\n        - '{}'\n        - '{}'\n        name: consumer_key\n        multiple: true\n        tooltip: Entet username to connect to key manager\n        label: Consumer Key\n        type: select\n        required: true\n        mask: true\n      properties:\n        name:\n          example: consumer_key\n          type: string\n        label:\n          example: Consumer Key\n          type: string\n        type:\n          example: select\n          type: string\n        required:\n          example: true\n          type: boolean\n        mask:\n          example: true\n          type: boolean\n        multiple:\n          example: true\n          type: boolean\n        tooltip:\n          example: Entet username to connect to key manager\n          type: string\n        default:\n          example: admin\n          properties: {}\n          type: object\n        values:\n          items:\n            properties: {}\n            type: object\n          type: array\n      title: Key Manager Configuration\n      type: object\n    KeyManagerList:\n      example:\n        count: 1\n        list:\n        - name: WSO2 IS\n          description: This is a key manager for Developers\n          id: 01234567-0123-0123-0123-012345678901\n          type: IS\n          tokenType: EXCHANGED\n          enabled: true\n        - name: WSO2 IS\n          description: This is a key manager for Developers\n          id: 01234567-0123-0123-0123-012345678901\n          type: IS\n          tokenType: EXCHANGED\n          enabled: true\n      properties:\n        count:\n          description: |\n            Number of Key managers returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/KeyManagerInfo'\n          type: array\n      title: Key Manager List\n      type: object\n    ClaimMappingEntry:\n      example:\n        remoteClaim: http://idp.org/username\n        localClaim: http://wso2.org/username\n      properties:\n        remoteClaim:\n          example: http://idp.org/username\n          type: string\n        localClaim:\n          example: http://wso2.org/username\n          type: string\n      title: Claim Mapping Configuration\n      type: object\n    TokenValidation:\n      example:\n        enable: false\n        id: 0\n        type: REFERENCE\n        value: '{}'\n      properties:\n        id:\n          type: integer\n        enable:\n          default: true\n          example: false\n          type: boolean\n        type:\n          enum:\n          - REFERENCE\n          - JWT\n          - CUSTOM\n          type: string\n        value:\n          properties: {}\n          type: object\n      title: Token handling Configuration\n      type: object\n    ScopeSettings:\n      example:\n        name: apim:subscribe\n      properties:\n        name:\n          example: apim:subscribe\n          type: string\n      title: Settings\n      type: object\n    AlertTypesList:\n      example:\n        alerts:\n        - name: AbnormalResponseTime\n          id: \"1\"\n        - name: AbnormalResponseTime\n          id: \"1\"\n        count: 3\n      properties:\n        count:\n          description: The number of alerts\n          example: 3\n          type: integer\n        alerts:\n          items:\n            $ref: '#/components/schemas/AlertType'\n          type: array\n      title: Alert Types List\n      type: object\n    AlertType:\n      example:\n        name: AbnormalResponseTime\n        id: \"1\"\n      properties:\n        id:\n          description: The alert Id\n          example: \"1\"\n          type: string\n        name:\n          description: The name of the alert.\n          example: AbnormalResponseTime\n          type: string\n      title: Alert Type\n      type: object\n    AlertsSubscription:\n      example:\n        alerts:\n        - name: AbnormalResponseTime\n          id: \"1\"\n        - name: AbnormalResponseTime\n          id: \"1\"\n        emailList:\n        - admin@wso2.com\n        - admin@wso2.com\n      properties:\n        alerts:\n          items:\n            $ref: '#/components/schemas/AlertType'\n          type: array\n        emailList:\n          items:\n            example: admin@wso2.com\n            format: email\n            type: string\n          type: array\n      title: Alerts Subscription\n      type: object\n    BotDetectionAlertSubscriptionList:\n      example:\n        count: 3\n        list:\n        - uuid: urn:uuid:1ed6d2de-29df-4fed-a96a-46d2329dce65\n          email: abc@gmail.com\n        - uuid: urn:uuid:1ed6d2de-29df-4fed-a96a-46d2329dce65\n          email: abc@gmail.com\n      properties:\n        count:\n          description: |\n            Number of Bot Detection Alert Subscriptions returned.\n          example: 3\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/BotDetectionAlertSubscription'\n          type: array\n      title: Bot Detection Alert Subscription List\n      type: object\n    BotDetectionAlertSubscription:\n      example:\n        uuid: urn:uuid:1ed6d2de-29df-4fed-a96a-46d2329dce65\n        email: abc@gmail.com\n      properties:\n        uuid:\n          description: UUID of the subscription\n          example: urn:uuid:1ed6d2de-29df-4fed-a96a-46d2329dce65\n          type: string\n        email:\n          description: email\n          example: abc@gmail.com\n          type: string\n      required:\n      - email\n      title: Bot Detection Alert Subscription\n      type: object\n    WorkflowList:\n      example:\n        next: /workflows?limit=1\u0026offset=2\u0026user=\n        previous: /workflows?limit=1\u0026offset=0\u0026user=\n        count: 1\n        list:\n        - updatedTime: 2020-02-10 10:10:19.704\n          workflowStatus: APPROVED\n          createdTime: 2020-02-10 10:10:19.704\n          description: Approve application [APP1] creation request from application\n            creator - admin with throttling tier - 10MinPer\n          workflowType: APPLICATION_CREATION\n          referenceId: 5871244b-d6f3-466e-8995-8accd1e64303\n          properties: '{}'\n        - updatedTime: 2020-02-10 10:10:19.704\n          workflowStatus: APPROVED\n          createdTime: 2020-02-10 10:10:19.704\n          description: Approve application [APP1] creation request from application\n            creator - admin with throttling tier - 10MinPer\n          workflowType: APPLICATION_CREATION\n          referenceId: 5871244b-d6f3-466e-8995-8accd1e64303\n          properties: '{}'\n      properties:\n        count:\n          description: |\n            Number of workflow processes returned.\n          example: 1\n          type: integer\n        next:\n          description: |\n            Link to the next subset of resources qualified.\n            Empty if no more resources are to be returned.\n          example: /workflows?limit=1\u0026offset=2\u0026user=\n          type: string\n        previous:\n          description: |\n            Link to the previous subset of resources qualified.\n            Empty if current subset is the first subset returned.\n          example: /workflows?limit=1\u0026offset=0\u0026user=\n          type: string\n        list:\n          items:\n            $ref: '#/components/schemas/WorkflowInfo'\n          type: array\n      title: WorkflowList\n      type: object\n    WorkflowInfo:\n      example:\n        updatedTime: 2020-02-10 10:10:19.704\n        workflowStatus: APPROVED\n        createdTime: 2020-02-10 10:10:19.704\n        description: Approve application [APP1] creation request from application\n          creator - admin with throttling tier - 10MinPer\n        workflowType: APPLICATION_CREATION\n        referenceId: 5871244b-d6f3-466e-8995-8accd1e64303\n        properties: '{}'\n      properties:\n        workflowType:\n          description: |\n            Type of the Workflow Request. It shows which type of request is it.\n          enum:\n          - APPLICATION_CREATION\n          - SUBSCRIPTION_CREATION\n          - USER_SIGNUP\n          - APPLICATION_REGISTRATION_PRODUCTION\n          - APPLICATION_REGISTRATION_SANDBOX\n          - APPLICATION_DELETION\n          - API_STATE\n          - SUBSCRIPTION_DELETION\n          - SUBSCRIPTION_UPDATE\n          - API_PRODUCT_STATE\n          example: APPLICATION_CREATION\n          type: string\n        workflowStatus:\n          description: |\n            Show the Status of the the workflow request whether it is approved or created.\n          enum:\n          - APPROVED\n          - CREATED\n          example: APPROVED\n          type: string\n        createdTime:\n          description: |\n            Time of the the workflow request created.\n          example: 2020-02-10 10:10:19.704\n          type: string\n        updatedTime:\n          description: |\n            Time of the the workflow request updated.\n          example: 2020-02-10 10:10:19.704\n          type: string\n        referenceId:\n          description: |\n            Workflow external reference is used to identify the workflow requests uniquely.\n          example: 5871244b-d6f3-466e-8995-8accd1e64303\n          type: string\n        properties:\n          properties: {}\n          type: object\n        description:\n          description: |\n            description is a message with basic details about the workflow request.\n          example: Approve application [APP1] creation request from application creator\n            - admin with throttling tier - 10MinPer\n          type: string\n      title: Workflow info object with basic workflow details\n      type: object\n    WorkflowResponse:\n      properties:\n        workflowStatus:\n          description: |\n            This attribute declares whether this workflow task is approved or rejected.\n          enum:\n          - CREATED\n          - APPROVED\n          - REJECTED\n          - REGISTERED\n          example: APPROVED\n          type: string\n        jsonPayload:\n          description: |\n            Attributes that returned after the workflow execution\n          type: string\n      required:\n      - workflowStatus\n      title: workflow Response\n      type: object\n    BotDetectionDataList:\n      example:\n        count: 1\n        list:\n        - apiMethod: GET\n          messageBody: \u003csoapenv:Body xmlns:soapenv=\\\"http://www.w3.org/2003/05/soap-envelope\\\"/\u003e\n          clientIp: 127.0.0.1\n          messageID: urn:uuid:1ed6d2de-29df-4fed-a96a-46d2329dce65\n          headerSet: '[Accept=*/*, Host=localhost:8243, User-Agent=curl/7.58.0]'\n          recordedTime: 1591734138413\n        - apiMethod: GET\n          messageBody: \u003csoapenv:Body xmlns:soapenv=\\\"http://www.w3.org/2003/05/soap-envelope\\\"/\u003e\n          clientIp: 127.0.0.1\n          messageID: urn:uuid:1ed6d2de-29df-4fed-a96a-46d2329dce65\n          headerSet: '[Accept=*/*, Host=localhost:8243, User-Agent=curl/7.58.0]'\n          recordedTime: 1591734138413\n      properties:\n        count:\n          description: |\n            Number of Bot Detection Data returned.\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/BotDetectionData'\n          type: array\n      title: Bot Detection Data List\n      type: object\n    BotDetectionData:\n      example:\n        apiMethod: GET\n        messageBody: \u003csoapenv:Body xmlns:soapenv=\\\"http://www.w3.org/2003/05/soap-envelope\\\"/\u003e\n        clientIp: 127.0.0.1\n        messageID: urn:uuid:1ed6d2de-29df-4fed-a96a-46d2329dce65\n        headerSet: '[Accept=*/*, Host=localhost:8243, User-Agent=curl/7.58.0]'\n        recordedTime: 1591734138413\n      properties:\n        recordedTime:\n          description: The time of detection\n          example: 1591734138413\n          format: int64\n          type: integer\n        messageID:\n          description: The message ID\n          example: urn:uuid:1ed6d2de-29df-4fed-a96a-46d2329dce65\n          type: string\n        apiMethod:\n          description: The api method\n          example: GET\n          type: string\n        headerSet:\n          description: The header set\n          example: '[Accept=*/*, Host=localhost:8243, User-Agent=curl/7.58.0]'\n          type: string\n        messageBody:\n          description: The content of the message body\n          example: \u003csoapenv:Body xmlns:soapenv=\\\"http://www.w3.org/2003/05/soap-envelope\\\"/\u003e\n          type: string\n        clientIp:\n          description: The IP of the client\n          example: 127.0.0.1\n          type: string\n      title: Bot Detection Data\n      type: object\n    RoleAliasList:\n      example:\n        count: 1\n        list:\n        - role: Internal/subscriber\n          aliases:\n          - Subscriber\n          - Internal/subscriber\n        - role: Internal/subscriber\n          aliases:\n          - Subscriber\n          - Internal/subscriber\n      properties:\n        count:\n          description: The number of role aliases\n          example: 1\n          type: integer\n        list:\n          items:\n            $ref: '#/components/schemas/RoleAlias'\n          type: array\n      title: Role alias list\n      type: object\n    RoleAlias:\n      example:\n        role: Internal/subscriber\n        aliases:\n        - Subscriber\n        - Internal/subscriber\n      properties:\n        role:\n          description: The original role\n          example: Internal/subscriber\n          type: string\n        aliases:\n          description: The role mapping for role alias\n          example:\n          - Subscriber\n          - Internal/subscriber\n          items:\n            type: string\n          type: array\n      title: Role alias\n      type: object\n    AdvancedThrottlePolicyInfo_allOf:\n      properties:\n        defaultLimit:\n          $ref: '#/components/schemas/ThrottleLimit'\n    AdvancedThrottlePolicy_allOf:\n      properties:\n        defaultLimit:\n          $ref: '#/components/schemas/ThrottleLimit'\n        conditionalGroups:\n          description: |\n            Group of conditions which allow adding different parameter conditions to the throttling limit.\n          items:\n            $ref: '#/components/schemas/ConditionalGroup'\n          type: array\n      required:\n      - defaultLimit\n    ApplicationThrottlePolicy_allOf:\n      properties:\n        defaultLimit:\n          $ref: '#/components/schemas/ThrottleLimit'\n      required:\n      - defaultLimit\n    SubscriptionThrottlePolicy_allOf:\n      properties:\n        defaultLimit:\n          $ref: '#/components/schemas/ThrottleLimit'\n        monetization:\n          $ref: '#/components/schemas/MonetizationInfo'\n        rateLimitCount:\n          description: Burst control request count\n          example: 10\n          type: integer\n        rateLimitTimeUnit:\n          description: Burst control time unit\n          example: min\n          type: string\n        customAttributes:\n          description: |\n            Custom attributes added to the Subscription Throttling Policy\n          example: []\n          items:\n            $ref: '#/components/schemas/CustomAttribute'\n          type: array\n        stopOnQuotaReach:\n          default: false\n          description: |\n            This indicates the action to be taken when a user goes beyond the allocated quota. If checked, the user's requests will be dropped. If unchecked, the requests will be allowed to pass through.\n          type: boolean\n        billingPlan:\n          description: |\n            define whether this is Paid or a Free plan. Allowed values are FREE or COMMERCIAL.\n          example: FREE\n          type: string\n        permissions:\n          $ref: '#/components/schemas/SubscriptionThrottlePolicyPermission'\n        subscriberCount:\n          description: |\n            Number of subscriptions allowed\n          example: 10\n          type: integer\n      required:\n      - defaultLimit\n    CustomRule_allOf:\n      properties:\n        siddhiQuery:\n          description: Siddhi query which represents the custom throttling policy\n          example: |\n            FROM RequestStream\\nSELECT userId, ( userId == 'admin@carbon.super' ) AS isEligible , str:concat('admin@carbon.super','') as throttleKey\\nINSERT INTO EligibilityStream; \\n\\nFROM EligibilityStream[isEligible==true]#throttler:timeBatch(1 min) \\nSELECT throttleKey, (count(userId) \u003e= 10) as isThrottled, expiryTimeStamp group by throttleKey \\nINSERT ALL EVENTS into ResultStream;\n          type: string\n        keyTemplate:\n          description: The specific combination of attributes that are checked in\n            the policy.\n          example: $userId\n          type: string\n      required:\n      - keyTemplate\n      - siddhiQuery\n    BandwidthLimit_allOf:\n      properties:\n        dataAmount:\n          description: Amount of data allowed to be transfered\n          example: 1000\n          format: int64\n          type: integer\n        dataUnit:\n          description: Unit of data allowed to be transfered. Allowed values are \"KB\",\n            \"MB\" and \"GB\"\n          example: KB\n          type: string\n      required:\n      - dataAmount\n      - dataUnit\n    RequestCountLimit_allOf:\n      properties:\n        requestCount:\n          description: Maximum number of requests allowed\n          example: 30\n          format: int64\n          type: integer\n      required:\n      - requestCount\n    EventCountLimit_allOf:\n      properties:\n        eventCount:\n          description: Maximum number of events allowed\n          example: 3000\n          format: int64\n          type: integer\n      required:\n      - eventCount\n    CustomUrlInfo_devPortal:\n      example:\n        url: http://example.com\n      properties:\n        url:\n          example: http://example.com\n          type: string\n    Settings_keyManagerConfiguration:\n      example:\n        defaultConsumerKeyClaim: azp\n        displayName: default\n        configurations:\n        - default: admin\n          values:\n          - '{}'\n          - '{}'\n          name: consumer_key\n          multiple: true\n          tooltip: Entet username to connect to key manager\n          label: Consumer Key\n          type: select\n          required: true\n          mask: true\n        - default: admin\n          values:\n          - '{}'\n          - '{}'\n          name: consumer_key\n          multiple: true\n          tooltip: Entet username to connect to key manager\n          label: Consumer Key\n          type: select\n          required: true\n          mask: true\n        defaultScopesClaim: scope\n        type: default\n      properties:\n        type:\n          example: default\n          type: string\n        displayName:\n          example: default\n          type: string\n        defaultConsumerKeyClaim:\n          example: azp\n          type: string\n        defaultScopesClaim:\n          example: scope\n          type: string\n        configurations:\n          items:\n            $ref: '#/components/schemas/KeyManagerConfiguration'\n          type: array\n    KeyManager_certificates:\n      example:\n        type: JWKS\n        value: value\n      properties:\n        type:\n          enum:\n          - JWKS\n          - PEM\n          type: string\n        value:\n          type: string\n  securitySchemes:\n    OAuth2Security:\n      flows:\n        password:\n          scopes:\n            openid: Authorize access to user details\n            apim:policies_import_export: Export and import policies related operations\n            apim:admin: Manage all admin operations\n            apim:tier_view: View throttling policies\n            apim:tier_manage: Update and delete throttling policies\n            apim:bl_view: View deny policies\n            apim:bl_manage: Update and delete deny policies\n            apim:mediation_policy_view: View mediation policies\n            apim:mediation_policy_create: Create and update mediation policies\n            apim:app_owner_change: Retrieve and manage applications\n            apim:app_import_export: Import and export applications related operations\n            apim:api_import_export: Import and export APIs related operations\n            apim:api_product_import_export: Import and export API Products related\n              operations\n            apim:label_manage: Manage microgateway labels\n            apim:label_read: Retrieve microgateway labels\n            apim:environment_manage: Manage gateway environments\n            apim:environment_read: Retrieve gateway environments\n            apim:monetization_usage_publish: Retrieve and publish Monetization related\n              usage records\n            apim:api_workflow_approve: Manage workflows\n            apim:bot_data: Retrieve bot detection data\n            apim:tenantInfo: Retrieve tenant related information\n            apim:tenant_theme_manage: Manage tenant themes\n            apim:admin_operations: Manage API categories and Key Managers related\n              operations\n            apim:admin_settings: Retrieve admin settings\n            apim:admin_alert_manage: Manage admin alerts\n            apim:api_workflow_view: Retrive workflow requests\n            apim:scope_manage: Manage system scopes\n          tokenUrl: https://localhost:9443/oauth2/token\n      type: oauth2\n\n",
			"canonicalURL": "/github.com/wso2/product-apim@32cff26f977a942bb83fa75d313ee04f1534b198/-/blob/modules/integration/tests-common/clients/admin/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wso2/product-apim/blob/32cff26f977a942bb83fa75d313ee04f1534b198/modules/integration/tests-common/clients/admin/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/monetization/publish-usage\": post: security: security \"OAuth2Security\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}