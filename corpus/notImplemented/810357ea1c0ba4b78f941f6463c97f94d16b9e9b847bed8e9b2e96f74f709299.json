{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "contribly.com-1.0.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/contribly.com-1.0.0-swagger.yaml",
			"byteSize": 60872,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    x-twitter: contribly\n  title: Contribly\n  version: 1.0.0\n  x-apisguru-categories:\n    - social\n  x-logo:\n    url: https://twitter.com/contribly/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://api.contribly.com/1/swagger.json\n      version: \"2.0\"\n  x-providerName: contribly.com\ntags:\n  - description: Create and list assignments\n    name: assignment\n  - description: Submit, moderate and retrieve user contributions\n    name: contribution\n  - description: Create and edit forms\n    name: form\n  - description: Submit media\n    name: media\n  - description: Notifications are templated email messages which can be sent to\n      contributors. A notification might be used to request further information\n      from a contributor or inform them when their contribution has been\n      published.\n    name: notifications\n  - description: Subscribe to be alerted when events occur. For example receive email\n      notification when a contribution is flagged.\n    name: subscriptions\n  - description: Create and list tags and tag sets\n    name: tag\n  - description: Manage users\n    name: user\n  - description: Authentication related\n    name: auth\npaths:\n  /artifact-formats:\n    get:\n      description: List the available artifact formats\n      responses:\n        \"200\":\n          description: A list of artifact formats\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ArtifactFormats\"\n      summary: Artifact formats\n      tags:\n        - info\n  /assignments:\n    get:\n      parameters:\n        - description: Restrict results to assignments owned by this user.\n          in: query\n          name: ownedBy\n          required: false\n          schema:\n            type: string\n        - description: Pagination page\n          in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n        - description: Pagination page size\n          in: query\n          name: pageSize\n          required: false\n          schema:\n            type: integer\n        - description: Restrict results to assignments whose name or description matches\n            this keyword.\n          in: query\n          name: q\n          required: false\n          schema:\n            type: string\n        - description: Select an assignment by urlWords.\n          in: query\n          name: urlWords\n          required: false\n          schema:\n            type: string\n        - description: Select open or closed assignments\n          in: query\n          name: open\n          required: false\n          schema:\n            type: boolean\n        - description: Select assignments with no closing date.\n          in: query\n          name: alwaysOpen\n          required: false\n          schema:\n            type: boolean\n        - description: Restrict results to assignments which are tagged with this tag.\n          in: query\n          name: tag\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to the assignment (or potentially assignments) with\n            this exact name\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of assignments\n          headers:\n            X-total-count:\n              description: Total number of matching contributions\n              schema:\n                type: number\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Assignment\"\n                type: array\n      summary: List assignments\n      tags:\n        - assignment\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AssignmentSubmission\"\n        description: Assignment object to be created\n        required: true\n      responses:\n        \"200\":\n          description: Assignment created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Assignment\"\n        \"400\":\n          description: The new assignment vailed to validate. Check the response body for\n            details.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"500\":\n          description: Failed to create the new assignment due to an unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Create a new assignment\n      tags:\n        - assignment\n  \"/assignments/{id}\":\n    delete:\n      parameters:\n        - description: Id of the assignment to return\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Assignment deleted\n        \"403\":\n          description: Not permitted to delete this assignment.\n        \"404\":\n          description: Not found\n      summary: Delete this assignment and all of it's contributions\n      tags:\n        - assignment\n    get:\n      parameters:\n        - description: Id of the assignment to return\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Assignment found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Assignment\"\n        \"404\":\n          description: Not found\n      summary: Get a single assigment by id\n      tags:\n        - assignment\n  /change-log:\n    get:\n      description: The Contribly change log.\n      responses:\n        \"200\":\n          description: A list of change log items\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ChangeLogItem\"\n                type: array\n      summary: Recent changes\n      tags:\n        - info\n  /contribution-refinement-types:\n    get:\n      responses:\n        \"200\":\n          description: An array of refinement types. These are the possible values of the\n            get contribution refinements parameter.\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n      summary: List valid contribution refinement types\n      tags:\n        - contribution\n  /contribution-refinements:\n    get:\n      description: Given a contribution list query determine the available filter options.\n        Can be used to generate the UI to refinement a filter.\n      parameters:\n        - description: Restrict results to contributions submitted to this assignment.\n          in: query\n          name: assignment\n          required: false\n          schema:\n            type: string\n        - description: Limit results to contributions which have a publicly visible\n            location within the given country (specified by two letter country\n            code).\n          in: query\n          name: country\n          required: false\n          schema:\n            type: string\n        - description: Limit results to contributions created before this date time.\n          in: query\n          name: createdBefore\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Limit results to contributions created after this date time.\n          in: query\n          name: createdAfter\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Restrict results to contributions which have specified a location\n            which falls within this geohash (or comma seperated list of multiple\n            geohashes)\n          in: query\n          name: geohash\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to contributions which have a publicly visible\n            location.\n          in: query\n          name: hasLocation\n          required: false\n          schema:\n            type: boolean\n        - description: Limit results to contributions with location near this latitude and\n            longitude (comma seperated lat/long pair). Also see radius\n          in: query\n          name: latLong\n          required: false\n          schema:\n            type: string\n        - description: When limiting result by location with the latLong parameter, specify\n            the radius in kilometers.\n          in: query\n          name: radius\n          required: false\n          schema:\n            type: number\n            format: double\n        - description: Restrict results to contributions which include a media file of the\n            given type (ie. image / video)\n          in: query\n          name: mediaType\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to contributions which are fall under the\n            jurisdiction by this user.\n          in: query\n          name: ownedBy\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to contributions whose headline text matches this\n            keyword.\n          in: query\n          name: q\n          required: false\n          schema:\n            type: string\n        - description: Locate a specific contribution by URL words\n          in: query\n          name: urlWords\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to contributions by this user identified by id.\n          in: query\n          name: user\n          required: false\n          schema:\n            type: string\n        - description: Comma seperated list of refinement names.\n          in: query\n          name: refinements\n          required: false\n          schema:\n            type: string\n        - description: Number of refinement options to return.\n          in: query\n          name: refinementSize\n          required: false\n          schema:\n            type: number\n      responses:\n        \"200\":\n          description: A map of refinement names to lists of options\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  items:\n                    type: string\n                  type: array\n                type: object\n      summary: List contribution refinement options\n      tags:\n        - contribution\n  /contributions:\n    get:\n      description: Retrieve contributions.\n      parameters:\n        - description: Restrict results to contributions submitted to this assignment.\n          in: query\n          name: assignment\n          required: false\n          schema:\n            type: string\n        - description: Limit results to contributions which have a publicly visible\n            location within the given country (specified by two letter country\n            code).\n          in: query\n          name: country\n          required: false\n          schema:\n            type: string\n        - description: Limit results to contributions created before this date time.\n          in: query\n          name: createdBefore\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Limit results to contributions created after this date time.\n          in: query\n          name: createdAfter\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Restrict results to contributions which have specified a location\n            which falls within this geohash (or comma seperated list of multiple\n            geohashes)\n          in: query\n          name: geohash\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to contributions which have a publicly visible\n            location.\n          in: query\n          name: hasLocation\n          required: false\n          schema:\n            type: boolean\n        - description: Limit results to contributions with location near this latitude and\n            longitude (comma seperated lat/long pair). Also see radius\n          in: query\n          name: latLong\n          required: false\n          schema:\n            type: string\n        - description: When limiting result by location with the latLong parameter, specify\n            the radius in kilometers.\n          in: query\n          name: radius\n          required: false\n          schema:\n            type: number\n            format: double\n        - description: Restrict results to contributions which include a media file of the\n            given type (ie. image / video)\n          in: query\n          name: mediaType\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to contributions which are fall under the\n            jurisdiction by this user.\n          in: query\n          name: ownedBy\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to contributions whose headline text matches this\n            keyword.\n          in: query\n          name: q\n          required: false\n          schema:\n            type: string\n        - description: Locate a specific contribution by URL words\n          in: query\n          name: urlWords\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to contributions by this user identified by id.\n          in: query\n          name: user\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to a list of specific contributions identified by a\n            comma seperated list of ids.\n          in: query\n          name: ids\n          required: false\n          schema:\n            type: string\n        - description: Select output format. 'json' or 'rss'. Defaults to JSON.\n          in: query\n          name: format\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of contributions\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Contribution\"\n                type: array\n      summary: List contributions\n      tags:\n        - contribution\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Contribution\"\n        description: Contribution object to be created\n        required: true\n      responses:\n        \"200\":\n          description: Contribution created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Contribution\"\n      security:\n        - oauth:\n            - full\n      summary: Create a new contribution\n      tags:\n        - contribution\n  \"/contributions/{id}\":\n    delete:\n      parameters:\n        - description: Id of the contribution to delete\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The deletion request has been accepted and will be processed in the\n            background.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Contribution\"\n        \"403\":\n          description: The currently authorised user is not allowed to delete this\n            contribution.\n        \"404\":\n          description: Not found\n      summary: Delete this contribution\n      tags:\n        - contribution\n    get:\n      parameters:\n        - description: Id of the contribution to return\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Contribution\"\n        \"404\":\n          description: Not found\n      summary: Get a single contribution by id\n      tags:\n        - contribution\n  \"/contributions/{id}/flag\":\n    post:\n      description: Allows end users to bring potential issues with publicly visible content\n        to the attention of moderators.\n      parameters:\n        - description: Id of the contribution to flag\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Flag\"\n        description: Flag to be created\n        required: true\n      responses:\n        \"200\":\n          description: Flag created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Flag\"\n      summary: Raise a flag against this contribution\n      tags:\n        - contribution\n  \"/contributions/{id}/like\":\n    post:\n      parameters:\n        - description: Id of the contribution\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The updated like count for this contribution.\n          content:\n            application/json:\n              schema:\n                type: number\n      summary: Allows a user to mark a contribution as liked\n      tags:\n        - contribution\n  \"/contributions/{id}/likes\":\n    get:\n      description: Returns a list of user ids of users who have liked this conribution\n      parameters:\n        - description: Id of the contribution\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of user ids.\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n      summary: List users who have liked this contributions\n      tags:\n        - contribution\n  \"/contributions/{id}/moderate\":\n    post:\n      description: Allows the contribution to approved of rejected.\n      parameters:\n        - description: Id of the contribution to moderate\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ModerationHistoryItemSubmission\"\n        description: A moderation action\n        required: true\n      responses:\n        \"200\":\n          description: The moderation action was successfully applied\n          content:\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: The submission falied to validate. Check the response body for\n            details.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"401\":\n          description: The request was not correctly authorised.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"403\":\n          description: You do not have permission to perform this moderation action.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"500\":\n          description: An unexpected error occurred.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Perform a moderation action on this contribution\n      tags:\n        - contribution\n  /credentials:\n    get:\n      responses:\n        \"200\":\n          description: A list of credentials associated with this user.\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Credential\"\n                type: array\n        \"401\":\n          description: Not authorised\n      summary: List the credentials associated with the authenticated user.\n      tags:\n        - auth\n  /event-types:\n    get:\n      description: List available notification event types\n      responses:\n        \"200\":\n          description: A list of event types\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/EventType\"\n                type: array\n      summary: Event types\n      tags:\n        - info\n  /export:\n    post:\n      description: Begin an export job. Returns a export job which can be polled to follow\n        the progress of an export.\n      parameters:\n        - description: Restrict results to contributions submitted to this assignment.\n          in: query\n          name: assignment\n          required: false\n          schema:\n            type: string\n        - description: Limit results to contributions which have a publicly visible\n            location within the given country (specified by two letter country\n            code).\n          in: query\n          name: country\n          required: false\n          schema:\n            type: string\n        - description: Limit results to contributions created before this date time.\n          in: query\n          name: createdBefore\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Limit results to contributions created after this date time.\n          in: query\n          name: createdAfter\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Restrict results to contributions which have specified a location\n            which falls within this geohash (or comma seperated list of multiple\n            geohashes)\n          in: query\n          name: geohash\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to contributions which have a publicly visible\n            location.\n          in: query\n          name: hasLocation\n          required: false\n          schema:\n            type: boolean\n        - description: Limit results to contributions with location near this latitude and\n            longitude (comma seperated lat/long pair). Also see radius\n          in: query\n          name: latLong\n          required: false\n          schema:\n            type: string\n        - description: When limiting result by location with the latLong parameter, specify\n            the radius in kilometers.\n          in: query\n          name: radius\n          required: false\n          schema:\n            type: number\n            format: double\n        - description: Restrict results to contributions which include a media file of the\n            given type (ie. image / video)\n          in: query\n          name: mediaType\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to contributions which are fall under the\n            jurisdiction by this user.\n          in: query\n          name: ownedBy\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to contributions whose headline text matches this\n            keyword.\n          in: query\n          name: q\n          required: false\n          schema:\n            type: string\n        - description: Locate a specific contribution by URL words\n          in: query\n          name: urlWords\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to contributions by this user identified by id.\n          in: query\n          name: user\n          required: false\n          schema:\n            type: string\n        - description: Should exported media files be tagged with metadata. Deprecated; use\n            format instead.\n          in: query\n          name: tagged\n          required: false\n          schema:\n            type: boolean\n        - description: Included a combined file with all contribution text.\n          in: query\n          name: combined\n          required: false\n          schema:\n            type: boolean\n        - description: Include individual text files for each contribution.\n          in: query\n          name: individual\n          required: false\n          schema:\n            type: boolean\n        - description: Media format to export; fullsize, tagged or original.\n          in: query\n          name: format\n          required: false\n          schema:\n            type: string\n        - description: Include raw JSON for each contribution.\n          in: query\n          name: json\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"202\":\n          description: An export job describing the state of an export job.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Export\"\n      summary: Export contributions.\n      tags:\n        - contribution\n  /export-summary:\n    post:\n      description: Provide a preflight summary of an export request.\n      parameters:\n        - description: Restrict results to contributions submitted to this assignment.\n          in: query\n          name: assignment\n          required: false\n          schema:\n            type: string\n        - description: Limit results to contributions which have a publicly visible\n            location within the given country (specified by two letter country\n            code).\n          in: query\n          name: country\n          required: false\n          schema:\n            type: string\n        - description: Limit results to contributions created before this date time.\n          in: query\n          name: createdBefore\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Limit results to contributions created after this date time.\n          in: query\n          name: createdAfter\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Restrict results to contributions which have specified a location\n            which falls within this geohash (or comma seperated list of multiple\n            geohashes)\n          in: query\n          name: geohash\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to contributions which have a publicly visible\n            location.\n          in: query\n          name: hasLocation\n          required: false\n          schema:\n            type: boolean\n        - description: Limit results to contributions with location near this latitude and\n            longitude (comma seperated lat/long pair). Also see radius\n          in: query\n          name: latLong\n          required: false\n          schema:\n            type: string\n        - description: When limiting result by location with the latLong parameter, specify\n            the radius in kilometers.\n          in: query\n          name: radius\n          required: false\n          schema:\n            type: number\n            format: double\n        - description: Restrict results to contributions which include a media file of the\n            given type (ie. image / video)\n          in: query\n          name: mediaType\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to contributions which are fall under the\n            jurisdiction by this user.\n          in: query\n          name: ownedBy\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to contributions whose headline text matches this\n            keyword.\n          in: query\n          name: q\n          required: false\n          schema:\n            type: string\n        - description: Locate a specific contribution by URL words\n          in: query\n          name: urlWords\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to contributions by this user identified by id.\n          in: query\n          name: user\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A summary of the number of contributions, media files and\n            approximate total size of media files.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExportSummary\"\n      summary: Export contributions preflight summary.\n      tags:\n        - contribution\n  \"/exports/{id}\":\n    get:\n      parameters:\n        - description: Id of the export job to return\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Export\"\n        \"404\":\n          description: Not found\n      summary: Get a single export job; poll to follow export progress.\n      tags:\n        - contribution\n  /form-responses:\n    get:\n      parameters:\n        - description: Restrict results to responses submitted by this user.\n          in: query\n          name: user\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to responses submitted to this form.\n          in: query\n          name: form\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to responses relating to this contribution.\n          in: query\n          name: contribution\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of form responses\n          headers:\n            X-total-count:\n              description: Total number of matching form responses\n              schema:\n                type: number\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/FormResponse\"\n                type: array\n      summary: List form responses\n      tags:\n        - form\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FormResponseSubmission\"\n        description: Form response\n        required: true\n      responses:\n        \"200\":\n          description: Form response saved\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FormResponse\"\n      summary: Submit a response to a form\n      tags:\n        - form\n  \"/form-responses/{id}\":\n    get:\n      parameters:\n        - description: Id of the assignment to return\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Form response found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FormResponse\"\n        \"404\":\n          description: Not found\n      summary: Get a single form response by id\n      tags:\n        - form\n  /forms:\n    get:\n      parameters:\n        - description: Restrict results to forms owned by this user.\n          in: query\n          name: ownedBy\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of forms\n          headers:\n            X-total-count:\n              description: Total number of matching forms\n              schema:\n                type: number\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Form\"\n                type: array\n      summary: List forms\n      tags:\n        - form\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FormSubmission\"\n        description: Form object to be created\n        required: true\n      responses:\n        \"200\":\n          description: Form created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Form\"\n      summary: Create a form\n      tags:\n        - form\n  \"/forms/{id}\":\n    delete:\n      parameters:\n        - description: Id of the form to delete\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Form deleted\n        \"404\":\n          description: Not found\n      summary: Delete this form and all of it's responses.\n      tags:\n        - form\n    get:\n      parameters:\n        - description: Id of the form to return\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Form found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Form\"\n        \"404\":\n          description: Not found\n      summary: Get a single form by id\n      tags:\n        - form\n  /media:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              format: byte\n              type: string\n        description: Binary media file\n        required: true\n      responses:\n        \"200\":\n          description: Media created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Media\"\n      security:\n        - oauth:\n            - full\n      summary: Submit a new media file\n      tags:\n        - media\n  \"/notifications/contributions/{id}/preview\":\n    get:\n      parameters:\n        - description: Id of the contribution to preview a notification for\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Type of message to preview.\n          in: query\n          name: message\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Notification preview\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationPreview\"\n      tags:\n        - notifications\n  /scopes:\n    get:\n      description: List available token scopes\n      responses:\n        \"200\":\n          description: A list of scopes\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n      summary: Scopes\n      tags:\n        - auth\n  /subscription-types:\n    get:\n      description: List available subscription types\n      responses:\n        \"200\":\n          description: A list of subscription event types\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SubscriptionType\"\n                type: array\n      summary: Subscription types\n      tags:\n        - subscriptions\n  /subscriptions:\n    get:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SubscriptionSubmission\"\n        description: Subscription to be created\n        required: true\n      responses:\n        \"200\":\n          description: A list of notification subscriptions\n          headers:\n            X-total-count:\n              description: Total number of matching subscriptions\n              schema:\n                type: number\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Subscription\"\n                type: array\n      summary: List subscriptions for the authorised user.\n      tags:\n        - subscriptions\n  \"/subscriptions/{id}\":\n    delete:\n      parameters:\n        - description: Id of the subscription to delete\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The subscription has been successfully deleted.\n      summary: Delete a subscription.\n      tags:\n        - subscriptions\n  /tags:\n    get:\n      description: Retrieve tags.\n      parameters:\n        - description: Restrict results to those owned by this user.\n          in: query\n          name: ownedBy\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to tags belonging to this tag set.\n          in: query\n          name: tagSet\n          required: false\n          schema:\n            type: string\n        - description: Restrict results by urlWords. Should be used with ownedBy when\n            searching for one of your own tags.\n          in: query\n          name: urlWords\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of tags\n          headers:\n            X-total-count:\n              description: Total number of matching tags\n              schema:\n                type: number\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Tag\"\n                type: array\n      summary: List tags\n      tags:\n        - tag\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TagSubmission\"\n        description: Tag object to be created\n        required: true\n      responses:\n        \"200\":\n          description: Tag created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n        \"400\":\n          description: The new tag submission failed to validate. Check the response body\n            for details.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"500\":\n          description: Failed to create the new tag due to an unexcepted error.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Create a new tag\n      tags:\n        - tag\n  \"/tags/{id}\":\n    get:\n      parameters:\n        - description: Id of the tag to return\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The tag\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n        \"404\":\n          description: Not found\n      summary: Retrieve a single tag by id\n      tags:\n        - tag\n  /tagsets:\n    get:\n      description: Retrieve tag sets.\n      parameters:\n        - description: Restrict results to those owned by this user.\n          in: query\n          name: ownedBy\n          required: false\n          schema:\n            type: string\n        - description: Restrict results by urlWords. Should be used with ownedBy when\n            searching for one of your own tag sets.\n          in: query\n          name: urlWords\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of tag sets\n          headers:\n            X-total-count:\n              description: Total number of matching tag sets\n              schema:\n                type: number\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TagSet\"\n                type: array\n      summary: List tag sets\n      tags:\n        - tag\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TagSetSubmission\"\n        description: Tag set to be created\n        required: true\n      responses:\n        \"200\":\n          description: Tagset created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagSet\"\n      summary: Create a new tag set\n      tags:\n        - tag\n  \"/tagsets/{id}\":\n    get:\n      parameters:\n        - description: Id of the tag set to return\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The tag set\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagSet\"\n        \"404\":\n          description: Not found\n      summary: Retrieve a single tag set by id\n      tags:\n        - tag\n  /users:\n    get:\n      parameters:\n        - description: Restrict results to the users who have contributed to this\n            assignment.\n          in: query\n          name: assignment\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to the users who have submitted a contribution with\n            a public location located within this country.\n          in: query\n          name: country\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to the users who have submitted at least this many\n            contributions.\n          in: query\n          name: minimumContributions\n          required: false\n          schema:\n            type: number\n        - description: Restrict results to the users who a linked profile of this type.\n          in: query\n          name: linkedProfile\n          required: false\n          schema:\n            type: string\n        - description: Restrict results to the users who are owned by of this owner.\n          in: query\n          name: ownedBy\n          required: false\n          schema:\n            type: string\n        - description: Limit results to users who have submitted at least one contribution\n            before this date time.\n          in: query\n          name: submittedBefore\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Limit results to users who have submitted at least one contribution\n            after this date time.\n          in: query\n          name: submittedAfter\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: Restrict results to the user with this username.\n          in: query\n          name: username\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of users\n          headers:\n            X-total-count:\n              description: Total number of matching users\n              schema:\n                type: number\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/User\"\n                type: array\n      summary: List users\n      tags:\n        - user\n  \"/users/{id}\":\n    get:\n      parameters:\n        - description: Id of the user to return\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"404\":\n          description: Not found\n      summary: Retrieve a single user by id\n      tags:\n        - user\n  \"/users/{id}/linked/{type}\":\n    get:\n      parameters:\n        - description: Id of the user to return\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Type of the linked profile to fetch\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LinkedProfile\"\n        \"404\":\n          description: Not found\n      summary: Retrieve a users linked profile by type\n      tags:\n        - user\n  /verify:\n    post:\n      responses:\n        \"200\":\n          description: Token is valid\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Authority\"\n      security:\n        - oauth:\n            - full\n      summary: Verify token and return details of the owning user\n      tags:\n        - auth\nservers:\n  - url: https://api.contribly.com/1\ncomponents:\n  securitySchemes:\n    oauth:\n      type: oauth2\n      flows:\n        password:\n          tokenUrl: https://api.contriby.com/1/token\n          scopes:\n            full: Full access\n  schemas:\n    Artifact:\n      properties:\n        contentLength:\n          type: number\n        contentType:\n          type: string\n        height:\n          type: number\n        label:\n          type: string\n        url:\n          type: string\n        width:\n          type: number\n      type: object\n    ArtifactFormat:\n      properties:\n        contentType:\n          type: string\n        fileExtension:\n          type: string\n        forContentType:\n          type: string\n        label:\n          type: string\n        preserveAspectRatio:\n          type: boolean\n        public:\n          type: boolean\n        upscaleAllowed:\n          type: boolean\n      type: object\n    ArtifactFormats:\n      properties:\n        contribution:\n          items:\n            $ref: \"#/components/schemas/ArtifactFormat\"\n          type: array\n        cover:\n          items:\n            $ref: \"#/components/schemas/ArtifactFormat\"\n          type: array\n        profileImage:\n          items:\n            $ref: \"#/components/schemas/ArtifactFormat\"\n          type: array\n      type: object\n    Assignment:\n      properties:\n        allowsAnonymousContributions:\n          type: boolean\n        callToAction:\n          description: An optional call to action specific to this assignment. ie. Submit\n            your snow pictures.\n          type: string\n        cover:\n          $ref: \"#/components/schemas/MediaUsage\"\n        created:\n          format: date-time\n          type: string\n        description:\n          type: string\n        embargo:\n          format: date-time\n          type: string\n        ends:\n          format: date-time\n          type: string\n        featured:\n          type: boolean\n        id:\n          type: string\n        mediaRequired:\n          type: boolean\n        moderator:\n          description: Optional credential id of the moderator who owns this particular\n            assignment.\n          type: string\n        name:\n          type: string\n        open:\n          description: Helper value. Is this assignment currently open? Based on the value\n            of the ends field.\n          type: boolean\n        receiptMessage:\n          description: An optional assignment specific message to be displayed on\n            successful contribution submission. For example, this might be used\n            to inform contributors of assignment specific moderation time\n            frames.\n          type: string\n        starts:\n          format: date-time\n          type: string\n        tags:\n          items:\n            $ref: \"#/components/schemas/Tag\"\n          type: array\n        urlWords:\n          type: string\n        webUrl:\n          type: string\n      type: object\n    AssignmentSubmission:\n      properties:\n        allowsAnonymousContributions:\n          type: boolean\n        cover:\n          $ref: \"#/components/schemas/MediaUsage\"\n        description:\n          type: string\n        embargo:\n          format: date-time\n          type: string\n        ends:\n          format: date-time\n          type: string\n        featured:\n          type: boolean\n        id:\n          type: string\n        mediaRequired:\n          type: boolean\n        moderator:\n          description: Optional credential id of the login which will moderator this\n            assignment.\n          type: string\n        name:\n          type: string\n        receiptMessage:\n          description: An optional assignment specific message to be displayed on\n            successful contribution submission. For example, this might be used\n            to inform contributors of assignment specific moderation time\n            frames.\n          type: string\n        starts:\n          format: date-time\n          type: string\n        tags:\n          items:\n            $ref: \"#/components/schemas/Tag\"\n          type: array\n        urlWords:\n          type: string\n      required:\n        - name\n      type: object\n    Authority:\n      properties:\n        client:\n          $ref: \"#/components/schemas/Client\"\n        id:\n          type: string\n        user:\n          $ref: \"#/components/schemas/User\"\n      type: object\n    ChangeLogItem:\n      properties:\n        date:\n          format: date-time\n          type: string\n        description:\n          type: string\n        title:\n          type: string\n      required:\n        - title\n        - date\n      type: object\n    Client:\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n      type: object\n    Contribution:\n      properties:\n        assignment:\n          $ref: \"#/components/schemas/Assignment\"\n        attribution:\n          description: The public attribution for this contribution. This will be the\n            display name of the registered user or the contributor's first and\n            last name if they provided them while making a non authenticated\n            contribution. A blank attribution field indicates and anonymous\n            contribution.\n          type: string\n        body:\n          type: string\n        created:\n          format: date-time\n          type: string\n        headline:\n          type: string\n        id:\n          type: string\n        mediaUsages:\n          items:\n            $ref: \"#/components/schemas/MediaUsage\"\n          type: array\n        moderationHistory:\n          items:\n            $ref: \"#/components/schemas/ModerationHistoryItem\"\n          type: array\n        place:\n          $ref: \"#/components/schemas/Place\"\n        urlWords:\n          type: string\n        via:\n          $ref: \"#/components/schemas/Via\"\n      type: object\n    Credential:\n      properties:\n        scopes:\n          items:\n            type: string\n          type: array\n        type:\n          type: string\n        user:\n          type: string\n        value:\n          type: string\n      type: object\n    ErrorField:\n      properties:\n        message:\n          type: string\n        name:\n          type: string\n      required:\n        - name\n      type: object\n    ErrorResponse:\n      properties:\n        fields:\n          items:\n            $ref: \"#/components/schemas/ErrorField\"\n          type: array\n        message:\n          type: string\n      type: object\n    EventType:\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n      required:\n        - id\n        - name\n      type: object\n    Export:\n      properties:\n        downloadUrl:\n          type: string\n        finished:\n          format: date-time\n          type: string\n        id:\n          type: string\n        owner:\n          type: string\n        progress:\n          type: number\n        started:\n          format: date-time\n          type: string\n        step:\n          type: string\n      required:\n        - id\n        - owner\n        - started\n      type: object\n    ExportSummary:\n      properties:\n        contributions:\n          description: The number of contributions selected for export.\n          type: number\n        estimatedSize:\n          description: Human readable estimate of the export size. ie. '10MB'.\n          type: string\n        media:\n          description: The number of media files included in this export.\n          type: number\n        totalMediaSize:\n          description: The expected total size of the media files to be exported.\n          type: number\n      required:\n        - contributions\n        - media\n        - totalMediaSize\n      type: object\n    Flag:\n      properties:\n        date:\n          format: date-time\n          type: string\n        email:\n          type: string\n        id:\n          type: string\n        notes:\n          type: string\n        type:\n          type: string\n      type: object\n    Form:\n      properties:\n        callToAction:\n          type: string\n        cssUrl:\n          type: string\n        fields:\n          items:\n            $ref: \"#/components/schemas/FormField\"\n          type: array\n        heading:\n          type: string\n        id:\n          type: string\n        name:\n          type: string\n        noCss:\n          type: boolean\n        ownedBy:\n          type: string\n        tags:\n          items:\n            $ref: \"#/components/schemas/Tag\"\n          type: array\n      type: object\n    FormField:\n      properties:\n        description:\n          type: string\n        label:\n          type: string\n        name:\n          type: string\n        options:\n          items:\n            type: string\n          type: array\n        public:\n          type: boolean\n        required:\n          type: boolean\n        type:\n          type: string\n      type: object\n    FormResponse:\n      properties:\n        contribution:\n          type: string\n        date:\n          format: date-time\n          type: string\n        form:\n          type: string\n        id:\n          type: string\n        responses:\n          additionalProperties:\n            type: string\n          type: object\n        user:\n          type: string\n      type: object\n    FormResponseSubmission:\n      properties:\n        contribution:\n          type: string\n        form:\n          type: string\n        responses:\n          additionalProperties:\n            type: string\n          type: object\n      type: object\n    FormSubmission:\n      properties:\n        callToAction:\n          type: string\n        cssUrl:\n          type: string\n        fields:\n          items:\n            $ref: \"#/components/schemas/FormField\"\n          type: array\n        heading:\n          type: string\n        name:\n          type: string\n        noCss:\n          type: boolean\n        tags:\n          items:\n            $ref: \"#/components/schemas/Tag\"\n          type: array\n      type: object\n    Group:\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n      type: object\n    LatLong:\n      properties:\n        latitude:\n          format: double\n          type: number\n        longitude:\n          format: double\n          type: number\n      type: object\n    LinkedProfile:\n      properties:\n        bio:\n          type: string\n        email:\n          type: string\n        id:\n          type: string\n        name:\n          type: string\n        picture:\n          type: string\n        profile:\n          type: string\n        registered:\n          format: date-time\n          type: string\n      type: object\n    Media:\n      properties:\n        duration:\n          type: number\n        id:\n          type: string\n        place:\n          $ref: \"#/components/schemas/Place\"\n        type:\n          type: string\n      type: object\n    MediaUsage:\n      properties:\n        artifacts:\n          items:\n            $ref: \"#/components/schemas/Artifact\"\n          type: array\n        id:\n          type: string\n        media:\n          $ref: \"#/components/schemas/Media\"\n      type: object\n    ModerationAction:\n      properties:\n        id:\n          type: string\n        label:\n          type: string\n        resultingState:\n          $ref: \"#/components/schemas/ModerationState\"\n      required:\n        - id\n        - label\n        - resultingState\n      type: object\n    ModerationHistoryItem:\n      properties:\n        action:\n          $ref: \"#/components/schemas/ModerationAction\"\n        date:\n          format: date-time\n          type: string\n        notes:\n          type: string\n      required:\n        - date\n      type: object\n    ModerationHistoryItemSubmission:\n      properties:\n        action:\n          $ref: \"#/components/schemas/ModerationAction\"\n        notes:\n          type: string\n      type: object\n    ModerationState:\n      properties:\n        id:\n          type: string\n        label:\n          type: string\n        public:\n          type: boolean\n      required:\n        - id\n        - label\n        - public\n      type: object\n    NotificationPreview:\n      properties:\n        email:\n          type: string\n        html:\n          type: string\n        subject:\n          type: string\n      type: object\n    OsmId:\n      properties:\n        osmId:\n          type: number\n        osmType:\n          type: string\n      type: object\n    Place:\n      properties:\n        country:\n          type: string\n        geohash:\n          type: string\n        google:\n          type: string\n        latLong:\n          $ref: \"#/components/schemas/LatLong\"\n        name:\n          type: string\n        osm:\n          $ref: \"#/components/schemas/OsmId\"\n      type: object\n    Subscription:\n      properties:\n        assignment:\n          type: string\n        email:\n          type: string\n        id:\n          type: string\n        includeBody:\n          type: boolean\n        includeThumbenail:\n          type: boolean\n        slackChannel:\n          type: string\n        token:\n          type: string\n        types:\n          items:\n            type: string\n          type: array\n        user:\n          type: string\n      required:\n        - id\n        - token\n        - user\n        - types\n        - includeBody\n      type: object\n    SubscriptionSubmission:\n      properties:\n        assignment:\n          type: string\n        email:\n          type: string\n        includeBody:\n          type: boolean\n        includeThumbenail:\n          type: boolean\n        slackChannel:\n          type: string\n        types:\n          items:\n            type: string\n          type: array\n      required:\n        - types\n        - includeBody\n      type: object\n    SubscriptionType:\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n      required:\n        - id\n        - name\n      type: object\n    Tag:\n      properties:\n        colour:\n          description: Optional HTML hexcode colour\n          example: \"#0061a6\"\n          type: string\n        id:\n          type: string\n        name:\n          type: string\n        tagSet:\n          $ref: \"#/components/schemas/TagSet\"\n        urlWords:\n          type: string\n      required:\n        - id\n        - name\n      type: object\n    TagSet:\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n      required:\n        - id\n        - name\n      type: object\n    TagSetSubmission:\n      properties:\n        name:\n          type: string\n        urlWords:\n          type: string\n      required:\n        - name\n        - urlWords\n      type: object\n    TagSubmission:\n      properties:\n        colour:\n          type: string\n        name:\n          type: string\n        tagSet:\n          $ref: \"#/components/schemas/TagSet\"\n        urlWords:\n          type: string\n      required:\n        - name\n      type: object\n    User:\n      properties:\n        bio:\n          type: string\n        displayName:\n          type: string\n        id:\n          type: string\n        registered:\n          format: date-time\n          type: string\n        username:\n          type: string\n      type: object\n    Via:\n      properties:\n        authority:\n          $ref: \"#/components/schemas/Authority\"\n        ipAddress:\n          type: string\n        ipAddressPlace:\n          $ref: \"#/components/schemas/Place\"\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/contribly.com-1.0.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/contribly.com-1.0.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/contributions\": post: security: security \"oauth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}