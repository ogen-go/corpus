{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "calendar-v3.yaml",
			"size": 0,
			"path": "providers/src/googleapis.com/v0.1.2/services/calendar-v3.yaml",
			"byteSize": 151276,
			"content": "components:\n  parameters:\n    alt:\n      description: Data format for the response.\n      in: query\n      name: alt\n      schema:\n        enum:\n        - json\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you\n        with API access, quota, and reports. Required unless you provide an OAuth\n        2.0 token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n    quotaUser:\n      description: An opaque string that represents a user for quota purposes. Must\n        not exceed 40 characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    userIp:\n      description: Deprecated. Please use quotaUser instead.\n      in: query\n      name: userIp\n      schema:\n        type: string\n  schemas:\n    Acl:\n      properties:\n        etag:\n          description: ETag of the collection.\n          type: string\n        items:\n          description: List of rules on the access control list.\n          items:\n            $ref: '#/components/schemas/AclRule'\n          type: array\n        kind:\n          default: calendar#acl\n          description: Type of the collection (\"calendar#acl\").\n          type: string\n        nextPageToken:\n          description: Token used to access the next page of this result. Omitted\n            if no further results are available, in which case nextSyncToken is provided.\n          type: string\n        nextSyncToken:\n          description: Token used at a later point in time to retrieve only the entries\n            that have changed since this result was returned. Omitted if further results\n            are available, in which case nextPageToken is provided.\n          type: string\n      type: object\n    AclRule:\n      properties:\n        etag:\n          description: ETag of the resource.\n          type: string\n        id:\n          description: Identifier of the Access Control List (ACL) rule. See Sharing\n            calendars.\n          type: string\n        kind:\n          default: calendar#aclRule\n          description: Type of the resource (\"calendar#aclRule\").\n          type: string\n        role:\n          description: \"The role assigned to the scope. Possible values are:  \\n-\\\n            \\ \\\"none\\\" - Provides no access. \\n- \\\"freeBusyReader\\\" - Provides read\\\n            \\ access to free/busy information. \\n- \\\"reader\\\" - Provides read access\\\n            \\ to the calendar. Private events will appear to users with reader access,\\\n            \\ but event details will be hidden. \\n- \\\"writer\\\" - Provides read and\\\n            \\ write access to the calendar. Private events will appear to users with\\\n            \\ writer access, and event details will be visible. \\n- \\\"owner\\\" - Provides\\\n            \\ ownership of the calendar. This role has all of the permissions of the\\\n            \\ writer role with the additional ability to see and manipulate ACLs.\"\n          type: string\n        scope:\n          description: The extent to which calendar access is granted by this ACL\n            rule.\n          properties:\n            type:\n              description: \"The type of the scope. Possible values are:  \\n- \\\"default\\\"\\\n                \\ - The public scope. This is the default value. \\n- \\\"user\\\" - Limits\\\n                \\ the scope to a single user. \\n- \\\"group\\\" - Limits the scope to\\\n                \\ a group. \\n- \\\"domain\\\" - Limits the scope to a domain.  Note: The\\\n                \\ permissions granted to the \\\"default\\\", or public, scope apply to\\\n                \\ any user, authenticated or not.\"\n              type: string\n            value:\n              description: The email address of a user or group, or the name of a\n                domain, depending on the scope type. Omitted for type \"default\".\n              type: string\n          type: object\n      type: object\n    Calendar:\n      properties:\n        conferenceProperties:\n          $ref: '#/components/schemas/ConferenceProperties'\n          description: Conferencing properties for this calendar, for example what\n            types of conferences are allowed.\n        description:\n          description: Description of the calendar. Optional.\n          type: string\n        etag:\n          description: ETag of the resource.\n          type: string\n        id:\n          description: Identifier of the calendar. To retrieve IDs call the calendarList.list()\n            method.\n          type: string\n        kind:\n          default: calendar#calendar\n          description: Type of the resource (\"calendar#calendar\").\n          type: string\n        location:\n          description: Geographic location of the calendar as free-form text. Optional.\n          type: string\n        summary:\n          description: Title of the calendar.\n          type: string\n        timeZone:\n          description: The time zone of the calendar. (Formatted as an IANA Time Zone\n            Database name, e.g. \"Europe/Zurich\".) Optional.\n          type: string\n      type: object\n    CalendarList:\n      properties:\n        etag:\n          description: ETag of the collection.\n          type: string\n        items:\n          description: Calendars that are present on the user's calendar list.\n          items:\n            $ref: '#/components/schemas/CalendarListEntry'\n          type: array\n        kind:\n          default: calendar#calendarList\n          description: Type of the collection (\"calendar#calendarList\").\n          type: string\n        nextPageToken:\n          description: Token used to access the next page of this result. Omitted\n            if no further results are available, in which case nextSyncToken is provided.\n          type: string\n        nextSyncToken:\n          description: Token used at a later point in time to retrieve only the entries\n            that have changed since this result was returned. Omitted if further results\n            are available, in which case nextPageToken is provided.\n          type: string\n      type: object\n    CalendarListEntry:\n      properties:\n        accessRole:\n          description: \"The effective access role that the authenticated user has\\\n            \\ on the calendar. Read-only. Possible values are:  \\n- \\\"freeBusyReader\\\"\\\n            \\ - Provides read access to free/busy information. \\n- \\\"reader\\\" - Provides\\\n            \\ read access to the calendar. Private events will appear to users with\\\n            \\ reader access, but event details will be hidden. \\n- \\\"writer\\\" - Provides\\\n            \\ read and write access to the calendar. Private events will appear to\\\n            \\ users with writer access, and event details will be visible. \\n- \\\"\\\n            owner\\\" - Provides ownership of the calendar. This role has all of the\\\n            \\ permissions of the writer role with the additional ability to see and\\\n            \\ manipulate ACLs.\"\n          type: string\n        backgroundColor:\n          description: The main color of the calendar in the hexadecimal format \"#0088aa\".\n            This property supersedes the index-based colorId property. To set or change\n            this property, you need to specify colorRgbFormat=true in the parameters\n            of the insert, update and patch methods. Optional.\n          type: string\n        colorId:\n          description: The color of the calendar. This is an ID referring to an entry\n            in the calendar section of the colors definition (see the colors endpoint).\n            This property is superseded by the backgroundColor and foregroundColor\n            properties and can be ignored when using these properties. Optional.\n          type: string\n        conferenceProperties:\n          $ref: '#/components/schemas/ConferenceProperties'\n          description: Conferencing properties for this calendar, for example what\n            types of conferences are allowed.\n        defaultReminders:\n          description: The default reminders that the authenticated user has for this\n            calendar.\n          items:\n            $ref: '#/components/schemas/EventReminder'\n          type: array\n        deleted:\n          default: false\n          description: Whether this calendar list entry has been deleted from the\n            calendar list. Read-only. Optional. The default is False.\n          type: boolean\n        description:\n          description: Description of the calendar. Optional. Read-only.\n          type: string\n        etag:\n          description: ETag of the resource.\n          type: string\n        foregroundColor:\n          description: The foreground color of the calendar in the hexadecimal format\n            \"#ffffff\". This property supersedes the index-based colorId property.\n            To set or change this property, you need to specify colorRgbFormat=true\n            in the parameters of the insert, update and patch methods. Optional.\n          type: string\n        hidden:\n          default: false\n          description: Whether the calendar has been hidden from the list. Optional.\n            The attribute is only returned when the calendar is hidden, in which case\n            the value is true.\n          type: boolean\n        id:\n          description: Identifier of the calendar.\n          type: string\n        kind:\n          default: calendar#calendarListEntry\n          description: Type of the resource (\"calendar#calendarListEntry\").\n          type: string\n        location:\n          description: Geographic location of the calendar as free-form text. Optional.\n            Read-only.\n          type: string\n        notificationSettings:\n          description: The notifications that the authenticated user is receiving\n            for this calendar.\n          properties:\n            notifications:\n              description: The list of notifications set for this calendar.\n              items:\n                $ref: '#/components/schemas/CalendarNotification'\n              type: array\n          type: object\n        primary:\n          default: false\n          description: Whether the calendar is the primary calendar of the authenticated\n            user. Read-only. Optional. The default is False.\n          type: boolean\n        selected:\n          default: false\n          description: Whether the calendar content shows up in the calendar UI. Optional.\n            The default is False.\n          type: boolean\n        summary:\n          description: Title of the calendar. Read-only.\n          type: string\n        summaryOverride:\n          description: The summary that the authenticated user has set for this calendar.\n            Optional.\n          type: string\n        timeZone:\n          description: The time zone of the calendar. Optional. Read-only.\n          type: string\n      type: object\n    CalendarNotification:\n      properties:\n        method:\n          description: \"The method used to deliver the notification. The possible\\\n            \\ value is:  \\n- \\\"email\\\" - Notifications are sent via email.  \\nRequired\\\n            \\ when adding a notification.\"\n          type: string\n        type:\n          description: \"The type of notification. Possible values are:  \\n- \\\"eventCreation\\\"\\\n            \\ - Notification sent when a new event is put on the calendar. \\n- \\\"\\\n            eventChange\\\" - Notification sent when an event is changed. \\n- \\\"eventCancellation\\\"\\\n            \\ - Notification sent when an event is cancelled. \\n- \\\"eventResponse\\\"\\\n            \\ - Notification sent when an attendee responds to the event invitation.\\\n            \\ \\n- \\\"agenda\\\" - An agenda with the events of the day (sent out in the\\\n            \\ morning).  \\nRequired when adding a notification.\"\n          type: string\n      type: object\n    Channel:\n      properties:\n        address:\n          description: The address where notifications are delivered for this channel.\n          type: string\n        expiration:\n          description: Date and time of notification channel expiration, expressed\n            as a Unix timestamp, in milliseconds. Optional.\n          format: int64\n          type: string\n        id:\n          description: A UUID or similar unique string that identifies this channel.\n          type: string\n        kind:\n          default: api#channel\n          description: Identifies this as a notification channel used to watch for\n            changes to a resource, which is \"api#channel\".\n          type: string\n        params:\n          additionalProperties:\n            description: Declares a new parameter by name.\n            type: string\n          description: Additional parameters controlling delivery channel behavior.\n            Optional.\n          type: object\n        payload:\n          description: A Boolean value to indicate whether payload is wanted. Optional.\n          type: boolean\n        resourceId:\n          description: An opaque ID that identifies the resource being watched on\n            this channel. Stable across different API versions.\n          type: string\n        resourceUri:\n          description: A version-specific identifier for the watched resource.\n          type: string\n        token:\n          description: An arbitrary string delivered to the target address with each\n            notification delivered over this channel. Optional.\n          type: string\n        type:\n          description: The type of delivery mechanism used for this channel. Valid\n            values are \"web_hook\" (or \"webhook\"). Both values refer to a channel where\n            Http requests are used to deliver messages.\n          type: string\n      type: object\n    ColorDefinition:\n      properties:\n        background:\n          description: The background color associated with this color definition.\n          type: string\n        foreground:\n          description: The foreground color that can be used to write on top of a\n            background with 'background' color.\n          type: string\n      type: object\n    Colors:\n      properties:\n        calendar:\n          additionalProperties:\n            $ref: '#/components/schemas/ColorDefinition'\n            description: A calendar color definition.\n          description: A global palette of calendar colors, mapping from the color\n            ID to its definition. A calendarListEntry resource refers to one of these\n            color IDs in its colorId field. Read-only.\n          type: object\n        event:\n          additionalProperties:\n            $ref: '#/components/schemas/ColorDefinition'\n            description: An event color definition.\n          description: A global palette of event colors, mapping from the color ID\n            to its definition. An event resource may refer to one of these color IDs\n            in its colorId field. Read-only.\n          type: object\n        kind:\n          default: calendar#colors\n          description: Type of the resource (\"calendar#colors\").\n          type: string\n        updated:\n          description: Last modification time of the color palette (as a RFC3339 timestamp).\n            Read-only.\n          format: date-time\n          type: string\n      type: object\n    ConferenceData:\n      properties:\n        conferenceId:\n          description: \"The ID of the conference.\\nCan be used by developers to keep\\\n            \\ track of conferences, should not be displayed to users.\\nThe ID value\\\n            \\ is formed differently for each conference solution type:  \\n- eventHangout:\\\n            \\ ID is not set. (This conference type is deprecated.)\\n- eventNamedHangout:\\\n            \\ ID is the name of the Hangout. (This conference type is deprecated.)\\n\\\n            - hangoutsMeet: ID is the 10-letter meeting code, for example aaa-bbbb-ccc.\\n\\\n            - addOn: ID is defined by the third-party provider.  Optional.\"\n          type: string\n        conferenceSolution:\n          $ref: '#/components/schemas/ConferenceSolution'\n          description: 'The conference solution, such as Google Meet.\n\n            Unset for a conference with a failed create request.\n\n            Either conferenceSolution and at least one entryPoint, or createRequest\n            is required.'\n        createRequest:\n          $ref: '#/components/schemas/CreateConferenceRequest'\n          description: 'A request to generate a new conference and attach it to the\n            event. The data is generated asynchronously. To see whether the data is\n            present check the status field.\n\n            Either conferenceSolution and at least one entryPoint, or createRequest\n            is required.'\n        entryPoints:\n          description: 'Information about individual conference entry points, such\n            as URLs or phone numbers.\n\n            All of them must belong to the same conference.\n\n            Either conferenceSolution and at least one entryPoint, or createRequest\n            is required.'\n          items:\n            $ref: '#/components/schemas/EntryPoint'\n          type: array\n        notes:\n          description: Additional notes (such as instructions from the domain administrator,\n            legal notices) to display to the user. Can contain HTML. The maximum length\n            is 2048 characters. Optional.\n          type: string\n        parameters:\n          $ref: '#/components/schemas/ConferenceParameters'\n          description: Additional properties related to a conference. An example would\n            be a solution-specific setting for enabling video streaming.\n        signature:\n          description: 'The signature of the conference data.\n\n            Generated on server side. Must be preserved while copying the conference\n            data between events, otherwise the conference data will not be copied.\n\n            Unset for a conference with a failed create request.\n\n            Optional for a conference with a pending create request.'\n          type: string\n      type: object\n    ConferenceParameters:\n      properties:\n        addOnParameters:\n          $ref: '#/components/schemas/ConferenceParametersAddOnParameters'\n          description: Additional add-on specific data.\n      type: object\n    ConferenceParametersAddOnParameters:\n      properties:\n        parameters:\n          additionalProperties:\n            type: string\n          type: object\n      type: object\n    ConferenceProperties:\n      properties:\n        allowedConferenceSolutionTypes:\n          description: \"The types of conference solutions that are supported for this\\\n            \\ calendar.\\nThe possible values are:  \\n- \\\"eventHangout\\\" \\n- \\\"eventNamedHangout\\\"\\\n            \\ \\n- \\\"hangoutsMeet\\\"  Optional.\"\n          items:\n            type: string\n          type: array\n      type: object\n    ConferenceRequestStatus:\n      properties:\n        statusCode:\n          description: \"The current status of the conference create request. Read-only.\\n\\\n            The possible values are:  \\n- \\\"pending\\\": the conference create request\\\n            \\ is still being processed.\\n- \\\"success\\\": the conference create request\\\n            \\ succeeded, the entry points are populated.\\n- \\\"failure\\\": the conference\\\n            \\ create request failed, there are no entry points.\"\n          type: string\n      type: object\n    ConferenceSolution:\n      properties:\n        iconUri:\n          description: The user-visible icon for this solution.\n          type: string\n        key:\n          $ref: '#/components/schemas/ConferenceSolutionKey'\n          description: The key which can uniquely identify the conference solution\n            for this event.\n        name:\n          description: The user-visible name of this solution. Not localized.\n          type: string\n      type: object\n    ConferenceSolutionKey:\n      properties:\n        type:\n          description: \"The conference solution type.\\nIf a client encounters an unfamiliar\\\n            \\ or empty type, it should still be able to display the entry points.\\\n            \\ However, it should disallow modifications.\\nThe possible values are:\\\n            \\  \\n- \\\"eventHangout\\\" for Hangouts for consumers (deprecated; existing\\\n            \\ events may show this conference solution type but new conferences cannot\\\n            \\ be created)\\n- \\\"eventNamedHangout\\\" for classic Hangouts for Google\\\n            \\ Workspace users (deprecated; existing events may show this conference\\\n            \\ solution type but new conferences cannot be created)\\n- \\\"hangoutsMeet\\\"\\\n            \\ for Google Meet (http://meet.google.com)\\n- \\\"addOn\\\" for 3P conference\\\n            \\ providers\"\n          type: string\n      type: object\n    CreateConferenceRequest:\n      properties:\n        conferenceSolutionKey:\n          $ref: '#/components/schemas/ConferenceSolutionKey'\n          description: The conference solution, such as Hangouts or Google Meet.\n        requestId:\n          description: 'The client-generated unique ID for this request.\n\n            Clients should regenerate this ID for every new request. If an ID provided\n            is the same as for the previous request, the request is ignored.'\n          type: string\n        status:\n          $ref: '#/components/schemas/ConferenceRequestStatus'\n          description: The status of the conference create request.\n      type: object\n    EntryPoint:\n      properties:\n        accessCode:\n          description: 'The access code to access the conference. The maximum length\n            is 128 characters.\n\n            When creating new conference data, populate only the subset of {meetingCode,\n            accessCode, passcode, password, pin} fields that match the terminology\n            that the conference provider uses. Only the populated fields should be\n            displayed.\n\n            Optional.'\n          type: string\n        entryPointFeatures:\n          description: Features of the entry point, such as being toll or toll-free.\n            One entry point can have multiple features. However, toll and toll-free\n            cannot be both set on the same entry point.\n          items:\n            type: string\n          type: array\n        entryPointType:\n          description: \"The type of the conference entry point.\\nPossible values are:\\\n            \\  \\n- \\\"video\\\" - joining a conference over HTTP. A conference can have\\\n            \\ zero or one video entry point.\\n- \\\"phone\\\" - joining a conference by\\\n            \\ dialing a phone number. A conference can have zero or more phone entry\\\n            \\ points.\\n- \\\"sip\\\" - joining a conference over SIP. A conference can\\\n            \\ have zero or one sip entry point.\\n- \\\"more\\\" - further conference joining\\\n            \\ instructions, for example additional phone numbers. A conference can\\\n            \\ have zero or one more entry point. A conference with only a more entry\\\n            \\ point is not a valid conference.\"\n          type: string\n        label:\n          description: \"The label for the URI. Visible to end users. Not localized.\\\n            \\ The maximum length is 512 characters.\\nExamples:  \\n- for video: meet.google.com/aaa-bbbb-ccc\\n\\\n            - for phone: +1 123 268 2601\\n- for sip: 12345678@altostrat.com\\n- for\\\n            \\ more: should not be filled  \\nOptional.\"\n          type: string\n        meetingCode:\n          description: 'The meeting code to access the conference. The maximum length\n            is 128 characters.\n\n            When creating new conference data, populate only the subset of {meetingCode,\n            accessCode, passcode, password, pin} fields that match the terminology\n            that the conference provider uses. Only the populated fields should be\n            displayed.\n\n            Optional.'\n          type: string\n        passcode:\n          description: 'The passcode to access the conference. The maximum length\n            is 128 characters.\n\n            When creating new conference data, populate only the subset of {meetingCode,\n            accessCode, passcode, password, pin} fields that match the terminology\n            that the conference provider uses. Only the populated fields should be\n            displayed.'\n          type: string\n        password:\n          description: 'The password to access the conference. The maximum length\n            is 128 characters.\n\n            When creating new conference data, populate only the subset of {meetingCode,\n            accessCode, passcode, password, pin} fields that match the terminology\n            that the conference provider uses. Only the populated fields should be\n            displayed.\n\n            Optional.'\n          type: string\n        pin:\n          description: 'The PIN to access the conference. The maximum length is 128\n            characters.\n\n            When creating new conference data, populate only the subset of {meetingCode,\n            accessCode, passcode, password, pin} fields that match the terminology\n            that the conference provider uses. Only the populated fields should be\n            displayed.\n\n            Optional.'\n          type: string\n        regionCode:\n          description: 'The CLDR/ISO 3166 region code for the country associated with\n            this phone access. Example: \"SE\" for Sweden.\n\n            Calendar backend will populate this field only for EntryPointType.PHONE.'\n          type: string\n        uri:\n          description: \"The URI of the entry point. The maximum length is 1300 characters.\\n\\\n            Format:  \\n- for video, http: or https: schema is required.\\n- for phone,\\\n            \\ tel: schema is required. The URI should include the entire dial sequence\\\n            \\ (e.g., tel:+12345678900,,,123456789;1234).\\n- for sip, sip: schema is\\\n            \\ required, e.g., sip:12345678@myprovider.com.\\n- for more, http: or https:\\\n            \\ schema is required.\"\n          type: string\n      type: object\n    Error:\n      properties:\n        domain:\n          description: Domain, or broad category, of the error.\n          type: string\n        reason:\n          description: \"Specific reason for the error. Some of the possible values\\\n            \\ are:  \\n- \\\"groupTooBig\\\" - The group of users requested is too large\\\n            \\ for a single query. \\n- \\\"tooManyCalendarsRequested\\\" - The number of\\\n            \\ calendars requested is too large for a single query. \\n- \\\"notFound\\\"\\\n            \\ - The requested resource was not found. \\n- \\\"internalError\\\" - The\\\n            \\ API service has encountered an internal error.  Additional error types\\\n            \\ may be added in the future, so clients should gracefully handle additional\\\n            \\ error statuses not included in this list.\"\n          type: string\n      type: object\n    Event:\n      properties:\n        anyoneCanAddSelf:\n          default: false\n          description: Whether anyone can invite themselves to the event (deprecated).\n            Optional. The default is False.\n          type: boolean\n        attachments:\n          description: 'File attachments for the event. Currently only Google Drive\n            attachments are supported.\n\n            In order to modify attachments the supportsAttachments request parameter\n            should be set to true.\n\n            There can be at most 25 attachments per event,'\n          items:\n            $ref: '#/components/schemas/EventAttachment'\n          type: array\n        attendees:\n          description: The attendees of the event. See the Events with attendees guide\n            for more information on scheduling events with other calendar users. Service\n            accounts need to use domain-wide delegation of authority to populate the\n            attendee list.\n          items:\n            $ref: '#/components/schemas/EventAttendee'\n          type: array\n        attendeesOmitted:\n          default: false\n          description: Whether attendees may have been omitted from the event's representation.\n            When retrieving an event, this may be due to a restriction specified by\n            the maxAttendee query parameter. When updating an event, this can be used\n            to only update the participant's response. Optional. The default is False.\n          type: boolean\n        colorId:\n          description: The color of the event. This is an ID referring to an entry\n            in the event section of the colors definition (see the  colors endpoint).\n            Optional.\n          type: string\n        conferenceData:\n          $ref: '#/components/schemas/ConferenceData'\n          description: The conference-related information, such as details of a Google\n            Meet conference. To create new conference details use the createRequest\n            field. To persist your changes, remember to set the conferenceDataVersion\n            request parameter to 1 for all event modification requests.\n        created:\n          description: Creation time of the event (as a RFC3339 timestamp). Read-only.\n          format: date-time\n          type: string\n        creator:\n          description: The creator of the event. Read-only.\n          properties:\n            displayName:\n              description: The creator's name, if available.\n              type: string\n            email:\n              description: The creator's email address, if available.\n              type: string\n            id:\n              description: The creator's Profile ID, if available.\n              type: string\n            self:\n              default: false\n              description: Whether the creator corresponds to the calendar on which\n                this copy of the event appears. Read-only. The default is False.\n              type: boolean\n          type: object\n        description:\n          description: Description of the event. Can contain HTML. Optional.\n          type: string\n        end:\n          $ref: '#/components/schemas/EventDateTime'\n          description: The (exclusive) end time of the event. For a recurring event,\n            this is the end time of the first instance.\n        endTimeUnspecified:\n          default: false\n          description: Whether the end time is actually unspecified. An end time is\n            still provided for compatibility reasons, even if this attribute is set\n            to True. The default is False.\n          type: boolean\n        etag:\n          description: ETag of the resource.\n          type: string\n        eventType:\n          default: default\n          description: \"Specific type of the event. Read-only. Possible values are:\\\n            \\  \\n- \\\"default\\\" - A regular event or not further specified. \\n- \\\"\\\n            outOfOffice\\\" - An out-of-office event.\"\n          type: string\n        extendedProperties:\n          description: Extended properties of the event.\n          properties:\n            private:\n              additionalProperties:\n                description: The name of the private property and the corresponding\n                  value.\n                type: string\n              description: Properties that are private to the copy of the event that\n                appears on this calendar.\n              type: object\n            shared:\n              additionalProperties:\n                description: The name of the shared property and the corresponding\n                  value.\n                type: string\n              description: Properties that are shared between copies of the event\n                on other attendees' calendars.\n              type: object\n          type: object\n        gadget:\n          description: A gadget that extends this event. Gadgets are deprecated; this\n            structure is instead only used for returning birthday calendar metadata.\n          properties:\n            display:\n              description: \"The gadget's display mode. Deprecated. Possible values\\\n                \\ are:  \\n- \\\"icon\\\" - The gadget displays next to the event's title\\\n                \\ in the calendar view. \\n- \\\"chip\\\" - The gadget displays when the\\\n                \\ event is clicked.\"\n              type: string\n            height:\n              description: The gadget's height in pixels. The height must be an integer\n                greater than 0. Optional. Deprecated.\n              format: int32\n              type: integer\n            iconLink:\n              description: The gadget's icon URL. The URL scheme must be HTTPS. Deprecated.\n              type: string\n            link:\n              description: The gadget's URL. The URL scheme must be HTTPS. Deprecated.\n              type: string\n            preferences:\n              additionalProperties:\n                description: The preference name and corresponding value.\n                type: string\n              description: Preferences.\n              type: object\n            title:\n              description: The gadget's title. Deprecated.\n              type: string\n            type:\n              description: The gadget's type. Deprecated.\n              type: string\n            width:\n              description: The gadget's width in pixels. The width must be an integer\n                greater than 0. Optional. Deprecated.\n              format: int32\n              type: integer\n          type: object\n        guestsCanInviteOthers:\n          default: true\n          description: Whether attendees other than the organizer can invite others\n            to the event. Optional. The default is True.\n          type: boolean\n        guestsCanModify:\n          default: false\n          description: Whether attendees other than the organizer can modify the event.\n            Optional. The default is False.\n          type: boolean\n        guestsCanSeeOtherGuests:\n          default: true\n          description: Whether attendees other than the organizer can see who the\n            event's attendees are. Optional. The default is True.\n          type: boolean\n        hangoutLink:\n          description: An absolute link to the Google Hangout associated with this\n            event. Read-only.\n          type: string\n        htmlLink:\n          description: An absolute link to this event in the Google Calendar Web UI.\n            Read-only.\n          type: string\n        iCalUID:\n          description: 'Event unique identifier as defined in RFC5545. It is used\n            to uniquely identify events accross calendaring systems and must be supplied\n            when importing events via the import method.\n\n            Note that the icalUID and the id are not identical and only one of them\n            should be supplied at event creation time. One difference in their semantics\n            is that in recurring events, all occurrences of one event have different\n            ids while they all share the same icalUIDs.'\n          type: string\n        id:\n          description: \"Opaque identifier of the event. When creating new single or\\\n            \\ recurring events, you can specify their IDs. Provided IDs must follow\\\n            \\ these rules:  \\n- characters allowed in the ID are those used in base32hex\\\n            \\ encoding, i.e. lowercase letters a-v and digits 0-9, see section 3.1.2\\\n            \\ in RFC2938 \\n- the length of the ID must be between 5 and 1024 characters\\\n            \\ \\n- the ID must be unique per calendar  Due to the globally distributed\\\n            \\ nature of the system, we cannot guarantee that ID collisions will be\\\n            \\ detected at event creation time. To minimize the risk of collisions\\\n            \\ we recommend using an established UUID algorithm such as one described\\\n            \\ in RFC4122.\\nIf you do not specify an ID, it will be automatically generated\\\n            \\ by the server.\\nNote that the icalUID and the id are not identical and\\\n            \\ only one of them should be supplied at event creation time. One difference\\\n            \\ in their semantics is that in recurring events, all occurrences of one\\\n            \\ event have different ids while they all share the same icalUIDs.\"\n          type: string\n        kind:\n          default: calendar#event\n          description: Type of the resource (\"calendar#event\").\n          type: string\n        location:\n          description: Geographic location of the event as free-form text. Optional.\n          type: string\n        locked:\n          default: false\n          description: Whether this is a locked event copy where no changes can be\n            made to the main event fields \"summary\", \"description\", \"location\", \"start\",\n            \"end\" or \"recurrence\". The default is False. Read-Only.\n          type: boolean\n        organizer:\n          description: The organizer of the event. If the organizer is also an attendee,\n            this is indicated with a separate entry in attendees with the organizer\n            field set to True. To change the organizer, use the move operation. Read-only,\n            except when importing an event.\n          properties:\n            displayName:\n              description: The organizer's name, if available.\n              type: string\n            email:\n              description: The organizer's email address, if available. It must be\n                a valid email address as per RFC5322.\n              type: string\n            id:\n              description: The organizer's Profile ID, if available.\n              type: string\n            self:\n              default: false\n              description: Whether the organizer corresponds to the calendar on which\n                this copy of the event appears. Read-only. The default is False.\n              type: boolean\n          type: object\n        originalStartTime:\n          $ref: '#/components/schemas/EventDateTime'\n          description: For an instance of a recurring event, this is the time at which\n            this event would start according to the recurrence data in the recurring\n            event identified by recurringEventId. It uniquely identifies the instance\n            within the recurring event series even if the instance was moved to a\n            different time. Immutable.\n        privateCopy:\n          default: false\n          description: If set to True, Event propagation is disabled. Note that it\n            is not the same thing as Private event properties. Optional. Immutable.\n            The default is False.\n          type: boolean\n        recurrence:\n          description: List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring\n            event, as specified in RFC5545. Note that DTSTART and DTEND lines are\n            not allowed in this field; event start and end times are specified in\n            the start and end fields. This field is omitted for single events or instances\n            of recurring events.\n          items:\n            type: string\n          type: array\n        recurringEventId:\n          description: For an instance of a recurring event, this is the id of the\n            recurring event to which this instance belongs. Immutable.\n          type: string\n        reminders:\n          description: Information about the event's reminders for the authenticated\n            user.\n          properties:\n            overrides:\n              description: If the event doesn't use the default reminders, this lists\n                the reminders specific to the event, or, if not set, indicates that\n                no reminders are set for this event. The maximum number of override\n                reminders is 5.\n              items:\n                $ref: '#/components/schemas/EventReminder'\n              type: array\n            useDefault:\n              description: Whether the default reminders of the calendar apply to\n                the event.\n              type: boolean\n          type: object\n        sequence:\n          description: Sequence number as per iCalendar.\n          format: int32\n          type: integer\n        source:\n          description: Source from which the event was created. For example, a web\n            page, an email message or any document identifiable by an URL with HTTP\n            or HTTPS scheme. Can only be seen or modified by the creator of the event.\n          properties:\n            title:\n              description: Title of the source; for example a title of a web page\n                or an email subject.\n              type: string\n            url:\n              description: URL of the source pointing to a resource. The URL scheme\n                must be HTTP or HTTPS.\n              type: string\n          type: object\n        start:\n          $ref: '#/components/schemas/EventDateTime'\n          description: The (inclusive) start time of the event. For a recurring event,\n            this is the start time of the first instance.\n        status:\n          description: \"Status of the event. Optional. Possible values are:  \\n- \\\"\\\n            confirmed\\\" - The event is confirmed. This is the default status. \\n-\\\n            \\ \\\"tentative\\\" - The event is tentatively confirmed. \\n- \\\"cancelled\\\"\\\n            \\ - The event is cancelled (deleted). The list method returns cancelled\\\n            \\ events only on incremental sync (when syncToken or updatedMin are specified)\\\n            \\ or if the showDeleted flag is set to true. The get method always returns\\\n            \\ them.\\nA cancelled status represents two different states depending\\\n            \\ on the event type:  \\n- Cancelled exceptions of an uncancelled recurring\\\n            \\ event indicate that this instance should no longer be presented to the\\\n            \\ user. Clients should store these events for the lifetime of the parent\\\n            \\ recurring event.\\nCancelled exceptions are only guaranteed to have values\\\n            \\ for the id, recurringEventId and originalStartTime fields populated.\\\n            \\ The other fields might be empty.  \\n- All other cancelled events represent\\\n            \\ deleted events. Clients should remove their locally synced copies. Such\\\n            \\ cancelled events will eventually disappear, so do not rely on them being\\\n            \\ available indefinitely.\\nDeleted events are only guaranteed to have\\\n            \\ the id field populated.   On the organizer's calendar, cancelled events\\\n            \\ continue to expose event details (summary, location, etc.) so that they\\\n            \\ can be restored (undeleted). Similarly, the events to which the user\\\n            \\ was invited and that they manually removed continue to provide details.\\\n            \\ However, incremental sync requests with showDeleted set to false will\\\n            \\ not return these details.\\nIf an event changes its organizer (for example\\\n            \\ via the move operation) and the original organizer is not on the attendee\\\n            \\ list, it will leave behind a cancelled event where only the id field\\\n            \\ is guaranteed to be populated.\"\n          type: string\n        summary:\n          description: Title of the event.\n          type: string\n        transparency:\n          default: opaque\n          description: \"Whether the event blocks time on the calendar. Optional. Possible\\\n            \\ values are:  \\n- \\\"opaque\\\" - Default value. The event does block time\\\n            \\ on the calendar. This is equivalent to setting Show me as to Busy in\\\n            \\ the Calendar UI. \\n- \\\"transparent\\\" - The event does not block time\\\n            \\ on the calendar. This is equivalent to setting Show me as to Available\\\n            \\ in the Calendar UI.\"\n          type: string\n        updated:\n          description: Last modification time of the event (as a RFC3339 timestamp).\n            Read-only.\n          format: date-time\n          type: string\n        visibility:\n          default: default\n          description: \"Visibility of the event. Optional. Possible values are:  \\n\\\n            - \\\"default\\\" - Uses the default visibility for events on the calendar.\\\n            \\ This is the default value. \\n- \\\"public\\\" - The event is public and\\\n            \\ event details are visible to all readers of the calendar. \\n- \\\"private\\\"\\\n            \\ - The event is private and only event attendees may view event details.\\\n            \\ \\n- \\\"confidential\\\" - The event is private. This value is provided\\\n            \\ for compatibility reasons.\"\n          type: string\n      type: object\n    EventAttachment:\n      properties:\n        fileId:\n          description: 'ID of the attached file. Read-only.\n\n            For Google Drive files, this is the ID of the corresponding Files resource\n            entry in the Drive API.'\n          type: string\n        fileUrl:\n          description: 'URL link to the attachment.\n\n            For adding Google Drive file attachments use the same format as in alternateLink\n            property of the Files resource in the Drive API.\n\n            Required when adding an attachment.'\n          type: string\n        iconLink:\n          description: URL link to the attachment's icon. Read-only.\n          type: string\n        mimeType:\n          description: Internet media type (MIME type) of the attachment.\n          type: string\n        title:\n          description: Attachment title.\n          type: string\n      type: object\n    EventAttendee:\n      properties:\n        additionalGuests:\n          default: 0\n          description: Number of additional guests. Optional. The default is 0.\n          format: int32\n          type: integer\n        comment:\n          description: The attendee's response comment. Optional.\n          type: string\n        displayName:\n          description: The attendee's name, if available. Optional.\n          type: string\n        email:\n          description: 'The attendee''s email address, if available. This field must\n            be present when adding an attendee. It must be a valid email address as\n            per RFC5322.\n\n            Required when adding an attendee.'\n          type: string\n        id:\n          description: The attendee's Profile ID, if available.\n          type: string\n        optional:\n          default: false\n          description: Whether this is an optional attendee. Optional. The default\n            is False.\n          type: boolean\n        organizer:\n          description: Whether the attendee is the organizer of the event. Read-only.\n            The default is False.\n          type: boolean\n        resource:\n          default: false\n          description: Whether the attendee is a resource. Can only be set when the\n            attendee is added to the event for the first time. Subsequent modifications\n            are ignored. Optional. The default is False.\n          type: boolean\n        responseStatus:\n          description: \"The attendee's response status. Possible values are:  \\n-\\\n            \\ \\\"needsAction\\\" - The attendee has not responded to the invitation.\\\n            \\ \\n- \\\"declined\\\" - The attendee has declined the invitation. \\n- \\\"\\\n            tentative\\\" - The attendee has tentatively accepted the invitation. \\n\\\n            - \\\"accepted\\\" - The attendee has accepted the invitation.\"\n          type: string\n        self:\n          default: false\n          description: Whether this entry represents the calendar on which this copy\n            of the event appears. Read-only. The default is False.\n          type: boolean\n      type: object\n    EventDateTime:\n      properties:\n        date:\n          description: The date, in the format \"yyyy-mm-dd\", if this is an all-day\n            event.\n          format: date\n          type: string\n        dateTime:\n          description: The time, as a combined date-time value (formatted according\n            to RFC3339). A time zone offset is required unless a time zone is explicitly\n            specified in timeZone.\n          format: date-time\n          type: string\n        timeZone:\n          description: The time zone in which the time is specified. (Formatted as\n            an IANA Time Zone Database name, e.g. \"Europe/Zurich\".) For recurring\n            events this field is required and specifies the time zone in which the\n            recurrence is expanded. For single events this field is optional and indicates\n            a custom time zone for the event start/end.\n          type: string\n      type: object\n    EventReminder:\n      properties:\n        method:\n          description: \"The method used by this reminder. Possible values are:  \\n\\\n            - \\\"email\\\" - Reminders are sent via email. \\n- \\\"popup\\\" - Reminders\\\n            \\ are sent via a UI popup.  \\nRequired when adding a reminder.\"\n          type: string\n        minutes:\n          description: 'Number of minutes before the start of the event when the reminder\n            should trigger. Valid values are between 0 and 40320 (4 weeks in minutes).\n\n            Required when adding a reminder.'\n          format: int32\n          type: integer\n      type: object\n    Events:\n      properties:\n        accessRole:\n          description: \"The user's access role for this calendar. Read-only. Possible\\\n            \\ values are:  \\n- \\\"none\\\" - The user has no access. \\n- \\\"freeBusyReader\\\"\\\n            \\ - The user has read access to free/busy information. \\n- \\\"reader\\\"\\\n            \\ - The user has read access to the calendar. Private events will appear\\\n            \\ to users with reader access, but event details will be hidden. \\n- \\\"\\\n            writer\\\" - The user has read and write access to the calendar. Private\\\n            \\ events will appear to users with writer access, and event details will\\\n            \\ be visible. \\n- \\\"owner\\\" - The user has ownership of the calendar.\\\n            \\ This role has all of the permissions of the writer role with the additional\\\n            \\ ability to see and manipulate ACLs.\"\n          type: string\n        defaultReminders:\n          description: The default reminders on the calendar for the authenticated\n            user. These reminders apply to all events on this calendar that do not\n            explicitly override them (i.e. do not have reminders.useDefault set to\n            True).\n          items:\n            $ref: '#/components/schemas/EventReminder'\n          type: array\n        description:\n          description: Description of the calendar. Read-only.\n          type: string\n        etag:\n          description: ETag of the collection.\n          type: string\n        items:\n          description: List of events on the calendar.\n          items:\n            $ref: '#/components/schemas/Event'\n          type: array\n        kind:\n          default: calendar#events\n          description: Type of the collection (\"calendar#events\").\n          type: string\n        nextPageToken:\n          description: Token used to access the next page of this result. Omitted\n            if no further results are available, in which case nextSyncToken is provided.\n          type: string\n        nextSyncToken:\n          description: Token used at a later point in time to retrieve only the entries\n            that have changed since this result was returned. Omitted if further results\n            are available, in which case nextPageToken is provided.\n          type: string\n        summary:\n          description: Title of the calendar. Read-only.\n          type: string\n        timeZone:\n          description: The time zone of the calendar. Read-only.\n          type: string\n        updated:\n          description: Last modification time of the calendar (as a RFC3339 timestamp).\n            Read-only.\n          format: date-time\n          type: string\n      type: object\n    FreeBusyCalendar:\n      properties:\n        busy:\n          description: List of time ranges during which this calendar should be regarded\n            as busy.\n          items:\n            $ref: '#/components/schemas/TimePeriod'\n          type: array\n        errors:\n          description: Optional error(s) (if computation for the calendar failed).\n          items:\n            $ref: '#/components/schemas/Error'\n          type: array\n      type: object\n    FreeBusyGroup:\n      properties:\n        calendars:\n          description: List of calendars' identifiers within a group.\n          items:\n            type: string\n          type: array\n        errors:\n          description: Optional error(s) (if computation for the group failed).\n          items:\n            $ref: '#/components/schemas/Error'\n          type: array\n      type: object\n    FreeBusyRequest:\n      properties:\n        calendarExpansionMax:\n          description: Maximal number of calendars for which FreeBusy information\n            is to be provided. Optional. Maximum value is 50.\n          format: int32\n          type: integer\n        groupExpansionMax:\n          description: Maximal number of calendar identifiers to be provided for a\n            single group. Optional. An error is returned for a group with more members\n            than this value. Maximum value is 100.\n          format: int32\n          type: integer\n        items:\n          description: List of calendars and/or groups to query.\n          items:\n            $ref: '#/components/schemas/FreeBusyRequestItem'\n          type: array\n        timeMax:\n          description: The end of the interval for the query formatted as per RFC3339.\n          format: date-time\n          type: string\n        timeMin:\n          description: The start of the interval for the query formatted as per RFC3339.\n          format: date-time\n          type: string\n        timeZone:\n          default: UTC\n          description: Time zone used in the response. Optional. The default is UTC.\n          type: string\n      type: object\n    FreeBusyRequestItem:\n      properties:\n        id:\n          description: The identifier of a calendar or a group.\n          type: string\n      type: object\n    FreeBusyResponse:\n      properties:\n        calendars:\n          additionalProperties:\n            $ref: '#/components/schemas/FreeBusyCalendar'\n            description: Free/busy expansions for a single calendar.\n          description: List of free/busy information for calendars.\n          type: object\n        groups:\n          additionalProperties:\n            $ref: '#/components/schemas/FreeBusyGroup'\n            description: List of calendars that are members of this group.\n          description: Expansion of groups.\n          type: object\n        kind:\n          default: calendar#freeBusy\n          description: Type of the resource (\"calendar#freeBusy\").\n          type: string\n        timeMax:\n          description: The end of the interval.\n          format: date-time\n          type: string\n        timeMin:\n          description: The start of the interval.\n          format: date-time\n          type: string\n      type: object\n    Setting:\n      properties:\n        etag:\n          description: ETag of the resource.\n          type: string\n        id:\n          description: The id of the user setting.\n          type: string\n        kind:\n          default: calendar#setting\n          description: Type of the resource (\"calendar#setting\").\n          type: string\n        value:\n          description: Value of the user setting. The format of the value depends\n            on the ID of the setting. It must always be a UTF-8 string of length up\n            to 1024 characters.\n          type: string\n      type: object\n    Settings:\n      properties:\n        etag:\n          description: Etag of the collection.\n          type: string\n        items:\n          description: List of user settings.\n          items:\n            $ref: '#/components/schemas/Setting'\n          type: array\n        kind:\n          default: calendar#settings\n          description: Type of the collection (\"calendar#settings\").\n          type: string\n        nextPageToken:\n          description: Token used to access the next page of this result. Omitted\n            if no further results are available, in which case nextSyncToken is provided.\n          type: string\n        nextSyncToken:\n          description: Token used at a later point in time to retrieve only the entries\n            that have changed since this result was returned. Omitted if further results\n            are available, in which case nextPageToken is provided.\n          type: string\n      type: object\n    TimePeriod:\n      properties:\n        end:\n          description: The (exclusive) end of the time period.\n          format: date-time\n          type: string\n        start:\n          description: The (inclusive) start of the time period.\n          format: date-time\n          type: string\n      type: object\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/calendar: See, edit, share, and permanently\n              delete all the calendars you can access using Google Calendar\n            https://www.googleapis.com/auth/calendar.events: View and edit events\n              on all your calendars\n            https://www.googleapis.com/auth/calendar.events.readonly: View events\n              on all your calendars\n            https://www.googleapis.com/auth/calendar.readonly: See and download any\n              calendar you can access using your Google Calendar\n            https://www.googleapis.com/auth/calendar.settings.readonly: View your\n              Calendar settings\n      type: oauth2\n    Oauth2c:\n      description: Oauth 2.0 authorizationCode authentication\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/calendar: See, edit, share, and permanently\n              delete all the calendars you can access using Google Calendar\n            https://www.googleapis.com/auth/calendar.events: View and edit events\n              on all your calendars\n            https://www.googleapis.com/auth/calendar.events.readonly: View events\n              on all your calendars\n            https://www.googleapis.com/auth/calendar.readonly: See and download any\n              calendar you can access using your Google Calendar\n            https://www.googleapis.com/auth/calendar.settings.readonly: View your\n              Calendar settings\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n      type: oauth2\n  x-stackQL-resources:\n    acl:\n      id: google.calendar.acl\n      methods:\n        delete:\n          operation:\n            $ref: '#/paths/~1calendars~1{calendarId}~1acl~1{ruleId}/delete'\n          response:\n            openAPIDocKey: '200'\n        get:\n          operation:\n            $ref: '#/paths/~1calendars~1{calendarId}~1acl~1{ruleId}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        insert:\n          operation:\n            $ref: '#/paths/~1calendars~1{calendarId}~1acl/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1calendars~1{calendarId}~1acl/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        patch:\n          operation:\n            $ref: '#/paths/~1calendars~1{calendarId}~1acl~1{ruleId}/patch'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update:\n          operation:\n            $ref: '#/paths/~1calendars~1{calendarId}~1acl~1{ruleId}/put'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        watch:\n          operation:\n            $ref: '#/paths/~1calendars~1{calendarId}~1acl~1watch/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: acl\n      title: acl\n    calendarList:\n      id: google.calendar.calendarList\n      methods:\n        delete:\n          operation:\n            $ref: '#/paths/~1users~1me~1calendarList~1{calendarId}/delete'\n          response:\n            openAPIDocKey: '200'\n        get:\n          operation:\n            $ref: '#/paths/~1users~1me~1calendarList~1{calendarId}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        insert:\n          operation:\n            $ref: '#/paths/~1users~1me~1calendarList/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1users~1me~1calendarList/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        patch:\n          operation:\n            $ref: '#/paths/~1users~1me~1calendarList~1{calendarId}/patch'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update:\n          operation:\n            $ref: '#/paths/~1users~1me~1calendarList~1{calendarId}/put'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        watch:\n          operation:\n            $ref: '#/paths/~1users~1me~1calendarList~1watch/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: calendarList\n      title: calendarList\n    calendars:\n      id: google.calendar.calendars\n      methods:\n        clear:\n          operation:\n            $ref: '#/paths/~1calendars~1{calendarId}~1clear/post'\n          response:\n            openAPIDocKey: '200'\n        delete:\n          operation:\n            $ref: '#/paths/~1calendars~1{calendarId}/delete'\n          response:\n            openAPIDocKey: '200'\n        get:\n          operation:\n            $ref: '#/paths/~1calendars~1{calendarId}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        insert:\n          operation:\n            $ref: '#/paths/~1calendars/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        patch:\n          operation:\n            $ref: '#/paths/~1calendars~1{calendarId}/patch'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update:\n          operation:\n            $ref: '#/paths/~1calendars~1{calendarId}/put'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: calendars\n      title: calendars\n    channels:\n      id: google.calendar.channels\n      methods:\n        stop:\n          operation:\n            $ref: '#/paths/~1channels~1stop/post'\n          request:\n            mediaType: application/json\n          response:\n            openAPIDocKey: '200'\n      name: channels\n      title: channels\n    colors:\n      id: google.calendar.colors\n      methods:\n        get:\n          operation:\n            $ref: '#/paths/~1colors/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: colors\n      title: colors\n    events:\n      id: google.calendar.events\n      methods:\n        delete:\n          operation:\n            $ref: '#/paths/~1calendars~1{calendarId}~1events~1{eventId}/delete'\n          response:\n            openAPIDocKey: '200'\n        get:\n          operation:\n            $ref: '#/paths/~1calendars~1{calendarId}~1events~1{eventId}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        import:\n          operation:\n            $ref: '#/paths/~1calendars~1{calendarId}~1events~1import/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        insert:\n          operation:\n            $ref: '#/paths/~1calendars~1{calendarId}~1events/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        instances:\n          operation:\n            $ref: '#/paths/~1calendars~1{calendarId}~1events~1{eventId}~1instances/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1calendars~1{calendarId}~1events/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        move:\n          operation:\n            $ref: '#/paths/~1calendars~1{calendarId}~1events~1{eventId}~1move/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        patch:\n          operation:\n            $ref: '#/paths/~1calendars~1{calendarId}~1events~1{eventId}/patch'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        quickAdd:\n          operation:\n            $ref: '#/paths/~1calendars~1{calendarId}~1events~1quickAdd/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update:\n          operation:\n            $ref: '#/paths/~1calendars~1{calendarId}~1events~1{eventId}/put'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        watch:\n          operation:\n            $ref: '#/paths/~1calendars~1{calendarId}~1events~1watch/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: events\n      title: events\n    freebusy:\n      id: google.calendar.freebusy\n      methods:\n        query:\n          operation:\n            $ref: '#/paths/~1freeBusy/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: freebusy\n      title: freebusy\n    settings:\n      id: google.calendar.settings\n      methods:\n        get:\n          operation:\n            $ref: '#/paths/~1users~1me~1settings~1{setting}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1users~1me~1settings/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        watch:\n          operation:\n            $ref: '#/paths/~1users~1me~1settings~1watch/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: settings\n      title: settings\nexternalDocs:\n  url: https://developers.google.com/google-apps/calendar/firstapp\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n    x-twitter: youtube\n  description: Manipulates events and other calendar data.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Calendar API\n  version: v3\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-apisguru-categories:\n  - analytics\n  - media\n  x-logo:\n    url: https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png\n  x-origin:\n  - format: google\n    url: https://calendar-json.googleapis.com/$discovery/rest?version=v3\n    version: v1\n  x-providerName: googleapis.com\n  x-serviceName: calendar\nopenapi: 3.0.0\npaths:\n  /calendars:\n    parameters:\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/userIp'\n    post:\n      description: Creates a secondary calendar.\n      operationId: calendar.calendars.insert\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Calendar'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Calendar'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      tags:\n      - calendars\n  /calendars/{calendarId}:\n    delete:\n      description: Deletes a secondary calendar. Use calendars.clear for clearing\n        all events on primary calendars.\n      operationId: calendar.calendars.delete\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      tags:\n      - calendars\n    get:\n      description: Returns metadata for a calendar.\n      operationId: calendar.calendars.get\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Calendar'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.readonly\n      tags:\n      - calendars\n    parameters:\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/userIp'\n    patch:\n      description: Updates metadata for a calendar. This method supports patch semantics.\n      operationId: calendar.calendars.patch\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Calendar'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Calendar'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      tags:\n      - calendars\n    put:\n      description: Updates metadata for a calendar.\n      operationId: calendar.calendars.update\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Calendar'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Calendar'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      tags:\n      - calendars\n  /calendars/{calendarId}/acl:\n    get:\n      description: Returns the rules in the access control list for the calendar.\n      operationId: calendar.acl.list\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      - description: Maximum number of entries returned on one result page. By default\n          the value is 100 entries. The page size can never be larger than 250 entries.\n          Optional.\n        in: query\n        name: maxResults\n        schema:\n          minimum: 1\n          type: integer\n      - description: Token specifying which result page to return. Optional.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      - description: Whether to include deleted ACLs in the result. Deleted ACLs are\n          represented by role equal to \"none\". Deleted ACLs will always be included\n          if syncToken is provided. Optional. The default is False.\n        in: query\n        name: showDeleted\n        schema:\n          type: boolean\n      - description: 'Token obtained from the nextSyncToken field returned on the\n          last page of results from the previous list request. It makes the result\n          of this list request contain only entries that have changed since then.\n          All entries deleted since the previous list request will always be in the\n          result set and it is not allowed to set showDeleted to False.\n\n          If the syncToken expires, the server will respond with a 410 GONE response\n          code and the client should clear its storage and perform a full synchronization\n          without any syncToken.\n\n          Learn more about incremental synchronization.\n\n          Optional. The default is to return all entries.'\n        in: query\n        name: syncToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Acl'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      tags:\n      - acl\n    parameters:\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/userIp'\n    post:\n      description: Creates an access control rule.\n      operationId: calendar.acl.insert\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      - description: Whether to send notifications about the calendar sharing change.\n          Optional. The default is True.\n        in: query\n        name: sendNotifications\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AclRule'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AclRule'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      tags:\n      - acl\n  /calendars/{calendarId}/acl/watch:\n    parameters:\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/userIp'\n    post:\n      description: Watch for changes to ACL resources.\n      operationId: calendar.acl.watch\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      - description: Maximum number of entries returned on one result page. By default\n          the value is 100 entries. The page size can never be larger than 250 entries.\n          Optional.\n        in: query\n        name: maxResults\n        schema:\n          minimum: 1\n          type: integer\n      - description: Token specifying which result page to return. Optional.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      - description: Whether to include deleted ACLs in the result. Deleted ACLs are\n          represented by role equal to \"none\". Deleted ACLs will always be included\n          if syncToken is provided. Optional. The default is False.\n        in: query\n        name: showDeleted\n        schema:\n          type: boolean\n      - description: 'Token obtained from the nextSyncToken field returned on the\n          last page of results from the previous list request. It makes the result\n          of this list request contain only entries that have changed since then.\n          All entries deleted since the previous list request will always be in the\n          result set and it is not allowed to set showDeleted to False.\n\n          If the syncToken expires, the server will respond with a 410 GONE response\n          code and the client should clear its storage and perform a full synchronization\n          without any syncToken.\n\n          Learn more about incremental synchronization.\n\n          Optional. The default is to return all entries.'\n        in: query\n        name: syncToken\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Channel'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Channel'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      tags:\n      - acl\n  /calendars/{calendarId}/acl/{ruleId}:\n    delete:\n      description: Deletes an access control rule.\n      operationId: calendar.acl.delete\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      - description: ACL rule identifier.\n        in: path\n        name: ruleId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      tags:\n      - acl\n    get:\n      description: Returns an access control rule.\n      operationId: calendar.acl.get\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      - description: ACL rule identifier.\n        in: path\n        name: ruleId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AclRule'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.readonly\n      tags:\n      - acl\n    parameters:\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/userIp'\n    patch:\n      description: Updates an access control rule. This method supports patch semantics.\n      operationId: calendar.acl.patch\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      - description: ACL rule identifier.\n        in: path\n        name: ruleId\n        required: true\n        schema:\n          type: string\n      - description: Whether to send notifications about the calendar sharing change.\n          Note that there are no notifications on access removal. Optional. The default\n          is True.\n        in: query\n        name: sendNotifications\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AclRule'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AclRule'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      tags:\n      - acl\n    put:\n      description: Updates an access control rule.\n      operationId: calendar.acl.update\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      - description: ACL rule identifier.\n        in: path\n        name: ruleId\n        required: true\n        schema:\n          type: string\n      - description: Whether to send notifications about the calendar sharing change.\n          Note that there are no notifications on access removal. Optional. The default\n          is True.\n        in: query\n        name: sendNotifications\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AclRule'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AclRule'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      tags:\n      - acl\n  /calendars/{calendarId}/clear:\n    parameters:\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/userIp'\n    post:\n      description: Clears a primary calendar. This operation deletes all events associated\n        with the primary calendar of an account.\n      operationId: calendar.calendars.clear\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      tags:\n      - calendars\n  /calendars/{calendarId}/events:\n    get:\n      description: Returns events on the specified calendar.\n      operationId: calendar.events.list\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      - description: Deprecated and ignored. A value will always be returned in the\n          email field for the organizer, creator and attendees, even if no real email\n          address is available (i.e. a generated, non-working value will be provided).\n        in: query\n        name: alwaysIncludeEmail\n        schema:\n          type: boolean\n      - description: Specifies event ID in the iCalendar format to be included in\n          the response. Optional.\n        in: query\n        name: iCalUID\n        schema:\n          type: string\n      - description: The maximum number of attendees to include in the response. If\n          there are more than the specified number of attendees, only the participant\n          is returned. Optional.\n        in: query\n        name: maxAttendees\n        schema:\n          minimum: 1\n          type: integer\n      - description: Maximum number of events returned on one result page. The number\n          of events in the resulting page may be less than this value, or none at\n          all, even if there are more events matching the query. Incomplete pages\n          can be detected by a non-empty nextPageToken field in the response. By default\n          the value is 250 events. The page size can never be larger than 2500 events.\n          Optional.\n        in: query\n        name: maxResults\n        schema:\n          minimum: 1\n          type: integer\n      - description: The order of the events returned in the result. Optional. The\n          default is an unspecified, stable order.\n        in: query\n        name: orderBy\n        schema:\n          enum:\n          - startTime\n          - updated\n          type: string\n      - description: Token specifying which result page to return. Optional.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      - description: Extended properties constraint specified as propertyName=value.\n          Matches only private properties. This parameter might be repeated multiple\n          times to return events that match all given constraints.\n        explode: true\n        in: query\n        name: privateExtendedProperty\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Free text search terms to find events that match these terms\n          in any field, except for extended properties. Optional.\n        in: query\n        name: q\n        schema:\n          type: string\n      - description: Extended properties constraint specified as propertyName=value.\n          Matches only shared properties. This parameter might be repeated multiple\n          times to return events that match all given constraints.\n        explode: true\n        in: query\n        name: sharedExtendedProperty\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Whether to include deleted events (with status equals \"cancelled\")\n          in the result. Cancelled instances of recurring events (but not the underlying\n          recurring event) will still be included if showDeleted and singleEvents\n          are both False. If showDeleted and singleEvents are both True, only single\n          instances of deleted events (but not the underlying recurring events) are\n          returned. Optional. The default is False.\n        in: query\n        name: showDeleted\n        schema:\n          type: boolean\n      - description: Whether to include hidden invitations in the result. Optional.\n          The default is False.\n        in: query\n        name: showHiddenInvitations\n        schema:\n          type: boolean\n      - description: Whether to expand recurring events into instances and only return\n          single one-off events and instances of recurring events, but not the underlying\n          recurring events themselves. Optional. The default is False.\n        in: query\n        name: singleEvents\n        schema:\n          type: boolean\n      - description: \"Token obtained from the nextSyncToken field returned on the\\\n          \\ last page of results from the previous list request. It makes the result\\\n          \\ of this list request contain only entries that have changed since then.\\\n          \\ All events deleted since the previous list request will always be in the\\\n          \\ result set and it is not allowed to set showDeleted to False.\\nThere are\\\n          \\ several query parameters that cannot be specified together with nextSyncToken\\\n          \\ to ensure consistency of the client state.\\n\\nThese are: \\n- iCalUID \\n\\\n          - orderBy \\n- privateExtendedProperty \\n- q \\n- sharedExtendedProperty \\n\\\n          - timeMin \\n- timeMax \\n- updatedMin If the syncToken expires, the server\\\n          \\ will respond with a 410 GONE response code and the client should clear\\\n          \\ its storage and perform a full synchronization without any syncToken.\\n\\\n          Learn more about incremental synchronization.\\nOptional. The default is\\\n          \\ to return all entries.\"\n        in: query\n        name: syncToken\n        schema:\n          type: string\n      - description: Upper bound (exclusive) for an event's start time to filter by.\n          Optional. The default is not to filter by start time. Must be an RFC3339\n          timestamp with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00,\n          2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If timeMin\n          is set, timeMax must be greater than timeMin.\n        in: query\n        name: timeMax\n        schema:\n          type: string\n      - description: Lower bound (exclusive) for an event's end time to filter by.\n          Optional. The default is not to filter by end time. Must be an RFC3339 timestamp\n          with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00,\n          2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If timeMax\n          is set, timeMin must be smaller than timeMax.\n        in: query\n        name: timeMin\n        schema:\n          type: string\n      - description: Time zone used in the response. Optional. The default is the\n          time zone of the calendar.\n        in: query\n        name: timeZone\n        schema:\n          type: string\n      - description: Lower bound for an event's last modification time (as a RFC3339\n          timestamp) to filter by. When specified, entries deleted since this time\n          will always be included regardless of showDeleted. Optional. The default\n          is not to filter by last modification time.\n        in: query\n        name: updatedMin\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Events'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.events\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.events\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.events.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.events.readonly\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.readonly\n      tags:\n      - events\n    parameters:\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/userIp'\n    post:\n      description: Creates an event.\n      operationId: calendar.events.insert\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      - description: Version number of conference data supported by the API client.\n          Version 0 assumes no conference data support and ignores conference data\n          in the event's body. Version 1 enables support for copying of ConferenceData\n          as well as for creating new conferences using the createRequest field of\n          conferenceData. The default is 0.\n        in: query\n        name: conferenceDataVersion\n        schema:\n          maximum: 1\n          minimum: 0\n          type: integer\n      - description: The maximum number of attendees to include in the response. If\n          there are more than the specified number of attendees, only the participant\n          is returned. Optional.\n        in: query\n        name: maxAttendees\n        schema:\n          minimum: 1\n          type: integer\n      - description: 'Deprecated. Please use sendUpdates instead.\n\n\n          Whether to send notifications about the creation of the new event. Note\n          that some emails might still be sent even if you set the value to false.\n          The default is false.'\n        in: query\n        name: sendNotifications\n        schema:\n          type: boolean\n      - description: Whether to send notifications about the creation of the new event.\n          Note that some emails might still be sent. The default is false.\n        in: query\n        name: sendUpdates\n        schema:\n          enum:\n          - all\n          - externalOnly\n          - none\n          type: string\n      - description: Whether API client performing operation supports event attachments.\n          Optional. The default is False.\n        in: query\n        name: supportsAttachments\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Event'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Event'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.events\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.events\n      tags:\n      - events\n  /calendars/{calendarId}/events/import:\n    parameters:\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/userIp'\n    post:\n      description: Imports an event. This operation is used to add a private copy\n        of an existing event to a calendar.\n      operationId: calendar.events.import\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      - description: Version number of conference data supported by the API client.\n          Version 0 assumes no conference data support and ignores conference data\n          in the event's body. Version 1 enables support for copying of ConferenceData\n          as well as for creating new conferences using the createRequest field of\n          conferenceData. The default is 0.\n        in: query\n        name: conferenceDataVersion\n        schema:\n          maximum: 1\n          minimum: 0\n          type: integer\n      - description: Whether API client performing operation supports event attachments.\n          Optional. The default is False.\n        in: query\n        name: supportsAttachments\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Event'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Event'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.events\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.events\n      tags:\n      - events\n  /calendars/{calendarId}/events/quickAdd:\n    parameters:\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/userIp'\n    post:\n      description: Creates an event based on a simple text string.\n      operationId: calendar.events.quickAdd\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      - description: The text describing the event to be created.\n        in: query\n        name: text\n        required: true\n        schema:\n          type: string\n      - description: 'Deprecated. Please use sendUpdates instead.\n\n\n          Whether to send notifications about the creation of the event. Note that\n          some emails might still be sent even if you set the value to false. The\n          default is false.'\n        in: query\n        name: sendNotifications\n        schema:\n          type: boolean\n      - description: Guests who should receive notifications about the creation of\n          the new event.\n        in: query\n        name: sendUpdates\n        schema:\n          enum:\n          - all\n          - externalOnly\n          - none\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Event'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.events\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.events\n      tags:\n      - events\n  /calendars/{calendarId}/events/watch:\n    parameters:\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/userIp'\n    post:\n      description: Watch for changes to Events resources.\n      operationId: calendar.events.watch\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      - description: Deprecated and ignored. A value will always be returned in the\n          email field for the organizer, creator and attendees, even if no real email\n          address is available (i.e. a generated, non-working value will be provided).\n        in: query\n        name: alwaysIncludeEmail\n        schema:\n          type: boolean\n      - description: Specifies event ID in the iCalendar format to be included in\n          the response. Optional.\n        in: query\n        name: iCalUID\n        schema:\n          type: string\n      - description: The maximum number of attendees to include in the response. If\n          there are more than the specified number of attendees, only the participant\n          is returned. Optional.\n        in: query\n        name: maxAttendees\n        schema:\n          minimum: 1\n          type: integer\n      - description: Maximum number of events returned on one result page. The number\n          of events in the resulting page may be less than this value, or none at\n          all, even if there are more events matching the query. Incomplete pages\n          can be detected by a non-empty nextPageToken field in the response. By default\n          the value is 250 events. The page size can never be larger than 2500 events.\n          Optional.\n        in: query\n        name: maxResults\n        schema:\n          minimum: 1\n          type: integer\n      - description: The order of the events returned in the result. Optional. The\n          default is an unspecified, stable order.\n        in: query\n        name: orderBy\n        schema:\n          enum:\n          - startTime\n          - updated\n          type: string\n      - description: Token specifying which result page to return. Optional.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      - description: Extended properties constraint specified as propertyName=value.\n          Matches only private properties. This parameter might be repeated multiple\n          times to return events that match all given constraints.\n        explode: true\n        in: query\n        name: privateExtendedProperty\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Free text search terms to find events that match these terms\n          in any field, except for extended properties. Optional.\n        in: query\n        name: q\n        schema:\n          type: string\n      - description: Extended properties constraint specified as propertyName=value.\n          Matches only shared properties. This parameter might be repeated multiple\n          times to return events that match all given constraints.\n        explode: true\n        in: query\n        name: sharedExtendedProperty\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Whether to include deleted events (with status equals \"cancelled\")\n          in the result. Cancelled instances of recurring events (but not the underlying\n          recurring event) will still be included if showDeleted and singleEvents\n          are both False. If showDeleted and singleEvents are both True, only single\n          instances of deleted events (but not the underlying recurring events) are\n          returned. Optional. The default is False.\n        in: query\n        name: showDeleted\n        schema:\n          type: boolean\n      - description: Whether to include hidden invitations in the result. Optional.\n          The default is False.\n        in: query\n        name: showHiddenInvitations\n        schema:\n          type: boolean\n      - description: Whether to expand recurring events into instances and only return\n          single one-off events and instances of recurring events, but not the underlying\n          recurring events themselves. Optional. The default is False.\n        in: query\n        name: singleEvents\n        schema:\n          type: boolean\n      - description: \"Token obtained from the nextSyncToken field returned on the\\\n          \\ last page of results from the previous list request. It makes the result\\\n          \\ of this list request contain only entries that have changed since then.\\\n          \\ All events deleted since the previous list request will always be in the\\\n          \\ result set and it is not allowed to set showDeleted to False.\\nThere are\\\n          \\ several query parameters that cannot be specified together with nextSyncToken\\\n          \\ to ensure consistency of the client state.\\n\\nThese are: \\n- iCalUID \\n\\\n          - orderBy \\n- privateExtendedProperty \\n- q \\n- sharedExtendedProperty \\n\\\n          - timeMin \\n- timeMax \\n- updatedMin If the syncToken expires, the server\\\n          \\ will respond with a 410 GONE response code and the client should clear\\\n          \\ its storage and perform a full synchronization without any syncToken.\\n\\\n          Learn more about incremental synchronization.\\nOptional. The default is\\\n          \\ to return all entries.\"\n        in: query\n        name: syncToken\n        schema:\n          type: string\n      - description: Upper bound (exclusive) for an event's start time to filter by.\n          Optional. The default is not to filter by start time. Must be an RFC3339\n          timestamp with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00,\n          2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If timeMin\n          is set, timeMax must be greater than timeMin.\n        in: query\n        name: timeMax\n        schema:\n          type: string\n      - description: Lower bound (exclusive) for an event's end time to filter by.\n          Optional. The default is not to filter by end time. Must be an RFC3339 timestamp\n          with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00,\n          2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If timeMax\n          is set, timeMin must be smaller than timeMax.\n        in: query\n        name: timeMin\n        schema:\n          type: string\n      - description: Time zone used in the response. Optional. The default is the\n          time zone of the calendar.\n        in: query\n        name: timeZone\n        schema:\n          type: string\n      - description: Lower bound for an event's last modification time (as a RFC3339\n          timestamp) to filter by. When specified, entries deleted since this time\n          will always be included regardless of showDeleted. Optional. The default\n          is not to filter by last modification time.\n        in: query\n        name: updatedMin\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Channel'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Channel'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.events\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.events\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.events.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.events.readonly\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.readonly\n      tags:\n      - events\n  /calendars/{calendarId}/events/{eventId}:\n    delete:\n      description: Deletes an event.\n      operationId: calendar.events.delete\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      - description: Event identifier.\n        in: path\n        name: eventId\n        required: true\n        schema:\n          type: string\n      - description: 'Deprecated. Please use sendUpdates instead.\n\n\n          Whether to send notifications about the deletion of the event. Note that\n          some emails might still be sent even if you set the value to false. The\n          default is false.'\n        in: query\n        name: sendNotifications\n        schema:\n          type: boolean\n      - description: Guests who should receive notifications about the deletion of\n          the event.\n        in: query\n        name: sendUpdates\n        schema:\n          enum:\n          - all\n          - externalOnly\n          - none\n          type: string\n      responses:\n        '200':\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.events\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.events\n      tags:\n      - events\n    get:\n      description: Returns an event.\n      operationId: calendar.events.get\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      - description: Event identifier.\n        in: path\n        name: eventId\n        required: true\n        schema:\n          type: string\n      - description: Deprecated and ignored. A value will always be returned in the\n          email field for the organizer, creator and attendees, even if no real email\n          address is available (i.e. a generated, non-working value will be provided).\n        in: query\n        name: alwaysIncludeEmail\n        schema:\n          type: boolean\n      - description: The maximum number of attendees to include in the response. If\n          there are more than the specified number of attendees, only the participant\n          is returned. Optional.\n        in: query\n        name: maxAttendees\n        schema:\n          minimum: 1\n          type: integer\n      - description: Time zone used in the response. Optional. The default is the\n          time zone of the calendar.\n        in: query\n        name: timeZone\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Event'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.events\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.events\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.events.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.events.readonly\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.readonly\n      tags:\n      - events\n    parameters:\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/userIp'\n    patch:\n      description: Updates an event. This method supports patch semantics.\n      operationId: calendar.events.patch\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      - description: Event identifier.\n        in: path\n        name: eventId\n        required: true\n        schema:\n          type: string\n      - description: Deprecated and ignored. A value will always be returned in the\n          email field for the organizer, creator and attendees, even if no real email\n          address is available (i.e. a generated, non-working value will be provided).\n        in: query\n        name: alwaysIncludeEmail\n        schema:\n          type: boolean\n      - description: Version number of conference data supported by the API client.\n          Version 0 assumes no conference data support and ignores conference data\n          in the event's body. Version 1 enables support for copying of ConferenceData\n          as well as for creating new conferences using the createRequest field of\n          conferenceData. The default is 0.\n        in: query\n        name: conferenceDataVersion\n        schema:\n          maximum: 1\n          minimum: 0\n          type: integer\n      - description: The maximum number of attendees to include in the response. If\n          there are more than the specified number of attendees, only the participant\n          is returned. Optional.\n        in: query\n        name: maxAttendees\n        schema:\n          minimum: 1\n          type: integer\n      - description: 'Deprecated. Please use sendUpdates instead.\n\n\n          Whether to send notifications about the event update (for example, description\n          changes, etc.). Note that some emails might still be sent even if you set\n          the value to false. The default is false.'\n        in: query\n        name: sendNotifications\n        schema:\n          type: boolean\n      - description: Guests who should receive notifications about the event update\n          (for example, title changes, etc.).\n        in: query\n        name: sendUpdates\n        schema:\n          enum:\n          - all\n          - externalOnly\n          - none\n          type: string\n      - description: Whether API client performing operation supports event attachments.\n          Optional. The default is False.\n        in: query\n        name: supportsAttachments\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Event'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Event'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.events\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.events\n      tags:\n      - events\n    put:\n      description: Updates an event.\n      operationId: calendar.events.update\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      - description: Event identifier.\n        in: path\n        name: eventId\n        required: true\n        schema:\n          type: string\n      - description: Deprecated and ignored. A value will always be returned in the\n          email field for the organizer, creator and attendees, even if no real email\n          address is available (i.e. a generated, non-working value will be provided).\n        in: query\n        name: alwaysIncludeEmail\n        schema:\n          type: boolean\n      - description: Version number of conference data supported by the API client.\n          Version 0 assumes no conference data support and ignores conference data\n          in the event's body. Version 1 enables support for copying of ConferenceData\n          as well as for creating new conferences using the createRequest field of\n          conferenceData. The default is 0.\n        in: query\n        name: conferenceDataVersion\n        schema:\n          maximum: 1\n          minimum: 0\n          type: integer\n      - description: The maximum number of attendees to include in the response. If\n          there are more than the specified number of attendees, only the participant\n          is returned. Optional.\n        in: query\n        name: maxAttendees\n        schema:\n          minimum: 1\n          type: integer\n      - description: 'Deprecated. Please use sendUpdates instead.\n\n\n          Whether to send notifications about the event update (for example, description\n          changes, etc.). Note that some emails might still be sent even if you set\n          the value to false. The default is false.'\n        in: query\n        name: sendNotifications\n        schema:\n          type: boolean\n      - description: Guests who should receive notifications about the event update\n          (for example, title changes, etc.).\n        in: query\n        name: sendUpdates\n        schema:\n          enum:\n          - all\n          - externalOnly\n          - none\n          type: string\n      - description: Whether API client performing operation supports event attachments.\n          Optional. The default is False.\n        in: query\n        name: supportsAttachments\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Event'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Event'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.events\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.events\n      tags:\n      - events\n  /calendars/{calendarId}/events/{eventId}/instances:\n    get:\n      description: Returns instances of the specified recurring event.\n      operationId: calendar.events.instances\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      - description: Recurring event identifier.\n        in: path\n        name: eventId\n        required: true\n        schema:\n          type: string\n      - description: Deprecated and ignored. A value will always be returned in the\n          email field for the organizer, creator and attendees, even if no real email\n          address is available (i.e. a generated, non-working value will be provided).\n        in: query\n        name: alwaysIncludeEmail\n        schema:\n          type: boolean\n      - description: The maximum number of attendees to include in the response. If\n          there are more than the specified number of attendees, only the participant\n          is returned. Optional.\n        in: query\n        name: maxAttendees\n        schema:\n          minimum: 1\n          type: integer\n      - description: Maximum number of events returned on one result page. By default\n          the value is 250 events. The page size can never be larger than 2500 events.\n          Optional.\n        in: query\n        name: maxResults\n        schema:\n          minimum: 1\n          type: integer\n      - description: The original start time of the instance in the result. Optional.\n        in: query\n        name: originalStart\n        schema:\n          type: string\n      - description: Token specifying which result page to return. Optional.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      - description: Whether to include deleted events (with status equals \"cancelled\")\n          in the result. Cancelled instances of recurring events will still be included\n          if singleEvents is False. Optional. The default is False.\n        in: query\n        name: showDeleted\n        schema:\n          type: boolean\n      - description: Upper bound (exclusive) for an event's start time to filter by.\n          Optional. The default is not to filter by start time. Must be an RFC3339\n          timestamp with mandatory time zone offset.\n        in: query\n        name: timeMax\n        schema:\n          type: string\n      - description: Lower bound (inclusive) for an event's end time to filter by.\n          Optional. The default is not to filter by end time. Must be an RFC3339 timestamp\n          with mandatory time zone offset.\n        in: query\n        name: timeMin\n        schema:\n          type: string\n      - description: Time zone used in the response. Optional. The default is the\n          time zone of the calendar.\n        in: query\n        name: timeZone\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Events'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.events\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.events\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.events.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.events.readonly\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.readonly\n      tags:\n      - events\n    parameters:\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/userIp'\n  /calendars/{calendarId}/events/{eventId}/move:\n    parameters:\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/userIp'\n    post:\n      description: Moves an event to another calendar, i.e. changes an event's organizer.\n      operationId: calendar.events.move\n      parameters:\n      - description: Calendar identifier of the source calendar where the event currently\n          is on.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      - description: Event identifier.\n        in: path\n        name: eventId\n        required: true\n        schema:\n          type: string\n      - description: Calendar identifier of the target calendar where the event is\n          to be moved to.\n        in: query\n        name: destination\n        required: true\n        schema:\n          type: string\n      - description: 'Deprecated. Please use sendUpdates instead.\n\n\n          Whether to send notifications about the change of the event''s organizer.\n          Note that some emails might still be sent even if you set the value to false.\n          The default is false.'\n        in: query\n        name: sendNotifications\n        schema:\n          type: boolean\n      - description: Guests who should receive notifications about the change of the\n          event's organizer.\n        in: query\n        name: sendUpdates\n        schema:\n          enum:\n          - all\n          - externalOnly\n          - none\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Event'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.events\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.events\n      tags:\n      - events\n  /channels/stop:\n    parameters:\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/userIp'\n    post:\n      description: Stop watching resources through this channel\n      operationId: calendar.channels.stop\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Channel'\n      responses:\n        '200':\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.events\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.events\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.events.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.events.readonly\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.readonly\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.settings.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.settings.readonly\n      tags:\n      - channels\n  /colors:\n    get:\n      description: Returns the color definitions for calendars and events.\n      operationId: calendar.colors.get\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Colors'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.readonly\n      tags:\n      - colors\n    parameters:\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/userIp'\n  /freeBusy:\n    parameters:\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/userIp'\n    post:\n      description: Returns free/busy information for a set of calendars.\n      operationId: calendar.freebusy.query\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FreeBusyRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FreeBusyResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.readonly\n      tags:\n      - freebusy\n  /users/me/calendarList:\n    get:\n      description: Returns the calendars on the user's calendar list.\n      operationId: calendar.calendarList.list\n      parameters:\n      - description: Maximum number of entries returned on one result page. By default\n          the value is 100 entries. The page size can never be larger than 250 entries.\n          Optional.\n        in: query\n        name: maxResults\n        schema:\n          minimum: 1\n          type: integer\n      - description: The minimum access role for the user in the returned entries.\n          Optional. The default is no restriction.\n        in: query\n        name: minAccessRole\n        schema:\n          enum:\n          - freeBusyReader\n          - owner\n          - reader\n          - writer\n          type: string\n      - description: Token specifying which result page to return. Optional.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      - description: Whether to include deleted calendar list entries in the result.\n          Optional. The default is False.\n        in: query\n        name: showDeleted\n        schema:\n          type: boolean\n      - description: Whether to show hidden entries. Optional. The default is False.\n        in: query\n        name: showHidden\n        schema:\n          type: boolean\n      - description: 'Token obtained from the nextSyncToken field returned on the\n          last page of results from the previous list request. It makes the result\n          of this list request contain only entries that have changed since then.\n          If only read-only fields such as calendar properties or ACLs have changed,\n          the entry won''t be returned. All entries deleted and hidden since the previous\n          list request will always be in the result set and it is not allowed to set\n          showDeleted neither showHidden to False.\n\n          To ensure client state consistency minAccessRole query parameter cannot\n          be specified together with nextSyncToken.\n\n          If the syncToken expires, the server will respond with a 410 GONE response\n          code and the client should clear its storage and perform a full synchronization\n          without any syncToken.\n\n          Learn more about incremental synchronization.\n\n          Optional. The default is to return all entries.'\n        in: query\n        name: syncToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalendarList'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.readonly\n      tags:\n      - calendarList\n    parameters:\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/userIp'\n    post:\n      description: Inserts an existing calendar into the user's calendar list.\n      operationId: calendar.calendarList.insert\n      parameters:\n      - description: Whether to use the foregroundColor and backgroundColor fields\n          to write the calendar colors (RGB). If this feature is used, the index-based\n          colorId field will be set to the best matching option automatically. Optional.\n          The default is False.\n        in: query\n        name: colorRgbFormat\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CalendarListEntry'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalendarListEntry'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      tags:\n      - calendarList\n  /users/me/calendarList/watch:\n    parameters:\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/userIp'\n    post:\n      description: Watch for changes to CalendarList resources.\n      operationId: calendar.calendarList.watch\n      parameters:\n      - description: Maximum number of entries returned on one result page. By default\n          the value is 100 entries. The page size can never be larger than 250 entries.\n          Optional.\n        in: query\n        name: maxResults\n        schema:\n          minimum: 1\n          type: integer\n      - description: The minimum access role for the user in the returned entries.\n          Optional. The default is no restriction.\n        in: query\n        name: minAccessRole\n        schema:\n          enum:\n          - freeBusyReader\n          - owner\n          - reader\n          - writer\n          type: string\n      - description: Token specifying which result page to return. Optional.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      - description: Whether to include deleted calendar list entries in the result.\n          Optional. The default is False.\n        in: query\n        name: showDeleted\n        schema:\n          type: boolean\n      - description: Whether to show hidden entries. Optional. The default is False.\n        in: query\n        name: showHidden\n        schema:\n          type: boolean\n      - description: 'Token obtained from the nextSyncToken field returned on the\n          last page of results from the previous list request. It makes the result\n          of this list request contain only entries that have changed since then.\n          If only read-only fields such as calendar properties or ACLs have changed,\n          the entry won''t be returned. All entries deleted and hidden since the previous\n          list request will always be in the result set and it is not allowed to set\n          showDeleted neither showHidden to False.\n\n          To ensure client state consistency minAccessRole query parameter cannot\n          be specified together with nextSyncToken.\n\n          If the syncToken expires, the server will respond with a 410 GONE response\n          code and the client should clear its storage and perform a full synchronization\n          without any syncToken.\n\n          Learn more about incremental synchronization.\n\n          Optional. The default is to return all entries.'\n        in: query\n        name: syncToken\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Channel'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Channel'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.readonly\n      tags:\n      - calendarList\n  /users/me/calendarList/{calendarId}:\n    delete:\n      description: Removes a calendar from the user's calendar list.\n      operationId: calendar.calendarList.delete\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      tags:\n      - calendarList\n    get:\n      description: Returns a calendar from the user's calendar list.\n      operationId: calendar.calendarList.get\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalendarListEntry'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.readonly\n      tags:\n      - calendarList\n    parameters:\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/userIp'\n    patch:\n      description: Updates an existing calendar on the user's calendar list. This\n        method supports patch semantics.\n      operationId: calendar.calendarList.patch\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      - description: Whether to use the foregroundColor and backgroundColor fields\n          to write the calendar colors (RGB). If this feature is used, the index-based\n          colorId field will be set to the best matching option automatically. Optional.\n          The default is False.\n        in: query\n        name: colorRgbFormat\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CalendarListEntry'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalendarListEntry'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      tags:\n      - calendarList\n    put:\n      description: Updates an existing calendar on the user's calendar list.\n      operationId: calendar.calendarList.update\n      parameters:\n      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list\n          method. If you want to access the primary calendar of the currently logged\n          in user, use the \"primary\" keyword.\n        in: path\n        name: calendarId\n        required: true\n        schema:\n          type: string\n      - description: Whether to use the foregroundColor and backgroundColor fields\n          to write the calendar colors (RGB). If this feature is used, the index-based\n          colorId field will be set to the best matching option automatically. Optional.\n          The default is False.\n        in: query\n        name: colorRgbFormat\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CalendarListEntry'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CalendarListEntry'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      tags:\n      - calendarList\n  /users/me/settings:\n    get:\n      description: Returns all user settings for the authenticated user.\n      operationId: calendar.settings.list\n      parameters:\n      - description: Maximum number of entries returned on one result page. By default\n          the value is 100 entries. The page size can never be larger than 250 entries.\n          Optional.\n        in: query\n        name: maxResults\n        schema:\n          minimum: 1\n          type: integer\n      - description: Token specifying which result page to return. Optional.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      - description: 'Token obtained from the nextSyncToken field returned on the\n          last page of results from the previous list request. It makes the result\n          of this list request contain only entries that have changed since then.\n\n          If the syncToken expires, the server will respond with a 410 GONE response\n          code and the client should clear its storage and perform a full synchronization\n          without any syncToken.\n\n          Learn more about incremental synchronization.\n\n          Optional. The default is to return all entries.'\n        in: query\n        name: syncToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Settings'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.readonly\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.settings.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.settings.readonly\n      tags:\n      - settings\n    parameters:\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/userIp'\n  /users/me/settings/watch:\n    parameters:\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/userIp'\n    post:\n      description: Watch for changes to Settings resources.\n      operationId: calendar.settings.watch\n      parameters:\n      - description: Maximum number of entries returned on one result page. By default\n          the value is 100 entries. The page size can never be larger than 250 entries.\n          Optional.\n        in: query\n        name: maxResults\n        schema:\n          minimum: 1\n          type: integer\n      - description: Token specifying which result page to return. Optional.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      - description: 'Token obtained from the nextSyncToken field returned on the\n          last page of results from the previous list request. It makes the result\n          of this list request contain only entries that have changed since then.\n\n          If the syncToken expires, the server will respond with a 410 GONE response\n          code and the client should clear its storage and perform a full synchronization\n          without any syncToken.\n\n          Learn more about incremental synchronization.\n\n          Optional. The default is to return all entries.'\n        in: query\n        name: syncToken\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Channel'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Channel'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.readonly\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.settings.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.settings.readonly\n      tags:\n      - settings\n  /users/me/settings/{setting}:\n    get:\n      description: Returns a single user setting.\n      operationId: calendar.settings.get\n      parameters:\n      - description: The id of the user setting.\n        in: path\n        name: setting\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Setting'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.readonly\n      - Oauth2:\n        - https://www.googleapis.com/auth/calendar.settings.readonly\n        Oauth2c:\n        - https://www.googleapis.com/auth/calendar.settings.readonly\n      tags:\n      - settings\n    parameters:\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/userIp'\nservers:\n- url: https://www.googleapis.com/calendar/v3\ntags:\n- name: acl\n- name: calendarList\n- name: calendars\n- name: channels\n- name: colors\n- name: events\n- name: freebusy\n- name: settings\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/googleapis.com/v0.1.2/services/calendar-v3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/googleapis.com/v0.1.2/services/calendar-v3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/calendars/{calendarId}/events/{eventId}/instances\": get: security: security \"Oauth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}