{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/gibahjoe/openapi-generator-dart"
		},
		"file": {
			"name": "openapi-spec.yaml",
			"size": 0,
			"path": "example/openapi-spec.yaml",
			"byteSize": 6709,
			"content": "openapi: 3.0.1\ninfo:\n  title: OpenAPI Petstore\n  description: This is a sample server Petstore server. For this sample, you can use\n    the api key `special-key` to test the authorization filters.\n  license:\n    name: Apache-2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  version: 1.0.0\nservers:\n  - url: http://petstore.swagger.io/v2\ntags:\n  - name: pet\n    description: Everything about your Pets\n  - name: store\n    description: Access to Petstore orders\n  - name: user\n    description: Operations about user\npaths:\n  /pet:\n    put:\n      tags:\n        - pet\n      summary: Update an existing pet\n      operationId: updatePet\n      requestBody:\n        description: Pet object that needs to be added to the store\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Pet'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Pet'\n        required: true\n      responses:\n        400:\n          description: Invalid ID supplied\n          content: {}\n        404:\n          description: Pet not found\n          content: {}\n        405:\n          description: Validation exception\n          content: {}\n      security:\n        - petstore_auth:\n            - write:pets\n            - read:pets\n      x-codegen-request-body-name: body\n    post:\n      tags:\n        - pet\n      summary: Add a new pet to the store\n      operationId: addPet\n      requestBody:\n        description: Pet object that needs to be added to the store\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Pet'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Pet'\n        required: true\n      responses:\n        405:\n          description: Invalid input\n          content: {}\n      security:\n        - petstore_auth:\n            - write:pets\n            - read:pets\n      x-codegen-request-body-name: body\ncomponents:\n  schemas:\n    Order:\n      title: Pet Order\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        petId:\n          type: integer\n          format: int64\n        quantity:\n          type: integer\n          format: int32\n        shipDate:\n          type: string\n          format: date-time\n        status:\n          type: string\n          description: Order Status\n          enum:\n            - placed\n            - approved\n            - delivered\n        complete:\n          type: boolean\n          default: false\n      description: An order for a pets from the pet store\n      xml:\n        name: Order\n    Category:\n      title: Pet category\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      description: A category for a pet\n      xml:\n        name: Category\n    User:\n      title: a User\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        username:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n        phone:\n          type: string\n        userStatus:\n          type: integer\n          description: User Status\n          format: int32\n      description: A User who is purchasing from the pet store\n      xml:\n        name: User\n    Tag:\n      title: Pet Tag\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      description: A tag for a pet\n      xml:\n        name: Tag\n    Pet:\n      title: a Pet\n      required:\n        - name\n        - photoUrls\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        category:\n          $ref: '#/components/schemas/Category'\n        name:\n          type: string\n          example: doggie\n        photoUrls:\n          type: array\n          xml:\n            name: photoUrl\n            wrapped: true\n          items:\n            type: string\n        tags:\n          type: array\n          xml:\n            name: tag\n            wrapped: true\n          items:\n            $ref: '#/components/schemas/Tag'\n        status:\n          type: string\n          description: pet status in the store\n          enum:\n            - available\n            - pending\n            - sold\n        types:\n          type: \"array\"\n          items:\n            type: \"string\"\n            enum:\n              - \"TRANSFER_FROM\"\n              - \"TRANSFER_TO\"\n              - \"MINT\"\n              - \"BURN\"\n              - \"MAKE_BID\"\n              - \"GET_BID\"\n              - \"LIST\"\n              - \"BUY\"\n              - \"SELL\"\n      description: A pet for sale in the pet store\n      xml:\n        name: Pet\n    Patri:\n      title: Patri\n      required:\n        - name\n        - photoUrls\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        category:\n          $ref: '#/components/schemas/Category'\n        name:\n          type: string\n          example: doggie\n        photoUrls:\n          type: array\n          xml:\n            name: photoUrl\n            wrapped: true\n          items:\n            type: string\n        tags:\n          type: array\n          xml:\n            name: tag\n            wrapped: true\n          items:\n            $ref: '#/components/schemas/Tag'\n        status:\n          type: string\n          description: pet status in the store\n          enum:\n            - available\n            - pending\n            - sold\n        types:\n          type: \"array\"\n          items:\n            type: \"string\"\n            enum:\n              - \"TRANSFER_FROM\"\n              - \"TRANSFER_TO\"\n              - \"MINT\"\n              - \"BURN\"\n              - \"MAKE_BID\"\n              - \"GET_BID\"\n              - \"LIST\"\n              - \"BUY\"\n              - \"SELL\"\n      description: A pet for sale in the pet store\n      xml:\n        name: Pet\n    ApiResponse:\n      title: An uploaded response\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        type:\n          type: string\n        message:\n          type: string\n      description: Describes the result of uploading an image resource\n  securitySchemes:\n    petstore_auth:\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: http://petstore.swagger.io/api/oauth/dialog\n          scopes:\n            write:pets: modify pets in your account\n            read:pets: read your pets\n    api_key:\n      type: apiKey\n      name: api_key\n      in: header\n",
			"canonicalURL": "/github.com/gibahjoe/openapi-generator-dart@88a0693e48ecd7b1028e24f93cead0d22fbdc5f6/-/blob/example/openapi-spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/gibahjoe/openapi-generator-dart/blob/88a0693e48ecd7b1028e24f93cead0d22fbdc5f6/example/openapi-spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/pet\": put: security: security \"petstore_auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}