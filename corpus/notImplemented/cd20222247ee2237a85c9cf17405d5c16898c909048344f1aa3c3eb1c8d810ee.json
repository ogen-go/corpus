{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/networknt/model-config"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "rest/openapi/test002/openapi.yaml",
			"byteSize": 5312,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Swagger ExecFlow\n  license:\n    name: MIT\nservers:\n  - url: 'http://execflow.swagger.io/v1'\npaths:\n  /control:\n    get:\n      summary: List all services\n      operationId: listAllServices\n      tags:\n        - services\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max  5)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      security:\n        - execflow_auth:\n            - 'read:services'\n      responses:\n        '200':\n          description: An paged array of services\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ServiceCfg'\n              example:\n                - id: 1\n                  name: Input850QueueService\n                  tag: InputQueueService\n                - id: 2\n                  name: Input850FileService\n                  tag: InputFileService\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/control/{serviceName}':\n    get:\n      summary: List one services\n      operationId: listOneServices\n      tags:\n        - services\n      parameters:\n        - name: serviceName\n          in: path\n          description: Service name\n          required: true\n          schema:\n            type: string\n      security:\n        - execflow_auth:\n            - 'read:services'\n      responses:\n        '200':\n          description: Single service\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ServiceCfg'\n              example:\n                - id: 1\n                  name: Input850QueueService\n                  tag: InputQueueService\n                - id: 2\n                  name: Input850FileService\n                  tag: InputFileService\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      summary: Create/start a services\n      operationId: startServices\n      parameters:\n        - name: serviceName\n          in: path\n          description: Service name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Services to be started\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ServiceCfg'\n      tags:\n        - services\n      security:\n        - execflow_auth:\n            - 'read:services'\n            - 'write:services'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      summary: Update service\n      operationId: updateServices\n      parameters:\n        - name: serviceName\n          in: path\n          description: Service name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Start, stop, restart service\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ServiceCfg'\n      tags:\n        - services\n      security:\n        - execflow_auth:\n            - 'read:services'\n            - 'write:services'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\ncomponents:\n  securitySchemes:\n    execflow_auth:\n      type: oauth2\n      description: This API uses OAuth 2 with the client credential grant flow.\n      flows:\n        clientCredentials:\n          tokenUrl: 'https://localhost:6882/token'\n          scopes:\n            'write:services': modify pets in your account\n            'read:services': read your pets\n\n  schemas:\n    ServiceMap:\n      type: object\n      properties:\n        keyValue:\n          type: string\n    ServiceCfg:\n      type: object\n      required:\n        - name\n        - service\n        - runLevel\n        - startOnBoot\n        - valueType\n      properties:\n        name:\n          type: string\n        service:\n          type: string\n        runLevel:\n          type: string\n        startOnBoot:\n          type: string\n        valueType:\n          type: string\n        map:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/ServiceMap'\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n",
			"canonicalURL": "/github.com/networknt/model-config@3fea561d7982c217c1d5d35c1193eac78a7fdcef/-/blob/rest/openapi/test002/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/networknt/model-config/blob/3fea561d7982c217c1d5d35c1193eac78a7fdcef/rest/openapi/test002/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/control\": get: security: security \"execflow_auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}