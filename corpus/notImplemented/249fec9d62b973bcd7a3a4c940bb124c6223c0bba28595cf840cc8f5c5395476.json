{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dnebing/vitamins"
		},
		"file": {
			"name": "rest-openapi.yaml",
			"size": 0,
			"path": "modules/headless-vitamins/headless-vitamins-impl/rest-openapi.yaml",
			"byteSize": 7343,
			"content": "components:\n  schemas:\n    Vitamin:\n      description: Contains all of the data for a single vitamin or mineral.\n      properties:\n        name:\n          description: The vitamin or mineral name.\n          type: string\n        id:\n          description: The vitamin or mineral internal ID.\n          type: string\n        chemicalNames:\n          description: The chemical names of the vitamin or mineral if it has some.\n          items:\n            type: string\n          type: array\n        properties:\n          description: The chemical properties of the vitamin or mineral if it has some.\n          items:\n            type: string\n          type: array\n        group:\n          description: The group the vitamin or mineral belongs to.\n          type: string\n        description:\n          description: The description of the vitamin or mineral.\n          type: string\n        articleId:\n          description: A journal articleId if there is a web content article for this vitamin.\n          type: string\n        type:\n          description: The type of the vitamin or mineral.\n          enum: [Vitamin, Mineral, Other]\n          type: string\n        attributes:\n          description: Health properties attributed to the vitamin or mineral.\n          items:\n            type: string\n          type: array\n        risks:\n          description: Risks associated with the vitamin or mineral.\n          items:\n            type: string\n          type: array\n        symptoms:\n          description: Symptoms associated with the vitamin or mineral deficiency.\n          items:\n            type: string\n          type: array\n        creator:\n          $ref: \"#/components/schemas/Creator\"\n      type: object\n    Creator:\n      description: Represents the user account of the content's creator/author. Properties follow the [creator](https://schema.org/creator) specification.\n      properties:\n        additionalName:\n          description: The author's additional name (e.g., middle name).\n          readOnly: true\n          type: string\n        familyName:\n          description: The author's surname.\n          readOnly: true\n          type: string\n        givenName:\n          description: The author's first name.\n          readOnly: true\n          type: string\n        id:\n          description: The author's ID.\n          format: int64\n          readOnly: true\n          type: integer\n        image:\n          description: A relative URL to the author's profile image.\n          format: uri\n          readOnly: true\n          type: string\n        name:\n          description: The author's full name.\n          readOnly: true\n          type: string\n        profileURL:\n          description: A relative URL to the author's user profile.\n          format: uri\n          readOnly: true\n          type: string\n      type: object\nopenapi: 3.0.1\ninfo:\n  title: \"Headless Vitamins\"\n  version: v1.0\n  description: \"API for accessing Vitamin details.\"\npaths:\n  \"/vitamins\":\n    get:\n      operationId: getVitaminsPage\n      tags: [\"Vitamin\"]\n      description: Retrieves the list of vitamins and minerals. Results can be paginated, filtered, searched, and sorted.\n      parameters:\n        - in: query\n          name: filter\n          schema:\n            type: string\n        - in: query\n          name: page\n          schema:\n            type: integer\n        - in: query\n          name: pageSize\n          schema:\n            type: integer\n        - in: query\n          name: search\n          schema:\n            type: string\n        - in: query\n          name: sort\n          schema:\n            type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Vitamin\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Vitamin\"\n                type: array\n    post:\n      operationId: postVitamin\n      tags: [\"Vitamin\"]\n      description: Create a new vitamin/mineral.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Vitamin\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/Vitamin\"\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Vitamin\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Vitamin\"\n  \"/vitamins/{vitaminId}\":\n    get:\n      operationId: getVitamin\n      tags: [\"Vitamin\"]\n      description: Retrieves the vitamin/mineral via its ID.\n      parameters:\n        - name: vitaminId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Vitamin\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Vitamin\"\n    put:\n      operationId: putVitamin\n      tags: [\"Vitamin\"]\n      description: Replaces the vitamin/mineral with the information sent in the request body. Any missing fields are deleted, unless they are required.\n      parameters:\n        - name: vitaminId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Vitamin\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/Vitamin\"\n      responses:\n        200:\n          description: Default Response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Vitamin\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Vitamin\"\n    patch:\n      operationId: patchVitamin\n      tags: [\"Vitamin\"]\n      description: Replaces the vitamin/mineral with the information sent in the request body. Any missing fields are deleted, unless they are required.\n      parameters:\n        - name: vitaminId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Vitamin\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/Vitamin\"\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Vitamin\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Vitamin\"\n    delete:\n      operationId: deleteVitamin\n      tags: [\"Vitamin\"]\n      description: Deletes the vitamin/mineral and returns a 204 if the operation succeeds.\n      parameters:\n        - name: vitaminId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: \"\"\n          content:\n            application/json: {}\n",
			"canonicalURL": "/github.com/dnebing/vitamins@55d52e3280212cb47e4733df767095e3ae4d573b/-/blob/modules/headless-vitamins/headless-vitamins-impl/rest-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dnebing/vitamins/blob/55d52e3280212cb47e4733df767095e3ae4d573b/modules/headless-vitamins/headless-vitamins-impl/rest-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/vitamins/{vitaminId}\": delete: responses: 204: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}