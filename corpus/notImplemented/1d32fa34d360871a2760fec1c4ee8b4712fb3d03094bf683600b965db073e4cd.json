{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/googleapis.com/firebaseml/v1beta2/openapi.yaml",
			"byteSize": 20122,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://firebaseml.googleapis.com/\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n    x-twitter: youtube\n  description: Access custom machine learning models hosted via Firebase ML.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Firebase ML API\n  version: v1beta2\n  x-apisguru-categories:\n    - analytics\n    - media\n  x-logo:\n    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg\n  x-origin:\n    - format: google\n      url: https://firebaseml.googleapis.com/$discovery/rest?version=v1beta2\n      version: v1\n  x-providerName: googleapis.com\n  x-serviceName: firebaseml\nexternalDocs:\n  url: https://firebase.google.com\ntags:\n  - name: projects\npaths:\n  \"/v1beta2/{name}\":\n    delete:\n      description: Deletes a model\n      operationId: firebaseml.projects.models.delete\n      parameters:\n        - description: Required. The name of the model to delete. The name must have the form `projects/{project_id}/models/{model_id}`\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\n    get:\n      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.\n      operationId: firebaseml.projects.operations.get\n      parameters:\n        - description: The name of the operation resource.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Operation\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    patch:\n      description: Updates a model. The longrunning operation will eventually return a Model.\n      operationId: firebaseml.projects.models.patch\n      parameters:\n        - description: The resource name of the Model. Model names have the form `projects/{project_id}/models/{model_id}` The name is ignored when creating a model.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The update mask\n          in: query\n          name: updateMask\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Model\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Operation\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\n  \"/v1beta2/{name}:download\":\n    get:\n      description: Gets Download information for a model. This is meant for downloading model resources onto devices. It gives very limited information about the model.\n      operationId: firebaseml.projects.models.download\n      parameters:\n        - description: Required. The name of the model to download. The name must have the form `projects/{project}/models/{model}`\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DownloadModelResponse\"\n          description: Successful response\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n  \"/v1beta2/{parent}/models\":\n    get:\n      description: Lists the models\n      operationId: firebaseml.projects.models.list\n      parameters:\n        - description: Required. The name of the parent to list models for. The parent must have the form `projects/{project_id}'\n          in: path\n          name: parent\n          required: true\n          schema:\n            type: string\n        - description: \"A filter for the list e.g. 'tags: abc' to list models which are tagged with \\\"abc\\\"\"\n          in: query\n          name: filter\n          schema:\n            type: string\n        - description: The maximum number of items to return\n          in: query\n          name: pageSize\n          schema:\n            type: integer\n        - description: The next_page_token value returned from a previous List request, if any.\n          in: query\n          name: pageToken\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListModelsResponse\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\n    parameters:\n      - $ref: \"#/components/parameters/_.xgafv\"\n      - $ref: \"#/components/parameters/access_token\"\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/callback\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/key\"\n      - $ref: \"#/components/parameters/oauth_token\"\n      - $ref: \"#/components/parameters/prettyPrint\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/upload_protocol\"\n      - $ref: \"#/components/parameters/uploadType\"\n    post:\n      description: Creates a model in Firebase ML. The longrunning operation will eventually return a Model\n      operationId: firebaseml.projects.models.create\n      parameters:\n        - description: Required. The parent project resource where the model is to be created. The parent must have the form `projects/{project_id}`\n          in: path\n          name: parent\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Model\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Operation\"\n          description: Successful response\n      security:\n        - Oauth2:\n            - https://www.googleapis.com/auth/cloud-platform\n          Oauth2c:\n            - https://www.googleapis.com/auth/cloud-platform\n      tags:\n        - projects\ncomponents:\n  parameters:\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        enum:\n          - \"1\"\n          - \"2\"\n        type: string\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        enum:\n          - json\n          - media\n          - proto\n        type: string\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n  schemas:\n    DownloadModelResponse:\n      description: The response for downloading a model to device.\n      properties:\n        downloadUri:\n          description: Output only. A download URI for the model/zip file.\n          readOnly: true\n          type: string\n        expireTime:\n          description: Output only. The time that the download URI link expires. If the link has expired, the REST call must be repeated.\n          format: google-datetime\n          readOnly: true\n          type: string\n        modelFormat:\n          description: Output only. The format of the model being downloaded.\n          enum:\n            - MODEL_FORMAT_UNSPECIFIED\n            - TFLITE\n          readOnly: true\n          type: string\n        sizeBytes:\n          description: Output only. The size of the file(s), if this information is available.\n          format: int64\n          readOnly: true\n          type: string\n      type: object\n    Empty:\n      description: \"A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }\"\n      properties: {}\n      type: object\n    ListModelsResponse:\n      description: The response for list models\n      properties:\n        models:\n          description: The list of models\n          items:\n            $ref: \"#/components/schemas/Model\"\n          type: array\n        nextPageToken:\n          description: Token to retrieve the next page of results, or empty if there are no more results in the list.\n          type: string\n      type: object\n    Model:\n      description: An ML model hosted in Firebase ML\n      properties:\n        activeOperations:\n          description: Output only. Lists operation ids associated with this model whose status is NOT done.\n          items:\n            $ref: \"#/components/schemas/Operation\"\n          readOnly: true\n          type: array\n        createTime:\n          description: Output only. Timestamp when this model was created in Firebase ML.\n          format: google-datetime\n          readOnly: true\n          type: string\n        displayName:\n          description: Required. The name of the model to create. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores(_) and ASCII digits 0-9. It must start with a letter.\n          type: string\n        etag:\n          description: Output only. See RFC7232 https://tools.ietf.org/html/rfc7232#section-2.3\n          readOnly: true\n          type: string\n        modelHash:\n          description: Output only. The model_hash will change if a new file is available for download.\n          readOnly: true\n          type: string\n        name:\n          description: The resource name of the Model. Model names have the form `projects/{project_id}/models/{model_id}` The name is ignored when creating a model.\n          type: string\n        state:\n          $ref: \"#/components/schemas/ModelState\"\n          description: State common to all model types. Includes publishing and validation information.\n        tags:\n          description: User defined tags which can be used to group/filter models during listing\n          items:\n            type: string\n          type: array\n        tfliteModel:\n          $ref: \"#/components/schemas/TfLiteModel\"\n          description: A TFLite Model\n        updateTime:\n          description: Output only. Timestamp when this model was updated in Firebase ML.\n          format: google-datetime\n          readOnly: true\n          type: string\n      type: object\n    ModelOperationMetadata:\n      description: This is returned in the longrunning operations for create/update.\n      properties:\n        basicOperationStatus:\n          enum:\n            - BASIC_OPERATION_STATUS_UNSPECIFIED\n            - BASIC_OPERATION_STATUS_UPLOADING\n            - BASIC_OPERATION_STATUS_VERIFYING\n          type: string\n        name:\n          description: The name of the model we are creating/updating The name must have the form `projects/{project_id}/models/{model_id}`\n          type: string\n      type: object\n    ModelState:\n      description: State common to all model types. Includes publishing and validation information.\n      properties:\n        published:\n          description: Indicates if this model has been published.\n          type: boolean\n        validationError:\n          $ref: \"#/components/schemas/Status\"\n          description: Output only. Indicates the latest validation error on the model if any. A model may have validation errors if there were problems during the model creation/update. e.g. in the case of a TfLiteModel, if a tflite model file was missing or in the wrong format. This field will be empty for valid models.\n          readOnly: true\n      type: object\n    Operation:\n      description: This resource represents a long-running operation that is the result of a network API call.\n      properties:\n        done:\n          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.\n          type: boolean\n        error:\n          $ref: \"#/components/schemas/Status\"\n          description: The error result of the operation in case of failure or cancellation.\n        metadata:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.\n          type: object\n        name:\n          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.\n          type: string\n        response:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type URL.\n          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.\n          type: object\n      type: object\n    Status:\n      description: \"The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).\"\n      properties:\n        code:\n          description: The status code, which should be an enum value of google.rpc.Code.\n          format: int32\n          type: integer\n        details:\n          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type URL.\n            type: object\n          type: array\n        message:\n          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.\n          type: string\n      type: object\n    TfLiteModel:\n      description: Information that is specific to TfLite models.\n      properties:\n        automlModel:\n          description: The AutoML model id referencing a model you created with the AutoML API. The name should have format 'projects//locations//models/' (This is the model resource name returned from the AutoML API)\n          type: string\n        gcsTfliteUri:\n          description: \"The TfLite file containing the model. (Stored in Google Cloud). The gcs_tflite_uri should have form: gs://some-bucket/some-model.tflite Note: If you update the file in the original location, it is necessary to call UpdateModel for ML to pick up and validate the updated file.\"\n          type: string\n        sizeBytes:\n          description: Output only. The size of the TFLite model\n          readOnly: true\n          type: string\n      type: object\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.\n      type: oauth2\n    Oauth2c:\n      description: Oauth 2.0 authorizationCode authentication\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n      type: oauth2\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/googleapis.com/firebaseml/v1beta2/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/googleapis.com/firebaseml/v1beta2/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1beta2/{name}\": get: security: security \"Oauth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}