{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Vizzuality/trase"
		},
		"file": {
			"name": "trase_public_api_1.0.oas3.yaml",
			"size": 0,
			"path": "doc/gh-pages/api/trase_public_api_1.0.oas3.yaml",
			"byteSize": 38117,
			"content": "openapi: 3.0.0\ninfo:\n  title: Trase Public API\n  version: \"1.0\"\n  contact:\n    name: Trase Public API\n    url: https://supplychains.trase.earth/\n    email: info@trase.earth\n  termsOfService: https://supplychains.trase.earth/terms-of-use.html\n  license:\n    name: MIT License\n  description: \u003e-\n    This is a first version of the public API for [Trase](http://supplychains.trase.earth).\n\n    # Introduction\n\n\n    The Trase Public API allows access to trade flow data of the forest risk commodities hosted in Traseâ€™s database. For a list of available commodities and country contexts please refer to the documentation on the Trase homepage: https://www.trase.earth/resources/\n\n\n    # Entities\n\n\n    The API will expose the following entities present in Trase:\n\n    1. attributes: quantitative and qualitative attributes associated with Trase data. These include, for example our flagship indicators for deforestation risk, along with other metrics relevant to social and environmental risk\n\n    2. commodities: the forest risk commodities covered by the Trase database\n\n    3. countries: source countries for commodities covered by the Trase database\n\n    4. flows: provides the list of nodes in a supply chain (path) from source to destination\n\n    5. nodes: provides entities participating in the supply chain. Each has a \"node type\" (see below), e.g. MUNICIPALITY, EXPORTER, but they are also grouped in the system by a more generic \"role\" as follows:\n\n        a. sources: source nodes, such as municipalities in Brazil or departments in Paraguay\n\n        b. traders: exporters or importers of commodities\n\n        c. destinations: destination nodes, such as importing countries\n    6. node types: the types of nodes at particular positions in supply chains per country / commodity combination\n\n\n    # Discovering node identifiers\n\n\n    A typical scenario for API use is likely to be one where the point of entry into the data will be a commodity source, an exporter, an importer or a destination. All of these entities are nodes, but in Trase we group them by \"role\" in the supply chain.\n\n\n    As a first step, users would therefore use the sources / exporters / importers / destinations endpoints, which allow discovery of the identifiers of entities by searching by name and existing natural identifiers (e.g. ISO code). At this stage, nodes in the Trase system do not have standardised identifiers, so this first step is necessary to allow cross-referencing of nodes against the points of interest from a user-perspective.\n\n\n    Accessing information via these endpoints will also allow the user to discover the availability of indicators associated with these nodes. In the following step, users can use those identifiers to pull data for a particular node.\n\n\n    # Retrieving attribute values\n\n\n    It is possible to retrieve full flow data using the flows endpoint.\n\n\n    It is also possible to retrieve data filtered by a particular node, which includes both values of attributes for flows in which the node participates (flow attributes), as well as values of some attributes which are not calculated from flows but are specific to the nodes themselves (node attributes).\n\n\n    # Sample usage - retrieving flow data for country / commodity\n\n\n    Use the commodities endpoint to discover identifiers of available commodities. At the same time, you can also retrieve ids of countries from which the commodities are sourced.\n\n\n    /api/public/commodities?include=countries\n\n\n    Countries can be retrieved using the countries endpoint.\n\n\n    /api/public/countries?include=commodities\n\n\n    Now by using the attributes endpoint, it is possible to find out what attributes are available for Brazil beef:\n\n\n    /api/public/attributes?commodity=BEEF\u0026country=BR\n\n\n    Volume data is available for years 2015-2017 and it is possible to select particular years using the API. For example, to request data for 2016-2017:\n\n\n    /api/public/flows?commodity=BEEF\u0026country=BR\u0026start_year=2016\u0026end_year=2017\u0026page=1\n\n\n    Data is paginated.\n\n\n    # Sample usage - retrieving data about a node\n\n\n    Discover the identifier of the sourcing place.\n\n\n    /api/public/nodes/sources?country=BR\u0026commodity=BEEF\u0026name=SORRISO\n\n\n    Data is available for years 2003-2017. Request data for 2017 using the id number of the node of interest (e.g. the id of SORRISO is 11113):\n\n\n    /api/public/nodes/11113/data?year=2017\n\nservers:\n  - url: https://supplychains.trase.earth/api/public\npaths:\n  /countries:\n    get:\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            text/html; charset=utf-8:\n              schema:\n                type: array\n                items:\n                  allOf:\n                    - $ref: \"#/components/schemas/country\"\n                    - type: object\n                      properties:\n                        commodities:\n                          type: array\n                          items:\n                            $ref: \"#/components/schemas/commodity\"\n            application/json:\n              examples:\n                response:\n                  value:\n                    - id: 1\n                      name: BRAZIL\n                      iso: BR\n                      commodities:\n                        - {}\n                        - {}\n                        - {}\n                        - {}\n                        - {}\n      summary: List of sourcing countries\n      description: \u003e\n        List of all sourcing countries in the system. Optionally include\n        commodities sourced from these countries.\n      parameters:\n        - $ref: \"#/components/parameters/commodities_ids\"\n        - in: query\n          name: include\n          description: Comma-separated list of nested associations to include, e.g.\n            \"commodities\".\n          schema:\n            type: string\n  /commodities:\n    get:\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            text/html; charset=utf-8:\n              schema:\n                type: array\n                items:\n                  allOf:\n                    - $ref: \"#/components/schemas/commodity\"\n                    - type: object\n                      properties:\n                        countries:\n                          type: array\n                          items:\n                            $ref: \"#/components/schemas/country\"\n            application/json:\n              examples:\n                response:\n                  value:\n                    - name: SOY\n                      id: 1\n                      countries:\n                        - {}\n                        - {}\n                        - {}\n                        - {}\n                        - {}\n                    - name: SOY\n                      id: 1\n                      countries:\n                        - {}\n                        - {}\n                    - name: SOY\n                      id: 1\n                      countries:\n                        - {}\n                        - {}\n                    - name: SOY\n                      id: 1\n                      countries:\n                        - {}\n                        - {}\n                        - {}\n      summary: List of commodities\n      description: List of all commodities in the system. Optionally include countries from\n        which commodities are sourced.\n      parameters:\n        - $ref: \"#/components/parameters/countries_ids\"\n        - in: query\n          name: include\n          description: 'Comma-separated list of nested associations to include, eg:\n            \"countries\"'\n          schema:\n            type: string\n  /nodes: {}\n  /nodes/sources:\n    get:\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            text/html; charset=utf-8:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      allOf:\n                        - $ref: \"#/components/schemas/node_with_availability\"\n                        - $ref: \"#/components/schemas/node_geo_id\"\n                required:\n                  - data\n      parameters:\n        - $ref: \"#/components/parameters/country_opt\"\n        - $ref: \"#/components/parameters/commodity_opt\"\n        - $ref: \"#/components/parameters/geo_id\"\n        - $ref: \"#/components/parameters/node_type\"\n        - $ref: \"#/components/parameters/name_prefix\"\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/per_page\"\n      description: \"List of commodity sourcing places, which can be nodes of different node type (possible to filter down by node type) depending on the supply chain (path) definition in a given country - commodity combination.\"\n      summary: List of commodity sourcing places\n  /nodes/destinations:\n    get:\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            text/html; charset=utf-8:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      allOf:\n                        - $ref: \"#/components/schemas/node_with_availability\"\n                        - $ref: \"#/components/schemas/node_geo_id\"\n                        - $ref: \"#/components/schemas/destination_node\"\n                required:\n                  - data\n      description: \"List of commodity destination places, which can be nodes of different node type (possible to filter down by node type) depending on the supply chain (path) definition in a given country - commodity combination.\"\n      summary: List of commodity destination places\n      parameters:\n        - $ref: \"#/components/parameters/commodity_opt\"\n        - $ref: \"#/components/parameters/country_opt\"\n        - $ref: \"#/components/parameters/geo_id\"\n        - $ref: \"#/components/parameters/node_type\"\n        - $ref: \"#/components/parameters/name_prefix\"\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/per_page\"\n  /nodes/exporters:\n    get:\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            text/html; charset=utf-8:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      allOf:\n                        - $ref: \"#/components/schemas/node_with_availability\"\n                        - $ref: \"#/components/schemas/exporter_node\"\n                required:\n                  - data\n      description: \"List of commodity exporting traders, which can be nodes of different node type (possible to filter down by node type) depending on the supply chain (path) definition in a given country - commodity combination.\"\n      summary: List of commodity exporters\n      parameters:\n        - $ref: \"#/components/parameters/commodity_opt\"\n        - $ref: \"#/components/parameters/country_opt\"\n        - $ref: \"#/components/parameters/node_type\"\n        - $ref: \"#/components/parameters/name_prefix\"\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/per_page\"\n  /nodes/importers:\n    get:\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            text/html; charset=utf-8:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      allOf:\n                        - $ref: \"#/components/schemas/node_with_availability\"\n                        - $ref: \"#/components/schemas/importer_node\"\n                required:\n                  - data\n      description: \"List of commodity importing traders, which can be nodes of different node type (possible to filter down by node type) depending on the supply chain (path) definition in a given country - commodity combination.\"\n      summary: List of commodity importers\n      parameters:\n        - $ref: \"#/components/parameters/commodity_opt\"\n        - $ref: \"#/components/parameters/country_opt\"\n        - $ref: \"#/components/parameters/node_type\"\n        - $ref: \"#/components/parameters/name_prefix\"\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/per_page\"\n  /attributes:\n    get:\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            text/html; charset=utf-8:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      allOf:\n                        - $ref: \"#/components/schemas/attribute\"\n                        - type: object\n                          properties:\n                            availability:\n                              $ref: \"#/components/schemas/availability\"\n                          required:\n                            - availability\n                required:\n                  - data\n            application/json:\n              examples:\n                response:\n                  value:\n                    data:\n                      - id: 444\n                        name: SOY_DEFORESTATION_5_YEAR\n                        displayName: Soy deforestation risk (5 years)\n                        unit: ha\n                        unitType: area\n                        availability:\n                          - country: BR\n                            commodity: SOY\n                            years:\n                              - 2006\n                              - 2007\n                              - 2008\n                              - 2009\n                              - 2010\n                              - 2011\n                              - 2012\n                              - 2013\n                              - 2014\n                              - 2015\n                              - 2016\n                              - 2017\n                      - id: 36\n                        name: CIF\n                        displayName: null\n                        unit: USD\n                        unitType: currency\n                        availability:\n                          - country: AR\n                            commodity: SOY\n                            years:\n                              - 2013\n                              - 2014\n                              - 2015\n                              - 2016\n                              - 2017\n                          - country: EC\n                            commodity: SHRIMP\n                            years:\n                              - 2013\n                              - 2014\n                              - 2015\n                              - 2016\n                              - 2017\n                          - country: CO\n                            commodity: COFFEE\n                            years:\n                              - 2013\n                              - 2014\n                              - 2015\n                              - 2016\n                              - 2017\n                          - country: BO\n                            commodity: SOY\n                            years:\n                              - 2013\n                              - 2014\n                              - 2015\n                              - 2016\n                              - 2017\n                          - country: CO\n                            commodity: WOOD PULP\n                            years:\n                              - 2013\n                              - 2014\n                              - 2015\n                              - 2016\n                              - 2017\n                          - country: CO\n                            commodity: SHRIMP\n                            years:\n                              - 2013\n                              - 2014\n                              - 2015\n                              - 2016\n                              - 2017\n                          - country: CO\n                            commodity: COCOA\n                            years:\n                              - 2013\n                              - 2014\n                              - 2015\n                              - 2016\n                              - 2017\n                          - country: CO\n                            commodity: BEEF\n                            years:\n                              - 2013\n                              - 2014\n                              - 2015\n                              - 2016\n                              - 2017\n                          - country: CO\n                            commodity: CRUDE PALM OIL\n                            years:\n                              - 2013\n                              - 2014\n                              - 2015\n                              - 2016\n                              - 2017\n                          - country: CO\n                            commodity: PALM KERNEL\n                            years:\n                              - 2013\n                              - 2014\n                              - 2015\n                              - 2016\n                              - 2017\n                          - country: AR\n                            commodity: CORN\n                            years:\n                              - 2013\n                              - 2014\n                              - 2015\n                              - 2016\n                              - 2017\n                          - country: AR\n                            commodity: COTTON\n                            years:\n                              - 2013\n                              - 2014\n                              - 2015\n                              - 2016\n                              - 2017\n                          - country: AR\n                            commodity: WOOD PULP\n                            years:\n                              - 2013\n                              - 2014\n                              - 2015\n                              - 2016\n                              - 2017\n      summary: \"List of all attributes in the system. Optionally include:\"\n      parameters:\n        - $ref: \"#/components/parameters/country_opt\"\n        - $ref: \"#/components/parameters/commodity_opt\"\n      description: List of attributes (indicators), with their ids, names, display names,\n        units and availability for country / commodity combinations in different\n        years.\n  \"/nodes/{id}/data\":\n    get:\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            text/html; charset=utf-8:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: object\n                    required:\n                      - name\n                      - nodeType\n                      - geoId\n                      - availability\n                      - flowAttributes\n                      - nodeAttributes\n                    properties:\n                      name:\n                        type: string\n                      nodeType:\n                        type: string\n                      geoId:\n                        type: string\n                      unit:\n                        type: string\n                      availability:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/availability\"\n                      flowAttributes:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            commodity:\n                              type: string\n                            country:\n                              type: string\n                            flowId:\n                              type: integer\n                            values:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  id:\n                                    type: integer\n                                  value:\n                                    type: number\n                                  year:\n                                    type: integer\n                                required:\n                                  - id\n                                  - value\n                                  - year\n                          required:\n                            - commodity\n                            - country\n                            - values\n                      nodeAttributes:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            commodity:\n                              type: string\n                            country:\n                              type: string\n                            values:\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  id:\n                                    type: integer\n                                  year:\n                                    type: integer\n                                  value:\n                                    type: number\n                                required:\n                                  - id\n                                  - year\n                                  - value\n                          required:\n                            - commodity\n                            - country\n                            - values\n                required:\n                  - data\n            application/json:\n              examples:\n                response:\n                  value:\n                    data:\n                      name: ALTO ALEGRE DOS PARECIS\n                      nodeType: MUNICIPALITY\n                      geoId: BR-1100379\n                      availability:\n                        - years:\n                            - 2012\n                            - 2013\n                            - 2014\n                            - 2015\n                            - 2016\n                            - 2017\n                          country: BR\n                          commodity: SOY\n                      nodeAttributes:\n                        - values:\n                            - id: 95\n                              year: 2017\n                              value: 0\n                            - id: 80\n                              year: 2017\n                              value: 937.29\n                            - id: 33\n                              year: 2017\n                              value: 2981\n                            - id: 89\n                              year: 2017\n                              value: 0\n                          country: BR\n                          commodity: SOY\n                      flowAttributes:\n                        - values:\n                            - id: 1\n                              year: 2017\n                              value: 502.2964572384\n                            - id: 2\n                              year: 2017\n                              value: 214450.449453362\n                            - id: 33\n                              year: 2017\n                              value: 105.217106928182\n                          country: BR\n                          flowId: 54131240\n                          commodity: SOY\n      summary: Node properties and attribute values\n      parameters:\n        - name: id\n          in: path\n          description: Id of the node\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/year_req\"\n      description: Information about a node, including name, node type and geo id. It also\n        includes the availability for country / commodity combinations in\n        different years and node and flow attributes.\n  /flows:\n    get:\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            text/html; charset=utf-8:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        year:\n                          type: integer\n                        path:\n                          type: array\n                          items:\n                            type: integer\n                        flowAttributes:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              attributeId:\n                                type: integer\n                              value:\n                                oneOf:\n                                  - type: string\n                                  - type: number\n                            required:\n                              - value\n                      required:\n                        - year\n                        - path\n                required:\n                  - data\n            application/json:\n              examples:\n                response:\n                  value:\n                    data:\n                      - data:\n                          - year: 2017\n                            path:\n                              - 11626\n                              - 267\n                              - 10684\n                              - 11271\n                              - 12460\n                              - 28265\n                              - 27757\n                              - 212\n                            flowAttributes:\n                              - attributeId: 37\n                                value: 97.3052314237206\n                              - attributeId: 14\n                                value: 15756.3191550692\n                              - attributeId: 8\n                                value: 28.3523401584267\n                              - attributeId: 39\n                                value: 8149.54492168693\n                              - attributeId: 2\n                                value: 44.0096364875163\n                              - attributeId: 5\n                                value: 0\n                              - attributeId: 44\n                                value: 0.00604213363675935\n                              - attributeId: 26\n                                value: 0.00120842672735187\n                              - attributeId: 45\n                                value: 0\n                              - attributeId: 52\n                                value: 1.58696639969484\n                              - attributeId: 18\n                                value: 0.31739327993897\n                          - year: 2017\n                            path:\n                              - 11627\n                              - 263\n                              - 10176\n                              - 9827\n                              - 12458\n                              - 28245\n                              - 28246\n                              - 53\n                            flowAttributes:\n                              - attributeId: 37\n                                value: 97.3048815004618\n                              - attributeId: 14\n                                value: 35826.684319655\n                              - attributeId: 8\n                                value: 19.3065241072345\n                              - attributeId: 39\n                                value: 0\n                              - attributeId: 2\n                                value: 0\n      parameters:\n        - $ref: \"#/components/parameters/commodity_req\"\n        - $ref: \"#/components/parameters/country_req\"\n        - $ref: \"#/components/parameters/attribute_with_default\"\n        - $ref: \"#/components/parameters/start_year_with_default\"\n        - $ref: \"#/components/parameters/end_year_with_default\"\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/per_page\"\n      description: List of flows, with their ids, paths and attributes associated to the nodes on the paths.\n      summary: Flows data\n  /node_types:\n    get:\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            text/html; charset=utf-8:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        country:\n                          type: string\n                        commodity:\n                          type: string\n                        node_types:\n                          type: array\n                          items:\n                            $ref: \"#/components/schemas/node_type\"\n                      required:\n                        - country\n                        - commodity\n                        - node_types\n                required:\n                  - data\n      description: \"This endpoint will allow users to understand the structure of flow paths in different country / commodity combinations. It will return an ordered list of objects with the following information: node type id, node type name, role.\"\n      summary: List of node types as they appear in flow paths\n      parameters:\n        - $ref: \"#/components/parameters/country_opt\"\n        - $ref: \"#/components/parameters/commodity_opt\"\n\ncomponents:\n  parameters:\n    page:\n      name: page\n      in: query\n      description: 1-based number of requested page for paginated resources\n      schema:\n        type: integer\n        minimum: 1\n        default: 1\n    per_page:\n      name: per_page\n      in: query\n      description: Number of objects per page for paginated resources\n      schema:\n        type: integer\n        default: 100\n    country_opt:\n      name: country\n      in: query\n      description: Country iso 2, e.g. BR\n      schema:\n        type: string\n    commodity_opt:\n      name: commodity\n      in: query\n      description: Commodity name, e.g. SOY\n      schema:\n        type: string\n    commodity_req:\n      in: query\n      name: commodity\n      description: Commodity name, e.g. SOY\n      required: true\n      schema:\n        type: string\n    country_req:\n      in: query\n      name: country\n      description: Country ISO 2, e.g. BR\n      required: true\n      schema:\n        type: string\n    commodities_ids:\n      in: query\n      name: commodities_ids\n      description: Comma-separated list of numeric commodity ids.\n      schema:\n        type: string\n    countries_ids:\n      in: query\n      name: countries_ids\n      description: Comma-separated list of numeric country ids.\n      schema:\n        type: string\n    path_nodes_ids:\n      in: query\n      name: path_nodes_ids\n      description: Comma-separated list of numeric node ids to filter flows.\n      schema:\n        type: string\n    nodes_ids:\n      in: query\n      name: nodes_ids\n      description: Comma-separated list of numeric node ids to return values for. When empty, all matching nodes returned, but node type needs to be provided. TODO check if that might require introducing pagination.\n      schema:\n        type: string\n    geo_id:\n      in: query\n      name: geo_id\n      description: Geo identifier, e.g. BR-5107925\n      schema:\n        type: string\n    node_type:\n      name: node_type\n      in: query\n      description: Node type name, e.g. MUNICIPALITY\n      schema:\n        type: string\n    node_type_req:\n      name: node_type\n      in: query\n      description: Node type name, e.g. MUNICIPALITY\n      required: true\n      schema:\n        type: string\n    source_node_type_with_default:\n      name: node_type\n      in: query\n      description: Node type name, e.g. MUNICIPALITY; when not provided, default source node type used (depending on data availability in country - commodity combination)\n      schema:\n        type: string\n    exporter_node_type_with_default:\n      name: node_type\n      in: query\n      description: Node type name, e.g. EXPORTER; when not provided, default exporter node type used (depending on data availability in country - commodity combination)\n      schema:\n        type: string\n    importer_node_type_with_default:\n      name: node_type\n      in: query\n      description: Node type name, e.g. IMPORTER; when not provided, default importer node type used (depending on data availability in country - commodity combination)\n      schema:\n        type: string\n    destination_node_type_with_default:\n      name: node_type\n      in: query\n      description: Node type name, e.g. COUNTRY; when not provided, default source node type used (depending on data availability in country - commodity combination)\n      schema:\n        type: string\n    name_prefix:\n      name: name\n      in: query\n      description: Node name prefix\n      schema:\n        type: string\n    year_req:\n      name: year\n      in: query\n      description: Year of data\n      required: true\n      schema:\n        type: integer\n    year_with_default:\n      name: year\n      in: query\n      description: Year of data, when not provided last available year\n      schema:\n        type: integer\n    start_year_with_default:\n      in: query\n      name: start_year\n      description: Start year of data, when not provided no lower limit on year range applied.\n      schema:\n        type: integer\n    end_year_with_default:\n      in: query\n      name: end_year\n      description: End year of data, when not provided no upper limit on year range applied.\n      schema:\n        type: string\n    attribute_with_default:\n      in: query\n      name: attribute_id\n      description: Flow attribute id, when not provided defaults to trade volume\n      schema:\n        type: integer\n    limit:\n      in: query\n      name: limit\n      description: Number of elements to return\n      schema:\n        type: integer\n\n  schemas:\n    node:\n      type: object\n      description: Single node record.\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n          example: SORRISO\n      required:\n        - id\n        - name\n    node_geo_id:\n      type: object\n      properties:\n        geo_id:\n          type: string\n          example: BR-5107925\n      required:\n        - geo_id\n    node_node_type:\n      type: object\n      properties:\n        node_type:\n          type: string\n          example: MUNICIPALITY\n      required:\n        - node_type\n    source_node:\n      allOf:\n        - $ref: \"#/components/schemas/node\"\n        - $ref: \"#/components/schemas/node_node_type\"\n    exporter_node:\n      allOf:\n        - $ref: \"#/components/schemas/node\"\n        - $ref: \"#/components/schemas/node_node_type\"\n        - type: object\n          properties:\n            name:\n              example: CARGILL\n            node_type:\n              example: EXPORTER\n    importer_node:\n      allOf:\n        - $ref: \"#/components/schemas/node\"\n        - $ref: \"#/components/schemas/node_node_type\"\n        - type: object\n          properties:\n            name:\n              example: CARGILL\n            node_type:\n              example: IMPORTER\n    destination_node:\n      allOf:\n        - $ref: \"#/components/schemas/node\"\n        - $ref: \"#/components/schemas/node_node_type\"\n        - type: object\n          properties:\n            name:\n              example: CHINA\n            node_type:\n              example: COUNTRY\n    node_with_availability:\n      allOf:\n        - $ref: \"#/components/schemas/source_node\"\n        - type: object\n          properties:\n            availability:\n              type: array\n              items:\n                $ref: \"#/components/schemas/availability\"\n          required:\n            - availability\n    country:\n      type: object\n      description: Single country record.\n      properties:\n        id:\n          type: number\n          example: 1\n        name:\n          type: string\n          example: BRAZIL\n        iso:\n          type: string\n          minLength: 2\n          maxLength: 2\n          example: BR\n      required:\n        - id\n        - name\n        - iso\n    commodity:\n      type: object\n      description: Single commodity record\n      properties:\n        id:\n          type: number\n          example: 1\n        name:\n          type: string\n          example: SOY\n      required:\n        - id\n        - name\n    availability:\n      type: object\n      properties:\n        commodity:\n          type: string\n          example: SOY\n        country:\n          type: string\n          example: BR\n        years:\n          type: array\n          items:\n            type: integer\n      description: Years of data available for country / commodity combination\n    attribute:\n      type: object\n      description: Attribute (indicator)\n      properties:\n        id:\n          type: integer\n          example: 31\n        display_name:\n          type: string\n          example: 'Trade volume'\n        unit:\n          type: string\n          example: 'Mt'\n        tooltip_text:\n          type: string\n          example: '...'\n      required:\n        - id\n        - display_name\n    node_type:\n      type: object\n      description: Node type\n      properties:\n        id:\n          type: integer\n          example: 1\n        name:\n          type: string\n          example: MUNICIPALITY\n        role:\n          type: string\n          example: source\n      required:\n        - id\n        - name\n        - role\n",
			"canonicalURL": "/github.com/Vizzuality/trase@e567f5450d3618249879ad319e687df0499d7b06/-/blob/doc/gh-pages/api/trase_public_api_1.0.oas3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Vizzuality/trase/blob/e567f5450d3618249879ad319e687df0499d7b06/doc/gh-pages/api/trase_public_api_1.0.oas3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/attributes\": get: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema",
		"unsupported content types"
	]
}