{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "indexing-v3.yaml",
			"size": 0,
			"path": "providers/src/googleapis.com/v0.1.2/services/indexing-v3.yaml",
			"byteSize": 8822,
			"content": "components:\n  parameters:\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        enum:\n        - '1'\n        - '2'\n        type: string\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        enum:\n        - json\n        - media\n        - proto\n        type: string\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you\n        with API access, quota, and reports. Required unless you provide an OAuth\n        2.0 token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications.\n        Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n  schemas:\n    PublishUrlNotificationResponse:\n      description: Output for PublishUrlNotification\n      properties:\n        urlNotificationMetadata:\n          $ref: '#/components/schemas/UrlNotificationMetadata'\n          description: Description of the notification events received for this URL.\n      type: object\n    UrlNotification:\n      description: '`UrlNotification` is the resource used in all Indexing API calls.\n        It describes one event in the life cycle of a Web Document.'\n      properties:\n        notifyTime:\n          description: Creation timestamp for this notification. Users should _not_\n            specify it, the field is ignored at the request time.\n          format: google-datetime\n          type: string\n        type:\n          description: The URL life cycle event that Google is being notified about.\n          enum:\n          - URL_NOTIFICATION_TYPE_UNSPECIFIED\n          - URL_UPDATED\n          - URL_DELETED\n          type: string\n        url:\n          description: The object of this notification. The URL must be owned by the\n            publisher of this notification and, in case of `URL_UPDATED` notifications,\n            it _must_ be crawlable by Google.\n          type: string\n      type: object\n    UrlNotificationMetadata:\n      description: Summary of the most recent Indexing API notifications successfully\n        received, for a given URL.\n      properties:\n        latestRemove:\n          $ref: '#/components/schemas/UrlNotification'\n          description: Latest notification received with type `URL_REMOVED`.\n        latestUpdate:\n          $ref: '#/components/schemas/UrlNotification'\n          description: Latest notification received with type `URL_UPDATED`.\n        url:\n          description: URL to which this metadata refers.\n          type: string\n      type: object\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/indexing: Submit data to Google for indexing\n      type: oauth2\n    Oauth2c:\n      description: Oauth 2.0 authorizationCode authentication\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/indexing: Submit data to Google for indexing\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n      type: oauth2\n  x-stackQL-resources:\n    urlNotifications:\n      id: google.indexing.urlNotifications\n      methods:\n        getMetadata:\n          operation:\n            $ref: '#/paths/~1v3~1urlNotifications~1metadata/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        publish:\n          operation:\n            $ref: '#/paths/~1v3~1urlNotifications:publish/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: urlNotifications\n      title: urlNotifications\nexternalDocs:\n  url: https://developers.google.com/search/apis/indexing-api/\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n    x-twitter: youtube\n  description: Notifies Google when your web pages change.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Indexing API\n  version: v3\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-apisguru-categories:\n  - analytics\n  - media\n  x-logo:\n    url: https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png\n  x-origin:\n  - converter:\n      url: https://github.com/mermade/oas-kit\n      version: 7.0.4\n    format: openapi\n    url: https://indexing.googleapis.com/$discovery/rest?version=v3\n    version: '3.0'\n  x-providerName: googleapis.com\n  x-serviceName: indexing\nopenapi: 3.0.0\npaths:\n  /v3/urlNotifications/metadata:\n    get:\n      description: Gets metadata about a Web Document. This method can _only_ be used\n        to query URLs that were previously seen in successful Indexing API notifications.\n        Includes the latest `UrlNotification` received via this API.\n      operationId: indexing.urlNotifications.getMetadata\n      parameters:\n      - description: URL that is being queried.\n        in: query\n        name: url\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UrlNotificationMetadata'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/indexing\n        Oauth2c:\n        - https://www.googleapis.com/auth/indexing\n      tags:\n      - urlNotifications\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v3/urlNotifications:publish:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Notifies that a URL has been updated or deleted.\n      operationId: indexing.urlNotifications.publish\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UrlNotification'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublishUrlNotificationResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/indexing\n        Oauth2c:\n        - https://www.googleapis.com/auth/indexing\n      tags:\n      - urlNotifications\nservers:\n- url: https://indexing.googleapis.com/\ntags:\n- name: urlNotifications\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/googleapis.com/v0.1.2/services/indexing-v3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/googleapis.com/v0.1.2/services/indexing-v3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v3/urlNotifications/metadata\": get: security: security \"Oauth2\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}