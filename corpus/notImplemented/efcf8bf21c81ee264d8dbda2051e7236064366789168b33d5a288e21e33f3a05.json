{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "hhs.gov-2-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/hhs.gov-2-swagger.yaml",
			"byteSize": 79504,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: syndicationadmin@hhs.gov\n  description: \u003e\n    \n    \u003cdiv class=\"swagger-ui-wrap extraFooter\"\u003e\u003ch3\u003eCommon Features / Behaviors\u003c/h3\u003e\n        \u003cdiv class=\"features\"\u003e\n            \u003cul\u003e\n                \u003cli\u003e\u003cstrong\u003e* \"sort\" param:\u003c/strong\u003e supports multi column sorting through the use of commas as delimiters, and a hyphen to denote descending order.\n                    \u003cbr/\u003e\n                    \u003cstrong\u003e\u003cspan\u003eExamples:\u003c/span\u003e\u003c/strong\u003e\n                    \u003cul\u003e\n                        \u003cli\u003e\u003cspan class=\"example\"\u003ename\u003c/span\u003e\u003cspan class=\"description\"\u003esort results by name ascending\u003c/span\u003e\u003c/li\u003e\n                        \u003cli\u003e\u003cspan class=\"example\"\u003e-name\u003c/span\u003e\u003cspan class=\"description\"\u003esort results by name descending\u003c/span\u003e\u003c/li\u003e\n                        \u003cli\u003e\u003cspan class=\"example\"\u003e-name,id\u003c/span\u003e\u003cspan class=\"description\"\u003esort results by name descending and then by id ascending\u003c/span\u003e\u003c/li\u003e\n                        \u003cli\u003e\u003cspan class=\"example\"\u003eid,-dateContentAuthored\u003c/span\u003e\u003cspan class=\"description\"\u003esort results by id ascending and then date descending\u003c/span\u003e\u003c/li\u003e\n                    \u003c/ul\u003e\n                \u003c/li\u003e\n                \u003cli\u003e\u003cstrong\u003eDate formats:\u003c/strong\u003e Date input format is expected to be based on \u003ca href=\"http://www.ietf.org/rfc/rfc3339.txt\"\u003eRFC 3339\u003c/a\u003e. \u003cbr/\u003e\n                    \u003cspan\u003e\u003cstrong\u003eExample:\u003c/strong\u003e\u003c/span\u003e\n                    \u003cul\u003e\u003cli\u003e2013-11-18T18:43:01Z\u003c/li\u003e\u003c/ul\u003e\n                \u003c/li\u003e\n            \u003c/ul\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n  license:\n    name: GNU GENERAL PUBLIC LICENSE\n    url: http://www.gnu.org/licenses/gpl.html\n  termsOfService: http://www.hhs.gov/web/socialmedia/policies/tos.html#ready\n  title: HHS Media Services\n  version: \"2\"\n  x-apisguru-categories:\n    - open_data\n  x-logo:\n    backgroundColor: \"#185394\"\n    url: http://www.hhs.gov/sites/all/themes/project_h/css/images/hhs_logo.png\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.6.0\n      format: swagger\n      url: https://api.digitalmedia.hhs.gov/swagger/api\n      version: \"1.2\"\n  x-providerName: hhs.gov\ntags:\n  - description: Information about campaigns\n    name: campaigns\n  - description: Information about languages\n    name: languages\n  - description: Information about media\n    name: media\n  - description: Information about media types\n    name: mediaTypes\n  - description: Global Search\n    name: resources\n  - description: Information about sources.\n    name: sources\n  - description: Information about tags\n    name: tags\n  - description: Get media from user generated lists.\n    name: userMediaLists\npaths:\n  /resources.json:\n    get:\n      description: Returns the list of Resources matching the search query 'q'.\u003cp\u003eThe\n        search query 'q' is a Lucene query.\u003cbr\u003eThe syntax for a Lucene query can\n        be found \u003ca\n        href=\"http://lucene.apache.org/core/2_9_4/queryparsersyntax.html\"\u003ehere\u003c/a\u003e.\n      operationId: getResources\n      parameters:\n        - description: The search query supplied by the user\n          in: query\n          name: q\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Resources\"\n        \"400\":\n          description: Invalid search query\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get Resources by search query\n      tags:\n        - resources\n  /resources/campaigns.json:\n    get:\n      description: Returns the list of Campaigns.\n      operationId: getCampaigns\n      parameters:\n        - description: The maximum number of records to return\n          in: query\n          name: max\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: The offset of the records set to return for pagination\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: \"* Set of fields to sort the records by.\"\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Campaigns\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get Campaigns\n      tags:\n        - campaigns\n  \"/resources/campaigns/{id}.json\":\n    get:\n      description: Returns the Campaign identified by the 'id'.\n      operationId: getCampaignById\n      parameters:\n        - description: The id of the record to look up\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Campaigns\"\n        \"400\":\n          description: Invalid ID\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get Campaign by ID\n      tags:\n        - campaigns\n  \"/resources/campaigns/{id}/media.json\":\n    get:\n      description: Returns the list of MediaItems for the Campaign identified by the 'id'.\n      operationId: getMediaByCampaignId\n      parameters:\n        - description: The id of the campaign to find media items for\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: The maximum number of records to return\n          in: query\n          name: max\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: The offset of the records set to return for pagination\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: The name of the property to which sorting will be applied\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MediaItems\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get MediaItems by Campaign ID\n      tags:\n        - campaigns\n  \"/resources/campaigns/{id}/syndicate.json\":\n    get:\n      description: Renders the list of MediaItems associated with the Campaign identified\n        by the 'id'.\n      parameters:\n        - description: The id of the record to look up\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: \"Method used to render an html request. Accepts one: [mv, list,\n            feed]\"\n          in: query\n          name: displayMethod\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MediaItems\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get MediaItems for Campaign\n      tags:\n        - campaigns\n  /resources/languages.json:\n    get:\n      description: Returns the list Languages.\n      operationId: getLanguages\n      parameters:\n        - description: The maximum number of records to return\n          in: query\n          name: max\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: The offset of the records set to return for pagination\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: \"* Set of fields to sort the records by.\"\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Languages\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get Languages\n      tags:\n        - languages\n  \"/resources/languages/{id}.json\":\n    get:\n      description: Returns the Language identified by the 'id'.\n      operationId: getLanguageById\n      parameters:\n        - description: The id of the language to look up\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Languages\"\n        \"400\":\n          description: Invalid ID\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get Language by ID\n      tags:\n        - languages\n  /resources/media.json:\n    get:\n      description: Returns the list of MediaItems matching the specified query parameters.\n      operationId: getMedia\n      parameters:\n        - description: The maximum number of records to return\n          in: query\n          name: max\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: The offset of the records set to return for pagination.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: \"* Set of fields to sort the records by.\"\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n        - description: \"* The ascending or descending order.\"\n          in: query\n          name: order\n          required: false\n          schema:\n            type: string\n        - description: Find all media items belonging to the specified media type[s].\n          in: query\n          name: mediaTypes\n          required: false\n          schema:\n            type: string\n        - description: Find all media items containing the provided name, case insensitive.\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Restrict filtering to media items in a specific collection.\n          in: query\n          name: collectionId\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Find all media items containing the partial name, case insensitive.\n          in: query\n          name: nameContains\n          required: false\n          schema:\n            type: string\n        - description: Find all media items containing the provided partial description,\n            case insensitive.\n          in: query\n          name: descriptionContains\n          required: false\n          schema:\n            type: string\n        - description: Find all media items which have the provided sourceUrl, case\n            insensitive.\n          in: query\n          name: sourceUrl\n          required: false\n          schema:\n            type: string\n        - description: Find all media items which contain the provided partial sourceUrl,\n            case insensitive.\n          in: query\n          name: sourceUrlContains\n          required: false\n          schema:\n            type: string\n        - description: Find all media items which have the provided customThumbnailUrl,\n            case insensitive.\n          in: query\n          name: customThumbnailUrl\n          required: false\n          schema:\n            type: string\n        - description: Find all media items which contain the provided partial\n            customThumbnailUrl, case insensitive.\n          in: query\n          name: customThumbnailUrlContains\n          required: false\n          schema:\n            type: string\n        - description: Find all media items authored on the provided day (RFC 3339, time\n            ignored).\n          in: query\n          name: dateContentAuthored\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: Find all media items updated on the provided day (RFC 3339, time\n            ignored).\n          in: query\n          name: dateContentUpdated\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: Find all media items published on the provided day (RFC 3339, time\n            ignored).\n          in: query\n          name: dateContentPublished\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: Find all media items reviewed on the provided day (RFC 3339, time\n            ignored).\n          in: query\n          name: dateContentReviewed\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: Find all media items authored on the provided day (RFC 3339, time\n            ignored).\n          in: query\n          name: dateSyndicationCaptured\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: Find all media items updated on the provided day, (RFC 3339, time\n            ignored).\n          in: query\n          name: dateSyndicationUpdated\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: Find all media items authored since the provided day (RFC 3339, time\n            ignored).\n          in: query\n          name: contentAuthoredSinceDate\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: Find all media items authored before the provided day (RFC 3339,\n            time ignored).\n          in: query\n          name: contentAuthoredBeforeDate\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: Find all media items authored between the provided start and end\n            days (RFC 3339, comma separated, time ignored).\n          in: query\n          name: contentAuthoredInRange\n          required: false\n          schema:\n            type: string\n        - description: Find all media items updated since the provided day (RFC 3339, time\n            ignored).\n          in: query\n          name: contentUpdatedSinceDate\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: Find all media items updated before the provided day (RFC 3339, time\n            ignored).\n          in: query\n          name: contentUpdatedBeforeDate\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: Find all media items updated between the provided start and end days\n            (RFC 3339, comma separated, time ignored).\n          in: query\n          name: contentUpdatedInRange\n          required: false\n          schema:\n            type: string\n        - description: Find all media items published since the provided day (RFC 3339,\n            time ignored).\n          in: query\n          name: contentPublishedSinceDate\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: Find all media items published before the provided day (RFC 3339,\n            time ignored).\n          in: query\n          name: contentPublishedBeforeDate\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: Find all media items published between the provided start and end\n            days (RFC 3339, comma separated, time ignored).\n          in: query\n          name: contentPublishedInRange\n          required: false\n          schema:\n            type: string\n        - description: Find all media items reviewed since the provided day (RFC 3339, time\n            ignored).\n          in: query\n          name: contentReviewedSinceDate\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: Find all media items reviewed before the provided day (RFC 3339,\n            time ignored).\n          in: query\n          name: contentReviewedBeforeDate\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: Find all media items reviewed between the provided start and end\n            days (RFC 3339, comma separated, time ignored).\n          in: query\n          name: contentReviewedInRange\n          required: false\n          schema:\n            type: string\n        - description: Find all media items authored since the provided day (RFC 3339, time\n            ignored).\n          in: query\n          name: syndicationCapturedSinceDate\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: Find all media items authored before the provided day (RFC 3339,\n            time ignored).\n          in: query\n          name: syndicationCapturedBeforeDate\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: Find all media items authored between the provided start and end\n            days (RFC 3339, comma separated, time ignored).\n          in: query\n          name: syndicationCapturedInRange\n          required: false\n          schema:\n            type: string\n        - description: Find all media items updated since the provided day, (RFC 3339, time\n            ignored).\n          in: query\n          name: syndicationUpdatedSinceDate\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: Find all media items updated before the provided day, (RFC 3339,\n            time ignored).\n          in: query\n          name: syndicationUpdatedBeforeDate\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: Find all media items updated between the provided start and end\n            days, (RFC 3339, comma separated, time ignored).\n          in: query\n          name: syndicationUpdatedInRange\n          required: false\n          schema:\n            type: string\n        - description: Find all media items visible since the provided day, (RFC 3339, time\n            ignored).\n          in: query\n          name: syndicationVisibleSinceDate\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: Find all media items visible before the provided day, (RFC 3339,\n            time ignored).\n          in: query\n          name: syndicationVisibleBeforeDate\n          required: false\n          schema:\n            type: string\n            format: date\n        - description: Find all media items visible between the provided start and end\n            days, (RFC 3339, comma separated, time ignored).\n          in: query\n          name: syndicationVisibleInRange\n          required: false\n          schema:\n            type: string\n        - description: Find all media items written in the language specified by Id.\n          in: query\n          name: languageId\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - description: Find all media items written in the language specified by name, case\n            insensitive.\n          in: query\n          name: languageName\n          required: false\n          schema:\n            type: string\n        - description: Find all media items written in the language specified by 639-2\n            isoCode , case insensitive.\n          in: query\n          name: languageIsoCode\n          required: false\n          schema:\n            type: string\n        - description: Find all media items which match the provided hash, case insensitive.\n          in: query\n          name: hash\n          required: false\n          schema:\n            type: string\n        - description: Find all media items which match the provided partial hash, case\n            insensitive.\n          in: query\n          name: hashContains\n          required: false\n          schema:\n            type: string\n        - description: Find all media items that belong to the source specified by Id.\n          in: query\n          name: sourceId\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - description: Find all media items that belong to the source specified by name,\n            case insensitive.\n          in: query\n          name: sourceName\n          required: false\n          schema:\n            type: string\n        - description: Find all media items that belong to the source specified by partial\n            name, case insensitive.\n          in: query\n          name: sourceNameContains\n          required: false\n          schema:\n            type: string\n        - description: Find all media items that belong to the source specified by acronym,\n            case insensitive.\n          in: query\n          name: sourceAcronym\n          required: false\n          schema:\n            type: string\n        - description: Find all media items that belong to the source specified by partial\n            acronym, case insensitive.\n          in: query\n          name: sourceAcronymContains\n          required: false\n          schema:\n            type: string\n        - description: Find only media items tagged with the specified tag Ids.\n          in: query\n          name: tagIds\n          required: false\n          schema:\n            type: string\n        - description: Find only media from within the supplied list of Ids.\n          in: query\n          name: restrictToSet\n          required: false\n          schema:\n            type: string\n        - description: Find all media items containing the createdBy value.\n          in: query\n          name: createdBy\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MediaItems\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get MediaItems\n      tags:\n        - media\n  /resources/media/featured.json:\n    get:\n      description: Get the list of featured content in the syndication system\n      operationId: getFeaturedMedia\n      parameters:\n        - description: \"* Set of fields to sort the records by.\"\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of records to return.\n          in: query\n          name: max\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - description: How many records to offset the query by.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get the list of featured content in the syndication system\n      tags:\n        - media\n  /resources/media/mostPopularMedia.json:\n    get:\n      description: Returns the list of MediaItems with the highest ratings.\n      operationId: getMostPopularMedia\n      parameters:\n        - description: The maximum number of records to return\n          in: query\n          name: max\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: The offset of the records set to return for pagination.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MediaItems\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get MediaItems by popularity\n      tags:\n        - media\n  /resources/media/searchResults.json:\n    get:\n      description: Returns the list of MediaItems matching the search query 'q'.\u003cp\u003eThe\n        search query 'q' is a Lucene query.\u003cbr\u003eThe syntax for a Lucene query can\n        be found \u003ca\n        href=\"http://lucene.apache.org/core/2_9_4/queryparsersyntax.html\"\u003ehere\u003c/a\u003e\n      operationId: searchMedia\n      parameters:\n        - description: The search query supplied by the user\n          in: query\n          name: q\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of records to return\n          in: query\n          name: max\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: The offset of the records set to return for pagination.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MediaItems\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get MediaItems by search query\n      tags:\n        - media\n  \"/resources/media/{id}.json\":\n    get:\n      description: Returns the MediaItem identified by the 'id'.\n      operationId: getMediaById\n      parameters:\n        - description: The id of the record to look up\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MediaItems\"\n        \"400\":\n          description: Invalid ID\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get MediaItem by ID\n      tags:\n        - media\n  \"/resources/media/{id}/content\":\n    get:\n      description: Returns the raw content (html, image, etc...) for the MediaItem\n        identified by the 'id'.\n      operationId: getMediaContentById\n      parameters:\n        - description: The id of the media to show content for.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: The method that called this method\n          in: query\n          name: calledByBuild\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                type: string\n            text/html:\n              schema:\n                type: string\n            image/jpeg:\n              schema:\n                type: string\n            image/png:\n              schema:\n                type: string\n        \"400\":\n          description: Invalid ID\n          content:\n            application/json:\n              schema:\n                type: string\n            text/html:\n              schema:\n                type: string\n            image/jpeg:\n              schema:\n                type: string\n            image/png:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n            text/html:\n              schema:\n                type: string\n            image/jpeg:\n              schema:\n                type: string\n            image/png:\n              schema:\n                type: string\n      summary: Get content for MediaItem\n      tags:\n        - media\n  \"/resources/media/{id}/embed.json\":\n    get:\n      description: Returns the javascript or iframe embed code for the MediaItem identified\n        by 'id'.\n      operationId: getMediaEmbedById\n      parameters:\n        - description: The id of the media to get embed code for.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Currently supports 'iframe', defaults to 'javascript'.\n          in: query\n          name: flavor\n          required: false\n          schema:\n            type: string\n        - description: The width of the generated iframe.\n          in: query\n          name: width\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: The height of the generated iframe.\n          in: query\n          name: height\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: The name of the iframe element\n          in: query\n          name: iframeName\n          required: false\n          schema:\n            type: string\n        - description: Should a reference to the JQuery Library be omitted?\n          in: query\n          name: excludeJquery\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Should the div to insert content into be omitted?\n          in: query\n          name: excludeDiv\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Should the div to insert content into have a specific name?\n          in: query\n          name: divId\n          required: false\n          schema:\n            type: string\n        - description: \"Method used to render an html request. Accepts one: [mv, list,\n            feed]\"\n          in: query\n          name: displayMethod\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/EmbedCode\"\n        \"400\":\n          description: Bad Request\n          content:\n            text/html:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            text/html:\n              schema:\n                type: string\n      summary: Get embed code for MediaItem\n      tags:\n        - media\n  \"/resources/media/{id}/preview.jpg\":\n    get:\n      description: Returns the JPG preview, where applicable, for the MediaItem identified\n        by the 'id'.\n      operationId: getMediaPreviewById\n      parameters:\n        - description: The id of the media to get a preview for.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            image/jpeg:\n              schema:\n                $ref: \"#/components/schemas/MediaItems\"\n        \"400\":\n          description: Bad Request\n          content:\n            image/jpeg:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            image/jpeg:\n              schema:\n                type: string\n      summary: Get JPG preview for MediaItem\n      tags:\n        - media\n  \"/resources/media/{id}/ratings.json\":\n    get:\n      description: Get the Ratings (number of 'likes') for the MediaItem identified by the\n        'id'.\n      operationId: getMediaRatingsById\n      parameters:\n        - description: The ID of the media item to 'like'.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Ratings\"\n        \"400\":\n          description: Invalid ID\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get Ratings for MediaItem\n      tags:\n        - media\n  \"/resources/media/{id}/relatedMedia.json\":\n    get:\n      description: Returns the list of MediaItems related to the MediaItem identified by\n        the 'id'.\n      operationId: getRelatedMediaById\n      parameters:\n        - description: The id of the media item to get related media for\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: The maximum number of records to return\n          in: query\n          name: max\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: The offset of the records set to return for pagination.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Which field to sort the records by.\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MediaItems\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get related MediaItems by ID\n      tags:\n        - media\n  \"/resources/media/{id}/syndicate.json\":\n    get:\n      description: Returns the syndicated content for a given MediaItem in the specified\n        'format' (HTML or JSON).\n      operationId: getMediaSyndicateById\n      parameters:\n        - description: The id of the media to show embed code for.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: The css class to target for extraction.\n          in: query\n          name: cssClass\n          required: false\n          schema:\n            type: string\n            default: syndicate\n        - description: Remove in-line styles from content.\n          in: query\n          name: stripStyles\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Remove script tags from content.\n          in: query\n          name: stripScripts\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Remove image tags from content.\n          in: query\n          name: stripImages\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Remove break tags from content.\n          in: query\n          name: stripBreaks\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Remove class attributes from content (except 'syndicate').\n          in: query\n          name: stripClasses\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Set font size (in points) of p, div, and span tags.\n          in: query\n          name: font-size\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Accepts valid CSS float options, such as 'left' or 'right'. Will\n            inject a style into the content before rendering.\n          in: query\n          name: imageFloat\n          required: false\n          schema:\n            type: string\n        - description: Accepts 4 CSV values representing pixel sizes of margin similar to\n            CSS. Default format is 'north,east,south,west' - for example\n            '0,10,10,0' would put a 10 pixel margin on the right and bottom\n            sides of an image. Will inject a style into the content before\n            rendering.\n          in: query\n          name: imageMargin\n          required: false\n          schema:\n            type: string\n        - description: If content is a video, the embeded video will auto play when loaded.\n          in: query\n          name: autoplay\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - description: If content is a video, related items will be shown at the end of\n            playback.\n          in: query\n          name: rel\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SyndicatedMediaItems\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SyndicatedMediaItems\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: string\n            text/html:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n            text/html:\n              schema:\n                type: string\n      summary: Get syndicated content for MediaItem\n      tags:\n        - media\n  \"/resources/media/{id}/thumbnail.jpg\":\n    get:\n      description: Returns the JPG thumbnail, where applicable, for the MediaItem\n        identified by the 'id'.\n      operationId: getMediaThumbnailById\n      parameters:\n        - description: The id of the media to get a thumbnail for.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            image/jpeg:\n              schema:\n                type: string\n        \"400\":\n          description: Invalid ID\n          content:\n            image/jpeg:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            image/jpeg:\n              schema:\n                type: string\n      summary: Get JPG thumbnail for MediaItem\n      tags:\n        - media\n  \"/resources/media/{id}/youtubeMetaData.json\":\n    get:\n      description: Returns the Youtube metadata, where applicable, for the MediaItem\n        identified by the 'id'.\n      operationId: getMediaYoutubeMetaDataById\n      parameters:\n        - description: The id of the video to show meta data for.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/YoutubeMetadata\"\n        \"400\":\n          description: Invalid ID or Invalid media type\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get Youtube metadata for MediaItem\n      tags:\n        - media\n  /resources/mediaTypes.json:\n    get:\n      description: Returns the list of available MediaTypes.\n      operationId: getMediaTypes\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MediaTypes\"\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get MediaTypes\n      tags:\n        - mediaTypes\n  /resources/sources.json:\n    get:\n      description: Returns the list of Sources.\n      operationId: getSources\n      parameters:\n        - description: The maximum number of records to return\n          in: query\n          name: max\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: The offset of the records set to return for pagination\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: \"* Set of fields to sort the records by.\"\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Sources\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get Sources\n      tags:\n        - sources\n  \"/resources/sources/{id}.json\":\n    get:\n      description: Returns the Source identified by the 'id'.\n      operationId: getSourceById\n      parameters:\n        - description: The id of the source to look up\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Sources\"\n        \"400\":\n          description: Invalid ID\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get Source by ID\n      tags:\n        - sources\n  \"/resources/sources/{id}/syndicate.json\":\n    get:\n      description: Renders the list of MediaItems associated with the Source identified by\n        the 'id'.\n      parameters:\n        - description: The id of the record to look up\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: \"Method used to render an html request. Accepts one: [mv, list,\n            feed]\"\n          in: query\n          name: displayMethod\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MediaItems\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get MediaItems for Source\n      tags:\n        - sources\n  /resources/tags.json:\n    get:\n      description: Returns the list of Tags matching the specified query parameters in the\n        specified 'format'.\n      operationId: getTags\n      parameters:\n        - description: The name of the property to which sorting will be applied\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of records to return\n          in: query\n          name: max\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Return records starting at the offset index.\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Return tags[s] matching the supplied name\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Return tags which contain the supplied partial name.\n          in: query\n          name: nameContains\n          required: false\n          schema:\n            type: string\n        - description: Return tags associated with the supplied media id.\n          in: query\n          name: mediaId\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - description: Return tags belonging to the supplied tag type id.\n          in: query\n          name: typeId\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - description: Return tags belonging to the supplied tag type name.\n          in: query\n          name: typeName\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tags\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get Tags\n      tags:\n        - tags\n  /resources/tags/tagLanguages.json:\n    get:\n      description: Returns the list of TagLanguages\n      operationId: getTagLanguages\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagLanguages\"\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get TagLanguages\n      tags:\n        - tags\n  /resources/tags/tagTypes.json:\n    get:\n      description: Returns the list of TagTypes\n      operationId: getTagTypes\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagTypes\"\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get TagTypes\n      tags:\n        - tags\n  \"/resources/tags/{id}.json\":\n    get:\n      description: Returns the Tag identified by the 'id' in the specified 'format'.\n      operationId: getTagById\n      parameters:\n        - description: The id of the record to look up\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tags\"\n        \"400\":\n          description: Invalid ID\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get Tag by ID\n      tags:\n        - tags\n  \"/resources/tags/{id}/media.json\":\n    get:\n      description: Returns the list of MediaItems associated with the Tag identified by the\n        'id'.\n      operationId: getMediaByTagId\n      parameters:\n        - description: The id of the record to look up\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: The maximum number of records to return\n          in: query\n          name: max\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: The offset of the records set to return for pagination\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: The name of the property to which sorting will be applied\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MediaItems\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get MediaItems for Tag\n      tags:\n        - tags\n  \"/resources/tags/{id}/related.json\":\n    get:\n      description: Returns the list of Tags related to the Tag identified by the 'id' in\n        the specified format.\n      operationId: getRelatedTagsById\n      parameters:\n        - description: The id of the tag to look up\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: The maximum number of records to return\n          in: query\n          name: max\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: The offset of the records set to return for pagination\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: The name of the property to which sorting will be applied\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tags\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get related Tags by ID\n      tags:\n        - tags\n  \"/resources/tags/{id}/syndicate.json\":\n    get:\n      description: Renders the list of MediaItems associated with the Tag identified by the\n        'id'.\n      parameters:\n        - description: The id of the record to look up\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: \"Method used to render an html request. Accepts one: [mv, list,\n            feed]\"\n          in: query\n          name: displayMethod\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MediaItems\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get MediaItems for Tag\n      tags:\n        - tags\n  \"/resources/userMediaLists/{id}.json\":\n    get:\n      description: Get a specific user media list by 'id'.\n      operationId: getUserMediaList\n      parameters:\n        - description: The id of the record to look up\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: \"Method used to render an html request. Accepts one: [mv, list,\n            feed]\"\n          in: query\n          name: displayMethod\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MediaItems\"\n        \"400\":\n          description: Invalid ID\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: string\n      summary: Get UserMediaList by ID\n      tags:\n        - userMediaLists\nservers:\n  - url: https://api.digitalmedia.hhs.gov/api/v2\ncomponents:\n  schemas:\n    AlternateImage:\n      properties:\n        height:\n          format: int32\n          type: integer\n        id:\n          format: int64\n          type: integer\n        name:\n          type: string\n        url:\n          type: string\n        width:\n          format: int32\n          type: integer\n      required:\n        - id\n        - url\n    ApiResponse:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/MediaItem\"\n          type: array\n      required:\n        - meta\n        - results\n        - callback\n    Campaign:\n      properties:\n        contactEmail:\n          type: string\n        description:\n          type: string\n        endDate:\n          format: date\n          type: string\n        id:\n          format: int64\n          type: integer\n        mediaItems:\n          items:\n            $ref: \"#/components/schemas/MediaItem\"\n          type: array\n        name:\n          type: string\n        source:\n          $ref: \"#/components/schemas/Source\"\n        startDate:\n          format: date\n          type: string\n      required:\n        - id\n        - name\n        - startDate\n    Campaigns:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/Campaign\"\n          type: array\n      required:\n        - meta\n        - callback\n        - results\n    Collection:\n      properties:\n        campaigns:\n          items:\n            $ref: \"#/components/schemas/Campaign\"\n          type: array\n        dateContentAuthored:\n          format: date\n          type: string\n        dateContentPublished:\n          format: date\n          type: string\n        dateContentReviewed:\n          format: date\n          type: string\n        dateContentUpdated:\n          format: date\n          type: string\n        dateSyndicationCaptured:\n          format: date\n          type: string\n        dateSyndicationUpdated:\n          format: date\n          type: string\n        dateSyndicationVisible:\n          format: date\n          type: string\n        description:\n          type: string\n        externalGuid:\n          type: string\n        hash:\n          type: string\n        id:\n          format: int64\n          type: integer\n        language:\n          $ref: \"#/components/schemas/Language\"\n        mediaItems:\n          items:\n            $ref: \"#/components/schemas/MediaItem\"\n          type: array\n        name:\n          type: string\n        source:\n          $ref: \"#/components/schemas/Source\"\n        sourceUrl:\n          type: string\n    EmbedCode:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/Snippet\"\n          type: array\n      required:\n        - meta\n        - callback\n        - results\n    Html:\n      properties:\n        createdBy:\n          type: string\n        customAttributionUrl:\n          type: string\n        customPreviewUrl:\n          type: string\n        customThumbnailUrl:\n          type: string\n        dateContentAuthored:\n          format: date\n          type: string\n        dateContentPublished:\n          format: date\n          type: string\n        dateContentReviewed:\n          format: date\n          type: string\n        dateContentUpdated:\n          format: date\n          type: string\n        dateSyndicationCaptured:\n          format: date\n          type: string\n        dateSyndicationUpdated:\n          format: date\n          type: string\n        dateSyndicationVisible:\n          format: date\n          type: string\n        description:\n          type: string\n        extendedAttributes:\n          type: object\n        externalGuid:\n          type: string\n        foreignSyndicationAPIUrl:\n          type: string\n        hash:\n          type: string\n        id:\n          format: int64\n          type: integer\n        language:\n          $ref: \"#/components/schemas/Language\"\n        mediaType:\n          type: string\n        name:\n          type: string\n        source:\n          $ref: \"#/components/schemas/Source\"\n        sourceUrl:\n          type: string\n        targetUrl:\n          type: string\n      required:\n        - id\n        - name\n        - mediaType\n        - sourceUrl\n        - dateSyndicationCaptured\n        - dateSyndicationUpdated\n        - dateSyndicationVisible\n        - language\n        - source\n        - createdBy\n        - foreignSyndicationAPIUrl\n    Image:\n      properties:\n        altText:\n          type: string\n        createdBy:\n          type: string\n        customAttributionUrl:\n          type: string\n        customPreviewUrl:\n          type: string\n        customThumbnailUrl:\n          type: string\n        dateContentAuthored:\n          format: date\n          type: string\n        dateContentPublished:\n          format: date\n          type: string\n        dateContentReviewed:\n          format: date\n          type: string\n        dateContentUpdated:\n          format: date\n          type: string\n        dateSyndicationCaptured:\n          format: date\n          type: string\n        dateSyndicationUpdated:\n          format: date\n          type: string\n        dateSyndicationVisible:\n          format: date\n          type: string\n        description:\n          type: string\n        extendedAttributes:\n          type: object\n        externalGuid:\n          type: string\n        foreignSyndicationAPIUrl:\n          type: string\n        hash:\n          type: string\n        height:\n          format: int32\n          type: integer\n        id:\n          format: int64\n          type: integer\n        imageFormat:\n          type: string\n        language:\n          $ref: \"#/components/schemas/Language\"\n        mediaType:\n          type: string\n        name:\n          type: string\n        source:\n          $ref: \"#/components/schemas/Source\"\n        sourceUrl:\n          type: string\n        targetUrl:\n          type: string\n        width:\n          format: int32\n          type: integer\n      required:\n        - id\n        - name\n        - mediaType\n        - sourceUrl\n        - dateSyndicationCaptured\n        - dateSyndicationUpdated\n        - dateSyndicationVisible\n        - language\n        - source\n        - createdBy\n        - foreignSyndicationAPIUrl\n        - width\n        - height\n        - imageFormat\n        - altText\n    Infographic:\n      properties:\n        altText:\n          type: string\n        createdBy:\n          type: string\n        customAttributionUrl:\n          type: string\n        customPreviewUrl:\n          type: string\n        customThumbnailUrl:\n          type: string\n        dateContentAuthored:\n          format: date\n          type: string\n        dateContentPublished:\n          format: date\n          type: string\n        dateContentReviewed:\n          format: date\n          type: string\n        dateContentUpdated:\n          format: date\n          type: string\n        dateSyndicationCaptured:\n          format: date\n          type: string\n        dateSyndicationUpdated:\n          format: date\n          type: string\n        dateSyndicationVisible:\n          format: date\n          type: string\n        description:\n          type: string\n        extendedAttributes:\n          type: object\n        externalGuid:\n          type: string\n        foreignSyndicationAPIUrl:\n          type: string\n        hash:\n          type: string\n        height:\n          format: int32\n          type: integer\n        id:\n          format: int64\n          type: integer\n        imageFormat:\n          type: string\n        language:\n          $ref: \"#/components/schemas/Language\"\n        mediaType:\n          type: string\n        name:\n          type: string\n        source:\n          $ref: \"#/components/schemas/Source\"\n        sourceUrl:\n          type: string\n        targetUrl:\n          type: string\n        width:\n          format: int32\n          type: integer\n      required:\n        - id\n        - name\n        - mediaType\n        - sourceUrl\n        - dateSyndicationCaptured\n        - dateSyndicationUpdated\n        - dateSyndicationVisible\n        - language\n        - source\n        - createdBy\n        - foreignSyndicationAPIUrl\n        - width\n        - height\n        - imageFormat\n        - altText\n    Language:\n      properties:\n        id:\n          format: int64\n          type: integer\n        isActive:\n          type: boolean\n        isoCode:\n          type: string\n        name:\n          type: string\n      required:\n        - id\n        - name\n        - isoCode\n        - isActive\n    Languages:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/Language\"\n          type: array\n      required:\n        - meta\n        - callback\n        - results\n    Likes:\n      properties:\n        likes:\n          format: int32\n          type: integer\n      required:\n        - likes\n    MediaItem:\n      properties:\n        createdBy:\n          type: string\n        customAttributionUrl:\n          type: string\n        customPreviewUrl:\n          type: string\n        customThumbnailUrl:\n          type: string\n        dateContentAuthored:\n          format: date\n          type: string\n        dateContentPublished:\n          format: date\n          type: string\n        dateContentReviewed:\n          format: date\n          type: string\n        dateContentUpdated:\n          format: date\n          type: string\n        dateSyndicationCaptured:\n          format: date\n          type: string\n        dateSyndicationUpdated:\n          format: date\n          type: string\n        dateSyndicationVisible:\n          format: date\n          type: string\n        description:\n          type: string\n        extendedAttributes:\n          type: object\n        externalGuid:\n          type: string\n        foreignSyndicationAPIUrl:\n          type: string\n        hash:\n          type: string\n        id:\n          format: int64\n          type: integer\n        language:\n          $ref: \"#/components/schemas/Language\"\n        mediaType:\n          type: string\n        name:\n          type: string\n        source:\n          $ref: \"#/components/schemas/Source\"\n        sourceUrl:\n          type: string\n        targetUrl:\n          type: string\n      required:\n        - id\n        - name\n        - mediaType\n        - sourceUrl\n        - dateSyndicationCaptured\n        - dateSyndicationUpdated\n        - dateSyndicationVisible\n        - language\n        - source\n        - createdBy\n        - foreignSyndicationAPIUrl\n    MediaItems:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/MediaItem\"\n          type: array\n      required:\n        - meta\n        - callback\n        - results\n    MediaType:\n      properties:\n        description:\n          type: string\n        name:\n          type: string\n      required:\n        - name\n        - description\n    MediaTypes:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/MediaType\"\n          type: array\n      required:\n        - meta\n        - callback\n        - results\n    Message:\n      properties:\n        errorCode:\n          type: string\n        errorDetail:\n          type: string\n        errorMessage:\n          type: string\n        userMessage:\n          type: string\n      required:\n        - userMessage\n    Meta:\n      properties:\n        messages:\n          items:\n            $ref: \"#/components/schemas/Message\"\n          type: array\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        status:\n          format: int64\n          type: integer\n      required:\n        - status\n        - messages\n        - pagination\n    PDF:\n      properties:\n        createdBy:\n          type: string\n        customAttributionUrl:\n          type: string\n        customPreviewUrl:\n          type: string\n        customThumbnailUrl:\n          type: string\n        dateContentAuthored:\n          format: date\n          type: string\n        dateContentPublished:\n          format: date\n          type: string\n        dateContentReviewed:\n          format: date\n          type: string\n        dateContentUpdated:\n          format: date\n          type: string\n        dateSyndicationCaptured:\n          format: date\n          type: string\n        dateSyndicationUpdated:\n          format: date\n          type: string\n        dateSyndicationVisible:\n          format: date\n          type: string\n        description:\n          type: string\n        extendedAttributes:\n          type: object\n        externalGuid:\n          type: string\n        foreignSyndicationAPIUrl:\n          type: string\n        hash:\n          type: string\n        id:\n          format: int64\n          type: integer\n        language:\n          $ref: \"#/components/schemas/Language\"\n        mediaType:\n          type: string\n        name:\n          type: string\n        source:\n          $ref: \"#/components/schemas/Source\"\n        sourceUrl:\n          type: string\n        targetUrl:\n          type: string\n      required:\n        - id\n        - name\n        - mediaType\n        - sourceUrl\n        - dateSyndicationCaptured\n        - dateSyndicationUpdated\n        - dateSyndicationVisible\n        - language\n        - source\n        - createdBy\n        - foreignSyndicationAPIUrl\n    Pagination:\n      properties:\n        count:\n          format: int32\n          type: integer\n        currentUrl:\n          type: string\n        max:\n          format: int32\n          type: integer\n        nextUrl:\n          type: string\n        offset:\n          format: int32\n          type: integer\n        pageNum:\n          format: int32\n          type: integer\n        previousUrl:\n          type: string\n        sort:\n          type: string\n        total:\n          format: int32\n          type: integer\n        totalPages:\n          format: int32\n          type: integer\n      required:\n        - max\n        - offset\n        - count\n        - total\n        - pageNum\n        - totalPages\n        - sort\n        - currentUrl\n    Ratings:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/Likes\"\n          type: array\n      required:\n        - meta\n        - callback\n        - results\n    Resource:\n      properties:\n        id:\n          format: int64\n          type: integer\n        name:\n          type: string\n      required:\n        - name\n    ResourceList:\n      properties:\n        items:\n          items:\n            $ref: \"#/components/schemas/Resource\"\n          type: array\n        mediaType:\n          type: string\n      required:\n        - items\n        - mediaType\n    ResourceLists:\n      properties:\n        alternateImages:\n          $ref: \"#/components/schemas/ResourceList\"\n        campaigns:\n          $ref: \"#/components/schemas/ResourceList\"\n        collections:\n          $ref: \"#/components/schemas/ResourceList\"\n        htmls:\n          $ref: \"#/components/schemas/ResourceList\"\n        images:\n          $ref: \"#/components/schemas/ResourceList\"\n        infographics:\n          $ref: \"#/components/schemas/ResourceList\"\n        languages:\n          $ref: \"#/components/schemas/ResourceList\"\n        socialMedias:\n          $ref: \"#/components/schemas/ResourceList\"\n        sources:\n          $ref: \"#/components/schemas/ResourceList\"\n        tagTypes:\n          $ref: \"#/components/schemas/ResourceList\"\n        tags:\n          $ref: \"#/components/schemas/ResourceList\"\n        videos:\n          $ref: \"#/components/schemas/ResourceList\"\n    Resources:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/ResourceLists\"\n          type: array\n      required:\n        - meta\n        - callback\n        - results\n    Snippet:\n      properties:\n        snippet:\n          type: string\n      required:\n        - snippet\n    Source:\n      properties:\n        acronym:\n          type: string\n        contactEmail:\n          type: string\n        id:\n          format: int64\n          type: integer\n        largeLogoUrl:\n          type: string\n        name:\n          type: string\n        smallLogoUrl:\n          type: string\n        websiteUrl:\n          type: string\n      required:\n        - id\n        - name\n        - acronym\n        - websiteUrl\n    Sources:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/Source\"\n          type: array\n      required:\n        - meta\n        - callback\n        - results\n    SyndicatedMediaItem:\n      properties:\n        content:\n          type: string\n        contentEncoding:\n          type: string\n        contentType:\n          type: string\n        description:\n          type: string\n        id:\n          format: int64\n          type: integer\n        mediaType:\n          type: string\n        name:\n          type: string\n        text:\n          type: string\n    SyndicatedMediaItems:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/SyndicatedMediaItem\"\n          type: array\n      required:\n        - meta\n        - callback\n        - results\n    Tag:\n      properties:\n        id:\n          format: int64\n          type: integer\n        language:\n          $ref: \"#/components/schemas/Language\"\n        name:\n          type: string\n        type:\n          $ref: \"#/components/schemas/TagType\"\n      required:\n        - id\n        - name\n        - language\n        - type\n    TagLanguage:\n      properties:\n        id:\n          format: int64\n          type: integer\n        isoCode:\n          type: string\n        name:\n          type: string\n      required:\n        - id\n        - name\n        - isoCode\n    TagLanguages:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/TagLanguage\"\n          type: array\n      required:\n        - meta\n        - callback\n        - results\n    TagType:\n      properties:\n        description:\n          type: string\n        id:\n          format: int64\n          type: integer\n        name:\n          type: string\n      required:\n        - id\n        - name\n    TagTypes:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/TagType\"\n          type: array\n      required:\n        - meta\n        - callback\n        - results\n    Tags:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            $ref: \"#/components/schemas/Tag\"\n          type: array\n      required:\n        - meta\n        - callback\n        - results\n    Video:\n      properties:\n        createdBy:\n          type: string\n        customAttributionUrl:\n          type: string\n        customPreviewUrl:\n          type: string\n        customThumbnailUrl:\n          type: string\n        dateContentAuthored:\n          format: date\n          type: string\n        dateContentPublished:\n          format: date\n          type: string\n        dateContentReviewed:\n          format: date\n          type: string\n        dateContentUpdated:\n          format: date\n          type: string\n        dateSyndicationCaptured:\n          format: date\n          type: string\n        dateSyndicationUpdated:\n          format: date\n          type: string\n        dateSyndicationVisible:\n          format: date\n          type: string\n        description:\n          type: string\n        duration:\n          format: int32\n          type: integer\n        extendedAttributes:\n          type: object\n        externalGuid:\n          type: string\n        foreignSyndicationAPIUrl:\n          type: string\n        hash:\n          type: string\n        height:\n          format: int32\n          type: integer\n        id:\n          format: int64\n          type: integer\n        language:\n          $ref: \"#/components/schemas/Language\"\n        mediaType:\n          type: string\n        name:\n          type: string\n        source:\n          $ref: \"#/components/schemas/Source\"\n        sourceUrl:\n          type: string\n        targetUrl:\n          type: string\n        width:\n          format: int32\n          type: integer\n      required:\n        - id\n        - name\n        - mediaType\n        - sourceUrl\n        - dateSyndicationCaptured\n        - dateSyndicationUpdated\n        - dateSyndicationVisible\n        - language\n        - source\n        - createdBy\n        - foreignSyndicationAPIUrl\n        - duration\n    YoutubeMetadata:\n      properties:\n        callback:\n          type: string\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        results:\n          items:\n            type: object\n          type: array\n      required:\n        - meta\n        - callback\n        - results\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/hhs.gov-2-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/hhs.gov-2-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/resources/media/{id}/preview.jpg\": get: responses: 200: contents: unsupported content types: [image/jpeg]",
	"NotImplemented": [
		"unsupported content types"
	]
}