{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NixOS/hydra"
		},
		"file": {
			"name": "hydra-api.yaml",
			"size": 0,
			"path": "hydra-api.yaml",
			"byteSize": 33440,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Hydra API\n  description: Specification of the Hydra REST API\nservers:\n  - url: https://hydra.nixos.org\npaths:\n\n  /login:\n    post:\n      summary: Log in using username/password credentials\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  description: user\n                  type: string\n                password:\n                  description: password\n                  type: string\n      responses:\n        '200':\n          description: successful login\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  username:\n                    description: user\n                    type: string\n                  fullname:\n                    description: full name\n                    type: string\n                  emailaddress:\n                    description: email\n                    type: string\n                  userroles:\n                    description: user roles\n                    type: array\n                    items:\n                      type: string\n        '403':\n          description: login failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /:\n    get:\n      summary: Retrieves all projects\n      description: Retrieves a list of all projects.\n      responses:\n        '200':\n          description: List of all configured projects\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Project'\n              examples:\n                projects-success:\n                  $ref: '#/components/examples/projects-success'\n\n  /api/push:\n    put:\n      summary: trigger jobsets\n      parameters:\n        - in: query\n          name: jobsets\n          description: project and jobset formatted as \"\u003cproject\u003e:\u003cjobset\u003e\" to evaluate\n          schema:\n            type: string\n      responses:\n        '200':\n          description: jobset trigger response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  jobsetsTriggered:\n                    type: array\n                    items:\n                      type: string\n\n\n  /api/jobsets:\n    get:\n      summary: retrieve a jobset overview for a project\n      parameters:\n        - in: query\n          name: project\n          description: name of the project\n          schema:\n            type: string\n      responses:\n        '200':\n          description: jobset overview\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobsetOverview'\n        '404':\n          description: project could not be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /search:\n    get:\n      summary: search for evaluations\n      description: search for evaluations by name\n      parameters:\n        - in: query\n          name: query\n          schema:\n            type: string\n          description: string to search for\n      responses:\n        '200':\n          description: search response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchResult'\n        '500':\n          description: Empty search term or other internal error\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    description: error message\n\n  /project/{id}:\n    put:\n      summary: Create a project\n      parameters:\n        - name: id\n          in: path\n          description: project identifier\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: name of the project\n                  type: string\n                displayname:\n                  description: display name of the project\n                  type: string\n                description:\n                  description: description of the project\n                  type: string\n                homepage:\n                  description: homepage of the project\n                  type: string\n                owner:\n                  description: owner of the project\n                  type: string\n                enabled:\n                  description: when set to true the project gets scheduled for evaluation\n                  type: boolean\n                enable_dynamic_run_command:\n                  description: when true the project's jobsets support executing dynamically defined RunCommand hooks. Requires the server and project's configuration to also enable dynamic RunCommand.\n                  type: boolean\n                visible:\n                  description: when set to true the project is displayed in the web interface\n                  type: boolean\n                declarative:\n                  description: declarative input configured for this project\n                  type: object\n                  $ref: '#/components/schemas/DeclarativeInput'\n      responses:\n        '400':\n          description: bad request\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    description: error message\n                    type: string\n        '403':\n          description: request unauthorized\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    description: error message\n                    type: string\n        '200':\n          description: projects exists\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  redirect:\n                    description: URL of the created project\n                    type: string\n        '201':\n          description: successful project creation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  uri:\n                    description: URL of the created project\n                    type: string\n                  name:\n                    description: name of the project\n                    type: string\n                  redirect:\n                    description: URL of the created project\n                    type: string\n                  type:\n                    description: type of the created resource (\"project\")\n                    type: string\n\n    get:\n      summary: Retrieves a project designated by name\n      parameters:\n        - name: id\n          in: path\n          description: project identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: project response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n              examples:\n                project-success:\n                  $ref: '#/components/examples/project-success'\n        '404':\n          description: project could not be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n    delete:\n      summary: Deletes a project\n      parameters:\n        - name: id\n          in: path\n          description: project identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: project deleted\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  redirect:\n                    type: string\n                    description: root of the Hydra instance\n        '404':\n          description: project could not be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /jobset/{project-id}/{jobset-id}:\n    put:\n      summary: Creates a jobset in an existing project\n      parameters:\n        - name: project-id\n          required: true\n          in: path\n          description: name of the project to create the jobset in\n          schema:\n            type: string\n        - name: jobset-id\n          required: true\n          in: path\n          description: name of the jobset to create\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Jobset'\n      responses:\n        '201':\n          description: jobset creation response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  redirect:\n                    type: string\n                    description: url pointing to the webui for the created jobset\n                  uri:\n                    type: string\n                    description: url to the created jobset\n                  name:\n                    type: string\n                    description: name of the created jobset\n                  'type':\n                    type: string\n                    description: Set to \"jobset\"\n        '200':\n          description: jobset creation response when jobset exists already\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  redirect:\n                    type: string\n                    description: url pointing to the webui for the created jobset\n\n    get:\n      summary: Retrieves a jobset designated by project and jobset id\n      parameters:\n        - name: project-id\n          in: path\n          description: name of the project the jobset belongs to\n          required: true\n          schema:\n            type: string\n        - name: jobset-id\n          in: path\n          description: name of the jobset to retrieve\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: jobset response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Jobset'\n              examples:\n                jobset-success:\n                  $ref: '#/components/examples/jobset-success'\n        '404':\n          description: jobset couldn't be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n    delete:\n      summary: Deletes a jobset designated by project and jobset id\n      parameters:\n        - name: project-id\n          in: path\n          description: name of the project the jobset belongs to\n          required: true\n          schema:\n            type: string\n        - name: jobset-id\n          in: path\n          description: name of the jobset to retrieve\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: jobset successfully deleted\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  redirect:\n                    type: string\n                    description: root of the Hydra instance\n        '404':\n          description: jobset couldn't be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /jobset/{project-id}/{jobset-id}/evals:\n    get:\n      summary: Retrieves all evaluations of a jobset\n      parameters:\n      - name: project-id\n        in: path\n        description: project identifier\n        required: true\n        schema:\n          type: string\n      - name: jobset-id\n        in: path\n        description: jobset identifier\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: evaluations\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Evaluations'\n              examples:\n                evals-success:\n                  $ref: '#/components/examples/evals-success'\n        '404':\n          description: jobset couldn't be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /job/{project-id}/{jobset-id}/{job-id}/shield:\n    get:\n      summary: Generate data for a shields.io badge\n      parameters:\n      - name: project-id\n        in: path\n        description: project identifier\n        required: true\n        schema:\n          type: string\n      - name: jobset-id\n        in: path\n        description: jobset identifier\n        required: true\n        schema:\n          type: string\n      - name: job-id\n        in: path\n        description: job identifier\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: see \u003ca href=\"https://shields.io/endpoint\"\u003ehttps://shields.io/endpoint\u003c/a\u003e on how to use this\n          content:\n            application/json:\n              examples:\n                shield-success:\n                  value:\n                    color: green\n                    schemaVersion: 1\n                    label: hydra build\n                    message: passing\n\n  /build/{build-id}:\n    get:\n      summary: Retrieves a single build of a jobset by id\n      parameters:\n      - name: build-id\n        in: path\n        description: build identifier\n        required: true\n        schema:\n            type: integer\n      responses:\n        '200':\n          description: build\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Build'\n              examples:\n                build-success:\n                  $ref: '#/components/examples/build-success'\n        '404':\n          description: build couldn't be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /build/{build-id}/constituents:\n    get:\n      summary: Retrieves a build's constituent jobs\n      parameters:\n      - name: build-id\n        in: path\n        description: build identifier\n        required: true\n        schema:\n            type: integer\n      responses:\n        '200':\n          description: build\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Build'\n        '404':\n          description: build couldn't be found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /eval/{build-id}:\n    get:\n      summary: Retrieves evaluations identified by build id\n      parameters:\n        - name: build-id\n          in: path\n          description: build identifier\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: evaluation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobsetEval'\n\ncomponents:\n  schemas:\n\n    SearchResult:\n      type: object\n      properties:\n        jobsets:\n          description: jobsets matching search term\n          type: array\n          items:\n            $ref: '#/components/schemas/Jobset'\n        projects:\n          description: projects missing search term\n          type: array\n          items:\n            $ref: '#/components/schemas/Project'\n        builds:\n          description: builds matching search term\n          type: array\n          items:\n            $ref: '#/components/schemas/Build'\n        buildsdrv:\n          description: derivations matching search term\n          type: array\n          items:\n            $ref: '#/components/schemas/Build'\n\n\n    Error:\n      type: object\n      properties:\n        error:\n          description: error message\n          type: string\n\n    Project:\n      type: object\n      properties:\n        owner:\n          description: username of the project owner\n          type: string\n        name:\n          description: name of the project\n          type: string\n        displayname:\n          description: name to be displayed in the web interface\n          type: string\n        description:\n          description: description of the project\n          type: string\n        homepage:\n          description: homepage of the project\n          type: string\n        hidden:\n          description: when set to true the project is not displayed in the web interface\n          type: boolean\n        enabled:\n          description: when set to true the project gets scheduled for evaluation\n          type: boolean\n        enable_dynamic_run_command:\n          description: when true the project's jobsets support executing dynamically defined RunCommand hooks. Requires the server and project's configuration to also enable dynamic RunCommand.\n          type: boolean\n        declarative:\n          description: declarative input configured for this project\n          type: object\n          $ref: '#/components/schemas/DeclarativeInput'\n        jobsets:\n          description: list of jobsets belonging to this project\n          type: array\n          items:\n            type: string\n\n    DeclarativeInput:\n      type: object\n      properties:\n        file:\n          description: The file in `value` which contains the declarative spec file. Relative to the root of `value`.\n          type: string\n        type:\n          description: The type of the declarative input.\n          type: string\n        value:\n          description: The value of the declarative input.\n          type: string\n\n    JobsetInput:\n      type: object\n      properties:\n        name:\n          description: name of the input\n          type: string\n        value:\n          description: value of the input\n          type: string\n        type:\n          description: type of input\n          type: string\n        emailresponsible:\n          description: whether or not to email responsible parties\n          type: boolean\n\n    Jobset:\n      type: object\n      properties:\n        name:\n          description: the name of the jobset\n          type: string\n        project:\n          description: the project this jobset belongs to\n          type: string\n        description:\n          nullable: true\n          description: a description of the jobset\n          type: string\n        nixexprinput:\n          nullable: true\n          description: the name of the jobset input which contains the nixexprpath\n          type: string\n        nixexprpath:\n          nullable: true\n          description: the path to the file to evaluate\n          type: string\n        errormsg:\n          nullable: true\n          description: contains the stderr output of the nix-instantiate command\n          type: string\n        errortime:\n          nullable: true\n          description: timestamp associated with errormsg\n          type: integer\n        lastcheckedtime:\n          nullable: true\n          description: the last time the evaluator looked at this jobset\n          type: integer\n        triggertime:\n          nullable: true\n          description: set to the time we were triggered by a push event\n          type: integer\n        enabled:\n          description: 0 is disabled, 1 is enabled, 2 is one-shot, and 3 is one-at-a-time\n          type: integer\n        enableemail:\n          description: when true the jobset sends emails when previously-successful builds fail\n          type: boolean\n        enable_dynamic_run_command:\n          description: when true the jobset supports executing dynamically defined RunCommand hooks. Requires the server and project's configuration to also enable dynamic RunCommand.\n          type: boolean\n        visible:\n          description: when true the jobset is visible in the web frontend\n          type: boolean\n        emailoverride:\n          description: email address to send notices to instead of the package maintainer (can be a comma separated list)\n          type: string\n        keepnr:\n          description: number or evaluations to keep\n          type: integer\n        checkinterval:\n          description: interval (in seconds) in which to check for evaluation\n          type: integer\n        schedulingshares:\n          description: how many shares to be allocated to the jobset\n          type: integer\n        fetcherrormsg:\n          nullable: true\n          description: contains the error message when there was a problem fetching sources for a jobset\n          type: string\n        startime:\n          nullable: true\n          description: set to the time the latest evaluation started (if one is currently running)\n          type: integer\n        type:\n          description: the type of the jobset\n          type: integer\n        flake:\n          nullable: true\n          description: the flake uri to evaluate\n          type: string\n        inputs:\n          description: inputs configured for this jobset\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/JobsetInput'\n\n    JobsetEvalInput:\n      type: object\n      properties:\n        uri:\n          nullable: true\n          description: URI of this input (which differs depending on the type of the input)\n          type: string\n        'type':\n          description: The type of this input\n          type: string\n        revision:\n          nullable: true\n          description: A Git/Mercurial commit hash or a Subversion revision number.\n          type: string\n        value:\n          nullable: true\n          description: A value that corresponds to the type of input\n          oneOf:\n            - type: boolean\n            - type: string\n            - type: array\n              items:\n                type: string\n          type: boolean\n        dependency:\n          nullable: true\n          description: \u003e\n            **Deprecated**: The build id of another build\n          type: string\n\n\n    JobsetEval:\n      type: object\n      properties:\n        id:\n          type: integer\n        timestamp:\n          description: Time in seconds since the Unix epoch when this evaluation was created.\n          type: integer\n        checkouttime:\n          description: How long it took (in seconds) to fetch the jobset inputs.\n          type: integer\n        evaltime:\n          description: How long it took (in seconds) to evaluate the jobset.\n          type: integer\n        hasnewbuilds:\n          description: Whether the number of JobsetEval members is different from the prior evaluation. This is always true on the first evaluation.\n          type: boolean\n        flake:\n          description: For flake jobsets, the immutable flake reference allowing you to reproduce this evaluation. Null otherwise.\n          nullable: true\n          type: string\n        builds:\n          description: List of builds generated for this jobset evaluation.\n          type: array\n          items:\n            type: integer\n        jobsetevalinputs:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/JobsetEvalInput'\n\n    JobsetOverview:\n      type: array\n      items:\n          type: object\n          properties:\n            name:\n              description: name of the jobset\n              type: string\n            project:\n              description: name of the project\n              type: string\n            nrtotal:\n              description: number of evaluations\n              type: integer\n            checkinterval:\n              description: interval in seconds at which to check the jobset inputs\n              type: integer\n            haserrormsg:\n              description: true if the evaluation had errors\n              type: boolean\n            nrscheduled:\n              description: number of scheduled evaluations\n              type: integer\n            nrfailed:\n              description: number of failed evaluations\n              type: integer\n            errortime:\n              description: time an error occurred during evaluation (unix time stamp)\n              type: integer\n            fetcherrormsg:\n              nullable: true\n              description: contains the error message when there was a problem fetching sources for a jobset\n            starttime:\n              nullable: true\n              description: time when build started\n              type: integer\n            lastcheckedtime:\n              description: the last time the jobset inputs where checked to see if an evaluation needs to be scheduled (unix time stamp)\n              type: integer\n            triggertime:\n              nullable: true\n              description: time of the last evaluation trigger for this jobset (unix time stamp)\n              type: integer\n\n\n\n    Evaluations:\n      type: object\n      properties:\n        first:\n          description: first list of results\n          type: string\n        next:\n          description: next list of results\n          type: string\n        last:\n          description: last list of results\n          type: string\n        evals:\n          type: array\n          description: List of evaluations\n          items:\n            type: object\n            additionalProperties:\n              $ref: '#/components/schemas/JobsetEval'\n\n    BuildProduct:\n      type: object\n      properties:\n        filesize:\n          nullable: true\n          description: Size of the produced file\n          type: integer\n        defaultpath:\n          description: This is a Git/Mercurial commit hash or a Subversion revision number\n          type: string\n        'type':\n          description: Types of build product (user defined)\n          type: string\n        name:\n          description: Name of the file\n          type: string\n        path:\n          description: the nix store path\n          type: string\n        subtype:\n          description: user-specified\n          type: string\n        sha256hash:\n          nullable: true\n          description: sha256 hash of the file\n          type: string\n\n    BuildOutput:\n      type: object\n      properties:\n        path:\n          description: The nix store path\n          type: string\n\n    Build:\n      type: object\n      properties:\n        id:\n          type: integer\n        starttime:\n          description: time when build started\n          type: integer\n        stoptime:\n          description: time when build ended\n          type: integer\n        timestamp:\n          description: time when the build was first created\n          type: integer\n        jobsetevals:\n          description: list of evaluations this build is part of\n          type: array\n          items:\n            type: integer\n        finished:\n          description: true when the build is finished\n          type: boolean\n        nixname:\n          description: name from the build's derivation\n          type: string\n        buildstatus:\n          nullable: true # should only be null if finished is false\n          description: |\n            Indicates the build status:\u003c/br\u003e\n            \u003cul\u003e\n             \u003cli\u003e0 : succeeded\u003c/li\u003e\n             \u003cli\u003e1 : failed\u003c/li\u003e\n             \u003cli\u003e2 : dependency failed\u003c/li\u003e\n             \u003cli\u003e3 : aborted\u003c/li\u003e\n             \u003cli\u003e4 : canceled by the user\u003c/li\u003e\n             \u003cli\u003e6 : failed with output\u003c/li\u003e\n             \u003cli\u003e7 : timed out\u003c/li\u003e\n             \u003cli\u003e9 : aborted\u003c/li\u003e\n             \u003cli\u003e10 : log size limit exceeded\u003c/li\u003e\n             \u003cli\u003e11 : output size limit exceeded\u003c/li\u003e\n             \u003cli\u003e*  : failed\u003c/li\u003e\n            \u003c/ul\u003e\n            \u003cstrong\u003eNote:\u003c/strong\u003ebuildstatus should only be `null` if `finished` is false.\n          type: integer\n        jobset:\n          description: jobset this build belongs to\n          type: string\n        priority:\n          description: determines the priority with which this build will be executed (higher value means higher priority)\n          type: integer\n        job:\n          description: nix attribute from the nixexprpath\n          type: string\n        drvpath:\n          description: filename of the drv\n          type: string\n        system:\n          description: system this build was done for\n          type: string\n        project:\n          description: project this build belongs to\n          type: string\n        buildproducts:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/BuildProduct'\n        buildoutputs:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/BuildOutput'\n        buildmetrics:\n          description: |\n            user defined build metrics from `$out/nix-support/hydra-metrics`. The file should\n            define metrics separated by new lines using the following format:\n\n            ```\n            \u003cname\u003e \u003cvalue\u003e[ \u003cunit\u003e]\n            ```\n            The name and unit fields are strings, the value is a float. The unit is optional.\n          type: object\n          properties:\n            name:\n              type: string\n              description: name of the measured build metric\n            value:\n              type: string\n              description: measured value\n            unit:\n              type: string\n              description: unit of the measured build metric\n\n  examples:\n    projects-success:\n      value:\n      - displayname: Foo Bar\n        description: Foo Bar Baz Qux\n        enabled: true\n        owner: alice\n        jobsets:\n          - bar-jobset\n        hidden: false\n        homepage: https://example.com/\n        name: foobar\n      - jobsets:\n          - test-jobset\n        hidden: false\n        name: hello\n        homepage: https://example.com/\n        description: Hi There\n        displayname: Hello\n        enabled: true\n        owner: alice\n\n    project-success:\n      value:\n        jobsets:\n          - bar-jobset\n        homepage: https://example.com/\n        name: foobar\n        hidden: false\n        enabled: true\n        displayname: Foo Bar\n        description: Foo Bar Baz Qux\n        owner: alice\n\n    jobset-success:\n      value:\n        triggertime: null\n        enableemail: false\n        jobsetinputs:\n          nixpkgs:\n            type: git\n            name: nixpkgs\n            emailresponsible: false\n            jobsetinputalts:\n              - https://github.com/NixOS/nixpkgs.git\n          officialRelease:\n            jobsetinputalts:\n              - 'false'\n            emailresponsible: false\n            name: officialRelease\n            type: boolean\n        fetcherrormsg: ''\n        hidden: false\n        schedulingshares: 1\n        emailoverride: ''\n        starttime: null\n        description: ''\n        errormsg: ''\n        lastcheckedtime: null\n        nixexprinput: nixpkgs\n        checkinterval: 0\n        project: foobar\n        flake: ''\n        type: 0\n        enabled: 1\n        name: bar-jobset\n        keepnr: 0\n        nixexprpath: pkgs/top-level/release.nix\n        errortime: null\n\n    evals-success:\n      value:\n        last: '?page=1'\n        evals:\n          - builds:\n              - 2\n            jobsetevalinputs:\n              hydra:\n                revision: 84a3aecb1d976366060d0f0fd4df7d67b0855f5e\n                uri: 'https://github.com/gilligan/hydra'\n                type: git\n                value: null\n                dependency: null\n              nixpkgs:\n                dependency: null\n                value: null\n                uri: 'https://github.com/nixos/nixpkgs-channels'\n                type: git\n                revision: ab3adfe1c769c22b6629e59ea0ef88ec8ee4563f\n            id: 2\n            hasnewbuilds: 1\n        first: '?page=1'\n\n    build-success:\n      value:\n        buildproducts:\n          '1':\n            filesize: null\n            defaultpath: ''\n            name: hello-2.10\n            type: nix-build\n            sha256hash: null\n            subtype: ''\n            path: /nix/store/y26qxcq1gg2hrqpxdc58b2fghv2bhxjg-hello-2.10\n        id: 1\n        buildstatus: 0\n        nixname: hello-2.10\n        finished: 1\n        jobsetevals:\n          - 1\n        stoptime: 1588365711\n        system: x86_64-linux\n        drvpath: /nix/store/ab9zv2y5gm8hr6g318p0s6kaclwj4slr-hello-2.10.drv\n        buildoutputs:\n          out:\n            path: /nix/store/y26qxcq1gg2hrqpxdc58b2fghv2bhxjg-hello-2.10\n        job: hello\n        jobset: hello\n        buildmetrics: {}\n        priority: 100\n        project: example-hello\n        starttime: 1588365711\n        timestamp: 1588365711\n",
			"canonicalURL": "/github.com/NixOS/hydra@44841fc827ff97a8ded8883f76cdca71cd31e7f1/-/blob/hydra-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/NixOS/hydra/blob/44841fc827ff97a8ded8883f76cdca71cd31e7f1/hydra-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/job/{project-id}/{jobset-id}/{job-id}/shield\": get: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}