{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/clubhouseapi.com/1/openapi.yaml",
			"byteSize": 41302,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://www.clubhouseapi.com/api/\ninfo:\n  description: Clubhouse API\n  title: Clubhouse API\n  version: \"1\"\n  x-apisguru-categories:\n    - social\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/zhuowei/ClubhouseAPI/main/doc/openapi.yaml\n      version: \"3.0\"\n  x-providerName: clubhouseapi.com\npaths:\n  /call_phone_number_auth:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              jsonObject:\n                value: {}\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                jsonObject: {}\n          description: success\n      summary: Call phone number auth.\n  /check_for_update:\n    get:\n      parameters:\n        - example: 1\n          in: query\n          name: is_testflight\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                hasUpdate:\n                  value:\n                    app_build: 262\n                    app_url: https://apps.apple.com/us/app/id1503133294\n                    app_version: 0.1.24\n                    has_update: true\n                    is_mandatory: true\n                    success: true\n                noUpdate:\n                  value:\n                    has_update: false\n                    success: true\n          description: successful response\n      summary: Clubhouse uses this to check for updates when app is not installed from App Store (eg TestFlight)\n  /check_waitlist_status:\n    post:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                waitlisted:\n                  value:\n                    is_onboarding: true\n                    is_waitlisted: true\n                    success: true\n          description: got waitlist status\n        \"401\":\n          content:\n            application/json:\n              examples:\n                error:\n                  value:\n                    detail: Authentication credentials were not provided.\n          description: authorization not provided\n      summary: checks waitlist status.\n  /complete_phone_number_auth:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              jsonObject:\n                value:\n                  phone_number: \"+1234567890\"\n                  verification_code: \"1234\"\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  value:\n                    access_token: \u003cjwt\u003e\n                    auth_token: \u003cauth_token\u003e\n                    is_onboarding: true\n                    is_verified: true\n                    is_waitlisted: true\n                    refresh_token: \u003cjwt\u003e\n                    success: true\n                    user_profile:\n                      name: null\n                      photo_url: null\n                      user_id: 1234\n                      username: null\n          description: success\n      summary: Call phone number auth.\n  /create_channel:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              openNoTopic:\n                value:\n                  club_id: null\n                  event_id: null\n                  is_private: false\n                  is_social_mode: false\n                  topic: null\n                  user_ids: []\n              socialWithTopic:\n                value:\n                  club_id: null\n                  event_id: null\n                  is_private: false\n                  is_social_mode: true\n                  topic: topic\n                  user_ids: []\n            schema:\n              type: object\n      responses:\n        \"400\":\n          content:\n            application/json:\n              examples:\n                waitlisted:\n                  value:\n                    error_message: Your account is waitlisted. Please contact us if this is in error.\n                    success: false\n          description: waitlisted\n      summary: creates a channel\n  /follow:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              jsonObject:\n                value:\n                  user_id: 1234\n            schema:\n              type: object\n      responses:\n        \"401\":\n          content:\n            application/json:\n              examples:\n                waitlisted:\n                  value:\n                    error_message: Your account is waitlisted. Please contact us if this is in error.\n                    success: false\n          description: waitlisted\n      summary: follows a user\n  /get_actionable_notifications:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                empty:\n                  value:\n                    count: 0\n                    next: null\n                    notifications: []\n                    previous: null\n                    success: true\n          description: Returns a list of actionable notifications.\n      summary: get actionable notifications (the bell again)\n  /get_all_topics:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                latest:\n                  value:\n                    topics:\n                      - abbreviated_title: Example\n                        id: 1\n                        title: Example\n                        topics:\n                          - abbreviated_title: The Future\n                            id: 140\n                            title: ‚è≥ The Future\n          description: a list of topics\n      summary: gets all topics.\n  /get_channels:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                channels:\n                  value:\n                    channels:\n                      - channel: abcdefgh\n                        channel_id: 123456\n                        club:\n                          club_id: 12345\n                          description: Club description\n                          enable_private: true\n                          is_community: false\n                          is_follow_allowed: true\n                          is_membership_private: false\n                          name: Club name\n                          num_followers: 456\n                          num_members: 123\n                          num_online: 0\n                          photo_url: https://clubhouseprod.s3.amazonaws.com:443/club_\u003cclub_id\u003e_\u003cguid\u003e_thumbnail_250x250\n                          rules:\n                            - desc: Description\n                              title: Rule\n                        club_id: 12345\n                        club_name: Club name\n                        creator_user_profile_id: 1234\n                        has_blocked_speakers: false\n                        is_explore_channel: false\n                        is_private: false\n                        is_social_mode: false\n                        num_all: 1234\n                        num_other: 0\n                        num_speakers: 123\n                        topic: Example Topic\n                        url: https://www.joinclubhouse.com/room/abcdefgh\n                        users:\n                          - is_followed_by_speaker: true\n                            is_invited_as_speaker: false\n                            is_moderator: true\n                            is_speaker: true\n                            name: John Example\n                            photo_url: https://clubhouseprod.s3.amazonaws.com:443/\u003cuser_id\u003e_\u003cguid\u003e_thumbnail_250x250\n                            time_joined_as_speaker: 2021-01-20T00:00:00.000000+00:00\n                            user_id: 1234\n                        welcome_for_user_profile: null\n                    events: []\n                    success: true\n          description: list of channels\n      summary: get all channels\n  /get_club:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              jsonObject:\n                value:\n                  club_id: 1234\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                club:\n                  value:\n                    added_by_user_profile: null\n                    club:\n                      club_id: 123\n                      description: Example\n                      is_follower: false\n                      is_member: false\n                      name: Example Club\n                      num_followers: 456\n                      num_members: 123\n                      photo_url: https://clubhouseprod.s3.amazonaws.com:443/club_\u003cclub_id\u003e_\u003cguid\u003e_thumbnail_250x250\n                    invite_link: null\n                    is_admin: false\n                    is_follower: false\n                    is_member: false\n                    is_pending_accept: false\n                    is_pending_approval: false\n                    member_user_ids: []\n                    num_invites: 0\n                    success: true\n                    topics:\n                      - abbreviated_title: Topic Example\n                        id: 140\n                        title: Topic Example\n          description: returns club object\n      summary: gets club by id\n  /get_clubs_for_topic:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              jsonObject:\n                value:\n                  topic_id: 140\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                clubs:\n                  value:\n                    clubs:\n                      - club_id: 123\n                        description: Example\n                        is_follower: false\n                        is_member: false\n                        name: Example Club\n                        num_followers: 456\n                        num_members: 123\n                        photo_url: https://clubhouseprod.s3.amazonaws.com:443/club_\u003cclub_id\u003e_\u003cguid\u003e_thumbnail_250x250\n                    count: 1\n                    next: null\n                    previous: null\n                    success: true\n          description: returns list of clubs with pagination\n      summary: looks up clubs by topic.\n  /get_create_channel_targets:\n    post:\n      requestBody:\n        content:\n          application/json:\n            example: {}\n            schema:\n              type: object\n      responses:\n        \"400\":\n          content:\n            application/json:\n              examples:\n                waitlisted:\n                  value:\n                    error_message: Your account is waitlisted. Please contact us if this is in error.\n                    success: false\n          description: waitlisted\n      summary: is fetched when you tap Create Room\n  /get_events:\n    get:\n      parameters:\n        - example: true\n          in: query\n          name: is_filtered\n          schema:\n            type: boolean\n        - example: 25\n          in: query\n          name: page_size\n          schema:\n            type: integer\n        - example: 1\n          in: query\n          name: page\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                emptyEventsList:\n                  value:\n                    count: 0\n                    events: []\n                    next: null\n                    previous: null\n                    success: true\n          description: a list of events\n      summary: the Upcoming for You page\n  /get_following:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              jsonObject:\n                value:\n                  user_id: 1234\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  value:\n                    clubs:\n                      - club_id: 123\n                        description: Example\n                        is_follower: false\n                        is_member: false\n                        name: Example Club\n                        num_followers: 456\n                        num_members: 123\n                        photo_url: https://clubhouseprod.s3.amazonaws.com:443/club_\u003cclub_id\u003e_\u003cguid\u003e_thumbnail_250x250\n                    count: 2\n                    next: null\n                    previous: null\n                    success: true\n                    users:\n                      - bio: Bio\n                        name: John Smith\n                        photo_url: https://clubhouseprod.s3.amazonaws.com:443/\u003cuser_id\u003e_\u003cuuid\u003e_thumbnail_250x250\n                        twitter: null\n                        user_id: 12345\n                        username: johnsmith\n          description: returns list of users and clubs\n      summary: get a list of the users and clubs that this user is following. Returned users have bios truncated to ~80 characters.\n  /get_notifications:\n    get:\n      parameters:\n        - example: 20\n          in: query\n          name: page_size\n          schema:\n            type: integer\n        - example: 1\n          in: query\n          name: page\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                empty:\n                  value:\n                    count: 0\n                    disabled: false\n                    next: null\n                    notifications: []\n                    previous: null\n                    success: true\n          description: Returns a list of notifications.\n      summary: get notifications (the bell icon)\n  /get_online_friends:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              emptyRequest:\n                value: {}\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                emptyOnlineFriends:\n                  value:\n                    clubs: []\n                    users: []\n          description: a list of online clubs and users.\n      summary: gets online friends on the app homepage.\n  /get_profile:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              jsonObject:\n                value:\n                  user_id: 4075733\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                user_profile:\n                  value:\n                    success: true\n                    user_profile:\n                      bio: üå∏ Creating INEVITABLE‚Ñ¢ Services\n                      can_edit_displayname: true\n                      can_edit_name: true\n                      can_edit_username: true\n                      clubs:\n                        - club_id: 12345\n                          description: Club description\n                          enable_private: true\n                          is_community: false\n                          is_follow_allowed: true\n                          is_membership_private: false\n                          name: Club name\n                          num_followers: 456\n                          num_members: 123\n                          num_online: 0\n                          photo_url: https://clubhouseprod.s3.amazonaws.com:443/club_\u003cclub_id\u003e_\u003cguid\u003e_thumbnail_250x250\n                          rules:\n                            - desc: Description\n                              title: Rule\n                      displayname: null\n                      follows_me: false\n                      has_verified_email: true\n                      instagram: _junhoyeo\n                      invited_by_user_profile:\n                        name: Example Norminator\n                        photo_url: https://clubhouseprod.s3.amazonaws.com:443/\u003cuser_id\u003e_\u003cguid\u003e_thumbnail_250x250\n                        user_id: 1234\n                        username: myexamplenorminator\n                      is_blocked_by_network: false\n                      mutual_follows: []\n                      mutual_follows_count: 0\n                      name: Junho Yeo\n                      notification_type: null\n                      num_followers: 103\n                      num_following: 98\n                      photo_url: https://clubhouseprod.s3.amazonaws.com:443/\u003cuser_id\u003e_\u003cguid\u003e\n                      time_created: 2021-01-28T12:30:25.625451+00:00\n                      topics:\n                        - abbreviated_title: Startups\n                          id: 107\n                          title: ü¶Ñ Startups\n                      twitter: null\n                      user_id: 4075733\n                      username: junhoyeo\n          description: returns user profile info\n      summary: looks up user profile by ID.\n  /get_release_notes:\n    post:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                latest:\n                  value:\n                    action: See What's New\n                    should_display: true\n                    title: üïπ You are now using the latest update of Clubhouse!\n                    url: https://whatsnew.joinclubhouse.com\n          description: the response\n      summary: gets release notes.\n  /get_settings:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                defaultSettings:\n                  value:\n                    notifications_enable_trending: true\n                    notifications_frequency: 3\n                    notifications_is_paused: false\n                    success: true\n          description: notification settings\n      summary: get notification settings\n  /get_suggested_club_invites:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              jsonObject:\n                value:\n                  contacts:\n                    - name: aaa\n                      phone_number: \"+11234567890\"\n                  upload_contacts: true\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                empty:\n                  value:\n                    success: true\n                    suggested_invites: []\n          description: returns list of suggested invites.\n      summary: find users to invite to clubs based on phone number\n  /get_suggested_follows_all:\n    get:\n      parameters:\n        - example: true\n          in: query\n          name: in_onboarding\n          schema:\n            type: boolean\n        - example: 50\n          in: query\n          name: page_size\n          schema:\n            type: integer\n        - example: 1\n          in: query\n          name: page\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                usersFromOnboard:\n                  value:\n                    count: 59\n                    next: 2\n                    previous: null\n                    success: true\n                    users:\n                      - bio: Example bio\n                        name: John Smith\n                        photo_url: https://clubhouseprod.s3.amazonaws.com:443/\u003cuser_id\u003e_\u003cguid\u003e_thumbnail_250x250\n                        twitter: johnsmith\n                        user_id: 1234\n                        username: rohan\n          description: a list of users to follow. bios truncated to 80 chars.\n      summary: gets suggested follows during signup\n  /get_suggested_follows_friends_only:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              noContacts:\n                value:\n                  club_id: null\n                  contacts: []\n                  upload_contacts: true\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                noContacts:\n                  value:\n                    success: true\n                    users: []\n          description: returns list of users and clubs\n      summary: find people to follow by uploading contacts during signup\n  /get_suggested_follows_similar:\n    post:\n      requestBody:\n        content:\n          application/json:\n            example:\n              user_id: 4\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                successful:\n                  value:\n                    success: true\n                    users:\n                      - bio: \"\"\n                        name: John Smith\n                        photo_url: https://clubhouseprod.s3.amazonaws.com:443/\u003cuser_id\u003e_\u003cuuid\u003e_thumbnail_250x250\n                        twitter: null\n                        user_id: \"1234\"\n                        username: johnsmith\n          description: Returns a list of users. Bios truncated to 80 chars.\n      summary: find similar users. (The Sparkles button on Clubhouse's profile page)\n  /get_suggested_invites:\n    post:\n      description: (also see https://zerforschung.org/posts/clubhouse-telefonnummern-en/ for @zerforschung's analysis of the privacy implications of this API)\n      requestBody:\n        content:\n          application/json:\n            examples:\n              hasContact:\n                value:\n                  club_id: null\n                  contacts:\n                    - phone_number: \"+11234567890\"\n                  upload_contacts: false\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                validUsers:\n                  value:\n                    num_invites: 0\n                    success: true\n                    suggested_invites:\n                      - in_app: false\n                        is_invited: false\n                        num_friends: 0\n                        phone_number: \"+11234567890\"\n          description: returns list of users that can be invited.\n      summary: find users to invite based on phone number.\n  /get_suggested_speakers:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              startingPrivateRoom:\n                value:\n                  channel: null\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                empty:\n                  value:\n                    clubs: []\n                    count: 0\n                    next: null\n                    previous: null\n                    success: true\n                    users: []\n          description: Returns a list of actionable notifications.\n      summary: gets suggested users when you start a private room\n  /get_topic:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              jsonObject:\n                value:\n                  topic_id: 140\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                topic:\n                  value:\n                    success: true\n                    topic:\n                      abbreviated_title: The Future\n                      id: 140\n                      title: ‚è≥ The Future\n          description: returns topic info\n      summary: looks up topic by ID.\n  /get_users_for_topic:\n    get:\n      parameters:\n        - example: 140\n          in: query\n          name: topic_id\n          schema:\n            type: integer\n        - example: 25\n          in: query\n          name: page_size\n          schema:\n            type: integer\n        - example: 1\n          in: query\n          name: page\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                users:\n                  value:\n                    count: 1\n                    next: null\n                    previous: null\n                    success: true\n                    users:\n                      - bio: John Example is an exemplary user object\n                        name: John Example\n                        photo_url: https://clubhouseprod.s3.amazonaws.com:443/\u003cuser_id\u003e_\u003cguid\u003e_thumbnail_250x250\n                        twitter: john_example\n                        user_id: 1234\n                        username: john_example\n          description: returns list of users with pagination. Bios truncated to 80 chars.\n      summary: looks up users by topic.\n  /get_welcome_channel:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                defaultSettings:\n                  value:\n                    is_empty: true\n                    success: true\n          description: empty???\n      summary: called during signup\n  /invite_from_waitlist:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              jsonObject:\n                value:\n                  user_id: 1234\n            schema:\n              type: object\n      responses:\n        \"400\":\n          content:\n            application/json:\n              examples:\n                someOtherError:\n                  value:\n                    error_message: \"\"\n                    success: false\n                waitlisted:\n                  value:\n                    error_message: Your account is waitlisted. Please contact us if this is in error.\n                    success: false\n          description: your own account is waitlisted, or some other error occurred\n      summary: wave to another user on the waitlist to give them access\n  /invite_to_app:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              jsonObject:\n                value:\n                  message: null\n                  name: John Smith\n                  phone_number: \"+11234567890\"\n            schema:\n              type: object\n      responses:\n        \"400\":\n          content:\n            application/json:\n              examples:\n                waitlisted:\n                  value:\n                    error_message: Your account is waitlisted. Please contact us if this is in error.\n                    success: false\n          description: your own account doesn't have an invite either\n      summary: invite a user to the app, using one of your invites\n  /join_channel:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              joinFromAppHomeScreen:\n                value:\n                  attribution_details: eyJpc19leHBsb3JlIjpmYWxzZSwicmFuayI6MX0=\n                  attribution_source: feed\n                  channel: abcdefgh\n              justChannelIsEnough:\n                value:\n                  channel: abcdefgh\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                channel:\n                  value:\n                    agora_native_mute: true\n                    channel: abcdefgh\n                    channel_id: 123456\n                    club:\n                      club_id: 1234\n                      description: Club description\n                      enable_private: true\n                      is_community: false\n                      is_follow_allowed: true\n                      is_membership_private: false\n                      name: Club name\n                      num_followers: 567\n                      num_members: 123\n                      num_online: 0\n                      photo_url: https://clubhouseprod.s3.amazonaws.com:443/club_\u003cclub_id\u003e_\u003cguid\u003e_thumbnail_250x250\n                      rules: []\n                    club_id: 45\n                    club_name: Startup Club\n                    creator_user_profile_id: 1234\n                    handraise_permission: 1\n                    is_club_admin: false\n                    is_club_member: false\n                    is_empty: false\n                    is_handraise_enabled: true\n                    is_private: false\n                    is_social_mode: false\n                    pubnub_enable: true\n                    pubnub_heartbeat_interval: 29\n                    pubnub_heartbeat_value: 60\n                    pubnub_origin: null\n                    pubnub_token: \u003cpubnub_token\u003e\n                    rtm_token: \u003crtm_token\u003e\n                    success: true\n                    token: \u003ctoken\u003e\n                    topic: Channel topic\n                    url: https://www.joinclubhouse.com/room/abcdefgh\n                    users:\n                      - first_name: John\n                        is_followed_by_speaker: true\n                        is_invited_as_speaker: true\n                        is_moderator: true\n                        is_new: true\n                        is_speaker: true\n                        name: John Example\n                        photo_url: https://clubhouseprod.s3.amazonaws.com:443/\u003cuser_id\u003e_\u003cguid\u003e_thumbnail_250x250\n                        skintone: 3\n                        time_joined_as_speaker: 2021-01-31T00:00:00.000000+00:00\n                        user_id: 123456\n                        username: john_example\n                      - first_name: Current\n                        is_followed_by_speaker: false\n                        is_invited_as_speaker: false\n                        is_moderator: false\n                        is_new: false\n                        is_speaker: false\n                        name: The currently joining user\n                        photo_url: https://clubhouseprod.s3.amazonaws.com:443/\u003cuser_id\u003e_\u003cguid\u003e_thumbnail_250x250\n                        skintone: 3\n                        time_joined_as_speaker: null\n                        user_id: 1234\n                        username: currentuser\n                    welcome_for_user_profile: null\n          description: stuff needed to actually join a channel\n        \"400\":\n          content:\n            application/json:\n              examples:\n                appTooOld:\n                  value:\n                    error_message: Please upgrade the app to join rooms!\n                    success: false\n                roomNotAvailable:\n                  value:\n                    error_message: |-\n                      That room is no longer available üëãüèº\n                      Try starting a new one instead?\n                    success: false\n          description: cannot join\n      summary: join a channel.\n  /leave_channel:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              jsonObject:\n                value:\n                  channel: abcdefgh\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                channel:\n                  value:\n                    success: true\n          description: left the channel\n      summary: leave a channel.\n  /me:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              clubhouseApp:\n                value:\n                  return_blocked_ids: true\n                  return_following_ids: true\n                  timezone_identifier: America/Los_Angeles\n              emptyAlsoWorks:\n                value: {}\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                examples:\n                  value:\n                    access_token: \u003cjwt\u003e\n                    actionable_notifications_count: 0\n                    auth_token: \u003cauth_token\u003e\n                    blocked_ids: null\n                    email: null\n                    feature_flags:\n                      - \"\"\n                    following_ids: null\n                    has_unread_notifications: false\n                    is_admin: false\n                    notifications_enabled: false\n                    num_invites: 0\n                    refresh_token: \u003cjwt\u003e\n                    success: true\n                    user_profile:\n                      name: null\n                      photo_url: null\n                      user_id: 1234\n                      username: null\n          description: the response\n        \"403\":\n          content:\n            application/json:\n              examples:\n                examples:\n                  value:\n                    detail: You do not have permission to perform this action.\n          description: error response - happens if account is banned (is_blocked)\n      summary: gets user\n  /record_action_trails:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              appOpened:\n                value:\n                  action_trails:\n                    - blob_data: {}\n                      client_time_created: 1612971962\n                      trail_type: app_opened\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  value:\n                    success: true\n          description: always empty\n      summary: analytics\n  /refresh_token:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              jsonObject:\n                value:\n                  refresh: \u003crefresh_token\u003e\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                validToken:\n                  value:\n                    access: \u003caccess_token\u003e\n                    refresh: \u003crefresh_token\u003e\n          description: returns new access and refresh token\n        \"401\":\n          content:\n            application/json:\n              examples:\n                invalidToken:\n                  value:\n                    code: token_not_valid\n                    detail: Token is invalid or expired\n          description: invalid refresh token\n      summary: gets an access_token from a refresh_token.\n  /resend_phone_number_auth:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              jsonObject:\n                value: {}\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                jsonObject: {}\n          description: success\n      summary: Resend phone number auth.\n  /search_clubs:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              normalSearch:\n                value:\n                  cofollows_only: false\n                  followers_only: false\n                  following_only: false\n                  query: rohan\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                successful:\n                  value:\n                    clubs:\n                      - club_id: \"1234\"\n                        description: Example club\n                        is_follower: false\n                        is_member: false\n                        name: Example club\n                        num_followers: 1234\n                        num_members: 5678\n                        photo_url: https://clubhouseprod.s3.amazonaws.com:443/club_\u003cclub_id\u003e_\u003cuuid\u003e_thumbnail_250x250\n                    count: 1\n                    next: null\n                    previous: null\n                    success: true\n          description: Returns a list of clubs.\n      summary: search clubs.\n  /search_users:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              normalSearch:\n                value:\n                  cofollows_only: false\n                  followers_only: false\n                  following_only: false\n                  query: johnsmith\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                successful:\n                  value:\n                    count: 1\n                    next: null\n                    previous: null\n                    success: true\n                    users:\n                      - bio: Bio!\n                        name: John Smith\n                        photo_url: https://clubhouseprod.s3.amazonaws.com:443/\u003cuser_id\u003e_\u003cuuid\u003e_thumbnail_250x250\n                        user_id: \"1234\"\n                        username: johnsmith\n          description: Returns a list of users.\n      summary: search for users\n  /start_phone_number_auth:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              jsonObject:\n                value:\n                  phone_number: \"+11234567890\"\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                beingThrottled:\n                  value:\n                    is_blocked: false\n                    number_of_attempts_remaining: 3\n                    success: true\n                failure:\n                  value:\n                    error_message: \"\"\n                    is_blocked: false\n                    success: false\n                phoneBlocked:\n                  value:\n                    is_blocked: true\n                    success: true\n                success:\n                  value:\n                    error_message: null\n                    is_blocked: false\n                    success: true\n                throttled:\n                  value:\n                    error_message: Our systems have detected high usage of this feature from your account. Please try again later.\n                    success: false\n          description: success\n      summary: Starts phone number auth.\n  /update_notifications:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              onboardingSetting:\n                value:\n                  apn_token: null\n                  enable_trending: -1\n                  frequency: -1\n                  is_sandbox: false\n                  pause_till: -1\n                  system_enabled: 2\n            schema:\n              type: object\n      responses:\n        \"400\":\n          content:\n            application/json:\n              examples:\n                waitlisted:\n                  value:\n                    error_message: Your account is waitlisted. Please contact us if this is in error.\n                    success: false\n          description: waitlisted\n      summary: updates notification during signup.\n  /update_username:\n    post:\n      requestBody:\n        content:\n          application/json:\n            examples:\n              jsonObject:\n                value:\n                  username: hipsterhouse\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  value:\n                    error_message: null\n                    success: true\n          description: username successfully set\n        \"400\":\n          content:\n            application/json:\n              examples:\n                emptyString:\n                  value:\n                    error_message: This username is not allowed. Please try another one.\n                    success: false\n                taken:\n                  value:\n                    error_message: This username has already been taken by a different user.\n                    success: false\n          description: invalid/taken username (eg empty string)\n      summary: edits username.\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/clubhouseapi.com/1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/clubhouseapi.com/1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/start_phone_number_auth\": post: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}