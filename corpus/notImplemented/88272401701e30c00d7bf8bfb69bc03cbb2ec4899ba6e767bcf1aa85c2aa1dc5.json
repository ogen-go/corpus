{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/muonsoft/openapi-mock"
		},
		"file": {
			"name": "CombinedTypes.yaml",
			"size": 0,
			"path": "test/resources/openapi-files/CombinedTypes.yaml",
			"byteSize": 4950,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: 'test'\n  version: 1.0.0\npaths:\n  /content:\n    get:\n      responses:\n        200:\n          description: 'test'\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - oneOfProperty\n                  - allOfProperty\n                  - anyOfProperty\n                  - deepAllOfProperty\n                properties:\n\n                  oneOfProperty:\n                    oneOf:\n                      - type: object\n                        required:\n                          - id\n                          - name\n                        properties:\n                          id:\n                            type: integer\n                            minimum: 0\n                            maximum: 0\n                          name:\n                            type: string\n                      - type: object\n                        required:\n                          - id\n                          - title\n                        properties:\n                          id:\n                            type: integer\n                            minimum: 0\n                            maximum: 0\n                          title:\n                            type: string\n\n                  allOfProperty:\n                    allOf:\n                      - type: object\n                        required:\n                          - id\n                          - name\n                        properties:\n                          id:\n                            type: integer\n                            minimum: 0\n                            maximum: 0\n                          name:\n                            type: string\n                            enum:\n                              - name\n                      - type: object\n                        required:\n                          - id\n                          - title\n                        properties:\n                          id:\n                            type: integer\n                            minimum: 0\n                            maximum: 0\n                          title:\n                            type: string\n                            enum:\n                              - title\n\n                  anyOfProperty:\n                    anyOf:\n                      - type: object\n                        required:\n                          - id\n                          - name\n                        properties:\n                          id:\n                            type: integer\n                            minimum: 0\n                            maximum: 0\n                          name:\n                            type: string\n                      - type: object\n                        required:\n                          - id\n                          - title\n                        properties:\n                          id:\n                            type: integer\n                            minimum: 0\n                            maximum: 0\n                          title:\n                            type: string\n\n                  deepAllOfProperty:\n                    allOf:\n                      - type: object\n                        required:\n                          - id\n                          - name\n                        properties:\n                          id:\n                            type: integer\n                            minimum: 0\n                            maximum: 0\n                          name:\n                            type: string\n                            enum:\n                              - name\n                      - type: object\n                        required:\n                          - id\n                          - title\n                        properties:\n                          id:\n                            type: integer\n                            minimum: 0\n                            maximum: 0\n                          title:\n                            type: string\n                            enum:\n                              - title\n                      - allOf:\n                          - anyOf:\n                              - type: object\n                                required:\n                                  - description\n                                properties:\n                                  description:\n                                    type: string\n                                    enum:\n                                      - description\n                          - oneOf:\n                              - type: object\n                                required:\n                                  - type\n                                properties:\n                                  type:\n                                    type: string\n                                    enum:\n                                      - type\n",
			"canonicalURL": "/github.com/muonsoft/openapi-mock@3bbb09841436604d2b655105a64f983474962f47/-/blob/test/resources/openapi-files/CombinedTypes.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/muonsoft/openapi-mock/blob/3bbb09841436604d2b655105a64f983474962f47/test/resources/openapi-files/CombinedTypes.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/content\": get: responses: 200: contents: application/json: generate schema: field anyOfProperty: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}