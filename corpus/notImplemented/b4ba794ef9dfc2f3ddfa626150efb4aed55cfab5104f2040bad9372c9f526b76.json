{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/open-voice-network/docs"
		},
		"file": {
			"name": "voice-registry-system-v1.json",
			"size": 0,
			"path": "vrs-wg/api_docs/voice-registry-system-v1.json",
			"byteSize": 14971,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"description\": \"Voice Registry System (VRS) service to perform various operation in enabling the standard and platform-agnostic location for voice.\",\n    \"version\": \"1.0.2\",\n    \"title\": \"voice-registry-system-v1\",\n    \"termsOfService\": \"https://github.com/open-voice-network/docs/blob/master/components/voice_registry_system_terms.md\",\n    \"contact\": {\n      \"email\": \"vrs-team@openvoicenetwork.org\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    }\n  },\n  \"tags\": [\n    {\n      \"name\": \"records\",\n      \"description\": \"Manage everything about records in VRS\",\n      \"externalDocs\": {\n        \"description\": \"Find out more\",\n        \"url\": \"https://github.com/open-voice-network/docs/blob/master/components/voice_registry_system.md\"\n      }\n    },\n    {\n      \"name\": \"locations\",\n      \"description\": \"Manage everything about location\",\n      \"externalDocs\": {\n        \"description\": \"Find out more\",\n        \"url\": \"https://github.com/open-voice-network/docs/blob/master/components/voice_registry_system.md\"\n      }\n    }\n  ],\n  \"paths\": {\n    \"/\": {\n      \"post\": {\n        \"x-success_http_code\": \"201\",\n        \"x-expected_tps\": \"100\",\n        \"tags\": [\n          \"records\"\n        ],\n        \"summary\": \"Create new records\",\n        \"description\": \"Add or register in VRS\",\n        \"operationId\": \"create_record\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/create_record\"\n              }\n            }\n          },\n          \"description\": \"Fields below are accepted for registry\"\n        },\n        \"parameters\": [\n          {\n            \"name\": \"key\",\n            \"in\": \"query\",\n            \"description\": \"The consumer's valid API key.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Created successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/create_record\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"405\": {\n            \"description\": \"Request made with incorrect method e.g. POST when only GET is allowed\"\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\"\n          },\n          \"503\": {\n            \"description\": \"Service Unavailable\"\n          }\n        }\n      }\n    },\n    \"/{record_id}\": {\n      \"get\": {\n        \"x-success_http_code\": \"200\",\n        \"x-expected_tps\": \"100\",\n        \"tags\": [\n          \"records\"\n        ],\n        \"summary\": \"Find by record ID\",\n        \"description\": \"Returns a single record\",\n        \"operationId\": \"get_record\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"record_id\",\n            \"description\": \"Unique identifier for the record\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\",\n              \"example\": \"ef7d274e-d5e5-11e7-9296-cec278b6b50a\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/record\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Record not found\"\n          },\n          \"405\": {\n            \"description\": \"Request made with incorrect method e.g. POST when only GET is allowed\"\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\"\n          },\n          \"503\": {\n            \"description\": \"Service Unavailable\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"records\"\n        ],\n        \"summary\": \"Update record\",\n        \"description\": \"\",\n        \"operationId\": \"update_record\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"record_id\",\n            \"description\": \"Unique identifier for the record\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\",\n              \"example\": \"ef7d274e-d5e5-11e7-9296-cec278b6b50a\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/record\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/record\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Record not found\"\n          },\n          \"405\": {\n            \"description\": \"Request made with incorrect method e.g. POST when only GET is allowed\"\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\"\n          },\n          \"503\": {\n            \"description\": \"Service Unavailable\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"records\"\n        ],\n        \"summary\": \"Deletes a record\",\n        \"description\": \"\",\n        \"operationId\": \"delete_record\",\n        \"parameters\": [\n          {\n            \"name\": \"api_key\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"SJHDSJHJN-JSHDJHSD-AISK12\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"record_id\",\n            \"description\": \"Unique identifier for the record\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\",\n              \"example\": \"ef7d274e-d5e5-11e7-9296-cec278b6b50a\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Deleted successfully\"\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Record not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"vrs_record_auth\": [\n              \"write:records\",\n              \"read:records\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/search\": {\n      \"get\": {\n        \"tags\": [\n          \"records\"\n        ],\n        \"summary\": \"Search record by name\",\n        \"description\": \"\",\n        \"operationId\": \"search_record\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Filter by name\",\n            \"required\": true,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"description\": \"Invocation name for the record\",\n              \"example\": \"patrick dessert\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/record\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Record not found\"\n          },\n          \"405\": {\n            \"description\": \"Request made with incorrect method e.g. POST when only GET is allowed\"\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\"\n          },\n          \"503\": {\n            \"description\": \"Service Unavailable\"\n          }\n        }\n      }\n    }\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about VRS\",\n    \"url\": \"https://github.com/open-voice-network/docs/blob/master/components/voice_registry_system.md\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://api.openvoicenetwork.org/voice-registry-system/v1\"\n    }\n  ],\n  \"components\": {\n    \"requestBodies\": {\n      \"record\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/record\"\n            }\n          }\n        },\n        \"description\": \"Record that needs to be updated\",\n        \"required\": true\n      }\n    },\n    \"schemas\": {\n      \"record\": {\n        \"type\": \"object\",\n        \"description\": \"Record object\",\n        \"properties\": {\n          \"record_id\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier for the record\",\n            \"format\": \"uuid\",\n            \"example\": \"ef7d274e-d5e5-11e7-9296-cec278b6b50a\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Invocation name for the record\",\n            \"example\": \"patrick dessert\"\n          },\n          \"url\": {\n            \"type\": \"string\",\n            \"description\": \"URL voice record\",\n            \"example\": \"voice://patrickdessert.com/voice_assistant/\"\n          },\n          \"registered_date\": {\n            \"type\": \"string\",\n            \"description\": \"Record registration date\",\n            \"format\": \"date-time\"\n          },\n          \"expiration_date\": {\n            \"type\": \"string\",\n            \"description\": \"Record expiration date\",\n            \"format\": \"date-time\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Record validity status\",\n            \"enum\": [\n              \"registered\",\n              \"pending\",\n              \"cancelled\",\n              \"expired\"\n            ]\n          },\n          \"locations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/record_location\"\n            }\n          },\n          \"conversation_platforms\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/conversation_platform\"\n            }\n          }\n        }\n      },\n      \"create_record\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\",\n          \"categories\",\n          \"locations\",\n          \"conversation_platforms\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Invocation name for the record\",\n            \"example\": \"patrick dessert\"\n          },\n          \"url\": {\n            \"type\": \"string\",\n            \"description\": \"URL voice record\",\n            \"example\": \"voice://patrickdessert.com/voice_assistant/\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Record validity status\",\n            \"enum\": [\n              \"registered\",\n              \"pending\",\n              \"cancelled\",\n              \"expired\"\n            ]\n          },\n          \"locations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/record_location\"\n            }\n          },\n          \"conversation_platforms\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/conversation_platform\"\n            }\n          }\n        }\n      },\n      \"delete_record\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\",\n          \"categories\",\n          \"locations\",\n          \"conversation_platforms\"\n        ],\n        \"properties\": {\n          \"record_id\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier for the record\",\n            \"format\": \"uuid\",\n            \"example\": \"ef7d274e-d5e5-11e7-9296-cec278b6b50a\"\n          },\n          \"conversation_platforms\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/conversation_platform\"\n            }\n          }\n        }\n      },\n      \"record_location\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier for the location id\",\n            \"format\": \"uuid\",\n            \"example\": \"ef7d274e-d5e5-11e7-9296-cec278b6b50a\"\n          },\n          \"neighborhood\": {\n            \"type\": \"string\",\n            \"description\": \"Neigborhood where record is located\"\n          },\n          \"city\": {\n            \"type\": \"string\",\n            \"description\": \"City where record is located\"\n          },\n          \"state\": {\n            \"type\": \"string\",\n            \"description\": \"State where record is located\"\n          },\n          \"country\": {\n            \"type\": \"string\",\n            \"description\": \"Country where record is located\",\n            \"enum\": [\n              \"United States of America\",\n              \"United Kingdom\",\n              \"Philippines\",\n              \"...\"\n            ]\n          }\n        }\n      },\n      \"conversation_platform\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identifier for the conversation platform\",\n            \"format\": \"uuid\",\n            \"example\": \"ef7d274e-d5e5-11e7-9296-cec278b6b50a\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Conversation platform name\",\n            \"example\": \"retail\"\n          },\n          \"default\": {\n            \"type\": \"boolean\",\n            \"description\": \"The default conversation partner\",\n            \"example\": true\n          },\n          \"url\": {\n            \"type\": \"string\",\n            \"description\": \"Url of the conversational platform\",\n            \"example\": \"https://api.patrickdessert.com/conversation_platform/v1\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"Conversation platform type whether it is owned or third-party\",\n            \"enum\": [\n              \"owned\",\n              \"third-party\"\n            ]\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"vrs_record_auth\": {\n        \"description\": \"This API uses OAuth 2 with implicit grant flow.\",\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"implicit\": {\n              \"authorizationUrl\": \"https://api.openvoicenetwork.org/vrs/oauth2\",\n              \"scopes\": {\n                \"write:records\": \"update records\",\n                \"read:records\": \"read records\"\n              } \n          }\n        }\n      }\n    }\n  },\n  \"security\": [\n    { \"vrs_record_auth\": [\"write:records\", \"read:records\"] }\n  ]\n}\n",
			"canonicalURL": "/github.com/open-voice-network/docs@bae553d32821d62c4b6a085bd656f43f1dbe0eb0/-/blob/vrs-wg/api_docs/voice-registry-system-v1.json",
			"externalURLs": [
				{
					"url": "https://github.com/open-voice-network/docs/blob/bae553d32821d62c4b6a085bd656f43f1dbe0eb0/vrs-wg/api_docs/voice-registry-system-v1.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/\": post: security: security \"vrs_record_auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}