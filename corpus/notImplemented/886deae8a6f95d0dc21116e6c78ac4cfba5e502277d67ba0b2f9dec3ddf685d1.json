{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/globaldothealth/list"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "data-serving/data-service/api/openapi.yaml",
			"byteSize": 45623,
			"content": "openapi: 3.0.3\ninfo:\n    title: Global.health data service\n    description: Server for CRUD operations on Global.health line-list data\n    termsOfService: 'https://global.health/terms-of-use/'\n    contact:\n        name: Global.health\n        url: https://global.health\n        email: info@global.health\n    license:\n        name: MIT\n        url: 'https://opensource.org/licenses/MIT'\n    version: 1.0.0\ntags:\n    - name: Case\n      description: Case related operations\n    - name: Suggest\n      description: Suggestion for input of cases\npaths:\n    /cases:\n        get:\n            summary: Lists cases\n            tags: [Case]\n            operationId: listCases\n            parameters:\n                - name: page\n                  in: query\n                  description: The pages of cases to skip before starting to collect the result set\n                  required: false\n                  schema:\n                      type: integer\n                      format: int32\n                      minimum: 1\n                      default: 1\n                - name: limit\n                  in: query\n                  description: The number of items to return\n                  required: false\n                  schema:\n                      type: integer\n                      format: int32\n                      minimum: 1\n                      maximum: 100\n                      default: 10\n                - name: count_limit\n                  in: query\n                  description: The maximum number of documents that will be counted in mongoDB to make queries faster\n                  required: false\n                  schema:\n                      type: integer\n                      format: int32\n                      minimum: 100\n                      default: 10000\n                      maximum: 50000\n                - name: sort_by\n                  in: query\n                  description: Keyword to sort by\n                  required: false\n                  schema:\n                      type: string\n                - name: order\n                  in: query\n                  description: Sorting order\n                  required: false\n                  schema:\n                      type: string\n                - name: q\n                  in: query\n                  description: The search query\n                  required: false\n                  schema:\n                      type: string\n                  examples:\n                      'full text search':\n                          value: 'this -butnotthis'\n                          summary: Full text search with items that must or must not be present.\n                      keywords:\n                          value: 'curator:foo@bar.com,baz@meh.com country:fr'\n                          summary: \u003e\n                              values are OR'ed for the same keyword and all keywords are AND'ed.\n                              Keyword values can be quoted for multi-words matches and concatenated\n                              with a comma to union them. Bare words are compared for equality, e.g.\n                              country:de. The special character '*' matches any value, e.g. \n                              variant:* returns any case where the variant is not empty.\n                              Supported keywords are: curator, gender, nationality, occupation,\n                              country, outcome, caseid, uploadid, sourceid, sourceurl, verificationstatus,\n                              admin1, admin2, admin3, variant\n            responses:\n                '200':\n                    $ref: '#/components/responses/200CaseArray'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n        post:\n            summary: Creates one (or multiple identical) new cases\n            tags: [Case]\n            operationId: createCase\n            requestBody:\n                description: Case to add\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/NewCase'\n            parameters:\n                - name: validate_only\n                  in: query\n                  description: Whether to validate the case without creating it\n                  required: false\n                  schema:\n                      type: boolean\n                      default: false\n                  allowEmptyValue: true\n                - name: num_cases\n                  in: query\n                  description: The number of cases to create\n                  required: false\n                  schema:\n                      type: integer\n                      format: int32\n                      minimum: 1\n                      default: 1\n            responses:\n                '201':\n                    $ref: '#/components/responses/201Create'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '404':\n                    $ref: '#/components/responses/404'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n        put:\n            summary: Upserts a case\n            tags: [Case]\n            description: \u003e\n                Creates or updates a case, depending on whether the provided values for\n                the `caseReference.sourceId` and `caseReference.sourceEntryId` fields\n                correspond to an existing case record.\n            operationId: upsertCase\n            requestBody:\n                description: Case to upsert\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            allOf:\n                                - $ref: '#/components/schemas/Case'\n                            properties:\n                                curator:\n                                    $ref: '#/components/schemas/Curator'\n                            required:\n                                - caseReference\n                                - curator\n            responses:\n                '200':\n                    $ref: '#/components/responses/200Case'\n                '201':\n                    $ref: '#/components/responses/201Case'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n        delete:\n            summary: \u003e\n                Deletes multiple cases. It is required to supply exactly one of either \n                caseIds or query in the request body. If caseIds are supplied, cases \n                corresponding to those caseIds will be deleted. If query is supplied, \n                all cases that match the query will be deleted.\n            tags: [Case]\n            operationId: deleteCases\n            requestBody:\n                description: Cases to delete\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                caseIds:\n                                    description: Cases corresponding to these ids will be deleted\n                                    type: array\n                                    items:\n                                        type: string\n                                        pattern: '^[a-f\\d]{24}$'\n                                query:\n                                    description: \u003e\n                                        Cases matching this query will be deleted. Must contain\n                                        non-whitespace characters.\n                                    type: string\n                                    pattern: \\S+\n                                maxCasesThreshold:\n                                    type: number\n                                    description: \u003e\n                                        An optional safeguard against deletion of too many cases.\n                                        If you want to delete based on a query for example but fail\n                                        if the number of cases that's going to be deleted is more\n                                        than a given number, set this field to that desired number.\n                                        Failure will be indicated by a 422 error status code.\n                            oneOf:\n                                - required: [caseIds]\n                                - required: [query]\n            responses:\n                '204':\n                    description: Cases deleted\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '404':\n                    $ref: '#/components/responses/404'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n    /cases/download:\n        post:\n            summary: \u003e\n                Streams a CSV, TSV or JSON attachment of cases matching the search query. \n                If caseIds are supplied the CSV only contains cases with those ids. \n                You cannot supply both query and caseIds.\n            tags: [Case]\n            operationId: downloadCases\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            properties:\n                                caseIds:\n                                    description: Cases corresponding to these ids will be returned\n                                    type: array\n                                    items:\n                                        type: string\n                                        pattern: '^[a-f\\d]{24}$'\n                                query:\n                                    description: \u003e\n                                        Cases matching this query will be returned. This is ignored\n                                        if empty.\n                                    type: string\n                                limit:\n                                    description: \u003e\n                                        Max number of rows that can be downloaded when query is provided\n                                    type: string\n                                format:\n                                    description: Format of data\n                                    type: string\n            responses:\n                '200':\n                    $ref: '#/components/responses/200CasesDownload'\n                '400':\n                    $ref: '#/components/responses/400'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n    /cases/batchUpsert:\n        post:\n            summary: Batch upserts cases\n            tags: [Case]\n            operationId: batchUpsertCases\n            requestBody:\n                description: Cases to upsert\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            allOf:\n                                - $ref: '#/components/schemas/CaseArray'\n                            properties:\n                                curator:\n                                    $ref: '#/components/schemas/Curator'\n                            required:\n                                - curator\n            responses:\n                '200':\n                    $ref: '#/components/responses/200BatchCaseUpsert'\n                '207':\n                    $ref: '#/components/responses/207BatchUpsertCaseResponse'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n    /cases/batchUpdate:\n        post:\n            summary: Batch updates cases\n            tags: [Case]\n            operationId: batchUpdateCases\n            requestBody:\n                description: Cases to update\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            allOf:\n                                - $ref: '#/components/schemas/CaseArray'\n                            properties:\n                                curator:\n                                    $ref: '#/components/schemas/Curator'\n                            required:\n                                - curator\n            responses:\n                '200':\n                    $ref: '#/components/responses/200BatchUpdateResponse'\n                '400':\n                    $ref: '#/components/responses/400'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n    /cases/batchUpdateQuery:\n        post:\n            summary: Batch updates cases that match the query property\n            tags: [Case]\n            operationId: batchUpdateQueryCases\n            requestBody:\n                description: Cases to update\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            properties:\n                                curator:\n                                    $ref: '#/components/schemas/Curator'\n                                query:\n                                    description: \u003e\n                                        Cases matching this query will be updated. Must contain\n                                        non-whitespace characters.\n                                    type: string\n                                    pattern: \\S+\n                                case:\n                                    $ref: '#/components/schemas/Case'\n                            required:\n                                - curator\n                                - query\n                                - case\n            responses:\n                '200':\n                    $ref: '#/components/responses/200BatchUpdateResponse'\n                '400':\n                    $ref: '#/components/responses/400'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n    /cases/symptoms:\n        get:\n            summary: Lists most frequently used symptoms\n            operationId: listSymptoms\n            tags: [Suggest]\n            parameters:\n                - name: limit\n                  in: query\n                  description: The number of items to return\n                  required: false\n                  schema:\n                      type: integer\n                      format: int32\n                      minimum: 1\n                      maximum: 100\n                      default: 5\n            responses:\n                '200':\n                    $ref: '#/components/responses/200SymptomArray'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '500':\n                    $ref: '#/components/responses/500'\n    /cases/placesOfTransmission:\n        get:\n            summary: Lists most frequently used places of transmission\n            operationId: listPlacesOfTransmission\n            tags: [Suggest]\n            parameters:\n                - name: limit\n                  in: query\n                  description: The number of items to return\n                  required: false\n                  schema:\n                      type: integer\n                      format: int32\n                      minimum: 1\n                      maximum: 100\n                      default: 5\n            responses:\n                '200':\n                    $ref: '#/components/responses/200PlacesOfTransmissionArray'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '500':\n                    $ref: '#/components/responses/500'\n    /cases/occupations:\n        get:\n            summary: Lists most frequently used occupations\n            tags: [Suggest]\n            operationId: listOccupations\n            parameters:\n                - name: limit\n                  in: query\n                  description: The number of items to return\n                  required: false\n                  schema:\n                      type: integer\n                      format: int32\n                      minimum: 1\n                      maximum: 100\n                      default: 5\n            responses:\n                '200':\n                    $ref: '#/components/responses/200OccupationArray'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '500':\n                    $ref: '#/components/responses/500'\n    /cases/{id}:\n        parameters:\n            - name: id\n              in: path\n              description: The case ID\n              required: true\n              schema:\n                  type: string\n                  pattern: '^[a-f\\d]{24}$'\n        get:\n            summary: Gets a specific case\n            operationId: getCase\n            tags: [Case]\n            responses:\n                '200':\n                    $ref: '#/components/responses/200Case'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '404':\n                    $ref: '#/components/responses/404'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n        put:\n            summary: Updates a specific case\n            operationId: updateCase\n            tags: [Case]\n            requestBody:\n                description: Case to update\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            allOf:\n                                - $ref: '#/components/schemas/Case'\n                            properties:\n                                curator:\n                                    $ref: '#/components/schemas/Curator'\n                            required:\n                                - curator\n            responses:\n                '200':\n                    $ref: '#/components/responses/200Case'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '404':\n                    $ref: '#/components/responses/404'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n        delete:\n            summary: Deletes a specific case\n            operationId: deleteCase\n            tags: [Case]\n            responses:\n                '204':\n                    description: Case deleted\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '404':\n                    $ref: '#/components/responses/404'\n                '500':\n                    $ref: '#/components/responses/500'\n    /cases/batchStatusChange:\n        post:\n            summary: Changes status for a list of cases\n            tags: [Case]\n            operationId: batchStatusChange\n            requestBody:\n                description: \u003e\n                    Case IDs are passed through an array of strings, note may be provided as well.\n                    A query may be provided instead of list of IDs, this will change status for all\n                    cases matching the query.\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            properties:\n                                caseIds:\n                                    description: \u003e\n                                        Cases having IDs provided here will have their\n                                        status changed to one specified in status field.\n                                    type: array\n                                    items:\n                                        type: string\n                                status:\n                                    $ref: '#/components/schemas/CaseStatus'\n                                query:\n                                    description: \u003e\n                                        Cases matching this query will have their status\n                                        changed. Must contain non-whitespace characters.\n                                    type: string\n                                    pattern: \\S+\n                                note:\n                                    description: \u003e\n                                        The reason behind exclusion (or other important info).\n                                        This field is ignored if a status is not \"Excluded\".\n                                    type: string\n                                curator:\n                                    $ref: '#/components/schemas/Curator'\n                            oneOf:\n                                - required: [caseIds]\n                                - required: [query]\n                            required:\n                                - status\n            responses:\n                '200':\n                    $ref: '#/components/responses/200'\n                '400':\n                    $ref: '#/components/responses/400'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\n    /excludedCaseIds:\n        get:\n            summary: Lists IDs of excluded cases for a specified source\n            tags: [Case]\n            operationId: listExcludedCaseIds\n            parameters:\n                - name: sourceId\n                  in: query\n                  description: ID of source to filter out only excluded cases from.\n                  required: true\n                  schema:\n                      type: string\n                      pattern: '^[a-f\\d]{24}$'\n                - name: dateFrom\n                  in: query\n                  description: Start date for excluded cases lookup\n                  required: false\n                  schema:\n                      type: string\n                      format: date\n                - name: dateTo\n                  in: query\n                  description: Start date for excluded cases lookup\n                  required: false\n                  schema:\n                      type: string\n                      format: date\n            responses:\n                '200':\n                    $ref: '#/components/responses/200CaseIdsArray'\n                '400':\n                    $ref: '#/components/responses/400'\n                '403':\n                    $ref: '#/components/responses/403'\n                '422':\n                    $ref: '#/components/responses/422'\n                '500':\n                    $ref: '#/components/responses/500'\ncomponents:\n    schemas:\n        BatchUpdateResponse:\n            description: Response to batch update cases API requests\n            properties:\n                numModified:\n                    type: number\n            required:\n                - numModified\n        BatchUpsertCaseResponse:\n            description: Response to batch upsert case API requests\n            properties:\n                phase:\n                    type: string\n                    description: The last operation completed by the server\n                    enum:\n                        - GEOCODE\n                        - VALIDATE\n                        - UPSERT\n                numCreated:\n                    type: number\n                    description: The number of cases created by the request.\n                numUpdated:\n                    type: number\n                    description: \u003e\n                        The number of cases modified by the request. Note that this only\n                        includes cases that are actually modified by the batch upsert. If a\n                        case is included in the batch upsert request, but contains no\n                        changes compared to the currently stored case, it won't be counted.\n                errors:\n                    type: array\n                    items:\n                        type: object\n                        properties:\n                            index:\n                                description: 0-based index of the case which triggered an error\n                                type: integer\n                            message:\n                                type: string\n                                description: what went wrong\n                                example: Cannot parse age\n                        required:\n                            - index\n                            - message\n            required:\n                - phase\n                - numCreated\n                - numUpdated\n                - errors\n        Case:\n            description: A single line-list case.\n            properties:\n                caseReference:\n                    type: object\n                    properties:\n                        sourceId:\n                            type: string\n                            pattern: '^[a-f\\d]{24}$'\n                        sourceUrl:\n                            type: string\n                        uploadIds:\n                            description: \u003e\n                                An array of UUIDs of uploads where this case was created or updated\n                                through bulk upload or automated ingestion.\n                            type: array\n                            items:\n                                type: string\n                                pattern: '^[a-f\\d]{24}$'\n                        verificationStatus:\n                            description: \u003e\n                                Whether the case document has been manually verified for\n                                correctness. For new cases, if this field isn't provided, a\n                                default value of UNVERIFIED will be used.\n                            type: string\n                            enum:\n                                - UNVERIFIED\n                                - VERIFIED\n                                - EXCLUDED\n                        additionalSources:\n                            type: array\n                            items:\n                                type: object\n                                properties:\n                                    sourceUrl:\n                                        type: string\n                demographics:\n                    type: object\n                    properties:\n                        gender:\n                            type: string\n                            enum:\n                                [\n                                    null,\n                                    Male,\n                                    Female,\n                                    Non-binary/Third gender,\n                                    Other,\n                                ]\n                        ageRange:\n                            type: object\n                            properties:\n                                start:\n                                    type: number\n                                end:\n                                    type: number\n                        ethnicity:\n                            type: string\n                        nationalities:\n                            type: array\n                            items:\n                                type: string\n                        occupation:\n                            type: string\n                location:\n                    $ref: '#/components/schemas/Location'\n                events:\n                    description: \u003e\n                        An event with name \"confirmed\" must be specified. Other event names\n                        include onsetSymptoms, firstClinicalConsultation, selfIsolation,\n                        hospitalAdmission, icuAdmission, and outcome.\n                    type: array\n                    items:\n                        type: object\n                        properties:\n                            name:\n                                type: string\n                            dateRange:\n                                $ref: '#/components/schemas/DateRange'\n                            value:\n                                type: string\n                symptoms:\n                    type: object\n                    properties:\n                        status:\n                            type: string\n                            enum:\n                                [\n                                    null,\n                                    Asymptomatic,\n                                    Symptomatic,\n                                    Presymptomatic,\n                                ]\n                        values:\n                            type: array\n                            items:\n                                type: string\n                preexistingConditions:\n                    type: object\n                    properties:\n                        hasPreexistingConditions:\n                            type: boolean\n                        values:\n                            type: array\n                            items:\n                                type: string\n                transmission:\n                    type: object\n                    properties:\n                        routes:\n                            type: array\n                            items:\n                                type: string\n                        places:\n                            type: array\n                            items:\n                                type: string\n                        linkedCaseIds:\n                            type: array\n                            items:\n                                type: string\n                travelHistory:\n                    type: object\n                    properties:\n                        traveledPrior30Days:\n                            type: boolean\n                        travel:\n                            type: array\n                            items:\n                                type: object\n                                properties:\n                                    dateRange:\n                                        $ref: '#/components/schemas/DateRange'\n                                    location:\n                                        $ref: '#/components/schemas/FuzzyLocation'\n                                    purpose:\n                                        type: string\n                                        enum:\n                                            [\n                                                null,\n                                                Business,\n                                                Leisure,\n                                                Family,\n                                                Other,\n                                            ]\n                                    methods:\n                                        type: array\n                                        items:\n                                            type: string\n                variant:\n                    type: object\n                    properties:\n                        name:\n                            type: string\n                vaccines:\n                    $ref: '#/components/schemas/VaccineArray'\n                genomeSequences:\n                    type: array\n                    items:\n                        type: object\n                        properties:\n                            sampleCollectionDate:\n                                $ref: '#/components/schemas/Date'\n                            repositoryUrl:\n                                type: string\n                            sequenceId:\n                                type: string\n                            sequenceName:\n                                type: string\n                            sequenceLength:\n                                type: integer\n                                format: int64\n                                minimum: 0\n                pathogens:\n                    type: array\n                    items:\n                        type: object\n                        properties:\n                            name:\n                                type: string\n                            id:\n                                type: integer\n                                format: int32\n                                minimum: 0\n                revisionMetadata:\n                    type: object\n                    properties:\n                        revisionNumber:\n                            type: integer\n                            format: int32\n                            minimum: 0\n                        creationMetadata:\n                            $ref: '#/components/schemas/EditMetadata'\n                        editMetadata:\n                            $ref: '#/components/schemas/EditMetadata'\n                    required:\n                        - revisionNumber\n                SGTF:\n                    type: string\n                    enum:\n                        [\n                            'NA',\n                            '0',\n                            '1',\n                        ]\n        CaseArray:\n            type: object\n            properties:\n                cases:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/Case'\n            required:\n                - cases\n        CaseIdsArray:\n            type: object\n            properties:\n                cases:\n                    type: array\n                    items:\n                        type: string\n            required:\n                - cases\n        CaseStatus:\n            type: string\n            enum: [UNVERIFIED, VERIFIED, EXCLUDED]\n        SymptomArray:\n            type: object\n            properties:\n                symptoms:\n                    type: array\n                    items:\n                        type: string\n        PlacesOfTransmissionArray:\n            type: object\n            properties:\n                placesOfTransmission:\n                    type: array\n                    items:\n                        type: string\n        OccupationArray:\n            type: object\n            properties:\n                occupations:\n                    type: array\n                    items:\n                        type: string\n        Date:\n            oneOf:\n                - type: string\n                - type: object\n                - type: number\n        DateRange:\n            type: object\n            properties:\n                start:\n                    $ref: '#/components/schemas/Date'\n                end:\n                    $ref: '#/components/schemas/Date'\n        EditMetadata:\n            type: object\n            properties:\n                curator:\n                    type: string\n                date:\n                    $ref: '#/components/schemas/Date'\n                notes:\n                    type: string\n        Location:\n            type: object\n            properties:\n                query:\n                    type: string\n                country:\n                    type: string\n                    minLength: 2\n                    maxLength: 2\n                    description: ISO-3166-2 code for a country.\n                    example: GB\n                administrativeAreaLevel1:\n                    type: string\n                administrativeAreaLevel2:\n                    type: string\n                administrativeAreaLevel3:\n                    type: string\n                place:\n                    type: string\n                name:\n                    type: string\n                geoResolution:\n                    type: string\n                geometry:\n                    type: object\n                    properties:\n                        latitude:\n                            type: number\n                            minimum: -90\n                            maximum: 90\n                        longitude:\n                            type: number\n                            minimum: -180\n                            maximum: 180\n                    required:\n                        - latitude\n                        - longitude\n        FuzzyLocation:\n            description: A geo location that can be unspecific. It may not be geocoded if it lacks information.\n            type: object\n            properties:\n                country:\n                    type: string\n                    description: ISO-3166-2 code for a country.\n                    minLength: 2\n                    maxLength: 2\n                    example: CR\n                administrativeAreaLevel1:\n                    type: string\n                    description: First administrative subdivision of a country\n                    example: Any province in Costa Rica\n                administrativeAreaLevel2:\n                    type: string\n                    description: Second administrative subdivision of a country\n                    example: Any canton in Costa Rica\n                administrativeAreaLevel3:\n                    type: string\n                    description: Third administrative subdivision of a country\n                    example: Any district in Costa Rica\n                place:\n                    type: string\n                    description: Name of the place this location refers to\n                    example: Boston Children's Hospital\n                name:\n                    type: string\n                    description: \u003e\n                        Full name of the location\n                    example: Lyon, Auvergne-Rhône-Alpes, France\n                geoResolution:\n                    type: string\n                    description: How granular the location is\n                    enum:\n                        - undefined\n                        - Point\n                        - Admin3\n                        - Admin2\n                        - Admin1\n                        - Country\n                geometry:\n                    type: object\n                    properties:\n                        latitude:\n                            type: number\n                            minimum: -90\n                            maximum: 90\n                        longitude:\n                            type: number\n                            minimum: -180\n                            maximum: 180\n        Curator:\n            description: The logged-in user who submitted the case.\n            type: object\n            properties:\n                email:\n                    type: string\n                    format: email\n        NewCase:\n            description: \u003e\n                A \"#/components/schemas/Case\" with additional required fields for\n                newly-created cases.\n            allOf:\n                - $ref: '#/components/schemas/Case'\n            properties:\n                caseReference:\n                    required:\n                        - sourceId\n                        - sourceUrl\n                curator:\n                    $ref: '#/components/schemas/Curator'\n            required:\n                - caseReference\n                - location\n                - events\n                - curator\n        LocationArray:\n            description: A list of geo locations\n            type: array\n            items:\n                $ref: '#/components/schemas/Location'\n        VaccineArray:\n            description: A list of vaccines\n            type: array\n            items:\n                $ref: '#/components/schemas/Vaccine'\n        Vaccine:\n            description: An instance of an individual receiving a vaccine dose\n            properties:\n                name:\n                    description: The name of the vaccine administered\n                    example: AstraZeneca\n                    type: string\n                batch:\n                    description: The batch ID of the vaccine dose administered\n                    example: PV12345\n                    type: string\n                date:\n                    $ref: '#/components/schemas/Date'\n                sideEffects:\n                    $ref: '#/components/schemas/SymptomArray'\n        AnyValue:\n            description: Used for errors and exceptional cases that need human inspection and intervention\n    responses:\n        '200Case':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Case'\n        '200CaseArray':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/CaseArray'\n        '200CaseIdsArray':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/CaseIdsArray'\n        '200CasesDownload':\n            description: OK\n            content:\n                text/csv:\n                    schema:\n                        description: A CSV with headers detailing case data.\n        '200BatchUpdateResponse':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/BatchUpdateResponse'\n        '200SymptomArray':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/SymptomArray'\n        '200PlacesOfTransmissionArray':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/PlacesOfTransmissionArray'\n        '200OccupationArray':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/OccupationArray'\n        '201Case':\n            description: Created\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/Case'\n        '201Create':\n            description: Created\n            content:\n                application/json:\n                    schema:\n                        anyOf:\n                            - $ref: '#/components/schemas/Case'\n                            - $ref: '#/components/schemas/CaseArray'\n        '200BatchCaseUpsert':\n            description: OK\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/BatchUpsertCaseResponse'\n        '207BatchUpsertCaseResponse':\n            description: Multi-status\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/BatchUpsertCaseResponse'\n        '200':\n            description: OK\n        '201':\n            description: Created\n        '204':\n            description: No content\n        '400':\n            description: Malformed request\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/AnyValue'\n        '403':\n            description: Forbidden\n        '404':\n            description: Not found\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/AnyValue'\n        '422':\n            description: Unprocessable entity\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/AnyValue'\n        '500':\n            description: Internal server error\nservers:\n    - url: http://localhost:3000/api\n      description: Local server\n",
			"canonicalURL": "/github.com/globaldothealth/list@5e525d0b9bff042fdf7c6fb3be0b9c170d58d32a/-/blob/data-serving/data-service/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/globaldothealth/list/blob/5e525d0b9bff042fdf7c6fb3be0b9c170d58d32a/data-serving/data-service/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/cases\": post: responses: 201: contents: application/json: generate schema: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf",
		"sum types with same names",
		"unsupported content types"
	]
}