{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/pandadoc/openapi.yaml",
			"byteSize": 132422,
			"content": "openapi: 3.0.3\ninfo:\n  description: \u003e\n    This is a generated connector from [PandaDoc API version 4.3.0](https://developers.pandadoc.com/reference/about) OpenAPI Specification. \n\n    PandaDoc API spans a broad range of functionality to help you build incredible documents automation experiences inside your product.\n\n    PandaDoc API is organized around REST. Our API has predictable resource-oriented URLs and uses standard HTTP response codes, authentication, and verbs.\n  version: 4.3.0\n  title: PandaDoc Public API\n  license:\n    name: MIT\n    url: 'https://github.com/PandaDoc/pandadoc-openapi-specification/blob/main/LICENSE'\n  x-ballerina-display:\n    label: PandaDoc\n    iconPath: \"icon.png\"\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials. \n\n    You can start using PandaDoc API with our [free sandbox plan](https://signup.pandadoc.com/?ss=api-dev\u0026plan=rec_plans_v5_api_dev_mn_free), which allows you to open all the available features. \n    \n    The [sandbox API key](https://developers.pandadoc.com/reference/api-key-authentication-process#sandbox-key) you can generate on the Developer Dashboard with predefined rate limits.\nservers:\n  - url: 'https://api.pandadoc.com'\n    description: Public API\npaths:\n  /oauth2/access_token:\n    post:\n      summary: Create/Refresh Access Token\n      description: ''\n      operationId: accessToken\n      tags:\n        - OAuth 2.0 Authentication\n      requestBody:\n        required: true\n        description: Authentication request\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/OAuth2CreateAccessTokenRequest'\n                - $ref: '#/components/schemas/OAuth2RefreshAccessTokenRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuth2AccessTokenResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    type: string\n                    example: unsupported_grant_type\n  /public/v1/documents:\n    get:\n      tags:\n        - Documents\n      summary: List documents\n      operationId: listDocuments\n      parameters:\n        - name: completed_from\n          in: query\n          schema:\n            type: string\n            format: datetime\n          required: false\n          example: '2021-10-27T15:22:23.132757Z'\n          description: Return results where the `date_completed` field (ISO 8601) is greater than or equal to this value.\n        - name: completed_to\n          in: query\n          schema:\n            type: string\n            format: datetime\n          required: false\n          description: Return results where the `date_completed` field (ISO 8601) is less than or equal to this value.\n          example: '2021-10-27T15:22:23.132757Z'\n        - name: contact_id\n          in: query\n          schema:\n            type: string\n          required: false\n          description: Returns results where 'contact_id' is present in document as recipient or approver\n          example: 9FeAY2NB3C9qDdtQRb4tTL\n        - name: count\n          in: query\n          schema:\n            type: integer\n          required: false\n          description: 'Specify how many document results to return. Default is 50 documents, maximum is 100 documents.'\n          example: 50\n        - name: created_from\n          in: query\n          schema:\n            type: string\n            format: datetime\n          required: false\n          description: Return results where the `date_created` field (ISO 8601) is greater than or equal to this value.\n          example: '2021-10-27T15:22:23.132757Z'\n        - name: created_to\n          in: query\n          schema:\n            type: string\n            format: datetime\n          required: false\n          description: Return results where the `date_created` field (ISO 8601) is less than this value.\n          example: '2021-10-27T15:22:23.132757Z'\n        - name: deleted\n          in: query\n          schema:\n            type: boolean\n          required: false\n          description: Returns only the deleted documents.\n        - name: id\n          in: query\n          schema:\n            type: string\n          description: Specify document's ID.\n          example: BhVzRcxH9Z2LgfPPGXFUBa\n        - name: folder_uuid\n          in: query\n          schema:\n            type: string\n          required: false\n          description: The UUID of the folder where the documents are stored.\n          example: BhVzRcxH9Z2LgfPPGXFUBa\n        - name: form_id\n          in: query\n          schema:\n            type: string\n          required: false\n          description: Specify the form used for documents creation. This parameter can't be used with template_id.\n          example: BhVzRcxH9Z2LgfPPGXFUBa\n        - name: membership_id\n          in: query\n          schema:\n            type: string\n          required: false\n          description: Returns results where 'membership_id' is present in document as owner (should be member uuid)\n          example: BhVzRcxH9Z2LgfPPGXFUBa\n        - name: metadata\n          in: query\n          schema:\n            type: string\n          required: false\n          description: 'Specify metadata to filter by in the format of `metadata_{metadata-key}={metadata-value}` such as `metadata_opportunity_id=2181432`. The `metadata_` prefix is always required.'\n        - name: modified_from\n          in: query\n          schema:\n            type: string\n            format: datetime\n          required: false\n          description: Return results where the `date_modified` field (iso-8601) is greater than or equal to this value.\n          example: '2021-10-27T15:22:23.132757Z'\n        - name: modified_to\n          in: query\n          schema:\n            type: string\n            format: datetime\n          required: false\n          description: Return results where the `date_modified` field (iso-8601) is less than this value.\n          example: '2021-10-27T15:22:23.132757Z'\n        - name: order_by\n          in: query\n          schema:\n            $ref: '#/components/schemas/DocumentOrderingFieldsEnum'\n          required: false\n          description: 'Specify the order of documents to return. Use `value` (for example, `date_created`) for ASC and `-value` (for example, `-date_created`) for DESC.'\n          example: name\n        - name: page\n          in: query\n          schema:\n            type: integer\n            minimum: 1\n          required: false\n          description: Specify which page of the dataset to return.\n          example: 1\n        - name: q\n          in: query\n          schema:\n            type: string\n          required: false\n          description: Search query. Filter by document reference number (this token is stored on the template level) or name.\n          example: Sample Document\n        - name: status\n          in: query\n          schema:\n            $ref: '#/components/schemas/DocumentStatusRequestEnum'\n          required: false\n          description: |\n            Specify the status of documents to return.\n              * 0: document.draft\n              * 1: document.sent\n              * 2: document.completed\n              * 3: document.uploaded\n              * 4: document.error\n              * 5: document.viewed\n              * 6: document.waiting_approval\n              * 7: document.approved\n              * 8: document.rejected\n              * 9: document.waiting_pay\n              * 10: document.paid\n              * 11: document.voided\n              * 12: document.declined\n              * 13: document.external_review\n        - name: status__ne\n          in: query\n          schema:\n            $ref: '#/components/schemas/DocumentStatusRequestEnum'\n          required: false\n          description: |\n            Specify the status of documents to return (exclude).\n              * 0: document.draft\n              * 1: document.sent\n              * 2: document.completed\n              * 3: document.uploaded\n              * 4: document.error\n              * 5: document.viewed\n              * 6: document.waiting_approval\n              * 7: document.approved\n              * 8: document.rejected\n              * 9: document.waiting_pay\n              * 10: document.paid\n              * 11: document.voided\n              * 12: document.declined\n              * 13: document.external_review\n        - name: tag\n          in: query\n          schema:\n            type: string\n          required: false\n          description: Search tag. Filter by document tag.\n          example: tag_1\n        - name: template_id\n          in: query\n          schema:\n            type: string\n          required: false\n          description: Specify the template used for documents creation. Parameter can't be used with form_id.\n          example: BhVzRcxH9Z2LgfPPGXFUBa\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentListResponse'\n        '400':\n          $ref: '#/components/responses/400RequestError'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '429':\n          $ref: '#/components/responses/429'\n    post:\n      tags:\n        - Documents\n      summary: Create document\n      operationId: createDocument\n      parameters:\n        - name: editor_ver\n          in: query\n          schema:\n            type: string\n          required: false\n          example: ev2\n          description: Set this parameter as `ev1` if you want to create a document from PDF with Classic Editor when both editors are enabled for the workspace.\n      requestBody:\n        required: true\n        description: |\n          Use a PandaDoc template or an existing PDF to create a document.\n          See the creation request examples [by template](/schemas/DocumentCreateByTemplateRequest)\n          and [by pdf](/schemas/DocumentCreateByPdfRequest)\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DocumentCreateRequest'\n            examples:\n              Simple APi Sample:\n                summary: Simple API Sample Document from PandaDoc Template\n                value:\n                  name: Simple API Sample Document from PandaDoc Template\n                  template_uuid: onoznwTq4Y3EELMPyvucnc\n                  recipients:\n                    - email: josh@example.com\n                      first_name: Josh\n                      last_name: Ron\n                      role: user\n                  tokens:\n                    - name: Favorite.Pet\n                      value: Panda\n                  fields:\n                    Favorite.Color:\n                      value: PandaDoc green\n                    Delivery:\n                      value: Same Day Delivery\n                    Like:\n                      value: true\n                    Date:\n                      value: '2019-12-31T00:00:00.000Z'\n                  metadata:\n                    my_favorite_pet: Panda\n                  tags:\n                    - created_via_api\n                    - test_document\n                  images:\n                    - name: Image 1\n                      urls:\n                        - 'https://s3.amazonaws.com/pd-static-content/public-docs/pandadoc-panda-bear.png'\n                  pricing_tables:\n                    - name: Pricing Table 1\n                      data_merge: true\n                      options:\n                        Tax:\n                          type: percent\n                          name: Tax\n                          value: 10\n                      sections:\n                        - title: Sample Section\n                          default: true\n                          rows:\n                            - options:\n                                optional: true\n                                optional_selected: true\n                                qty_editable: true\n                              data:\n                                Name: Toy Panda\n                                Description: Fluffy!\n                                Price: 10\n                                QTY: 3\n                                Tax:\n                                  value: 20\n                                  type: percent\n                              custom_fields:\n                                Fluffiness: 5 / 5\n              Full APi Sample:\n                summary: Full API Sample Document from PandaDoc Template\n                value:\n                  name: Full API Sample Document from PandaDoc Template\n                  template_uuid: hryJY9mqYZHjQCYQuSjRQg\n                  folder_uuid: QMDSzwabfFzTgjW4kUijqQ\n                  owner:\n                    membership_id: QMDSzwabfFzTgjW6KijHyu\n                  recipients:\n                    - email: josh@example.com\n                      first_name: Josh\n                      last_name: Ron\n                      role: user\n                  tokens:\n                    - name: Favorite.Pet\n                      value: Panda\n                  fields:\n                    Favorite.Color:\n                      value: PandaDoc green\n                    Delivery:\n                      value: Same Day Delivery\n                    Like:\n                      value: true\n                    Date:\n                      value: '2019-12-31T00:00:00.000Z'\n                  metadata:\n                    my_favorite_pet: Panda\n                  tags:\n                    - created_via_api\n                    - test_document\n                  images:\n                    - name: Image 1\n                      urls:\n                        - 'https://s3.amazonaws.com/pd-static-content/public-docs/pandadoc-panda-bear.png'\n                  pricing_tables:\n                    - name: Pricing Table 1\n                      data_merge: true\n                      options:\n                        Tax:\n                          type: percent\n                          name: Tax\n                          value: 10\n                      sections:\n                        - title: Sample Section\n                          default: true\n                          rows:\n                            - options:\n                                optional: true\n                                optional_selected: true\n                                qty_editable: true\n                              data:\n                                Name: Toy Panda\n                                Description: Fluffy!\n                                Price: 10\n                                QTY: 3\n                                Tax:\n                                  value: 20\n                                  type: percent\n                              custom_fields:\n                                Fluffiness: 5 / 5\n                  content_placeholders:\n                    - block_id: '{block_id}'\n                      content_library_items:\n                        - id: '{cli_id}'\n                          pricing_tables:\n                            - name: Pricing Table 1\n                              data_merge: false\n                              options:\n                                discount:\n                                  type: absolute\n                                  name: Discount\n                                  value: 2.26\n                              sections:\n                                - title: Sample Section\n                                  default: true\n                                  rows:\n                                    - options:\n                                        optional: true\n                                        optional_selected: true\n                                        qty_editable: true\n                                      data:\n                                        name: Placeholder Panda\n                                        price: 10\n                                        qty: 3\n                        - id: '{cli_id_2}'\n                          recipients:\n                            - email: john@example.com\n                              first_name: John\n                              last_name: Roe\n                              role: Signer\n                              signing_order: 2\n                          fields:\n                            Date:\n                              value: '2019-12-31T00:00:00.000Z'\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n                  description: Binary PDF File\n                data:\n                  type: object\n                  description: JSON as a multipart/form-data string.\n      responses:\n        '201':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentCreateResponse'\n        '400':\n          $ref: '#/components/responses/400ValidationError'\n        '401':\n          $ref: '#/components/responses/401'\n        '429':\n          $ref: '#/components/responses/429'\n  '/public/v1/documents/{id}':\n    get:\n      tags:\n        - Documents\n      summary: Document status\n      operationId: statusDocument\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: Specify document ID.\n          example: BhVzRcxH9Z2LgfPPGXFUBa\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentStatusResponse'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '429':\n          $ref: '#/components/responses/429'\n    delete:\n      tags:\n        - Documents\n      summary: Delete document by id\n      operationId: deleteDocument\n      parameters:\n        - name: id\n          description: Document ID\n          in: path\n          schema:\n            type: string\n          required: true\n          example: BhVzRcxH9Z2LgfPPGXFUBa\n      responses:\n        '204':\n          description: No content\n        '404':\n          $ref: '#/components/responses/404'\n  '/public/v1/documents/{id}/status':\n    patch:\n      tags:\n        - Documents\n      summary: Document status change\n      operationId: changeDocumentStatus\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: Specify document ID.\n          example: BhVzRcxH9Z2LgfPPGXFUBa\n      requestBody:\n        required: true\n        description: Document status change request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DocumentStatusChangeRequest'\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n                  description: Binary attachment file\n                data:\n                  type: object\n                  description: JSON as a multipart/form-data string.\n      responses:\n        '204':\n          description: No content\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '409':\n          $ref: '#/components/responses/409'\n        '429':\n          $ref: '#/components/responses/429'\n  '/public/v1/documents/{id}/details':\n    get:\n      tags:\n        - Documents\n      summary: Document details\n      operationId: detailsDocument\n      parameters:\n        - name: id\n          description: Document ID\n          in: path\n          schema:\n            type: string\n          required: true\n          example: BhVzRcxH9Z2LgfPPGXFUBa\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentDetailsResponse'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '409':\n          $ref: '#/components/responses/409'\n        '429':\n          $ref: '#/components/responses/429'\n  '/public/v1/documents/{id}/session':\n    post:\n      tags:\n        - Documents\n      summary: Create a Document Link\n      operationId: createDocumentLink\n      parameters:\n        - name: id\n          description: Document ID\n          in: path\n          schema:\n            type: string\n          required: true\n          example: ZPeAfcpzr9aiVs5vqUf6jg\n      requestBody:\n        required: true\n        description: Request to create document link\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DocumentCreateLinkRequest'\n      responses:\n        '201':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentCreateLinkResponse'\n        '400':\n          $ref: '#/components/responses/400RequestError'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '429':\n          $ref: '#/components/responses/429'\n  '/public/v1/documents/{id}/send':\n    post:\n      tags:\n        - Documents\n      summary: Send Document\n      operationId: sendDocument\n      parameters:\n        - name: id\n          description: Document ID\n          in: path\n          schema:\n            type: string\n          required: true\n          example: ZPeAfcpzr9aiVs5vqUf6jg\n      requestBody:\n        required: true\n        description: Document send request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DocumentSendRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentSendResponse'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '409':\n          $ref: '#/components/responses/409'\n        '429':\n          $ref: '#/components/responses/429'\n  '/public/v1/documents/{id}/download':\n    get:\n      tags:\n        - Documents\n      summary: Document download\n      operationId: downloadDocument\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: Specify document ID.\n          example: BhVzRcxH9Z2LgfPPGXFUBa\n        - name: watermark_color\n          in: query\n          schema:\n            type: string\n          required: false\n          description: HEX code (for example `#FF5733`).\n          example: '#FF5733'\n        - name: watermark_font_size\n          in: query\n          schema:\n            type: integer\n          required: false\n          description: Font size of the watermark.\n          example: 12\n        - name: watermark_opacity\n          in: query\n          schema:\n            type: number\n            format: float\n          required: false\n          description: In range 0.0-1.0\n          example: 0.5\n        - name: watermark_text\n          in: query\n          schema:\n            type: string\n          required: false\n          description: Specify watermark text.\n          example: John Doe inc.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/pdf:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400RequestError'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '409':\n          $ref: '#/components/responses/409'\n        '429':\n          $ref: '#/components/responses/429'\n  '/public/v1/documents/{id}/download-protected':\n    get:\n      tags:\n        - Documents\n      summary: Download document protected\n      description: Download a signed PDF of a completed document\n      operationId: downloadProtectedDocument\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: Specify document ID.\n          example: Mebvyy3NGsGBnY2rPLkH84\n      responses:\n        '200':\n          description: OK\n          content:\n            application/pdf:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '409':\n          $ref: '#/components/responses/409'\n        '429':\n          $ref: '#/components/responses/429'\n  '/public/v1/documents/{id}/linked-objects':\n    get:\n      tags:\n        - Documents\n      summary: List Linked Objects\n      operationId: listLinkedObjects\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: Specify document ID.\n          example: ZPeAfcpzr9aiVs5vqUf6jg\n      responses:\n        '200':\n          description: Success response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LinkedObjectListResponse'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '409':\n          $ref: '#/components/responses/409'\n        '429':\n          $ref: '#/components/responses/429'\n    post:\n      tags:\n        - Documents\n      summary: Create Linked Object\n      operationId: createLinkedObject\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: Specify document ID.\n          example: ZPeAfcpzr9aiVs5vqUf6jg\n      requestBody:\n        required: true\n        description: Request to create linked object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LinkedObjectCreateRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LinkedObjectCreateResponse'\n        '400':\n          $ref: '#/components/responses/400RequestError'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '429':\n          $ref: '#/components/responses/429'\n  '/public/v1/documents/{id}/linked-objects/{linked_object_id}':\n    delete:\n      tags:\n        - Documents\n      summary: Delete Linked Object\n      operationId: deleteLinkedObject\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: Specify document ID.\n          example: ZPeAfcpzr9aiVs5vqUf6jg\n        - name: linked_object_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: Specify linked object ID.\n          example: deb0d530-d759-4189-a422-8d2265e01b2e\n      responses:\n        '204':\n          description: No content\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '409':\n          $ref: '#/components/responses/409'\n        '429':\n          $ref: '#/components/responses/429'\n  '/public/v1/documents/{id}/attachments':\n    get:\n      summary: Document Attachment List\n      description: Return list of objects attached to particular document\n      operationId: listDocumentAttachments\n      tags:\n        - Document Attachments\n      parameters:\n        - name: id\n          in: path\n          description: Document UUID\n          schema:\n            type: string\n          required: true\n          example: BhVzRcxH9Z2LgfPPGXFUBa\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DocumentAttachmentResponse'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          $ref: '#/components/responses/404'\n        '409':\n          $ref: '#/components/responses/409'\n        '429':\n          $ref: '#/components/responses/429'\n    post:\n      summary: Document Attachment Create\n      description: Creates an attachment for a particular document\n      operationId: createDocumentAttachment\n      tags:\n        - Document Attachments\n      parameters:\n        - name: id\n          in: path\n          description: Document UUID\n          schema:\n            type: string\n          required: true\n          example: BhVzRcxH9Z2LgfPPGXFUBa\n      requestBody:\n        required: true\n        description: Uploads attachment to document by using Multipart Form Data\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/DocumentAttachmentRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentAttachmentResponse'\n        '400':\n          $ref: '#/components/responses/400ValidationError'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          $ref: '#/components/responses/404'\n        '429':\n          $ref: '#/components/responses/429'\n  '/public/v1/documents/{id}/attachments/{attachment_id}':\n    get:\n      summary: Document Attachment Details\n      description: Returns details of the specific document's attachment\n      operationId: detailsDocumentAttachment\n      tags:\n        - Document Attachments\n      parameters:\n        - name: id\n          in: path\n          description: Document UUID\n          schema:\n            type: string\n          required: true\n          example: BhVzRcxH9Z2LgfPPGXFUBa\n        - name: attachment_id\n          in: path\n          description: Attachment UUID\n          schema:\n            type: string\n          required: true\n          example: 89ce2f49-10fb-4e9b-b5f3-e28be2a5c042\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentAttachmentResponse'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          $ref: '#/components/responses/404'\n        '409':\n          $ref: '#/components/responses/409'\n        '429':\n          $ref: '#/components/responses/429'\n    delete:\n      summary: Document Attachment Delete\n      description: Deletes specific document's attachment\n      operationId: deleteDocumentAttachment\n      tags:\n        - Document Attachments\n      parameters:\n        - name: id\n          in: path\n          description: Document UUID\n          schema:\n            type: string\n          required: true\n          example: BhVzRcxH9Z2LgfPPGXFUBa\n        - name: attachment_id\n          in: path\n          description: Attachment UUID\n          schema:\n            type: string\n          required: true\n          example: 89ce2f49-10fb-4e9b-b5f3-e28be2a5c042\n      responses:\n        '204':\n          description: No Content\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          $ref: '#/components/responses/404'\n        '429':\n          $ref: '#/components/responses/429'\n  '/public/v1/documents/{id}/attachments/{attachment_id}/download':\n    get:\n      summary: Document Attachment Download\n      description: Returns document attachment file for download\n      operationId: downloadDocumentAttachment\n      tags:\n        - Document Attachments\n      parameters:\n        - name: id\n          in: path\n          description: Document UUID\n          schema:\n            type: string\n          required: true\n          example: BhVzRcxH9Z2LgfPPGXFUBa\n        - name: attachment_id\n          in: path\n          description: Attachment UUID\n          schema:\n            type: string\n          required: true\n          example: 89ce2f49-10fb-4e9b-b5f3-e28be2a5c042\n      responses:\n        '200':\n          description: OK\n          content:\n            application/*:\n              schema:\n                type: string\n                format: binary\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          $ref: '#/components/responses/404'\n        '409':\n          $ref: '#/components/responses/409'\n        '429':\n          $ref: '#/components/responses/429'\n  '/public/v1/documents/{id}/ownership':\n    patch:\n      tags:\n        - Documents\n      summary: Update document ownership\n      operationId: transferDocumentOwnership\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: Specify document ID.\n          example: BhVzRcxH9Z2LgfPPGXFUBa\n      requestBody:\n        required: true\n        description: Request to transfer document ownership\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DocumentTransferOwnershipRequest'\n      responses:\n        '204':\n          description: No content\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '409':\n          $ref: '#/components/responses/409'\n        '429':\n          $ref: '#/components/responses/429'\n  /public/v1/documents/ownership:\n    patch:\n      tags:\n        - Documents\n      summary: Transfer all documents ownership\n      operationId: transferAllDocumentsOwnership\n      requestBody:\n        required: true\n        description: Request to transfer all document ownerships\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DocumentTransferAllOwnershipRequest'\n      responses:\n        '204':\n          description: No content\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '429':\n          $ref: '#/components/responses/429'\n  /public/v1/content-library-items:\n    get:\n      summary: List Content Library Item\n      description: Optionally filter by a search query or tags.\n      operationId: listContentLibraryItems\n      tags:\n        - Content Library Items\n      parameters:\n        - name: q\n          description: Search query. Filter by content library item name.\n          in: query\n          schema:\n            type: string\n          example: Sample Pricing Table\n        - name: id\n          description: Specify content library item ID.\n          in: query\n          schema:\n            type: string\n          example: UXdP7Lnbvvr4WEb2wzM2hc\n        - name: deleted\n          description: Returns only the deleted content library items.\n          in: query\n          schema:\n            type: boolean\n        - name: folder_uuid\n          description: The UUID of the folder where the content library items are stored.\n          in: query\n          schema:\n            type: string\n          example: S6xX7saJfA44mtJxGWd95L\n        - name: count\n          description: 'Specify how many content library items to return. Default is 50 content library items, maximum is 100 content library items.'\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n          example: 10\n        - name: page\n          description: Specify which page of the dataset to return.\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n        - name: tag\n          description: Search tag. Filter by content library item tag.\n          in: query\n          schema:\n            type: string\n          example: pricing_tables\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContentLibraryItemListResponse'\n        '400':\n          $ref: '#/components/responses/400RequestError'\n        '401':\n          $ref: '#/components/responses/401'\n        '429':\n          $ref: '#/components/responses/429'\n  '/public/v1/content-library-items/{id}/details':\n    get:\n      summary: Details Content Library Item\n      description: Return detailed data about a content library item.\n      operationId: detailsContentLibraryItem\n      tags:\n        - Content Library Items\n      parameters:\n        - name: id\n          description: Content Library Item ID\n          in: path\n          schema:\n            type: string\n          required: true\n          example: UXdP7Lnbvvr4WEb2wzM2hc\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContentLibraryItemResponse'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '429':\n          $ref: '#/components/responses/429'\n  /public/v1/templates:\n    get:\n      summary: List Templates\n      description: 'Optionally, filter by a search query or tags.'\n      operationId: listTemplates\n      tags:\n        - Templates\n      parameters:\n        - name: q\n          description: Optional search query. Filter by template name.\n          in: query\n          schema:\n            type: string\n          example: Sample onboarding template\n        - name: shared\n          description: Returns only the shared templates.\n          in: query\n          schema:\n            type: boolean\n        - name: deleted\n          description: Optional. Returns only the deleted templates.\n          in: query\n          schema:\n            type: boolean\n        - name: count\n          description: 'Optionally, specify how many templates to return. Default is 50 templates, maximum is 100 templates.'\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n          example: 10\n        - name: page\n          description: 'Optionally, specify which page of the dataset to return.'\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n        - name: id\n          description: 'Optionally, specify template ID.'\n          in: query\n          schema:\n            type: string\n          example: e9LxBesSL73AeZMzeYdfvV\n        - name: folder_uuid\n          description: UUID of the folder where the templates are stored.\n          in: query\n          schema:\n            type: string\n          example: xDKHoJ8DkwhiTQSUzNveCJ\n        - name: tag\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n          description: Optional search tag. Filter by template tag.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TemplateListResponse'\n        '401':\n          $ref: '#/components/responses/401'\n        '429':\n          $ref: '#/components/responses/429'\n  '/public/v1/templates/{id}/details':\n    get:\n      summary: Details Template\n      description: Return detailed data about a template.\n      operationId: detailsTemplate\n      tags:\n        - Templates\n      parameters:\n        - name: id\n          description: Template ID\n          in: path\n          schema:\n            type: string\n          required: true\n          example: EE8yUNg5HztqVAuH85He8V\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TemplateDetailsResponse'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '429':\n          $ref: '#/components/responses/429'\n  '/public/v1/templates/{id}':\n    delete:\n      summary: Delete Template\n      description: Delete a template\n      operationId: deleteTemplate\n      tags:\n        - Templates\n      parameters:\n        - name: id\n          description: Template ID\n          in: path\n          schema:\n            type: string\n          required: true\n          example: EE8yUNg5HztqVAuH85He8V\n      responses:\n        '204':\n          description: No content\n        '400':\n          $ref: '#/components/responses/400RequestError'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '429':\n          $ref: '#/components/responses/429'\n  /public/v1/forms:\n    get:\n      summary: Forms\n      description: List forms.\n      operationId: listForm\n      tags:\n        - Forms\n      parameters:\n        - name: count\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n          description: 'Optionally, specify how many forms to return. Default is 50 forms, maximum is 100 forms.'\n          example: 10\n        - name: page\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n          description: 'Optionally, specify which page of the dataset to return.'\n        - name: status\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - draft\n                - active\n                - disabled\n          description: 'Optionally, specify which status of the forms dataset to return.'\n        - name: order_by\n          in: query\n          schema:\n            type: string\n            enum:\n              - name\n              - responses\n              - status\n              - created_date\n              - modified_date\n          description: 'Optionally, specify the form dataset order to return.'\n        - name: asc\n          in: query\n          schema:\n            type: boolean\n          description: 'Optionally, specify sorting the result-set in ascending or descending order.'\n        - name: name\n          in: query\n          schema:\n            type: string\n          description: Specify the form name.\n          example: New Form\n      responses:\n        '200':\n          description: List of forms\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormListResponse'\n        '400':\n          $ref: '#/components/responses/400RequestError'\n        '401':\n          $ref: '#/components/responses/401'\n        '429':\n          $ref: '#/components/responses/429'\n  /public/v1/documents/folders:\n    post:\n      summary: Create Documents Folder\n      description: Create a new folder to store your documents.\n      operationId: createDocumentFolder\n      tags:\n        - Folders API\n      requestBody:\n        required: true\n        description: Document folder details\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DocumentsFolderCreateRequest'\n      responses:\n        '201':\n          description: Success response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentsFolderCreateResponse'\n        '400':\n          $ref: '#/components/responses/400ValidationError'\n        '401':\n          $ref: '#/components/responses/401'\n        '429':\n          $ref: '#/components/responses/429'\n    get:\n      summary: List Documents Folders\n      description: Get the list of folders that contain Documents in your account.\n      operationId: listDocumentFolders\n      tags:\n        - Folders API\n      parameters:\n        - name: parent_uuid\n          in: query\n          schema:\n            type: string\n          description: 'The UUID of the folder containing folders. To list the folders located in the root folder, remove this parameter in the request.'\n          example: Nq8htXxFssmhRxAPSP4SBP\n        - name: count\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n          description: 'Optionally, specify how many folders to return. Default is 50 folders, maximum is 100 folders.'\n          example: 10\n        - name: page\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n          description: 'Optionally, specify which page of the dataset to return.'\n      responses:\n        '200':\n          description: List of document folders\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentsFolderListResponse'\n        '400':\n          $ref: '#/components/responses/400RequestError'\n        '401':\n          $ref: '#/components/responses/401'\n        '429':\n          $ref: '#/components/responses/429'\n  '/public/v1/documents/folders/{id}':\n    put:\n      summary: Rename Documents Folder\n      description: Rename Documents Folder.\n      operationId: renameDocumentFolder\n      tags:\n        - Folders API\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: The UUID of the folder that you are renaming.\n          example: Nq8htXxFssmhRxAPSP4SBP\n      requestBody:\n        required: true\n        description: Details to rename document folder\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DocumentsFolderRenameRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentsFolderRenameResponse'\n        '400':\n          $ref: '#/components/responses/400ValidationError'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          $ref: '#/components/responses/404'\n        '429':\n          $ref: '#/components/responses/429'\n  /public/v1/templates/folders:\n    post:\n      summary: Create Templates Folder\n      description: Create a new folder to store your templates.\n      operationId: createTemplateFolder\n      tags:\n        - Folders API\n      requestBody:\n        required: true\n        description: Details to create new folder for templates\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TemplatesFolderCreateRequest'\n      responses:\n        '201':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TemplatesFolderCreateResponse'\n        '400':\n          $ref: '#/components/responses/400ValidationError'\n        '401':\n          $ref: '#/components/responses/401'\n        '429':\n          $ref: '#/components/responses/429'\n    get:\n      summary: List Templates Folders\n      description: Get the list of folders that contain Templates in your account.\n      operationId: listTemplateFolders\n      tags:\n        - Folders API\n      parameters:\n        - name: parent_uuid\n          description: 'The UUID of the folder containing folders. To list the folders located in the root folder, remove this parameter in the request.'\n          in: query\n          schema:\n            type: string\n          example: Nq8htXxFssmhRxAPSP4SBP\n        - name: count\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n          description: 'Optionally, specify how many folders to return. Default is 50 folders, maximum is 100 folders.'\n          example: 10\n        - name: page\n          description: 'Optionally, specify which page of the dataset to return.'\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TemplatesFolderListResponse'\n        '400':\n          $ref: '#/components/responses/400RequestError'\n        '401':\n          $ref: '#/components/responses/401'\n        '429':\n          $ref: '#/components/responses/429'\n  '/public/v1/templates/folders/{id}':\n    put:\n      summary: Rename Templates Folder\n      description: Rename a templates folder.\n      operationId: renameTemplateFolder\n      tags:\n        - Folders API\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: The UUID of the folder which you are renaming.\n          example: Nq8htXxFssmhRxAPSP4SBP\n      requestBody:\n        required: true\n        description: Request to rename template folder\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TemplatesFolderRenameRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TemplatesFolderRenameResponse'\n        '400':\n          $ref: '#/components/responses/400ValidationError'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          $ref: '#/components/responses/404'\n        '429':\n          $ref: '#/components/responses/429'\n  /public/v1/logs:\n    get:\n      summary: List API Log\n      description: 'Get the list of all logs within the selected workspace. Optionally filter by date, page, and `#` of items per page.'\n      operationId: listLogs\n      tags:\n        - API Logs\n      parameters:\n        - name: since\n          in: query\n          schema:\n            type: string\n          description: Determines a point in time from which logs should be fetched. Either a specific ISO 8601 datetime or a relative identifier such as \"-90d\" (for past 90 days).\n          example: '-7d'\n        - name: to\n          in: query\n          schema:\n            type: string\n          description: Determines a point in time from which logs should be fetched. Either a specific ISO 8601 datetime or a relative identifier such as \"-10d\" (for past 10 days) or a special \"now\" value.\n          example: now\n        - name: count\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n          description: The amount of items on each page.\n          example: 10\n        - name: page\n          in: query\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n          description: Page number of the results returned.\n        - name: statuses\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: integer\n              enum:\n                - 100\n                - 200\n                - 300\n                - 400\n                - 500\n          description: 'Returns only the predefined status codes. Allows 1xx, 2xx, 3xx, 4xx, and 5xx.'\n          example:\n            - 400\n            - 500\n        - name: methods\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - GET\n                - POST\n                - PUT\n                - PATCH\n                - DELETE\n          description: 'Returns only the predefined HTTP methods. Allows GET, POST, PUT, PATCH, and DELETE.'\n          example:\n            - GET\n            - POST\n        - name: search\n          in: query\n          schema:\n            type: string\n          description: Returns the results containing a string.\n          example: documents/hryJY9mqYZHjQCYQuSjRQg/send\n        - name: environment_type\n          in: query\n          schema:\n            type: string\n            enum:\n              - PRODUCTION\n              - SANDBOX\n          description: Returns logs for production/sandbox.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APILogListResponse'\n        '400':\n          $ref: '#/components/responses/400RequestError'\n        '401':\n          $ref: '#/components/responses/401'\n        '429':\n          $ref: '#/components/responses/429'\n  '/public/v1/logs/{id}':\n    get:\n      summary: Details API Log\n      description: Returns details of the specific API log event.\n      operationId: detailsLog\n      tags:\n        - API Logs\n      parameters:\n        - name: id\n          in: path\n          description: Log event id.\n          example: AXp2jrHMK2MKv_lRqmQ\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APILogDetailsResponse'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          $ref: '#/components/responses/404'\n        '429':\n          $ref: '#/components/responses/429'\n  /public/v1/contacts:\n    get:\n      tags:\n        - Contacts\n      summary: List contacts\n      operationId: listContacts\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactListResponse'\n        '400':\n          $ref: '#/components/responses/400RequestError'\n        '401':\n          $ref: '#/components/responses/400RequestError'\n        '403':\n          $ref: '#/components/responses/401'\n        '429':\n          $ref: '#/components/responses/429'\n    post:\n      tags:\n        - Contacts\n      summary: Create contact\n      operationId: createContact\n      requestBody:\n        required: true\n        description: Contact details\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContactCreateRequest'\n      responses:\n        '201':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactDetailsResponse'\n        '400':\n          $ref: '#/components/responses/400ValidationError'\n        '401':\n          $ref: '#/components/responses/401'\n        '429':\n          $ref: '#/components/responses/429'\n  '/public/v1/contacts/{id}':\n    get:\n      tags:\n        - Contacts\n      summary: Get contact details by id\n      operationId: detailsContact\n      parameters:\n        - name: id\n          in: path\n          description: Contact id.\n          schema:\n            type: string\n          required: true\n          example: SyoufNkJiHRn24LpuJ7RXb\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactDetailsResponse'\n        '400':\n          $ref: '#/components/responses/400RequestError'\n        '401':\n          $ref: '#/components/responses/400RequestError'\n        '403':\n          $ref: '#/components/responses/401'\n        '429':\n          $ref: '#/components/responses/429'\n    delete:\n      tags:\n        - Contacts\n      summary: Delete contact by id\n      operationId: deleteContact\n      parameters:\n        - name: id\n          in: path\n          description: Contact id.\n          schema:\n            type: string\n          required: true\n          example: SyoufNkJiHRn24LpuJ7RXb\n      responses:\n        '204':\n          description: OK\n        '400':\n          $ref: '#/components/responses/400RequestError'\n        '401':\n          $ref: '#/components/responses/400RequestError'\n        '403':\n          $ref: '#/components/responses/401'\n        '429':\n          $ref: '#/components/responses/429'\n    patch:\n      tags:\n        - Contacts\n      summary: Update contact by id\n      operationId: updateContact\n      parameters:\n        - name: id\n          in: path\n          description: Contact id.\n          schema:\n            type: string\n          required: true\n          example: SyoufNkJiHRn24LpuJ7RXb\n      requestBody:\n        required: true\n        description: Contact details\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContactUpdateRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContactDetailsResponse'\n        '400':\n          $ref: '#/components/responses/400ValidationError'\n        '401':\n          $ref: '#/components/responses/401'\n        '429':\n          $ref: '#/components/responses/429'\n  /public/v1/members:\n    get:\n      tags:\n        - Members\n      summary: List members\n      description: Retrieve all members details of the workspace\n      operationId: listMembers\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MemberListResponse'\n        '400':\n          $ref: '#/components/responses/400RequestError'\n        '401':\n          $ref: '#/components/responses/400RequestError'\n        '403':\n          $ref: '#/components/responses/401'\n        '429':\n          $ref: '#/components/responses/429'\n  /public/v1/members/current:\n    get:\n      tags:\n        - Members\n      summary: Current member details\n      description: A method to define to whom credentials belong\n      operationId: detailsCurrentMember\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MemberDetailsResponse'\n        '400':\n          $ref: '#/components/responses/400RequestError'\n        '401':\n          $ref: '#/components/responses/400RequestError'\n        '403':\n          $ref: '#/components/responses/401'\n        '429':\n          $ref: '#/components/responses/429'\n  '/public/v1/members/{id}':\n    get:\n      tags:\n        - Members\n      summary: Member details\n      description: A method to retrieve a member's details by id\n      operationId: detailsMember\n      parameters:\n        - name: id\n          in: path\n          description: Membership id\n          schema:\n            type: string\n          required: true\n          example: radQBiBkU7MBk59NSgaGf5\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MemberDetailsResponse'\n        '400':\n          $ref: '#/components/responses/400RequestError'\n        '401':\n          $ref: '#/components/responses/400RequestError'\n        '403':\n          $ref: '#/components/responses/401'\n        '429':\n          $ref: '#/components/responses/429'\ncomponents:\n  schemas:\n    OAuth2CreateAccessTokenRequest:\n      type: object\n      title: OAuth2CreateAccessTokenRequest\n      properties:\n        grant_type:\n          type: string\n          description: This value must be set to `authorization_code`.\n          default: authorization_code\n        client_id:\n          type: string\n          description: Client ID that is automatically generated after application creation in the Developer Dashboard.\n          example: 479a3c7ba4a8d3cf28702\n        client_secret:\n          type: string\n          description: Client secret that is automatically generated after application creation in the Developer Dashboard.\n          example: a66515d3caf9183b8cad3eee546bcba892b45b01\n        code:\n          type: string\n          description: |\n            `auth_code` from the server on the previous step (Authorize a PandaDoc User).\n          example: a9a60d4dabb61ade665c712d2b41766e7bb9a2f9\n        scope:\n          type: string\n          description: 'Requested permissions. Use `read+write` to create, send, delete, and download documents, and `read` to view templates and document details.'\n          example: read+write\n      required:\n        - grant_type\n        - client_id\n        - client_secret\n        - code\n    OAuth2RefreshAccessTokenRequest:\n      type: object\n      title: OAuth2RefreshAccessTokenRequests\n      properties:\n        grant_type:\n          type: string\n          description: This value must be set to `refresh_token`.\n          default: refresh_token\n        client_id:\n          type: string\n          description: Client ID that is automatically generated after application creation in the Developer Dashboard.\n          example: 479a3c7ba4a8d3cf28702\n        client_secret:\n          type: string\n          description: Client secret that is automatically generated after application creation in the Developer Dashboard.\n          example: a66515d3caf9183b8cad3eee546bcba892b45b01\n        refresh_token:\n          type: string\n          description: |\n            `refresh_token` you received and stored from the server when initially creating an `access_token`.\n          example: f61cc0cffd437c9a596f0acc8eb6f502a7a429d7\n        scope:\n          type: string\n          description: Requested permissions. Use `read+write` as our default value to send documents.\n          example: read+write\n      required:\n        - grant_type\n        - client_id\n        - client_secret\n        - refresh_token\n    OAuth2AccessTokenResponse:\n      type: object\n      properties:\n        access_token:\n          type: string\n          example: 2ff2dfe36322448c6953616740a910be57bbd4ca\n        token_type:\n          type: string\n          example: Bearer\n        expires_in:\n          type: number\n          example: 31535999\n        scope:\n          type: string\n          example: read+write\n        refresh_token:\n          type: string\n          example: 4c82f23d91a75961f4d08134fc5ad0dfe6a4c36a\n    DocumentListResponse:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n                example: ZsiBHUyksDoKActQNGz542\n              name:\n                type: string\n                example: Sample Document\n              status:\n                type: string\n                example: document.draft\n              date_created:\n                type: string\n                example: '2021-10-08T11:06:32.337395Z'\n              date_modified:\n                type: string\n                example: '2021-10-08T11:06:32.337395Z'\n              expiration_date:\n                type: string\n                nullable: true\n                example: '2021-10-08T11:06:32.337395Z'\n              version:\n                type: string\n                example: '2'\n    DocumentCreateByTemplateRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name the document you are creating.\n          example: API Sample Document from PandaDoc Template\n        template_uuid:\n          type: string\n          description: 'The ID of a template you want to use. You can copy it from an in app template url such as `https://app.pandadoc.com/a/#/templates/{ID}/content`. A template ID is also obtained by listing templates.'\n          example: hryJY9mqYZHjQCYQuSjRQg\n        folder_uuid:\n          type: string\n          example: QMDSzwabfFzTgjW4kUijqQ\n        recipients:\n          type: array\n          description: 'The list of recipients you''re sending the document to. Every object must contain the email parameter. The `role`, `first_name` and `last_name` parameters are optional. If the `role` parameter passed, a person is assigned all fields matching their corresponding role. If not passed, a person will receive a read-only link to view the document. If the `first_name` and `last_name` not passed the system 1. creates a new contact, if none exists with the given `email`; or 2. gets the existing contact with the given `email` that already exists.'\n          items:\n            type: object\n            properties:\n              email:\n                type: string\n                example: josh@example.com\n              first_name:\n                type: string\n                example: Josh\n              last_name:\n                type: string\n                example: Ron\n              role:\n                type: string\n                example: user\n              signing_order:\n                type: integer\n                example: 1\n                nullable: true\n            required:\n              - email\n        tokens:\n          type: array\n          description: You can pass a list of tokens/values to pre-fill tokens used in a template. Name is a token name in a template. Value is a real value you would like to replace a token with.\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n                example: Favorite.Pet\n              value:\n                type: string\n                example: Panda\n            required:\n              - name\n              - value\n        fields:\n          type: object\n          description: You can pass a list of fields/values to pre-fill fields used in a template. Note that the Signature field can't be pre-filled.\n          example:\n            Like:\n              value: true\n            Delivery:\n              value: Same Day Delivery\n            Date:\n              value: '2019-12-31T00:00:00.000Z'\n        metadata:\n          type: object\n          description: You can pass arbitrary data in the key-value format to associate custom information with a document. This information is returned in any API requests for the document details by id.\n          example:\n            my_favorite_pet: Cat\n        tags:\n          type: array\n          description: Mark your document with one or several tags.\n          items:\n            type: string\n          example:\n            - created_via_api\n            - test_document\n        images:\n          type: array\n          description: You can pass a list of images to image blocks (one image in one block) for replacement.\n          items:\n            type: object\n            properties:\n              urls:\n                type: array\n                items:\n                  type: string\n                example:\n                  - 'https://s3.amazonaws.com/pd-static-content/public-docs/pandadoc-panda-bear.png'\n              name:\n                type: string\n                example: Image 1\n            required:\n              - urls\n              - name\n        pricing_tables:\n          type: array\n          description: 'Information to construct or populate a pricing table can be passed when creating a document. All product information must be passed when creating a new document. Products stored in PandaDoc cannot be used to populate table rows at this time. Keep in mind that this is an array, so multiple table objects can be passed to a document. Make sure that \"Automatically add products to this table\" is enabled in the PandaDoc template pricing tables you wish to populate via API.'\n          items:\n            $ref: '#/components/schemas/PricingTableRequest'\n        content_placeholders:\n          type: array\n          description: 'You may replace Content Library Item Placeholders with a few content library items each and pre-fill fields/variables values, pricing table items, and assign recipients to roles from there.'\n          items:\n            type: object\n            properties:\n              content_library_items:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                      example: 9d9k7VtSQ5KCXfsUQv4GxE\n                    fields:\n                      type: object\n                    pricing_tables:\n                      type: array\n                      items:\n                        $ref: '#/components/schemas/PricingTableRequest'\n                    recipients:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          email:\n                            type: string\n                            example: josh@example.com\n                          first_name:\n                            type: string\n                            example: Josh\n                          last_name:\n                            type: string\n                            example: Ron\n                          role:\n                            type: string\n                            example: user\n                          signing_order:\n                            type: integer\n                            example: 1\n                            nullable: true\n                        required:\n                          - email\n                  required:\n                    - id\n              block_id:\n                type: string\n                example: Content Placeholder 1\n            required:\n              - block_id\n      required:\n        - name\n        - template_uuid\n        - recipients\n    DocumentCreateByPdfRequest:\n      type: object\n      properties:\n        url:\n          type: string\n          example: 'https://s3.amazonaws.com/pd-static-content/public-docs/pandadoc-panda-bear.png'\n          description: Use a URL to specify the PDF. We support only URLs starting with https.\n        recipients:\n          type: array\n          description: 'The list of recipients you''re sending the document to. Every object must contain the email parameter. The `role`, `first_name` and `last_name` parameters are optional. If the `role` parameter passed, a person is assigned all fields matching their corresponding role. If not passed, a person will receive a read-only link to view the document. If the `first_name` and `last_name` not passed the system 1. creates a new contact, if none exists with the given `email`; or 2. gets the existing contact with the given `email` that already exists.'\n          items:\n            type: object\n            properties:\n              email:\n                type: string\n                example: josh@example.com\n              first_name:\n                type: string\n                example: Josh\n              last_name:\n                type: string\n                example: Ron\n              role:\n                type: string\n                example: user\n              signing_order:\n                type: integer\n                example: 1\n                nullable: true\n            required:\n              - email\n        parse_form_fields:\n          type: boolean\n          description: Set this parameter as `true` if you create a document from a PDF with form fields and as `false` if you upload a PDF with field tags.\n        name:\n          type: string\n        tags:\n          type: array\n          description: Mark your document with one or several tags.\n          items:\n            type: string\n          example:\n            - pdf_document\n            - test_document\n        fields:\n          type: object\n          description: |\n            If you are creating a document from a PDF with field tags, you can pass a list of the fields you'd like to pre-fill in the document. If you are creating a document from a PDF with form fields, list all the fields and provide the `role` parameter so that the fields are assigned to document recipients. You can provide empty value for the field so that it's not pre-filled: \"value\": \"\".\n          example:\n            Like:\n              value: true\n            Delivery:\n              value: Same Day Delivery\n            Date:\n              value: '2019-12-31T00:00:00.000Z'\n        metadata:\n          type: object\n          description: You can pass arbitrary data in the key-value format to associate custom information with a document. This information is returned in any API requests for the document details by id.\n          example:\n            my_favorite_pet: Cat\n      required:\n        - url\n        - recipients\n    DocumentCreateRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name the document you are creating.\n          example: API Sample Document from PandaDoc Template\n        template_uuid:\n          type: string\n          description: 'ID of the template you want to use. You can copy it from an in-app template URL such as `https://app.pandadoc.com/a/#/templates/{ID}/content`. A template ID is also obtained by listing templates.'\n          example: hryJY9mqYZHjQCYQuSjRQg\n        folder_uuid:\n          type: string\n          example: QMDSzwabfFzTgjW4kUijqQ\n          description: ID of the folder where the created document should be stored.\n        recipients:\n          type: array\n          description: 'The list of recipients you''re sending the document to. Every object must contain the `email` parameter. The `role`, `first_name` and `last_name` parameters are optional. If the `role` parameter is passed, a person is assigned all fields matching their corresponding role. If a role was not passed, a person receives a read-only link to view the document. If the `first_name` and `last_name` are not passed, the system does this 1. Creates a new contact, if none exists with the given `email`; or 2. Gets the existing contact with the given `email` that already exists.'\n          items:\n            type: object\n            properties:\n              email:\n                type: string\n                example: josh@example.com\n              first_name:\n                type: string\n                example: Josh\n              last_name:\n                type: string\n                example: Ron\n              role:\n                type: string\n                example: user\n              signing_order:\n                type: integer\n                example: 1\n            required:\n              - email\n        tokens:\n          type: array\n          description: You can pass a list of tokens/values to pre-fill tokens used in a template. Name is a token name in a template. Value is a real value you would like to replace a token with.\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n                example: Favorite.Pet\n              value:\n                type: string\n                example: Panda\n            required:\n              - name\n              - value\n        fields:\n          type: object\n          nullable: true\n          description: You can pass a list of fields/values to pre-fill fields used in a template. Please note Signature field can't be pre-filled.\n          example:\n            Like:\n              value: true\n            Delivery:\n              value: Same Dav Delivery\n            Favorite.Color:\n              value: PandaDoc green\n            Date:\n              value: '2019-12-31T00:00:00.000Z'\n        metadata:\n          type: object\n          nullable: true\n          description: You can pass arbitrary data in the key-value format to associate custom information with a document. This information is returned in any API requests for the document details by id.\n          example:\n            opp_id: '1234567'\n            my_favorite_pet: Panda\n        tags:\n          type: array\n          description: Mark your document with one or several tags.\n          items:\n            type: string\n          example:\n            - created_via_api\n            - test_document\n        images:\n          type: array\n          description: You can pass a list of images to image blocks (one image in one block) for replacement.\n          items:\n            type: object\n            nullable: true\n            properties:\n              urls:\n                type: array\n                items:\n                  type: string\n                example:\n                  - 'https://s3.amazonaws.com/pd-static-content/public-docs/pandadoc-panda-bear.png'\n              name:\n                type: string\n                example: Image 1\n            required:\n              - urls\n              - name\n        pricing_tables:\n          type: array\n          description: 'Information to construct or populate a pricing table can be passed when creating a document. All product information must be passed when creating a new document. Products stored in PandaDoc cannot be used to populate table rows at this time. Keep in mind that this is an array, so multiple table objects can be passed to a document.'\n          items:\n            $ref: '#/components/schemas/PricingTableRequest'\n        content_placeholders:\n          type: array\n          description: 'You may replace Content Library Item Placeholders with a few content library items each and pre-fill fields/variables values, pricing table items, and assign recipients to roles from there.'\n          items:\n            type: object\n            properties:\n              block_id:\n                type: string\n                description: Content placeholder block id\n                example: Content Placeholder 1\n              content_library_items:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                      description: Content library item id\n                      example: hryJY9mqYZHjQCYQuSjRQg\n                    pricing_tables:\n                      type: array\n                      items:\n                        $ref: '#/components/schemas/PricingTableRequest'\n                    fields:\n                      type: object\n                    recipients:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          email:\n                            type: string\n                            example: josh@example.com\n                          first_name:\n                            type: string\n                            example: Josh\n                          last_name:\n                            type: string\n                            example: Ron\n                          role:\n                            type: string\n                            example: user\n                          signing_order:\n                            type: integer\n                            example: 1\n                            nullable: true\n                        required:\n                          - email\n                  required:\n                    - id\n        url:\n          type: string\n          example: 'https://s3.amazonaws.com/pd-static-content/public-docs/pandadoc-panda-bear.png'\n          description: Use a URL to specify the PDF. We support only URLs starting with https.\n        parse_form_fields:\n          type: boolean\n          description: Set this parameter as true if you create a document from a PDF with form fields and as false if you upload a PDF with field tags.\n    DocumentCreateResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          example: cKbJ7uay3cEGtsKuGPwYGX\n        name:\n          type: string\n          example: API Sample Document from PandaDoc Template\n        status:\n          $ref: '#/components/schemas/DocumentStatusEnum'\n        date_created:\n          type: string\n          example: '2021-10-08T11:06:32.337395Z'\n        date_modified:\n          type: string\n          example: '2021-10-08T11:06:32.337395Z'\n        expiration_date:\n          type: string\n          nullable: true\n          example: '2021-10-08T11:06:32.337395Z'\n        uuid:\n          type: string\n          example: cKbJ7uay3cEGtsKuGPwYGX\n        links:\n          type: array\n          items:\n            type: object\n            properties:\n              rel:\n                type: string\n                example: status\n              href:\n                type: string\n                example: 'https://api.pandadoc.com/public/v1/documents/jzjCfYgKQYm2u9ctwN6io4'\n              type:\n                type: string\n                example: GET\n        info_message:\n          type: string\n          example: You need to poll the Document Status method until the status will be changed to document.draft\n    DocumentStatusResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          example: msFYActMfJHqNTKH8YSvF1\n        name:\n          type: string\n          example: API Sample Document from PandaDoc Template\n        status:\n          type: string\n          example: document.viewed\n        date_created:\n          type: string\n          example: '2017-07-06T08:42:13.836022Z'\n        date_modified:\n          type: string\n          nullable: true\n          example: '2017-08-04T02:21:13.963750Z'\n        date_completed:\n          type: string\n          nullable: true\n          example: '2018-08-03T08:21:38.809868Z'\n        expiration_date:\n          type: string\n          nullable: true\n          example: '2018-08-05T08:21:38.809868Z'\n        version:\n          type: string\n          nullable: true\n          example: '2'\n        uuid:\n          type: string\n          example: msFYActMfJHqNTKH8YSvF1\n    DocumentStatusChangeRequest:\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/DocumentStatusRequestEnum'\n        note:\n          type: string\n          description: Provide “private notes” regarding the manual status change.\n          example: A private note\n        notify_recipients:\n          type: boolean\n          description: Send a notification email about the status change to all recipients.\n      required:\n        - status\n    DocumentDetailsResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          example: 7kqXgjFejB2toXxjcC5jfZ\n        name:\n          type: string\n          example: API Sample Document from PandaDoc Template\n        autonumbering_sequence_name_prefix: {}\n        date_created:\n          type: string\n          example: 2021-10-23T21:07:04.147Z\n        date_modified:\n          type: string\n          example: 2021-10-23T21:07:04.147Z\n        date_completed:\n          type: string\n          example: 2021-10-23T21:07:04.147Z\n          nullable: true\n        created_by:\n          type: object\n          properties:\n            id:\n              type: string\n              example: 7kqXgjFejB2toXxjcC5jfZ\n            membership_id:\n              type: string\n              example: 7kqXgjFejB2toXxjcC5jfZ\n            email:\n              type: string\n              example: teset@test.test\n            first_name:\n              type: string\n              example: Jhon\n            last_name:\n              type: string\n              example: Dow\n            avatar:\n              type: string\n              example: 'https://pd-live-media.s3.amazonaws.com/users/000GTSGwJw000L2KZqc000/avatar.jpg'\n              nullable: true\n        template:\n          type: object\n          nullable: true\n          properties:\n            id:\n              type: string\n              example: hryJY9mqYZHjQCYQuSjRQg\n            name:\n              type: string\n              example: Upload test\n        expiration_date: {}\n        metadata:\n          type: object\n          example:\n            document__created_via_public_api: 'true'\n            my_favorite_pet: Panda\n            opp_id: '1234567'\n        tokens:\n          type: array\n          items:\n            type: object\n          example:\n            - name: Document.GrandTotal\n              value: $29.99\n            - name: Favorite.Pet\n              value: Panda\n        fields:\n          type: array\n          items:\n            type: object\n          example:\n            - uuid: f9574c3b-5b1e-4479-b2c9-c3ccd92748f3\n              name: Click to upload a file\n              title: ''\n              placeholder: Click to upload a file\n              value:\n                name: file_name.pdf\n                url: 'https://uploadfields.pandadoc-static.com/collect_files/e7b082c2-395b-43c7-a24c-66bd1bbb5d2f/65af1f23-9d26-4622-8ff0-f406b3be27b8-file_name.pdf'\n              assigned_to:\n                id: Fx7CgaVgpGbJBgZ4i5oTx8\n                first_name: John\n                last_name: Roe\n                email: john@example.com\n                recipient_type: signer\n                has_completed: false\n                role: ''\n                roles:\n                  - singer\n                type: recipient\n              field_id: CollectFile1\n              type: collect_file\n            - uuid: eyGJgkWJfUpRtUCsCFDwGU\n              name: Favorite.Color\n              merge_field: Favorite.Color\n              title: Textfield\n              value: value\n              assigned_to:\n                id: Fx7CgaVgpGbJBgZ4i5oTx8\n                first_name: John\n                last_name: Roe\n                email: john@example.com\n                recipient_type: signer\n                has_completed: false\n                role: ''\n                roles: []\n                type: recipient\n              field_id: text1\n              type: text\n            - uuid: M4755SJuoyz5Jzsw4WXTDb\n              name: Like\n              merge_field: Like\n              title: Checkbox\n              value: value\n              assigned_to:\n                id: Fx7CgaVgpGbJBgZ4i5oTx8\n                first_name: John\n                last_name: Roe\n                email: john@example.com\n                recipient_type: signer\n                has_completed: false\n                role: ''\n                roles:\n                  - signer\n                type: recipient\n              field_id: checkbox1\n              type: checkbox\n        pricing:\n          $ref: '#/components/schemas/PricingTablesResponse'\n        version:\n          type: string\n          example: '2'\n        tags:\n          type: array\n          items:\n            type: string\n          example:\n            - tag1\n            - tag2\n        sent_by: {}\n        recipients:\n          type: array\n          items:\n            type: object\n            properties:\n              recipient_type:\n                type: string\n                example: CC\n              role:\n                type: string\n                deprecated: true\n                example: ''\n              roles:\n                type: array\n                items:\n                  type: string\n                example:\n                  - user\n              last_name:\n                type: string\n                example: Dow\n              signing_order: {}\n              id:\n                type: string\n                example: 7kqXgjFejB2toXxjcC5jfZ\n              contact_id:\n                type: string\n                example: 7kqXgjFejB2toXxjcC5jfZ\n              first_name:\n                type: string\n                example: Jhon\n              email:\n                type: string\n                example: test@test.com\n              has_completed:\n                type: boolean\n                example: true\n              shared_link:\n                type: string\n                example: 'https://app.pandadoc.com/document/b7f11ea3c09d1c11208cc122457d4f3a2829d364'\n        grand_total:\n          type: object\n          properties:\n            amount:\n              type: string\n              example: '29.99'\n            currency:\n              type: string\n              example: USD\n        linked_objects:\n          type: array\n          items:\n            type: object\n            properties:\n              provider:\n                type: string\n                example: hubspot\n              entity_type:\n                type: string\n                example: deal\n              entity_id:\n                type: string\n                example: '18640'\n        status:\n          type: string\n          example: document.draft\n    DocumentCreateLinkRequest:\n      type: object\n      properties:\n        recipient:\n          type: string\n          description: The email address for the recipient you're creating a document link for.\n          example: josh@example.com\n        lifetime:\n          type: number\n          description: Provide the number of seconds that a document link should be valid for. Default is 3600 seconds.\n          example: 900\n      required:\n        - recipient\n    DocumentCreateLinkResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          example: QYCPtavst3DqqBK72ZRtbF\n        expires_at:\n          type: string\n          example: '2017-08-29T22:18:44.315Z'\n    DocumentSendRequest:\n      type: object\n      properties:\n        message:\n          type: string\n          description: A message that will be sent by email with a link to a document to sign.\n          example: Hello! This document was sent from the PandaDoc API\n        subject:\n          type: string\n          description: Value that will be used as the email subject.\n          example: Please check this test API document from PandaDoc\n        silent:\n          type: boolean\n          description: 'Disables sent, viewed, comment, and completed email notifications for document recipients and the document sender. By default, notifications emails are sent for specific actions. If set as true, it won''t affect the \"Approve document\" email notification sent to the Approver.'\n    DocumentSendResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          example: msFYActMfJHqNTKH8YSvF1\n        name:\n          type: string\n          example: API Sample Document from PandaDoc Template\n        status:\n          type: string\n          example: document.sent\n        date_created:\n          type: string\n          example: '2018-02-06T08:42:13.836022Z'\n        date_modified:\n          type: string\n          example: '2018-02-06T08:42:13.836022Z'\n        expiration_date:\n          type: string\n          example: '2018-02-06T08:42:13.836022Z'\n        version:\n          type: string\n          example: '2'\n        uuid:\n          type: string\n          example: msFYActMfJHqNTKH8YSvF1\n        shared_link:\n          type: string\n          example: 'https://app.pandadoc.com/document/b7f11ea3c09d1c11208cc122457d4f3a2829d364'\n    DocumentAttachmentRequest:\n      type: object\n      properties:\n        file:\n          type: string\n          format: binary\n          description: Binary file to be attached to a document\n        source:\n          type: string\n          description: URL link to the file to be attached to a document\n          example: 'https://is3-ssl.mzstatic.com/1e7fbd74-d10c-8e3a-63c3-0beb3ea231a5/512x512bb.jpg'\n        name:\n          type: string\n          description: Optional name to set for uploaded file\n          example: Additional agreement\n    DocumentAttachmentResponse:\n      type: object\n      properties:\n        uuid:\n          type: string\n          example: 5a2df796-6c65-492b-955c-5709229a89f7\n        date_created:\n          type: string\n          example: '2021-10-27T20:54:18.757496Z'\n        created_by:\n          type: object\n          properties:\n            id:\n              type: string\n              example: WbAzFZFMgXHnoQREADTdnE\n            email:\n              type: string\n              example: test_user@mail.com\n            first_name:\n              type: string\n              example: John\n            last_name:\n              type: string\n              example: Smith\n            avatar:\n              type: string\n              nullable: true\n              example: 'https://pd-live-media.s3.amazonaws.com/users/000GTSGwJw000L2KZqc000/avatar.jpg'\n        name:\n          type: string\n          nullable: true\n          example: AttachedPhoto.jpg\n    DocumentTransferOwnershipRequest:\n      type: object\n      properties:\n        membership_id:\n          type: string\n          description: A unique identifier of a workspace member.\n          example: radQBiBkU7MBk59NSgaGfd\n    DocumentTransferAllOwnershipRequest:\n      type: object\n      properties:\n        from_membership_id:\n          type: string\n          description: A unique identifier of a workspace member from whom you want to transfer ownership.\n          example: Dqsxp4jNnFcS63tJEgLJGN\n        to_membership_id:\n          type: string\n          description: A unique identifier of a workspace member to whom you want to transfer ownership.\n          example: radQBiBkU7MBk59NSgaGfd\n    LinkedObjectListResponse:\n      type: object\n      properties:\n        linked_objects:\n          type: array\n          items:\n            $ref: '#/components/schemas/LinkedObjectCreateResponse'\n    LinkedObjectCreateRequest:\n      type: object\n      properties:\n        provider:\n          type: string\n          description: CRM name (lowercase). See the list above.\n          example: pipedrive\n        entity_type:\n          type: string\n          description: Entity type. The system validates if the type is supported. See the list for each CRM above.\n          example: deal\n        entity_id:\n          type: string\n          description: Entity unique identifier. The system validates if the entity exists.\n          example: '9372'\n      required:\n        - provider\n        - entity_type\n        - entity_id\n    LinkedObjectCreateResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          example: abb4d3fc-919b-491e-9e08-775036660c0b\n        provider:\n          type: string\n          description: CRM name (lowercase). See the list above.\n          example: pipedrive\n        entity_type:\n          type: string\n          description: Entity type. The system validates if the type is supported. See the list for each CRM above.\n          example: deal\n        entiry_id:\n          type: string\n          description: Entity unique identifier. The system validates if the entity exists.\n          example: '9372'\n    ContentLibraryItemResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          example: 9d9k7VtSQ5KCXfsUQv4GxE\n        name:\n          type: string\n          example: Sample Pricing Table\n        date_created:\n          type: string\n          example: '2021-08-11T14:12:20.017074Z'\n        date_modified:\n          type: string\n          example: '2021-08-11T14:13:38.562290Z'\n        created_by:\n          type: object\n          properties:\n            id:\n              type: string\n              example: b6RGTSGwJw838L2KZqckpD\n            email:\n              type: string\n              example: jane@example.com\n            first_name:\n              type: string\n              example: Jane\n            last_name:\n              type: string\n              example: Roe\n            avatar:\n              type: string\n              nullable: true\n              example: 'https://pd-live-media.s3.amazonaws.com/users/000GTSGwJw000L2KZqc000/avatar.jpg'\n        metadata:\n          type: object\n        tokens:\n          type: array\n          items:\n            type: object\n        fields:\n          type: array\n          items:\n            type: object\n        pricing:\n          $ref: '#/components/schemas/PricingTablesResponse'\n        tags:\n          type: array\n          items:\n            type: string\n        roles:\n          type: array\n          items:\n            type: object\n        version:\n          type: string\n          example: '2'\n        content_placeholders:\n          type: array\n          items:\n            type: object\n        images:\n          type: array\n          items:\n            type: object\n    ContentLibraryItemListResponse:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n                example: a5UgY5J3rGqU7MtW5xwEGk\n              name:\n                type: string\n                example: Painting Blog Banner\n              date_created:\n                type: string\n                example: '2021-04-12T08:43:51.090022Z'\n              date_modified:\n                type: string\n                example: '2021-04-12T08:43:51.190022Z'\n              version:\n                type: string\n                example: '2'\n    TemplateListResponse:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n                example: iMymdDd9XFD3HyxP5VD67Q\n              name:\n                type: string\n                example: Blank\n              date_created:\n                type: string\n                example: '2021-06-17T15:51:13.226974Z'\n              date_modified:\n                type: string\n                example: '2021-06-17T15:51:13.326974Z'\n              version:\n                type: string\n                example: '2'\n    TemplateDetailsResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          example: SkXXMTBsLB5TLPagPTm5yC\n        name:\n          type: string\n          example: API Sample Document from PandaDoc Template\n        date_created:\n          type: string\n          example: '2021-03-10T07:28:47.440256Z'\n        date_modified:\n          type: string\n          example: '2021-03-10T07:28:47.442256Z'\n        created_by:\n          type: object\n          properties:\n            id:\n              type: string\n              example: b6RGTSGwJw838L2KZqckpD\n            email:\n              type: string\n              example: jane@example.com\n            first_name:\n              type: string\n              example: Jane\n            last_name:\n              type: string\n              example: Roe\n            avatar:\n              type: string\n              nullable: true\n              example: 'https://pd-live-media.s3.amazonaws.com/users/000GTSGwJw000L2KZqc000/avatar.jpg'\n        metadata:\n          type: object\n          example:\n            public_template: true\n        tokens:\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n                example: Document.Value\n              value:\n                type: string\n        fields:\n          type: array\n          items:\n            type: object\n          example:\n            - uuid: 74bcb05d-e4cd-458d-bc1d-671c2be8b221\n              name: Favorite.Color\n              title: ''\n              placeholder: Favorite Color\n              value: ''\n              assigned_to:\n                id: HHaFsYvJCqMvdAtXwGcyL\n                name: user\n                preassigned_person:\n                  email: test@panddoc.com\n                  type: preassigned contact\n                type: role\n              merge_field: Favorite.Color\n              field_id: text1\n              type: text\n        pricing:\n          $ref: '#/components/schemas/PricingTablesResponse'\n        tags:\n          type: array\n          items:\n            type: string\n          example:\n            - tpl-tag-one\n            - tpl-tag-two\n        roles:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n                example: HHaFsYvJCqMvdAtXwGcyLn\n              name:\n                type: string\n                example: Sender\n              signing_order:\n                type: string\n                nullable: true\n              preassigned_person:\n                type: object\n                nullable: true\n                properties:\n                  email:\n                    type: string\n                    example: jane@example.com\n                  type:\n                    type: string\n                    example: preassigned contact\n        version:\n          type: string\n          example: '2'\n        content_placeholders:\n          type: array\n          items:\n            type: object\n            properties:\n              uuid:\n                type: string\n                example: 305eca46-f5be-435b-bbb4-f4dacf3896f5\n              block_id:\n                type: string\n                example: Content Placeholder\n              description:\n                type: string\n                example: lick here to add content library items\n        images:\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n                nullable: true\n                example: image\n              block_uuid:\n                type: string\n                example: c0096462-7899-4ae8-b92e-a5643e6a0223\n              urls:\n                type: array\n                items:\n                  type: string\n                  example: 'https://api.pandadoc.com/images/Pf7QMxFzcCkMSVXnCZfwcJ/2e6131b32d6949e4a093c36bafccd194'\n    FormListResponse:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n                example: d94c1b16-ea92-45e6-bc7e-f6d260bd4d42\n              name:\n                type: string\n                example: Blank form\n              date_created:\n                type: string\n                example: '2021-10-15T10:41:00.162597Z'\n              date_modified:\n                type: string\n                example: '2021-10-15T10:41:15.305831Z'\n              status:\n                type: string\n                example: DRAFT\n        has_next_page:\n          type: boolean\n    DocumentsFolderCreateRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name the folder for the Documents you are creating.\n          example: A new document folder\n        parent_uuid:\n          type: string\n          description: 'ID of the parent folder. To create a new folder in the root folder, remove this parameter in the request.'\n          example: Nq8htXxFssmhRxAPSP4SBP\n      required:\n        - name\n    DocumentsFolderCreateResponse:\n      type: object\n      properties:\n        uuid:\n          type: string\n          example: Nq8htXxFssmhRxAPSP4SBP\n        name:\n          type: string\n          example: A new document folder\n        date_created:\n          type: string\n          example: '2021-10-15T10:43:04.103331Z'\n    DocumentsFolderListResponse:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            type: object\n            properties:\n              uuid:\n                type: string\n                example: Nq8htXxFssmhRxAPSP4SBP\n              name:\n                type: string\n                example: A new document folder\n              date_created:\n                type: string\n                example: '2021-10-15T10:43:04.103331Z'\n              has_folders:\n                type: boolean\n              has_items:\n                type: boolean\n    DocumentsFolderRenameRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Provide a new name for the folder.\n          example: Another document folder\n      required:\n        - name\n    DocumentsFolderRenameResponse:\n      type: object\n      properties:\n        uuid:\n          type: string\n          example: Nq8htXxFssmhRxAPSP4SBP\n        name:\n          type: string\n          example: Another document folder\n        date_created:\n          type: string\n          example: '2021-10-15T10:43:04.103331Z'\n    TemplatesFolderCreateRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name the folder for Templates you are creating.\n          example: A new template folder\n        parent_uuid:\n          type: string\n          description: 'ID of the parent folder. To create a new folder in the root folder, remove this parameter in the request.'\n          example: Nq8htXxFssmhRxAPSP4SBP\n      required:\n        - name\n    TemplatesFolderCreateResponse:\n      type: object\n      properties:\n        uuid:\n          type: string\n          example: Nq8htXxFssmhRxAPSP4SBP\n        name:\n          type: string\n          example: A new template folder\n        date_created:\n          type: string\n          example: '2021-10-15T10:43:04.103331Z'\n    TemplatesFolderListResponse:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            type: object\n            properties:\n              uuid:\n                type: string\n                example: Nq8htXxFssmhRxAPSP4SBP\n              name:\n                type: string\n                example: A new template folder\n              date_created:\n                type: string\n                example: '2021-10-15T10:43:04.103331Z'\n              has_folders:\n                type: boolean\n              has_items:\n                type: boolean\n    TemplatesFolderRenameRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Another template folder\n          description: Provide a new name for the folder.\n      required:\n        - name\n    TemplatesFolderRenameResponse:\n      type: object\n      properties:\n        uuid:\n          type: string\n          example: Nq8htXxFssmhRxAPSP4SBP\n        name:\n          type: string\n          example: Another template folder\n        date_created:\n          type: string\n          example: '2021-10-15T10:43:04.103331Z'\n    APILogDetailsResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          example: AXyDkCYFy9B65Q_E9BY3\n        url:\n          type: string\n          example: /public/v1/templates/folders/LKoqFUZZGowLAVo6ECFRyB\n        method:\n          type: string\n          example: PUT\n        status:\n          type: integer\n          example: 201\n        request_time:\n          type: string\n          example: '2021-10-15T10:46:57.867'\n        response_time:\n          type: string\n          example: '2021-10-15T10:46:57.969'\n        response_body:\n          type: object\n          example:\n            name: Another templates folder\n        query_params_string:\n          type: string\n          example: since=-1d\u0026to=now\n        query_params_object:\n          type: object\n          nullable: true\n          example:\n            moesif_meta:\n              root:\n                count: 2\n              since:\n                count: 1\n              to:\n                count: 1\n            since: '-1d'\n            to: now\n        request_body:\n          type: object\n          example:\n            date_created: '2021-10-15T10:45:41.138489Z'\n            name: Another templates folder\n            uuid: LKoqFUZZGowLAVo6ECFRyB\n        token_type:\n          type: string\n          example: OAUTH2_TOKEN\n        application:\n          type: string\n          nullable: true\n          example: Application One\n        key:\n          type: string\n          example: 0a5eb48cf42fa507f3dfdd5bdbab7c5bfc20a1b9\n        request_id:\n          type: string\n          example: 94d232f6-fadd-4e2d-a330-702b0b172588\n        user_email:\n          type: string\n          example: support@pandadoc.com\n        user_id:\n          type: string\n          example: KKj4kdqfrMeE6bni7pK5gK\n    APILogListResponse:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n                example: AXyDkCYFy9B65Q_E9BY3\n              url:\n                type: string\n                example: /public/v1/documents\n              status:\n                type: integer\n                example: 200\n              request_time:\n                type: string\n                example: '2021-10-15T10:59:22.852'\n              response_time:\n                type: string\n                example: '2021-10-15T10:59:23.152'\n    PricingTableRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Pricing Table 1\n        data_merge:\n          type: boolean\n          description: When set to true all field names in data rows must be passed as external names defined in the template.\n        options:\n          type: object\n          properties:\n            currency:\n              type: string\n              example: USD\n            discount:\n              type: object\n              nullable: true\n              properties:\n                type:\n                  type: string\n                  enum:\n                    - absolute\n                    - percent\n                  example: absolute\n                name:\n                  type: string\n                  example: Global Discount\n                value:\n                  type: number\n                  example: 2.26\n              required:\n                - name\n                - type\n                - value\n            tax_first:\n              type: object\n              nullable: true\n              properties:\n                type:\n                  type: string\n                  enum:\n                    - percent\n                  example: percent\n                name:\n                  type: string\n                  example: Tax First\n                value:\n                  type: number\n                  example: 2.26\n              required:\n                - name\n                - type\n                - value\n            tax_second:\n              type: object\n              nullable: true\n              properties:\n                type:\n                  type: string\n                  enum:\n                    - percent\n                  example: percent\n                name:\n                  type: string\n                  example: Tax Second\n                value:\n                  type: number\n                  example: 2.26\n              required:\n                - name\n                - type\n                - value\n        sections:\n          type: array\n          items:\n            type: object\n            properties:\n              title:\n                type: string\n                example: Sample Section\n              default:\n                type: boolean\n              multichoice_enabled:\n                type: boolean\n                default: false\n              rows:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    options:\n                      type: object\n                      title: Pricing Table Request Row Options\n                      properties:\n                        qty_editable:\n                          type: boolean\n                        optional_selected:\n                          type: boolean\n                        optional:\n                          type: boolean\n                    data:\n                      type: object\n                      title: Pricing Table Request Row Data\n                      properties:\n                        name:\n                          type: string\n                          example: Toy Panda\n                        description:\n                          type: string\n                          example: Fluffy!\n                          nullable: true\n                        price:\n                          type: number\n                          example: 10\n                        cost:\n                          type: number\n                          example: 8.5\n                        qty:\n                          type: integer\n                          example: 3\n                        sku:\n                          type: string\n                          example: toy_panda\n                          nullable: true\n                        discount:\n                          type: object\n                          title: Pricing Table Request Row Data Discount\n                          nullable: true\n                          properties:\n                            value:\n                              type: number\n                              example: 7.5\n                            type:\n                              type: string\n                              example: percent\n                        tax_first:\n                          type: object\n                          title: Pricing Table Request Row Data Tax First\n                          nullable: true\n                          properties:\n                            value:\n                              type: number\n                              example: 7.5\n                            type:\n                              type: string\n                              example: percent\n                        tax_second:\n                          type: object\n                          title: Pricing Table Request Row Data Tax Second\n                          nullable: true\n                          properties:\n                            value:\n                              type: number\n                              example: 7.5\n                            type:\n                              type: string\n                              example: percent\n                      required:\n                        - name\n                        - price\n                        - qty\n                    custom_fields:\n                      type: object\n                      example:\n                        Fluffiness: 5/5\n            required:\n              - title\n      required:\n        - name\n    PricingTablesResponse:\n      type: object\n      properties:\n        tables:\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n                example: Pricing Table\n              id:\n                type: string\n                example: 065c5cbc-a065-4843-ba17-028e63779605\n              total:\n                type: string\n                example: '11500'\n              is_included_in_total:\n                type: boolean\n              summary:\n                type: object\n                nullable: true\n                properties:\n                  subtotal:\n                    type: string\n                    example: '11500'\n                    nullable: true\n                  total:\n                    type: string\n                    example: '11500'\n                    nullable: true\n                  discount:\n                    type: string\n                    example: '0'\n                    nullable: true\n                  tax:\n                    type: string\n                    example: '0'\n                    nullable: true\n              items:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                      nullable: true\n                    sku:\n                      type: string\n                      nullable: true\n                    qty:\n                      type: string\n                      nullable: true\n                      example: '10'\n                    name:\n                      type: string\n                      nullable: true\n                      example: Annual license\n                    cost:\n                      type: string\n                      nullable: true\n                    price:\n                      type: string\n                      nullable: true\n                      example: '100'\n                    description:\n                      type: string\n                      nullable: true\n                      example: 1 year subscription\n                    custom_fields:\n                      type: object\n                      nullable: true\n                      example: {}\n                    custom_columns:\n                      type: object\n                      nullable: true\n                      example:\n                        Images: ''\n                        Cost: ''\n                        Subtotal: ''\n                    discount:\n                      type: object\n                      nullable: true\n                      properties:\n                        value:\n                          type: string\n                          nullable: true\n                        type:\n                          type: string\n                          nullable: true\n                    tax_first:\n                      type: object\n                      nullable: true\n                      properties:\n                        value:\n                          type: string\n                          nullable: true\n                        type:\n                          type: string\n                          nullable: true\n                    tax_second:\n                      type: object\n                      nullable: true\n                      properties:\n                        value:\n                          type: string\n                          nullable: true\n                        type:\n                          type: string\n                          nullable: true\n                    subtotal:\n                      type: string\n                      nullable: true\n                      example: '10000'\n                    options:\n                      type: object\n                      nullable: true\n                      example: {}\n                      properties:\n                        optional:\n                          type: boolean\n                          nullable: true\n                        optional_selected:\n                          type: boolean\n                          nullable: true\n                        multichoice_enabled:\n                          type: boolean\n                          nullable: true\n                        multichoice_selected:\n                          type: boolean\n                          nullable: true\n                    sale_price:\n                      type: string\n                      nullable: true\n                      example: '1000'\n                    taxes:\n                      type: object\n                      nullable: true\n                      example: {}\n                    discounts:\n                      type: object\n                      nullable: true\n                      example: {}\n                    fees:\n                      type: object\n                      nullable: true\n                      example: {}\n                    merged_data:\n                      type: object\n                      nullable: true\n                      description: Will contain all the fields in flat structure with external field names defined in the template.\n                      example:\n                        custom_name: SomeName\n                        custom_description: SomeCustomDescription\n                        custom_price: '10.99'\n                        custom_qty: '1.00'\n                        custom_sku: Test\n                        custom_tax:\n                          value: '10'\n                          type: percent\n                        custom_fee:\n                          value: '10'\n                          type: percent\n                        custom_discount:\n                          value: '10'\n                          type: percent\n                        custom_text: Some other\n                        Cost: null\n                        Subtotal: '26.38'\n                        fluffiness: Fluffiness\n                        Other_field: SomeText\n              currency:\n                type: string\n                example: USD\n        total:\n          type: string\n          example: '11500'\n    ContactDetailsResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          example: BCUWJhZm3k7grUNFAz6cD2\n        email:\n          type: string\n          example: user01@pandadoc.com\n        first_name:\n          type: string\n          nullable: true\n          example: John\n        last_name:\n          type: string\n          nullable: true\n          example: Doe\n        company:\n          type: string\n          nullable: true\n          example: John Doe Inc.\n        job_title:\n          type: string\n          nullable: true\n          example: CTO\n        phone:\n          type: string\n          nullable: true\n          example: '+14842634627'\n        state:\n          type: string\n          nullable: true\n          example: Texas\n        street_address:\n          type: string\n          nullable: true\n          example: 1313 Mockingbird Lane\n        city:\n          type: string\n          nullable: true\n          example: Austin\n        postal_code:\n          type: string\n          nullable: true\n          example: '75001'\n    ContactListResponse:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContactDetailsResponse'\n    ContactCreateRequest:\n      type: object\n      properties:\n        email:\n          type: string\n          example: user01@pandadoc.com\n        first_name:\n          type: string\n          nullable: true\n          example: John\n        last_name:\n          type: string\n          nullable: true\n          example: Doe\n        company:\n          type: string\n          nullable: true\n          example: John Doe Inc.\n        job_title:\n          type: string\n          nullable: true\n          example: CTO\n        phone:\n          type: string\n          nullable: true\n          example: '+14842634627'\n        state:\n          type: string\n          nullable: true\n          example: Texas\n        street_address:\n          type: string\n          nullable: true\n          example: 1313 Mockingbird Lane\n        city:\n          type: string\n          nullable: true\n          example: Austin\n        postal_code:\n          type: string\n          nullable: true\n          example: '75001'\n      required:\n        - email\n    ContactUpdateRequest:\n      type: object\n      properties:\n        email:\n          type: string\n          example: user01@pandadoc.com\n        first_name:\n          type: string\n          nullable: true\n          example: John\n        last_name:\n          type: string\n          nullable: true\n          example: Doe\n        company:\n          type: string\n          nullable: true\n          example: John Doe Inc.\n        job_title:\n          type: string\n          nullable: true\n          example: CTO\n        phone:\n          type: string\n          nullable: true\n          example: '+14842634627'\n        state:\n          type: string\n          nullable: true\n          example: Texas\n        street_address:\n          type: string\n          nullable: true\n          example: 1313 Mockingbird Lane\n        city:\n          type: string\n          nullable: true\n          example: Austin\n        postal_code:\n          type: string\n          nullable: true\n          example: '75001'\n    MemberDetailsResponse:\n      type: object\n      properties:\n        user_id:\n          type: string\n          description: A unique identifier of the user in the organization.\n          example: ajnN7eGutJZsRKjQrNuPkh\n        membership_id:\n          type: string\n          description: A unique identifier of the user in the workspace.\n          example: radQBiBkU7MBk59NSgaGf5\n        email:\n          type: string\n          description: A user's email address.\n          example: josh@example.com\n        first_name:\n          type: string\n          description: A user's first name.\n          example: Josh\n        last_name:\n          type: string\n          description: A user's last name.\n          example: Ron\n        is_active:\n          type: boolean\n          description: A boolean value that identifies if a member is active in the workspace.\n          example: true\n        workspace:\n          type: string\n          description: A name of the user's current active workspace.\n          example: xc4mBZ7dKErXQtJwwD6Ghg\n        workspace_name:\n          type: string\n          description: A unique identifier of the user's current active workspace.\n          example: PandaDoc\n        emails_verified:\n          type: boolean\n          description: A boolean value that identifies if the email is verified.\n          example: true\n        role:\n          type: string\n          description: A member's role in the workspace.\n          example: Admin\n        user_license:\n          type: string\n          description: A user license in the organization.\n          example: Full\n        date_created:\n          type: string\n          description: A date when a member was added to the workspace.\n          example: '2020-11-17T08:42:34.237567Z'\n        date_modified:\n          type: string\n          description: Last modified date of a member.\n          example: '2021-11-30T10:30:35.071428Z'\n    MemberListResponse:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/MemberDetailsResponse'\n    DocumentStatusEnum:\n      type: string\n      enum:\n        - document.draft\n        - document.sent\n        - document.completed\n        - document.uploaded\n        - document.error\n        - document.viewed\n        - document.waiting_approval\n        - document.approved\n        - document.rejected\n        - document.waiting_pay\n        - document.paid\n        - document.voided\n        - document.declined\n        - document.external_review\n      example: document.draft\n    DocumentStatusRequestEnum:\n      type: integer\n      enum:\n        - 0\n        - 1\n        - 2\n        - 3\n        - 4\n        - 5\n        - 6\n        - 7\n        - 8\n        - 9\n        - 10\n        - 11\n        - 12\n        - 13\n      example: 12\n    DocumentOrderingFieldsEnum:\n      type: string\n      enum:\n        - name\n        - date_created\n        - date_status_changed\n        - date_of_last_action\n        - date_modified\n        - date_sent\n        - date_completed\n        - date_expiration\n        - date_declined\n        - status\n        - '-name'\n        - '-date_created'\n        - '-date_status_changed'\n        - '-date_of_last_action'\n        - '-date_modified'\n        - '-date_sent'\n        - '-date_completed'\n        - '-date_expiration'\n        - '-date_declined'\n        - '-status'\n  responses:\n    '401':\n      description: Authentication error\n      content:\n        application/json:\n          schema:\n            properties:\n              type:\n                type: string\n                example: authentication_error\n              detail:\n                type: string\n                example: Authentication credentials were not provided.\n    '403':\n      description: Permission error\n      content:\n        application/json:\n          schema:\n            properties:\n              type:\n                type: string\n                example: permission_error\n              detail:\n                type: string\n                example: You do not have permission to perform this action.\n    '404':\n      description: Not found\n      content:\n        application/json:\n          schema:\n            properties:\n              type:\n                type: string\n                example: request_error\n              detail:\n                type: string\n                example: Not found\n    '409':\n      description: Conflict\n      content:\n        application/json:\n          schema:\n            properties:\n              id:\n                type: string\n                example: mXpGsEBHdSFW97zKXq75hm\n              status:\n                type: string\n                example: document.uploaded\n              info_message:\n                type: string\n                example: 'Warning - Document status document.uploaded doesn’t mean that the document already exists - processing happens asynchronously. Please follow the documentation section https://developers.pandadoc.com/reference/new-document'\n    '429':\n      description: Too Many Requests\n      content:\n        application/json:\n          schema:\n            properties:\n              type:\n                type: string\n                example: throttled\n              detail:\n                type: string\n                example: Request was throttled.\n    400RequestError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            properties:\n              type:\n                type: string\n                example: request_error\n              detail:\n                type: object\n                example:\n                  count:\n                    - A valid integer is required.\n                  order_by:\n                    - value is not a valid choice.\n    400ValidationError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            properties:\n              type:\n                type: string\n                example: validation_error\n              detail:\n                type: object\n                example:\n                  count:\n                    - A valid integer is required.\n                  order_by:\n                    - value is not a valid choice.\n  securitySchemes:\n    apiKey:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Represents API Key available in PandaDoc Developer Dashboard.\n    oauth2:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: 'https://app.pandadoc.com/oauth2/authorize'\n          tokenUrl: 'https://api.pandadoc.com/oauth2/access_token'\n          refreshUrl: 'https://api.pandadoc.com/oauth2/access_token'\n          scopes:\n            read+write: 'Use `read+write` to create, send, delete, and download documents, and `read` to view templates and document details.'\n      description: |\n        Send the authenticating user to the PandaDoc OAuth2 request URL. We recommend a button or a link titled\n        \"Connect to PandaDoc\" if you are connecting users from a custom application. Users will see the \"Authorize Application\" screen.\n        When the user clicks \"Authorize\", PandaDoc redirects the user back to your site with an authorization code inside the URL.\n\n        https://app.pandadoc.com/oauth2/authorize?client_id={client_id}\u0026redirect_uri={redirect_uri}\u0026scope=read+write\u0026response_type=code\n\n        `client_id` and `redirect_uri` values should match your application settings.\nsecurity:\n  - apiKey: []\n  - oauth2: []",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/pandadoc/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/pandadoc/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/public/v1/documents\": get: security: security \"oauth2\" (index 1): oauth2 security not implemented",
	"NotImplemented": [
		"complex form schema",
		"oauth2 security"
	]
}