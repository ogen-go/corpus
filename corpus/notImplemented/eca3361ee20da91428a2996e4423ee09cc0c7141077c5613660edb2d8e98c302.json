{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql"
		},
		"file": {
			"name": "api-v1.yaml",
			"size": 0,
			"path": "examples/registry/src/publicapis/v1/services/api-v1.yaml",
			"byteSize": 5328,
			"content": "components:\n  schemas:\n    Api:\n      type: object\n      properties:\n        API:\n          type: string\n        Description:\n          type: string\n        Auth:\n          type: string\n        HTTPS:\n          type: string\n        Cors:\n          type: boolean\n        Link:\n          type: string\n    ApiList:\n      type: object\n      properties:\n        count:\n          type: integer\n        entries:\n          items:\n            $ref: '#/components/schemas/Api'\n          type: array\n    CategoryList:\n      type: object\n      properties:\n        count:\n          type: integer\n        categories:\n          items:\n            type: string\n          type: array\n    HealthStatus:\n      type: string\n  x-stackQL-resources:\n    apis:\n      id: publicapis.api.apis\n      name: apis\n      title: apis\n      methods:\n        list:\n          operation:\n            $ref: GET\n          path:\n            $ref: /entries\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: entries\n    random:\n      id: publicapis.api.random\n      name: random\n      title: random\n      methods:\n        list:\n          operation:\n            $ref: GET\n          path:\n            $ref: /random\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: entries\n    categories:\n      id: publicapis.api.categories\n      name: categories\n      title: categories\n      methods:\n        list:\n          operation:\n            $ref: GET\n          path:\n            $ref: /categories\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: categories\n    health:\n      id: publicapis.api.health\n      name: health\n      title: health\n      methods:\n        get:\n          operation:\n            $ref: GET\n          path:\n            $ref: /health\n          response:\n            mediaType: text/plain\n            openAPIDocKey: '200'\nexternalDocs:\n  description: Find more info here\n  url: https://api.publicapis.org/\ninfo:\n  contact:\n    url: https://api.publicapis.org/\n  x-serviceName: api\nopenapi: 3.0.1\npaths:\n  /entries:\n    get:\n      description: apis currently present in the repository.\n        Can be filtered through parameters.\n      parameters:\n      - description: 'name of entry (matches via substring - i.e. \"at\" would return \"cat\" and \"atlas\")'\n        in: query\n        name: title\n        schema:\n          type: string\n      - description: description of entry (matches via substring)\n        in: query\n        name: description\n        schema:\n          type: string\n      - description: auth type of entry (can only be values matching in project or null)\n        in: query\n        name: auth\n        schema:\n          type: string\n      - description: return entries that support HTTPS or not\n        in: query\n        name: https\n        schema:\n          type: boolean\n      - description: 'CORS support for entry (\"yes\", \"no\", or \"unknown\")'\n        in: query\n        name: cors\n        schema:\n          type: string\n      - description: return entries of a specific category\n        in: query\n        name: category\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiList'\n          description: Success\n  /random:\n    get:\n      description: random selection from apis currently present in the repository.\n        Can be filtered through parameters.\n      parameters:\n      - description: 'name of entry (matches via substring - i.e. \"at\" would return \"cat\" and \"atlas\")'\n        in: query\n        name: title\n        schema:\n          type: string\n      - description: description of entry (matches via substring)\n        in: query\n        name: description\n        schema:\n          type: string\n      - description: auth type of entry (can only be values matching in project or null)\n        in: query\n        name: auth\n        schema:\n          type: string\n      - description: return entries that support HTTPS or not\n        in: query\n        name: https\n        schema:\n          type: boolean\n      - description: 'CORS support for entry (\"yes\", \"no\", or \"unknown\")'\n        in: query\n        name: cors\n        schema:\n          type: string\n      - description: return entries of a specific category\n        in: query\n        name: category\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiList'\n          description: Success\n  /categories:\n    get:\n      description: list of categories currently present.\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CategoryList'\n          description: Success\n  /health:\n    get:\n      description: apis currently present in the repository.\n        Can be filtered through parameters.\n      responses:\n        '200':\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/HealthStatus'\n          description: Success\nservers:\n- url: https://api.publicapis.org\n",
			"canonicalURL": "/github.com/stackql/stackql@44687862b5ee57dab742f631bf7273e0717f3988/-/blob/examples/registry/src/publicapis/v1/services/api-v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql/blob/44687862b5ee57dab742f631bf7273e0717f3988/examples/registry/src/publicapis/v1/services/api-v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/health\": get: responses: 200: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}