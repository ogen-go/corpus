{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/readmeio/oas"
		},
		"file": {
			"name": "responses.json",
			"size": 0,
			"path": "__tests__/__datasets__/responses.json",
			"byteSize": 3161,
			"content": "{\n  \"openapi\": \"3.0.3\",\n  \"info\": {\n    \"title\": \"Various response handling cases\",\n    \"version\": \"1.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://httpbin.org/anything\"\n    }\n  ],\n  \"paths\": {\n    \"/vendor-prefix-content-type\": {\n      \"get\": {\n        \"description\": \"We should be able to return a response schema on vendor-prefixed content type that's JSON-compatible.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/vnd.partytime+json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/simple-object\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/multiple-responses-with-a-json-compatible\": {\n      \"get\": {\n        \"description\": \"We should always prefer a JSON-compatible content type when multiple content types are present in a response.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"image/png\": {\n                \"schema\": { \"type\": \"string\" }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/simple-object\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/multiple-responses-with-json-compatible-and-wildcard\": {\n      \"get\": {\n        \"description\": \"We should always prefer the JSON-compatible content type when both JSON and wildcard content types are present.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": { \"type\": \"string\" }\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/simple-object\"\n                }\n              },\n              \"image/png\": {\n                \"schema\": { \"type\": \"string\", \"format\": \"binary\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/wildcard-content-type\": {\n      \"get\": {\n        \"description\": \"We should be able to handle wildcard content types.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/simple-object\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/response-with-example-and-no-schema\": {\n      \"get\": {\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"example\": [\n                  {\n                    \"id\": 29748772,\n                    \"calendar_ids\": [\n                      6625762,\n                      6447372\n                    ]\n                  }\n                ]\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"simple-object\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"foo\": { \"type\": \"string\" },\n          \"bar\": { \"type\": \"number\" }\n        }\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/readmeio/oas@e398cd99d6ab60f08b65b94de6d2c9a4c9406085/-/blob/__tests__/__datasets__/responses.json",
			"externalURLs": [
				{
					"url": "https://github.com/readmeio/oas/blob/e398cd99d6ab60f08b65b94de6d2c9a4c9406085/__tests__/__datasets__/responses.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/wildcard-content-type\": get: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"empty schema",
		"unsupported content types"
	]
}