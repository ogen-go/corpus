{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/networknt/model-config"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "rest/kafka-sidecar/openapi.json",
			"byteSize": 30309,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Light Mesh Kafka Sidecar\",\n    \"version\": \"1.0.0\",\n    \"description\": \"# Kafka producer and consumer endpoints\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://kafka.networknt.com\"\n    }\n  ],\n  \"paths\": {\n    \"/producers/{topic}\": {\n      \"post\": {\n        \"operationId\": \"postData\",\n        \"summary\": \"Post a list of users to Kafka\",\n        \"parameters\": [\n          {\n            \"name\": \"topic\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The kafka topic name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"message data\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ProduceRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Data successfully produced.\"\n          },\n          \"400\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"kafka_auth\": [\n              \"kafka:w\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/consumers/{group}\": {\n      \"post\": {\n        \"operationId\": \"createConsumerInstanceInGroup\",\n        \"summary\": \"Create a new consumer instance in the consumer group\",\n        \"parameters\": [\n          {\n            \"name\": \"group\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The consumer group\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"consumer instance request\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateConsumerInstanceRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CreateConsumerInstanceResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"kafka_auth\": [\n              \"kafka:w\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/consumers/{group}/instances/{instance}\": {\n      \"delete\": {\n        \"operationId\": \"deleteConsumerInstance\",\n        \"summary\": \"Delete the consumer instance\",\n        \"parameters\": [\n          {\n            \"name\": \"group\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The consumer group name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"instance\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The Id of the consumer instance\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"No Content\"\n          },\n          \"404\": {\n            \"description\": \"Consumer instance not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"kafka_auth\": [\n              \"kafka:w\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/consumers/{group}/instances/{instance}/offsets\": {\n      \"post\": {\n        \"operationId\": \"commmitConsumerOffsets\",\n        \"summary\": \"Commit a list of offsets for the consumer\",\n        \"parameters\": [\n          {\n            \"name\": \"group\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The consumer group name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"instance\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The Id of the consumer instance\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"topic partition offset metadata\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConsumerOffsetCommitRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"No Content\"\n          },\n          \"404\": {\n            \"description\": \"Consumer instance not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"kafka_auth\": [\n              \"kafka:w\"\n            ]\n          }\n        ]\n      },\n      \"put\": {\n        \"summary\": \"Get the last committed offsets for the given partition\",\n        \"operationId\": \"getCommittedOffsets\",\n        \"parameters\": [\n          {\n            \"name\": \"group\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The consumer group name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"instance\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The Id of the consumer instance\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"consumer committed request\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConsumerCommittedRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ConsumerCommittedResponse\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Consumer instance not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"kafka_auth\": [\n              \"kafka:w\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/consumers/{group}/instances/{instance}/subscriptions\": {\n      \"post\": {\n        \"operationId\": \"subscribeTopics\",\n        \"summary\": \"Subscribe to the given list of topics or a topic pattern to get dynamically assigned partitions.\",\n        \"parameters\": [\n          {\n            \"name\": \"group\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The consumer group name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"instance\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The Id of the consumer instance\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"consumer seek to request\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConsumerSubscriptionRecord\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful response\"\n          },\n          \"404\": {\n            \"description\": \"Consumer instance not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"kafka_auth\": [\n              \"kafka:w\"\n            ]\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"getSubscribedTopics\",\n        \"summary\": \"Get the current subscribed list of topics\",\n        \"parameters\": [\n          {\n            \"name\": \"group\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The consumer group name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"instance\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The Id of the consumer instance\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ConsumerSubscriptionResponse\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Consumer instance not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"kafka_auth\": [\n              \"kafka:r\"\n            ]\n          }\n        ]\n      },\n      \"delete\": {\n        \"operationId\": \"unsubscribeTopics\",\n        \"summary\": \"Unsubscribe from topics currently subscribed\",\n        \"parameters\": [\n          {\n            \"name\": \"group\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The consumer group name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"instance\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The Id of the consumer instance\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"No Content\"\n          },\n          \"404\": {\n            \"description\": \"Consumer instance not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"kafka_auth\": [\n              \"kafka:w\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/consumers/{group}/instances/{instance}/assignments\": {\n      \"post\": {\n        \"operationId\": \"assignPartitions\",\n        \"summary\": \"Manually assign a list of partitions to this consumer.\",\n        \"parameters\": [\n          {\n            \"name\": \"group\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The consumer group name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"instance\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The Id of the consumer instance\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"consumer seek to request\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConsumerAssignmentRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful response\"\n          },\n          \"404\": {\n            \"description\": \"Consumer instance not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"kafka_auth\": [\n              \"kafka:w\"\n            ]\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"getAssignedPartitions\",\n        \"summary\": \"Get the list of partitions currently manually assigned to this consumer\",\n        \"parameters\": [\n          {\n            \"name\": \"group\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The consumer group name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"instance\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The Id of the consumer instance\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ConsumerAssignmentResponse\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Consumer instance not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"kafka_auth\": [\n              \"kafka:r\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/consumers/{group}/instances/{instance}/positions\": {\n      \"post\": {\n        \"operationId\": \"overrideFetchOffset\",\n        \"summary\": \"Overrides the fetch offsets that the consumer will use for the next set of records to fetch\",\n        \"parameters\": [\n          {\n            \"name\": \"group\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The consumer group name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"instance\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The Id of the consumer instance\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"consumer seek to request\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConsumerSeekRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful response\"\n          },\n          \"404\": {\n            \"description\": \"Consumer instance not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"kafka_auth\": [\n              \"kafka:w\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/consumers/{group}/instances/{instance}/positions/first\": {\n      \"post\": {\n        \"operationId\": \"seekFirstOffset\",\n        \"summary\": \"Seek to the first offset for each of the given partitions\",\n        \"parameters\": [\n          {\n            \"name\": \"group\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The consumer group name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"instance\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The Id of the consumer instance\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"consumer seek to request\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConsumerSeekToRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful response\"\n          },\n          \"404\": {\n            \"description\": \"Consumer instance not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"kafka_auth\": [\n              \"kafka:w\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/consumers/{group}/instances/{instance}/positions/last\": {\n      \"post\": {\n        \"operationId\": \"seekLastOffset\",\n        \"summary\": \"Seek to the last offset for each of the given partitions\",\n        \"parameters\": [\n          {\n            \"name\": \"group\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The consumer group name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"instance\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The Id of the consumer instance\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"consumer seek to request\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ConsumerSeekToRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful response\"\n          },\n          \"404\": {\n            \"description\": \"Consumer instance not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"kafka_auth\": [\n              \"kafka:w\"\n            ]\n          }\n        ]\n      }\n    },\n    \"/consumers/{group}/instances/{instance}/records\": {\n      \"get\": {\n        \"operationId\": \"fetchTopicData\",\n        \"summary\": \"Fetch data for the topics or partitions specified using one of the subscribe/assign APIs\",\n        \"parameters\": [\n          {\n            \"name\": \"group\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The consumer group name\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"instance\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"The Id of the consumer instance\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"timeout\",\n            \"in\": \"query\",\n            \"description\": \"Maximum amount of milliseoncds the sidecar will spend fetching records\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"max_bytes\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of bytes of the unencoded keys and values in the response\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"name\": \"keyFormat\",\n            \"in\": \"query\",\n            \"description\": \"The key format of consumer\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"binary\",\n                \"json\",\n                \"avro\",\n                \"jsonschema\",\n                \"protobuf\",\n                \"string\"\n              ]\n            }\n          },\n          {\n            \"name\": \"valueFormat\",\n            \"in\": \"query\",\n            \"description\": \"The value format of consumer\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"binary\",\n                \"json\",\n                \"avro\",\n                \"jsonschema\",\n                \"protobuf\",\n                \"string\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ConsumerRecord\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Consumer instance not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"kafka_auth\": [\n              \"kafka:r\"\n            ]\n          }\n        ]\n      }\n    }\n  },\n  \"components\": {\n    \"securitySchemes\": {\n      \"kafka_auth\": {\n        \"type\": \"oauth2\",\n        \"description\": \"This API uses OAuth 2.0 with the client credential grant flow.\",\n        \"flows\": {\n          \"clientCredentials\": {\n            \"tokenUrl\": \"https://localhost:6882/token\",\n            \"scopes\": {\n              \"kafka:w\": \"Kafka producer\",\n              \"kafka:r\": \"Kafka consumer\"\n            }\n          }\n        }\n      }\n    },\n    \"schemas\": {\n      \"ProduceRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"keyFormat\": {\n            \"type\": \"integer\",\n            \"enum\": [\n              0,\n              1,\n              2,\n              3,\n              4,\n              5\n            ]\n          },\n          \"keySchema\": {\n            \"type\": \"string\"\n          },\n          \"keySchemaId\": {\n            \"type\": \"integer\"\n          },\n          \"keySchemaVersion\": {\n            \"type\": \"integer\"\n          },\n          \"keySchemaSubject\": {\n            \"type\": \"string\"\n          },\n          \"valueFormat\": {\n            \"type\": \"integer\",\n            \"enum\": [\n              0,\n              1,\n              2,\n              3,\n              4,\n              5\n            ]\n          },\n          \"valueSchema\": {\n            \"type\": \"string\"\n          },\n          \"valueSchemaId\": {\n            \"type\": \"integer\"\n          },\n          \"valueSchemaVersion\": {\n            \"type\": \"integer\"\n          },\n          \"valueSchemaSubject\": {\n            \"type\": \"string\"\n          },\n          \"records\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            }\n          }\n        },\n        \"required\": [\n          \"records\"\n        ]\n      },\n      \"CreateConsumerInstanceRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"format\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"binary\",\n              \"avro\",\n              \"json\",\n              \"jsonschema\",\n              \"protobuf\",\n              \"string\"\n            ]\n          },\n          \"autoOffsetReset\": {\n            \"type\": \"string\"\n          },\n          \"autoCommitEnable\": {\n            \"type\": \"string\"\n          },\n          \"responseMinBytes\": {\n            \"type\": \"integer\",\n            \"minimum\": -1,\n            \"maximum\": 10000000\n          },\n          \"requestWaitMs\": {\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"CreateConsumerInstanceResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"instanceId\": {\n            \"type\": \"string\"\n          },\n          \"baseUri\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ConsumerOffsetCommitRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"offsets\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TopicPartitionOffsetMetadata\"\n            }\n          }\n        }\n      },\n      \"TopicPartitionOffsetMetadata\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"topic\": {\n            \"type\": \"string\"\n          },\n          \"partition\": {\n            \"type\": \"integer\",\n            \"minimum\": 0\n          },\n          \"offset\": {\n            \"type\": \"number\"\n          },\n          \"metadata\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ConsumerCommittedResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"offsets\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TopicPartitionOffsetMetadata\"\n            }\n          }\n        }\n      },\n      \"ConsumerCommittedRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"offsets\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TopicPartition\"\n            }\n          }\n        }\n      },\n      \"TopicPartition\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"topic\": {\n            \"type\": \"string\"\n          },\n          \"partition\": {\n            \"type\": \"integer\",\n            \"minimum\": 0\n          }\n        }\n      },\n      \"ConsumerRecord\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"topic\": {\n            \"type\": \"string\"\n          },\n          \"key\": {\n            \"type\": \"object\"\n          },\n          \"value\": {\n            \"type\": \"object\"\n          },\n          \"partition\": {\n            \"type\": \"integer\"\n          },\n          \"offset\": {\n            \"type\": \"number\"\n          }\n        }\n      },\n      \"ConsumerSeekToRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"partitions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TopicPartition\"\n            }\n          }\n        }\n      },\n      \"ConsumerSeekRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"offsets\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PartitionOffset\"\n            }\n          },\n          \"timestamps\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PartitionTimestamp\"\n            }\n          }\n        }\n      },\n      \"PartitionOffset\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"topic\": {\n            \"type\": \"string\"\n          },\n          \"partition\": {\n            \"type\": \"integer\"\n          },\n          \"offset\": {\n            \"type\": \"number\"\n          },\n          \"metadata\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"PartitionTimestamp\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"topic\": {\n            \"type\": \"string\"\n          },\n          \"partition\": {\n            \"type\": \"integer\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\"\n          },\n          \"metadata\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ConsumerAssignmentRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"partitions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TopicPartition\"\n            }\n          }\n        }\n      },\n      \"ConsumerAssignmentResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"partitions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TopicPartition\"\n            }\n          }\n        }\n      },\n      \"ConsumerSubscriptionRecord\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"topics\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"topic_pattern\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ConsumerSubscriptionResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"topics\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"Status\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"statusCode\": {\n            \"description\": \"HTTP response code\",\n            \"type\": \"integer\"\n          },\n          \"code\": {\n            \"description\": \"Code is the machine-readable error code\",\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"description\": \"Error messsage\",\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"description\": \"The detailed description of the error status\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"statusCode\",\n          \"code\"\n        ]\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/networknt/model-config@3fea561d7982c217c1d5d35c1193eac78a7fdcef/-/blob/rest/kafka-sidecar/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/networknt/model-config/blob/3fea561d7982c217c1d5d35c1193eac78a7fdcef/rest/kafka-sidecar/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/consumers/{group}\": post: security: security \"kafka_auth\" (index 0): oauth2 security not implemented",
	"NotImplemented": [
		"oauth2 security"
	]
}