{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/forcedotcom/einstein-bot-sdk-java"
		},
		"file": {
			"name": "v5_0_0_api_specs.original.yml",
			"size": 0,
			"path": "src/main/resources/v5_0_0_api_specs.original.yml",
			"byteSize": 45263,
			"content": "openapi: 3.0.0\n\ninfo:\n  title: Einstein Bots API (BETA)\n  version: \"v5\"\n\nservers:\n  - url: https://runtime-api-na-west.prod.chatbots.sfdc.sh\n    description: Einstein Bots API - NA West\n  - url: https://runtime-api-na-east.prod.chatbots.sfdc.sh\n    description: Einstein Bots API - NA East\n  - url: https://runtime-api-eu-west.prod.chatbots.sfdc.sh\n    description: Einstein Bots API - EU West\n  - url: https://runtime-api-eu-east.prod.chatbots.sfdc.sh\n    description: Einstein Bots API - EU East\n  - url: https://runtime-api-ap-west.prod.chatbots.sfdc.sh\n    description: Einstein Bots API - AP West\n  - url: https://runtime-api-ap-east.prod.chatbots.sfdc.sh\n    description: Einstein Bots API - AP East\n\npaths:\n\n  /status:\n    get:\n      tags:\n        - \"health\"\n      summary: \"Health status information for runtime\"\n      responses:\n        200:\n          $ref: '#/components/responses/StatusResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n  /v5.0.0/bots/{bot-id}/sessions:\n    post:\n      tags:\n        - \"bot\"\n      summary: \"Start a new chat session\"\n      description: \"Send a message to the bots api to establish a new chat session\"\n      operationId: \"establishChatSession\"\n      security:\n        - chatbotAuth: [\"chatbot_api\"]\n        - jwtBearer: []\n      parameters:\n        - in: \"path\"\n          name: \"bot-id\"\n          required: true\n          schema:\n            type: \"string\"\n        - in: \"header\"\n          name: \"X-Org-Id\"\n          description: \"Org id for the request\"\n          example: \"00Dx0000000ALskEAG\"\n          required: true\n          schema:\n            type: \"string\"\n          allowEmptyValue: false\n        - in: \"header\"\n          name: \"X-Request-ID\"\n          description: \"Client supplied unique id to identify request for distributed tracing\"\n          example: \"36a73651-a46d-4d16-9a8a-fd436ed62e1a\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        description: \"Initial request payload.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InitMessageEnvelope'\n      responses:\n        200:\n          $ref: '#/components/responses/SuccessfulResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        422:\n          $ref: '#/components/responses/RequestProcessingException'\n        423:\n          $ref: '#/components/responses/ServerBusyError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        503:\n          $ref: '#/components/responses/ServiceUnavailable'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n  /v5.0.0/sessions/{session-id}/messages:\n    post:\n      tags:\n        - \"bot\"\n      summary: \"Continue an existing chat session\"\n      description: \"Send a message to the bots api on an existing chat session\"\n      operationId: \"continueChatSession\"\n      security:\n        - chatbotAuth: [\"chatbot_api\"]\n        - jwtBearer: []\n      parameters:\n        - in: \"path\"\n          name: \"session-id\"\n          required: true\n          schema:\n            type: \"string\"\n        - in: \"header\"\n          name: \"X-Org-Id\"\n          description: \"Org id for the request\"\n          example: \"00Dx0000000ALskEAG\"\n          required: true\n          schema:\n            type: \"string\"\n          allowEmptyValue: false\n        - in: \"header\"\n          name: \"X-Request-ID\"\n          description: \"Client supplied unique id to identify request for distributed tracing\"\n          example: \"36a73651-a46d-4d16-9a8a-fd436ed62e1a\"\n          required: true\n          schema:\n            type: \"string\"\n        - in: \"header\"\n          name: \"X-Runtime-CRC\"\n          description: \"X-Runtime-CRC value from previous response\"\n          schema:\n            type: \"string\"\n      requestBody:\n        description: \"Continue chat request payload\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChatMessageEnvelope'\n      responses:\n        200:\n          $ref: '#/components/responses/SuccessfulChatMessageResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        422:\n          $ref: '#/components/responses/RequestProcessingException'\n        423:\n          $ref: '#/components/responses/ServerBusyError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        503:\n          $ref: '#/components/responses/ServiceUnavailable'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n  /v5.0.0/sessions/{session-id}:\n    delete:\n      tags:\n        - \"bot\"\n      summary: \"End an existing chat session\"\n      description: \"Send a message to the bots api to end a chat session\"\n      operationId: \"endChatSession\"\n      security:\n        - chatbotAuth: [\"chatbot_api\"]\n        - jwtBearer: []\n      parameters:\n        - in: \"path\"\n          name: \"session-id\"\n          required: true\n          schema:\n            type: \"string\"\n        - in: \"header\"\n          name: \"X-Org-Id\"\n          description: \"Org id for the request\"\n          example: \"00Dx0000000ALskEAG\"\n          required: true\n          schema:\n            type: \"string\"\n          allowEmptyValue: false\n        - in: \"header\"\n          name: \"X-Session-End-Reason\"\n          description: \"Session end reason\"\n          example: \"Transfer\"\n          required: true\n          schema:\n            $ref: '#/components/schemas/EndSessionReason'\n          allowEmptyValue: false\n        - in: \"header\"\n          name: \"X-Request-ID\"\n          description: \"Client supplied unique id to identify request for distributed tracing\"\n          example: \"36a73651-a46d-4d16-9a8a-fd436ed62e1a\"\n          required: true\n          schema:\n            type: \"string\"\n        - in: \"header\"\n          name: \"X-Runtime-CRC\"\n          description: \"X-Runtime-CRC value from previous response\"\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          $ref: '#/components/responses/SuccessfulChatMessageResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        422:\n          $ref: '#/components/responses/RequestProcessingException'\n        423:\n          $ref: '#/components/responses/ServerBusyError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        503:\n          $ref: '#/components/responses/ServiceUnavailable'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\ncomponents:\n  securitySchemes:\n    chatbotAuth:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://login.salesforce.com/services/oauth2/authorize\n          tokenUrl: https://login.salesforce.com/services/oauth2/token\n          scopes:\n            chatbot_api: \"Access Chatbot Apis\"\n        implicit:\n          authorizationUrl: https://login.salesforce.com/services/oauth2/authorize\n          scopes:\n            chatbot_api: \"Access Chatbot Apis\"\n    jwtBearer:\n      type: http\n      scheme: bearer\n      description: \"Salesforce OAuth access token obtained using JWT Bearer flow. Needs chatbot_api scope\"\n\n  schemas:\n    ResponseSessionId:\n      description: \"Chatbot Runtime Session ID\"\n      type: \"string\"\n      example: \"57904eb6-5352-4c5e-adf6-5f100572cf5d\"\n      nullable: false\n\n    ExternalSessionKey:\n      description: \"Channel specific unique key for the conversation\"\n      type: \"string\"\n      example: \"57904eb6-5352-4c5e-adf6-5f100572cf5d\"\n      nullable: false\n\n    BotVersion:\n      description: \"Chatbot config version\"\n      type: \"string\"\n      example: \"0X9RM0000004CD00AM\"\n      nullable: true\n\n    InitMessageEnvelope:\n      type: object\n      properties:\n        externalSessionKey:\n          $ref: \"#/components/schemas/ExternalSessionKey\"\n        message:\n          $ref: \"#/components/schemas/TextInitMessage\"\n        forceConfig:\n          $ref: '#/components/schemas/ForceConfig'\n        responseOptions:\n          $ref: '#/components/schemas/ResponseOptions'\n        tz:\n          description: \"Client timezone\"\n          type: \"string\"\n          nullable: true\n        variables:\n          $ref: '#/components/schemas/Variables'\n        referrers:\n          description: \"Referrers (for bot to bot transfers)\"\n          type: \"array\"\n          items:\n              $ref: '#/components/schemas/Referrer'\n          nullable: true\n        richContentCapabilities:\n          $ref: '#/components/schemas/RichContentCapability'\n      required:\n        - \"forceConfig\"\n        - \"externalSessionKey\"\n      additionalProperties: false\n\n    RichContentCapability:\n      description: \"The capabilities of the consumer of the translated rich message\"\n      type: object\n      properties:\n        messageTypes:\n          type: array\n          minimum: 1\n          items:\n            $ref: '#/components/schemas/MessageTypeCapability'\n      required:\n        - messageTypes\n\n    MessageTypeCapability:\n      type: object\n      properties:\n        messageType:\n          $ref: '#/components/schemas/MessageType'\n        formatTypes:\n          type: array\n          minimum: 1\n          items:\n            $ref: '#/components/schemas/FormatTypeCapability'\n      required:\n        - messageType\n        - formatTypes\n\n    FormatTypeCapability:\n      type: object\n      properties:\n        formatType:\n          $ref: '#/components/schemas/FormatType'\n      required:\n        - formatType\n\n    FormatType:\n      type: \"string\"\n      description: \"The rendering format of a message. How it looks.\"\n      example: \"Attachments\"\n      enum: [ \"Attachments\", \"Text\" ]\n\n    MessageType:\n      type: \"string\"\n      description: \"The semantic type of a message. What a message does.\"\n      example: \"StaticContentMessage\"\n      enum: [ \"StaticContentMessage\" ]\n\n    ChatMessageEnvelope:\n      type: object\n      properties:\n        message:\n          oneOf:\n            - $ref: '#/components/schemas/ChoiceMessage'\n            - $ref: '#/components/schemas/TextMessage'\n            - $ref: '#/components/schemas/TransferSucceededRequestMessage'\n            - $ref: '#/components/schemas/TransferFailedRequestMessage'\n            - $ref: '#/components/schemas/RedirectMessage'\n        responseOptions:\n          $ref: '#/components/schemas/ResponseOptions'\n      required:\n        - \"message\"\n      additionalProperties: false\n\n    ResponseEnvelope:\n      type: \"object\"\n      properties:\n        sessionId:\n          $ref: \"#/components/schemas/ResponseSessionId\"\n        botVersion:\n          $ref: \"#/components/schemas/BotVersion\"\n        processedSequenceIds:\n          description: \"Sequence IDs of processed messages\"\n          type: \"array\"\n          items:\n            format: \"int64\"\n            type: \"integer\"\n            example: 1\n        messages:\n          description: \"Output messages\"\n          type: \"array\"\n          minimum: 0\n          items:\n            oneOf:\n              - $ref: \"#/components/schemas/SessionEndedResponseMessage\"\n              - $ref: \"#/components/schemas/TextResponseMessage\"\n              - $ref: \"#/components/schemas/ChoicesResponseMessage\"\n              - $ref: \"#/components/schemas/EscalateResponseMessage\"\n              - $ref: \"#/components/schemas/StaticContentMessage\"\n        variables:\n          $ref: '#/components/schemas/Variables'\n        metrics:\n          description: \"Session metrics\"\n          type: \"object\"\n          additionalProperties: true\n        intents:\n          $ref: '#/components/schemas/Intents'\n        entities:\n          $ref: '#/components/schemas/Entities'\n        _links:\n          $ref: '#/components/schemas/Links'\n      required:\n        - \"sessionId\"\n        - \"botVersion\"\n        - \"processedSequenceIds\"\n        - \"messages\"\n        - \"_links\"\n      additionalProperties: false\n\n    ChatMessageResponseEnvelope:\n      type: \"object\"\n      properties:\n        botVersion:\n          $ref: \"#/components/schemas/BotVersion\"\n        processedSequenceIds:\n          description: \"Sequence IDs of processed messages\"\n          type: \"array\"\n          items:\n            format: \"int64\"\n            type: \"integer\"\n            example: 1\n        messages:\n          description: \"Output messages\"\n          type: \"array\"\n          minimum: 0\n          items:\n            oneOf:\n              - $ref: \"#/components/schemas/SessionEndedResponseMessage\"\n              - $ref: \"#/components/schemas/TextResponseMessage\"\n              - $ref: \"#/components/schemas/ChoicesResponseMessage\"\n              - $ref: \"#/components/schemas/EscalateResponseMessage\"\n              - $ref: \"#/components/schemas/StaticContentMessage\"\n        variables:\n          $ref: '#/components/schemas/Variables'\n        metrics:\n          description: \"Session metrics\"\n          type: \"object\"\n          additionalProperties: true\n        intents:\n          $ref: '#/components/schemas/Intents'\n        entities:\n          $ref: '#/components/schemas/Entities'\n        _links:\n          $ref: '#/components/schemas/Links'\n      required:\n        - \"botVersion\"\n        - \"processedSequenceIds\"\n        - \"messages\"\n        - \"_links\"\n      additionalProperties: false\n\n    StaticContentMessage:\n      description: \"Non interactive MT or MO message with static content\"\n      type: object\n      properties:\n        type:\n          description: \"Message type\"\n          type: \"string\"\n          enum: [ \"messageDefinition\" ]\n        id:\n          $ref: '#/components/schemas/MessageId'\n        schedule:\n          $ref: '#/components/schemas/Schedule'\n        messageType:\n          $ref: '#/components/schemas/MessageType'\n        references:\n          type: array\n          items:\n            $ref: '#/components/schemas/RecordReference'\n        staticContent:\n          anyOf:\n            - $ref: '#/components/schemas/StaticContentAttachments'\n            - $ref: '#/components/schemas/StaticContentText'\n      required:\n        - \"id\"\n        - \"type\"\n        - \"messageType\"\n        - \"staticContent\"\n\n    StaticContentText:\n      description: \"Static text content\"\n      type: object\n      properties:\n        formatType:\n          type: \"string\"\n          description: \"The rendering format of a message. How it looks.\"\n          example: \"Text\"\n          enum: [ \"Text\" ]\n        text:\n          $ref: '#/components/schemas/Text'\n      required:\n        - \"formatType\"\n        - \"text\"\n\n    StaticContentAttachments:\n      description: \"Attachments\"\n      type: object\n      properties:\n        formatType:\n          type: \"string\"\n          description: \"The rendering format of a message. How it looks.\"\n          example: \"Attachments\"\n          enum: [ \"Attachments\" ]\n        attachments:\n          type: array\n          minItems: 1\n          items:\n            $ref: '#/components/schemas/Attachment'\n      required:\n        - \"formatType\"\n        - \"attachments\"\n\n    Attachment:\n      description: \"A file sent as an attachment with a message.\"\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/UniqueId'\n        name:\n          type: string\n        mimeType:\n          $ref: '#/components/schemas/MimeType'\n        url:\n          $ref: '#/components/schemas/Url'\n        referenceId:\n          $ref: '#/components/schemas/UniqueId'\n      required:\n        - id\n        - name\n        - mimeType\n        - url\n      additionalProperties: false\n\n    Text:\n      description: \"Text content\"\n      type: string\n\n    MimeType:\n      description: \"A mime type\"\n      type: string\n\n    Url:\n      description: \"A url\"\n      type: \"string\"\n\n    RecordId:\n      type: \"string\"\n      description: \"An id of an application record\"\n\n    UniqueId:\n      type: \"string\"\n      description: \"A UUID that identifies objects or items uniquely per message instance\"\n      example: \"cbd4e3fe-f210-43b8-a4b7-dd77e39ee5e1\"\n\n    RecordReference:\n      type: \"object\"\n      description: \"A reference to a record.\"\n      properties:\n        id:\n          $ref: '#/components/schemas/UniqueId'\n        recordId:\n          $ref: '#/components/schemas/RecordId'\n      required:\n        - \"id\"\n        - \"recordId\"\n      additionalProperties: false\n\n    MessageId:\n      description: \"UUID that references this message\"\n      type: \"string\"\n      example: \"a133c185-73a7-4adf-b6d9-b7fd62babb4e\"\n\n    SequenceId:\n      description: \"Client generated message number (must be ever increasing within the same session)\"\n      format: \"int64\"\n      type: \"integer\"\n      example: 1\n\n    Intents:\n      description: \"All intents detected when processing the current request\"\n      type: \"array\"\n      minimum: 0\n      items:\n        $ref: \"#/components/schemas/NormalizedIntent\"\n\n    Entities:\n      description: \"All detected entities\"\n      type: \"array\"\n      minimum: 0\n      items:\n        $ref: \"#/components/schemas/NormalizedEntity\"\n\n    NormalizedIntent:\n      type: \"object\"\n      description: \"Intent detected during the request\"\n      properties:\n        label:\n          description: \"Intent id/name\"\n          type: \"string\"\n        confidenceScore:\n          description: \"Probability of the intent\"\n          type: \"number\"\n        intentSource:\n          $ref: \"#/components/schemas/IntentSource\"\n      required:\n        - \"label\"\n        - \"confidenceScore\"\n        - \"intentSource\"\n      additionalProperties: false\n\n    NormalizedEntity:\n      type: \"object\"\n      description: \"Entity detected during the request\"\n      properties:\n        confidenceScore:\n          description: \"Probability of the entity\"\n          type: \"number\"\n        value:\n          description: \"Entity value\"\n          type: \"string\"\n        type:\n          $ref: \"#/components/schemas/EntityType\"\n        entitySource:\n          $ref: \"#/components/schemas/EntitySource\"\n      required:\n        - \"confidenceScore\"\n        - \"value\"\n        - \"type\"\n      additionalProperties: false\n\n    EntityType:\n      description: \"Entity Type\"\n      type: string\n\n    IntentSource:\n      description: \"Source of the Intent Prediction\"\n      type: \"string\"\n      enum:\n        - \"DIRECT\"\n        - \"CORE_NLP\"\n        - \"EINSTEIN_NLP\"\n\n    EntitySource:\n      description: \"Source of the Entity Prediction\"\n      type: \"string\"\n      enum:\n        - \"BOT_SERVICE\"\n        - \"CORE_NLP\"\n        - \"EINSTEIN_NLP\"\n\n    Links:\n      description: \"Links object in the response body for HATEOAS compliant response\"\n      type: \"object\"\n      properties:\n        self:\n          $ref: '#/components/schemas/HyperLink'\n        messages:\n          $ref: '#/components/schemas/HyperLink'\n        session:\n          $ref: '#/components/schemas/HyperLink'\n      required:\n        - \"self\"\n      additionalProperties: false\n\n    HyperLink:\n      description: \"Hyperlink object included in the Links schema\"\n      type: \"object\"\n      properties:\n        href:\n          description: \"Link to the endpoint\"\n          type: \"string\"\n          example: \"https://runtime-api-ap-east.prod.chatbots.sfdc.sh/v5.0.0/sessions\"\n\n    InReplyToMessageId:\n      description: \"Message ID from the previous response you are replying to\"\n      type: \"string\"\n      example: \"a133c185-73a7-4adf-b6d9-b7fd62babb4e\"\n\n    BooleanVariable:\n      type: \"object\"\n      properties:\n        name:\n          description: \"Variable name\"\n          type: \"string\"\n          example: \"isShipped\"\n        type:\n          description: \"Variable type\"\n          type: \"string\"\n          enum: [\"boolean\"]\n          example: \"boolean\"\n        value:\n          description: \"Variable value\"\n          type: \"boolean\"\n          nullable: true\n          example: true\n      required:\n        - \"name\"\n        - \"type\"\n        - \"value\"\n      additionalProperties: false\n\n    DateVariable:\n      type: \"object\"\n      properties:\n        name:\n          description: \"Variable name\"\n          type: \"string\"\n          example: \"orderDate\"\n        type:\n          description: \"Variable type\"\n          type: \"string\"\n          enum: [\"date\"]\n          example: \"date\"\n        value:\n          description: \"Variable value in format ISO_LOCAL_DATE 'YYYY-MM-DD'\"\n          type: \"string\"\n          nullable: true\n          example: \"2021-09-21\"\n      required:\n        - \"name\"\n        - \"type\"\n        - \"value\"\n      additionalProperties: false\n\n    DateTimeVariable:\n      type: \"object\"\n      properties:\n        name:\n          description: \"Variable name\"\n          type: \"string\"\n          example: \"orderDateTime\"\n        type:\n          description: \"Variable type\"\n          type: \"string\"\n          enum: [\"dateTime\"]\n          example: \"dateTime\"\n        value:\n          description: \"Variable value in format ISO_LOCAL_DATE_TIME 'YYYY-MM-DDTHH:MM:SS'\"\n          type: \"string\"\n          nullable: true\n          example: \"2018-09-21T14:30:00\"\n      required:\n        - \"name\"\n        - \"type\"\n        - \"value\"\n      additionalProperties: false\n\n    MoneyVariable:\n      type: \"object\"\n      properties:\n        name:\n          description: \"Variable name\"\n          type: \"string\"\n          example: \"orderAmount\"\n        type:\n          description: \"Variable type\"\n          type: \"string\"\n          enum: [\"money\"]\n          example: \"money\"\n        value:\n          description: \"Variable value in format '$currencyCode $amount\"\n          type: \"string\"\n          nullable: true\n          example: \"USD 10.40\"\n      required:\n        - \"name\"\n        - \"type\"\n        - \"value\"\n      additionalProperties: false\n\n    NumberVariable:\n      type: \"object\"\n      properties:\n        name:\n          description: \"Variable name\"\n          type: \"string\"\n          example: \"qty\"\n        type:\n          description: \"Variable type\"\n          type: \"string\"\n          enum: [\"number\"]\n          example: \"number\"\n        value:\n          description: \"Variable value\"\n          type: \"number\"\n          nullable: true\n          example: 10\n      required:\n        - \"name\"\n        - \"type\"\n        - \"value\"\n      additionalProperties: false\n\n    TextVariable:\n      type: \"object\"\n      properties:\n        name:\n          description: \"Variable name\"\n          type: \"string\"\n          example: \"note\"\n        type:\n          description: \"Variable type\"\n          type: \"string\"\n          enum: [\"text\"]\n          example: \"text\"\n        value:\n          description: \"Variable value\"\n          type: \"string\"\n          nullable: true\n          example: \"Thanks for your order!\"\n      required:\n        - \"name\"\n        - \"type\"\n        - \"value\"\n      additionalProperties: false\n\n    ObjectVariable:\n      type: \"object\"\n      properties:\n        name:\n          description: \"Variable name\"\n          type: \"string\"\n          example: \"contact\"\n        type:\n          description: \"Variable type\"\n          type: \"string\"\n          enum: [\"object\"]\n          example: \"object\"\n        value:\n          description: \"Variable value\"\n          nullable: true\n          allOf:\n            - $ref: '#/components/schemas/Variables'\n          example: [ { \"name\": \"fullName\", \"type\": \"text\", \"value\": \"Matt Smith\"  } ]\n      required:\n        - \"name\"\n        - \"type\"\n        - \"value\"\n      additionalProperties: false\n\n    RefVariable:\n      type: \"object\"\n      properties:\n        name:\n          description: \"Variable name\"\n          type: \"string\"\n          example: \"target\"\n        type:\n          description: \"Variable type\"\n          type: \"string\"\n          enum: [\"ref\"]\n          example: \"ref\"\n        value:\n          description: \"Variable value\"\n          type: \"string\"\n          nullable: true\n          example: \"1M5xx000000000BCAQ\"\n      required:\n        - \"name\"\n        - \"type\"\n        - \"value\"\n      additionalProperties: false\n\n    ListVariable:\n      type: \"object\"\n      properties:\n        name:\n          description: \"Variable name\"\n          type: \"string\"\n          example: \"target\"\n        type:\n          description: \"Variable type\"\n          type: \"string\"\n          enum: [\"list\"]\n          example: \"list\"\n        value:\n          items:\n            type: object\n          description: \"Variable value\"\n          type: array\n          nullable: true\n          example: [ { \"type\": \"ref\", \"value\": \"1M5xx000000000BCAQ\" } ]\n      required:\n        - \"name\"\n        - \"type\"\n        - \"value\"\n      additionalProperties: false\n\n    Variables:\n      type: \"array\"\n      items:\n        anyOf:\n          - $ref: \"#/components/schemas/BooleanVariable\"\n          - $ref: \"#/components/schemas/DateVariable\"\n          - $ref: \"#/components/schemas/DateTimeVariable\"\n          - $ref: \"#/components/schemas/MoneyVariable\"\n          - $ref: \"#/components/schemas/NumberVariable\"\n          - $ref: \"#/components/schemas/TextVariable\"\n          - $ref: \"#/components/schemas/ObjectVariable\"\n          - $ref: \"#/components/schemas/RefVariable\"\n          - $ref: \"#/components/schemas/ListVariable\"\n      nullable: true\n\n    Referrer:\n      type: \"object\"\n      description: \"Referrer\"\n      properties:\n        type:\n          description: \"Referrer type\"\n          type: \"string\"\n          enum: [\"Salesforce:Core:Bot:Id\", \"Salesforce:BotRuntime:Session:Id\"]\n          example: \"Salesforce:Core:Bot:Id\"\n        value:\n          type: \"string\"\n      required:\n        - \"type\"\n        - \"value\"\n\n    TransferFailedRequestMessage:\n      type: \"object\"\n      description: \"Message informing chatbot runtime that a transfer failed\"\n      properties:\n        type:\n          description: \"Message type\"\n          type: \"string\"\n          enum: [\"transferFailed\"]\n          example: \"transferFailed\"\n        sequenceId:\n          $ref: '#/components/schemas/SequenceId'\n        inReplyToMessageId:\n          $ref: '#/components/schemas/InReplyToMessageId'\n        reason:\n          description: \"Reason the transfer failed\"\n          type: \"string\"\n          enum: [\"NoAgentAvailable\",\"Error\"]\n          example: \"NoAgentAvailable\"\n        description:\n          description: \"Optional human-readable description of why the transfer failed\"\n          type: \"string\"\n          nullable: true\n      required:\n        - \"type\"\n        - \"sequenceId\"\n        - \"reason\"\n      additionalProperties: false\n\n    TransferSucceededRequestMessage:\n      type: \"object\"\n      description: \"Message informing chatbot runtime that a transfer succeeded\"\n      properties:\n        type:\n          description: \"Message type\"\n          type: \"string\"\n          enum: [\"transferSucceeded\"]\n          example: \"transferSucceeded\"\n        sequenceId:\n          $ref: '#/components/schemas/SequenceId'\n        inReplyToMessageId:\n          $ref: '#/components/schemas/InReplyToMessageId'\n      required:\n        - \"type\"\n        - \"sequenceId\"\n      additionalProperties: false\n\n    TextInitMessage:\n      type: \"object\"\n      description: \"Initial message that begins a conversation session\"\n      properties:\n        text:\n          description: \"(Optional) Initial text from the user\"\n          type: \"string\"\n      additionalProperties: false\n\n    EndSessionMessage:\n      type: \"object\"\n      description: \"Client request to end the session\"\n      properties:\n        type:\n          description: \"Message type\"\n          type: \"string\"\n          enum: [\"endSession\"]\n          example: \"endSession\"\n        sequenceId:\n          $ref: '#/components/schemas/SequenceId'\n        inReplyToMessageId:\n          $ref: '#/components/schemas/InReplyToMessageId'\n        reason:\n          $ref: '#/components/schemas/EndSessionReason'\n      required:\n        - \"type\"\n        - \"sequenceId\"\n        - \"reason\"\n      additionalProperties: false\n\n    EndSessionReason:\n      type: string\n      enum:\n        - \"UserRequest\"\n        - \"Transfer\"\n        - \"Expiration\"\n        - \"Error\"\n        - \"Other\"\n      example: \"Transfer\"\n      nullable: false\n\n    TextMessage:\n      type: \"object\"\n      description: \"User text message\"\n      properties:\n        type:\n          description: \"Message type\"\n          type: \"string\"\n          enum: [\"text\"]\n          example: \"text\"\n        sequenceId:\n          $ref: '#/components/schemas/SequenceId'\n        inReplyToMessageId:\n          $ref: '#/components/schemas/InReplyToMessageId'\n        text:\n          description: \"Text input from user\"\n          type: \"string\"\n      required:\n        - \"type\"\n        - \"sequenceId\"\n        - \"text\"\n      additionalProperties: false\n\n    ChoiceMessage:\n      type: \"object\"\n      description: \"Choice selection\"\n      properties:\n        type:\n          description: \"Message type\"\n          type: \"string\"\n          enum: [\"choice\"]\n          example: \"choice\"\n        sequenceId:\n          $ref: '#/components/schemas/SequenceId'\n        inReplyToMessageId:\n          $ref: '#/components/schemas/InReplyToMessageId'\n        choiceIndex:\n          description: \"Zero-based index of the selected choice. Either choiceIndex or choiceId is required.\"\n          type: \"integer\"\n          example: 0\n          nullable: true\n        choiceId:\n          description: \"Id of the selected choice. Either choiceIndex or choiceId is required.\"\n          type: \"string\"\n          example: \"8a9a745f-0c09-4b13-955c-1ab9e06c7ad7\"\n          nullable: true\n      required:\n        - \"type\"\n        - \"sequenceId\"\n      additionalProperties: false\n\n    RedirectMessage:\n      type: \"object\"\n      description: \"Client redirect message\"\n      properties:\n        type:\n          description: \"Message type\"\n          type: \"string\"\n          enum: [\"redirect\"]\n          example: \"redirect\"\n        sequenceId:\n          $ref: '#/components/schemas/SequenceId'\n        dialogId:\n          description: \"Dialog ID to redirect to\"\n          type: \"string\"\n          example: \"68f934fb-e022-37a7-612e-b74fc87191d9\"\n      required:\n        - \"type\"\n        - \"sequenceId\"\n        - \"dialogId\"\n      additionalProperties: false\n\n    Schedule:\n      type: \"object\"\n      properties:\n        responseDelayMilliseconds:\n          description: \"Delay in ms to wait before displaying the test to the user\"\n          type: \"integer\"\n          format: \"int32\"\n          example: 1200\n      required:\n        - \"responseDelayMilliseconds\"\n      additionalProperties: false\n\n    SessionEndedResponseMessage:\n      type: \"object\"\n      description: \"Message informing client session has ended\"\n      properties:\n        type:\n          description: \"Message type\"\n          type: \"string\"\n          enum: [\"sessionEnded\"]\n          example: \"sessionEnded\"\n        id:\n          $ref: '#/components/schemas/MessageId'\n        reason:\n          description: \"Reason the session ended\"\n          type: \"string\"\n          enum: [\"ClientRequest\",\"TransferFailedNotConfigured\",\"Action\",\"Error\", \"InfiniteLoopDetected\"]\n          example: \"ClientRequest\"\n          nullable: false\n        schedule:\n          $ref: '#/components/schemas/Schedule'\n      required:\n        - \"type\"\n        - \"id\"\n        - \"reason\"\n      additionalProperties: false\n\n    TextResponseMessage:\n      type: \"object\"\n      description: \"Text message\"\n      properties:\n        type:\n          description: \"Message type\"\n          type: \"string\"\n          enum: [\"text\"]\n          example: \"text\"\n        id:\n          $ref: '#/components/schemas/MessageId'\n        text:\n          description: \"Text to render\"\n          type: \"string\"\n          example: \"Hello world!\"\n        schedule:\n          $ref: '#/components/schemas/Schedule'\n      required:\n        - \"type\"\n        - \"id\"\n        - \"text\"\n      additionalProperties: false\n\n    ChoicesResponseMessage:\n      type: \"object\"\n      description: \"Choices message response to be sent from the bot to the client\"\n      properties:\n        type:\n          description: \"Message type\"\n          type: \"string\"\n          enum: [\"choices\"]\n          example: \"choices\"\n        id:\n          $ref: '#/components/schemas/MessageId'\n        choices:\n          description: \"Available choices\"\n          type: \"array\"\n          minimum: 1\n          items:\n            type: \"object\"\n            description: \"Choice\"\n            properties:\n              label:\n                description: \"Choice label\"\n                type: \"string\"\n                example: \"Order Status\"\n              alias:\n                description: \"Choice alias\"\n                type: \"string\"\n                example: \"1\"\n                nullable: true\n              id:\n                description: \"Choice id\"\n                type: \"string\"\n                example: \"8a9a745f-0c09-4b13-955c-1ab9e06c7ad7\"\n            required:\n              - \"label\"\n              - \"id\"\n        widget:\n          description: \"Preferred widget type\"\n          type: \"string\"\n          enum: [\"buttons\", \"menu\"]\n          example: \"buttons\"\n        schedule:\n          $ref: '#/components/schemas/Schedule'\n      required:\n        - \"type\"\n        - \"id\"\n        - \"choices\"\n        - \"widget\"\n      additionalProperties: false\n\n    EscalateResponseMessage:\n      type: \"object\"\n      description: \"Escalation message\"\n      properties:\n        type:\n          description: \"Message type\"\n          type: \"string\"\n          enum: [\"escalate\"]\n          example: \"escalate\"\n        id:\n          $ref: '#/components/schemas/MessageId'\n        schedule:\n          $ref: '#/components/schemas/Schedule'\n        targets:\n          type: \"array\"\n          minimum: 0\n          items:\n            type: \"object\"\n            description: \"escalation targets\"\n            properties:\n              value:\n                type: \"string\"\n              type:\n                type: \"string\"\n                enum: [\"Salesforce:Core:Bot:Id\", \"Salesforce:Core:Queue:Id\", \"Salesforce:Core:Skill:Id\", \"Salesforce:Core:Flow:Id\"]\n                example: \"Salesforce:Core:Bot:Id\"\n            required:\n              - \"value\"\n              - \"type\"\n            nullable: false\n            additionalProperties: false\n          nullable: false\n      required:\n        - \"type\"\n        - \"id\"\n        - \"targets\"\n      additionalProperties: false\n\n    ForceConfig:\n      type: \"object\"\n      description: \"Force API config\"\n      properties:\n        endpoint:\n          description: \"Client Org endpoint\"\n          type: \"string\"\n          example: \"https://d5e000009s7bceah-dev-ed.my.salesforce.com/\"\n      required:\n        - \"endpoint\"\n      additionalProperties: true\n\n    ResponseOptions:\n      type: \"object\"\n      description: \"Configuration values for response payload\"\n      properties:\n        variables:\n          $ref: '#/components/schemas/ResponseOptionsVariables'\n        metrics:\n          type: \"boolean\"\n          description: \"Whether or not to include metrics in the response\"\n        intents:\n          type: \"boolean\"\n          description: \"Whether or not to include all detected intents in the response\"\n        entities:\n          type: \"boolean\"\n          description: \"Whether or not to include all detected entities in the response\"\n      additionalProperties: false\n\n    ResponseOptionsVariables:\n      type: \"object\"\n      description: \"Configure what variables are returned in the response\"\n      properties:\n        include:\n          type: \"boolean\"\n          example: true\n          description: \"Whether or not to include variables in the response\"\n        filter:\n          type: \"array\"\n          example: [\"OrderQty\", \"OrderType\"]\n          description: \"Limit returned variables to those specified here. If missing, null, or empty no filtering will be applied.\"\n          items:\n            type: \"string\"\n          nullable: true\n        onlyChanged:\n          type: \"boolean\"\n          example: true\n          description: \"Whether or not to limit the returned variables to only those that have changed as part of the request.\"\n      required:\n        - \"include\"\n        - \"onlyChanged\"\n      additionalProperties: false\n\n    Status:\n      type: \"object\"\n      properties:\n        status:\n          type: \"string\"\n          description: \"the health check status\"\n          enum: [ \"UP\", \"DOWN\" ]\n      required:\n        - \"status\"\n      additionalProperties: false\n\n    Error:\n      type: \"object\"\n      properties:\n        status:\n          type: \"integer\"\n          format: \"int32\"\n          example: 500\n          description: \"HTTP status\"\n        path:\n          description: \"Request path\"\n          type: \"string\"\n          example: \"/v1/00DRM00000067To/chatbots/HelloWorldBot/messages\"\n        requestId:\n          description: \"Request ID used for searching exception logs\"\n          type: \"string\"\n          example: \"19c056ab-d909-49df-b976-65e56b6ab214\"\n        error:\n          description: \"Error class name\"\n          type: \"string\"\n          example: \"NullPointerException\"\n        message:\n          description: \"Exception message\"\n          type: \"string\"\n          example: \"Something went wrong\"\n        timestamp:\n          type: \"integer\"\n          format: \"int64\"\n          example: 1531245973799\n      required:\n        - \"status\"\n        - \"path\"\n        - \"requestId\"\n        - \"error\"\n        - \"message\"\n        - \"timestamp\"\n      additionalProperties: true\n\n  responses:\n\n    StatusResponse:\n      description: \"Runtime health status check response\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Status\"\n\n    ErrorResponse:\n      description: \"Something went wrong\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      headers:\n        \"X-Request-ID\":\n          description: \"Request ID\"\n          schema:\n            type: \"string\"\n\n    SuccessfulResponse:\n      description: \"OK\"\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ResponseEnvelope'\n      headers:\n        \"X-Request-ID\":\n          description: \"Request ID\"\n          schema:\n            type: \"string\"\n        \"X-Runtime-CRC\":\n          description: \"Internal runtime CRC\"\n          schema:\n            type: \"string\"\n        \"X-Bot-Mode\":\n          description: \"Bot mode\"\n          example: \"default\"\n          schema:\n            type: \"string\"\n\n    SuccessfulChatMessageResponse:\n      description: \"OK\"\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ChatMessageResponseEnvelope'\n      headers:\n        \"X-Request-ID\":\n          description: \"Request ID\"\n          schema:\n            type: \"string\"\n        \"X-Runtime-CRC\":\n          description: \"Internal runtime CRC\"\n          schema:\n            type: \"string\"\n\n    BadRequestError:\n      description: \"Bad Request\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n          example:\n            status: 400\n            path: \"/v1/00DRM00000067To/chatbots/HelloWorldBot/messages\"\n            requestId: \"19c056ab-d909-49df-b976-65e56b6ab214\"\n            error: \"BadRequestError\"\n            message: \"Bad Request\"\n            timestamp: 1531245973799\n            additionalProp1: { }\n      headers:\n        \"X-Request-ID\":\n          description: \"Request ID\"\n          schema:\n            type: \"string\"\n\n    UnauthorizedError:\n      description: \"Access bearer token is missing or invalid\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n          example:\n            status: 401\n            path: \"/v1/00DRM00000067To/chatbots/HelloWorldBot/messages\"\n            requestId: \"19c056ab-d909-49df-b976-65e56b6ab214\"\n            error: \"UnauthorizedError\"\n            message: \"Access bearer token is missing or invalid\"\n            timestamp: 1531245973799\n            additionalProp1: { }\n      headers:\n        \"X-Request-ID\":\n          description: \"Request ID\"\n          schema:\n            type: \"string\"\n\n    ForbiddenError:\n      description: \"User Forbidden from accessing the resource\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n          example:\n            status: 403\n            path: \"/v1/00DRM00000067To/chatbots/HelloWorldBot/messages\"\n            requestId: \"19c056ab-d909-49df-b976-65e56b6ab214\"\n            error: \"ForbiddenError\"\n            message: \"User Forbidden from accessing the resource\"\n            timestamp: 1531245973799\n            additionalProp1: { }\n      headers:\n        \"X-Request-ID\":\n          description: \"Request ID\"\n          schema:\n            type: \"string\"\n\n    NotFoundError:\n      description: \"Resource not found\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n          example:\n            status: 404\n            path: \"/v1/00DRM00000067To/chatbots/HelloWorldBot/messages\"\n            requestId: \"19c056ab-d909-49df-b976-65e56b6ab214\"\n            error: \"NotFoundError\"\n            message: \"Resource not found\"\n            timestamp: 1531245973799\n            additionalProp1: { }\n      headers:\n        \"X-Request-ID\":\n          description: \"Request ID\"\n          schema:\n            type: \"string\"\n\n    NotAvailableError:\n      description: \"Resource not available at the time of the request\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n          example:\n            status: 410\n            path: \"/v1/00DRM00000067To/chatbots/HelloWorldBot/messages\"\n            requestId: \"19c056ab-d909-49df-b976-65e56b6ab214\"\n            error: \"NotAvailableError\"\n            message: \"Resource not available at the time of the request\"\n            timestamp: 1531245973799\n            additionalProp1: { }\n      headers:\n        \"X-Request-ID\":\n          description: \"Request ID\"\n          schema:\n            type: \"string\"\n\n    RequestProcessingException:\n      description: \"Any (potentially retryable) exception that occurred during the request execution\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n          example:\n            status: 422\n            path: \"v4.0.0/messages\"\n            requestId: \"19c056ab-d909-49df-b976-65e56b6ab214\"\n            error: \"RequestProcessingException\"\n            message: \"Cannot determine the active version for the bot\"\n            timestamp: 1531245973799\n            additionalProp1: { }\n      headers:\n        \"X-Request-ID\":\n          description: \"Request ID\"\n          schema:\n            type: \"string\"\n\n    ServerBusyError:\n      description: \"Server is busy and cannot process the request at this time\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n          example:\n            status: 423\n            path: \"/v1/00DRM00000067To/chatbots/HelloWorldBot/messages\"\n            requestId: \"19c056ab-d909-49df-b976-65e56b6ab214\"\n            error: \"ServerBusyError\"\n            message: \"Server is busy and cannot process the request at this time\"\n            timestamp: 1531245973799\n            additionalProp1: { }\n      headers:\n        \"X-Request-ID\":\n          description: \"Request ID\"\n          schema:\n            type: \"string\"\n\n    TooManyRequestsError:\n      description: \"Too many requests for the server to handle\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n          example:\n            status: 429\n            path: \"/v1/00DRM00000067To/chatbots/HelloWorldBot/messages\"\n            requestId: \"19c056ab-d909-49df-b976-65e56b6ab214\"\n            error: \"TooManyRequestsError\"\n            message: \"Too many requests for the server to handle\"\n            timestamp: 1531245973799\n            additionalProp1: { }\n      headers:\n        \"X-Request-ID\":\n          description: \"Request ID\"\n          schema:\n            type: \"string\"\n\n    ServiceUnavailable:\n      description: \"Service is unavailable possibly because Apex/Flow calls timed out\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n          example:\n            status: 503\n            path: \"/v1/00DRM00000067To/chatbots/HelloWorldBot/messages\"\n            requestId: \"19c056ab-d909-49df-b976-65e56b6ab214\"\n            error: \"ServiceUnavailable\"\n            message: \"Service is unavailable possibly because Apex/Flow calls timed out\"\n            timestamp: 1531245973799\n            additionalProp1: { }\n      headers:\n        \"X-Request-ID\":\n          description: \"Request ID\"\n          schema:\n            type: \"string\"\n",
			"canonicalURL": "/github.com/forcedotcom/einstein-bot-sdk-java@8a25ef23f4f10313e439633cfd77ff6b6f66afa5/-/blob/src/main/resources/v5_0_0_api_specs.original.yml",
			"externalURLs": [
				{
					"url": "https://github.com/forcedotcom/einstein-bot-sdk-java/blob/8a25ef23f4f10313e439633cfd77ff6b6f66afa5/src/main/resources/v5_0_0_api_specs.original.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v5.0.0/bots/{bot-id}/sessions\": post: requestBody: contents: application/json: generate schema: field variables: item: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}