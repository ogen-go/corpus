{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Clanhouse/gh-robber"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "api_spec/openapi.yaml",
			"byteSize": 28902,
			"content": "openapi: 3.0.0\ninfo:\n  title: GH_ROBBER\n  contact: {}\n  version: '1.0'\nservers:\n  - url: http://127.0.0.1:5000\n    variables: {}\npaths:\n  /api/v1.0/users/users:\n    get:\n      tags:\n        - Github_user_info\n      summary: Get all users info\n      description: Get all guthub users info from database.\n      operationId: Getallusersinfo\n      parameters:\n        - name: fields\n          in: query\n          description: ''\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: string\n            example: date,stars,username\n        - name: sort\n          in: query\n          description: ''\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: string\n            example: stars\n        - name: stars[lt]\n          in: query\n          description: ''\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: integer\n            format: int32\n            example: 500\n        - name: stars[gte]\n          in: query\n          description: ''\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: integer\n            format: int32\n            example: 20\n        - name: username\n          in: query\n          description: ''\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: string\n            example: li\n        - name: date[gte]\n          in: query\n          description: ''\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: string\n            example: 10-10-2021\n        - name: limit\n          in: query\n          description: ''\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: integer\n            format: int32\n            example: 10\n      responses:\n        '200':\n          description: OK\n          headers:\n            Content-Length:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: '1398'\n                  example: '1398'\n            Server:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: Werkzeug/2.0.1 Python/3.8.8\n                  example: Werkzeug/2.0.1 Python/3.8.8\n            Date:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: Thu, 14 Oct 2021 03:18:18 GMT\n                  example: Thu, 14 Oct 2021 03:18:18 GMT\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Getallusersinfo'\n              example:\n                data:\n                  - date: 12-10-2021\n                    stars: 126\n                    username: melissa68\n                  - date: 12-10-2021\n                    stars: 138\n                    username: julie77\n                  - date: 11-10-2021\n                    stars: 210\n                    username: lillian68\n                  - date: 12-10-2021\n                    stars: 344\n                    username: linda92\n                  - date: 10-10-2021\n                    stars: 345\n                    username: phyllis66\n                  - date: 12-10-2021\n                    stars: 367\n                    username: elizabeth80\n                  - date: 11-10-2021\n                    stars: 375\n                    username: julie90\n                  - date: 12-10-2021\n                    stars: 385\n                    username: julia69\n                  - date: 10-10-2021\n                    stars: 436\n                    username: alice74\n                  - date: 12-10-2021\n                    stars: 444\n                    username: lisa94\n                numbers_of_records: 10\n                pagination:\n                  current_page: \u003e-\n                    /api/v1.0/users/users?page=1\u0026fields=date%2Cstars%2Cusername\u0026sort=stars\u0026stars%5Blt%5D=500\u0026stars%5Bgte%5D=20\u0026username=li\u0026date%5Bgte%5D=10-10-2021\u0026limit=10\n                  next_page: \u003e-\n                    /api/v1.0/users/users?page=2\u0026fields=date%2Cstars%2Cusername\u0026sort=stars\u0026stars%5Blt%5D=500\u0026stars%5Bgte%5D=20\u0026username=li\u0026date%5Bgte%5D=10-10-2021\u0026limit=10\n                  total_pages: 2\n                  total_records: 11\n      deprecated: false\n    post:\n      tags:\n        - Github_user_info\n      summary: Create user info\n      description: Add new user to database.\n      operationId: Createuserinfo\n      parameters: []\n      requestBody:\n        description: ''\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateuserinfoRequest'\n            example:\n              date: 03-09-2021\n              language: Python\n              number_of_repositories: 8\n              stars: 72\n              username: test\n        required: true\n      responses:\n        '201':\n          description: CREATED\n          headers:\n            Content-Length:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: '186'\n                  example: '186'\n            Server:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: Werkzeug/2.0.1 Python/3.8.8\n                  example: Werkzeug/2.0.1 Python/3.8.8\n            Date:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: Thu, 14 Oct 2021 03:21:50 GMT\n                  example: Thu, 14 Oct 2021 03:21:50 GMT\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Createuserinfo'\n              example:\n                data:\n                  date: 03-09-2021\n                  id: 1058\n                  language: Python\n                  number_of_repositories: 8\n                  stars: 72\n                  username: test\n                success: true\n      deprecated: false\n  /api/v1.0/users/users/2:\n    get:\n      tags:\n        - Github_user_info\n      summary: Get single user info\n      description: Get single user info form the database.\n      operationId: Getsingleuserinfo\n      parameters: []\n      responses:\n        '200':\n          description: OK\n          headers:\n            Content-Length:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: '162'\n                  example: '162'\n            Server:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: Werkzeug/2.0.1 Python/3.8.8\n                  example: Werkzeug/2.0.1 Python/3.8.8\n            Date:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: Thu, 09 Sep 2021 02:37:45 GMT\n                  example: Thu, 09 Sep 2021 02:37:45 GMT\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Getsingleuserinfo'\n              example:\n                data:\n                  date: 15-09-2021\n                  id: 2\n                  language: C++\n                  number_of_repositories: 8\n                  stars: 72\n                  username: lori87\n      deprecated: false\n    put:\n      tags:\n        - Github_user_info\n      summary: Update user info\n      description: Update guthub user info in the database\n      operationId: Updateuserinfo\n      parameters: []\n      requestBody:\n        description: ''\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateuserinfoRequest'\n            example:\n              date: 06-09-2021\n              language: Python\n              number_of_repositories: 5\n              stars: 72\n              username: test_token\n        required: true\n      responses:\n        '200':\n          description: OK\n          headers:\n            Content-Length:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: '186'\n                  example: '186'\n            Server:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: Werkzeug/2.0.1 Python/3.8.8\n                  example: Werkzeug/2.0.1 Python/3.8.8\n            Date:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: Thu, 09 Sep 2021 07:36:47 GMT\n                  example: Thu, 09 Sep 2021 07:36:47 GMT\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Updateuserinfo'\n              example:\n                data:\n                  date: 06-09-2021\n                  id: 2\n                  language: C++\n                  number_of_repositories: 5\n                  stars: 72\n                  username: test_token\n                success: true\n      deprecated: false\n  /api/v1.0/users/users/22:\n    delete:\n      tags:\n        - Github_user_info\n      summary: Delete user info\n      description: Delete single user info from database.\n      operationId: Deleteuserinfo\n      parameters: []\n      responses:\n        '200':\n          description: OK\n          headers:\n            Content-Length:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: '56'\n                  example: '56'\n            Server:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: Werkzeug/2.0.1 Python/3.8.8\n                  example: Werkzeug/2.0.1 Python/3.8.8\n            Date:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: Thu, 09 Sep 2021 07:37:57 GMT\n                  example: Thu, 09 Sep 2021 07:37:57 GMT\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Deleteuserinfo'\n              example:\n                data: Github user with id 22 has been deleted\n      deprecated: false\n  /auth/register:\n    post:\n      tags:\n        - Auth\n      summary: Register user\n      description: Add user to database, crerate token\n      operationId: Registeruser\n      parameters: []\n      requestBody:\n        description: ''\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisteruserRequest'\n            example:\n              username: test\n              password: test1234\n              email: test@gmail.com\n        required: true\n      responses:\n        '201':\n          description: CREATED\n          headers:\n            Content-Length:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: '159'\n                  example: '159'\n            Server:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: Werkzeug/2.0.1 Python/3.8.8\n                  example: Werkzeug/2.0.1 Python/3.8.8\n            Date:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: Thu, 09 Sep 2021 04:09:28 GMT\n                  example: Thu, 09 Sep 2021 04:09:28 GMT\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Registeruser'\n              example:\n                success: true\n                token: \u003e-\n                  eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJleHAiOjE2MzExNjIzNjh9.Qt8vsmS4xAolHFSMabSeiSL-hFbXfiFmhVuNckpyXqg\n      deprecated: false\n  /auth/login:\n    post:\n      tags:\n        - Auth\n      summary: Login user\n      description: Login user to application\n      operationId: Loginuser\n      parameters: []\n      requestBody:\n        description: ''\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LoginuserRequest'\n            example:\n              username: test\n              password: test1234\n        required: true\n      responses:\n        '200':\n          description: OK\n          headers:\n            Content-Length:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: '159'\n                  example: '159'\n            Server:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: Werkzeug/2.0.1 Python/3.8.8\n                  example: Werkzeug/2.0.1 Python/3.8.8\n            Date:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: Thu, 09 Sep 2021 07:19:20 GMT\n                  example: Thu, 09 Sep 2021 07:19:20 GMT\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Loginuser'\n              example:\n                success: true\n                token: \u003e-\n                  eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJleHAiOjE2MzExNzM3NjB9.hvErG2DjiGZUWg2-hYAOJd0TM8nwzZFLNpkTnxD69jg\n      deprecated: false\n  /auth/me:\n    get:\n      tags:\n        - Auth\n      summary: Get current user\n      description: Get current user details\n      operationId: Getcurrentuser\n      parameters: []\n      responses:\n        '200':\n          description: OK\n          headers:\n            Content-Length:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: '161'\n                  example: '161'\n            Server:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: Werkzeug/2.0.1 Python/3.8.8\n                  example: Werkzeug/2.0.1 Python/3.8.8\n            Date:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: Thu, 09 Sep 2021 08:27:33 GMT\n                  example: Thu, 09 Sep 2021 08:27:33 GMT\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Getcurrentuser'\n              example:\n                data:\n                  creation_date: '2021-09-09T04:09:28.201109'\n                  email: test@gmail.com\n                  id: 1\n                  username: test\n                success: true\n      deprecated: false\n  /auth/update/password:\n    put:\n      tags:\n        - Auth\n      summary: Update user password\n      description: Update user password\n      operationId: Updateuserpassword\n      parameters: []\n      requestBody:\n        description: ''\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateuserpasswordRequest'\n            example:\n              current_password: test1234\n              new_password: test1234\n        required: true\n      responses:\n        '200':\n          description: OK\n          headers:\n            Content-Length:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: '161'\n                  example: '161'\n            Server:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: Werkzeug/2.0.1 Python/3.8.8\n                  example: Werkzeug/2.0.1 Python/3.8.8\n            Date:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: Thu, 09 Sep 2021 08:33:31 GMT\n                  example: Thu, 09 Sep 2021 08:33:31 GMT\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Updateuserpassword'\n              example:\n                data:\n                  creation_date: '2021-09-09T04:09:28.201109'\n                  email: test@gmail.com\n                  id: 1\n                  username: test\n                success: true\n      deprecated: false\n  /auth/update/data:\n    put:\n      tags:\n        - Auth\n      summary: Update user data\n      description: Update username and email\n      operationId: Updateuserdata\n      parameters: []\n      requestBody:\n        description: ''\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateuserdataRequest'\n            example:\n              username: test2\n              email: test2@gmail.com\n        required: true\n      responses:\n        '200':\n          description: OK\n          headers:\n            Content-Length:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: '163'\n                  example: '163'\n            Server:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: Werkzeug/2.0.1 Python/3.8.8\n                  example: Werkzeug/2.0.1 Python/3.8.8\n            Date:\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                    example: Thu, 09 Sep 2021 08:34:21 GMT\n                  example: Thu, 09 Sep 2021 08:34:21 GMT\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Updateuserdata'\n              example:\n                data:\n                  creation_date: '2021-09-09T04:09:28.201109'\n                  email: test2@gmail.com\n                  id: 1\n                  username: test2\n                success: true\n      deprecated: false\ncomponents:\n  schemas:\n    Getallusersinfo:\n      title: Getallusersinfo\n      required:\n        - data\n        - numbers_of_records\n        - pagination\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Datum'\n          description: ''\n        numbers_of_records:\n          type: integer\n          format: int32\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n      example:\n        data:\n          - date: 12-10-2021\n            stars: 126\n            username: melissa68\n          - date: 12-10-2021\n            stars: 138\n            username: julie77\n          - date: 11-10-2021\n            stars: 210\n            username: lillian68\n          - date: 12-10-2021\n            stars: 344\n            username: linda92\n          - date: 10-10-2021\n            stars: 345\n            username: phyllis66\n          - date: 12-10-2021\n            stars: 367\n            username: elizabeth80\n          - date: 11-10-2021\n            stars: 375\n            username: julie90\n          - date: 12-10-2021\n            stars: 385\n            username: julia69\n          - date: 10-10-2021\n            stars: 436\n            username: alice74\n          - date: 12-10-2021\n            stars: 444\n            username: lisa94\n        numbers_of_records: 10\n        pagination:\n          current_page: \u003e-\n            /api/v1.0/users/users?page=1\u0026fields=date%2Cstars%2Cusername\u0026sort=stars\u0026stars%5Blt%5D=500\u0026stars%5Bgte%5D=20\u0026username=li\u0026date%5Bgte%5D=10-10-2021\u0026limit=10\n          next_page: \u003e-\n            /api/v1.0/users/users?page=2\u0026fields=date%2Cstars%2Cusername\u0026sort=stars\u0026stars%5Blt%5D=500\u0026stars%5Bgte%5D=20\u0026username=li\u0026date%5Bgte%5D=10-10-2021\u0026limit=10\n          total_pages: 2\n          total_records: 11\n    Datum:\n      title: Datum\n      required:\n        - date\n        - stars\n        - username\n      type: object\n      properties:\n        date:\n          type: string\n        stars:\n          type: integer\n          format: int32\n        username:\n          type: string\n      example:\n        date: 12-10-2021\n        stars: 126\n        username: melissa68\n    Pagination:\n      title: Pagination\n      required:\n        - current_page\n        - next_page\n        - total_pages\n        - total_records\n      type: object\n      properties:\n        current_page:\n          type: string\n        next_page:\n          type: string\n        total_pages:\n          type: integer\n          format: int32\n        total_records:\n          type: integer\n          format: int32\n      example:\n        current_page: \u003e-\n          /api/v1.0/users/users?page=1\u0026fields=date%2Cstars%2Cusername\u0026sort=stars\u0026stars%5Blt%5D=500\u0026stars%5Bgte%5D=20\u0026username=li\u0026date%5Bgte%5D=10-10-2021\u0026limit=10\n        next_page: \u003e-\n          /api/v1.0/users/users?page=2\u0026fields=date%2Cstars%2Cusername\u0026sort=stars\u0026stars%5Blt%5D=500\u0026stars%5Bgte%5D=20\u0026username=li\u0026date%5Bgte%5D=10-10-2021\u0026limit=10\n        total_pages: 2\n        total_records: 11\n    CreateuserinfoRequest:\n      title: CreateuserinfoRequest\n      required:\n        - date\n        - language\n        - number_of_repositories\n        - stars\n        - username\n      type: object\n      properties:\n        date:\n          type: string\n        language:\n          type: string\n        number_of_repositories:\n          type: integer\n          format: int32\n        stars:\n          type: integer\n          format: int32\n        username:\n          type: string\n      example:\n        date: 03-09-2021\n        language: Python\n        number_of_repositories: 8\n        stars: 72\n        username: test\n    Createuserinfo:\n      title: Createuserinfo\n      required:\n        - data\n        - success\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/Data'\n        success:\n          type: boolean\n      example:\n        data:\n          date: 03-09-2021\n          id: 1058\n          language: Python\n          number_of_repositories: 8\n          stars: 72\n          username: test\n        success: true\n    Data:\n      title: Data\n      required:\n        - date\n        - id\n        - language\n        - number_of_repositories\n        - stars\n        - username\n      type: object\n      properties:\n        date:\n          type: string\n        id:\n          type: integer\n          format: int32\n        language:\n          type: string\n        number_of_repositories:\n          type: integer\n          format: int32\n        stars:\n          type: integer\n          format: int32\n        username:\n          type: string\n      example:\n        date: 03-09-2021\n        id: 1058\n        language: Python\n        number_of_repositories: 8\n        stars: 72\n        username: test\n    Getsingleuserinfo:\n      title: Getsingleuserinfo\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/Data'\n      example:\n        data:\n          date: 15-09-2021\n          id: 2\n          language: C++\n          number_of_repositories: 8\n          stars: 72\n          username: lori87\n    UpdateuserinfoRequest:\n      title: UpdateuserinfoRequest\n      required:\n        - date\n        - language\n        - number_of_repositories\n        - stars\n        - username\n      type: object\n      properties:\n        date:\n          type: string\n        language:\n          type: string\n        number_of_repositories:\n          type: integer\n          format: int32\n        stars:\n          type: integer\n          format: int32\n        username:\n          type: string\n      example:\n        date: 06-09-2021\n        language: Python\n        number_of_repositories: 5\n        stars: 72\n        username: test_token\n    Updateuserinfo:\n      title: Updateuserinfo\n      required:\n        - data\n        - success\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/Data'\n        success:\n          type: boolean\n      example:\n        data:\n          date: 06-09-2021\n          id: 2\n          language: C++\n          number_of_repositories: 5\n          stars: 72\n          username: test_token\n        success: true\n    Deleteuserinfo:\n      title: Deleteuserinfo\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: string\n      example:\n        data: Github user with id 22 has been deleted\n    RegisteruserRequest:\n      title: RegisteruserRequest\n      required:\n        - username\n        - password\n        - email\n      type: object\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n        email:\n          type: string\n      example:\n        username: test\n        password: test1234\n        email: test@gmail.com\n    Registeruser:\n      title: Registeruser\n      required:\n        - success\n        - token\n      type: object\n      properties:\n        success:\n          type: boolean\n        token:\n          type: string\n      example:\n        success: true\n        token: \u003e-\n          eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJleHAiOjE2MzExNjIzNjh9.Qt8vsmS4xAolHFSMabSeiSL-hFbXfiFmhVuNckpyXqg\n    LoginuserRequest:\n      title: LoginuserRequest\n      required:\n        - username\n        - password\n      type: object\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n      example:\n        username: test\n        password: test1234\n    Loginuser:\n      title: Loginuser\n      required:\n        - success\n        - token\n      type: object\n      properties:\n        success:\n          type: boolean\n        token:\n          type: string\n      example:\n        success: true\n        token: \u003e-\n          eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJleHAiOjE2MzExNzM3NjB9.hvErG2DjiGZUWg2-hYAOJd0TM8nwzZFLNpkTnxD69jg\n    Getcurrentuser:\n      title: Getcurrentuser\n      required:\n        - data\n        - success\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/Data3'\n        success:\n          type: boolean\n      example:\n        data:\n          creation_date: '2021-09-09T04:09:28.201109'\n          email: test@gmail.com\n          id: 1\n          username: test\n        success: true\n    Data3:\n      title: Data3\n      required:\n        - creation_date\n        - email\n        - id\n        - username\n      type: object\n      properties:\n        creation_date:\n          type: string\n        email:\n          type: string\n        id:\n          type: integer\n          format: int32\n        username:\n          type: string\n      example:\n        creation_date: '2021-09-09T04:09:28.201109'\n        email: test@gmail.com\n        id: 1\n        username: test\n    UpdateuserpasswordRequest:\n      title: UpdateuserpasswordRequest\n      required:\n        - current_password\n        - new_password\n      type: object\n      properties:\n        current_password:\n          type: string\n        new_password:\n          type: string\n      example:\n        current_password: test1234\n        new_password: test1234\n    Updateuserpassword:\n      title: Updateuserpassword\n      required:\n        - data\n        - success\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/Data3'\n        success:\n          type: boolean\n      example:\n        data:\n          creation_date: '2021-09-09T04:09:28.201109'\n          email: test@gmail.com\n          id: 1\n          username: test\n        success: true\n    UpdateuserdataRequest:\n      title: UpdateuserdataRequest\n      required:\n        - username\n        - email\n      type: object\n      properties:\n        username:\n          type: string\n        email:\n          type: string\n      example:\n        username: test2\n        email: test2@gmail.com\n    Updateuserdata:\n      title: Updateuserdata\n      required:\n        - data\n        - success\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/Data3'\n        success:\n          type: boolean\n      example:\n        data:\n          creation_date: '2021-09-09T04:09:28.201109'\n          email: test2@gmail.com\n          id: 1\n          username: test2\n        success: true\n  securitySchemes:\n    httpBearer:\n      type: http\n      scheme: bearer\nsecurity:\n  - httpBearer: []\ntags:\n  - name: Github_user_info\n  - name: Auth\n",
			"canonicalURL": "/github.com/Clanhouse/gh-robber@eb673c2824d5bbac57196b9ddfb2dcf40fbae46d/-/blob/api_spec/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Clanhouse/gh-robber/blob/eb673c2824d5bbac57196b9ddfb2dcf40fbae46d/api_spec/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: \"Date\": \"text/plain\": parameter content encoding not implemented",
	"NotImplemented": [
		"parameter content encoding"
	]
}