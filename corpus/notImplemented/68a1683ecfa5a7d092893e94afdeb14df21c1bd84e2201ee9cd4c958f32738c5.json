{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "checks_repos.yaml",
			"size": 0,
			"path": "providers/src/github/v0.1.0/services/checks_repos.yaml",
			"byteSize": 158489,
			"content": "paths:\n  /repos/{owner}/{repo}/check-runs:\n    post:\n      summary: Create a check run\n      description: |-\n        **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\n        Creates a new check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to create check runs.\n\n        In a check suite, GitHub limits the number of check runs with the same name to 1000. Once these check runs exceed 1000, GitHub will start to automatically delete older check runs.\n      tags:\n        - checks\n      operationId: checks/create\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/checks#create-a-check-run\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: The name of the check. For example, \"code-coverage\".\n                head_sha:\n                  type: string\n                  description: The SHA of the commit.\n                details_url:\n                  type: string\n                  description: The URL of the integrator's site that has the full details of the check. If the integrator does not provide this, then the homepage of the GitHub app is used.\n                external_id:\n                  type: string\n                  description: A reference for the run on the integrator's system.\n                status:\n                  type: string\n                  description: The current status. Can be one of `queued`, `in_progress`, or `completed`.\n                  enum:\n                    - queued\n                    - in_progress\n                    - completed\n                  default: queued\n                started_at:\n                  type: string\n                  format: date-time\n                  description: 'The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'\n                conclusion:\n                  type: string\n                  description: |-\n                    **Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check. Can be one of `action_required`, `cancelled`, `failure`, `neutral`, `success`, `skipped`, `stale`, or `timed_out`. When the conclusion is `action_required`, additional details should be provided on the site specified by `details_url`.  \n                    **Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`. You cannot change a check run conclusion to `stale`, only GitHub can set this.\n                  enum:\n                    - action_required\n                    - cancelled\n                    - failure\n                    - neutral\n                    - success\n                    - skipped\n                    - stale\n                    - timed_out\n                completed_at:\n                  type: string\n                  format: date-time\n                  description: 'The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'\n                output:\n                  type: object\n                  description: Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally provide descriptive details about the run. See the [`output` object](https://docs.github.com/rest/reference/checks#output-object) description.\n                  properties:\n                    title:\n                      type: string\n                      description: The title of the check run.\n                    summary:\n                      type: string\n                      maxLength: 65535\n                      description: The summary of the check run. This parameter supports Markdown.\n                    text:\n                      type: string\n                      maxLength: 65535\n                      description: The details of the check run. This parameter supports Markdown.\n                    annotations:\n                      type: array\n                      description: Adds information from your analysis to specific lines of code. Annotations are visible on GitHub in the **Checks** and **Files changed** tab of the pull request. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the [Update a check run](https://docs.github.com/rest/reference/checks#update-a-check-run) endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about how you can view annotations on GitHub, see \"[About status checks](https://docs.github.com/articles/about-status-checks#checks)\". See the [`annotations` object](https://docs.github.com/rest/reference/checks#annotations-object) description for details about how to use this parameter.\n                      maxItems: 50\n                      items:\n                        type: object\n                        properties:\n                          path:\n                            type: string\n                            description: The path of the file to add an annotation to. For example, `assets/css/main.css`.\n                          start_line:\n                            type: integer\n                            description: The start line of the annotation.\n                          end_line:\n                            type: integer\n                            description: The end line of the annotation.\n                          start_column:\n                            type: integer\n                            description: The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.\n                          end_column:\n                            type: integer\n                            description: The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.\n                          annotation_level:\n                            type: string\n                            description: The level of the annotation. Can be one of `notice`, `warning`, or `failure`.\n                            enum:\n                              - notice\n                              - warning\n                              - failure\n                          message:\n                            type: string\n                            description: A short description of the feedback for these lines of code. The maximum size is 64 KB.\n                          title:\n                            type: string\n                            description: The title that represents the annotation. The maximum size is 255 characters.\n                          raw_details:\n                            type: string\n                            description: Details about this annotation. The maximum size is 64 KB.\n                        required:\n                          - path\n                          - start_line\n                          - end_line\n                          - annotation_level\n                          - message\n                    images:\n                      type: array\n                      description: Adds images to the output displayed in the GitHub pull request UI. See the [`images` object](https://docs.github.com/rest/reference/checks#images-object) description for details.\n                      items:\n                        type: object\n                        properties:\n                          alt:\n                            type: string\n                            description: The alternative text for the image.\n                          image_url:\n                            type: string\n                            description: The full URL of the image.\n                          caption:\n                            type: string\n                            description: A short image description.\n                        required:\n                          - alt\n                          - image_url\n                  required:\n                    - title\n                    - summary\n                actions:\n                  type: array\n                  description: Displays a button on GitHub that can be clicked to alert your app to do additional tasks. For example, a code linting app can display a button that automatically fixes detected errors. The button created in this object is displayed after the check run completes. When a user clicks the button, GitHub sends the [`check_run.requested_action` webhook](https://docs.github.com/webhooks/event-payloads/#check_run) to your app. Each action includes a `label`, `identifier` and `description`. A maximum of three actions are accepted. See the [`actions` object](https://docs.github.com/rest/reference/checks#actions-object) description. To learn more about check runs and requested actions, see \"[Check runs and requested actions](https://docs.github.com/rest/reference/checks#check-runs-and-requested-actions).\"\n                  maxItems: 3\n                  items:\n                    type: object\n                    properties:\n                      label:\n                        type: string\n                        maxLength: 20\n                        description: The text to be displayed on a button in the web UI. The maximum size is 20 characters.\n                      description:\n                        type: string\n                        maxLength: 40\n                        description: A short explanation of what this action would do. The maximum size is 40 characters.\n                      identifier:\n                        type: string\n                        maxLength: 20\n                        description: A reference for the action on the integrator's system. The maximum size is 20 characters.\n                    required:\n                      - label\n                      - description\n                      - identifier\n              required:\n                - name\n                - head_sha\n              oneOf:\n                - properties:\n                    status:\n                      enum:\n                        - completed\n                  required:\n                    - status\n                    - conclusion\n                  additionalProperties: true\n                - properties:\n                    status:\n                      enum:\n                        - queued\n                        - in_progress\n                  additionalProperties: true\n            examples:\n              example-of-in-progress-conclusion:\n                summary: Response for in_progress conclusion\n                value:\n                  name: mighty_readme\n                  head_sha: ce587453ced02b1526dfb4cb910479d431683101\n                  status: in_progress\n                  external_id: '42'\n                  started_at: '2018-05-04T01:14:52Z'\n                  output:\n                    title: Mighty Readme report\n                    summary: ''\n                    text: ''\n              example-of-completed-conclusion:\n                summary: Response for completed conclusion\n                value:\n                  name: mighty_readme\n                  head_sha: ce587453ced02b1526dfb4cb910479d431683101\n                  status: completed\n                  started_at: '2017-11-30T19:39:10Z'\n                  conclusion: success\n                  completed_at: '2017-11-30T19:49:10Z'\n                  output:\n                    title: Mighty Readme report\n                    summary: There are 0 failures, 2 warnings, and 1 notices.\n                    text: You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.\n                    annotations:\n                      - path: README.md\n                        annotation_level: warning\n                        title: Spell Checker\n                        message: Check your spelling for 'banaas'.\n                        raw_details: Do you mean 'bananas' or 'banana'?\n                        start_line: 2\n                        end_line: 2\n                      - path: README.md\n                        annotation_level: warning\n                        title: Spell Checker\n                        message: Check your spelling for 'aples'\n                        raw_details: Do you mean 'apples' or 'Naples'\n                        start_line: 4\n                        end_line: 4\n                    images:\n                      - alt: Super bananas\n                        image_url: http://example.com/images/42\n                  actions:\n                    - label: Fix\n                      identifier: fix_errors\n                      description: Allow us to fix these errors for you\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/check-run'\n              examples:\n                example-of-completed-conclusion:\n                  $ref: '#/components/examples/check-run-example-of-completed-conclusion'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: checks\n        subcategory: runs\n  /repos/{owner}/{repo}/check-runs/{check_run_id}:\n    get:\n      summary: Get a check run\n      description: |-\n        **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\n        Gets a single check run using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.\n      tags:\n        - checks\n      operationId: checks/get\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/checks#get-a-check-run\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/check-run-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/check-run'\n              examples:\n                default:\n                  $ref: '#/components/examples/check-run'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: checks\n        subcategory: runs\n    patch:\n      summary: Update a check run\n      description: |-\n        **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\n        Updates a check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to edit check runs.\n      tags:\n        - checks\n      operationId: checks/update\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/checks#update-a-check-run\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/check-run-id'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: The name of the check. For example, \"code-coverage\".\n                details_url:\n                  type: string\n                  description: The URL of the integrator's site that has the full details of the check.\n                external_id:\n                  type: string\n                  description: A reference for the run on the integrator's system.\n                started_at:\n                  type: string\n                  format: date-time\n                  description: 'This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'\n                status:\n                  type: string\n                  description: The current status. Can be one of `queued`, `in_progress`, or `completed`.\n                  enum:\n                    - queued\n                    - in_progress\n                    - completed\n                conclusion:\n                  type: string\n                  description: |-\n                    **Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check. Can be one of `action_required`, `cancelled`, `failure`, `neutral`, `success`, `skipped`, `stale`, or `timed_out`.  \n                    **Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`. You cannot change a check run conclusion to `stale`, only GitHub can set this.\n                  enum:\n                    - action_required\n                    - cancelled\n                    - failure\n                    - neutral\n                    - success\n                    - skipped\n                    - stale\n                    - timed_out\n                completed_at:\n                  type: string\n                  format: date-time\n                  description: 'The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'\n                output:\n                  type: object\n                  description: Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally provide descriptive details about the run. See the [`output` object](https://docs.github.com/rest/reference/checks#output-object-1) description.\n                  properties:\n                    title:\n                      type: string\n                      description: '**Required**.'\n                    summary:\n                      type: string\n                      description: Can contain Markdown.\n                      maxLength: 65535\n                    text:\n                      type: string\n                      description: Can contain Markdown.\n                      maxLength: 65535\n                    annotations:\n                      type: array\n                      description: Adds information from your analysis to specific lines of code. Annotations are visible in GitHub's pull request UI. Annotations are visible in GitHub's pull request UI. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the [Update a check run](https://docs.github.com/rest/reference/checks#update-a-check-run) endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about annotations in the UI, see \"[About status checks](https://docs.github.com/articles/about-status-checks#checks)\". See the [`annotations` object](https://docs.github.com/rest/reference/checks#annotations-object-1) description for details.\n                      maxItems: 50\n                      items:\n                        type: object\n                        properties:\n                          path:\n                            type: string\n                            description: The path of the file to add an annotation to. For example, `assets/css/main.css`.\n                          start_line:\n                            type: integer\n                            description: The start line of the annotation.\n                          end_line:\n                            type: integer\n                            description: The end line of the annotation.\n                          start_column:\n                            type: integer\n                            description: The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.\n                          end_column:\n                            type: integer\n                            description: The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.\n                          annotation_level:\n                            type: string\n                            description: The level of the annotation. Can be one of `notice`, `warning`, or `failure`.\n                            enum:\n                              - notice\n                              - warning\n                              - failure\n                          message:\n                            type: string\n                            description: A short description of the feedback for these lines of code. The maximum size is 64 KB.\n                          title:\n                            type: string\n                            description: The title that represents the annotation. The maximum size is 255 characters.\n                          raw_details:\n                            type: string\n                            description: Details about this annotation. The maximum size is 64 KB.\n                        required:\n                          - path\n                          - start_line\n                          - end_line\n                          - annotation_level\n                          - message\n                    images:\n                      type: array\n                      description: Adds images to the output displayed in the GitHub pull request UI. See the [`images` object](https://docs.github.com/rest/reference/checks#annotations-object-1) description for details.\n                      items:\n                        type: object\n                        properties:\n                          alt:\n                            type: string\n                            description: The alternative text for the image.\n                          image_url:\n                            type: string\n                            description: The full URL of the image.\n                          caption:\n                            type: string\n                            description: A short image description.\n                        required:\n                          - alt\n                          - image_url\n                  required:\n                    - summary\n                actions:\n                  type: array\n                  description: Possible further actions the integrator can perform, which a user may trigger. Each action includes a `label`, `identifier` and `description`. A maximum of three actions are accepted. See the [`actions` object](https://docs.github.com/rest/reference/checks#actions-object) description. To learn more about check runs and requested actions, see \"[Check runs and requested actions](https://docs.github.com/rest/reference/checks#check-runs-and-requested-actions).\"\n                  maxItems: 3\n                  items:\n                    type: object\n                    properties:\n                      label:\n                        type: string\n                        maxLength: 20\n                        description: The text to be displayed on a button in the web UI. The maximum size is 20 characters.\n                      description:\n                        type: string\n                        maxLength: 40\n                        description: A short explanation of what this action would do. The maximum size is 40 characters.\n                      identifier:\n                        type: string\n                        maxLength: 20\n                        description: A reference for the action on the integrator's system. The maximum size is 20 characters.\n                    required:\n                      - label\n                      - description\n                      - identifier\n              anyOf:\n                - properties:\n                    status:\n                      enum:\n                        - completed\n                  required:\n                    - conclusion\n                  additionalProperties: true\n                - properties:\n                    status:\n                      enum:\n                        - queued\n                        - in_progress\n                  additionalProperties: true\n            example:\n              name: mighty_readme\n              started_at: '2018-05-04T01:14:52Z'\n              status: completed\n              conclusion: success\n              completed_at: '2018-05-04T01:14:52Z'\n              output:\n                title: Mighty Readme report\n                summary: There are 0 failures, 2 warnings, and 1 notices.\n                text: You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.\n                annotations:\n                  - path: README.md\n                    annotation_level: warning\n                    title: Spell Checker\n                    message: Check your spelling for 'banaas'.\n                    raw_details: Do you mean 'bananas' or 'banana'?\n                    start_line: 2\n                    end_line: 2\n                  - path: README.md\n                    annotation_level: warning\n                    title: Spell Checker\n                    message: Check your spelling for 'aples'\n                    raw_details: Do you mean 'apples' or 'Naples'\n                    start_line: 4\n                    end_line: 4\n                images:\n                  - alt: Super bananas\n                    image_url: http://example.com/images/42\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/check-run'\n              examples:\n                default:\n                  $ref: '#/components/examples/check-run'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: checks\n        subcategory: runs\n  /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations:\n    get:\n      summary: List check run annotations\n      description: Lists annotations for a check run using the annotation `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get annotations for a check run. OAuth Apps and authenticated users must have the `repo` scope to get annotations for a check run in a private repository.\n      tags:\n        - checks\n      operationId: checks/list-annotations\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/checks#list-check-run-annotations\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/check-run-id'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/check-annotation'\n              examples:\n                default:\n                  $ref: '#/components/examples/check-annotation-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: checks\n        subcategory: runs\n  /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest:\n    post:\n      summary: Rerequest a check run\n      description: |-\n        Triggers GitHub to rerequest an existing check run, without pushing new code to a repository. This endpoint will trigger the [`check_run` webhook](https://docs.github.com/webhooks/event-payloads/#check_run) event with the action `rerequested`. When a check run is `rerequested`, its `status` is reset to `queued` and the `conclusion` is cleared.\n\n        To rerequest a check run, your GitHub App must have the `checks:read` permission on a private repository or pull access to a public repository.\n      tags:\n        - checks\n      operationId: checks/rerequest-run\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/checks#rerequest-a-check-run\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/check-run-id'\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n                additionalProperties: false\n        '403':\n          description: Forbidden if the check run is not rerequestable or doesn't belong to the authenticated GitHub App\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/basic-error'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          description: Validation error if the check run is not rerequestable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/basic-error'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: checks\n        subcategory: runs\n  /repos/{owner}/{repo}/check-suites:\n    post:\n      summary: Create a check suite\n      description: |-\n        **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\n        By default, check suites are automatically created when you create a [check run](https://docs.github.com/rest/reference/checks#check-runs). You only need to use this endpoint for manually creating check suites when you've disabled automatic creation using \"[Update repository preferences for check suites](https://docs.github.com/rest/reference/checks#update-repository-preferences-for-check-suites)\". Your GitHub App must have the `checks:write` permission to create check suites.\n      tags:\n        - checks\n      operationId: checks/create-suite\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/checks#create-a-check-suite\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                head_sha:\n                  type: string\n                  description: The sha of the head commit.\n              required:\n                - head_sha\n            example:\n              head_sha: d6fde92930d4715a2b49857d24b940956b26d2d3\n      responses:\n        '200':\n          description: when the suite already existed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/check-suite'\n              examples:\n                default:\n                  $ref: '#/components/examples/check-suite'\n        '201':\n          description: Response when the suite was created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/check-suite'\n              examples:\n                default:\n                  $ref: '#/components/examples/check-suite'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: checks\n        subcategory: suites\n  /repos/{owner}/{repo}/check-suites/preferences:\n    patch:\n      summary: Update repository preferences for check suites\n      description: Changes the default automatic flow when creating check suites. By default, a check suite is automatically created each time code is pushed to a repository. When you disable the automatic creation of check suites, you can manually [Create a check suite](https://docs.github.com/rest/reference/checks#create-a-check-suite). You must have admin permissions in the repository to set preferences for check suites.\n      tags:\n        - checks\n      operationId: checks/set-suites-preferences\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/checks#update-repository-preferences-for-check-suites\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                auto_trigger_checks:\n                  type: array\n                  description: Enables or disables automatic creation of CheckSuite events upon pushes to the repository. Enabled by default. See the [`auto_trigger_checks` object](https://docs.github.com/rest/reference/checks#auto_trigger_checks-object) description for details.\n                  items:\n                    type: object\n                    properties:\n                      app_id:\n                        type: integer\n                        description: The `id` of the GitHub App.\n                      setting:\n                        type: boolean\n                        description: Set to `true` to enable automatic creation of CheckSuite events upon pushes to the repository, or `false` to disable them.\n                        default: true\n                    required:\n                      - app_id\n                      - setting\n            example:\n              auto_trigger_checks:\n                - app_id: 4\n                  setting: false\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/check-suite-preference'\n              examples:\n                default:\n                  $ref: '#/components/examples/check-suite-preference'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: checks\n        subcategory: suites\n  /repos/{owner}/{repo}/check-suites/{check_suite_id}:\n    get:\n      summary: Get a check suite\n      description: |-\n        **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\n        Gets a single check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.\n      tags:\n        - checks\n      operationId: checks/get-suite\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/checks#get-a-check-suite\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/check-suite-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/check-suite'\n              examples:\n                default:\n                  $ref: '#/components/examples/check-suite'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: checks\n        subcategory: suites\n  /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs:\n    get:\n      summary: List check runs in a check suite\n      description: |-\n        **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\n        Lists check runs for a check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.\n      tags:\n        - checks\n      operationId: checks/list-for-suite\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/checks#list-check-runs-in-a-check-suite\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/check-suite-id'\n        - $ref: '#/components/parameters/check-name'\n        - $ref: '#/components/parameters/status'\n        - name: filter\n          description: Filters check runs by their `completed_at` timestamp. Can be one of `latest` (returning the most recent check runs) or `all`.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - latest\n              - all\n            default: latest\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - total_count\n                  - check_runs\n                properties:\n                  total_count:\n                    type: integer\n                  check_runs:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/check-run'\n              examples:\n                default:\n                  $ref: '#/components/examples/check-run-paginated'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: checks\n        subcategory: runs\n  /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest:\n    post:\n      summary: Rerequest a check suite\n      description: |-\n        Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository. This endpoint will trigger the [`check_suite` webhook](https://docs.github.com/webhooks/event-payloads/#check_suite) event with the action `rerequested`. When a check suite is `rerequested`, its `status` is reset to `queued` and the `conclusion` is cleared.\n\n        To rerequest a check suite, your GitHub App must have the `checks:read` permission on a private repository or pull access to a public repository.\n      tags:\n        - checks\n      operationId: checks/rerequest-suite\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/checks#rerequest-a-check-suite\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/check-suite-id'\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n                additionalProperties: false\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: checks\n        subcategory: suites\n  /repos/{owner}/{repo}/commits/{ref}/check-runs:\n    get:\n      summary: List check runs for a Git reference\n      description: |-\n        **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\n        Lists check runs for a commit ref. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository.\n      tags:\n        - checks\n      operationId: checks/list-for-ref\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/checks#list-check-runs-for-a-git-reference\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: ref\n          description: ref parameter\n          in: path\n          required: true\n          schema:\n            type: string\n          x-multi-segment: true\n        - $ref: '#/components/parameters/check-name'\n        - $ref: '#/components/parameters/status'\n        - name: filter\n          description: Filters check runs by their `completed_at` timestamp. Can be one of `latest` (returning the most recent check runs) or `all`.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - latest\n              - all\n            default: latest\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n        - name: app_id\n          in: query\n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - total_count\n                  - check_runs\n                properties:\n                  total_count:\n                    type: integer\n                  check_runs:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/check-run'\n              examples:\n                default:\n                  $ref: '#/components/examples/check-run-paginated'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: checks\n        subcategory: runs\n  /repos/{owner}/{repo}/commits/{ref}/check-suites:\n    get:\n      summary: List check suites for a Git reference\n      description: |-\n        **Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\n        Lists check suites for a commit `ref`. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to list check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.\n      tags:\n        - checks\n      operationId: checks/list-suites-for-ref\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/checks#list-check-suites-for-a-git-reference\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: ref\n          description: ref parameter\n          in: path\n          required: true\n          schema:\n            type: string\n          x-multi-segment: true\n        - name: app_id\n          description: Filters check suites by GitHub App `id`.\n          in: query\n          required: false\n          schema:\n            type: integer\n          example: 1\n        - $ref: '#/components/parameters/check-name'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - total_count\n                  - check_suites\n                properties:\n                  total_count:\n                    type: integer\n                  check_suites:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/check-suite'\n              examples:\n                default:\n                  $ref: '#/components/examples/check-suite-paginated'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: checks\n        subcategory: suites\ncomponents:\n  schemas:\n    check-run:\n      title: CheckRun\n      description: A check performed on the code of a given code change\n      type: object\n      properties:\n        id:\n          description: The id of the check.\n          example: 21\n          type: integer\n        head_sha:\n          description: The SHA of the commit that is being checked.\n          example: 009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d\n          type: string\n        node_id:\n          type: string\n          example: MDg6Q2hlY2tSdW40\n        external_id:\n          type: string\n          example: '42'\n          nullable: true\n        url:\n          type: string\n          example: https://api.github.com/repos/github/hello-world/check-runs/4\n        html_url:\n          type: string\n          example: https://github.com/github/hello-world/runs/4\n          nullable: true\n        details_url:\n          type: string\n          example: https://example.com\n          nullable: true\n        status:\n          description: The phase of the lifecycle that the check is currently in.\n          example: queued\n          type: string\n          enum:\n            - queued\n            - in_progress\n            - completed\n        conclusion:\n          type: string\n          example: neutral\n          enum:\n            - success\n            - failure\n            - neutral\n            - cancelled\n            - skipped\n            - timed_out\n            - action_required\n          nullable: true\n        started_at:\n          type: string\n          format: date-time\n          example: '2018-05-04T01:14:52Z'\n          nullable: true\n        completed_at:\n          type: string\n          format: date-time\n          example: '2018-05-04T01:14:52Z'\n          nullable: true\n        output:\n          type: object\n          properties:\n            title:\n              type: string\n              nullable: true\n            summary:\n              type: string\n              nullable: true\n            text:\n              type: string\n              nullable: true\n            annotations_count:\n              type: integer\n            annotations_url:\n              type: string\n              format: uri\n          required:\n            - title\n            - summary\n            - text\n            - annotations_count\n            - annotations_url\n        name:\n          description: The name of the check.\n          example: test-coverage\n          type: string\n        check_suite:\n          type: object\n          properties:\n            id:\n              type: integer\n          required:\n            - id\n          nullable: true\n        app:\n          $ref: '#/components/schemas/nullable-integration'\n        pull_requests:\n          type: array\n          items:\n            $ref: '#/components/schemas/pull-request-minimal'\n        deployment:\n          $ref: '#/components/schemas/deployment-simple'\n      required:\n        - id\n        - node_id\n        - head_sha\n        - name\n        - url\n        - html_url\n        - details_url\n        - status\n        - conclusion\n        - started_at\n        - completed_at\n        - external_id\n        - check_suite\n        - output\n        - app\n        - pull_requests\n    nullable-integration:\n      title: GitHub app\n      description: GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the GitHub app\n          example: 37\n          type: integer\n        slug:\n          description: The slug name of the GitHub app\n          example: probot-owners\n          type: string\n        node_id:\n          type: string\n          example: MDExOkludGVncmF0aW9uMQ==\n        owner:\n          $ref: '#/components/schemas/nullable-simple-user'\n        name:\n          description: The name of the GitHub app\n          example: Probot Owners\n          type: string\n        description:\n          type: string\n          example: The description of the app.\n          nullable: true\n        external_url:\n          type: string\n          format: uri\n          example: https://example.com\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/apps/super-ci\n        created_at:\n          type: string\n          format: date-time\n          example: '2017-07-08T16:18:44-04:00'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2017-07-08T16:18:44-04:00'\n        permissions:\n          description: The set of permissions for the GitHub app\n          type: object\n          properties:\n            issues:\n              type: string\n            checks:\n              type: string\n            metadata:\n              type: string\n            contents:\n              type: string\n            deployments:\n              type: string\n          additionalProperties:\n            type: string\n          example:\n            issues: read\n            deployments: write\n        events:\n          description: The list of events for the GitHub app\n          example:\n            - label\n            - deployment\n          type: array\n          items:\n            type: string\n        installations_count:\n          description: The number of installations associated with the GitHub app\n          example: 5\n          type: integer\n        client_id:\n          type: string\n          example: '\"Iv1.25b5d1e65ffc4022\"'\n        client_secret:\n          type: string\n          example: '\"1d4b2097ac622ba702d19de498f005747a8b21d3\"'\n        webhook_secret:\n          type: string\n          example: '\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\"'\n          nullable: true\n        pem:\n          type: string\n          example: '\"-----BEGIN RSA PRIVATE KEY-----\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\n-----END RSA PRIVATE KEY-----\\n\"'\n      required:\n        - id\n        - node_id\n        - owner\n        - name\n        - description\n        - external_url\n        - html_url\n        - created_at\n        - updated_at\n        - permissions\n        - events\n      nullable: true\n    pull-request-minimal:\n      title: Pull Request Minimal\n      type: object\n      properties:\n        id:\n          type: integer\n        number:\n          type: integer\n        url:\n          type: string\n        head:\n          type: object\n          properties:\n            ref:\n              type: string\n            sha:\n              type: string\n            repo:\n              type: object\n              properties:\n                id:\n                  type: integer\n                url:\n                  type: string\n                name:\n                  type: string\n              required:\n                - id\n                - url\n                - name\n          required:\n            - ref\n            - sha\n            - repo\n        base:\n          type: object\n          properties:\n            ref:\n              type: string\n            sha:\n              type: string\n            repo:\n              type: object\n              properties:\n                id:\n                  type: integer\n                url:\n                  type: string\n                name:\n                  type: string\n              required:\n                - id\n                - url\n                - name\n          required:\n            - ref\n            - sha\n            - repo\n      required:\n        - id\n        - number\n        - url\n        - head\n        - base\n    deployment-simple:\n      title: Deployment\n      description: A deployment created as the result of an Actions check run from a workflow that references an environment\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/example/deployments/1\n        id:\n          description: Unique identifier of the deployment\n          example: 42\n          type: integer\n        node_id:\n          type: string\n          example: MDEwOkRlcGxveW1lbnQx\n        task:\n          description: Parameter to specify a task to execute\n          example: deploy\n          type: string\n        original_environment:\n          type: string\n          example: staging\n        environment:\n          description: Name for the target deployment environment.\n          example: production\n          type: string\n        description:\n          type: string\n          example: Deploy request from hubot\n          nullable: true\n        created_at:\n          type: string\n          format: date-time\n          example: '2012-07-20T01:19:13Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2012-07-20T01:19:13Z'\n        statuses_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/example/deployments/1/statuses\n        repository_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/example\n        transient_environment:\n          description: 'Specifies if the given environment is will no longer exist at some point in the future. Default: false.'\n          example: true\n          type: boolean\n        production_environment:\n          description: 'Specifies if the given environment is one that end-users directly interact with. Default: false.'\n          example: true\n          type: boolean\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n      required:\n        - id\n        - node_id\n        - task\n        - environment\n        - description\n        - statuses_url\n        - repository_url\n        - url\n        - created_at\n        - updated_at\n    nullable-simple-user:\n      title: Simple User\n      description: Simple User\n      type: object\n      properties:\n        name:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:55Z\"'\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n      nullable: true\n    check-annotation:\n      title: Check Annotation\n      description: Check Annotation\n      type: object\n      properties:\n        path:\n          type: string\n          example: README.md\n        start_line:\n          type: integer\n          example: 2\n        end_line:\n          type: integer\n          example: 2\n        start_column:\n          type: integer\n          example: 5\n          nullable: true\n        end_column:\n          type: integer\n          example: 10\n          nullable: true\n        annotation_level:\n          type: string\n          example: warning\n          nullable: true\n        title:\n          type: string\n          example: Spell Checker\n          nullable: true\n        message:\n          type: string\n          example: Check your spelling for 'banaas'.\n          nullable: true\n        raw_details:\n          type: string\n          example: Do you mean 'bananas' or 'banana'?\n          nullable: true\n        blob_href:\n          type: string\n      required:\n        - path\n        - blob_href\n        - start_line\n        - end_line\n        - start_column\n        - end_column\n        - annotation_level\n        - title\n        - message\n        - raw_details\n    basic-error:\n      title: Basic Error\n      description: Basic Error\n      type: object\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        url:\n          type: string\n        status:\n          type: string\n    check-suite:\n      title: CheckSuite\n      description: A suite of checks performed on the code of a given code change\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 5\n        node_id:\n          type: string\n          example: MDEwOkNoZWNrU3VpdGU1\n        head_branch:\n          type: string\n          example: master\n          nullable: true\n        head_sha:\n          description: The SHA of the head commit that is being checked.\n          example: 009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d\n          type: string\n        status:\n          type: string\n          example: completed\n          enum:\n            - queued\n            - in_progress\n            - completed\n          nullable: true\n        conclusion:\n          type: string\n          example: neutral\n          enum:\n            - success\n            - failure\n            - neutral\n            - cancelled\n            - skipped\n            - timed_out\n            - action_required\n          nullable: true\n        url:\n          type: string\n          example: https://api.github.com/repos/github/hello-world/check-suites/5\n          nullable: true\n        before:\n          type: string\n          example: 146e867f55c26428e5f9fade55a9bbf5e95a7912\n          nullable: true\n        after:\n          type: string\n          example: d6fde92930d4715a2b49857d24b940956b26d2d3\n          nullable: true\n        pull_requests:\n          type: array\n          items:\n            $ref: '#/components/schemas/pull-request-minimal'\n          nullable: true\n        app:\n          $ref: '#/components/schemas/nullable-integration'\n        repository:\n          $ref: '#/components/schemas/minimal-repository'\n        created_at:\n          type: string\n          format: date-time\n          nullable: true\n        updated_at:\n          type: string\n          format: date-time\n          nullable: true\n        head_commit:\n          $ref: '#/components/schemas/simple-commit'\n        latest_check_runs_count:\n          type: integer\n        check_runs_url:\n          type: string\n        rerequestable:\n          type: boolean\n        runs_rerequestable:\n          type: boolean\n      required:\n        - id\n        - node_id\n        - head_branch\n        - status\n        - conclusion\n        - head_sha\n        - url\n        - before\n        - after\n        - created_at\n        - updated_at\n        - app\n        - head_commit\n        - repository\n        - latest_check_runs_count\n        - check_runs_url\n        - pull_requests\n    minimal-repository:\n      title: Minimal Repository\n      description: Minimal Repository\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1296269\n        node_id:\n          type: string\n          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n        name:\n          type: string\n          example: Hello-World\n        full_name:\n          type: string\n          example: octocat/Hello-World\n        owner:\n          $ref: '#/components/schemas/simple-user'\n        private:\n          type: boolean\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World\n        description:\n          type: string\n          example: This your first repo!\n          nullable: true\n        fork:\n          type: boolean\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World\n        archive_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n        assignees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}\n        blobs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n        branches_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}\n        collaborators_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n        comments_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}\n        commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}\n        compare_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n        contents_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}\n        contributors_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/contributors\n        deployments_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/deployments\n        downloads_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/downloads\n        events_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/events\n        forks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/forks\n        git_commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n        git_refs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n        git_tags_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n        git_url:\n          type: string\n        issue_comment_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n        issue_events_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n        issues_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}\n        keys_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n        labels_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}\n        languages_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/languages\n        merges_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/merges\n        milestones_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}\n        notifications_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n        pulls_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}\n        releases_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}\n        ssh_url:\n          type: string\n        stargazers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/stargazers\n        statuses_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n        subscribers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscribers\n        subscription_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscription\n        tags_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/tags\n        teams_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/teams\n        trees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n        clone_url:\n          type: string\n        mirror_url:\n          type: string\n          nullable: true\n        hooks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/hooks\n        svn_url:\n          type: string\n        homepage:\n          type: string\n          nullable: true\n        language:\n          type: string\n          nullable: true\n        forks_count:\n          type: integer\n        stargazers_count:\n          type: integer\n        watchers_count:\n          type: integer\n        size:\n          type: integer\n        default_branch:\n          type: string\n        open_issues_count:\n          type: integer\n        is_template:\n          type: boolean\n        topics:\n          type: array\n          items:\n            type: string\n        has_issues:\n          type: boolean\n        has_projects:\n          type: boolean\n        has_wiki:\n          type: boolean\n        has_pages:\n          type: boolean\n        has_downloads:\n          type: boolean\n        archived:\n          type: boolean\n        disabled:\n          type: boolean\n        visibility:\n          type: string\n        pushed_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:06:43Z'\n          nullable: true\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:01:12Z'\n          nullable: true\n        updated_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:14:43Z'\n          nullable: true\n        permissions:\n          type: object\n          properties:\n            admin:\n              type: boolean\n            maintain:\n              type: boolean\n            push:\n              type: boolean\n            triage:\n              type: boolean\n            pull:\n              type: boolean\n        role_name:\n          type: string\n          example: admin\n        template_repository:\n          $ref: '#/components/schemas/nullable-repository'\n        temp_clone_token:\n          type: string\n        delete_branch_on_merge:\n          type: boolean\n        subscribers_count:\n          type: integer\n        network_count:\n          type: integer\n        code_of_conduct:\n          $ref: '#/components/schemas/code-of-conduct'\n        license:\n          type: object\n          properties:\n            key:\n              type: string\n            name:\n              type: string\n            spdx_id:\n              type: string\n            url:\n              type: string\n            node_id:\n              type: string\n          nullable: true\n        forks:\n          type: integer\n          example: 0\n        open_issues:\n          type: integer\n          example: 0\n        watchers:\n          type: integer\n          example: 0\n        allow_forking:\n          type: boolean\n      required:\n        - archive_url\n        - assignees_url\n        - blobs_url\n        - branches_url\n        - collaborators_url\n        - comments_url\n        - commits_url\n        - compare_url\n        - contents_url\n        - contributors_url\n        - deployments_url\n        - description\n        - downloads_url\n        - events_url\n        - fork\n        - forks_url\n        - full_name\n        - git_commits_url\n        - git_refs_url\n        - git_tags_url\n        - hooks_url\n        - html_url\n        - id\n        - node_id\n        - issue_comment_url\n        - issue_events_url\n        - issues_url\n        - keys_url\n        - labels_url\n        - languages_url\n        - merges_url\n        - milestones_url\n        - name\n        - notifications_url\n        - owner\n        - private\n        - pulls_url\n        - releases_url\n        - stargazers_url\n        - statuses_url\n        - subscribers_url\n        - subscription_url\n        - tags_url\n        - teams_url\n        - trees_url\n        - url\n    simple-commit:\n      title: Simple Commit\n      description: Simple Commit\n      type: object\n      properties:\n        id:\n          type: string\n        tree_id:\n          type: string\n        message:\n          type: string\n        timestamp:\n          type: string\n          format: date-time\n        author:\n          type: object\n          properties:\n            name:\n              type: string\n            email:\n              type: string\n          required:\n            - name\n            - email\n          nullable: true\n        committer:\n          type: object\n          properties:\n            name:\n              type: string\n            email:\n              type: string\n          required:\n            - name\n            - email\n          nullable: true\n      required:\n        - id\n        - tree_id\n        - message\n        - timestamp\n        - author\n        - committer\n    check-suite-preference:\n      title: Check Suite Preference\n      description: Check suite configuration preferences for a repository.\n      type: object\n      required:\n        - preferences\n        - repository\n      properties:\n        preferences:\n          type: object\n          properties:\n            auto_trigger_checks:\n              type: array\n              items:\n                type: object\n                properties:\n                  app_id:\n                    type: integer\n                  setting:\n                    type: boolean\n                required:\n                  - app_id\n                  - setting\n        repository:\n          $ref: '#/components/schemas/minimal-repository'\n    simple-user:\n      title: Simple User\n      description: Simple User\n      type: object\n      properties:\n        name:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:55Z\"'\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n    nullable-repository:\n      title: Repository\n      description: A git repository\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the repository\n          example: 42\n          type: integer\n        node_id:\n          type: string\n          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n        name:\n          description: The name of the repository.\n          type: string\n          example: Team Environment\n        full_name:\n          type: string\n          example: octocat/Hello-World\n        license:\n          $ref: '#/components/schemas/nullable-license-simple'\n        organization:\n          $ref: '#/components/schemas/nullable-simple-user'\n        forks:\n          type: integer\n        permissions:\n          type: object\n          properties:\n            admin:\n              type: boolean\n            pull:\n              type: boolean\n            triage:\n              type: boolean\n            push:\n              type: boolean\n            maintain:\n              type: boolean\n          required:\n            - admin\n            - pull\n            - push\n        owner:\n          $ref: '#/components/schemas/simple-user'\n        private:\n          description: Whether the repository is private or public.\n          default: false\n          type: boolean\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World\n        description:\n          type: string\n          example: This your first repo!\n          nullable: true\n        fork:\n          type: boolean\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World\n        archive_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n        assignees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}\n        blobs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n        branches_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}\n        collaborators_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n        comments_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}\n        commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}\n        compare_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n        contents_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}\n        contributors_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/contributors\n        deployments_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/deployments\n        downloads_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/downloads\n        events_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/events\n        forks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/forks\n        git_commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n        git_refs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n        git_tags_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n        git_url:\n          type: string\n          example: git:github.com/octocat/Hello-World.git\n        issue_comment_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n        issue_events_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n        issues_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}\n        keys_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n        labels_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}\n        languages_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/languages\n        merges_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/merges\n        milestones_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}\n        notifications_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n        pulls_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}\n        releases_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}\n        ssh_url:\n          type: string\n          example: git@github.com:octocat/Hello-World.git\n        stargazers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/stargazers\n        statuses_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n        subscribers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscribers\n        subscription_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscription\n        tags_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/tags\n        teams_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/teams\n        trees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n        clone_url:\n          type: string\n          example: https://github.com/octocat/Hello-World.git\n        mirror_url:\n          type: string\n          format: uri\n          example: git:git.example.com/octocat/Hello-World\n          nullable: true\n        hooks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/hooks\n        svn_url:\n          type: string\n          format: uri\n          example: https://svn.github.com/octocat/Hello-World\n        homepage:\n          type: string\n          format: uri\n          example: https://github.com\n          nullable: true\n        language:\n          type: string\n          nullable: true\n        forks_count:\n          type: integer\n          example: 9\n        stargazers_count:\n          type: integer\n          example: 80\n        watchers_count:\n          type: integer\n          example: 80\n        size:\n          type: integer\n          example: 108\n        default_branch:\n          description: The default branch of the repository.\n          type: string\n          example: master\n        open_issues_count:\n          type: integer\n          example: 0\n        is_template:\n          description: Whether this repository acts as a template that can be used to generate new repositories.\n          default: false\n          type: boolean\n          example: true\n        topics:\n          type: array\n          items:\n            type: string\n        has_issues:\n          description: Whether issues are enabled.\n          default: true\n          type: boolean\n          example: true\n        has_projects:\n          description: Whether projects are enabled.\n          default: true\n          type: boolean\n          example: true\n        has_wiki:\n          description: Whether the wiki is enabled.\n          default: true\n          type: boolean\n          example: true\n        has_pages:\n          type: boolean\n        has_downloads:\n          description: Whether downloads are enabled.\n          default: true\n          type: boolean\n          example: true\n        archived:\n          description: Whether the repository is archived.\n          default: false\n          type: boolean\n        disabled:\n          type: boolean\n          description: Returns whether or not this repository disabled.\n        visibility:\n          description: 'The repository visibility: public, private, or internal.'\n          default: public\n          type: string\n        pushed_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:06:43Z'\n          nullable: true\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:01:12Z'\n          nullable: true\n        updated_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:14:43Z'\n          nullable: true\n        allow_rebase_merge:\n          description: Whether to allow rebase merges for pull requests.\n          default: true\n          type: boolean\n          example: true\n        template_repository:\n          nullable: true\n          type: object\n          properties:\n            id:\n              type: integer\n            node_id:\n              type: string\n            name:\n              type: string\n            full_name:\n              type: string\n            owner:\n              type: object\n              properties:\n                login:\n                  type: string\n                id:\n                  type: integer\n                node_id:\n                  type: string\n                avatar_url:\n                  type: string\n                gravatar_id:\n                  type: string\n                url:\n                  type: string\n                html_url:\n                  type: string\n                followers_url:\n                  type: string\n                following_url:\n                  type: string\n                gists_url:\n                  type: string\n                starred_url:\n                  type: string\n                subscriptions_url:\n                  type: string\n                organizations_url:\n                  type: string\n                repos_url:\n                  type: string\n                events_url:\n                  type: string\n                received_events_url:\n                  type: string\n                type:\n                  type: string\n                site_admin:\n                  type: boolean\n            private:\n              type: boolean\n            html_url:\n              type: string\n            description:\n              type: string\n            fork:\n              type: boolean\n            url:\n              type: string\n            archive_url:\n              type: string\n            assignees_url:\n              type: string\n            blobs_url:\n              type: string\n            branches_url:\n              type: string\n            collaborators_url:\n              type: string\n            comments_url:\n              type: string\n            commits_url:\n              type: string\n            compare_url:\n              type: string\n            contents_url:\n              type: string\n            contributors_url:\n              type: string\n            deployments_url:\n              type: string\n            downloads_url:\n              type: string\n            events_url:\n              type: string\n            forks_url:\n              type: string\n            git_commits_url:\n              type: string\n            git_refs_url:\n              type: string\n            git_tags_url:\n              type: string\n            git_url:\n              type: string\n            issue_comment_url:\n              type: string\n            issue_events_url:\n              type: string\n            issues_url:\n              type: string\n            keys_url:\n              type: string\n            labels_url:\n              type: string\n            languages_url:\n              type: string\n            merges_url:\n              type: string\n            milestones_url:\n              type: string\n            notifications_url:\n              type: string\n            pulls_url:\n              type: string\n            releases_url:\n              type: string\n            ssh_url:\n              type: string\n            stargazers_url:\n              type: string\n            statuses_url:\n              type: string\n            subscribers_url:\n              type: string\n            subscription_url:\n              type: string\n            tags_url:\n              type: string\n            teams_url:\n              type: string\n            trees_url:\n              type: string\n            clone_url:\n              type: string\n            mirror_url:\n              type: string\n            hooks_url:\n              type: string\n            svn_url:\n              type: string\n            homepage:\n              type: string\n            language:\n              type: string\n            forks_count:\n              type: integer\n            stargazers_count:\n              type: integer\n            watchers_count:\n              type: integer\n            size:\n              type: integer\n            default_branch:\n              type: string\n            open_issues_count:\n              type: integer\n            is_template:\n              type: boolean\n            topics:\n              type: array\n              items:\n                type: string\n            has_issues:\n              type: boolean\n            has_projects:\n              type: boolean\n            has_wiki:\n              type: boolean\n            has_pages:\n              type: boolean\n            has_downloads:\n              type: boolean\n            archived:\n              type: boolean\n            disabled:\n              type: boolean\n            visibility:\n              type: string\n            pushed_at:\n              type: string\n            created_at:\n              type: string\n            updated_at:\n              type: string\n            permissions:\n              type: object\n              properties:\n                admin:\n                  type: boolean\n                maintain:\n                  type: boolean\n                push:\n                  type: boolean\n                triage:\n                  type: boolean\n                pull:\n                  type: boolean\n            allow_rebase_merge:\n              type: boolean\n            temp_clone_token:\n              type: string\n            allow_squash_merge:\n              type: boolean\n            allow_auto_merge:\n              type: boolean\n            delete_branch_on_merge:\n              type: boolean\n            allow_update_branch:\n              type: boolean\n            allow_merge_commit:\n              type: boolean\n            subscribers_count:\n              type: integer\n            network_count:\n              type: integer\n        temp_clone_token:\n          type: string\n        allow_squash_merge:\n          description: Whether to allow squash merges for pull requests.\n          default: true\n          type: boolean\n          example: true\n        allow_auto_merge:\n          description: Whether to allow Auto-merge to be used on pull requests.\n          default: false\n          type: boolean\n          example: false\n        delete_branch_on_merge:\n          description: Whether to delete head branches when pull requests are merged\n          default: false\n          type: boolean\n          example: false\n        allow_merge_commit:\n          description: Whether to allow merge commits for pull requests.\n          default: true\n          type: boolean\n          example: true\n        allow_forking:\n          description: Whether to allow forking this repo\n          type: boolean\n        subscribers_count:\n          type: integer\n        network_count:\n          type: integer\n        open_issues:\n          type: integer\n        watchers:\n          type: integer\n        master_branch:\n          type: string\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:42Z\"'\n      required:\n        - archive_url\n        - assignees_url\n        - blobs_url\n        - branches_url\n        - collaborators_url\n        - comments_url\n        - commits_url\n        - compare_url\n        - contents_url\n        - contributors_url\n        - deployments_url\n        - description\n        - downloads_url\n        - events_url\n        - fork\n        - forks_url\n        - full_name\n        - git_commits_url\n        - git_refs_url\n        - git_tags_url\n        - hooks_url\n        - html_url\n        - id\n        - node_id\n        - issue_comment_url\n        - issue_events_url\n        - issues_url\n        - keys_url\n        - labels_url\n        - languages_url\n        - merges_url\n        - milestones_url\n        - name\n        - notifications_url\n        - owner\n        - private\n        - pulls_url\n        - releases_url\n        - stargazers_url\n        - statuses_url\n        - subscribers_url\n        - subscription_url\n        - tags_url\n        - teams_url\n        - trees_url\n        - url\n        - clone_url\n        - default_branch\n        - forks\n        - forks_count\n        - git_url\n        - has_downloads\n        - has_issues\n        - has_projects\n        - has_wiki\n        - has_pages\n        - homepage\n        - language\n        - archived\n        - disabled\n        - mirror_url\n        - open_issues\n        - open_issues_count\n        - license\n        - pushed_at\n        - size\n        - ssh_url\n        - stargazers_count\n        - svn_url\n        - watchers\n        - watchers_count\n        - created_at\n        - updated_at\n      nullable: true\n    code-of-conduct:\n      title: Code Of Conduct\n      description: Code Of Conduct\n      type: object\n      properties:\n        key:\n          type: string\n          example: contributor_covenant\n        name:\n          type: string\n          example: Contributor Covenant\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/codes_of_conduct/contributor_covenant\n        body:\n          type: string\n          example: |\n            # Contributor Covenant Code of Conduct\n\n            ## Our Pledge\n\n            In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n            ## Our Standards\n\n            Examples of behavior that contributes to creating a positive environment include:\n\n            * Using welcoming and inclusive language\n            * Being respectful of differing viewpoints and experiences\n            * Gracefully accepting constructive criticism\n            * Focusing on what is best for the community\n            * Showing empathy towards other community members\n\n            Examples of unacceptable behavior by participants include:\n\n            * The use of sexualized language or imagery and unwelcome sexual attention or advances\n            * Trolling, insulting/derogatory comments, and personal or political attacks\n            * Public or private harassment\n            * Publishing others' private information, such as a physical or electronic address, without explicit permission\n            * Other conduct which could reasonably be considered inappropriate in a professional setting\n\n            ## Our Responsibilities\n\n            Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                              to any instances of unacceptable behavior.\n\n            Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n            ## Scope\n\n            This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                              posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n            ## Enforcement\n\n            Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\n            Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n            ## Attribution\n\n            This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n            [homepage]: http://contributor-covenant.org\n            [version]: http://contributor-covenant.org/version/1/4/\n        html_url:\n          type: string\n          format: uri\n          nullable: true\n      required:\n        - url\n        - html_url\n        - key\n        - name\n    nullable-license-simple:\n      title: License Simple\n      description: License Simple\n      type: object\n      properties:\n        key:\n          type: string\n          example: mit\n        name:\n          type: string\n          example: MIT License\n        url:\n          type: string\n          nullable: true\n          format: uri\n          example: https://api.github.com/licenses/mit\n        spdx_id:\n          type: string\n          nullable: true\n          example: MIT\n        node_id:\n          type: string\n          example: MDc6TGljZW5zZW1pdA==\n        html_url:\n          type: string\n          format: uri\n      required:\n        - key\n        - name\n        - url\n        - spdx_id\n        - node_id\n      nullable: true\n  parameters:\n    owner:\n      name: owner\n      in: path\n      required: true\n      schema:\n        type: string\n    repo:\n      name: repo\n      in: path\n      required: true\n      schema:\n        type: string\n    check-run-id:\n      name: check_run_id\n      description: check_run_id parameter\n      in: path\n      required: true\n      schema:\n        type: integer\n    per-page:\n      name: per_page\n      description: Results per page (max 100)\n      in: query\n      schema:\n        type: integer\n        default: 30\n    page:\n      name: page\n      description: Page number of the results to fetch.\n      in: query\n      schema:\n        type: integer\n        default: 1\n    check-suite-id:\n      name: check_suite_id\n      description: check_suite_id parameter\n      in: path\n      required: true\n      schema:\n        type: integer\n    check-name:\n      name: check_name\n      description: Returns check runs with the specified `name`.\n      in: query\n      required: false\n      schema:\n        type: string\n    status:\n      name: status\n      description: Returns check runs with the specified `status`. Can be one of `queued`, `in_progress`, or `completed`.\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - queued\n          - in_progress\n          - completed\n  responses:\n    not_found:\n      description: Resource not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n  securitySchemes: {}\n  callbacks: {}\n  examples:\n    check-run-example-of-completed-conclusion:\n      summary: Response for completed conclusion\n      value:\n        id: 4\n        head_sha: ce587453ced02b1526dfb4cb910479d431683101\n        node_id: MDg6Q2hlY2tSdW40\n        external_id: ''\n        url: https://api.github.com/repos/github/hello-world/check-runs/4\n        html_url: https://github.com/github/hello-world/runs/4\n        details_url: https://example.com\n        status: completed\n        conclusion: neutral\n        started_at: '2018-05-04T01:14:52Z'\n        completed_at: '2018-05-04T01:14:52Z'\n        output:\n          title: Mighty Readme report\n          summary: There are 0 failures, 2 warnings, and 1 notice.\n          text: You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.\n          annotations_count: 2\n          annotations_url: https://api.github.com/repos/github/hello-world/check-runs/4/annotations\n        name: mighty_readme\n        check_suite:\n          id: 5\n        app:\n          id: 1\n          slug: octoapp\n          node_id: MDExOkludGVncmF0aW9uMQ==\n          owner:\n            login: github\n            id: 1\n            node_id: MDEyOk9yZ2FuaXphdGlvbjE=\n            url: https://api.github.com/orgs/github\n            repos_url: https://api.github.com/orgs/github/repos\n            events_url: https://api.github.com/orgs/github/events\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: true\n          name: Octocat App\n          description: ''\n          external_url: https://example.com\n          html_url: https://github.com/apps/octoapp\n          created_at: '2017-07-08T16:18:44-04:00'\n          updated_at: '2017-07-08T16:18:44-04:00'\n          permissions:\n            metadata: read\n            contents: read\n            issues: write\n            single_file: write\n          events:\n            - push\n            - pull_request\n        pull_requests:\n          - url: https://api.github.com/repos/github/hello-world/pulls/1\n            id: 1934\n            number: 3956\n            head:\n              ref: say-hello\n              sha: 3dca65fa3e8d4b3da3f3d056c59aee1c50f41390\n              repo:\n                id: 526\n                url: https://api.github.com/repos/github/hello-world\n                name: hello-world\n            base:\n              ref: master\n              sha: e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f\n              repo:\n                id: 526\n                url: https://api.github.com/repos/github/hello-world\n                name: hello-world\n    check-run:\n      value:\n        id: 4\n        head_sha: ce587453ced02b1526dfb4cb910479d431683101\n        node_id: MDg6Q2hlY2tSdW40\n        external_id: ''\n        url: https://api.github.com/repos/github/hello-world/check-runs/4\n        html_url: https://github.com/github/hello-world/runs/4\n        details_url: https://example.com\n        status: completed\n        conclusion: neutral\n        started_at: '2018-05-04T01:14:52Z'\n        completed_at: '2018-05-04T01:14:52Z'\n        output:\n          title: Mighty Readme report\n          summary: There are 0 failures, 2 warnings, and 1 notice.\n          text: You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.\n          annotations_count: 2\n          annotations_url: https://api.github.com/repos/github/hello-world/check-runs/4/annotations\n        name: mighty_readme\n        check_suite:\n          id: 5\n        app:\n          id: 1\n          slug: octoapp\n          node_id: MDExOkludGVncmF0aW9uMQ==\n          owner:\n            login: github\n            id: 1\n            node_id: MDEyOk9yZ2FuaXphdGlvbjE=\n            url: https://api.github.com/orgs/github\n            repos_url: https://api.github.com/orgs/github/repos\n            events_url: https://api.github.com/orgs/github/events\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: true\n          name: Octocat App\n          description: ''\n          external_url: https://example.com\n          html_url: https://github.com/apps/octoapp\n          created_at: '2017-07-08T16:18:44-04:00'\n          updated_at: '2017-07-08T16:18:44-04:00'\n          permissions:\n            metadata: read\n            contents: read\n            issues: write\n            single_file: write\n          events:\n            - push\n            - pull_request\n        pull_requests:\n          - url: https://api.github.com/repos/github/hello-world/pulls/1\n            id: 1934\n            number: 3956\n            head:\n              ref: say-hello\n              sha: 3dca65fa3e8d4b3da3f3d056c59aee1c50f41390\n              repo:\n                id: 526\n                url: https://api.github.com/repos/github/hello-world\n                name: hello-world\n            base:\n              ref: master\n              sha: e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f\n              repo:\n                id: 526\n                url: https://api.github.com/repos/github/hello-world\n                name: hello-world\n    check-annotation-items:\n      value:\n        - path: README.md\n          start_line: 2\n          end_line: 2\n          start_column: 5\n          end_column: 10\n          annotation_level: warning\n          title: Spell Checker\n          message: Check your spelling for 'banaas'.\n          raw_details: Do you mean 'bananas' or 'banana'?\n          blob_href: https://api.github.com/repos/github/rest-api-description/git/blobs/abc\n    check-suite:\n      value:\n        id: 5\n        node_id: MDEwOkNoZWNrU3VpdGU1\n        head_branch: master\n        head_sha: d6fde92930d4715a2b49857d24b940956b26d2d3\n        status: completed\n        conclusion: neutral\n        url: https://api.github.com/repos/github/hello-world/check-suites/5\n        before: 146e867f55c26428e5f9fade55a9bbf5e95a7912\n        after: d6fde92930d4715a2b49857d24b940956b26d2d3\n        pull_requests: []\n        created_at: '2017-07-08T16:18:44-04:00'\n        updated_at: '2017-07-08T16:18:44-04:00'\n        app:\n          id: 1\n          slug: octoapp\n          node_id: MDExOkludGVncmF0aW9uMQ==\n          owner:\n            login: github\n            id: 1\n            node_id: MDEyOk9yZ2FuaXphdGlvbjE=\n            url: https://api.github.com/orgs/github\n            repos_url: https://api.github.com/orgs/github/repos\n            events_url: https://api.github.com/orgs/github/events\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: true\n          name: Octocat App\n          description: ''\n          external_url: https://example.com\n          html_url: https://github.com/apps/octoapp\n          created_at: '2017-07-08T16:18:44-04:00'\n          updated_at: '2017-07-08T16:18:44-04:00'\n          permissions:\n            metadata: read\n            contents: read\n            issues: write\n            single_file: write\n          events:\n            - push\n            - pull_request\n        repository:\n          id: 1296269\n          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n          name: Hello-World\n          full_name: octocat/Hello-World\n          template_repository:\n            id: 1296269\n            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n            name: Hello-World-Template\n            full_name: octocat/Hello-World-Template\n            owner:\n              login: octocat\n              id: 1\n              node_id: MDQ6VXNlcjE=\n              avatar_url: https://github.com/images/error/octocat_happy.gif\n              gravatar_id: ''\n              url: https://api.github.com/users/octocat\n              html_url: https://github.com/octocat\n              followers_url: https://api.github.com/users/octocat/followers\n              following_url: https://api.github.com/users/octocat/following{/other_user}\n              gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/octocat/subscriptions\n              organizations_url: https://api.github.com/users/octocat/orgs\n              repos_url: https://api.github.com/users/octocat/repos\n              events_url: https://api.github.com/users/octocat/events{/privacy}\n              received_events_url: https://api.github.com/users/octocat/received_events\n              type: User\n              site_admin: false\n            private: false\n            html_url: https://github.com/octocat/Hello-World-Template\n            description: This your first repo!\n            fork: false\n            url: https://api.github.com/repos/octocat/Hello-World-Template\n            archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}\n            assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}\n            blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}\n            branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}\n            collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}\n            comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}\n            commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}\n            compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}\n            contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}\n            contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors\n            deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments\n            downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads\n            events_url: https://api.github.com/repos/octocat/Hello-World-Template/events\n            forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks\n            git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}\n            git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}\n            git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}\n            git_url: git:github.com/octocat/Hello-World-Template.git\n            issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}\n            issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}\n            issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}\n            keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}\n            labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}\n            languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages\n            merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges\n            milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}\n            notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}\n            pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}\n            releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}\n            ssh_url: git@github.com:octocat/Hello-World-Template.git\n            stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers\n            statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}\n            subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers\n            subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription\n            tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags\n            teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams\n            trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}\n            clone_url: https://github.com/octocat/Hello-World-Template.git\n            mirror_url: git:git.example.com/octocat/Hello-World-Template\n            hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks\n            svn_url: https://svn.github.com/octocat/Hello-World-Template\n            homepage: https://github.com\n            language: null\n            forks: 9\n            forks_count: 9\n            stargazers_count: 80\n            watchers_count: 80\n            watchers: 80\n            size: 108\n            default_branch: master\n            open_issues: 0\n            open_issues_count: 0\n            is_template: true\n            license:\n              key: mit\n              name: MIT License\n              url: https://api.github.com/licenses/mit\n              spdx_id: MIT\n              node_id: MDc6TGljZW5zZW1pdA==\n              html_url: https://api.github.com/licenses/mit\n            topics:\n              - octocat\n              - atom\n              - electron\n              - api\n            has_issues: true\n            has_projects: true\n            has_wiki: true\n            has_pages: false\n            has_downloads: true\n            archived: false\n            disabled: false\n            visibility: public\n            pushed_at: '2011-01-26T19:06:43Z'\n            created_at: '2011-01-26T19:01:12Z'\n            updated_at: '2011-01-26T19:14:43Z'\n            permissions:\n              admin: false\n              push: false\n              pull: true\n            allow_rebase_merge: true\n            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O\n            allow_squash_merge: true\n            allow_auto_merge: false\n            delete_branch_on_merge: true\n            allow_merge_commit: true\n            subscribers_count: 42\n            network_count: 0\n          owner:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          private: false\n          html_url: https://github.com/octocat/Hello-World\n          description: This your first repo!\n          fork: false\n          url: https://api.github.com/repos/octocat/Hello-World\n          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n          events_url: https://api.github.com/repos/octocat/Hello-World/events\n          forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n          git_url: git:github.com/octocat/Hello-World.git\n          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n          languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n          merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n          ssh_url: git@github.com:octocat/Hello-World.git\n          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n          tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n          teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n          clone_url: https://github.com/octocat/Hello-World.git\n          mirror_url: git:git.example.com/octocat/Hello-World\n          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks\n          svn_url: https://svn.github.com/octocat/Hello-World\n          homepage: https://github.com\n          language: null\n          forks_count: 9\n          stargazers_count: 80\n          watchers_count: 80\n          size: 108\n          default_branch: master\n          open_issues_count: 0\n          is_template: false\n          topics:\n            - octocat\n            - atom\n            - electron\n            - api\n          has_issues: true\n          has_projects: true\n          has_wiki: true\n          has_pages: false\n          has_downloads: true\n          archived: false\n          disabled: false\n          visibility: public\n          pushed_at: '2011-01-26T19:06:43Z'\n          created_at: '2011-01-26T19:01:12Z'\n          updated_at: '2011-01-26T19:14:43Z'\n          permissions:\n            admin: false\n            push: false\n            pull: true\n          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O\n          delete_branch_on_merge: true\n          subscribers_count: 42\n          network_count: 0\n        head_commit:\n          id: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\n          tree_id: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\n          message: |-\n            Merge pull request #6 from Spaceghost/patch-1\n\n            New line at end of file.\n          timestamp: '2016-10-10T00:00:00Z'\n          author:\n            name: The Octocat\n            email: octocat@nowhere.com\n          committer:\n            name: The Octocat\n            email: octocat@nowhere.com\n        latest_check_runs_count: 1\n        check_runs_url: https://api.github.com/repos/octocat/Hello-World/check-suites/5/check-runs\n    check-suite-preference:\n      value:\n        preferences:\n          auto_trigger_checks:\n            - app_id: 2\n              setting: true\n            - app_id: 4\n              setting: false\n        repository:\n          id: 1296269\n          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n          name: Hello-World\n          full_name: octocat/Hello-World\n          owner:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          private: false\n          html_url: https://github.com/octocat/Hello-World\n          description: This your first repo!\n          fork: false\n          url: https://api.github.com/repos/octocat/Hello-World\n          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n          events_url: https://api.github.com/repos/octocat/Hello-World/events\n          forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n          git_url: git:github.com/octocat/Hello-World.git\n          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n          languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n          merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n          ssh_url: git@github.com:octocat/Hello-World.git\n          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n          tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n          teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n          clone_url: https://github.com/octocat/Hello-World.git\n          mirror_url: git:git.example.com/octocat/Hello-World\n          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks\n          svn_url: https://svn.github.com/octocat/Hello-World\n          homepage: https://github.com\n          language: null\n          forks_count: 9\n          stargazers_count: 80\n          watchers_count: 80\n          size: 108\n          default_branch: master\n          open_issues_count: 0\n          is_template: false\n          topics:\n            - octocat\n            - atom\n            - electron\n            - api\n          has_issues: true\n          has_projects: true\n          has_wiki: true\n          has_pages: false\n          has_downloads: true\n          archived: false\n          disabled: false\n          visibility: public\n          pushed_at: '2011-01-26T19:06:43Z'\n          created_at: '2011-01-26T19:01:12Z'\n          updated_at: '2011-01-26T19:14:43Z'\n          permissions:\n            admin: false\n            push: false\n            pull: true\n          template_repository:\n            id: 1296269\n            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n            name: Hello-World-Template\n            full_name: octocat/Hello-World-Template\n            owner:\n              login: octocat\n              id: 1\n              node_id: MDQ6VXNlcjE=\n              avatar_url: https://github.com/images/error/octocat_happy.gif\n              gravatar_id: ''\n              url: https://api.github.com/users/octocat\n              html_url: https://github.com/octocat\n              followers_url: https://api.github.com/users/octocat/followers\n              following_url: https://api.github.com/users/octocat/following{/other_user}\n              gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/octocat/subscriptions\n              organizations_url: https://api.github.com/users/octocat/orgs\n              repos_url: https://api.github.com/users/octocat/repos\n              events_url: https://api.github.com/users/octocat/events{/privacy}\n              received_events_url: https://api.github.com/users/octocat/received_events\n              type: User\n              site_admin: false\n            private: false\n            html_url: https://github.com/octocat/Hello-World-Template\n            description: This your first repo!\n            fork: false\n            url: https://api.github.com/repos/octocat/Hello-World-Template\n            archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}\n            assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}\n            blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}\n            branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}\n            collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}\n            comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}\n            commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}\n            compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}\n            contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}\n            contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors\n            deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments\n            downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads\n            events_url: https://api.github.com/repos/octocat/Hello-World-Template/events\n            forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks\n            git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}\n            git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}\n            git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}\n            git_url: git:github.com/octocat/Hello-World-Template.git\n            issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}\n            issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}\n            issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}\n            keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}\n            labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}\n            languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages\n            merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges\n            milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}\n            notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}\n            pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}\n            releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}\n            ssh_url: git@github.com:octocat/Hello-World-Template.git\n            stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers\n            statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}\n            subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers\n            subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription\n            tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags\n            teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams\n            trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}\n            clone_url: https://github.com/octocat/Hello-World-Template.git\n            mirror_url: git:git.example.com/octocat/Hello-World-Template\n            hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks\n            svn_url: https://svn.github.com/octocat/Hello-World-Template\n            homepage: https://github.com\n            language: null\n            forks: 9\n            forks_count: 9\n            stargazers_count: 80\n            watchers_count: 80\n            watchers: 80\n            size: 108\n            default_branch: master\n            open_issues: 0\n            open_issues_count: 0\n            is_template: true\n            license:\n              key: mit\n              name: MIT License\n              url: https://api.github.com/licenses/mit\n              spdx_id: MIT\n              node_id: MDc6TGljZW5zZW1pdA==\n              html_url: https://api.github.com/licenses/mit\n            topics:\n              - octocat\n              - atom\n              - electron\n              - api\n            has_issues: true\n            has_projects: true\n            has_wiki: true\n            has_pages: false\n            has_downloads: true\n            archived: false\n            disabled: false\n            visibility: public\n            pushed_at: '2011-01-26T19:06:43Z'\n            created_at: '2011-01-26T19:01:12Z'\n            updated_at: '2011-01-26T19:14:43Z'\n            permissions:\n              admin: false\n              push: false\n              pull: true\n            allow_rebase_merge: true\n            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O\n            allow_squash_merge: true\n            allow_auto_merge: false\n            delete_branch_on_merge: true\n            allow_merge_commit: true\n            subscribers_count: 42\n            network_count: 0\n    check-run-paginated:\n      value:\n        total_count: 1\n        check_runs:\n          - id: 4\n            head_sha: ce587453ced02b1526dfb4cb910479d431683101\n            node_id: MDg6Q2hlY2tSdW40\n            external_id: ''\n            url: https://api.github.com/repos/github/hello-world/check-runs/4\n            html_url: https://github.com/github/hello-world/runs/4\n            details_url: https://example.com\n            status: completed\n            conclusion: neutral\n            started_at: '2018-05-04T01:14:52Z'\n            completed_at: '2018-05-04T01:14:52Z'\n            output:\n              title: Mighty Readme report\n              summary: There are 0 failures, 2 warnings, and 1 notice.\n              text: You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.\n              annotations_count: 2\n              annotations_url: https://api.github.com/repos/github/hello-world/check-runs/4/annotations\n            name: mighty_readme\n            check_suite:\n              id: 5\n            app:\n              id: 1\n              slug: octoapp\n              node_id: MDExOkludGVncmF0aW9uMQ==\n              owner:\n                login: github\n                id: 1\n                node_id: MDEyOk9yZ2FuaXphdGlvbjE=\n                url: https://api.github.com/orgs/github\n                repos_url: https://api.github.com/orgs/github/repos\n                events_url: https://api.github.com/orgs/github/events\n                avatar_url: https://github.com/images/error/octocat_happy.gif\n                gravatar_id: ''\n                html_url: https://github.com/octocat\n                followers_url: https://api.github.com/users/octocat/followers\n                following_url: https://api.github.com/users/octocat/following{/other_user}\n                gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n                subscriptions_url: https://api.github.com/users/octocat/subscriptions\n                organizations_url: https://api.github.com/users/octocat/orgs\n                received_events_url: https://api.github.com/users/octocat/received_events\n                type: User\n                site_admin: true\n              name: Octocat App\n              description: ''\n              external_url: https://example.com\n              html_url: https://github.com/apps/octoapp\n              created_at: '2017-07-08T16:18:44-04:00'\n              updated_at: '2017-07-08T16:18:44-04:00'\n              permissions:\n                metadata: read\n                contents: read\n                issues: write\n                single_file: write\n              events:\n                - push\n                - pull_request\n            pull_requests:\n              - url: https://api.github.com/repos/github/hello-world/pulls/1\n                id: 1934\n                number: 3956\n                head:\n                  ref: say-hello\n                  sha: 3dca65fa3e8d4b3da3f3d056c59aee1c50f41390\n                  repo:\n                    id: 526\n                    url: https://api.github.com/repos/github/hello-world\n                    name: hello-world\n                base:\n                  ref: master\n                  sha: e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f\n                  repo:\n                    id: 526\n                    url: https://api.github.com/repos/github/hello-world\n                    name: hello-world\n    check-suite-paginated:\n      value:\n        total_count: 1\n        check_suites:\n          - id: 5\n            node_id: MDEwOkNoZWNrU3VpdGU1\n            head_branch: master\n            head_sha: d6fde92930d4715a2b49857d24b940956b26d2d3\n            status: completed\n            conclusion: neutral\n            url: https://api.github.com/repos/github/hello-world/check-suites/5\n            before: 146e867f55c26428e5f9fade55a9bbf5e95a7912\n            after: d6fde92930d4715a2b49857d24b940956b26d2d3\n            pull_requests: []\n            app:\n              id: 1\n              slug: octoapp\n              node_id: MDExOkludGVncmF0aW9uMQ==\n              owner:\n                login: github\n                id: 1\n                node_id: MDEyOk9yZ2FuaXphdGlvbjE=\n                url: https://api.github.com/orgs/github\n                repos_url: https://api.github.com/orgs/github/repos\n                events_url: https://api.github.com/orgs/github/events\n                avatar_url: https://github.com/images/error/octocat_happy.gif\n                gravatar_id: ''\n                html_url: https://github.com/octocat\n                followers_url: https://api.github.com/users/octocat/followers\n                following_url: https://api.github.com/users/octocat/following{/other_user}\n                gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n                subscriptions_url: https://api.github.com/users/octocat/subscriptions\n                organizations_url: https://api.github.com/users/octocat/orgs\n                received_events_url: https://api.github.com/users/octocat/received_events\n                type: User\n                site_admin: true\n              name: Octocat App\n              description: ''\n              external_url: https://example.com\n              html_url: https://github.com/apps/octoapp\n              created_at: '2017-07-08T16:18:44-04:00'\n              updated_at: '2017-07-08T16:18:44-04:00'\n              permissions:\n                metadata: read\n                contents: read\n                issues: write\n                single_file: write\n              events:\n                - push\n                - pull_request\n            repository:\n              id: 1296269\n              node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n              name: Hello-World\n              full_name: octocat/Hello-World\n              owner:\n                login: octocat\n                id: 1\n                node_id: MDQ6VXNlcjE=\n                avatar_url: https://github.com/images/error/octocat_happy.gif\n                gravatar_id: ''\n                url: https://api.github.com/users/octocat\n                html_url: https://github.com/octocat\n                followers_url: https://api.github.com/users/octocat/followers\n                following_url: https://api.github.com/users/octocat/following{/other_user}\n                gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n                subscriptions_url: https://api.github.com/users/octocat/subscriptions\n                organizations_url: https://api.github.com/users/octocat/orgs\n                repos_url: https://api.github.com/users/octocat/repos\n                events_url: https://api.github.com/users/octocat/events{/privacy}\n                received_events_url: https://api.github.com/users/octocat/received_events\n                type: User\n                site_admin: false\n              private: false\n              html_url: https://github.com/octocat/Hello-World\n              description: This your first repo!\n              fork: false\n              url: https://api.github.com/repos/octocat/Hello-World\n              archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n              assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n              blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n              branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n              collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n              comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n              commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n              compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n              contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n              contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n              deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n              downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n              events_url: https://api.github.com/repos/octocat/Hello-World/events\n              forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n              git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n              git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n              git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n              git_url: git:github.com/octocat/Hello-World.git\n              issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n              issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n              issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n              keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n              labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n              languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n              merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n              milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n              notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n              pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n              releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n              ssh_url: git@github.com:octocat/Hello-World.git\n              stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n              statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n              subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n              subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n              tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n              teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n              trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n              clone_url: https://github.com/octocat/Hello-World.git\n              mirror_url: git:git.example.com/octocat/Hello-World\n              hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks\n              svn_url: https://svn.github.com/octocat/Hello-World\n              homepage: https://github.com\n              language: null\n              forks_count: 9\n              stargazers_count: 80\n              watchers_count: 80\n              size: 108\n              default_branch: master\n              open_issues_count: 0\n              is_template: true\n              topics:\n                - octocat\n                - atom\n                - electron\n                - api\n              has_issues: true\n              has_projects: true\n              has_wiki: true\n              has_pages: false\n              has_downloads: true\n              archived: false\n              disabled: false\n              visibility: public\n              pushed_at: '2011-01-26T19:06:43Z'\n              created_at: '2011-01-26T19:01:12Z'\n              updated_at: '2011-01-26T19:14:43Z'\n              permissions:\n                admin: false\n                push: false\n                pull: true\n              temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O\n              delete_branch_on_merge: true\n              subscribers_count: 42\n              network_count: 0\n            created_at: '2011-01-26T19:01:12Z'\n            updated_at: '2011-01-26T19:14:43Z'\n            head_commit:\n              id: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\n              tree_id: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\n              message: |-\n                Merge pull request #6 from Spaceghost/patch-1\n\n                New line at end of file.\n              timestamp: '2016-10-10T00:00:00Z'\n              author:\n                name: The Octocat\n                email: octocat@nowhere.com\n              committer:\n                name: The Octocat\n                email: octocat@nowhere.com\n            latest_check_runs_count: 1\n            check_runs_url: https://api.github.com/repos/octocat/Hello-World/check-suites/5/check-runs\n  requestBodies: {}\n  headers:\n    link:\n      example: \u003chttps://api.github.com/resource?page=2\u003e; rel=\"next\", \u003chttps://api.github.com/resource?page=5\u003e; rel=\"last\"\n      schema:\n        type: string\n  links: {}\n  x-stackQL-resources:\n    runs:\n      id: github.checks_repos.runs\n      name: runs\n      title: runs\n      methods:\n        create:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1check-runs/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        get:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1check-runs~1{check_run_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1check-runs~1{check_run_id}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list_annotations:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1check-runs~1{check_run_id}~1annotations/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        rerequest_run:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1check-runs~1{check_run_id}~1rerequest/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        list_for_suite:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1check-suites~1{check_suite_id}~1check-runs/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list_for_ref:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1commits~1{ref}~1check-runs/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/runs/methods/get'\n          - $ref: '#/components/x-stackQL-resources/runs/methods/list_for_suite'\n          - $ref: '#/components/x-stackQL-resources/runs/methods/list_for_ref'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/runs/methods/create'\n        update: []\n        delete: []\n    suites:\n      id: github.checks_repos.suites\n      name: suites\n      title: suites\n      methods:\n        create_suite:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1check-suites/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        set_suites_preferences:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1check-suites~1preferences/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_suite:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1check-suites~1{check_suite_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        rerequest_suite:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1check-suites~1{check_suite_id}~1rerequest/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        list_suites_for_ref:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1commits~1{ref}~1check-suites/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/suites/methods/get_suite'\n          - $ref: '#/components/x-stackQL-resources/suites/methods/list_suites_for_ref'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/suites/methods/create_suite'\n        update: []\n        delete: []\nopenapi: 3.0.3\nservers:\n  - url: https://api.github.com\ntags:\n  - name: actions\n    description: Endpoints to manage GitHub Actions using the REST API.\n  - name: activity\n    description: Activity APIs provide access to notifications, subscriptions, and timelines.\n  - name: apps\n    description: Information for integrations and installations.\n  - name: billing\n    description: Monitor charges and usage from Actions and Packages.\n  - name: checks\n    description: Rich interactions with checks run by your integrations.\n  - name: code-scanning\n    description: Retrieve code scanning alerts from a repository.\n  - name: codes-of-conduct\n    description: Insight into codes of conduct for your communities.\n  - name: codespaces\n    description: Endpoints to manage Codespaces using the REST API.\n  - name: emojis\n    description: List emojis available to use on GitHub.\n  - name: enterprise-admin\n    description: Administer a GitHub enterprise.\n  - name: dependabot\n    description: Endpoints to manage Dependabot.\n  - name: gists\n    description: View, modify your gists.\n  - name: git\n    description: Raw Git functionality.\n  - name: gitignore\n    description: View gitignore templates\n  - name: interactions\n    description: Owner or admin management of users interactions.\n  - name: issues\n    description: Interact with GitHub Issues.\n  - name: licenses\n    description: View various OSS licenses.\n  - name: markdown\n    description: Render GitHub flavored markdown\n  - name: meta\n    description: Endpoints that give information about the API.\n  - name: migrations\n    description: Move projects to or from GitHub.\n  - name: oauth-authorizations\n    description: Manage access of OAuth applications\n  - name: orgs\n    description: Interact with GitHub Orgs.\n  - name: packages\n    description: Manage packages for authenticated users and organizations.\n  - name: projects\n    description: Interact with GitHub Projects.\n  - name: pulls\n    description: Interact with GitHub Pull Requests.\n  - name: rate-limit\n    description: Check your current rate limit status\n  - name: reactions\n    description: Interact with reactions to various GitHub entities.\n  - name: repos\n    description: Interact with GitHub Repos.\n  - name: scim\n    description: Provisioning of GitHub organization membership for SCIM-enabled providers.\n  - name: search\n    description: Look for stuff on GitHub.\n  - name: secret-scanning\n    description: Retrieve secret scanning alerts from a repository.\n  - name: server-statistics\n    description: GHES statistics\n  - name: teams\n    description: Interact with GitHub Teams.\n  - name: users\n    description: Interact with and view information about users and also current user.\nexternalDocs:\n  description: GitHub v3 REST API\n  url: https://docs.github.com/rest/\ninfo:\n  version: 1.1.4\n  title: GitHub v3 REST API - checks_repos\n  description: Rich interactions with checks run by your integrations.\n  license:\n    name: MIT\n    url: https://spdx.org/licenses/MIT\n  termsOfService: https://docs.github.com/articles/github-terms-of-service\n  contact:\n    name: Support\n    url: https://support.github.com/contact?tags=dotcom-rest-api\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/github/v0.1.0/services/checks_repos.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/github/v0.1.0/services/checks_repos.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/repos/{owner}/{repo}/check-runs\": post: requestBody: contents: application/json: generate schema: oneOf: oneOf ChecksCreateReq: variant ChecksCreateReq1: no unique fields, unable to parse without discriminator: discriminator inference not implemented",
	"NotImplemented": [
		"complex anyOf",
		"discriminator inference"
	]
}