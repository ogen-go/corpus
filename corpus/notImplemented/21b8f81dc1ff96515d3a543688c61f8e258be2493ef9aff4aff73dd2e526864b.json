{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/codingsoo/REST_Go"
		},
		"file": {
			"name": "market_openapi.yaml",
			"size": 0,
			"path": "doc/market_openapi.yaml",
			"byteSize": 16215,
			"content": "openapi: 3.0.1\ninfo:\n  title: Api Documentation\n  description: Api Documentation\n  termsOfService: urn:tos\n  contact: {}\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0\n  version: \"1.0\"\nservers:\n- url: http://localhost:50117/\ntags:\n- name: cart-rest-controller\n  description: Cart Rest Controller\n- name: contacts-rest-controller\n  description: Contacts Rest Controller\n- name: customer-rest-controller\n  description: Customer Rest Controller\n- name: orders-rest-controller\n  description: Orders Rest Controller\n- name: products-rest-controller\n  description: Products Rest Controller\npaths:\n  /customer:\n    get:\n      tags:\n      - customer-rest-controller\n      summary: getCustomer\n      operationId: getCustomerUsingGET\n      parameters:\n      - name: name\n        in: query\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/UserDTORes'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /customer/cart:\n    get:\n      tags:\n      - cart-rest-controller\n      summary: getCart\n      operationId: getCartUsingGET\n      parameters:\n      - name: name\n        in: query\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/CartDTO'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n    put:\n      tags:\n      - cart-rest-controller\n      summary: addItem\n      operationId: addItemUsingPUT\n      parameters:\n      - name: name\n        in: query\n        schema:\n          type: string\n      requestBody:\n        description: item\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CartItemDTOReq'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/CartDTO'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: item\n    delete:\n      tags:\n      - cart-rest-controller\n      summary: clearCart\n      operationId: clearCartUsingDELETE\n      parameters:\n      - name: name\n        in: query\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/CartDTO'\n        204:\n          description: No Content\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n  /customer/cart/delivery:\n    put:\n      tags:\n      - cart-rest-controller\n      summary: setDelivery\n      operationId: setDeliveryUsingPUT\n      parameters:\n      - name: included\n        in: query\n        description: included\n        required: true\n        schema:\n          type: boolean\n        example: true\n      - name: name\n        in: query\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/CartDTO'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /customer/cart/pay:\n    post:\n      tags:\n      - cart-rest-controller\n      summary: payByCard\n      operationId: payByCardUsingPOST\n      parameters:\n      - name: name\n        in: query\n        schema:\n          type: string\n      requestBody:\n        description: card\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreditCardDTO'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/OrderDTO'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: card\n  /customer/contacts:\n    get:\n      tags:\n      - contacts-rest-controller\n      summary: getContacts\n      operationId: getContactsUsingGET\n      parameters:\n      - name: name\n        in: query\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ContactsDTORes'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n    put:\n      tags:\n      - contacts-rest-controller\n      summary: updateContacts\n      operationId: updateContactsUsingPUT\n      parameters:\n      - name: name\n        in: query\n        schema:\n          type: string\n      requestBody:\n        description: contactsDto\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContactsDTOReq'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ContactsDTORes'\n        201:\n          description: Created\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: contactsDto\n  /customer/orders:\n    get:\n      tags:\n      - orders-rest-controller\n      summary: getOrders\n      operationId: getOrdersUsingGET\n      parameters:\n      - name: name\n        in: query\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OrderDTO'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /customer/orders/{orderId}:\n    get:\n      tags:\n      - orders-rest-controller\n      summary: getOrder\n      operationId: getOrderUsingGET\n      parameters:\n      - name: name\n        in: query\n        schema:\n          type: string\n      - name: orderId\n        in: path\n        description: orderId\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/OrderDTO'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /products:\n    get:\n      tags:\n      - products-rest-controller\n      summary: getProducts\n      operationId: getProductsUsingGET\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ProductDTO'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /products/{productId}:\n    get:\n      tags:\n      - products-rest-controller\n      summary: getProduct\n      operationId: getProductUsingGET\n      parameters:\n      - name: productId\n        in: path\n        description: productId\n        required: true\n        schema:\n          type: integer\n          format: int64\n        example: 123\n      responses:\n        200:\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ProductDTO'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n  /register:\n    post:\n      tags:\n      - customer-rest-controller\n      summary: createCustomer\n      operationId: createCustomerUsingPOST\n      requestBody:\n        description: user\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserDTOReq'\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/UserDTORes'\n        401:\n          description: Unauthorized\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      x-codegen-request-body-name: user\ncomponents:\n  schemas:\n    CartDTO:\n      title: CartDTO\n      type: object\n      properties:\n        _links:\n          $ref: '#/components/schemas/Links'\n        cartItems:\n          type: array\n          items:\n            $ref: '#/components/schemas/CartItemDTORes'\n        deliveryCost:\n          type: integer\n          format: int32\n        deliveryIncluded:\n          type: boolean\n        empty:\n          type: boolean\n        productsCost:\n          type: number\n          format: double\n        totalCost:\n          type: number\n          format: double\n        totalItems:\n          type: integer\n          format: int32\n        user:\n          type: string\n    CartItemDTOReq:\n      title: CartItemDTOReq\n      type: object\n      properties:\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n        productId:\n          type: integer\n          format: int64\n        quantity:\n          type: integer\n          format: int32\n    CartItemDTORes:\n      title: CartItemDTORes\n      type: object\n      properties:\n        _links:\n          $ref: '#/components/schemas/Links'\n        productId:\n          type: integer\n          format: int64\n        quantity:\n          type: integer\n          format: int32\n    ContactsDTOReq:\n      title: ContactsDTOReq\n      type: object\n      properties:\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n        address:\n          maxLength: 100\n          minLength: 0\n          pattern: ^[^#$%^*()']*$\n          type: string\n        phone:\n          maxLength: 20\n          minLength: 0\n          pattern: ^\\+[1-9][0-9]?[\\s]*\\(?\\d{3}\\)?[-\\s]?\\d{3}[-\\s]?\\d{2}[-\\s]?\\d{2}$\n          type: string\n    ContactsDTORes:\n      title: ContactsDTORes\n      type: object\n      properties:\n        _links:\n          $ref: '#/components/schemas/Links'\n        address:\n          maxLength: 100\n          minLength: 0\n          pattern: ^[^#$%^*()']*$\n          type: string\n        phone:\n          maxLength: 20\n          minLength: 0\n          pattern: ^\\+[1-9][0-9]?[\\s]*\\(?\\d{3}\\)?[-\\s]?\\d{3}[-\\s]?\\d{2}[-\\s]?\\d{2}$\n          type: string\n    CreditCardDTO:\n      title: CreditCardDTO\n      type: object\n      properties:\n        ccNumber:\n          pattern: \\b(?:\\d[ -]*?){13,16}\\b\n          type: string\n    Link:\n      title: Link\n      type: object\n      properties:\n        deprecation:\n          type: string\n        href:\n          type: string\n        hreflang:\n          type: string\n        media:\n          type: string\n        name:\n          type: string\n        profile:\n          type: string\n        rel:\n          $ref: '#/components/schemas/LinkRelation'\n        title:\n          type: string\n        type:\n          type: string\n    LinkRelation:\n      title: LinkRelation\n      type: object\n    Links:\n      title: Links\n      type: object\n      properties:\n        empty:\n          type: boolean\n    OrderDTO:\n      title: OrderDTO\n      type: object\n      properties:\n        _links:\n          $ref: '#/components/schemas/Links'\n        billNumber:\n          type: integer\n          format: int32\n        dateCreated:\n          type: string\n          format: date-time\n        deliveryCost:\n          type: integer\n          format: int32\n        deliveryIncluded:\n          type: boolean\n        executed:\n          type: boolean\n        id:\n          type: integer\n          format: int64\n        payed:\n          type: boolean\n        productsCost:\n          type: number\n          format: double\n        totalCost:\n          type: number\n          format: double\n        userAccount:\n          type: string\n    ProductDTO:\n      title: ProductDTO\n      required:\n      - alcohol\n      - price\n      - volume\n      type: object\n      properties:\n        _links:\n          $ref: '#/components/schemas/Links'\n        age:\n          maximum: 2E+3\n          exclusiveMaximum: false\n          type: integer\n          format: int32\n        alcohol:\n          maximum: 96\n          exclusiveMaximum: false\n          minimum: 1\n          exclusiveMinimum: false\n          type: number\n          format: float\n        available:\n          type: boolean\n        description:\n          type: string\n        distillery:\n          type: string\n        name:\n          pattern: ^[^#$%^\u0026*()']*$\n          type: string\n        price:\n          type: number\n          format: double\n        productId:\n          type: integer\n          format: int64\n        volume:\n          type: integer\n          format: int32\n    UserDTOReq:\n      title: UserDTOReq\n      type: object\n      properties:\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n        address:\n          maxLength: 100\n          minLength: 0\n          pattern: ^[^#$%^*()']*$\n          type: string\n        email:\n          maxLength: 50\n          minLength: 0\n          pattern: ^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]+$\n          type: string\n        name:\n          maxLength: 50\n          minLength: 0\n          pattern: ^[\\pL '-]+$\n          type: string\n        password:\n          maxLength: 50\n          minLength: 6\n          pattern: ^[a-zA-Z0-9]+$\n          type: string\n        phone:\n          maxLength: 20\n          minLength: 0\n          pattern: ^\\+[1-9][0-9]?[\\s]*\\(?\\d{3}\\)?[-\\s]?\\d{3}[-\\s]?\\d{2}[-\\s]?\\d{2}$\n          type: string\n    UserDTORes:\n      title: UserDTORes\n      type: object\n      properties:\n        _links:\n          $ref: '#/components/schemas/Links'\n        address:\n          maxLength: 100\n          minLength: 0\n          pattern: ^[^#$%^*()']*$\n          type: string\n        email:\n          maxLength: 50\n          minLength: 0\n          pattern: ^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]+$\n          type: string\n        name:\n          maxLength: 50\n          minLength: 0\n          pattern: ^[\\pL '-]+$\n          type: string\n        password:\n          maxLength: 50\n          minLength: 6\n          pattern: ^[a-zA-Z0-9]+$\n          type: string\n        phone:\n          maxLength: 20\n          minLength: 0\n          pattern: ^\\+[1-9][0-9]?[\\s]*\\(?\\d{3}\\)?[-\\s]?\\d{3}[-\\s]?\\d{2}[-\\s]?\\d{2}$\n          type: string\n",
			"canonicalURL": "/github.com/codingsoo/REST_Go@ed67007a3d9cc852de4c47d395991f602a381c67/-/blob/doc/market_openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/codingsoo/REST_Go/blob/ed67007a3d9cc852de4c47d395991f602a381c67/doc/market_openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/customer/orders\": get: responses: 200: contents: unsupported content types: [*/*]",
	"NotImplemented": [
		"unsupported content types"
	]
}