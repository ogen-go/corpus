{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "repos.yaml",
			"size": 0,
			"path": "providers/src/github/v0.1.0/services/repos.yaml",
			"byteSize": 829943,
			"content": "paths:\n  /repos/{owner}/{repo}:\n    get:\n      summary: Get a repository\n      description: The `parent` and `source` objects are present when the repository is a fork. `parent` is the repository this repository was forked from, `source` is the ultimate source for the network.\n      tags:\n        - repos\n      operationId: repos/get\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-a-repository\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/full-repository'\n              examples:\n                default-response:\n                  $ref: '#/components/examples/full-repository-default-response'\n        '301':\n          $ref: '#/components/responses/moved_permanently'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: null\n    patch:\n      summary: Update a repository\n      description: '**Note**: To edit a repository''s topics, use the [Replace all repository topics](https://docs.github.com/rest/reference/repos#replace-all-repository-topics) endpoint.'\n      tags:\n        - repos\n      operationId: repos/update\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos/#update-a-repository\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: The name of the repository.\n                description:\n                  type: string\n                  description: A short description of the repository.\n                homepage:\n                  type: string\n                  description: A URL with more information about the repository.\n                private:\n                  type: boolean\n                  description: |-\n                    Either `true` to make the repository private or `false` to make it public. Default: `false`.  \n                    **Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://docs.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private. **Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://docs.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private.\n                  default: false\n                visibility:\n                  type: string\n                  description: Can be `public` or `private`. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, `visibility` can also be `internal`.\"\n                  enum:\n                    - public\n                    - private\n                    - internal\n                security_and_analysis:\n                  type: object\n                  description: 'Specify which security and analysis features to enable or disable. For example, to enable GitHub Advanced Security, use this data in the body of the PATCH request: `{\"security_and_analysis\": {\"advanced_security\": {\"status\": \"enabled\"}}}`. If you have admin permissions for a private repository covered by an Advanced Security license, you can check which security and analysis features are currently enabled by using a `GET /repos/{owner}/{repo}` request.'\n                  nullable: true\n                  properties:\n                    advanced_security:\n                      type: object\n                      description: Use the `status` property to enable or disable GitHub Advanced Security for this repository. For more information, see \"[About GitHub Advanced Security](/github/getting-started-with-github/learning-about-github/about-github-advanced-security).\"\n                      properties:\n                        status:\n                          type: string\n                          description: Can be `enabled` or `disabled`.\n                    secret_scanning:\n                      type: object\n                      description: Use the `status` property to enable or disable secret scanning for this repository. For more information, see \"[About secret scanning](/code-security/secret-security/about-secret-scanning).\"\n                      properties:\n                        status:\n                          type: string\n                          description: Can be `enabled` or `disabled`.\n                has_issues:\n                  type: boolean\n                  description: Either `true` to enable issues for this repository or `false` to disable them.\n                  default: true\n                has_projects:\n                  type: boolean\n                  description: Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.\n                  default: true\n                has_wiki:\n                  type: boolean\n                  description: Either `true` to enable the wiki for this repository or `false` to disable it.\n                  default: true\n                is_template:\n                  type: boolean\n                  description: Either `true` to make this repo available as a template repository or `false` to prevent it.\n                  default: false\n                default_branch:\n                  type: string\n                  description: Updates the default branch for this repository.\n                allow_squash_merge:\n                  type: boolean\n                  description: Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.\n                  default: true\n                allow_merge_commit:\n                  type: boolean\n                  description: Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.\n                  default: true\n                allow_rebase_merge:\n                  type: boolean\n                  description: Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.\n                  default: true\n                allow_auto_merge:\n                  type: boolean\n                  description: Either `true` to allow auto-merge on pull requests, or `false` to disallow auto-merge.\n                  default: false\n                delete_branch_on_merge:\n                  type: boolean\n                  description: Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automatic deletion.\n                  default: false\n                archived:\n                  type: boolean\n                  description: '`true` to archive this repository. **Note**: You cannot unarchive repositories through the API.'\n                  default: false\n                allow_forking:\n                  type: boolean\n                  description: Either `true` to allow private forks, or `false` to prevent private forks.\n                  default: false\n            example:\n              name: Hello-World\n              description: This is your first repository\n              homepage: https://github.com\n              private: true\n              has_issues: true\n              has_projects: true\n              has_wiki: true\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/full-repository'\n              examples:\n                default:\n                  $ref: '#/components/examples/full-repository'\n        '307':\n          $ref: '#/components/responses/temporary_redirect'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: null\n    delete:\n      summary: Delete a repository\n      description: |-\n        Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.\n\n        If an organization owner has configured the organization to prevent members from deleting organization-owned\n        repositories, you will get a `403 Forbidden` response.\n      tags:\n        - repos\n      operationId: repos/delete\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#delete-a-repository\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '204':\n          description: Response\n        '307':\n          $ref: '#/components/responses/temporary_redirect'\n        '403':\n          description: 'If an organization owner has configured the organization to prevent members from deleting organization-owned repositories, a member will get this response:'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                  documentation_url:\n                    type: string\n              example:\n                message: Organization members cannot delete repositories.\n                documentation_url: https://docs.github.com/rest/reference/repos#delete-a-repository\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: null\n  /repos/{owner}/{repo}/autolinks:\n    get:\n      summary: List all autolinks of a repository\n      description: |-\n        This returns a list of autolinks configured for the given repository.\n\n        Information about autolinks are only available to repository administrators.\n      tags:\n        - repos\n      operationId: repos/list-autolinks\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/v3/repos#list-autolinks\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/autolink'\n              examples:\n                default:\n                  $ref: '#/components/examples/autolink-items'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: autolinks\n    post:\n      summary: Create an autolink reference for a repository\n      description: Users with admin access to the repository can create an autolink.\n      tags:\n        - repos\n      operationId: repos/create-autolink\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/v3/repos#create-an-autolink\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                key_prefix:\n                  type: string\n                  description: The prefix appended by a number will generate a link any time it is found in an issue, pull request, or commit.\n                url_template:\n                  type: string\n                  description: The URL must contain \u003cnum\u003e for the reference number.\n              required:\n                - key_prefix\n                - url_template\n            example:\n              key_prefix: TICKET-\n              url_template: https://example.com/TICKET?query=\u003cnum\u003e\n      responses:\n        '201':\n          description: response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/autolink'\n              examples:\n                default:\n                  $ref: '#/components/examples/autolink'\n          headers:\n            Location:\n              example: https://api.github.com/repos/octocat/Hello-World/autolinks/1\n              schema:\n                type: string\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: autolinks\n  /repos/{owner}/{repo}/autolinks/{autolink_id}:\n    get:\n      summary: Get an autolink reference of a repository\n      description: |-\n        This returns a single autolink reference by ID that was configured for the given repository.\n\n        Information about autolinks are only available to repository administrators.\n      tags:\n        - repos\n      operationId: repos/get-autolink\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/v3/repos#get-autolink\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/autolink-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/autolink'\n              examples:\n                default:\n                  $ref: '#/components/examples/autolink'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: autolinks\n    delete:\n      summary: Delete an autolink reference from a repository\n      description: |-\n        This deletes a single autolink reference by ID that was configured for the given repository.\n\n        Information about autolinks are only available to repository administrators.\n      tags:\n        - repos\n      operationId: repos/delete-autolink\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/v3/repos#delete-autolink\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/autolink-id'\n      responses:\n        '204':\n          description: Response\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: autolinks\n  /repos/{owner}/{repo}/automated-security-fixes:\n    put:\n      summary: Enable automated security fixes\n      description: Enables automated security fixes for a repository. The authenticated user must have admin access to the repository. For more information, see \"[Configuring automated security fixes](https://docs.github.com/en/articles/configuring-automated-security-fixes)\".\n      tags:\n        - repos\n      operationId: repos/enable-automated-security-fixes\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#enable-automated-security-fixes\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: null\n    delete:\n      summary: Disable automated security fixes\n      description: Disables automated security fixes for a repository. The authenticated user must have admin access to the repository. For more information, see \"[Configuring automated security fixes](https://docs.github.com/en/articles/configuring-automated-security-fixes)\".\n      tags:\n        - repos\n      operationId: repos/disable-automated-security-fixes\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#disable-automated-security-fixes\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: null\n  /repos/{owner}/{repo}/branches:\n    get:\n      summary: List branches\n      description: ''\n      tags:\n        - repos\n      operationId: repos/list-branches\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-branches\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: protected\n          description: Setting to `true` returns only protected branches. When set to `false`, only unprotected branches are returned. Omitting this parameter returns all branches.\n          in: query\n          required: false\n          schema:\n            type: boolean\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/short-branch'\n              examples:\n                default:\n                  $ref: '#/components/examples/short-branch-with-protection-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n  /repos/{owner}/{repo}/branches/{branch}:\n    get:\n      summary: Get a branch\n      description: ''\n      tags:\n        - repos\n      operationId: repos/get-branch\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-a-branch\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/branch-with-protection'\n        '301':\n          $ref: '#/components/responses/moved_permanently'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '415':\n          $ref: '#/components/responses/preview_header_missing'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n  /repos/{owner}/{repo}/branches/{branch}/protection:\n    get:\n      summary: Get branch protection\n      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n      tags:\n        - repos\n      operationId: repos/get-branch-protection\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-branch-protection\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/branch-protection'\n              examples:\n                default:\n                  $ref: '#/components/examples/branch-protection'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n    put:\n      summary: Update branch protection\n      description: |-\n        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        Protecting a branch requires admin or owner permissions to the repository.\n\n        **Note**: Passing new arrays of `users` and `teams` replaces their previous values.\n\n        **Note**: The list of users, apps, and teams in total is limited to 100 items.\n      tags:\n        - repos\n      operationId: repos/update-branch-protection\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#update-branch-protection\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                required_status_checks:\n                  type: object\n                  description: Require status checks to pass before merging. Set to `null` to disable.\n                  nullable: true\n                  properties:\n                    strict:\n                      type: boolean\n                      description: Require branches to be up to date before merging.\n                    contexts:\n                      type: array\n                      deprecated: true\n                      description: |\n                        **Deprecated**: The list of status checks to require in order to merge into this branch. If any of these checks have recently been set by a particular GitHub App, they will be required to come from that app in future for the branch to merge. Use `checks` instead of `contexts` for more fine-grained control.\n                      items:\n                        type: string\n                    checks:\n                      type: array\n                      description: The list of status checks to require in order to merge into this branch.\n                      items:\n                        type: object\n                        required:\n                          - context\n                        properties:\n                          context:\n                            type: string\n                            description: The name of the required check\n                          app_id:\n                            type: integer\n                            description: The ID of the GitHub App that must provide this check. Omit this field to automatically select the GitHub App that has recently provided this check, or any app if it was not set by a GitHub App. Pass -1 to explicitly allow any app to set the status.\n                  required:\n                    - strict\n                    - contexts\n                enforce_admins:\n                  type: boolean\n                  description: Enforce all configured restrictions for administrators. Set to `true` to enforce required status checks for repository administrators. Set to `null` to disable.\n                  nullable: true\n                required_pull_request_reviews:\n                  type: object\n                  description: Require at least one approving review on a pull request, before merging. Set to `null` to disable.\n                  nullable: true\n                  properties:\n                    dismissal_restrictions:\n                      type: object\n                      description: Specify which users and teams can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to disable. User and team `dismissal_restrictions` are only available for organization-owned repositories. Omit this parameter for personal repositories.\n                      properties:\n                        users:\n                          type: array\n                          description: The list of user `login`s with dismissal access\n                          items:\n                            type: string\n                        teams:\n                          type: array\n                          description: The list of team `slug`s with dismissal access\n                          items:\n                            type: string\n                    dismiss_stale_reviews:\n                      type: boolean\n                      description: Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.\n                    require_code_owner_reviews:\n                      type: boolean\n                      description: Blocks merging pull requests until [code owners](https://docs.github.com/articles/about-code-owners/) review them.\n                    required_approving_review_count:\n                      type: integer\n                      description: Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6 or 0 to not require reviewers.\n                    bypass_pull_request_allowances:\n                      type: object\n                      description: Allow specific users or teams to bypass pull request requirements. Set to `null` to disable.\n                      nullable: true\n                      properties:\n                        users:\n                          type: array\n                          description: The list of user `login`s allowed to bypass pull request requirements.\n                          items:\n                            type: string\n                        teams:\n                          type: array\n                          description: The list of team `slug`s allowed to bypass pull request requirements.\n                          items:\n                            type: string\n                restrictions:\n                  type: object\n                  description: Restrict who can push to the protected branch. User, app, and team `restrictions` are only available for organization-owned repositories. Set to `null` to disable.\n                  nullable: true\n                  properties:\n                    users:\n                      type: array\n                      description: The list of user `login`s with push access\n                      items:\n                        type: string\n                    teams:\n                      type: array\n                      description: The list of team `slug`s with push access\n                      items:\n                        type: string\n                    apps:\n                      type: array\n                      description: The list of app `slug`s with push access\n                      items:\n                        type: string\n                  required:\n                    - users\n                    - teams\n                required_linear_history:\n                  type: boolean\n                  description: 'Enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch. Set to `true` to enforce a linear commit history. Set to `false` to disable a linear commit Git history. Your repository must allow squash merging or rebase merging before you can enable a linear commit history. Default: `false`. For more information, see \"[Requiring a linear commit history](https://docs.github.com/github/administering-a-repository/requiring-a-linear-commit-history)\" in the GitHub Help documentation.'\n                allow_force_pushes:\n                  type: boolean\n                  description: 'Permits force pushes to the protected branch by anyone with write access to the repository. Set to `true` to allow force pushes. Set to `false` or `null` to block force pushes. Default: `false`. For more information, see \"[Enabling force pushes to a protected branch](https://docs.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)\" in the GitHub Help documentation.\"'\n                  nullable: true\n                allow_deletions:\n                  type: boolean\n                  description: 'Allows deletion of the protected branch by anyone with write access to the repository. Set to `false` to prevent deletion of the protected branch. Default: `false`. For more information, see \"[Enabling force pushes to a protected branch](https://docs.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)\" in the GitHub Help documentation.'\n                required_conversation_resolution:\n                  type: boolean\n                  description: 'Requires all conversations on code to be resolved before a pull request can be merged into a branch that matches this rule. Set to `false` to disable. Default: `false`.'\n              required:\n                - required_status_checks\n                - enforce_admins\n                - required_pull_request_reviews\n                - restrictions\n            example:\n              required_status_checks:\n                strict: true\n                contexts:\n                  - continuous-integration/travis-ci\n              enforce_admins: true\n              required_pull_request_reviews:\n                dismissal_restrictions:\n                  users:\n                    - octocat\n                  teams:\n                    - justice-league\n                dismiss_stale_reviews: true\n                require_code_owner_reviews: true\n                required_approving_review_count: 2\n                bypass_pull_request_allowances:\n                  users:\n                    - octocat\n                  teams:\n                    - justice-league\n              restrictions:\n                users:\n                  - octocat\n                teams:\n                  - justice-league\n                apps:\n                  - super-ci\n              required_linear_history: true\n              allow_force_pushes: true\n              allow_deletions: true\n              required_conversation_resolution: true\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/protected-branch'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed_simple'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n    delete:\n      summary: Delete branch protection\n      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n      tags:\n        - repos\n      operationId: repos/delete-branch-protection\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#delete-branch-protection\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      responses:\n        '204':\n          description: Response\n        '403':\n          $ref: '#/components/responses/forbidden'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n  /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins:\n    get:\n      summary: Get admin branch protection\n      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n      tags:\n        - repos\n      operationId: repos/get-admin-branch-protection\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-admin-branch-protection\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/protected-branch-admin-enforced'\n              examples:\n                default:\n                  $ref: '#/components/examples/protected-branch-admin-enforced-2'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n    post:\n      summary: Set admin branch protection\n      description: |-\n        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        Adding admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.\n      tags:\n        - repos\n      operationId: repos/set-admin-branch-protection\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#set-admin-branch-protection\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/protected-branch-admin-enforced'\n              examples:\n                default:\n                  $ref: '#/components/examples/protected-branch-admin-enforced-2'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n    delete:\n      summary: Delete admin branch protection\n      description: |-\n        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        Removing admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.\n      tags:\n        - repos\n      operationId: repos/delete-admin-branch-protection\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#delete-admin-branch-protection\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      responses:\n        '204':\n          description: Response\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n  /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews:\n    get:\n      summary: Get pull request review protection\n      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n      tags:\n        - repos\n      operationId: repos/get-pull-request-review-protection\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-pull-request-review-protection\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/protected-branch-pull-request-review'\n              examples:\n                default:\n                  $ref: '#/components/examples/protected-branch-pull-request-review'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n    patch:\n      summary: Update pull request review protection\n      description: |-\n        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        Updating pull request review enforcement requires admin or owner permissions to the repository and branch protection to be enabled.\n\n        **Note**: Passing new arrays of `users` and `teams` replaces their previous values.\n      tags:\n        - repos\n      operationId: repos/update-pull-request-review-protection\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#update-pull-request-review-protection\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                dismissal_restrictions:\n                  type: object\n                  description: Specify which users and teams can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to disable. User and team `dismissal_restrictions` are only available for organization-owned repositories. Omit this parameter for personal repositories.\n                  properties:\n                    users:\n                      type: array\n                      description: The list of user `login`s with dismissal access\n                      items:\n                        type: string\n                    teams:\n                      type: array\n                      description: The list of team `slug`s with dismissal access\n                      items:\n                        type: string\n                dismiss_stale_reviews:\n                  type: boolean\n                  description: Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.\n                require_code_owner_reviews:\n                  type: boolean\n                  description: Blocks merging pull requests until [code owners](https://docs.github.com/articles/about-code-owners/) have reviewed.\n                required_approving_review_count:\n                  type: integer\n                  description: Specifies the number of reviewers required to approve pull requests. Use a number between 1 and 6 or 0 to not require reviewers.\n                bypass_pull_request_allowances:\n                  type: object\n                  description: Allow specific users or teams to bypass pull request requirements. Set to `null` to disable.\n                  nullable: true\n                  properties:\n                    users:\n                      type: array\n                      description: The list of user `login`s allowed to bypass pull request requirements.\n                      items:\n                        type: string\n                    teams:\n                      type: array\n                      description: The list of team `slug`s allowed to bypass pull request requirements.\n                      items:\n                        type: string\n            example:\n              dismissal_restrictions:\n                users:\n                  - octocat\n                teams:\n                  - justice-league\n              bypass_pull_request_allowances:\n                users:\n                  - octocat\n                teams:\n                  - justice-league\n              dismiss_stale_reviews: true\n              require_code_owner_reviews: true\n              required_approving_review_count: 2\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/protected-branch-pull-request-review'\n              examples:\n                default:\n                  $ref: '#/components/examples/protected-branch-pull-request-review'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n    delete:\n      summary: Delete pull request review protection\n      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n      tags:\n        - repos\n      operationId: repos/delete-pull-request-review-protection\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#delete-pull-request-review-protection\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      responses:\n        '204':\n          description: Response\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n  /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures:\n    get:\n      summary: Get commit signature protection\n      description: |-\n        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        When authenticated with admin or owner permissions to the repository, you can use this endpoint to check whether a branch requires signed commits. An enabled status of `true` indicates you must sign commits on this branch. For more information, see [Signing commits with GPG](https://docs.github.com/articles/signing-commits-with-gpg) in GitHub Help.\n\n        **Note**: You must enable branch protection to require signed commits.\n      tags:\n        - repos\n      operationId: repos/get-commit-signature-protection\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-commit-signature-protection\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/protected-branch-admin-enforced'\n              examples:\n                default:\n                  $ref: '#/components/examples/protected-branch-admin-enforced'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n    post:\n      summary: Create commit signature protection\n      description: |-\n        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        When authenticated with admin or owner permissions to the repository, you can use this endpoint to require signed commits on a branch. You must enable branch protection to require signed commits.\n      tags:\n        - repos\n      operationId: repos/create-commit-signature-protection\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#create-commit-signature-protection\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/protected-branch-admin-enforced'\n              examples:\n                default:\n                  $ref: '#/components/examples/protected-branch-admin-enforced'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n    delete:\n      summary: Delete commit signature protection\n      description: |-\n        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        When authenticated with admin or owner permissions to the repository, you can use this endpoint to disable required signed commits on a branch. You must enable branch protection to require signed commits.\n      tags:\n        - repos\n      operationId: repos/delete-commit-signature-protection\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#delete-commit-signature-protection\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      responses:\n        '204':\n          description: Response\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n  /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks:\n    get:\n      summary: Get status checks protection\n      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n      tags:\n        - repos\n      operationId: repos/get-status-checks-protection\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-status-checks-protection\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/status-check-policy'\n              examples:\n                default:\n                  $ref: '#/components/examples/status-check-policy'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n    patch:\n      summary: Update status check protection\n      description: |-\n        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        Updating required status checks requires admin or owner permissions to the repository and branch protection to be enabled.\n      tags:\n        - repos\n      operationId: repos/update-status-check-protection\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#update-status-check-protection\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                strict:\n                  type: boolean\n                  description: Require branches to be up to date before merging.\n                contexts:\n                  type: array\n                  deprecated: true\n                  description: |\n                    **Deprecated**: The list of status checks to require in order to merge into this branch. If any of these checks have recently been set by a particular GitHub App, they will be required to come from that app in future for the branch to merge. Use `checks` instead of `contexts` for more fine-grained control.\n                  items:\n                    type: string\n                checks:\n                  type: array\n                  description: The list of status checks to require in order to merge into this branch.\n                  items:\n                    type: object\n                    required:\n                      - context\n                    properties:\n                      context:\n                        type: string\n                        description: The name of the required check\n                      app_id:\n                        type: integer\n                        description: The ID of the GitHub App that must provide this check. Omit this field to automatically select the GitHub App that has recently provided this check, or any app if it was not set by a GitHub App. Pass -1 to explicitly allow any app to set the status.\n            example:\n              strict: true\n              contexts:\n                - continuous-integration/travis-ci\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/status-check-policy'\n              examples:\n                default:\n                  $ref: '#/components/examples/status-check-policy'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n    delete:\n      summary: Remove status check protection\n      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n      tags:\n        - repos\n      operationId: repos/remove-status-check-protection\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#remove-status-check-protection\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n  /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts:\n    get:\n      summary: Get all status check contexts\n      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n      tags:\n        - repos\n      operationId: repos/get-all-status-check-contexts\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-all-status-check-contexts\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n              example:\n                - continuous-integration/travis-ci\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n    post:\n      summary: Add status check contexts\n      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n      tags:\n        - repos\n      operationId: repos/add-status-check-contexts\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#add-status-check-contexts\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: object\n                  properties:\n                    contexts:\n                      type: array\n                      description: contexts parameter\n                      items:\n                        type: string\n                  required:\n                    - contexts\n                  example:\n                    contexts:\n                      - contexts\n                - type: array\n                  description: contexts parameter\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n              example:\n                - continuous-integration/travis-ci\n                - continuous-integration/jenkins\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        requestBodyParameterName: contexts\n        category: repos\n        subcategory: branches\n    put:\n      summary: Set status check contexts\n      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n      tags:\n        - repos\n      operationId: repos/set-status-check-contexts\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#set-status-check-contexts\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: object\n                  properties:\n                    contexts:\n                      type: array\n                      description: contexts parameter\n                      items:\n                        type: string\n                  required:\n                    - contexts\n                  example:\n                    contexts:\n                      - contexts\n                - type: array\n                  description: contexts parameter\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n              example:\n                - continuous-integration/travis-ci\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        requestBodyParameterName: contexts\n        category: repos\n        subcategory: branches\n    delete:\n      summary: Remove status check contexts\n      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n      tags:\n        - repos\n      operationId: repos/remove-status-check-contexts\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#remove-status-check-contexts\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: object\n                  properties:\n                    contexts:\n                      type: array\n                      description: contexts parameter\n                      items:\n                        type: string\n                  required:\n                    - contexts\n                  example:\n                    contexts:\n                      - contexts\n                - type: array\n                  description: contexts parameter\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n              example:\n                - continuous-integration/travis-ci\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        requestBodyParameterName: contexts\n        category: repos\n        subcategory: branches\n  /repos/{owner}/{repo}/branches/{branch}/protection/restrictions:\n    get:\n      summary: Get access restrictions\n      description: |-\n        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        Lists who has access to this protected branch.\n\n        **Note**: Users, apps, and teams `restrictions` are only available for organization-owned repositories.\n      tags:\n        - repos\n      operationId: repos/get-access-restrictions\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-access-restrictions\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/branch-restriction-policy'\n              examples:\n                default:\n                  $ref: '#/components/examples/branch-restriction-policy'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n    delete:\n      summary: Delete access restrictions\n      description: |-\n        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        Disables the ability to restrict who can push to this branch.\n      tags:\n        - repos\n      operationId: repos/delete-access-restrictions\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#delete-access-restrictions\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n  /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps:\n    get:\n      summary: Get apps with access to the protected branch\n      description: |-\n        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        Lists the GitHub Apps that have push access to this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.\n      tags:\n        - repos\n      operationId: repos/get-apps-with-access-to-protected-branch\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-apps-with-access-to-the-protected-branch\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/integration'\n              examples:\n                default:\n                  $ref: '#/components/examples/integration-items'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n    post:\n      summary: Add app access restrictions\n      description: |-\n        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        Grants the specified apps push access for this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.\n\n        | Type    | Description                                                                                                                                                |\n        | ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |\n        | `array` | The GitHub Apps that have push access to this branch. Use the app's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n      tags:\n        - repos\n      operationId: repos/add-app-access-restrictions\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#add-app-access-restrictions\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: object\n                  properties:\n                    apps:\n                      type: array\n                      description: apps parameter\n                      items:\n                        type: string\n                  required:\n                    - apps\n                  example:\n                    apps:\n                      - my-app\n                - type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/integration'\n              examples:\n                default:\n                  $ref: '#/components/examples/integration-items'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        requestBodyParameterName: apps\n        category: repos\n        subcategory: branches\n    put:\n      summary: Set app access restrictions\n      description: |-\n        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        Replaces the list of apps that have push access to this branch. This removes all apps that previously had push access and grants push access to the new list of apps. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.\n\n        | Type    | Description                                                                                                                                                |\n        | ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |\n        | `array` | The GitHub Apps that have push access to this branch. Use the app's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n      tags:\n        - repos\n      operationId: repos/set-app-access-restrictions\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#set-app-access-restrictions\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: object\n                  properties:\n                    apps:\n                      type: array\n                      description: apps parameter\n                      items:\n                        type: string\n                  required:\n                    - apps\n                  example:\n                    apps:\n                      - my-app\n                - type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/integration'\n              examples:\n                default:\n                  $ref: '#/components/examples/integration-items'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        requestBodyParameterName: apps\n        category: repos\n        subcategory: branches\n    delete:\n      summary: Remove app access restrictions\n      description: |-\n        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        Removes the ability of an app to push to this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.\n\n        | Type    | Description                                                                                                                                                |\n        | ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |\n        | `array` | The GitHub Apps that have push access to this branch. Use the app's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n      tags:\n        - repos\n      operationId: repos/remove-app-access-restrictions\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#remove-app-access-restrictions\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: object\n                  properties:\n                    apps:\n                      type: array\n                      description: apps parameter\n                      items:\n                        type: string\n                  required:\n                    - apps\n                  example:\n                    apps:\n                      - my-app\n                - type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/integration'\n              examples:\n                default:\n                  $ref: '#/components/examples/integration-items'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        requestBodyParameterName: apps\n        category: repos\n        subcategory: branches\n  /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams:\n    get:\n      summary: Get teams with access to the protected branch\n      description: |-\n        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        Lists the teams who have push access to this branch. The list includes child teams.\n      tags:\n        - repos\n      operationId: repos/get-teams-with-access-to-protected-branch\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-teams-with-access-to-the-protected-branch\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/team'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-items'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n    post:\n      summary: Add team access restrictions\n      description: |-\n        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        Grants the specified teams push access for this branch. You can also give push access to child teams.\n\n        | Type    | Description                                                                                                                                |\n        | ------- | ------------------------------------------------------------------------------------------------------------------------------------------ |\n        | `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n      tags:\n        - repos\n      operationId: repos/add-team-access-restrictions\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#add-team-access-restrictions\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: object\n                  properties:\n                    teams:\n                      type: array\n                      description: teams parameter\n                      items:\n                        type: string\n                  required:\n                    - teams\n                  example:\n                    teams:\n                      - my-team\n                - type: array\n                  description: teams parameter\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/team'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-items'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        requestBodyParameterName: teams\n        category: repos\n        subcategory: branches\n    put:\n      summary: Set team access restrictions\n      description: |-\n        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        Replaces the list of teams that have push access to this branch. This removes all teams that previously had push access and grants push access to the new list of teams. Team restrictions include child teams.\n\n        | Type    | Description                                                                                                                                |\n        | ------- | ------------------------------------------------------------------------------------------------------------------------------------------ |\n        | `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n      tags:\n        - repos\n      operationId: repos/set-team-access-restrictions\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#set-team-access-restrictions\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: object\n                  properties:\n                    teams:\n                      type: array\n                      description: teams parameter\n                      items:\n                        type: string\n                  required:\n                    - teams\n                  example:\n                    teams:\n                      - my-team\n                - type: array\n                  description: teams parameter\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/team'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-items'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        requestBodyParameterName: teams\n        category: repos\n        subcategory: branches\n    delete:\n      summary: Remove team access restrictions\n      description: |-\n        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        Removes the ability of a team to push to this branch. You can also remove push access for child teams.\n\n        | Type    | Description                                                                                                                                         |\n        | ------- | --------------------------------------------------------------------------------------------------------------------------------------------------- |\n        | `array` | Teams that should no longer have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n      tags:\n        - repos\n      operationId: repos/remove-team-access-restrictions\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#remove-team-access-restrictions\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: object\n                  properties:\n                    teams:\n                      type: array\n                      description: teams parameter\n                      items:\n                        type: string\n                  required:\n                    - teams\n                  example:\n                    teams:\n                      - my-team\n                - type: array\n                  description: teams parameter\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/team'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-items'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        requestBodyParameterName: teams\n        category: repos\n        subcategory: branches\n  /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users:\n    get:\n      summary: Get users with access to the protected branch\n      description: |-\n        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        Lists the people who have push access to this branch.\n      tags:\n        - repos\n      operationId: repos/get-users-with-access-to-protected-branch\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-users-with-access-to-the-protected-branch\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/simple-user'\n              examples:\n                default:\n                  $ref: '#/components/examples/simple-user-items'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n    post:\n      summary: Add user access restrictions\n      description: |-\n        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        Grants the specified people push access for this branch.\n\n        | Type    | Description                                                                                                                   |\n        | ------- | ----------------------------------------------------------------------------------------------------------------------------- |\n        | `array` | Usernames for people who can have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n      tags:\n        - repos\n      operationId: repos/add-user-access-restrictions\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#add-user-access-restrictions\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: object\n                  properties:\n                    users:\n                      type: array\n                      description: users parameter\n                      items:\n                        type: string\n                  required:\n                    - users\n                  example:\n                    users:\n                      - mona\n                - type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/simple-user'\n              examples:\n                default:\n                  $ref: '#/components/examples/simple-user-items'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        requestBodyParameterName: users\n        category: repos\n        subcategory: branches\n    put:\n      summary: Set user access restrictions\n      description: |-\n        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        Replaces the list of people that have push access to this branch. This removes all people that previously had push access and grants push access to the new list of people.\n\n        | Type    | Description                                                                                                                   |\n        | ------- | ----------------------------------------------------------------------------------------------------------------------------- |\n        | `array` | Usernames for people who can have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n      tags:\n        - repos\n      operationId: repos/set-user-access-restrictions\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#set-user-access-restrictions\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: object\n                  properties:\n                    users:\n                      type: array\n                      description: users parameter\n                      items:\n                        type: string\n                  required:\n                    - users\n                  example:\n                    users:\n                      - mona\n                - type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/simple-user'\n              examples:\n                default:\n                  $ref: '#/components/examples/simple-user-items'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        requestBodyParameterName: users\n        category: repos\n        subcategory: branches\n    delete:\n      summary: Remove user access restrictions\n      description: |-\n        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        Removes the ability of a user to push to this branch.\n\n        | Type    | Description                                                                                                                                   |\n        | ------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n        | `array` | Usernames of the people who should no longer have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |\n      tags:\n        - repos\n      operationId: repos/remove-user-access-restrictions\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#remove-user-access-restrictions\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: object\n                  properties:\n                    users:\n                      type: array\n                      description: users parameter\n                      items:\n                        type: string\n                  required:\n                    - users\n                  example:\n                    users:\n                      - mona\n                - type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/simple-user'\n              examples:\n                default:\n                  $ref: '#/components/examples/simple-user-items'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        requestBodyParameterName: users\n        category: repos\n        subcategory: branches\n  /repos/{owner}/{repo}/branches/{branch}/rename:\n    post:\n      summary: Rename a branch\n      description: |-\n        Renames a branch in a repository.\n\n        **Note:** Although the API responds immediately, the branch rename process might take some extra time to complete in the background. You won't be able to push to the old branch name while the rename process is in progress. For more information, see \"[Renaming a branch](https://docs.github.com/github/administering-a-repository/renaming-a-branch)\".\n\n        The permissions required to use this endpoint depends on whether you are renaming the default branch.\n\n        To rename a non-default branch:\n\n        * Users must have push access.\n        * GitHub Apps must have the `contents:write` repository permission.\n\n        To rename the default branch:\n\n        * Users must have admin or owner permissions.\n        * GitHub Apps must have the `administration:write` repository permission.\n      tags:\n        - repos\n      operationId: repos/rename-branch\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#rename-a-branch\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/branch'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                new_name:\n                  type: string\n                  description: The new name of the branch.\n              required:\n                - new_name\n            example:\n              new_name: my_renamed_branch\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/branch-with-protection'\n              examples:\n                default:\n                  $ref: '#/components/examples/branch-with-protection'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n  /repos/{owner}/{repo}/codeowners/errors:\n    get:\n      summary: List CODEOWNERS errors\n      description: |-\n        List any syntax errors that are detected in the CODEOWNERS\n        file.\n\n        For more information about the correct CODEOWNERS syntax,\n        see \"[About code owners](https://docs.github.com/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners).\"\n      tags:\n        - repos\n      operationId: repos/codeowners-errors\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-codeowners-errors\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: ref\n          description: 'A branch, tag or commit name used to determine which version of the CODEOWNERS file to use. Default: the repository''s default branch (e.g. `main`)'\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/codeowners-errors'\n              examples:\n                default:\n                  $ref: '#/components/examples/codeowners-errors'\n        '404':\n          description: Resource not found\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        previews: []\n        category: repos\n        subcategory: null\n  /repos/{owner}/{repo}/collaborators:\n    get:\n      summary: List repository collaborators\n      description: |-\n        For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.\n\n        Team members will include the members of child teams.\n\n        You must authenticate using an access token with the `read:org` and `repo` scopes with push access to use this\n        endpoint. GitHub Apps must have the `members` organization permission and `metadata` repository permission to use this\n        endpoint.\n      tags:\n        - repos\n      operationId: repos/list-collaborators\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-repository-collaborators\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: affiliation\n          description: |-\n            Filter collaborators returned by their affiliation. Can be one of:  \n            \\* `outside`: All outside collaborators of an organization-owned repository.  \n            \\* `direct`: All collaborators with permissions to an organization-owned repository, regardless of organization membership status.  \n            \\* `all`: All collaborators the authenticated user can see.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - outside\n              - direct\n              - all\n            default: all\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/collaborator'\n              examples:\n                default:\n                  $ref: '#/components/examples/collaborator-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: collaborators\n  /repos/{owner}/{repo}/collaborators/{username}:\n    get:\n      summary: Check if a user is a repository collaborator\n      description: |-\n        For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.\n\n        Team members will include the members of child teams.\n\n        You must authenticate using an access token with the `read:org` and `repo` scopes with push access to use this\n        endpoint. GitHub Apps must have the `members` organization permission and `metadata` repository permission to use this\n        endpoint.\n      tags:\n        - repos\n      operationId: repos/check-collaborator\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#check-if-a-user-is-a-repository-collaborator\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: Response if user is a collaborator\n        '404':\n          description: Not Found if user is not a collaborator\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: collaborators\n    put:\n      summary: Add a repository collaborator\n      description: |-\n        This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" and \"[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)\" for details.\n\n        For more information on permission levels, see \"[Repository permission levels for an organization](https://docs.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)\". There are restrictions on which permissions can be granted to organization members when an organization base role is in place. In this case, the permission being given must be equal to or higher than the org base permission. Otherwise, the request will fail with:\n\n        ```\n        Cannot assign {member} permission of {role name}\n        ```\n\n        Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\n        The invitee will receive a notification that they have been invited to the repository, which they must accept or decline. They may do this via the notifications page, the email they receive, or by using the [repository invitations API endpoints](https://docs.github.com/rest/reference/repos#invitations).\n\n        **Rate limits**\n\n        You are limited to sending 50 invitations to a repository per 24 hour period. Note there is no limit if you are inviting organization members to an organization repository.\n      tags:\n        - repos\n      operationId: repos/add-collaborator\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#add-a-repository-collaborator\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/username'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                permission:\n                  type: string\n                  description: |-\n                    The permission to grant the collaborator. **Only valid on organization-owned repositories.** Can be one of:  \n                    \\* `pull` - can pull, but not push to or administer this repository.  \n                    \\* `push` - can pull and push, but not administer this repository.  \n                    \\* `admin` - can pull, push and administer this repository.  \n                    \\* `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.  \n                    \\* `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.  \n                    \\* custom repository role name - A custom repository role, if the owning organization has defined any.\n                  enum:\n                    - pull\n                    - push\n                    - admin\n                    - maintain\n                    - triage\n                  default: push\n                permissions:\n                  type: string\n                  example: '\"push\"'\n      responses:\n        '201':\n          description: Response when a new invitation is created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/repository-invitation'\n              examples:\n                response-when-a-new-invitation-is-created:\n                  $ref: '#/components/examples/repository-invitation-response-when-a-new-invitation-is-created'\n        '204':\n          description: Response when person is already a collaborator\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        triggersNotification: true\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: collaborators\n    delete:\n      summary: Remove a repository collaborator\n      description: ''\n      tags:\n        - repos\n      operationId: repos/remove-collaborator\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#remove-a-repository-collaborator\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: collaborators\n  /repos/{owner}/{repo}/collaborators/{username}/permission:\n    get:\n      summary: Get repository permissions for a user\n      description: Checks the repository permission of a collaborator. The possible repository permissions are `admin`, `write`, `read`, and `none`.\n      tags:\n        - repos\n      operationId: repos/get-collaborator-permission-level\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-repository-permissions-for-a-user\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '200':\n          description: if user has admin permissions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/repository-collaborator-permission'\n              examples:\n                response-if-user-has-admin-permissions:\n                  $ref: '#/components/examples/repository-collaborator-permission-response-if-user-has-admin-permissions'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: collaborators\n  /repos/{owner}/{repo}/comments:\n    get:\n      summary: List commit comments for a repository\n      description: |-\n        Commit Comments use [these custom media types](https://docs.github.com/rest/reference/repos#custom-media-types). You can read more about the use of media types in the API [here](https://docs.github.com/rest/overview/media-types/).\n\n        Comments are ordered by ascending ID.\n      tags:\n        - repos\n      operationId: repos/list-commit-comments-for-repo\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-commit-comments-for-a-repository\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/commit-comment'\n              examples:\n                default:\n                  $ref: '#/components/examples/commit-comment-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: comments\n  /repos/{owner}/{repo}/comments/{comment_id}:\n    get:\n      summary: Get a commit comment\n      description: ''\n      tags:\n        - repos\n      operationId: repos/get-commit-comment\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-a-commit-comment\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/comment-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/commit-comment'\n              examples:\n                default:\n                  $ref: '#/components/examples/commit-comment'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: comments\n    patch:\n      summary: Update a commit comment\n      description: ''\n      tags:\n        - repos\n      operationId: repos/update-commit-comment\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#update-a-commit-comment\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/comment-id'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                body:\n                  type: string\n                  description: The contents of the comment\n              required:\n                - body\n            example:\n              body: Nice change\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/commit-comment'\n              examples:\n                default:\n                  $ref: '#/components/examples/commit-comment-2'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: comments\n    delete:\n      summary: Delete a commit comment\n      description: ''\n      tags:\n        - repos\n      operationId: repos/delete-commit-comment\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#delete-a-commit-comment\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/comment-id'\n      responses:\n        '204':\n          description: Response\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: comments\n  /repos/{owner}/{repo}/commits:\n    get:\n      summary: List commits\n      description: |-\n        **Signature verification object**\n\n        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n        | Name | Type | Description |\n        | ---- | ---- | ----------- |\n        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n        | `signature` | `string` | The signature that was extracted from the commit. |\n        | `payload` | `string` | The value that was signed. |\n\n        These are the possible values for `reason` in the `verification` object:\n\n        | Value | Description |\n        | ----- | ----------- |\n        | `expired_key` | The key that made the signature is expired. |\n        | `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n        | `gpgverify_error` | There was an error communicating with the signature verification service. |\n        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n        | `unsigned` | The object does not include a signature. |\n        | `unknown_signature_type` | A non-PGP signature was found in the commit. |\n        | `no_user` | No user was associated with the `committer` email address in the commit. |\n        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n        | `unknown_key` | The key that made the signature has not been registered with any user's account. |\n        | `malformed_signature` | There was an error parsing the signature. |\n        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n        | `valid` | None of the above errors applied, so the signature is considered to be verified. |\n      tags:\n        - repos\n      operationId: repos/list-commits\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-commits\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: sha\n          description: 'SHA or branch to start listing commits from. Default: the repository’s default branch (usually `master`).'\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: path\n          description: Only commits containing this file path will be returned.\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: author\n          description: GitHub login or email address by which to filter by commit author.\n          in: query\n          required: false\n          schema:\n            type: string\n        - $ref: '#/components/parameters/since'\n        - name: until\n          description: 'Only commits before this date will be returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/commit'\n              examples:\n                default:\n                  $ref: '#/components/examples/commit-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '400':\n          $ref: '#/components/responses/bad_request'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '409':\n          $ref: '#/components/responses/conflict'\n        '500':\n          $ref: '#/components/responses/internal_error'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: commits\n  /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head:\n    get:\n      summary: List branches for HEAD commit\n      description: |-\n        Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        Returns all branches where the given commit SHA is the HEAD, or latest commit for the branch.\n      tags:\n        - repos\n      operationId: repos/list-branches-for-head-commit\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-branches-for-head-commit\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/commit-sha'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/branch-short'\n              examples:\n                default:\n                  $ref: '#/components/examples/branch-short-items'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: commits\n  /repos/{owner}/{repo}/commits/{commit_sha}/comments:\n    get:\n      summary: List commit comments\n      description: Use the `:commit_sha` to specify the commit that will have its comments listed.\n      tags:\n        - repos\n      operationId: repos/list-comments-for-commit\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-commit-comments\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/commit-sha'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/commit-comment'\n              examples:\n                default:\n                  $ref: '#/components/examples/commit-comment-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: comments\n    post:\n      summary: Create a commit comment\n      description: |-\n        Create a comment for a commit using its `:commit_sha`.\n\n        This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" and \"[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)\" for details.\n      tags:\n        - repos\n      operationId: repos/create-commit-comment\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#create-a-commit-comment\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/commit-sha'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                body:\n                  type: string\n                  description: The contents of the comment.\n                path:\n                  type: string\n                  description: Relative path of the file to comment on.\n                position:\n                  type: integer\n                  description: Line index in the diff to comment on.\n                line:\n                  type: integer\n                  description: '**Deprecated**. Use **position** parameter instead. Line number in the file to comment on.'\n              required:\n                - body\n            example:\n              body: Great stuff\n              path: file1.txt\n              position: 4\n              line: 1\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/commit-comment'\n              examples:\n                default:\n                  $ref: '#/components/examples/commit-comment'\n          headers:\n            Location:\n              example: https://api.github.com/repos/octocat/Hello-World/comments/1\n              schema:\n                type: string\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        triggersNotification: true\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: comments\n  /repos/{owner}/{repo}/commits/{commit_sha}/pulls:\n    get:\n      summary: List pull requests associated with a commit\n      description: Lists the merged pull request that introduced the commit to the repository. If the commit is not present in the default branch, additionally returns open pull requests associated with the commit. The results may include open and closed pull requests. Additional preview headers may be required to see certain details for associated pull requests, such as whether a pull request is in a draft state. For more information about previews that might affect this endpoint, see the [List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests) endpoint.\n      tags:\n        - repos\n      operationId: repos/list-pull-requests-associated-with-commit\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-pull-requests-associated-with-a-commit\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/commit-sha'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/pull-request-simple'\n              examples:\n                default:\n                  $ref: '#/components/examples/pull-request-simple-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: commits\n  /repos/{owner}/{repo}/commits/{ref}:\n    get:\n      summary: Get a commit\n      description: |-\n        Returns the contents of a single commit reference. You must have `read` access for the repository to use this endpoint.\n\n        **Note:** If there are more than 300 files in the commit diff, the response will include pagination link headers for the remaining files, up to a limit of 3000 files. Each page contains the static commit information, and the only changes are to the file listing.\n\n        You can pass the appropriate [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to  fetch `diff` and `patch` formats. Diffs with binary data will have no `patch` property.\n\n        To return only the SHA-1 hash of the commit reference, you can provide the `sha` custom [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) in the `Accept` header. You can use this endpoint to check if a remote reference's SHA-1 hash is the same as your local reference's SHA-1 hash by providing the local SHA-1 reference as the ETag.\n\n        **Signature verification object**\n\n        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n        | Name | Type | Description |\n        | ---- | ---- | ----------- |\n        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n        | `signature` | `string` | The signature that was extracted from the commit. |\n        | `payload` | `string` | The value that was signed. |\n\n        These are the possible values for `reason` in the `verification` object:\n\n        | Value | Description |\n        | ----- | ----------- |\n        | `expired_key` | The key that made the signature is expired. |\n        | `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n        | `gpgverify_error` | There was an error communicating with the signature verification service. |\n        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n        | `unsigned` | The object does not include a signature. |\n        | `unknown_signature_type` | A non-PGP signature was found in the commit. |\n        | `no_user` | No user was associated with the `committer` email address in the commit. |\n        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n        | `unknown_key` | The key that made the signature has not been registered with any user's account. |\n        | `malformed_signature` | There was an error parsing the signature. |\n        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n        | `valid` | None of the above errors applied, so the signature is considered to be verified. |\n      tags:\n        - repos\n      operationId: repos/get-commit\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-a-commit\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per-page'\n        - name: ref\n          description: ref parameter\n          in: path\n          required: true\n          schema:\n            type: string\n          x-multi-segment: true\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/commit'\n              examples:\n                default:\n                  $ref: '#/components/examples/commit'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n        '500':\n          $ref: '#/components/responses/internal_error'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: commits\n  /repos/{owner}/{repo}/commits/{ref}/status:\n    get:\n      summary: Get the combined status for a specific reference\n      description: |-\n        Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.\n\n\n        Additionally, a combined `state` is returned. The `state` is one of:\n\n        *   **failure** if any of the contexts report as `error` or `failure`\n        *   **pending** if there are no statuses or a context is `pending`\n        *   **success** if the latest status for all contexts is `success`\n      tags:\n        - repos\n      operationId: repos/get-combined-status-for-ref\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-the-combined-status-for-a-specific-reference\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: ref\n          description: ref parameter\n          in: path\n          required: true\n          schema:\n            type: string\n          x-multi-segment: true\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/combined-commit-status'\n              examples:\n                default:\n                  $ref: '#/components/examples/combined-commit-status'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: statuses\n  /repos/{owner}/{repo}/commits/{ref}/statuses:\n    get:\n      summary: List commit statuses for a reference\n      description: |-\n        Users with pull access in a repository can view commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name. Statuses are returned in reverse chronological order. The first status in the list will be the latest one.\n\n        This resource is also available via a legacy route: `GET /repos/:owner/:repo/statuses/:ref`.\n      tags:\n        - repos\n      operationId: repos/list-commit-statuses-for-ref\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-commit-statuses-for-a-reference\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: ref\n          description: ref parameter\n          in: path\n          required: true\n          schema:\n            type: string\n          x-multi-segment: true\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/status'\n              examples:\n                default:\n                  $ref: '#/components/examples/status-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '301':\n          $ref: '#/components/responses/moved_permanently'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: statuses\n  /repos/{owner}/{repo}/community/profile:\n    get:\n      summary: Get community profile metrics\n      description: |-\n        This endpoint will return all community profile metrics, including an\n        overall health score, repository description, the presence of documentation, detected\n        code of conduct, detected license, and the presence of ISSUE\\_TEMPLATE, PULL\\_REQUEST\\_TEMPLATE,\n        README, and CONTRIBUTING files.\n\n        The `health_percentage` score is defined as a percentage of how many of\n        these four documents are present: README, CONTRIBUTING, LICENSE, and\n        CODE_OF_CONDUCT. For example, if all four documents are present, then\n        the `health_percentage` is `100`. If only one is present, then the\n        `health_percentage` is `25`.\n\n        `content_reports_enabled` is only returned for organization-owned repositories.\n      tags:\n        - repos\n      operationId: repos/get-community-profile-metrics\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-community-profile-metrics\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/community-profile'\n              examples:\n                default:\n                  $ref: '#/components/examples/community-profile'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: community\n  /repos/{owner}/{repo}/compare/{basehead}:\n    get:\n      summary: Compare two commits\n      description: |-\n        The `basehead` param is comprised of two parts: `base` and `head`. Both must be branch names in `repo`. To compare branches across other repositories in the same network as `repo`, use the format `\u003cUSERNAME\u003e:branch`.\n\n        The response from the API is equivalent to running the `git log base..head` command; however, commits are returned in chronological order. Pass the appropriate [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.\n\n        The response also includes details on the files that were changed between the two commits. This includes the status of the change (for example, if a file was added, removed, modified, or renamed), and details of the change itself. For example, files with a `renamed` status have a `previous_filename` field showing the previous filename of the file, and files with a `modified` status have a `patch` field showing the changes made to the file.\n\n        **Working with large comparisons**\n\n        To process a response with a large number of commits, you can use (`per_page` or `page`) to paginate the results. When using paging, the list of changed files is only returned with page 1, but includes all changed files for the entire comparison. For more information on working with pagination, see \"[Traversing with pagination](/rest/guides/traversing-with-pagination).\"\n\n        When calling this API without any paging parameters (`per_page` or `page`), the returned list is limited to 250 commits and the last commit in the list is the most recent of the entire comparison. When a paging parameter is specified, the first commit in the returned list of each page is the earliest.\n\n        **Signature verification object**\n\n        The response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n        | Name | Type | Description |\n        | ---- | ---- | ----------- |\n        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n        | `signature` | `string` | The signature that was extracted from the commit. |\n        | `payload` | `string` | The value that was signed. |\n\n        These are the possible values for `reason` in the `verification` object:\n\n        | Value | Description |\n        | ----- | ----------- |\n        | `expired_key` | The key that made the signature is expired. |\n        | `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n        | `gpgverify_error` | There was an error communicating with the signature verification service. |\n        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n        | `unsigned` | The object does not include a signature. |\n        | `unknown_signature_type` | A non-PGP signature was found in the commit. |\n        | `no_user` | No user was associated with the `committer` email address in the commit. |\n        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n        | `unknown_key` | The key that made the signature has not been registered with any user's account. |\n        | `malformed_signature` | There was an error parsing the signature. |\n        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n        | `valid` | None of the above errors applied, so the signature is considered to be verified. |\n      tags:\n        - repos\n      operationId: repos/compare-commits\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#compare-two-commits\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per-page'\n        - name: basehead\n          description: The base branch and head branch to compare. This parameter expects the format `{base}...{head}`.\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/commit-comparison'\n              examples:\n                default:\n                  $ref: '#/components/examples/commit-comparison'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '500':\n          $ref: '#/components/responses/internal_error'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: commits\n  /repos/{owner}/{repo}/contents/{path}:\n    get:\n      summary: Get repository content\n      description: |-\n        Gets the contents of a file or directory in a repository. Specify the file path or directory in `:path`. If you omit\n        `:path`, you will receive the contents of the repository's root directory. See the description below regarding what the API response includes for directories. \n\n        Files and symlinks support [a custom media type](https://docs.github.com/rest/reference/repos#custom-media-types) for\n        retrieving the raw content or rendered HTML (when supported). All content types support [a custom media\n        type](https://docs.github.com/rest/reference/repos#custom-media-types) to ensure the content is returned in a consistent\n        object format.\n\n        **Note**:\n        *   To get a repository's contents recursively, you can [recursively get the tree](https://docs.github.com/rest/reference/git#trees).\n        *   This API has an upper limit of 1,000 files for a directory. If you need to retrieve more files, use the [Git Trees\n        API](https://docs.github.com/rest/reference/git#get-a-tree).\n        *   This API supports files up to 1 megabyte in size.\n\n        #### If the content is a directory\n        The response will be an array of objects, one object for each item in the directory.\n        When listing the contents of a directory, submodules have their \"type\" specified as \"file\". Logically, the value\n        _should_ be \"submodule\". This behavior exists in API v3 [for backwards compatibility purposes](https://git.io/v1YCW).\n        In the next major version of the API, the type will be returned as \"submodule\".\n\n        #### If the content is a symlink \n        If the requested `:path` points to a symlink, and the symlink's target is a normal file in the repository, then the\n        API responds with the content of the file (in the format shown in the example. Otherwise, the API responds with an object \n        describing the symlink itself.\n\n        #### If the content is a submodule\n        The `submodule_git_url` identifies the location of the submodule repository, and the `sha` identifies a specific\n        commit within the submodule repository. Git uses the given URL when cloning the submodule repository, and checks out\n        the submodule at that specific commit.\n\n        If the submodule repository is not hosted on github.com, the Git URLs (`git_url` and `_links[\"git\"]`) and the\n        github.com URLs (`html_url` and `_links[\"html\"]`) will have null values.\n      tags:\n        - repos\n      operationId: repos/get-content\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-repository-content\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: path\n          description: path parameter\n          in: path\n          required: true\n          schema:\n            type: string\n          x-multi-segment: true\n        - name: ref\n          description: 'The name of the commit/branch/tag. Default: the repository’s default branch (usually `master`)'\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/vnd.github.v3.object:\n              schema:\n                $ref: '#/components/schemas/content-tree'\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/content-directory'\n                  - $ref: '#/components/schemas/content-file'\n                  - $ref: '#/components/schemas/content-symlink'\n                  - $ref: '#/components/schemas/content-submodule'\n              examples:\n                response-if-content-is-a-file:\n                  $ref: '#/components/examples/content-file-response-if-content-is-a-file'\n                response-if-content-is-a-directory:\n                  $ref: '#/components/examples/content-file-response-if-content-is-a-directory'\n                response-if-content-is-a-symlink:\n                  $ref: '#/components/examples/content-file-response-if-content-is-a-symlink'\n                response-if-content-is-a-submodule:\n                  $ref: '#/components/examples/content-file-response-if-content-is-a-submodule'\n        '302':\n          $ref: '#/components/responses/found'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: contents\n    put:\n      summary: Create or update file contents\n      description: Creates a new file or replaces an existing file in a repository.\n      tags:\n        - repos\n      operationId: repos/create-or-update-file-contents\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#create-or-update-file-contents\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: path\n          description: path parameter\n          in: path\n          required: true\n          schema:\n            type: string\n          x-multi-segment: true\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                message:\n                  type: string\n                  description: The commit message.\n                content:\n                  type: string\n                  description: The new file content, using Base64 encoding.\n                sha:\n                  type: string\n                  description: '**Required if you are updating a file**. The blob SHA of the file being replaced.'\n                branch:\n                  type: string\n                  description: 'The branch name. Default: the repository’s default branch (usually `master`)'\n                committer:\n                  type: object\n                  description: 'The person that committed the file. Default: the authenticated user.'\n                  properties:\n                    name:\n                      type: string\n                      description: The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.\n                    email:\n                      type: string\n                      description: The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.\n                    date:\n                      type: string\n                      example: '\"2013-01-05T13:13:22+05:00\"'\n                  required:\n                    - name\n                    - email\n                author:\n                  type: object\n                  description: 'The author of the file. Default: The `committer` or the authenticated user if you omit `committer`.'\n                  properties:\n                    name:\n                      type: string\n                      description: The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.\n                    email:\n                      type: string\n                      description: The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.\n                    date:\n                      type: string\n                      example: '\"2013-01-15T17:13:22+05:00\"'\n                  required:\n                    - name\n                    - email\n              required:\n                - message\n                - content\n            examples:\n              example-for-creating-a-file:\n                summary: Example for creating a file\n                value:\n                  message: my commit message\n                  committer:\n                    name: Monalisa Octocat\n                    email: octocat@github.com\n                  content: bXkgbmV3IGZpbGUgY29udGVudHM=\n              example-for-updating-a-file:\n                summary: Example for updating a file\n                value:\n                  message: a new commit message\n                  committer:\n                    name: Monalisa Octocat\n                    email: octocat@github.com\n                  content: bXkgdXBkYXRlZCBmaWxlIGNvbnRlbnRz\n                  sha: 95b966ae1c166bd92f8ae7d1c313e738c731dfc3\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/file-commit'\n              examples:\n                example-for-updating-a-file:\n                  $ref: '#/components/examples/file-commit-example-for-updating-a-file'\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/file-commit'\n              examples:\n                example-for-creating-a-file:\n                  $ref: '#/components/examples/file-commit-example-for-creating-a-file'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '409':\n          $ref: '#/components/responses/conflict'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: contents\n    delete:\n      summary: Delete a file\n      description: |-\n        Deletes a file in a repository.\n\n        You can provide an additional `committer` parameter, which is an object containing information about the committer. Or, you can provide an `author` parameter, which is an object containing information about the author.\n\n        The `author` section is optional and is filled in with the `committer` information if omitted. If the `committer` information is omitted, the authenticated user's information is used.\n\n        You must provide values for both `name` and `email`, whether you choose to use `author` or `committer`. Otherwise, you'll receive a `422` status code.\n      tags:\n        - repos\n      operationId: repos/delete-file\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#delete-a-file\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: path\n          description: path parameter\n          in: path\n          required: true\n          schema:\n            type: string\n          x-multi-segment: true\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                message:\n                  type: string\n                  description: The commit message.\n                sha:\n                  type: string\n                  description: The blob SHA of the file being replaced.\n                branch:\n                  type: string\n                  description: 'The branch name. Default: the repository’s default branch (usually `master`)'\n                committer:\n                  type: object\n                  description: object containing information about the committer.\n                  properties:\n                    name:\n                      type: string\n                      description: The name of the author (or committer) of the commit\n                    email:\n                      type: string\n                      description: The email of the author (or committer) of the commit\n                author:\n                  type: object\n                  description: object containing information about the author.\n                  properties:\n                    name:\n                      type: string\n                      description: The name of the author (or committer) of the commit\n                    email:\n                      type: string\n                      description: The email of the author (or committer) of the commit\n              required:\n                - message\n                - sha\n            example:\n              message: my commit message\n              committer:\n                name: Monalisa Octocat\n                email: octocat@github.com\n              sha: 329688480d39049927147c162b9d2deaf885005f\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/file-commit'\n              examples:\n                default:\n                  $ref: '#/components/examples/file-commit'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '409':\n          $ref: '#/components/responses/conflict'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n        '503':\n          $ref: '#/components/responses/service_unavailable'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: contents\n  /repos/{owner}/{repo}/contributors:\n    get:\n      summary: List repository contributors\n      description: |-\n        Lists contributors to the specified repository and sorts them by the number of commits per contributor in descending order. This endpoint may return information that is a few hours old because the GitHub REST API v3 caches contributor data to improve performance.\n\n        GitHub identifies contributors by author email address. This endpoint groups contribution counts by GitHub user, which includes all associated email addresses. To improve performance, only the first 500 author email addresses in the repository link to GitHub users. The rest will appear as anonymous contributors without associated GitHub user information.\n      tags:\n        - repos\n      operationId: repos/list-contributors\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-repository-contributors\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: anon\n          description: Set to `1` or `true` to include anonymous contributors in results.\n          in: query\n          required: false\n          schema:\n            type: string\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: if repository contains content\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/contributor'\n              examples:\n                response-if-repository-contains-content:\n                  $ref: '#/components/examples/contributor-items-response-if-repository-contains-content'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '204':\n          description: Response if repository is empty\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: null\n  /repos/{owner}/{repo}/deployments:\n    get:\n      summary: List deployments\n      description: 'Simple filtering of deployments is available via query parameters:'\n      tags:\n        - repos\n      operationId: repos/list-deployments\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-deployments\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: sha\n          description: The SHA recorded at creation time.\n          in: query\n          required: false\n          schema:\n            type: string\n            default: none\n        - name: ref\n          description: The name of the ref. This can be a branch, tag, or SHA.\n          in: query\n          required: false\n          schema:\n            type: string\n            default: none\n        - name: task\n          description: The name of the task for the deployment (e.g., `deploy` or `deploy:migrations`).\n          in: query\n          required: false\n          schema:\n            type: string\n            default: none\n        - name: environment\n          description: The name of the environment that was deployed to (e.g., `staging` or `production`).\n          in: query\n          required: false\n          schema:\n            type: string\n            default: none\n            nullable: true\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/deployment'\n              examples:\n                default:\n                  $ref: '#/components/examples/deployment-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: deployments\n    post:\n      summary: Create a deployment\n      description: |-\n        Deployments offer a few configurable parameters with certain defaults.\n\n        The `ref` parameter can be any named branch, tag, or SHA. At GitHub we often deploy branches and verify them\n        before we merge a pull request.\n\n        The `environment` parameter allows deployments to be issued to different runtime environments. Teams often have\n        multiple environments for verifying their applications, such as `production`, `staging`, and `qa`. This parameter\n        makes it easier to track which environments have requested deployments. The default environment is `production`.\n\n        The `auto_merge` parameter is used to ensure that the requested ref is not behind the repository's default branch. If\n        the ref _is_ behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds,\n        the API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will\n        return a failure response.\n\n        By default, [commit statuses](https://docs.github.com/rest/reference/commits#commit-statuses) for every submitted context must be in a `success`\n        state. The `required_contexts` parameter allows you to specify a subset of contexts that must be `success`, or to\n        specify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do\n        not require any contexts or create any commit statuses, the deployment will always succeed.\n\n        The `payload` parameter is available for any extra information that a deployment system might need. It is a JSON text\n        field that will be passed on when a deployment event is dispatched.\n\n        The `task` parameter is used by the deployment system to allow different execution paths. In the web world this might\n        be `deploy:migrations` to run schema changes on the system. In the compiled world this could be a flag to compile an\n        application with debugging enabled.\n\n        Users with `repo` or `repo_deployment` scopes can create a deployment for a given ref.\n\n        #### Merged branch response\n        You will see this response when GitHub automatically merges the base branch into the topic branch instead of creating\n        a deployment. This auto-merge happens when:\n        *   Auto-merge option is enabled in the repository\n        *   Topic branch does not include the latest changes on the base branch, which is `master` in the response example\n        *   There are no merge conflicts\n\n        If there are no new commits in the base branch, a new request to create a deployment should give a successful\n        response.\n\n        #### Merge conflict response\n        This error happens when the `auto_merge` option is enabled and when the default branch (in this case `master`), can't\n        be merged into the branch that's being deployed (in this case `topic-branch`), due to merge conflicts.\n\n        #### Failed commit status checks\n        This error happens when the `required_contexts` parameter indicates that one or more contexts need to have a `success`\n        status for the commit to be deployed, but one or more of the required contexts do not have a state of `success`.\n      tags:\n        - repos\n      operationId: repos/create-deployment\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#create-a-deployment\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ref:\n                  type: string\n                  description: The ref to deploy. This can be a branch, tag, or SHA.\n                task:\n                  type: string\n                  description: Specifies a task to execute (e.g., `deploy` or `deploy:migrations`).\n                  default: deploy\n                auto_merge:\n                  type: boolean\n                  description: Attempts to automatically merge the default branch into the requested ref, if it's behind the default branch.\n                  default: true\n                required_contexts:\n                  type: array\n                  description: The [status](https://docs.github.com/rest/reference/commits#commit-statuses) contexts to verify against commit status checks. If you omit this parameter, GitHub verifies all unique contexts before creating a deployment. To bypass checking entirely, pass an empty array. Defaults to all unique contexts.\n                  items:\n                    type: string\n                payload:\n                  oneOf:\n                    - type: object\n                      additionalProperties: true\n                    - type: string\n                      description: JSON payload with extra information about the deployment.\n                      default: ''\n                environment:\n                  type: string\n                  description: Name for the target deployment environment (e.g., `production`, `staging`, `qa`).\n                  default: production\n                description:\n                  type: string\n                  description: Short description of the deployment.\n                  default: ''\n                  nullable: true\n                transient_environment:\n                  type: boolean\n                  description: 'Specifies if the given environment is specific to the deployment and will no longer exist at some point in the future. Default: `false`'\n                  default: false\n                production_environment:\n                  type: boolean\n                  description: 'Specifies if the given environment is one that end-users directly interact with. Default: `true` when `environment` is `production` and `false` otherwise.'\n              required:\n                - ref\n            examples:\n              simple-example:\n                summary: Simple example\n                value:\n                  ref: topic-branch\n                  payload: '{ \"deploy\": \"migrate\" }'\n                  description: Deploy request from hubot\n              advanced-example:\n                summary: Advanced example\n                value:\n                  ref: topic-branch\n                  auto_merge: false\n                  payload: '{ \"deploy\": \"migrate\" }'\n                  description: Deploy request from hubot\n                  required_contexts:\n                    - ci/janky\n                    - security/brakeman\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deployment'\n              examples:\n                simple-example:\n                  $ref: '#/components/examples/deployment-simple-example'\n        '202':\n          description: Merged branch response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n              examples:\n                merged-branch-response:\n                  value:\n                    message: Auto-merged master into topic-branch on deployment.\n        '409':\n          description: Conflict when there is a merge conflict or the commit's status checks failed\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: deployments\n  /repos/{owner}/{repo}/deployments/{deployment_id}:\n    get:\n      summary: Get a deployment\n      description: ''\n      tags:\n        - repos\n      operationId: repos/get-deployment\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-a-deployment\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/deployment-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deployment'\n              examples:\n                default:\n                  $ref: '#/components/examples/deployment'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: deployments\n    delete:\n      summary: Delete a deployment\n      description: |-\n        If the repository only has one deployment, you can delete the deployment regardless of its status. If the repository has more than one deployment, you can only delete inactive deployments. This ensures that repositories with multiple deployments will always have an active deployment. Anyone with `repo` or `repo_deployment` scopes can delete a deployment.\n\n        To set a deployment as inactive, you must:\n\n        *   Create a new deployment that is active so that the system has a record of the current state, then delete the previously active deployment.\n        *   Mark the active deployment as inactive by adding any non-successful deployment status.\n\n        For more information, see \"[Create a deployment](https://docs.github.com/rest/reference/repos/#create-a-deployment)\" and \"[Create a deployment status](https://docs.github.com/rest/reference/repos#create-a-deployment-status).\"\n      tags:\n        - repos\n      operationId: repos/delete-deployment\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#delete-a-deployment\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/deployment-id'\n      responses:\n        '204':\n          description: Response\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed_simple'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: deployments\n  /repos/{owner}/{repo}/deployments/{deployment_id}/statuses:\n    get:\n      summary: List deployment statuses\n      description: 'Users with pull access can view deployment statuses for a deployment:'\n      tags:\n        - repos\n      operationId: repos/list-deployment-statuses\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-deployment-statuses\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/deployment-id'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/deployment-status'\n              examples:\n                default:\n                  $ref: '#/components/examples/deployment-status-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: deployments\n    post:\n      summary: Create a deployment status\n      description: |-\n        Users with `push` access can create deployment statuses for a given deployment.\n\n        GitHub Apps require `read \u0026 write` access to \"Deployments\" and `read-only` access to \"Repo contents\" (for private repos). OAuth Apps require the `repo_deployment` scope.\n      tags:\n        - repos\n      operationId: repos/create-deployment-status\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#create-a-deployment-status\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/deployment-id'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                state:\n                  type: string\n                  description: The state of the status. Can be one of `error`, `failure`, `inactive`, `in_progress`, `queued`, `pending`, or `success`. When you set a transient deployment to `inactive`, the deployment will be shown as `destroyed` in GitHub.\n                  enum:\n                    - error\n                    - failure\n                    - inactive\n                    - in_progress\n                    - queued\n                    - pending\n                    - success\n                target_url:\n                  type: string\n                  description: The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. **Note:** It's recommended to use the `log_url` parameter, which replaces `target_url`.\n                  default: ''\n                log_url:\n                  type: string\n                  description: 'The full URL of the deployment''s output. This parameter replaces `target_url`. We will continue to accept `target_url` to support legacy uses, but we recommend replacing `target_url` with `log_url`. Setting `log_url` will automatically set `target_url` to the same value. Default: `\"\"`'\n                  default: ''\n                description:\n                  type: string\n                  description: A short description of the status. The maximum description length is 140 characters.\n                  default: ''\n                environment:\n                  type: string\n                  description: Name for the target deployment environment, which can be changed when setting a deploy status. For example, `production`, `staging`, or `qa`.\n                  enum:\n                    - production\n                    - staging\n                    - qa\n                environment_url:\n                  type: string\n                  description: 'Sets the URL for accessing your environment. Default: `\"\"`'\n                  default: ''\n                auto_inactive:\n                  type: boolean\n                  description: 'Adds a new `inactive` status to all prior non-transient, non-production environment deployments with the same repository and `environment` name as the created status''s deployment. An `inactive` status is only added to deployments that had a `success` state. Default: `true`'\n              required:\n                - state\n            example:\n              environment: production\n              state: success\n              log_url: https://example.com/deployment/42/output\n              description: Deployment finished successfully.\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deployment-status'\n              examples:\n                default:\n                  $ref: '#/components/examples/deployment-status'\n          headers:\n            Location:\n              example: https://api.github.com/repos/octocat/example/deployments/42/statuses/1\n              schema:\n                type: string\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: deployments\n  /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}:\n    get:\n      summary: Get a deployment status\n      description: 'Users with pull access can view a deployment status for a deployment:'\n      tags:\n        - repos\n      operationId: repos/get-deployment-status\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-a-deployment-status\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/deployment-id'\n        - name: status_id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deployment-status'\n              examples:\n                default:\n                  $ref: '#/components/examples/deployment-status'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: deployments\n  /repos/{owner}/{repo}/dispatches:\n    post:\n      summary: Create a repository dispatch event\n      description: |-\n        You can use this endpoint to trigger a webhook event called `repository_dispatch` when you want activity that happens outside of GitHub to trigger a GitHub Actions workflow or GitHub App webhook. You must configure your GitHub Actions workflow or GitHub App to run when the `repository_dispatch` event occurs. For an example `repository_dispatch` webhook payload, see \"[RepositoryDispatchEvent](https://docs.github.com/webhooks/event-payloads/#repository_dispatch).\"\n\n        The `client_payload` parameter is available for any extra information that your workflow might need. This parameter is a JSON payload that will be passed on when the webhook event is dispatched. For example, the `client_payload` can include a message that a user would like to send using a GitHub Actions workflow. Or the `client_payload` can be used as a test to debug your workflow.\n\n        This endpoint requires write access to the repository by providing either:\n\n          - Personal access tokens with `repo` scope. For more information, see \"[Creating a personal access token for the command line](https://docs.github.com/articles/creating-a-personal-access-token-for-the-command-line)\" in the GitHub Help documentation.\n          - GitHub Apps with both `metadata:read` and `contents:read\u0026write` permissions.\n\n        This input example shows how you can use the `client_payload` as a test to debug your workflow.\n      tags:\n        - repos\n      operationId: repos/create-dispatch-event\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#create-a-repository-dispatch-event\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - event_type\n              properties:\n                event_type:\n                  type: string\n                  description: A custom webhook event name.\n                  minLength: 1\n                  maxLength: 100\n                client_payload:\n                  type: object\n                  description: JSON payload with extra information about the webhook event that your action or worklow may use.\n                  additionalProperties: true\n                  maxProperties: 10\n            example:\n              event_type: on-demand-test\n              client_payload:\n                unit: false\n                integration: true\n      responses:\n        '204':\n          description: Response\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: null\n  /repos/{owner}/{repo}/environments:\n    get:\n      summary: Get all environments\n      description: |-\n        Get all environments for a repository.\n\n        Anyone with read access to the repository can use this endpoint. If the repository is private, you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.\n      tags:\n        - repos\n      operationId: repos/get-all-environments\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-all-environments\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  total_count:\n                    description: The number of environments in this repository\n                    example: 5\n                    type: integer\n                  environments:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/environment'\n              examples:\n                default:\n                  $ref: '#/components/examples/environments'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: environments\n  /repos/{owner}/{repo}/environments/{environment_name}:\n    get:\n      summary: Get an environment\n      description: Anyone with read access to the repository can use this endpoint. If the repository is private, you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.\n      tags:\n        - repos\n      operationId: repos/get-environment\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-an-environment\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/environment-name'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/environment'\n              examples:\n                default:\n                  $ref: '#/components/examples/environment'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: environments\n    put:\n      summary: Create or update an environment\n      description: |-\n        Create or update an environment with protection rules, such as required reviewers. For more information about environment protection rules, see \"[Environments](/actions/reference/environments#environment-protection-rules).\"\n\n        **Note:** Although you can use this operation to specify that only branches that match specified name patterns can deploy to this environment, you must use the UI to set the name patterns. For more information, see \"[Environments](/actions/reference/environments#deployment-branches).\"\n\n        **Note:** To create or update secrets for an environment, see \"[Secrets](/rest/reference/actions#secrets).\"\n\n        You must authenticate using an access token with the repo scope to use this endpoint.\n      tags:\n        - repos\n      operationId: repos/create-or-update-environment\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#create-or-update-an-environment\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/environment-name'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              nullable: true\n              properties:\n                wait_timer:\n                  $ref: '#/components/schemas/wait-timer'\n                reviewers:\n                  type: array\n                  nullable: true\n                  description: The people or teams that may review jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.\n                  items:\n                    type: object\n                    properties:\n                      type:\n                        $ref: '#/components/schemas/deployment-reviewer-type'\n                      id:\n                        type: integer\n                        description: The id of the user or team who can review the deployment\n                        example: 4532992\n                deployment_branch_policy:\n                  $ref: '#/components/schemas/deployment_branch_policy'\n              additionalProperties: false\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/environment'\n              examples:\n                default:\n                  $ref: '#/components/examples/environment'\n        '422':\n          description: Validation error when the environment name is invalid or when `protected_branches` and `custom_branch_policies` in `deployment_branch_policy` are set to the same value\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/basic-error'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: environments\n    delete:\n      summary: Delete an environment\n      description: You must authenticate using an access token with the repo scope to use this endpoint.\n      tags:\n        - repos\n      operationId: repos/delete-an-environment\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#delete-an-environment\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/environment-name'\n      responses:\n        '204':\n          description: Default response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: environments\n  /repos/{owner}/{repo}/forks:\n    get:\n      summary: List forks\n      description: ''\n      tags:\n        - repos\n      operationId: repos/list-forks\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-forks\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: sort\n          description: The sort order. Can be either `newest`, `oldest`, or `stargazers`.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - newest\n              - oldest\n              - stargazers\n              - watchers\n            default: newest\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/minimal-repository'\n              examples:\n                default:\n                  $ref: '#/components/examples/minimal-repository-items-2'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '400':\n          $ref: '#/components/responses/bad_request'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: forks\n    post:\n      summary: Create a fork\n      description: |-\n        Create a fork for the authenticated user.\n\n        **Note**: Forking a Repository happens asynchronously. You may have to wait a short period of time before you can access the git objects. If this takes longer than 5 minutes, be sure to contact [GitHub Support](https://support.github.com/contact?tags=dotcom-rest-api).\n      tags:\n        - repos\n      operationId: repos/create-fork\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#create-a-fork\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              nullable: true\n              properties:\n                organization:\n                  type: string\n                  description: Optional parameter to specify the organization name if forking into an organization.\n      responses:\n        '202':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/full-repository'\n              examples:\n                default:\n                  $ref: '#/components/examples/full-repository'\n        '400':\n          $ref: '#/components/responses/bad_request'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: forks\n  /repos/{owner}/{repo}/hooks:\n    get:\n      summary: List repository webhooks\n      description: ''\n      tags:\n        - repos\n      operationId: repos/list-webhooks\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-repository-webhooks\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/hook'\n              examples:\n                default:\n                  $ref: '#/components/examples/hook-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: webhooks\n    post:\n      summary: Create a repository webhook\n      description: |-\n        Repositories can have multiple webhooks installed. Each webhook should have a unique `config`. Multiple webhooks can\n        share the same `config` as long as those webhooks do not have any `events` that overlap.\n      tags:\n        - repos\n      operationId: repos/create-webhook\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#create-a-repository-webhook\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              nullable: true\n              properties:\n                name:\n                  type: string\n                  description: 'Use `web` to create a webhook. Default: `web`. This parameter only accepts the value `web`.'\n                config:\n                  type: object\n                  description: Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/rest/reference/repos#create-hook-config-params).\n                  properties:\n                    url:\n                      $ref: '#/components/schemas/webhook-config-url'\n                    content_type:\n                      $ref: '#/components/schemas/webhook-config-content-type'\n                    secret:\n                      $ref: '#/components/schemas/webhook-config-secret'\n                    insecure_ssl:\n                      $ref: '#/components/schemas/webhook-config-insecure-ssl'\n                    token:\n                      type: string\n                      example: '\"abc\"'\n                    digest:\n                      type: string\n                      example: '\"sha256\"'\n                events:\n                  type: array\n                  description: Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for.\n                  default:\n                    - push\n                  items:\n                    type: string\n                active:\n                  type: boolean\n                  description: Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.\n                  default: true\n              additionalProperties: false\n            example:\n              name: web\n              active: true\n              events:\n                - push\n                - pull_request\n              config:\n                url: https://example.com/webhook\n                content_type: json\n                insecure_ssl: '0'\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/hook'\n              examples:\n                default:\n                  $ref: '#/components/examples/hook'\n          headers:\n            Location:\n              example: https://api.github.com/repos/octocat/Hello-World/hooks/12345678\n              schema:\n                type: string\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: webhooks\n  /repos/{owner}/{repo}/hooks/{hook_id}:\n    get:\n      summary: Get a repository webhook\n      description: Returns a webhook configured in a repository. To get only the webhook `config` properties, see \"[Get a webhook configuration for a repository](/rest/reference/repos#get-a-webhook-configuration-for-a-repository).\"\n      tags:\n        - repos\n      operationId: repos/get-webhook\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-a-repository-webhook\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/hook-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/hook'\n              examples:\n                default:\n                  $ref: '#/components/examples/hook'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: webhooks\n    patch:\n      summary: Update a repository webhook\n      description: Updates a webhook configured in a repository. If you previously had a `secret` set, you must provide the same `secret` or set a new `secret` or the secret will be removed. If you are only updating individual webhook `config` properties, use \"[Update a webhook configuration for a repository](/rest/reference/repos#update-a-webhook-configuration-for-a-repository).\"\n      tags:\n        - repos\n      operationId: repos/update-webhook\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#update-a-repository-webhook\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/hook-id'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                config:\n                  type: object\n                  description: Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/rest/reference/repos#create-hook-config-params).\n                  properties:\n                    url:\n                      $ref: '#/components/schemas/webhook-config-url'\n                    content_type:\n                      $ref: '#/components/schemas/webhook-config-content-type'\n                    secret:\n                      $ref: '#/components/schemas/webhook-config-secret'\n                    insecure_ssl:\n                      $ref: '#/components/schemas/webhook-config-insecure-ssl'\n                    address:\n                      type: string\n                      example: '\"bar@example.com\"'\n                    room:\n                      type: string\n                      example: '\"The Serious Room\"'\n                  required:\n                    - url\n                events:\n                  type: array\n                  description: Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for. This replaces the entire array of events.\n                  default:\n                    - push\n                  items:\n                    type: string\n                add_events:\n                  type: array\n                  description: Determines a list of events to be added to the list of events that the Hook triggers for.\n                  items:\n                    type: string\n                remove_events:\n                  type: array\n                  description: Determines a list of events to be removed from the list of events that the Hook triggers for.\n                  items:\n                    type: string\n                active:\n                  type: boolean\n                  description: Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.\n                  default: true\n            example:\n              active: true\n              add_events:\n                - pull_request\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/hook'\n              examples:\n                default:\n                  $ref: '#/components/examples/hook'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: webhooks\n    delete:\n      summary: Delete a repository webhook\n      description: ''\n      tags:\n        - repos\n      operationId: repos/delete-webhook\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#delete-a-repository-webhook\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/hook-id'\n      responses:\n        '204':\n          description: Response\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: webhooks\n  /repos/{owner}/{repo}/hooks/{hook_id}/config:\n    get:\n      summary: Get a webhook configuration for a repository\n      description: |-\n        Returns the webhook configuration for a repository. To get more information about the webhook, including the `active` state and `events`, use \"[Get a repository webhook](/rest/reference/orgs#get-a-repository-webhook).\"\n\n        Access tokens must have the `read:repo_hook` or `repo` scope, and GitHub Apps must have the `repository_hooks:read` permission.\n      tags:\n        - repos\n      operationId: repos/get-webhook-config-for-repo\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-a-webhook-configuration-for-a-repository\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/hook-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/webhook-config'\n              examples:\n                default:\n                  $ref: '#/components/examples/webhook-config'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: webhooks\n    patch:\n      summary: Update a webhook configuration for a repository\n      description: |-\n        Updates the webhook configuration for a repository. To update more information about the webhook, including the `active` state and `events`, use \"[Update a repository webhook](/rest/reference/orgs#update-a-repository-webhook).\"\n\n        Access tokens must have the `write:repo_hook` or `repo` scope, and GitHub Apps must have the `repository_hooks:write` permission.\n      tags:\n        - repos\n      operationId: repos/update-webhook-config-for-repo\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#update-a-webhook-configuration-for-a-repository\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/hook-id'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties: false\n              properties:\n                url:\n                  $ref: '#/components/schemas/webhook-config-url'\n                content_type:\n                  $ref: '#/components/schemas/webhook-config-content-type'\n                secret:\n                  $ref: '#/components/schemas/webhook-config-secret'\n                insecure_ssl:\n                  $ref: '#/components/schemas/webhook-config-insecure-ssl'\n              example:\n                content_type: json\n                insecure_ssl: '0'\n                secret: '********'\n                url: https://example.com/webhook\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/webhook-config'\n              examples:\n                default:\n                  $ref: '#/components/examples/webhook-config'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: webhooks\n  /repos/{owner}/{repo}/hooks/{hook_id}/deliveries:\n    get:\n      summary: List deliveries for a repository webhook\n      description: Returns a list of webhook deliveries for a webhook configured in a repository.\n      tags:\n        - repos\n      operationId: repos/list-webhook-deliveries\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-deliveries-for-a-repository-webhook\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/hook-id'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/cursor'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/hook-delivery-item'\n              examples:\n                default:\n                  $ref: '#/components/examples/hook-delivery-items'\n        '400':\n          $ref: '#/components/responses/bad_request'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: webhooks\n  /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}:\n    get:\n      summary: Get a delivery for a repository webhook\n      description: Returns a delivery for a webhook configured in a repository.\n      tags:\n        - repos\n      operationId: repos/get-webhook-delivery\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-a-delivery-for-a-repository-webhook\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/hook-id'\n        - $ref: '#/components/parameters/delivery-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/hook-delivery'\n              examples:\n                default:\n                  $ref: '#/components/examples/hook-delivery'\n        '400':\n          $ref: '#/components/responses/bad_request'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: webhooks\n  /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts:\n    post:\n      summary: Redeliver a delivery for a repository webhook\n      description: Redeliver a webhook delivery for a webhook configured in a repository.\n      tags:\n        - repos\n      operationId: repos/redeliver-webhook-delivery\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#redeliver-a-delivery-for-a-repository-webhook\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/hook-id'\n        - $ref: '#/components/parameters/delivery-id'\n      responses:\n        '202':\n          $ref: '#/components/responses/accepted'\n        '400':\n          $ref: '#/components/responses/bad_request'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: webhooks\n  /repos/{owner}/{repo}/hooks/{hook_id}/pings:\n    post:\n      summary: Ping a repository webhook\n      description: This will trigger a [ping event](https://docs.github.com/webhooks/#ping-event) to be sent to the hook.\n      tags:\n        - repos\n      operationId: repos/ping-webhook\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#ping-a-repository-webhook\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/hook-id'\n      responses:\n        '204':\n          description: Response\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: webhooks\n  /repos/{owner}/{repo}/hooks/{hook_id}/tests:\n    post:\n      summary: Test the push repository webhook\n      description: |-\n        This will trigger the hook with the latest push to the current repository if the hook is subscribed to `push` events. If the hook is not subscribed to `push` events, the server will respond with 204 but no test POST will be generated.\n\n        **Note**: Previously `/repos/:owner/:repo/hooks/:hook_id/test`\n      tags:\n        - repos\n      operationId: repos/test-push-webhook\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#test-the-push-repository-webhook\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/hook-id'\n      responses:\n        '204':\n          description: Response\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: webhooks\n  /repos/{owner}/{repo}/invitations:\n    get:\n      summary: List repository invitations\n      description: When authenticating as a user with admin rights to a repository, this endpoint will list all currently open repository invitations.\n      tags:\n        - repos\n      operationId: repos/list-invitations\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-repository-invitations\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/repository-invitation'\n              examples:\n                default:\n                  $ref: '#/components/examples/repository-invitation-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: invitations\n  /repos/{owner}/{repo}/invitations/{invitation_id}:\n    patch:\n      summary: Update a repository invitation\n      description: ''\n      tags:\n        - repos\n      operationId: repos/update-invitation\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#update-a-repository-invitation\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/invitation-id'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                permissions:\n                  type: string\n                  description: The permissions that the associated user will have on the repository. Valid values are `read`, `write`, `maintain`, `triage`, and `admin`.\n                  enum:\n                    - read\n                    - write\n                    - maintain\n                    - triage\n                    - admin\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/repository-invitation'\n              examples:\n                default:\n                  $ref: '#/components/examples/repository-invitation'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: invitations\n    delete:\n      summary: Delete a repository invitation\n      description: ''\n      tags:\n        - repos\n      operationId: repos/delete-invitation\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#delete-a-repository-invitation\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/invitation-id'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: invitations\n  /repos/{owner}/{repo}/keys:\n    get:\n      summary: List deploy keys\n      description: ''\n      tags:\n        - repos\n      operationId: repos/list-deploy-keys\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-deploy-keys\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/deploy-key'\n              examples:\n                default:\n                  $ref: '#/components/examples/deploy-key-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: keys\n    post:\n      summary: Create a deploy key\n      description: You can create a read-only deploy key.\n      tags:\n        - repos\n      operationId: repos/create-deploy-key\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#create-a-deploy-key\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                title:\n                  type: string\n                  description: A name for the key.\n                key:\n                  type: string\n                  description: The contents of the key.\n                read_only:\n                  type: boolean\n                  description: |-\n                    If `true`, the key will only be able to read repository contents. Otherwise, the key will be able to read and write.  \n                      \n                    Deploy keys with write access can perform the same actions as an organization member with admin access, or a collaborator on a personal repository. For more information, see \"[Repository permission levels for an organization](https://docs.github.com/articles/repository-permission-levels-for-an-organization/)\" and \"[Permission levels for a user account repository](https://docs.github.com/articles/permission-levels-for-a-user-account-repository/).\"\n              required:\n                - key\n            example:\n              title: octocat@octomac\n              key: ssh-rsa AAA...\n              read_only: true\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deploy-key'\n              examples:\n                default:\n                  $ref: '#/components/examples/deploy-key'\n          headers:\n            Location:\n              example: https://api.github.com/repos/octocat/Hello-World/keys/1\n              schema:\n                type: string\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: keys\n  /repos/{owner}/{repo}/keys/{key_id}:\n    get:\n      summary: Get a deploy key\n      description: ''\n      tags:\n        - repos\n      operationId: repos/get-deploy-key\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-a-deploy-key\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/key-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deploy-key'\n              examples:\n                default:\n                  $ref: '#/components/examples/deploy-key'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: keys\n    delete:\n      summary: Delete a deploy key\n      description: Deploy keys are immutable. If you need to update a key, remove the key and create a new one instead.\n      tags:\n        - repos\n      operationId: repos/delete-deploy-key\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#delete-a-deploy-key\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/key-id'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: keys\n  /repos/{owner}/{repo}/languages:\n    get:\n      summary: List repository languages\n      description: Lists languages for the specified repository. The value shown for each language is the number of bytes of code written in that language.\n      tags:\n        - repos\n      operationId: repos/list-languages\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-repository-languages\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/language'\n              examples:\n                default:\n                  $ref: '#/components/examples/language'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: null\n  /repos/{owner}/{repo}/lfs:\n    put:\n      summary: Enable Git LFS for a repository\n      description: ''\n      operationId: repos/enable-lfs-for-repo\n      tags:\n        - repos\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#enable-git-lfs-for-a-repository\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '202':\n          $ref: '#/components/responses/accepted'\n        '403':\n          description: |-\n            We will return a 403 with one of the following messages:\n\n            - Git LFS support not enabled because Git LFS is globally disabled.\n            - Git LFS support not enabled because Git LFS is disabled for the root repository in the network.\n            - Git LFS support not enabled because Git LFS is disabled for \u003cowner\u003e.\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: repos\n        subcategory: lfs\n    delete:\n      summary: Disable Git LFS for a repository\n      description: ''\n      operationId: repos/disable-lfs-for-repo\n      tags:\n        - repos\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#disable-git-lfs-for-a-repository\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: repos\n        subcategory: lfs\n  /repos/{owner}/{repo}/merge-upstream:\n    post:\n      summary: Sync a fork branch with the upstream repository\n      description: Sync a branch of a forked repository to keep it up-to-date with the upstream repository.\n      tags:\n        - repos\n      operationId: repos/merge-upstream\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#sync-a-fork-branch-with-the-upstream-repository\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                branch:\n                  type: string\n                  description: The name of the branch which should be updated to match upstream.\n              required:\n                - branch\n            example:\n              branch: main\n      responses:\n        '200':\n          description: The branch has been successfully synced with the upstream repository\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/merged-upstream'\n              examples:\n                default:\n                  $ref: '#/components/examples/merged-upstream'\n        '409':\n          description: The branch could not be synced because of a merge conflict\n        '422':\n          description: The branch could not be synced for some other reason\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: branches\n  /repos/{owner}/{repo}/merges:\n    post:\n      summary: Merge a branch\n      description: ''\n      tags:\n        - repos\n      operationId: repos/merge\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#merge-a-branch\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base:\n                  type: string\n                  description: The name of the base branch that the head will be merged into.\n                head:\n                  type: string\n                  description: The head to merge. This can be a branch name or a commit SHA1.\n                commit_message:\n                  type: string\n                  description: Commit message to use for the merge commit. If omitted, a default message will be used.\n              required:\n                - base\n                - head\n            example:\n              base: master\n              head: cool_feature\n              commit_message: Shipped cool_feature!\n      responses:\n        '201':\n          description: Successful Response (The resulting merge commit)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/commit'\n              examples:\n                default:\n                  $ref: '#/components/examples/commit'\n        '204':\n          description: Response when already merged\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          description: Not Found when the base or head does not exist\n        '409':\n          description: Conflict when there is a merge conflict\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: merging\n  /repos/{owner}/{repo}/pages:\n    get:\n      summary: Get a GitHub Pages site\n      description: ''\n      tags:\n        - repos\n      operationId: repos/get-pages\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-a-github-pages-site\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/page'\n              examples:\n                default:\n                  $ref: '#/components/examples/page'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: pages\n    post:\n      summary: Create a GitHub Pages site\n      description: Configures a GitHub Pages site. For more information, see \"[About GitHub Pages](/github/working-with-github-pages/about-github-pages).\"\n      tags:\n        - repos\n      operationId: repos/create-pages-site\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#create-a-github-pages-site\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              description: The source branch and directory used to publish your Pages site.\n              nullable: true\n              properties:\n                source:\n                  type: object\n                  description: The source branch and directory used to publish your Pages site.\n                  properties:\n                    branch:\n                      type: string\n                      description: The repository branch used to publish your site's source files.\n                    path:\n                      type: string\n                      description: 'The repository directory that includes the source files for the Pages site. Allowed paths are `/` or `/docs`. Default: `/`'\n                      enum:\n                        - /\n                        - /docs\n                      default: /\n                  required:\n                    - branch\n              required:\n                - source\n            example:\n              source:\n                branch: main\n                path: /docs\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/page'\n              examples:\n                default:\n                  $ref: '#/components/examples/page'\n        '409':\n          $ref: '#/components/responses/conflict'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: pages\n    put:\n      summary: Update information about a GitHub Pages site\n      description: Updates information for a GitHub Pages site. For more information, see \"[About GitHub Pages](/github/working-with-github-pages/about-github-pages).\n      tags:\n        - repos\n      operationId: repos/update-information-about-pages-site\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#update-information-about-a-github-pages-site\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                cname:\n                  type: string\n                  description: Specify a custom domain for the repository. Sending a `null` value will remove the custom domain. For more about custom domains, see \"[Using a custom domain with GitHub Pages](https://docs.github.com/articles/using-a-custom-domain-with-github-pages/).\"\n                  nullable: true\n                https_enforced:\n                  type: boolean\n                  description: Specify whether HTTPS should be enforced for the repository.\n                public:\n                  type: boolean\n                  description: Configures access controls for the GitHub Pages site. If public is set to `true`, the site is accessible to anyone on the internet. If set to `false`, the site will only be accessible to users who have at least `read` access to the repository that published the site. This includes anyone in your Enterprise if the repository is set to `internal` visibility. This feature is only available to repositories in an organization on an Enterprise plan.\n                source:\n                  anyOf:\n                    - type: string\n                      description: Update the source for the repository. Must include the branch name, and may optionally specify the subdirectory `/docs`. Possible values are `\"gh-pages\"`, `\"master\"`, and `\"master /docs\"`.\n                      enum:\n                        - gh-pages\n                        - master\n                        - master /docs\n                    - type: object\n                      description: Update the source for the repository. Must include the branch name and path.\n                      properties:\n                        branch:\n                          type: string\n                          description: The repository branch used to publish your site's source files.\n                        path:\n                          type: string\n                          description: The repository directory that includes the source files for the Pages site. Allowed paths are `/` or `/docs`.\n                          enum:\n                            - /\n                            - /docs\n                      required:\n                        - branch\n                        - path\n              anyOf:\n                - required:\n                    - source\n                - required:\n                    - cname\n                - required:\n                    - public\n                - required:\n                    - https_enforced\n            example:\n              cname: octocatblog.com\n              source:\n                branch: main\n                path: /\n      responses:\n        '204':\n          description: Response\n        '400':\n          $ref: '#/components/responses/bad_request'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: pages\n    delete:\n      summary: Delete a GitHub Pages site\n      description: ''\n      tags:\n        - repos\n      operationId: repos/delete-pages-site\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#delete-a-github-pages-site\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '204':\n          description: Response\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: pages\n  /repos/{owner}/{repo}/pages/builds:\n    get:\n      summary: List GitHub Pages builds\n      description: ''\n      tags:\n        - repos\n      operationId: repos/list-pages-builds\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-github-pages-builds\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/page-build'\n              examples:\n                default:\n                  $ref: '#/components/examples/page-build-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: pages\n    post:\n      summary: Request a GitHub Pages build\n      description: |-\n        You can request that your site be built from the latest revision on the default branch. This has the same effect as pushing a commit to your default branch, but does not require an additional commit. Manually triggering page builds can be helpful when diagnosing build warnings and failures.\n\n        Build requests are limited to one concurrent build per repository and one concurrent build per requester. If you request a build while another is still in progress, the second request will be queued until the first completes.\n      tags:\n        - repos\n      operationId: repos/request-pages-build\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#request-a-github-pages-build\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/page-build-status'\n              examples:\n                default:\n                  $ref: '#/components/examples/page-build-status'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: pages\n  /repos/{owner}/{repo}/pages/builds/latest:\n    get:\n      summary: Get latest Pages build\n      description: ''\n      tags:\n        - repos\n      operationId: repos/get-latest-pages-build\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-latest-pages-build\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/page-build'\n              examples:\n                default:\n                  $ref: '#/components/examples/page-build'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: pages\n  /repos/{owner}/{repo}/pages/builds/{build_id}:\n    get:\n      summary: Get GitHub Pages build\n      description: ''\n      tags:\n        - repos\n      operationId: repos/get-pages-build\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-github-pages-build\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: build_id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/page-build'\n              examples:\n                default:\n                  $ref: '#/components/examples/page-build'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: pages\n  /repos/{owner}/{repo}/pages/health:\n    get:\n      summary: Get a DNS health check for GitHub Pages\n      description: |-\n        Gets a health check of the DNS settings for the `CNAME` record configured for a repository's GitHub Pages.\n\n        The first request to this endpoint returns a `202 Accepted` status and starts an asynchronous background task to get the results for the domain. After the background task completes, subsequent requests to this endpoint return a `200 OK` status with the health check results in the response.\n\n        Users must have admin or owner permissions. GitHub Apps must have the `pages:write` and `administration:write` permission to use this endpoint.\n      tags:\n        - repos\n      operationId: repos/get-pages-health-check\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-a-dns-health-check-for-github-pages\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/pages-health-check'\n              examples:\n                default:\n                  $ref: '#/components/examples/pages-health-check'\n        '202':\n          description: Empty response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/empty-object'\n        '400':\n          description: Custom domains are not available for GitHub Pages\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          description: There isn't a CNAME for this page\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: pages\n  /repos/{owner}/{repo}/readme:\n    get:\n      summary: Get a repository README\n      description: |-\n        Gets the preferred README for a repository.\n\n        READMEs support [custom media types](https://docs.github.com/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML.\n      tags:\n        - repos\n      operationId: repos/get-readme\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-a-repository-readme\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: ref\n          description: 'The name of the commit/branch/tag. Default: the repository’s default branch (usually `master`)'\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/content-file'\n              examples:\n                default:\n                  $ref: '#/components/examples/content-file'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: contents\n  /repos/{owner}/{repo}/readme/{dir}:\n    get:\n      summary: Get a repository README for a directory\n      description: |-\n        Gets the README from a repository directory.\n\n        READMEs support [custom media types](https://docs.github.com/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML.\n      tags:\n        - repos\n      operationId: repos/get-readme-in-directory\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-a-repository-directory-readme\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: dir\n          description: The alternate path to look for a README file\n          in: path\n          required: true\n          schema:\n            type: string\n          x-multi-segment: true\n        - name: ref\n          description: 'The name of the commit/branch/tag. Default: the repository’s default branch (usually `master`)'\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/content-file'\n              examples:\n                default:\n                  $ref: '#/components/examples/content-file'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: contents\n  /repos/{owner}/{repo}/releases:\n    get:\n      summary: List releases\n      description: |-\n        This returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the [Repository Tags API](https://docs.github.com/rest/reference/repos#list-repository-tags).\n\n        Information about published releases are available to everyone. Only users with push access will receive listings for draft releases.\n      tags:\n        - repos\n      operationId: repos/list-releases\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-releases\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/release'\n              examples:\n                default:\n                  $ref: '#/components/examples/release-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: releases\n    post:\n      summary: Create a release\n      description: |-\n        Users with push access to the repository can create a release.\n\n        This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" and \"[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)\" for details.\n      tags:\n        - repos\n      operationId: repos/create-release\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#create-a-release\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                tag_name:\n                  type: string\n                  description: The name of the tag.\n                target_commitish:\n                  type: string\n                  description: 'Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository''s default branch (usually `master`).'\n                name:\n                  type: string\n                  description: The name of the release.\n                body:\n                  type: string\n                  description: Text describing the contents of the tag.\n                draft:\n                  type: boolean\n                  description: '`true` to create a draft (unpublished) release, `false` to create a published one.'\n                  default: false\n                prerelease:\n                  type: boolean\n                  description: '`true` to identify the release as a prerelease. `false` to identify the release as a full release.'\n                  default: false\n                discussion_category_name:\n                  type: string\n                  description: If specified, a discussion of the specified category is created and linked to the release. The value must be a category that already exists in the repository. For more information, see \"[Managing categories for discussions in your repository](https://docs.github.com/discussions/managing-discussions-for-your-community/managing-categories-for-discussions-in-your-repository).\"\n                generate_release_notes:\n                  type: boolean\n                  description: Whether to automatically generate the name and body for this release. If `name` is specified, the specified name will be used; otherwise, a name will be automatically generated. If `body` is specified, the body will be pre-pended to the automatically generated notes.\n                  default: false\n              required:\n                - tag_name\n            example:\n              tag_name: v1.0.0\n              target_commitish: master\n              name: v1.0.0\n              body: Description of the release\n              draft: false\n              prerelease: false\n              generate_release_notes: false\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/release'\n              examples:\n                default:\n                  $ref: '#/components/examples/release'\n          headers:\n            Location:\n              example: https://api.github.com/repos/octocat/Hello-World/releases/1\n              schema:\n                type: string\n        '404':\n          description: Not Found if the discussion category name is invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/basic-error'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        triggersNotification: true\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: releases\n  /repos/{owner}/{repo}/releases/assets/{asset_id}:\n    get:\n      summary: Get a release asset\n      description: To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://docs.github.com/rest/overview/media-types). The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a `200` or `302` response.\n      tags:\n        - repos\n      operationId: repos/get-release-asset\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-a-release-asset\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/asset-id'\n      responses:\n        '200':\n          description: To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://docs.github.com/rest/overview/media-types). The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a `200` or `302` response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/release-asset'\n              examples:\n                default:\n                  $ref: '#/components/examples/release-asset'\n        '302':\n          $ref: '#/components/responses/found'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '415':\n          $ref: '#/components/responses/preview_header_missing'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: releases\n    patch:\n      summary: Update a release asset\n      description: Users with push access to the repository can edit a release asset.\n      tags:\n        - repos\n      operationId: repos/update-release-asset\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#update-a-release-asset\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/asset-id'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: The file name of the asset.\n                label:\n                  type: string\n                  description: An alternate short description of the asset. Used in place of the filename.\n                state:\n                  type: string\n                  example: '\"uploaded\"'\n            example:\n              name: foo-1.0.0-osx.zip\n              label: Mac binary\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/release-asset'\n              examples:\n                default:\n                  $ref: '#/components/examples/release-asset'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: releases\n    delete:\n      summary: Delete a release asset\n      description: ''\n      tags:\n        - repos\n      operationId: repos/delete-release-asset\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#delete-a-release-asset\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/asset-id'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: releases\n  /repos/{owner}/{repo}/releases/generate-notes:\n    post:\n      summary: Generate release notes content for a release\n      description: Generate a name and body describing a [release](https://docs.github.com/rest/reference/repos#releases). The body content will be markdown formatted and contain information like the changes since last release and users who contributed. The generated release notes are not saved anywhere. They are intended to be generated and used when creating a new release.\n      tags:\n        - repos\n      operationId: repos/generate-release-notes\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#generate-release-notes\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                tag_name:\n                  type: string\n                  description: The tag name for the release. This can be an existing tag or a new one.\n                target_commitish:\n                  type: string\n                  description: Specifies the commitish value that will be the target for the release's tag. Required if the supplied tag_name does not reference an existing tag. Ignored if the tag_name already exists.\n                previous_tag_name:\n                  type: string\n                  description: The name of the previous tag to use as the starting point for the release notes. Use to manually specify the range for the set of changes considered as part this release.\n                configuration_file_path:\n                  type: string\n                  description: Specifies a path to a file in the repository containing configuration settings used for generating the release notes. If unspecified, the configuration file located in the repository at '.github/release.yml' or '.github/release.yaml' will be used. If that is not present, the default configuration will be used.\n              required:\n                - tag_name\n            example:\n              tag_name: v1.0.0\n              target_commitish: main\n              previous_tag_name: v0.9.2\n              configuration_file_path: .github/custom_release_config.yml\n      responses:\n        '200':\n          description: Name and body of generated release notes\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/release-notes-content'\n              examples:\n                default:\n                  $ref: '#/components/examples/release-notes-content'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: releases\n  /repos/{owner}/{repo}/releases/latest:\n    get:\n      summary: Get the latest release\n      description: |-\n        View the latest published full release for the repository.\n\n        The latest release is the most recent non-prerelease, non-draft release, sorted by the `created_at` attribute. The `created_at` attribute is the date of the commit used for the release, and not the date when the release was drafted or published.\n      tags:\n        - repos\n      operationId: repos/get-latest-release\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-the-latest-release\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/release'\n              examples:\n                default:\n                  $ref: '#/components/examples/release'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: releases\n  /repos/{owner}/{repo}/releases/tags/{tag}:\n    get:\n      summary: Get a release by tag name\n      description: Get a published release with the specified tag.\n      tags:\n        - repos\n      operationId: repos/get-release-by-tag\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-a-release-by-tag-name\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: tag\n          description: tag parameter\n          in: path\n          required: true\n          schema:\n            type: string\n          x-multi-segment: true\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/release'\n              examples:\n                default:\n                  $ref: '#/components/examples/release'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: releases\n  /repos/{owner}/{repo}/releases/{release_id}:\n    get:\n      summary: Get a release\n      description: '**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hypermedia resource](https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia).'\n      tags:\n        - repos\n      operationId: repos/get-release\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-a-release\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/release-id'\n      responses:\n        '200':\n          description: '**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hypermedia resource](https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia).'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/release'\n              examples:\n                default:\n                  $ref: '#/components/examples/release'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: releases\n    patch:\n      summary: Update a release\n      description: Users with push access to the repository can edit a release.\n      tags:\n        - repos\n      operationId: repos/update-release\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#update-a-release\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/release-id'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                tag_name:\n                  type: string\n                  description: The name of the tag.\n                target_commitish:\n                  type: string\n                  description: 'Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository''s default branch (usually `master`).'\n                name:\n                  type: string\n                  description: The name of the release.\n                body:\n                  type: string\n                  description: Text describing the contents of the tag.\n                draft:\n                  type: boolean\n                  description: '`true` makes the release a draft, and `false` publishes the release.'\n                prerelease:\n                  type: boolean\n                  description: '`true` to identify the release as a prerelease, `false` to identify the release as a full release.'\n                discussion_category_name:\n                  type: string\n                  description: If specified, a discussion of the specified category is created and linked to the release. The value must be a category that already exists in the repository. If there is already a discussion linked to the release, this parameter is ignored. For more information, see \"[Managing categories for discussions in your repository](https://docs.github.com/discussions/managing-discussions-for-your-community/managing-categories-for-discussions-in-your-repository).\"\n            example:\n              tag_name: v1.0.0\n              target_commitish: master\n              name: v1.0.0\n              body: Description of the release\n              draft: false\n              prerelease: false\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/release'\n              examples:\n                default:\n                  $ref: '#/components/examples/release'\n        '404':\n          description: Not Found if the discussion category name is invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/basic-error'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: releases\n    delete:\n      summary: Delete a release\n      description: Users with push access to the repository can delete a release.\n      tags:\n        - repos\n      operationId: repos/delete-release\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#delete-a-release\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/release-id'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: releases\n  /repos/{owner}/{repo}/releases/{release_id}/assets:\n    get:\n      summary: List release assets\n      description: ''\n      tags:\n        - repos\n      operationId: repos/list-release-assets\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-release-assets\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/release-id'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/release-asset'\n              examples:\n                default:\n                  $ref: '#/components/examples/release-asset-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: releases\n    post:\n      summary: Upload a release asset\n      description: |-\n        This endpoint makes use of [a Hypermedia relation](https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia) to determine which URL to access. The endpoint you call to upload release assets is specific to your release. Use the `upload_url` returned in\n        the response of the [Create a release endpoint](https://docs.github.com/rest/reference/repos#create-a-release) to upload a release asset.\n\n        You need to use an HTTP client which supports [SNI](http://en.wikipedia.org/wiki/Server_Name_Indication) to make calls to this endpoint.\n\n        Most libraries will set the required `Content-Length` header automatically. Use the required `Content-Type` header to provide the media type of the asset. For a list of media types, see [Media Types](https://www.iana.org/assignments/media-types/media-types.xhtml). For example: \n\n        `application/zip`\n\n        GitHub expects the asset data in its raw binary form, rather than JSON. You will send the raw binary content of the asset as the request body. Everything else about the endpoint is the same as the rest of the API. For example,\n        you'll still need to pass your authentication to be able to upload an asset.\n\n        When an upstream failure occurs, you will receive a `502 Bad Gateway` status. This may leave an empty asset with a state of `starter`. It can be safely deleted.\n\n        **Notes:**\n        *   GitHub renames asset filenames that have special characters, non-alphanumeric characters, and leading or trailing periods. The \"[List assets for a release](https://docs.github.com/rest/reference/repos#list-assets-for-a-release)\"\n        endpoint lists the renamed filenames. For more information and help, contact [GitHub Support](https://support.github.com/contact?tags=dotcom-rest-api).\n        *   If you upload an asset with the same filename as another uploaded asset, you'll receive an error and must delete the old file before you can re-upload the new asset.\n      tags:\n        - repos\n      operationId: repos/upload-release-asset\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#upload-a-release-asset\n      servers:\n        - url: '{origin}'\n          variables:\n            origin:\n              default: https://uploads.github.com\n              description: The URL origin (protocol + host name + port) is included in `upload_url` returned in the response of the \"Create a release\" endpoint\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/release-id'\n        - name: name\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: label\n          in: query\n          schema:\n            type: string\n      requestBody:\n        required: false\n        content:\n          '*/*':\n            schema:\n              type: string\n              description: The raw file data\n      responses:\n        '201':\n          description: Response for successful upload\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/release-asset'\n              examples:\n                response-for-successful-upload:\n                  $ref: '#/components/examples/release-asset-response-for-successful-upload'\n        '422':\n          description: Response if you upload an asset with the same filename as another uploaded asset\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: releases\n  /repos/{owner}/{repo}/stats/code_frequency:\n    get:\n      summary: Get the weekly commit activity\n      description: Returns a weekly aggregate of the number of additions and deletions pushed to a repository.\n      tags:\n        - repos\n      operationId: repos/get-code-frequency-stats\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-the-weekly-commit-activity\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '200':\n          description: Returns a weekly aggregate of the number of additions and deletions pushed to a repository.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/code-frequency-stat'\n              examples:\n                default:\n                  $ref: '#/components/examples/code-frequency-stat-items'\n        '202':\n          $ref: '#/components/responses/accepted'\n        '204':\n          $ref: '#/components/responses/no_content'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: statistics\n  /repos/{owner}/{repo}/stats/commit_activity:\n    get:\n      summary: Get the last year of commit activity\n      description: Returns the last year of commit activity grouped by week. The `days` array is a group of commits per day, starting on `Sunday`.\n      tags:\n        - repos\n      operationId: repos/get-commit-activity-stats\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-the-last-year-of-commit-activity\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/commit-activity'\n              examples:\n                default:\n                  $ref: '#/components/examples/commit-activity-items'\n        '202':\n          $ref: '#/components/responses/accepted'\n        '204':\n          $ref: '#/components/responses/no_content'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: statistics\n  /repos/{owner}/{repo}/stats/contributors:\n    get:\n      summary: Get all contributor commit activity\n      description: |-\n\n        Returns the `total` number of commits authored by the contributor. In addition, the response includes a Weekly Hash (`weeks` array) with the following information:\n\n        *   `w` - Start of the week, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).\n        *   `a` - Number of additions\n        *   `d` - Number of deletions\n        *   `c` - Number of commits\n      tags:\n        - repos\n      operationId: repos/get-contributors-stats\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-all-contributor-commit-activity\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '200':\n          description: |-\n            *   `w` - Start of the week, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).\n            *   `a` - Number of additions\n            *   `d` - Number of deletions\n            *   `c` - Number of commits\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/contributor-activity'\n              examples:\n                default:\n                  $ref: '#/components/examples/contributor-activity-items'\n        '202':\n          $ref: '#/components/responses/accepted'\n        '204':\n          $ref: '#/components/responses/no_content'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: statistics\n  /repos/{owner}/{repo}/stats/participation:\n    get:\n      summary: Get the weekly commit count\n      description: |-\n        Returns the total commit counts for the `owner` and total commit counts in `all`. `all` is everyone combined, including the `owner` in the last 52 weeks. If you'd like to get the commit counts for non-owners, you can subtract `owner` from `all`.\n\n        The array order is oldest week (index 0) to most recent week.\n      tags:\n        - repos\n      operationId: repos/get-participation-stats\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-the-weekly-commit-count\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '200':\n          description: The array order is oldest week (index 0) to most recent week.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/participation-stats'\n              examples:\n                default:\n                  $ref: '#/components/examples/participation-stats'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: statistics\n  /repos/{owner}/{repo}/stats/punch_card:\n    get:\n      summary: Get the hourly commit count for each day\n      description: |-\n        Each array contains the day number, hour number, and number of commits:\n\n        *   `0-6`: Sunday - Saturday\n        *   `0-23`: Hour of day\n        *   Number of commits\n\n        For example, `[2, 14, 25]` indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits.\n      tags:\n        - repos\n      operationId: repos/get-punch-card-stats\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-the-hourly-commit-count-for-each-day\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '200':\n          description: For example, `[2, 14, 25]` indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/code-frequency-stat'\n              examples:\n                default:\n                  $ref: '#/components/examples/code-frequency-stat-items-2'\n        '204':\n          $ref: '#/components/responses/no_content'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: statistics\n  /repos/{owner}/{repo}/statuses/{sha}:\n    post:\n      summary: Create a commit status\n      description: |-\n        Users with push access in a repository can create commit statuses for a given SHA.\n\n        Note: there is a limit of 1000 statuses per `sha` and `context` within a repository. Attempts to create more than 1000 statuses will result in a validation error.\n      tags:\n        - repos\n      operationId: repos/create-commit-status\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#create-a-commit-status\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: sha\n          in: path\n          required: true\n          schema:\n            type: string\n          x-multi-segment: true\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                state:\n                  type: string\n                  description: The state of the status. Can be one of `error`, `failure`, `pending`, or `success`.\n                  enum:\n                    - error\n                    - failure\n                    - pending\n                    - success\n                target_url:\n                  type: string\n                  description: |-\n                    The target URL to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the source of the status.  \n                    For example, if your continuous integration system is posting build status, you would want to provide the deep link for the build output for this specific SHA:  \n                    `http://ci.example.com/user/repo/build/sha`\n                description:\n                  type: string\n                  description: A short description of the status.\n                context:\n                  type: string\n                  description: A string label to differentiate this status from the status of other systems. This field is case-insensitive.\n                  default: default\n              required:\n                - state\n            example:\n              state: success\n              target_url: https://example.com/build/status\n              description: The build succeeded!\n              context: continuous-integration/jenkins\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/status'\n              examples:\n                default:\n                  $ref: '#/components/examples/status'\n          headers:\n            Location:\n              example: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\n              schema:\n                type: string\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: statuses\n  /repos/{owner}/{repo}/tags:\n    get:\n      summary: List repository tags\n      description: ''\n      tags:\n        - repos\n      operationId: repos/list-tags\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-repository-tags\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/tag'\n              examples:\n                default:\n                  $ref: '#/components/examples/tag-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: null\n  /repos/{owner}/{repo}/tarball/{ref}:\n    get:\n      summary: Download a repository archive (tar)\n      description: |-\n        Gets a redirect URL to download a tar archive for a repository. If you omit `:ref`, the repository’s default branch (usually\n        `master`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use\n        the `Location` header to make a second `GET` request.\n        **Note**: For private repositories, these links are temporary and expire after five minutes.\n      tags:\n        - repos\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#download-a-repository-archive\n      operationId: repos/download-tarball-archive\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: ref\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '302':\n          description: Response\n          headers:\n            Location:\n              example: https://codeload.github.com/me/myprivate/legacy.zip/master?login=me\u0026token=thistokenexpires\n              schema:\n                type: string\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: contents\n  /repos/{owner}/{repo}/teams:\n    get:\n      summary: List repository teams\n      description: ''\n      tags:\n        - repos\n      operationId: repos/list-teams\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-repository-teams\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/team'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: null\n  /repos/{owner}/{repo}/topics:\n    get:\n      summary: Get all repository topics\n      description: ''\n      tags:\n        - repos\n      operationId: repos/get-all-topics\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-all-repository-topics\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per-page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/topic'\n              examples:\n                default:\n                  $ref: '#/components/examples/topic'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: null\n    put:\n      summary: Replace all repository topics\n      description: ''\n      tags:\n        - repos\n      operationId: repos/replace-all-topics\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#replace-all-repository-topics\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                names:\n                  type: array\n                  description: An array of topics to add to the repository. Pass one or more topics to _replace_ the set of existing topics. Send an empty array (`[]`) to clear all topics from the repository. **Note:** Topic `names` cannot contain uppercase letters.\n                  items:\n                    type: string\n              required:\n                - names\n            example:\n              names:\n                - octocat\n                - atom\n                - electron\n                - api\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/topic'\n              examples:\n                default:\n                  $ref: '#/components/examples/topic'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed_simple'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: null\n  /repos/{owner}/{repo}/traffic/clones:\n    get:\n      summary: Get repository clones\n      description: Get the total number of clones and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday.\n      tags:\n        - repos\n      operationId: repos/get-clones\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-repository-clones\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/per'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/clone-traffic'\n              examples:\n                default:\n                  $ref: '#/components/examples/clone-traffic'\n        '403':\n          $ref: '#/components/responses/forbidden'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: traffic\n  /repos/{owner}/{repo}/traffic/popular/paths:\n    get:\n      summary: Get top referral paths\n      description: Get the top 10 popular contents over the last 14 days.\n      tags:\n        - repos\n      operationId: repos/get-top-paths\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-top-referral-paths\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/content-traffic'\n              examples:\n                default:\n                  $ref: '#/components/examples/content-traffic-items'\n        '403':\n          $ref: '#/components/responses/forbidden'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: traffic\n  /repos/{owner}/{repo}/traffic/popular/referrers:\n    get:\n      summary: Get top referral sources\n      description: Get the top 10 referrers over the last 14 days.\n      tags:\n        - repos\n      operationId: repos/get-top-referrers\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-top-referral-sources\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/referrer-traffic'\n              examples:\n                default:\n                  $ref: '#/components/examples/referrer-traffic-items'\n        '403':\n          $ref: '#/components/responses/forbidden'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: traffic\n  /repos/{owner}/{repo}/traffic/views:\n    get:\n      summary: Get page views\n      description: Get the total number of views and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday.\n      tags:\n        - repos\n      operationId: repos/get-views\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#get-page-views\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/per'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/view-traffic'\n              examples:\n                default:\n                  $ref: '#/components/examples/view-traffic'\n        '403':\n          $ref: '#/components/responses/forbidden'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: traffic\n  /repos/{owner}/{repo}/transfer:\n    post:\n      summary: Transfer a repository\n      description: A transfer request will need to be accepted by the new owner when transferring a personal repository to another user. The response will contain the original `owner`, and the transfer will continue asynchronously. For more details on the requirements to transfer personal and organization-owned repositories, see [about repository transfers](https://docs.github.com/articles/about-repository-transfers/).\n      tags:\n        - repos\n      operationId: repos/transfer\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#transfer-a-repository\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                new_owner:\n                  type: string\n                  description: The username or organization name the repository will be transferred to.\n                team_ids:\n                  type: array\n                  description: ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories.\n                  items:\n                    type: integer\n              required:\n                - new_owner\n            example:\n              new_owner: github\n              team_ids:\n                - 12\n                - 345\n      responses:\n        '202':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/minimal-repository'\n              examples:\n                default:\n                  $ref: '#/components/examples/minimal-repository'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: null\n  /repos/{owner}/{repo}/vulnerability-alerts:\n    get:\n      summary: Check if vulnerability alerts are enabled for a repository\n      description: Shows whether dependency alerts are enabled or disabled for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://docs.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\".\n      tags:\n        - repos\n      operationId: repos/check-vulnerability-alerts\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#check-if-vulnerability-alerts-are-enabled-for-a-repository\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '204':\n          description: Response if repository is enabled with vulnerability alerts\n        '404':\n          description: Not Found if repository is not enabled with vulnerability alerts\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: repos\n        subcategory: null\n    put:\n      summary: Enable vulnerability alerts\n      description: Enables dependency alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://docs.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\".\n      tags:\n        - repos\n      operationId: repos/enable-vulnerability-alerts\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#enable-vulnerability-alerts\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: null\n    delete:\n      summary: Disable vulnerability alerts\n      description: Disables dependency alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://docs.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\".\n      tags:\n        - repos\n      operationId: repos/disable-vulnerability-alerts\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#disable-vulnerability-alerts\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: null\n  /repos/{owner}/{repo}/zipball/{ref}:\n    get:\n      summary: Download a repository archive (zip)\n      description: |-\n        Gets a redirect URL to download a zip archive for a repository. If you omit `:ref`, the repository’s default branch (usually\n        `master`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use\n        the `Location` header to make a second `GET` request.\n        **Note**: For private repositories, these links are temporary and expire after five minutes.\n      tags:\n        - repos\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#download-a-repository-archive\n      operationId: repos/download-zipball-archive\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - name: ref\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '302':\n          description: Response\n          headers:\n            Location:\n              example: https://codeload.github.com/me/myprivate/legacy.zip/master?login=me\u0026token=thistokenexpires\n              schema:\n                type: string\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: contents\n  /repos/{template_owner}/{template_repo}/generate:\n    post:\n      summary: Create a repository using a template\n      description: |-\n        Creates a new repository using a repository template. Use the `template_owner` and `template_repo` route parameters to specify the repository to use as the template. The authenticated user must own or be a member of an organization that owns the repository. To check if a repository is available to use as a template, get the repository's information using the [Get a repository](https://docs.github.com/rest/reference/repos#get-a-repository) endpoint and check that the `is_template` key is `true`.\n\n        **OAuth scope requirements**\n\n        When using [OAuth](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n        *   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.\n        *   `repo` scope to create a private repository\n      tags:\n        - repos\n      operationId: repos/create-using-template\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#create-a-repository-using-a-template\n      parameters:\n        - name: template_owner\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: template_repo\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                owner:\n                  type: string\n                  description: The organization or person who will own the new repository. To create a new repository in an organization, the authenticated user must be a member of the specified organization.\n                name:\n                  type: string\n                  description: The name of the new repository.\n                description:\n                  type: string\n                  description: A short description of the new repository.\n                include_all_branches:\n                  type: boolean\n                  description: 'Set to `true` to include the directory structure and files from all branches in the template repository, and not just the default branch. Default: `false`.'\n                  default: false\n                private:\n                  type: boolean\n                  description: Either `true` to create a new private repository or `false` to create a new public one.\n                  default: false\n              required:\n                - name\n            example:\n              owner: octocat\n              name: Hello-World\n              description: This is your first repository\n              include_all_branches: false\n              private: false\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/repository'\n              examples:\n                default:\n                  $ref: '#/components/examples/repository-3'\n          headers:\n            Location:\n              example: https://api.github.com/repos/octocat/Hello-World\n              schema:\n                type: string\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: repos\n        subcategory: null\n  /repositories:\n    get:\n      summary: List public repositories\n      description: |-\n        Lists all public repositories in the order that they were created.\n\n        Note:\n        - For GitHub Enterprise Server, this endpoint will only list repositories available to all users on the enterprise.\n        - Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of repositories.\n      tags:\n        - repos\n      operationId: repos/list-public\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-public-repositories\n      parameters:\n        - $ref: '#/components/parameters/since-repo'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/minimal-repository'\n              examples:\n                default:\n                  $ref: '#/components/examples/public-repository-items'\n          headers:\n            Link:\n              example: \u003chttps://api.github.com/repositories?since=364\u003e; rel=\"next\"\n              schema:\n                type: string\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: null\n  /user/repos:\n    get:\n      summary: List repositories for the authenticated user\n      description: |-\n        Lists repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.\n\n        The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n      tags:\n        - repos\n      operationId: repos/list-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-repositories-for-the-authenticated-user\n      parameters:\n        - name: visibility\n          description: 'Can be one of `all`, `public`, or `private`. Note: For GitHub AE, can be one of `all`, `internal`, or `private`.'\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - all\n              - public\n              - private\n            default: all\n        - name: affiliation\n          description: |-\n            Comma-separated list of values. Can include:  \n            \\* `owner`: Repositories that are owned by the authenticated user.  \n            \\* `collaborator`: Repositories that the user has been added to as a collaborator.  \n            \\* `organization_member`: Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on.\n          in: query\n          required: false\n          schema:\n            type: string\n            default: owner,collaborator,organization_member\n        - name: type\n          description: |-\n            Can be one of `all`, `owner`, `public`, `private`, `member`. Note: For GitHub AE, can be one of `all`, `owner`, `internal`, `private`, `member`. Default: `all`  \n              \n            Will cause a `422` error if used in the same request as **visibility** or **affiliation**. Will cause a `422` error if used in the same request as **visibility** or **affiliation**.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - all\n              - owner\n              - public\n              - private\n              - member\n            default: all\n        - name: sort\n          description: Can be one of `created`, `updated`, `pushed`, `full_name`.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - created\n              - updated\n              - pushed\n              - full_name\n            default: full_name\n        - name: direction\n          description: 'Can be one of `asc` or `desc`. Default: `asc` when using `full_name`, otherwise `desc`'\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/since'\n        - $ref: '#/components/parameters/before'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/repository'\n              examples:\n                default:\n                  $ref: '#/components/examples/repository-items-default-response'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: repos\n        subcategory: null\n    post:\n      summary: Create a repository for the authenticated user\n      description: |-\n        Creates a new repository for the authenticated user.\n\n        **OAuth scope requirements**\n\n        When using [OAuth](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n        *   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.\n        *   `repo` scope to create a private repository.\n      tags:\n        - repos\n      operationId: repos/create-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#create-a-repository-for-the-authenticated-user\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  description: The name of the repository.\n                  type: string\n                  example: Team Environment\n                description:\n                  description: A short description of the repository.\n                  type: string\n                homepage:\n                  description: A URL with more information about the repository.\n                  type: string\n                private:\n                  description: Whether the repository is private.\n                  default: false\n                  type: boolean\n                has_issues:\n                  description: Whether issues are enabled.\n                  default: true\n                  type: boolean\n                  example: true\n                has_projects:\n                  description: Whether projects are enabled.\n                  default: true\n                  type: boolean\n                  example: true\n                has_wiki:\n                  description: Whether the wiki is enabled.\n                  default: true\n                  type: boolean\n                  example: true\n                team_id:\n                  description: The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.\n                  type: integer\n                auto_init:\n                  description: Whether the repository is initialized with a minimal README.\n                  default: false\n                  type: boolean\n                gitignore_template:\n                  description: The desired language or platform to apply to the .gitignore.\n                  example: Haskell\n                  type: string\n                license_template:\n                  description: The license keyword of the open source license for this repository.\n                  example: mit\n                  type: string\n                allow_squash_merge:\n                  description: Whether to allow squash merges for pull requests.\n                  default: true\n                  type: boolean\n                  example: true\n                allow_merge_commit:\n                  description: Whether to allow merge commits for pull requests.\n                  default: true\n                  type: boolean\n                  example: true\n                allow_rebase_merge:\n                  description: Whether to allow rebase merges for pull requests.\n                  default: true\n                  type: boolean\n                  example: true\n                allow_auto_merge:\n                  description: Whether to allow Auto-merge to be used on pull requests.\n                  default: false\n                  type: boolean\n                  example: false\n                delete_branch_on_merge:\n                  description: Whether to delete head branches when pull requests are merged\n                  default: false\n                  type: boolean\n                  example: false\n                has_downloads:\n                  description: Whether downloads are enabled.\n                  default: true\n                  type: boolean\n                  example: true\n                is_template:\n                  description: Whether this repository acts as a template that can be used to generate new repositories.\n                  default: false\n                  type: boolean\n                  example: true\n              required:\n                - name\n              type: object\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/repository'\n              examples:\n                default:\n                  $ref: '#/components/examples/repository'\n          headers:\n            Location:\n              example: https://api.github.com/repos/octocat/Hello-World\n              schema:\n                type: string\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '400':\n          $ref: '#/components/responses/bad_request'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: repos\n        subcategory: null\n  /user/repository_invitations:\n    get:\n      summary: List repository invitations for the authenticated user\n      description: When authenticating as a user, this endpoint will list all currently open repository invitations for that user.\n      tags:\n        - repos\n      operationId: repos/list-invitations-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-repository-invitations-for-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/repository-invitation'\n              examples:\n                default:\n                  $ref: '#/components/examples/repository-invitation-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: repos\n        subcategory: invitations\n  /user/repository_invitations/{invitation_id}:\n    patch:\n      summary: Accept a repository invitation\n      description: ''\n      tags:\n        - repos\n      operationId: repos/accept-invitation-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#accept-a-repository-invitation\n      parameters:\n        - $ref: '#/components/parameters/invitation-id'\n      responses:\n        '204':\n          description: Response\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '409':\n          $ref: '#/components/responses/conflict'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: repos\n        subcategory: invitations\n    delete:\n      summary: Decline a repository invitation\n      description: ''\n      tags:\n        - repos\n      operationId: repos/decline-invitation-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#decline-a-repository-invitation\n      parameters:\n        - $ref: '#/components/parameters/invitation-id'\n      responses:\n        '204':\n          description: Response\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '409':\n          $ref: '#/components/responses/conflict'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: repos\n        subcategory: invitations\n  /users/{username}/repos:\n    get:\n      summary: List repositories for a user\n      description: 'Lists public repositories for the specified user. Note: For GitHub AE, this endpoint will list internal repositories for the specified user.'\n      tags:\n        - repos\n      operationId: repos/list-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/repos#list-repositories-for-a-user\n      parameters:\n        - $ref: '#/components/parameters/username'\n        - name: type\n          description: Can be one of `all`, `owner`, `member`.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - all\n              - owner\n              - member\n            default: owner\n        - name: sort\n          description: Can be one of `created`, `updated`, `pushed`, `full_name`.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - created\n              - updated\n              - pushed\n              - full_name\n            default: full_name\n        - name: direction\n          description: 'Can be one of `asc` or `desc`. Default: `asc` when using `full_name`, otherwise `desc`'\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/minimal-repository'\n              examples:\n                default:\n                  $ref: '#/components/examples/minimal-repository-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: repos\n        subcategory: null\ncomponents:\n  schemas:\n    full-repository:\n      title: Full Repository\n      description: Full Repository\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1296269\n        node_id:\n          type: string\n          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n        name:\n          type: string\n          example: Hello-World\n        full_name:\n          type: string\n          example: octocat/Hello-World\n        owner:\n          $ref: '#/components/schemas/simple-user'\n        private:\n          type: boolean\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World\n        description:\n          type: string\n          example: This your first repo!\n          nullable: true\n        fork:\n          type: boolean\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World\n        archive_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n        assignees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}\n        blobs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n        branches_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}\n        collaborators_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n        comments_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}\n        commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}\n        compare_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n        contents_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}\n        contributors_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/contributors\n        deployments_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/deployments\n        downloads_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/downloads\n        events_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/events\n        forks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/forks\n        git_commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n        git_refs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n        git_tags_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n        git_url:\n          type: string\n          example: git:github.com/octocat/Hello-World.git\n        issue_comment_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n        issue_events_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n        issues_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}\n        keys_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n        labels_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}\n        languages_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/languages\n        merges_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/merges\n        milestones_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}\n        notifications_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n        pulls_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}\n        releases_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}\n        ssh_url:\n          type: string\n          example: git@github.com:octocat/Hello-World.git\n        stargazers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/stargazers\n        statuses_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n        subscribers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscribers\n        subscription_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscription\n        tags_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/tags\n        teams_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/teams\n        trees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n        clone_url:\n          type: string\n          example: https://github.com/octocat/Hello-World.git\n        mirror_url:\n          type: string\n          format: uri\n          example: git:git.example.com/octocat/Hello-World\n          nullable: true\n        hooks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/hooks\n        svn_url:\n          type: string\n          format: uri\n          example: https://svn.github.com/octocat/Hello-World\n        homepage:\n          type: string\n          format: uri\n          example: https://github.com\n          nullable: true\n        language:\n          type: string\n          nullable: true\n        forks_count:\n          type: integer\n          example: 9\n        stargazers_count:\n          type: integer\n          example: 80\n        watchers_count:\n          type: integer\n          example: 80\n        size:\n          type: integer\n          example: 108\n        default_branch:\n          type: string\n          example: master\n        open_issues_count:\n          type: integer\n          example: 0\n        is_template:\n          type: boolean\n          example: true\n        topics:\n          type: array\n          items:\n            type: string\n          example:\n            - octocat\n            - atom\n            - electron\n            - API\n        has_issues:\n          type: boolean\n          example: true\n        has_projects:\n          type: boolean\n          example: true\n        has_wiki:\n          type: boolean\n          example: true\n        has_pages:\n          type: boolean\n        has_downloads:\n          type: boolean\n          example: true\n        archived:\n          type: boolean\n        disabled:\n          type: boolean\n          description: Returns whether or not this repository disabled.\n        visibility:\n          description: 'The repository visibility: public, private, or internal.'\n          type: string\n          example: public\n        pushed_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:06:43Z'\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:01:12Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:14:43Z'\n        permissions:\n          type: object\n          properties:\n            admin:\n              type: boolean\n            maintain:\n              type: boolean\n            push:\n              type: boolean\n            triage:\n              type: boolean\n            pull:\n              type: boolean\n          required:\n            - admin\n            - pull\n            - push\n        allow_rebase_merge:\n          type: boolean\n          example: true\n        template_repository:\n          $ref: '#/components/schemas/nullable-repository'\n        temp_clone_token:\n          type: string\n          nullable: true\n        allow_squash_merge:\n          type: boolean\n          example: true\n        allow_auto_merge:\n          type: boolean\n          example: false\n        delete_branch_on_merge:\n          type: boolean\n          example: false\n        allow_merge_commit:\n          type: boolean\n          example: true\n        allow_forking:\n          type: boolean\n          example: true\n        subscribers_count:\n          type: integer\n          example: 42\n        network_count:\n          type: integer\n          example: 0\n        license:\n          $ref: '#/components/schemas/nullable-license-simple'\n        organization:\n          $ref: '#/components/schemas/nullable-simple-user'\n        parent:\n          $ref: '#/components/schemas/repository'\n        source:\n          $ref: '#/components/schemas/repository'\n        forks:\n          type: integer\n        master_branch:\n          type: string\n        open_issues:\n          type: integer\n        watchers:\n          type: integer\n        anonymous_access_enabled:\n          description: Whether anonymous git access is allowed.\n          default: true\n          type: boolean\n        code_of_conduct:\n          $ref: '#/components/schemas/code-of-conduct-simple'\n        security_and_analysis:\n          nullable: true\n          type: object\n          properties:\n            advanced_security:\n              type: object\n              properties:\n                status:\n                  type: string\n                  enum:\n                    - enabled\n                    - disabled\n            secret_scanning:\n              type: object\n              properties:\n                status:\n                  type: string\n                  enum:\n                    - enabled\n                    - disabled\n      required:\n        - archive_url\n        - assignees_url\n        - blobs_url\n        - branches_url\n        - collaborators_url\n        - comments_url\n        - commits_url\n        - compare_url\n        - contents_url\n        - contributors_url\n        - deployments_url\n        - description\n        - downloads_url\n        - events_url\n        - fork\n        - forks_url\n        - full_name\n        - git_commits_url\n        - git_refs_url\n        - git_tags_url\n        - hooks_url\n        - html_url\n        - id\n        - node_id\n        - issue_comment_url\n        - issue_events_url\n        - issues_url\n        - keys_url\n        - labels_url\n        - languages_url\n        - merges_url\n        - milestones_url\n        - name\n        - notifications_url\n        - owner\n        - private\n        - pulls_url\n        - releases_url\n        - stargazers_url\n        - statuses_url\n        - subscribers_url\n        - subscription_url\n        - tags_url\n        - teams_url\n        - trees_url\n        - url\n        - clone_url\n        - default_branch\n        - forks\n        - forks_count\n        - git_url\n        - has_downloads\n        - has_issues\n        - has_projects\n        - has_wiki\n        - has_pages\n        - homepage\n        - language\n        - archived\n        - disabled\n        - mirror_url\n        - open_issues\n        - open_issues_count\n        - license\n        - pushed_at\n        - size\n        - ssh_url\n        - stargazers_count\n        - svn_url\n        - watchers\n        - watchers_count\n        - created_at\n        - updated_at\n        - network_count\n        - subscribers_count\n    simple-user:\n      title: Simple User\n      description: Simple User\n      type: object\n      properties:\n        name:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:55Z\"'\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n    nullable-repository:\n      title: Repository\n      description: A git repository\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the repository\n          example: 42\n          type: integer\n        node_id:\n          type: string\n          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n        name:\n          description: The name of the repository.\n          type: string\n          example: Team Environment\n        full_name:\n          type: string\n          example: octocat/Hello-World\n        license:\n          $ref: '#/components/schemas/nullable-license-simple'\n        organization:\n          $ref: '#/components/schemas/nullable-simple-user'\n        forks:\n          type: integer\n        permissions:\n          type: object\n          properties:\n            admin:\n              type: boolean\n            pull:\n              type: boolean\n            triage:\n              type: boolean\n            push:\n              type: boolean\n            maintain:\n              type: boolean\n          required:\n            - admin\n            - pull\n            - push\n        owner:\n          $ref: '#/components/schemas/simple-user'\n        private:\n          description: Whether the repository is private or public.\n          default: false\n          type: boolean\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World\n        description:\n          type: string\n          example: This your first repo!\n          nullable: true\n        fork:\n          type: boolean\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World\n        archive_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n        assignees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}\n        blobs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n        branches_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}\n        collaborators_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n        comments_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}\n        commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}\n        compare_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n        contents_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}\n        contributors_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/contributors\n        deployments_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/deployments\n        downloads_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/downloads\n        events_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/events\n        forks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/forks\n        git_commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n        git_refs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n        git_tags_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n        git_url:\n          type: string\n          example: git:github.com/octocat/Hello-World.git\n        issue_comment_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n        issue_events_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n        issues_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}\n        keys_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n        labels_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}\n        languages_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/languages\n        merges_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/merges\n        milestones_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}\n        notifications_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n        pulls_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}\n        releases_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}\n        ssh_url:\n          type: string\n          example: git@github.com:octocat/Hello-World.git\n        stargazers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/stargazers\n        statuses_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n        subscribers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscribers\n        subscription_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscription\n        tags_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/tags\n        teams_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/teams\n        trees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n        clone_url:\n          type: string\n          example: https://github.com/octocat/Hello-World.git\n        mirror_url:\n          type: string\n          format: uri\n          example: git:git.example.com/octocat/Hello-World\n          nullable: true\n        hooks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/hooks\n        svn_url:\n          type: string\n          format: uri\n          example: https://svn.github.com/octocat/Hello-World\n        homepage:\n          type: string\n          format: uri\n          example: https://github.com\n          nullable: true\n        language:\n          type: string\n          nullable: true\n        forks_count:\n          type: integer\n          example: 9\n        stargazers_count:\n          type: integer\n          example: 80\n        watchers_count:\n          type: integer\n          example: 80\n        size:\n          type: integer\n          example: 108\n        default_branch:\n          description: The default branch of the repository.\n          type: string\n          example: master\n        open_issues_count:\n          type: integer\n          example: 0\n        is_template:\n          description: Whether this repository acts as a template that can be used to generate new repositories.\n          default: false\n          type: boolean\n          example: true\n        topics:\n          type: array\n          items:\n            type: string\n        has_issues:\n          description: Whether issues are enabled.\n          default: true\n          type: boolean\n          example: true\n        has_projects:\n          description: Whether projects are enabled.\n          default: true\n          type: boolean\n          example: true\n        has_wiki:\n          description: Whether the wiki is enabled.\n          default: true\n          type: boolean\n          example: true\n        has_pages:\n          type: boolean\n        has_downloads:\n          description: Whether downloads are enabled.\n          default: true\n          type: boolean\n          example: true\n        archived:\n          description: Whether the repository is archived.\n          default: false\n          type: boolean\n        disabled:\n          type: boolean\n          description: Returns whether or not this repository disabled.\n        visibility:\n          description: 'The repository visibility: public, private, or internal.'\n          default: public\n          type: string\n        pushed_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:06:43Z'\n          nullable: true\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:01:12Z'\n          nullable: true\n        updated_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:14:43Z'\n          nullable: true\n        allow_rebase_merge:\n          description: Whether to allow rebase merges for pull requests.\n          default: true\n          type: boolean\n          example: true\n        template_repository:\n          nullable: true\n          type: object\n          properties:\n            id:\n              type: integer\n            node_id:\n              type: string\n            name:\n              type: string\n            full_name:\n              type: string\n            owner:\n              type: object\n              properties:\n                login:\n                  type: string\n                id:\n                  type: integer\n                node_id:\n                  type: string\n                avatar_url:\n                  type: string\n                gravatar_id:\n                  type: string\n                url:\n                  type: string\n                html_url:\n                  type: string\n                followers_url:\n                  type: string\n                following_url:\n                  type: string\n                gists_url:\n                  type: string\n                starred_url:\n                  type: string\n                subscriptions_url:\n                  type: string\n                organizations_url:\n                  type: string\n                repos_url:\n                  type: string\n                events_url:\n                  type: string\n                received_events_url:\n                  type: string\n                type:\n                  type: string\n                site_admin:\n                  type: boolean\n            private:\n              type: boolean\n            html_url:\n              type: string\n            description:\n              type: string\n            fork:\n              type: boolean\n            url:\n              type: string\n            archive_url:\n              type: string\n            assignees_url:\n              type: string\n            blobs_url:\n              type: string\n            branches_url:\n              type: string\n            collaborators_url:\n              type: string\n            comments_url:\n              type: string\n            commits_url:\n              type: string\n            compare_url:\n              type: string\n            contents_url:\n              type: string\n            contributors_url:\n              type: string\n            deployments_url:\n              type: string\n            downloads_url:\n              type: string\n            events_url:\n              type: string\n            forks_url:\n              type: string\n            git_commits_url:\n              type: string\n            git_refs_url:\n              type: string\n            git_tags_url:\n              type: string\n            git_url:\n              type: string\n            issue_comment_url:\n              type: string\n            issue_events_url:\n              type: string\n            issues_url:\n              type: string\n            keys_url:\n              type: string\n            labels_url:\n              type: string\n            languages_url:\n              type: string\n            merges_url:\n              type: string\n            milestones_url:\n              type: string\n            notifications_url:\n              type: string\n            pulls_url:\n              type: string\n            releases_url:\n              type: string\n            ssh_url:\n              type: string\n            stargazers_url:\n              type: string\n            statuses_url:\n              type: string\n            subscribers_url:\n              type: string\n            subscription_url:\n              type: string\n            tags_url:\n              type: string\n            teams_url:\n              type: string\n            trees_url:\n              type: string\n            clone_url:\n              type: string\n            mirror_url:\n              type: string\n            hooks_url:\n              type: string\n            svn_url:\n              type: string\n            homepage:\n              type: string\n            language:\n              type: string\n            forks_count:\n              type: integer\n            stargazers_count:\n              type: integer\n            watchers_count:\n              type: integer\n            size:\n              type: integer\n            default_branch:\n              type: string\n            open_issues_count:\n              type: integer\n            is_template:\n              type: boolean\n            topics:\n              type: array\n              items:\n                type: string\n            has_issues:\n              type: boolean\n            has_projects:\n              type: boolean\n            has_wiki:\n              type: boolean\n            has_pages:\n              type: boolean\n            has_downloads:\n              type: boolean\n            archived:\n              type: boolean\n            disabled:\n              type: boolean\n            visibility:\n              type: string\n            pushed_at:\n              type: string\n            created_at:\n              type: string\n            updated_at:\n              type: string\n            permissions:\n              type: object\n              properties:\n                admin:\n                  type: boolean\n                maintain:\n                  type: boolean\n                push:\n                  type: boolean\n                triage:\n                  type: boolean\n                pull:\n                  type: boolean\n            allow_rebase_merge:\n              type: boolean\n            temp_clone_token:\n              type: string\n            allow_squash_merge:\n              type: boolean\n            allow_auto_merge:\n              type: boolean\n            delete_branch_on_merge:\n              type: boolean\n            allow_update_branch:\n              type: boolean\n            allow_merge_commit:\n              type: boolean\n            subscribers_count:\n              type: integer\n            network_count:\n              type: integer\n        temp_clone_token:\n          type: string\n        allow_squash_merge:\n          description: Whether to allow squash merges for pull requests.\n          default: true\n          type: boolean\n          example: true\n        allow_auto_merge:\n          description: Whether to allow Auto-merge to be used on pull requests.\n          default: false\n          type: boolean\n          example: false\n        delete_branch_on_merge:\n          description: Whether to delete head branches when pull requests are merged\n          default: false\n          type: boolean\n          example: false\n        allow_merge_commit:\n          description: Whether to allow merge commits for pull requests.\n          default: true\n          type: boolean\n          example: true\n        allow_forking:\n          description: Whether to allow forking this repo\n          type: boolean\n        subscribers_count:\n          type: integer\n        network_count:\n          type: integer\n        open_issues:\n          type: integer\n        watchers:\n          type: integer\n        master_branch:\n          type: string\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:42Z\"'\n      required:\n        - archive_url\n        - assignees_url\n        - blobs_url\n        - branches_url\n        - collaborators_url\n        - comments_url\n        - commits_url\n        - compare_url\n        - contents_url\n        - contributors_url\n        - deployments_url\n        - description\n        - downloads_url\n        - events_url\n        - fork\n        - forks_url\n        - full_name\n        - git_commits_url\n        - git_refs_url\n        - git_tags_url\n        - hooks_url\n        - html_url\n        - id\n        - node_id\n        - issue_comment_url\n        - issue_events_url\n        - issues_url\n        - keys_url\n        - labels_url\n        - languages_url\n        - merges_url\n        - milestones_url\n        - name\n        - notifications_url\n        - owner\n        - private\n        - pulls_url\n        - releases_url\n        - stargazers_url\n        - statuses_url\n        - subscribers_url\n        - subscription_url\n        - tags_url\n        - teams_url\n        - trees_url\n        - url\n        - clone_url\n        - default_branch\n        - forks\n        - forks_count\n        - git_url\n        - has_downloads\n        - has_issues\n        - has_projects\n        - has_wiki\n        - has_pages\n        - homepage\n        - language\n        - archived\n        - disabled\n        - mirror_url\n        - open_issues\n        - open_issues_count\n        - license\n        - pushed_at\n        - size\n        - ssh_url\n        - stargazers_count\n        - svn_url\n        - watchers\n        - watchers_count\n        - created_at\n        - updated_at\n      nullable: true\n    nullable-license-simple:\n      title: License Simple\n      description: License Simple\n      type: object\n      properties:\n        key:\n          type: string\n          example: mit\n        name:\n          type: string\n          example: MIT License\n        url:\n          type: string\n          nullable: true\n          format: uri\n          example: https://api.github.com/licenses/mit\n        spdx_id:\n          type: string\n          nullable: true\n          example: MIT\n        node_id:\n          type: string\n          example: MDc6TGljZW5zZW1pdA==\n        html_url:\n          type: string\n          format: uri\n      required:\n        - key\n        - name\n        - url\n        - spdx_id\n        - node_id\n      nullable: true\n    nullable-simple-user:\n      title: Simple User\n      description: Simple User\n      type: object\n      properties:\n        name:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:55Z\"'\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n      nullable: true\n    repository:\n      title: Repository\n      description: A git repository\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the repository\n          example: 42\n          type: integer\n        node_id:\n          type: string\n          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n        name:\n          description: The name of the repository.\n          type: string\n          example: Team Environment\n        full_name:\n          type: string\n          example: octocat/Hello-World\n        license:\n          $ref: '#/components/schemas/nullable-license-simple'\n        organization:\n          $ref: '#/components/schemas/nullable-simple-user'\n        forks:\n          type: integer\n        permissions:\n          type: object\n          properties:\n            admin:\n              type: boolean\n            pull:\n              type: boolean\n            triage:\n              type: boolean\n            push:\n              type: boolean\n            maintain:\n              type: boolean\n          required:\n            - admin\n            - pull\n            - push\n        owner:\n          $ref: '#/components/schemas/simple-user'\n        private:\n          description: Whether the repository is private or public.\n          default: false\n          type: boolean\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World\n        description:\n          type: string\n          example: This your first repo!\n          nullable: true\n        fork:\n          type: boolean\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World\n        archive_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n        assignees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}\n        blobs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n        branches_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}\n        collaborators_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n        comments_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}\n        commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}\n        compare_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n        contents_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}\n        contributors_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/contributors\n        deployments_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/deployments\n        downloads_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/downloads\n        events_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/events\n        forks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/forks\n        git_commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n        git_refs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n        git_tags_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n        git_url:\n          type: string\n          example: git:github.com/octocat/Hello-World.git\n        issue_comment_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n        issue_events_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n        issues_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}\n        keys_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n        labels_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}\n        languages_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/languages\n        merges_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/merges\n        milestones_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}\n        notifications_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n        pulls_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}\n        releases_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}\n        ssh_url:\n          type: string\n          example: git@github.com:octocat/Hello-World.git\n        stargazers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/stargazers\n        statuses_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n        subscribers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscribers\n        subscription_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscription\n        tags_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/tags\n        teams_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/teams\n        trees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n        clone_url:\n          type: string\n          example: https://github.com/octocat/Hello-World.git\n        mirror_url:\n          type: string\n          format: uri\n          example: git:git.example.com/octocat/Hello-World\n          nullable: true\n        hooks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/hooks\n        svn_url:\n          type: string\n          format: uri\n          example: https://svn.github.com/octocat/Hello-World\n        homepage:\n          type: string\n          format: uri\n          example: https://github.com\n          nullable: true\n        language:\n          type: string\n          nullable: true\n        forks_count:\n          type: integer\n          example: 9\n        stargazers_count:\n          type: integer\n          example: 80\n        watchers_count:\n          type: integer\n          example: 80\n        size:\n          type: integer\n          example: 108\n        default_branch:\n          description: The default branch of the repository.\n          type: string\n          example: master\n        open_issues_count:\n          type: integer\n          example: 0\n        is_template:\n          description: Whether this repository acts as a template that can be used to generate new repositories.\n          default: false\n          type: boolean\n          example: true\n        topics:\n          type: array\n          items:\n            type: string\n        has_issues:\n          description: Whether issues are enabled.\n          default: true\n          type: boolean\n          example: true\n        has_projects:\n          description: Whether projects are enabled.\n          default: true\n          type: boolean\n          example: true\n        has_wiki:\n          description: Whether the wiki is enabled.\n          default: true\n          type: boolean\n          example: true\n        has_pages:\n          type: boolean\n        has_downloads:\n          description: Whether downloads are enabled.\n          default: true\n          type: boolean\n          example: true\n        archived:\n          description: Whether the repository is archived.\n          default: false\n          type: boolean\n        disabled:\n          type: boolean\n          description: Returns whether or not this repository disabled.\n        visibility:\n          description: 'The repository visibility: public, private, or internal.'\n          default: public\n          type: string\n        pushed_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:06:43Z'\n          nullable: true\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:01:12Z'\n          nullable: true\n        updated_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:14:43Z'\n          nullable: true\n        allow_rebase_merge:\n          description: Whether to allow rebase merges for pull requests.\n          default: true\n          type: boolean\n          example: true\n        template_repository:\n          nullable: true\n          type: object\n          properties:\n            id:\n              type: integer\n            node_id:\n              type: string\n            name:\n              type: string\n            full_name:\n              type: string\n            owner:\n              type: object\n              properties:\n                login:\n                  type: string\n                id:\n                  type: integer\n                node_id:\n                  type: string\n                avatar_url:\n                  type: string\n                gravatar_id:\n                  type: string\n                url:\n                  type: string\n                html_url:\n                  type: string\n                followers_url:\n                  type: string\n                following_url:\n                  type: string\n                gists_url:\n                  type: string\n                starred_url:\n                  type: string\n                subscriptions_url:\n                  type: string\n                organizations_url:\n                  type: string\n                repos_url:\n                  type: string\n                events_url:\n                  type: string\n                received_events_url:\n                  type: string\n                type:\n                  type: string\n                site_admin:\n                  type: boolean\n            private:\n              type: boolean\n            html_url:\n              type: string\n            description:\n              type: string\n            fork:\n              type: boolean\n            url:\n              type: string\n            archive_url:\n              type: string\n            assignees_url:\n              type: string\n            blobs_url:\n              type: string\n            branches_url:\n              type: string\n            collaborators_url:\n              type: string\n            comments_url:\n              type: string\n            commits_url:\n              type: string\n            compare_url:\n              type: string\n            contents_url:\n              type: string\n            contributors_url:\n              type: string\n            deployments_url:\n              type: string\n            downloads_url:\n              type: string\n            events_url:\n              type: string\n            forks_url:\n              type: string\n            git_commits_url:\n              type: string\n            git_refs_url:\n              type: string\n            git_tags_url:\n              type: string\n            git_url:\n              type: string\n            issue_comment_url:\n              type: string\n            issue_events_url:\n              type: string\n            issues_url:\n              type: string\n            keys_url:\n              type: string\n            labels_url:\n              type: string\n            languages_url:\n              type: string\n            merges_url:\n              type: string\n            milestones_url:\n              type: string\n            notifications_url:\n              type: string\n            pulls_url:\n              type: string\n            releases_url:\n              type: string\n            ssh_url:\n              type: string\n            stargazers_url:\n              type: string\n            statuses_url:\n              type: string\n            subscribers_url:\n              type: string\n            subscription_url:\n              type: string\n            tags_url:\n              type: string\n            teams_url:\n              type: string\n            trees_url:\n              type: string\n            clone_url:\n              type: string\n            mirror_url:\n              type: string\n            hooks_url:\n              type: string\n            svn_url:\n              type: string\n            homepage:\n              type: string\n            language:\n              type: string\n            forks_count:\n              type: integer\n            stargazers_count:\n              type: integer\n            watchers_count:\n              type: integer\n            size:\n              type: integer\n            default_branch:\n              type: string\n            open_issues_count:\n              type: integer\n            is_template:\n              type: boolean\n            topics:\n              type: array\n              items:\n                type: string\n            has_issues:\n              type: boolean\n            has_projects:\n              type: boolean\n            has_wiki:\n              type: boolean\n            has_pages:\n              type: boolean\n            has_downloads:\n              type: boolean\n            archived:\n              type: boolean\n            disabled:\n              type: boolean\n            visibility:\n              type: string\n            pushed_at:\n              type: string\n            created_at:\n              type: string\n            updated_at:\n              type: string\n            permissions:\n              type: object\n              properties:\n                admin:\n                  type: boolean\n                maintain:\n                  type: boolean\n                push:\n                  type: boolean\n                triage:\n                  type: boolean\n                pull:\n                  type: boolean\n            allow_rebase_merge:\n              type: boolean\n            temp_clone_token:\n              type: string\n            allow_squash_merge:\n              type: boolean\n            allow_auto_merge:\n              type: boolean\n            delete_branch_on_merge:\n              type: boolean\n            allow_update_branch:\n              type: boolean\n            allow_merge_commit:\n              type: boolean\n            subscribers_count:\n              type: integer\n            network_count:\n              type: integer\n        temp_clone_token:\n          type: string\n        allow_squash_merge:\n          description: Whether to allow squash merges for pull requests.\n          default: true\n          type: boolean\n          example: true\n        allow_auto_merge:\n          description: Whether to allow Auto-merge to be used on pull requests.\n          default: false\n          type: boolean\n          example: false\n        delete_branch_on_merge:\n          description: Whether to delete head branches when pull requests are merged\n          default: false\n          type: boolean\n          example: false\n        allow_merge_commit:\n          description: Whether to allow merge commits for pull requests.\n          default: true\n          type: boolean\n          example: true\n        allow_forking:\n          description: Whether to allow forking this repo\n          type: boolean\n        subscribers_count:\n          type: integer\n        network_count:\n          type: integer\n        open_issues:\n          type: integer\n        watchers:\n          type: integer\n        master_branch:\n          type: string\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:42Z\"'\n      required:\n        - archive_url\n        - assignees_url\n        - blobs_url\n        - branches_url\n        - collaborators_url\n        - comments_url\n        - commits_url\n        - compare_url\n        - contents_url\n        - contributors_url\n        - deployments_url\n        - description\n        - downloads_url\n        - events_url\n        - fork\n        - forks_url\n        - full_name\n        - git_commits_url\n        - git_refs_url\n        - git_tags_url\n        - hooks_url\n        - html_url\n        - id\n        - node_id\n        - issue_comment_url\n        - issue_events_url\n        - issues_url\n        - keys_url\n        - labels_url\n        - languages_url\n        - merges_url\n        - milestones_url\n        - name\n        - notifications_url\n        - owner\n        - private\n        - pulls_url\n        - releases_url\n        - stargazers_url\n        - statuses_url\n        - subscribers_url\n        - subscription_url\n        - tags_url\n        - teams_url\n        - trees_url\n        - url\n        - clone_url\n        - default_branch\n        - forks\n        - forks_count\n        - git_url\n        - has_downloads\n        - has_issues\n        - has_projects\n        - has_wiki\n        - has_pages\n        - homepage\n        - language\n        - archived\n        - disabled\n        - mirror_url\n        - open_issues\n        - open_issues_count\n        - license\n        - pushed_at\n        - size\n        - ssh_url\n        - stargazers_count\n        - svn_url\n        - watchers\n        - watchers_count\n        - created_at\n        - updated_at\n    code-of-conduct-simple:\n      title: Code Of Conduct Simple\n      description: Code of Conduct Simple\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/github/docs/community/code_of_conduct\n        key:\n          type: string\n          example: citizen_code_of_conduct\n        name:\n          type: string\n          example: Citizen Code of Conduct\n        html_url:\n          type: string\n          nullable: true\n          format: uri\n          example: https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md\n      required:\n        - url\n        - key\n        - name\n        - html_url\n    basic-error:\n      title: Basic Error\n      description: Basic Error\n      type: object\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        url:\n          type: string\n        status:\n          type: string\n    validation-error:\n      title: Validation Error\n      description: Validation Error\n      type: object\n      required:\n        - message\n        - documentation_url\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        errors:\n          type: array\n          items:\n            type: object\n            required:\n              - code\n            properties:\n              resource:\n                type: string\n              field:\n                type: string\n              message:\n                type: string\n              code:\n                type: string\n              index:\n                type: integer\n              value:\n                oneOf:\n                  - type: string\n                    nullable: true\n                  - type: integer\n                    nullable: true\n                  - type: array\n                    nullable: true\n                    items:\n                      type: string\n    autolink:\n      title: Autolink reference\n      description: An autolink reference.\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 3\n        key_prefix:\n          description: The prefix of a key that is linkified.\n          example: TICKET-\n          type: string\n        url_template:\n          description: A template for the target URL that is generated if a key was found.\n          example: https://example.com/TICKET?query=\u003cnum\u003e\n          type: string\n      required:\n        - id\n        - key_prefix\n        - url_template\n    short-branch:\n      title: Short Branch\n      description: Short Branch\n      type: object\n      properties:\n        name:\n          type: string\n        commit:\n          type: object\n          properties:\n            sha:\n              type: string\n            url:\n              type: string\n              format: uri\n          required:\n            - sha\n            - url\n        protected:\n          type: boolean\n        protection:\n          $ref: '#/components/schemas/branch-protection'\n        protection_url:\n          type: string\n          format: uri\n      required:\n        - name\n        - commit\n        - protected\n    branch-protection:\n      title: Branch Protection\n      description: Branch Protection\n      type: object\n      properties:\n        url:\n          type: string\n        enabled:\n          type: boolean\n        required_status_checks:\n          $ref: '#/components/schemas/protected-branch-required-status-check'\n        enforce_admins:\n          $ref: '#/components/schemas/protected-branch-admin-enforced'\n        required_pull_request_reviews:\n          $ref: '#/components/schemas/protected-branch-pull-request-review'\n        restrictions:\n          $ref: '#/components/schemas/branch-restriction-policy'\n        required_linear_history:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n        allow_force_pushes:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n        allow_deletions:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n        required_conversation_resolution:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n        name:\n          type: string\n          example: '\"branch/with/protection\"'\n        protection_url:\n          type: string\n          example: '\"https://api.github.com/repos/owner-79e94e2d36b3fd06a32bb213/AAA_Public_Repo/branches/branch/with/protection/protection\"'\n        required_signatures:\n          type: object\n          properties:\n            url:\n              type: string\n              format: uri\n              example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures\n            enabled:\n              type: boolean\n              example: true\n          required:\n            - url\n            - enabled\n    branch-with-protection:\n      title: Branch With Protection\n      description: Branch With Protection\n      type: object\n      properties:\n        name:\n          type: string\n        commit:\n          $ref: '#/components/schemas/commit'\n        _links:\n          type: object\n          properties:\n            html:\n              type: string\n            self:\n              type: string\n              format: uri\n          required:\n            - html\n            - self\n        protected:\n          type: boolean\n        protection:\n          $ref: '#/components/schemas/branch-protection'\n        protection_url:\n          type: string\n          format: uri\n        pattern:\n          type: string\n          example: '\"mas*\"'\n        required_approving_review_count:\n          type: integer\n          example: 1\n      required:\n        - name\n        - commit\n        - _links\n        - protection\n        - protected\n        - protection_url\n    protected-branch-required-status-check:\n      title: Protected Branch Required Status Check\n      description: Protected Branch Required Status Check\n      type: object\n      properties:\n        url:\n          type: string\n        enforcement_level:\n          type: string\n        contexts:\n          type: array\n          items:\n            type: string\n        checks:\n          type: array\n          items:\n            type: object\n            properties:\n              context:\n                type: string\n              app_id:\n                type: integer\n                nullable: true\n            required:\n              - context\n              - app_id\n        contexts_url:\n          type: string\n        strict:\n          type: boolean\n      required:\n        - contexts\n        - checks\n    protected-branch-admin-enforced:\n      title: Protected Branch Admin Enforced\n      description: Protected Branch Admin Enforced\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins\n        enabled:\n          type: boolean\n          example: true\n      required:\n        - url\n        - enabled\n    protected-branch-pull-request-review:\n      title: Protected Branch Pull Request Review\n      description: Protected Branch Pull Request Review\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions\n        dismissal_restrictions:\n          type: object\n          properties:\n            users:\n              description: The list of users with review dismissal access.\n              type: array\n              items:\n                $ref: '#/components/schemas/simple-user'\n            teams:\n              description: The list of teams with review dismissal access.\n              type: array\n              items:\n                $ref: '#/components/schemas/team'\n            url:\n              type: string\n              example: '\"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions\"'\n            users_url:\n              type: string\n              example: '\"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions/users\"'\n            teams_url:\n              type: string\n              example: '\"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions/teams\"'\n        bypass_pull_request_allowances:\n          type: object\n          description: Allow specific users or teams to bypass pull request requirements. Set to `null` to disable.\n          nullable: true\n          properties:\n            users:\n              description: The list of users allowed to bypass pull request requirements.\n              type: array\n              items:\n                $ref: '#/components/schemas/simple-user'\n            teams:\n              description: The list of teams allowed to bypass pull request requirements.\n              type: array\n              items:\n                $ref: '#/components/schemas/team'\n        dismiss_stale_reviews:\n          type: boolean\n          example: true\n        require_code_owner_reviews:\n          type: boolean\n          example: true\n        required_approving_review_count:\n          type: integer\n          minimum: 0\n          maximum: 6\n          example: 2\n      required:\n        - dismiss_stale_reviews\n        - require_code_owner_reviews\n    branch-restriction-policy:\n      title: Branch Restriction Policy\n      description: Branch Restriction Policy\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n        users_url:\n          type: string\n          format: uri\n        teams_url:\n          type: string\n          format: uri\n        apps_url:\n          type: string\n          format: uri\n        users:\n          type: array\n          items:\n            type: object\n            properties:\n              login:\n                type: string\n              id:\n                type: integer\n              node_id:\n                type: string\n              avatar_url:\n                type: string\n              gravatar_id:\n                type: string\n              url:\n                type: string\n              html_url:\n                type: string\n              followers_url:\n                type: string\n              following_url:\n                type: string\n              gists_url:\n                type: string\n              starred_url:\n                type: string\n              subscriptions_url:\n                type: string\n              organizations_url:\n                type: string\n              repos_url:\n                type: string\n              events_url:\n                type: string\n              received_events_url:\n                type: string\n              type:\n                type: string\n              site_admin:\n                type: boolean\n        teams:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: integer\n              node_id:\n                type: string\n              url:\n                type: string\n              html_url:\n                type: string\n              name:\n                type: string\n              slug:\n                type: string\n              description:\n                type: string\n                nullable: true\n              privacy:\n                type: string\n              permission:\n                type: string\n              members_url:\n                type: string\n              repositories_url:\n                type: string\n              parent:\n                type: string\n                nullable: true\n        apps:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: integer\n              slug:\n                type: string\n              node_id:\n                type: string\n              owner:\n                type: object\n                properties:\n                  login:\n                    type: string\n                  id:\n                    type: integer\n                  node_id:\n                    type: string\n                  url:\n                    type: string\n                  repos_url:\n                    type: string\n                  events_url:\n                    type: string\n                  hooks_url:\n                    type: string\n                  issues_url:\n                    type: string\n                  members_url:\n                    type: string\n                  public_members_url:\n                    type: string\n                  avatar_url:\n                    type: string\n                  description:\n                    type: string\n                  gravatar_id:\n                    type: string\n                    example: '\"\"'\n                  html_url:\n                    type: string\n                    example: '\"https://github.com/testorg-ea8ec76d71c3af4b\"'\n                  followers_url:\n                    type: string\n                    example: '\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/followers\"'\n                  following_url:\n                    type: string\n                    example: '\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/following{/other_user}\"'\n                  gists_url:\n                    type: string\n                    example: '\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/gists{/gist_id}\"'\n                  starred_url:\n                    type: string\n                    example: '\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/starred{/owner}{/repo}\"'\n                  subscriptions_url:\n                    type: string\n                    example: '\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/subscriptions\"'\n                  organizations_url:\n                    type: string\n                    example: '\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/orgs\"'\n                  received_events_url:\n                    type: string\n                    example: '\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/received_events\"'\n                  type:\n                    type: string\n                    example: '\"Organization\"'\n                  site_admin:\n                    type: boolean\n                    example: false\n              name:\n                type: string\n              description:\n                type: string\n              external_url:\n                type: string\n              html_url:\n                type: string\n              created_at:\n                type: string\n              updated_at:\n                type: string\n              permissions:\n                type: object\n                properties:\n                  metadata:\n                    type: string\n                  contents:\n                    type: string\n                  issues:\n                    type: string\n                  single_file:\n                    type: string\n              events:\n                type: array\n                items:\n                  type: string\n      required:\n        - url\n        - users_url\n        - teams_url\n        - apps_url\n        - users\n        - teams\n        - apps\n    commit:\n      title: Commit\n      description: Commit\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\n        sha:\n          type: string\n          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n        node_id:\n          type: string\n          example: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\n        comments_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\n        commit:\n          type: object\n          properties:\n            url:\n              type: string\n              format: uri\n              example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\n            author:\n              $ref: '#/components/schemas/nullable-git-user'\n            committer:\n              $ref: '#/components/schemas/nullable-git-user'\n            message:\n              type: string\n              example: Fix all the bugs\n            comment_count:\n              type: integer\n              example: 0\n            tree:\n              type: object\n              properties:\n                sha:\n                  type: string\n                  example: 827efc6d56897b048c772eb4087f854f46256132\n                url:\n                  type: string\n                  format: uri\n                  example: https://api.github.com/repos/octocat/Hello-World/tree/827efc6d56897b048c772eb4087f854f46256132\n              required:\n                - sha\n                - url\n            verification:\n              $ref: '#/components/schemas/verification'\n          required:\n            - author\n            - committer\n            - comment_count\n            - message\n            - tree\n            - url\n        author:\n          $ref: '#/components/schemas/nullable-simple-user'\n        committer:\n          $ref: '#/components/schemas/nullable-simple-user'\n        parents:\n          type: array\n          items:\n            type: object\n            properties:\n              sha:\n                type: string\n                example: 7638417db6d59f3c431d3e1f261cc637155684cd\n              url:\n                type: string\n                format: uri\n                example: https://api.github.com/repos/octocat/Hello-World/commits/7638417db6d59f3c431d3e1f261cc637155684cd\n              html_url:\n                type: string\n                format: uri\n                example: https://github.com/octocat/Hello-World/commit/7638417db6d59f3c431d3e1f261cc637155684cd\n            required:\n              - sha\n              - url\n        stats:\n          type: object\n          properties:\n            additions:\n              type: integer\n            deletions:\n              type: integer\n            total:\n              type: integer\n        files:\n          type: array\n          items:\n            $ref: '#/components/schemas/diff-entry'\n      required:\n        - url\n        - sha\n        - node_id\n        - html_url\n        - comments_url\n        - commit\n        - author\n        - committer\n        - parents\n    team:\n      title: Team\n      description: Groups of organization members that gives permissions on specified repositories.\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        name:\n          type: string\n        slug:\n          type: string\n        description:\n          type: string\n          nullable: true\n        privacy:\n          type: string\n        permission:\n          type: string\n        permissions:\n          type: object\n          properties:\n            pull:\n              type: boolean\n            triage:\n              type: boolean\n            push:\n              type: boolean\n            maintain:\n              type: boolean\n            admin:\n              type: boolean\n          required:\n            - pull\n            - triage\n            - push\n            - maintain\n            - admin\n        url:\n          type: string\n          format: uri\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/orgs/rails/teams/core\n        members_url:\n          type: string\n        repositories_url:\n          type: string\n          format: uri\n        parent:\n          $ref: '#/components/schemas/nullable-team-simple'\n      required:\n        - id\n        - node_id\n        - url\n        - members_url\n        - name\n        - description\n        - permission\n        - html_url\n        - repositories_url\n        - slug\n        - parent\n    nullable-git-user:\n      title: Git User\n      description: Metaproperties for Git author/committer information.\n      type: object\n      properties:\n        name:\n          type: string\n          example: '\"Chris Wanstrath\"'\n        email:\n          type: string\n          example: '\"chris@ozmm.org\"'\n        date:\n          type: string\n          example: '\"2007-10-29T02:42:39.000-07:00\"'\n      nullable: true\n    verification:\n      title: Verification\n      type: object\n      properties:\n        verified:\n          type: boolean\n        reason:\n          type: string\n        payload:\n          type: string\n          nullable: true\n        signature:\n          type: string\n          nullable: true\n      required:\n        - verified\n        - reason\n        - payload\n        - signature\n    diff-entry:\n      title: Diff Entry\n      description: Diff Entry\n      type: object\n      properties:\n        sha:\n          type: string\n          example: bbcd538c8e72b8c175046e27cc8f907076331401\n        filename:\n          type: string\n          example: file1.txt\n        status:\n          type: string\n          enum:\n            - added\n            - removed\n            - modified\n            - renamed\n            - copied\n            - changed\n            - unchanged\n          example: added\n        additions:\n          type: integer\n          example: 103\n        deletions:\n          type: integer\n          example: 21\n        changes:\n          type: integer\n          example: 124\n        blob_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt\n        raw_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt\n        contents_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e\n        patch:\n          type: string\n          example: '@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test'\n        previous_filename:\n          type: string\n          example: file.txt\n      required:\n        - additions\n        - blob_url\n        - changes\n        - contents_url\n        - deletions\n        - filename\n        - raw_url\n        - sha\n        - status\n    protected-branch:\n      title: Protected Branch\n      description: Branch protections protect branches\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n        required_status_checks:\n          $ref: '#/components/schemas/status-check-policy'\n        required_pull_request_reviews:\n          type: object\n          properties:\n            url:\n              type: string\n              format: uri\n            dismiss_stale_reviews:\n              type: boolean\n            require_code_owner_reviews:\n              type: boolean\n            required_approving_review_count:\n              type: integer\n            dismissal_restrictions:\n              type: object\n              properties:\n                url:\n                  type: string\n                  format: uri\n                users_url:\n                  type: string\n                  format: uri\n                teams_url:\n                  type: string\n                  format: uri\n                users:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/simple-user'\n                teams:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/team'\n              required:\n                - url\n                - users_url\n                - teams_url\n                - users\n                - teams\n            bypass_pull_request_allowances:\n              type: object\n              properties:\n                users:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/simple-user'\n                teams:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/team'\n              required:\n                - users\n                - teams\n          required:\n            - url\n        required_signatures:\n          type: object\n          properties:\n            url:\n              type: string\n              format: uri\n              example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures\n            enabled:\n              type: boolean\n              example: true\n          required:\n            - url\n            - enabled\n        enforce_admins:\n          type: object\n          properties:\n            url:\n              type: string\n              format: uri\n            enabled:\n              type: boolean\n          additionalProperties: false\n          required:\n            - url\n            - enabled\n        required_linear_history:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n          additionalProperties: false\n          required:\n            - enabled\n        allow_force_pushes:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n          additionalProperties: false\n          required:\n            - enabled\n        allow_deletions:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n          additionalProperties: false\n          required:\n            - enabled\n        restrictions:\n          $ref: '#/components/schemas/branch-restriction-policy'\n        required_conversation_resolution:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n          additionalProperties: false\n      required:\n        - url\n    nullable-team-simple:\n      title: Team Simple\n      description: Groups of organization members that gives permissions on specified repositories.\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the team\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VGVhbTE=\n        url:\n          description: URL for the team\n          type: string\n          format: uri\n          example: https://api.github.com/organizations/1/team/1\n        members_url:\n          type: string\n          example: https://api.github.com/organizations/1/team/1/members{/member}\n        name:\n          description: Name of the team\n          type: string\n          example: Justice League\n        description:\n          description: Description of the team\n          type: string\n          nullable: true\n          example: A great team.\n        permission:\n          description: Permission that the team will have for its repositories\n          type: string\n          example: admin\n        privacy:\n          description: The level of privacy this team should have\n          type: string\n          example: closed\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/orgs/rails/teams/core\n        repositories_url:\n          type: string\n          format: uri\n          example: https://api.github.com/organizations/1/team/1/repos\n        slug:\n          type: string\n          example: justice-league\n        ldap_dn:\n          description: Distinguished Name (DN) that team maps to within LDAP environment\n          example: uid=example,ou=users,dc=github,dc=com\n          type: string\n      required:\n        - id\n        - node_id\n        - url\n        - members_url\n        - name\n        - description\n        - permission\n        - html_url\n        - repositories_url\n        - slug\n      nullable: true\n    status-check-policy:\n      title: Status Check Policy\n      description: Status Check Policy\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks\n        strict:\n          type: boolean\n          example: true\n        contexts:\n          type: array\n          example:\n            - continuous-integration/travis-ci\n          items:\n            type: string\n        checks:\n          type: array\n          items:\n            type: object\n            properties:\n              context:\n                type: string\n                example: continuous-integration/travis-ci\n              app_id:\n                type: integer\n                nullable: true\n            required:\n              - context\n              - app_id\n        contexts_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts\n      required:\n        - url\n        - contexts_url\n        - strict\n        - contexts\n        - checks\n    validation-error-simple:\n      title: Validation Error Simple\n      description: Validation Error Simple\n      type: object\n      required:\n        - message\n        - documentation_url\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        errors:\n          type: array\n          items:\n            type: string\n    integration:\n      title: GitHub app\n      description: GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the GitHub app\n          example: 37\n          type: integer\n        slug:\n          description: The slug name of the GitHub app\n          example: probot-owners\n          type: string\n        node_id:\n          type: string\n          example: MDExOkludGVncmF0aW9uMQ==\n        owner:\n          $ref: '#/components/schemas/nullable-simple-user'\n        name:\n          description: The name of the GitHub app\n          example: Probot Owners\n          type: string\n        description:\n          type: string\n          example: The description of the app.\n          nullable: true\n        external_url:\n          type: string\n          format: uri\n          example: https://example.com\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/apps/super-ci\n        created_at:\n          type: string\n          format: date-time\n          example: '2017-07-08T16:18:44-04:00'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2017-07-08T16:18:44-04:00'\n        permissions:\n          description: The set of permissions for the GitHub app\n          type: object\n          properties:\n            issues:\n              type: string\n            checks:\n              type: string\n            metadata:\n              type: string\n            contents:\n              type: string\n            deployments:\n              type: string\n          additionalProperties:\n            type: string\n          example:\n            issues: read\n            deployments: write\n        events:\n          description: The list of events for the GitHub app\n          example:\n            - label\n            - deployment\n          type: array\n          items:\n            type: string\n        installations_count:\n          description: The number of installations associated with the GitHub app\n          example: 5\n          type: integer\n        client_id:\n          type: string\n          example: '\"Iv1.25b5d1e65ffc4022\"'\n        client_secret:\n          type: string\n          example: '\"1d4b2097ac622ba702d19de498f005747a8b21d3\"'\n        webhook_secret:\n          type: string\n          example: '\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\"'\n          nullable: true\n        pem:\n          type: string\n          example: '\"-----BEGIN RSA PRIVATE KEY-----\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\n-----END RSA PRIVATE KEY-----\\n\"'\n      required:\n        - id\n        - node_id\n        - owner\n        - name\n        - description\n        - external_url\n        - html_url\n        - created_at\n        - updated_at\n        - permissions\n        - events\n    codeowners-errors:\n      title: CODEOWNERS errors\n      description: A list of errors found in a repo's CODEOWNERS file\n      type: object\n      properties:\n        errors:\n          type: array\n          items:\n            type: object\n            properties:\n              line:\n                description: The line number where this errors occurs.\n                type: integer\n                example: 7\n              column:\n                description: The column number where this errors occurs.\n                type: integer\n                example: 3\n              source:\n                description: The contents of the line where the error occurs.\n                type: string\n                example: '* user'\n              kind:\n                description: The type of error.\n                type: string\n                example: Invalid owner\n              suggestion:\n                description: Suggested action to fix the error. This will usually be `null`, but is provided for some common errors.\n                type: string\n                nullable: true\n                example: The pattern `/` will never match anything, did you mean `*` instead?\n              message:\n                description: A human-readable description of the error, combining information from multiple fields, laid out for display in a monospaced typeface (for example, a command-line setting).\n                type: string\n                example: |-\n                  Invalid owner on line 7:\n\n                    * user\n                      ^\n              path:\n                description: The path of the file where the error occured.\n                type: string\n                example: .github/CODEOWNERS\n            required:\n              - line\n              - column\n              - kind\n              - message\n              - path\n      required:\n        - errors\n    collaborator:\n      title: Collaborator\n      description: Collaborator\n      type: object\n      properties:\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        email:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        permissions:\n          type: object\n          properties:\n            pull:\n              type: boolean\n            triage:\n              type: boolean\n            push:\n              type: boolean\n            maintain:\n              type: boolean\n            admin:\n              type: boolean\n          required:\n            - pull\n            - push\n            - admin\n        role_name:\n          type: string\n          example: admin\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n        - role_name\n    repository-invitation:\n      title: Repository Invitation\n      description: Repository invitations let you manage who you collaborate with.\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the repository invitation.\n          example: 42\n          type: integer\n        repository:\n          $ref: '#/components/schemas/minimal-repository'\n        invitee:\n          $ref: '#/components/schemas/nullable-simple-user'\n        inviter:\n          $ref: '#/components/schemas/nullable-simple-user'\n        permissions:\n          description: The permission associated with the invitation.\n          example: read\n          type: string\n          enum:\n            - read\n            - write\n            - admin\n            - triage\n            - maintain\n        created_at:\n          type: string\n          format: date-time\n          example: '2016-06-13T14:52:50-05:00'\n        expired:\n          description: Whether or not the invitation has expired\n          type: boolean\n        url:\n          description: URL for the repository invitation\n          example: https://api.github.com/user/repository-invitations/1\n          type: string\n        html_url:\n          type: string\n          example: https://github.com/octocat/Hello-World/invitations\n        node_id:\n          type: string\n      required:\n        - id\n        - node_id\n        - permissions\n        - inviter\n        - invitee\n        - repository\n        - url\n        - html_url\n        - created_at\n    minimal-repository:\n      title: Minimal Repository\n      description: Minimal Repository\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1296269\n        node_id:\n          type: string\n          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n        name:\n          type: string\n          example: Hello-World\n        full_name:\n          type: string\n          example: octocat/Hello-World\n        owner:\n          $ref: '#/components/schemas/simple-user'\n        private:\n          type: boolean\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World\n        description:\n          type: string\n          example: This your first repo!\n          nullable: true\n        fork:\n          type: boolean\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World\n        archive_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n        assignees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}\n        blobs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n        branches_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}\n        collaborators_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n        comments_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}\n        commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}\n        compare_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n        contents_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}\n        contributors_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/contributors\n        deployments_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/deployments\n        downloads_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/downloads\n        events_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/events\n        forks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/forks\n        git_commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n        git_refs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n        git_tags_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n        git_url:\n          type: string\n        issue_comment_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n        issue_events_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n        issues_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}\n        keys_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n        labels_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}\n        languages_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/languages\n        merges_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/merges\n        milestones_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}\n        notifications_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n        pulls_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}\n        releases_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}\n        ssh_url:\n          type: string\n        stargazers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/stargazers\n        statuses_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n        subscribers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscribers\n        subscription_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscription\n        tags_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/tags\n        teams_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/teams\n        trees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n        clone_url:\n          type: string\n        mirror_url:\n          type: string\n          nullable: true\n        hooks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/hooks\n        svn_url:\n          type: string\n        homepage:\n          type: string\n          nullable: true\n        language:\n          type: string\n          nullable: true\n        forks_count:\n          type: integer\n        stargazers_count:\n          type: integer\n        watchers_count:\n          type: integer\n        size:\n          type: integer\n        default_branch:\n          type: string\n        open_issues_count:\n          type: integer\n        is_template:\n          type: boolean\n        topics:\n          type: array\n          items:\n            type: string\n        has_issues:\n          type: boolean\n        has_projects:\n          type: boolean\n        has_wiki:\n          type: boolean\n        has_pages:\n          type: boolean\n        has_downloads:\n          type: boolean\n        archived:\n          type: boolean\n        disabled:\n          type: boolean\n        visibility:\n          type: string\n        pushed_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:06:43Z'\n          nullable: true\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:01:12Z'\n          nullable: true\n        updated_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:14:43Z'\n          nullable: true\n        permissions:\n          type: object\n          properties:\n            admin:\n              type: boolean\n            maintain:\n              type: boolean\n            push:\n              type: boolean\n            triage:\n              type: boolean\n            pull:\n              type: boolean\n        role_name:\n          type: string\n          example: admin\n        template_repository:\n          $ref: '#/components/schemas/nullable-repository'\n        temp_clone_token:\n          type: string\n        delete_branch_on_merge:\n          type: boolean\n        subscribers_count:\n          type: integer\n        network_count:\n          type: integer\n        code_of_conduct:\n          $ref: '#/components/schemas/code-of-conduct'\n        license:\n          type: object\n          properties:\n            key:\n              type: string\n            name:\n              type: string\n            spdx_id:\n              type: string\n            url:\n              type: string\n            node_id:\n              type: string\n          nullable: true\n        forks:\n          type: integer\n          example: 0\n        open_issues:\n          type: integer\n          example: 0\n        watchers:\n          type: integer\n          example: 0\n        allow_forking:\n          type: boolean\n      required:\n        - archive_url\n        - assignees_url\n        - blobs_url\n        - branches_url\n        - collaborators_url\n        - comments_url\n        - commits_url\n        - compare_url\n        - contents_url\n        - contributors_url\n        - deployments_url\n        - description\n        - downloads_url\n        - events_url\n        - fork\n        - forks_url\n        - full_name\n        - git_commits_url\n        - git_refs_url\n        - git_tags_url\n        - hooks_url\n        - html_url\n        - id\n        - node_id\n        - issue_comment_url\n        - issue_events_url\n        - issues_url\n        - keys_url\n        - labels_url\n        - languages_url\n        - merges_url\n        - milestones_url\n        - name\n        - notifications_url\n        - owner\n        - private\n        - pulls_url\n        - releases_url\n        - stargazers_url\n        - statuses_url\n        - subscribers_url\n        - subscription_url\n        - tags_url\n        - teams_url\n        - trees_url\n        - url\n    code-of-conduct:\n      title: Code Of Conduct\n      description: Code Of Conduct\n      type: object\n      properties:\n        key:\n          type: string\n          example: contributor_covenant\n        name:\n          type: string\n          example: Contributor Covenant\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/codes_of_conduct/contributor_covenant\n        body:\n          type: string\n          example: |\n            # Contributor Covenant Code of Conduct\n\n            ## Our Pledge\n\n            In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n            ## Our Standards\n\n            Examples of behavior that contributes to creating a positive environment include:\n\n            * Using welcoming and inclusive language\n            * Being respectful of differing viewpoints and experiences\n            * Gracefully accepting constructive criticism\n            * Focusing on what is best for the community\n            * Showing empathy towards other community members\n\n            Examples of unacceptable behavior by participants include:\n\n            * The use of sexualized language or imagery and unwelcome sexual attention or advances\n            * Trolling, insulting/derogatory comments, and personal or political attacks\n            * Public or private harassment\n            * Publishing others' private information, such as a physical or electronic address, without explicit permission\n            * Other conduct which could reasonably be considered inappropriate in a professional setting\n\n            ## Our Responsibilities\n\n            Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                              to any instances of unacceptable behavior.\n\n            Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n            ## Scope\n\n            This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                              posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n            ## Enforcement\n\n            Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\n            Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n            ## Attribution\n\n            This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n            [homepage]: http://contributor-covenant.org\n            [version]: http://contributor-covenant.org/version/1/4/\n        html_url:\n          type: string\n          format: uri\n          nullable: true\n      required:\n        - url\n        - html_url\n        - key\n        - name\n    repository-collaborator-permission:\n      title: Repository Collaborator Permission\n      description: Repository Collaborator Permission\n      type: object\n      properties:\n        permission:\n          type: string\n        role_name:\n          type: string\n          example: admin\n        user:\n          $ref: '#/components/schemas/nullable-collaborator'\n      required:\n        - permission\n        - role_name\n        - user\n    nullable-collaborator:\n      title: Collaborator\n      description: Collaborator\n      type: object\n      properties:\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        email:\n          nullable: true\n          type: string\n        name:\n          nullable: true\n          type: string\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        permissions:\n          type: object\n          properties:\n            pull:\n              type: boolean\n            triage:\n              type: boolean\n            push:\n              type: boolean\n            maintain:\n              type: boolean\n            admin:\n              type: boolean\n          required:\n            - pull\n            - push\n            - admin\n        role_name:\n          type: string\n          example: admin\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n        - role_name\n      nullable: true\n    commit-comment:\n      title: Commit Comment\n      description: Commit Comment\n      type: object\n      properties:\n        html_url:\n          type: string\n          format: uri\n        url:\n          type: string\n          format: uri\n        id:\n          type: integer\n        node_id:\n          type: string\n        body:\n          type: string\n        path:\n          type: string\n          nullable: true\n        position:\n          type: integer\n          nullable: true\n        line:\n          type: integer\n          nullable: true\n        commit_id:\n          type: string\n        user:\n          $ref: '#/components/schemas/nullable-simple-user'\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n        author_association:\n          $ref: '#/components/schemas/author_association'\n        reactions:\n          $ref: '#/components/schemas/reaction-rollup'\n      required:\n        - url\n        - html_url\n        - id\n        - node_id\n        - user\n        - position\n        - line\n        - path\n        - commit_id\n        - body\n        - author_association\n        - created_at\n        - updated_at\n    author_association:\n      title: author_association\n      type: string\n      example: OWNER\n      description: How the author is associated with the repository.\n      enum:\n        - COLLABORATOR\n        - CONTRIBUTOR\n        - FIRST_TIMER\n        - FIRST_TIME_CONTRIBUTOR\n        - MANNEQUIN\n        - MEMBER\n        - NONE\n        - OWNER\n    reaction-rollup:\n      title: Reaction Rollup\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n        total_count:\n          type: integer\n        '+1':\n          type: integer\n        '-1':\n          type: integer\n        laugh:\n          type: integer\n        confused:\n          type: integer\n        heart:\n          type: integer\n        hooray:\n          type: integer\n        eyes:\n          type: integer\n        rocket:\n          type: integer\n      required:\n        - url\n        - total_count\n        - '+1'\n        - '-1'\n        - laugh\n        - confused\n        - heart\n        - hooray\n        - eyes\n        - rocket\n    scim-error:\n      title: Scim Error\n      description: Scim Error\n      type: object\n      properties:\n        message:\n          type: string\n          nullable: true\n        documentation_url:\n          type: string\n          nullable: true\n        detail:\n          type: string\n          nullable: true\n        status:\n          type: integer\n        scimType:\n          type: string\n          nullable: true\n        schemas:\n          type: array\n          items:\n            type: string\n    branch-short:\n      title: Branch Short\n      description: Branch Short\n      type: object\n      properties:\n        name:\n          type: string\n        commit:\n          type: object\n          properties:\n            sha:\n              type: string\n            url:\n              type: string\n          required:\n            - sha\n            - url\n        protected:\n          type: boolean\n      required:\n        - name\n        - commit\n        - protected\n    pull-request-simple:\n      title: Pull Request Simple\n      description: Pull Request Simple\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDExOlB1bGxSZXF1ZXN0MQ==\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World/pull/1347\n        diff_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World/pull/1347.diff\n        patch_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World/pull/1347.patch\n        issue_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/issues/1347\n        commits_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\n        review_comments_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\n        review_comment_url:\n          type: string\n          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\n        comments_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\n        statuses_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\n        number:\n          type: integer\n          example: 1347\n        state:\n          type: string\n          example: open\n        locked:\n          type: boolean\n          example: true\n        title:\n          type: string\n          example: new-feature\n        user:\n          $ref: '#/components/schemas/nullable-simple-user'\n        body:\n          type: string\n          example: Please pull these awesome changes\n          nullable: true\n        labels:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: integer\n                format: int64\n              node_id:\n                type: string\n              url:\n                type: string\n              name:\n                type: string\n              description:\n                type: string\n              color:\n                type: string\n              default:\n                type: boolean\n            required:\n              - id\n              - node_id\n              - url\n              - name\n              - description\n              - color\n              - default\n        milestone:\n          $ref: '#/components/schemas/nullable-milestone'\n        active_lock_reason:\n          type: string\n          example: too heated\n          nullable: true\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:01:12Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:01:12Z'\n        closed_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:01:12Z'\n          nullable: true\n        merged_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:01:12Z'\n          nullable: true\n        merge_commit_sha:\n          type: string\n          example: e5bd3914e2e596debea16f433f57875b5b90bcd6\n          nullable: true\n        assignee:\n          $ref: '#/components/schemas/nullable-simple-user'\n        assignees:\n          type: array\n          items:\n            $ref: '#/components/schemas/simple-user'\n          nullable: true\n        requested_reviewers:\n          type: array\n          items:\n            $ref: '#/components/schemas/simple-user'\n          nullable: true\n        requested_teams:\n          type: array\n          items:\n            $ref: '#/components/schemas/team'\n          nullable: true\n        head:\n          type: object\n          properties:\n            label:\n              type: string\n            ref:\n              type: string\n            repo:\n              $ref: '#/components/schemas/repository'\n            sha:\n              type: string\n            user:\n              $ref: '#/components/schemas/nullable-simple-user'\n          required:\n            - label\n            - ref\n            - repo\n            - sha\n            - user\n        base:\n          type: object\n          properties:\n            label:\n              type: string\n            ref:\n              type: string\n            repo:\n              $ref: '#/components/schemas/repository'\n            sha:\n              type: string\n            user:\n              $ref: '#/components/schemas/nullable-simple-user'\n          required:\n            - label\n            - ref\n            - repo\n            - sha\n            - user\n        _links:\n          type: object\n          properties:\n            comments:\n              $ref: '#/components/schemas/link'\n            commits:\n              $ref: '#/components/schemas/link'\n            statuses:\n              $ref: '#/components/schemas/link'\n            html:\n              $ref: '#/components/schemas/link'\n            issue:\n              $ref: '#/components/schemas/link'\n            review_comments:\n              $ref: '#/components/schemas/link'\n            review_comment:\n              $ref: '#/components/schemas/link'\n            self:\n              $ref: '#/components/schemas/link'\n          required:\n            - comments\n            - commits\n            - statuses\n            - html\n            - issue\n            - review_comments\n            - review_comment\n            - self\n        author_association:\n          $ref: '#/components/schemas/author_association'\n        auto_merge:\n          $ref: '#/components/schemas/auto_merge'\n        draft:\n          description: Indicates whether or not the pull request is a draft.\n          example: false\n          type: boolean\n      required:\n        - _links\n        - assignee\n        - labels\n        - base\n        - body\n        - closed_at\n        - comments_url\n        - commits_url\n        - created_at\n        - diff_url\n        - head\n        - html_url\n        - id\n        - node_id\n        - issue_url\n        - merge_commit_sha\n        - merged_at\n        - milestone\n        - number\n        - patch_url\n        - review_comment_url\n        - review_comments_url\n        - statuses_url\n        - state\n        - locked\n        - title\n        - updated_at\n        - url\n        - user\n        - author_association\n        - auto_merge\n    nullable-milestone:\n      title: Milestone\n      description: A collection of related issues and pull requests.\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/milestones/1\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World/milestones/v1.0\n        labels_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\n        id:\n          type: integer\n          example: 1002604\n        node_id:\n          type: string\n          example: MDk6TWlsZXN0b25lMTAwMjYwNA==\n        number:\n          description: The number of the milestone.\n          type: integer\n          example: 42\n        state:\n          description: The state of the milestone.\n          example: open\n          type: string\n          enum:\n            - open\n            - closed\n          default: open\n        title:\n          description: The title of the milestone.\n          example: v1.0\n          type: string\n        description:\n          type: string\n          example: Tracking milestone for version 1.0\n          nullable: true\n        creator:\n          $ref: '#/components/schemas/nullable-simple-user'\n        open_issues:\n          type: integer\n          example: 4\n        closed_issues:\n          type: integer\n          example: 8\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-04-10T20:09:31Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2014-03-03T18:58:10Z'\n        closed_at:\n          type: string\n          format: date-time\n          example: '2013-02-12T13:22:01Z'\n          nullable: true\n        due_on:\n          type: string\n          format: date-time\n          example: '2012-10-09T23:39:01Z'\n          nullable: true\n      required:\n        - closed_issues\n        - creator\n        - description\n        - due_on\n        - closed_at\n        - id\n        - node_id\n        - labels_url\n        - html_url\n        - number\n        - open_issues\n        - state\n        - title\n        - url\n        - created_at\n        - updated_at\n      nullable: true\n    link:\n      title: Link\n      description: Hypermedia Link\n      type: object\n      properties:\n        href:\n          type: string\n      required:\n        - href\n    auto_merge:\n      title: Auto merge\n      description: The status of auto merging a pull request.\n      type: object\n      properties:\n        enabled_by:\n          $ref: '#/components/schemas/simple-user'\n        merge_method:\n          type: string\n          description: The merge method to use.\n          enum:\n            - merge\n            - squash\n            - rebase\n        commit_title:\n          type: string\n          description: Title for the merge commit message.\n        commit_message:\n          type: string\n          description: Commit message for the merge commit.\n      required:\n        - enabled_by\n        - merge_method\n        - commit_title\n        - commit_message\n      nullable: true\n    combined-commit-status:\n      title: Combined Commit Status\n      description: Combined Commit Status\n      type: object\n      properties:\n        state:\n          type: string\n        statuses:\n          type: array\n          items:\n            $ref: '#/components/schemas/simple-commit-status'\n        sha:\n          type: string\n        total_count:\n          type: integer\n        repository:\n          $ref: '#/components/schemas/minimal-repository'\n        commit_url:\n          type: string\n          format: uri\n        url:\n          type: string\n          format: uri\n      required:\n        - state\n        - sha\n        - total_count\n        - statuses\n        - repository\n        - commit_url\n        - url\n    simple-commit-status:\n      title: Simple Commit Status\n      type: object\n      properties:\n        description:\n          type: string\n          nullable: true\n        id:\n          type: integer\n        node_id:\n          type: string\n        state:\n          type: string\n        context:\n          type: string\n        target_url:\n          type: string\n          format: uri\n        required:\n          type: boolean\n          nullable: true\n        avatar_url:\n          type: string\n          nullable: true\n          format: uri\n        url:\n          type: string\n          format: uri\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n      required:\n        - description\n        - id\n        - node_id\n        - state\n        - context\n        - target_url\n        - avatar_url\n        - url\n        - created_at\n        - updated_at\n    status:\n      title: Status\n      description: The status of a commit.\n      type: object\n      properties:\n        url:\n          type: string\n        avatar_url:\n          type: string\n          nullable: true\n        id:\n          type: integer\n        node_id:\n          type: string\n        state:\n          type: string\n        description:\n          type: string\n        target_url:\n          type: string\n        context:\n          type: string\n        created_at:\n          type: string\n        updated_at:\n          type: string\n        creator:\n          $ref: '#/components/schemas/nullable-simple-user'\n      required:\n        - url\n        - avatar_url\n        - id\n        - node_id\n        - state\n        - description\n        - target_url\n        - context\n        - created_at\n        - updated_at\n        - creator\n    community-profile:\n      title: Community Profile\n      description: Community Profile\n      type: object\n      properties:\n        health_percentage:\n          type: integer\n          example: 100\n        description:\n          type: string\n          example: My first repository on GitHub!\n          nullable: true\n        documentation:\n          type: string\n          example: example.com\n          nullable: true\n        files:\n          type: object\n          properties:\n            code_of_conduct:\n              $ref: '#/components/schemas/nullable-code-of-conduct-simple'\n            code_of_conduct_file:\n              $ref: '#/components/schemas/nullable-community-health-file'\n            license:\n              $ref: '#/components/schemas/nullable-license-simple'\n            contributing:\n              $ref: '#/components/schemas/nullable-community-health-file'\n            readme:\n              $ref: '#/components/schemas/nullable-community-health-file'\n            issue_template:\n              $ref: '#/components/schemas/nullable-community-health-file'\n            pull_request_template:\n              $ref: '#/components/schemas/nullable-community-health-file'\n          required:\n            - code_of_conduct\n            - code_of_conduct_file\n            - license\n            - contributing\n            - readme\n            - issue_template\n            - pull_request_template\n        updated_at:\n          type: string\n          format: date-time\n          example: '2017-02-28T19:09:29Z'\n          nullable: true\n        content_reports_enabled:\n          type: boolean\n          example: true\n      required:\n        - health_percentage\n        - description\n        - documentation\n        - files\n        - updated_at\n    nullable-code-of-conduct-simple:\n      title: Code Of Conduct Simple\n      description: Code of Conduct Simple\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/github/docs/community/code_of_conduct\n        key:\n          type: string\n          example: citizen_code_of_conduct\n        name:\n          type: string\n          example: Citizen Code of Conduct\n        html_url:\n          type: string\n          nullable: true\n          format: uri\n          example: https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md\n      required:\n        - url\n        - key\n        - name\n        - html_url\n      nullable: true\n    nullable-community-health-file:\n      title: Community Health File\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n        html_url:\n          type: string\n          format: uri\n      required:\n        - url\n        - html_url\n      nullable: true\n    commit-comparison:\n      title: Commit Comparison\n      description: Commit Comparison\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/compare/master...topic\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World/compare/master...topic\n        permalink_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World/compare/octocat:bbcd538c8e72b8c175046e27cc8f907076331401...octocat:0328041d1152db8ae77652d1618a02e57f745f17\n        diff_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World/compare/master...topic.diff\n        patch_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World/compare/master...topic.patch\n        base_commit:\n          $ref: '#/components/schemas/commit'\n        merge_base_commit:\n          $ref: '#/components/schemas/commit'\n        status:\n          type: string\n          enum:\n            - diverged\n            - ahead\n            - behind\n            - identical\n          example: ahead\n        ahead_by:\n          type: integer\n          example: 4\n        behind_by:\n          type: integer\n          example: 5\n        total_commits:\n          type: integer\n          example: 6\n        commits:\n          type: array\n          items:\n            $ref: '#/components/schemas/commit'\n        files:\n          type: array\n          items:\n            $ref: '#/components/schemas/diff-entry'\n      required:\n        - url\n        - html_url\n        - permalink_url\n        - diff_url\n        - patch_url\n        - base_commit\n        - merge_base_commit\n        - status\n        - ahead_by\n        - behind_by\n        - total_commits\n        - commits\n    content-tree:\n      title: Content Tree\n      description: Content Tree\n      type: object\n      properties:\n        type:\n          type: string\n        size:\n          type: integer\n        name:\n          type: string\n        path:\n          type: string\n        sha:\n          type: string\n        url:\n          type: string\n          format: uri\n        git_url:\n          type: string\n          format: uri\n          nullable: true\n        html_url:\n          type: string\n          format: uri\n          nullable: true\n        download_url:\n          type: string\n          format: uri\n          nullable: true\n        entries:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n              size:\n                type: integer\n              name:\n                type: string\n              path:\n                type: string\n              content:\n                type: string\n              sha:\n                type: string\n              url:\n                type: string\n                format: uri\n              git_url:\n                type: string\n                format: uri\n                nullable: true\n              html_url:\n                type: string\n                format: uri\n                nullable: true\n              download_url:\n                type: string\n                format: uri\n                nullable: true\n              _links:\n                type: object\n                properties:\n                  git:\n                    type: string\n                    format: uri\n                    nullable: true\n                  html:\n                    type: string\n                    format: uri\n                    nullable: true\n                  self:\n                    type: string\n                    format: uri\n                required:\n                  - git\n                  - html\n                  - self\n            required:\n              - _links\n              - git_url\n              - html_url\n              - download_url\n              - name\n              - path\n              - sha\n              - size\n              - type\n              - url\n        _links:\n          type: object\n          properties:\n            git:\n              type: string\n              format: uri\n              nullable: true\n            html:\n              type: string\n              format: uri\n              nullable: true\n            self:\n              type: string\n              format: uri\n          required:\n            - git\n            - html\n            - self\n      required:\n        - _links\n        - git_url\n        - html_url\n        - download_url\n        - name\n        - path\n        - sha\n        - size\n        - type\n        - url\n        - content\n        - encoding\n    content-directory:\n      title: Content Directory\n      description: A list of directory items\n      type: array\n      items:\n        type: object\n        properties:\n          type:\n            type: string\n          size:\n            type: integer\n          name:\n            type: string\n          path:\n            type: string\n          content:\n            type: string\n          sha:\n            type: string\n          url:\n            type: string\n            format: uri\n          git_url:\n            type: string\n            format: uri\n            nullable: true\n          html_url:\n            type: string\n            format: uri\n            nullable: true\n          download_url:\n            type: string\n            format: uri\n            nullable: true\n          _links:\n            type: object\n            properties:\n              git:\n                type: string\n                format: uri\n                nullable: true\n              html:\n                type: string\n                format: uri\n                nullable: true\n              self:\n                type: string\n                format: uri\n            required:\n              - git\n              - html\n              - self\n        required:\n          - _links\n          - git_url\n          - html_url\n          - download_url\n          - name\n          - path\n          - sha\n          - size\n          - type\n          - url\n    content-file:\n      title: Content File\n      description: Content File\n      type: object\n      properties:\n        type:\n          type: string\n        encoding:\n          type: string\n        size:\n          type: integer\n        name:\n          type: string\n        path:\n          type: string\n        content:\n          type: string\n        sha:\n          type: string\n        url:\n          type: string\n          format: uri\n        git_url:\n          type: string\n          format: uri\n          nullable: true\n        html_url:\n          type: string\n          format: uri\n          nullable: true\n        download_url:\n          type: string\n          format: uri\n          nullable: true\n        _links:\n          type: object\n          properties:\n            git:\n              type: string\n              format: uri\n              nullable: true\n            html:\n              type: string\n              format: uri\n              nullable: true\n            self:\n              type: string\n              format: uri\n          required:\n            - git\n            - html\n            - self\n        target:\n          type: string\n          example: '\"actual/actual.md\"'\n        submodule_git_url:\n          type: string\n          example: '\"git://example.com/defunkt/dotjs.git\"'\n      required:\n        - _links\n        - git_url\n        - html_url\n        - download_url\n        - name\n        - path\n        - sha\n        - size\n        - type\n        - url\n        - content\n        - encoding\n    content-symlink:\n      title: Symlink Content\n      description: An object describing a symlink\n      type: object\n      properties:\n        type:\n          type: string\n        target:\n          type: string\n        size:\n          type: integer\n        name:\n          type: string\n        path:\n          type: string\n        sha:\n          type: string\n        url:\n          type: string\n          format: uri\n        git_url:\n          type: string\n          format: uri\n          nullable: true\n        html_url:\n          type: string\n          format: uri\n          nullable: true\n        download_url:\n          type: string\n          format: uri\n          nullable: true\n        _links:\n          type: object\n          properties:\n            git:\n              type: string\n              format: uri\n              nullable: true\n            html:\n              type: string\n              format: uri\n              nullable: true\n            self:\n              type: string\n              format: uri\n          required:\n            - git\n            - html\n            - self\n      required:\n        - _links\n        - git_url\n        - html_url\n        - download_url\n        - name\n        - path\n        - sha\n        - size\n        - type\n        - url\n        - target\n    content-submodule:\n      title: Symlink Content\n      description: An object describing a symlink\n      type: object\n      properties:\n        type:\n          type: string\n        submodule_git_url:\n          type: string\n          format: uri\n        size:\n          type: integer\n        name:\n          type: string\n        path:\n          type: string\n        sha:\n          type: string\n        url:\n          type: string\n          format: uri\n        git_url:\n          type: string\n          format: uri\n          nullable: true\n        html_url:\n          type: string\n          format: uri\n          nullable: true\n        download_url:\n          type: string\n          format: uri\n          nullable: true\n        _links:\n          type: object\n          properties:\n            git:\n              type: string\n              format: uri\n              nullable: true\n            html:\n              type: string\n              format: uri\n              nullable: true\n            self:\n              type: string\n              format: uri\n          required:\n            - git\n            - html\n            - self\n      required:\n        - _links\n        - git_url\n        - html_url\n        - download_url\n        - name\n        - path\n        - sha\n        - size\n        - type\n        - url\n        - submodule_git_url\n    file-commit:\n      title: File Commit\n      description: File Commit\n      type: object\n      required:\n        - content\n        - commit\n      properties:\n        content:\n          type: object\n          properties:\n            name:\n              type: string\n            path:\n              type: string\n            sha:\n              type: string\n            size:\n              type: integer\n            url:\n              type: string\n            html_url:\n              type: string\n            git_url:\n              type: string\n            download_url:\n              type: string\n            type:\n              type: string\n            _links:\n              type: object\n              properties:\n                self:\n                  type: string\n                git:\n                  type: string\n                html:\n                  type: string\n          nullable: true\n        commit:\n          type: object\n          properties:\n            sha:\n              type: string\n            node_id:\n              type: string\n            url:\n              type: string\n            html_url:\n              type: string\n            author:\n              type: object\n              properties:\n                date:\n                  type: string\n                name:\n                  type: string\n                email:\n                  type: string\n            committer:\n              type: object\n              properties:\n                date:\n                  type: string\n                name:\n                  type: string\n                email:\n                  type: string\n            message:\n              type: string\n            tree:\n              type: object\n              properties:\n                url:\n                  type: string\n                sha:\n                  type: string\n            parents:\n              type: array\n              items:\n                type: object\n                properties:\n                  url:\n                    type: string\n                  html_url:\n                    type: string\n                  sha:\n                    type: string\n            verification:\n              type: object\n              properties:\n                verified:\n                  type: boolean\n                reason:\n                  type: string\n                signature:\n                  type: string\n                  nullable: true\n                payload:\n                  type: string\n                  nullable: true\n    contributor:\n      title: Contributor\n      description: Contributor\n      type: object\n      properties:\n        login:\n          type: string\n        id:\n          type: integer\n        node_id:\n          type: string\n        avatar_url:\n          type: string\n          format: uri\n        gravatar_id:\n          type: string\n          nullable: true\n        url:\n          type: string\n          format: uri\n        html_url:\n          type: string\n          format: uri\n        followers_url:\n          type: string\n          format: uri\n        following_url:\n          type: string\n        gists_url:\n          type: string\n        starred_url:\n          type: string\n        subscriptions_url:\n          type: string\n          format: uri\n        organizations_url:\n          type: string\n          format: uri\n        repos_url:\n          type: string\n          format: uri\n        events_url:\n          type: string\n        received_events_url:\n          type: string\n          format: uri\n        type:\n          type: string\n        site_admin:\n          type: boolean\n        contributions:\n          type: integer\n        email:\n          type: string\n        name:\n          type: string\n      required:\n        - contributions\n        - type\n    deployment:\n      title: Deployment\n      description: A request for a specific ref(branch,sha,tag) to be deployed\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/example/deployments/1\n        id:\n          description: Unique identifier of the deployment\n          example: 42\n          type: integer\n        node_id:\n          type: string\n          example: MDEwOkRlcGxveW1lbnQx\n        sha:\n          type: string\n          example: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\n        ref:\n          description: The ref to deploy. This can be a branch, tag, or sha.\n          example: topic-branch\n          type: string\n        task:\n          description: Parameter to specify a task to execute\n          example: deploy\n          type: string\n        payload:\n          oneOf:\n            - type: object\n              additionalProperties: true\n            - type: string\n        original_environment:\n          type: string\n          example: staging\n        environment:\n          description: Name for the target deployment environment.\n          example: production\n          type: string\n        description:\n          type: string\n          example: Deploy request from hubot\n          nullable: true\n        creator:\n          $ref: '#/components/schemas/nullable-simple-user'\n        created_at:\n          type: string\n          format: date-time\n          example: '2012-07-20T01:19:13Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2012-07-20T01:19:13Z'\n        statuses_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/example/deployments/1/statuses\n        repository_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/example\n        transient_environment:\n          description: 'Specifies if the given environment is will no longer exist at some point in the future. Default: false.'\n          example: true\n          type: boolean\n        production_environment:\n          description: 'Specifies if the given environment is one that end-users directly interact with. Default: false.'\n          example: true\n          type: boolean\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n      required:\n        - id\n        - node_id\n        - sha\n        - ref\n        - task\n        - environment\n        - creator\n        - payload\n        - description\n        - statuses_url\n        - repository_url\n        - url\n        - created_at\n        - updated_at\n    nullable-integration:\n      title: GitHub app\n      description: GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the GitHub app\n          example: 37\n          type: integer\n        slug:\n          description: The slug name of the GitHub app\n          example: probot-owners\n          type: string\n        node_id:\n          type: string\n          example: MDExOkludGVncmF0aW9uMQ==\n        owner:\n          $ref: '#/components/schemas/nullable-simple-user'\n        name:\n          description: The name of the GitHub app\n          example: Probot Owners\n          type: string\n        description:\n          type: string\n          example: The description of the app.\n          nullable: true\n        external_url:\n          type: string\n          format: uri\n          example: https://example.com\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/apps/super-ci\n        created_at:\n          type: string\n          format: date-time\n          example: '2017-07-08T16:18:44-04:00'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2017-07-08T16:18:44-04:00'\n        permissions:\n          description: The set of permissions for the GitHub app\n          type: object\n          properties:\n            issues:\n              type: string\n            checks:\n              type: string\n            metadata:\n              type: string\n            contents:\n              type: string\n            deployments:\n              type: string\n          additionalProperties:\n            type: string\n          example:\n            issues: read\n            deployments: write\n        events:\n          description: The list of events for the GitHub app\n          example:\n            - label\n            - deployment\n          type: array\n          items:\n            type: string\n        installations_count:\n          description: The number of installations associated with the GitHub app\n          example: 5\n          type: integer\n        client_id:\n          type: string\n          example: '\"Iv1.25b5d1e65ffc4022\"'\n        client_secret:\n          type: string\n          example: '\"1d4b2097ac622ba702d19de498f005747a8b21d3\"'\n        webhook_secret:\n          type: string\n          example: '\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\"'\n          nullable: true\n        pem:\n          type: string\n          example: '\"-----BEGIN RSA PRIVATE KEY-----\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\n-----END RSA PRIVATE KEY-----\\n\"'\n      required:\n        - id\n        - node_id\n        - owner\n        - name\n        - description\n        - external_url\n        - html_url\n        - created_at\n        - updated_at\n        - permissions\n        - events\n      nullable: true\n    deployment-status:\n      title: Deployment Status\n      description: The status of a deployment.\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/example/deployments/42/statuses/1\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDE2OkRlcGxveW1lbnRTdGF0dXMx\n        state:\n          description: The state of the status.\n          enum:\n            - error\n            - failure\n            - inactive\n            - pending\n            - success\n            - queued\n            - in_progress\n          example: success\n          type: string\n        creator:\n          $ref: '#/components/schemas/nullable-simple-user'\n        description:\n          description: A short description of the status.\n          default: ''\n          type: string\n          maxLength: 140\n          example: Deployment finished successfully.\n        environment:\n          description: The environment of the deployment that the status is for.\n          default: ''\n          type: string\n          example: production\n        target_url:\n          description: 'Deprecated: the URL to associate with this status.'\n          default: ''\n          type: string\n          format: uri\n          example: https://example.com/deployment/42/output\n        created_at:\n          type: string\n          format: date-time\n          example: '2012-07-20T01:19:13Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2012-07-20T01:19:13Z'\n        deployment_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/example/deployments/42\n        repository_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/example\n        environment_url:\n          description: The URL for accessing your environment.\n          default: ''\n          type: string\n          format: uri\n          example: https://staging.example.com/\n        log_url:\n          description: The URL to associate with this status.\n          default: ''\n          type: string\n          format: uri\n          example: https://example.com/deployment/42/output\n        performed_via_github_app:\n          $ref: '#/components/schemas/nullable-integration'\n      required:\n        - id\n        - node_id\n        - state\n        - creator\n        - description\n        - deployment_url\n        - target_url\n        - repository_url\n        - url\n        - created_at\n        - updated_at\n    environment:\n      title: Environment\n      description: Details of a deployment environment\n      type: object\n      properties:\n        id:\n          description: The id of the environment.\n          example: 56780428\n          type: integer\n        node_id:\n          type: string\n          example: MDExOkVudmlyb25tZW50NTY3ODA0Mjg=\n        name:\n          description: The name of the environment.\n          example: staging\n          type: string\n        url:\n          type: string\n          example: https://api.github.com/repos/github/hello-world/environments/staging\n        html_url:\n          type: string\n          example: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging\n        created_at:\n          description: The time that the environment was created, in ISO 8601 format.\n          example: '2020-11-23T22:00:40Z'\n          format: date-time\n          type: string\n        updated_at:\n          description: The time that the environment was last updated, in ISO 8601 format.\n          example: '2020-11-23T22:00:40Z'\n          format: date-time\n          type: string\n        protection_rules:\n          type: array\n          items:\n            anyOf:\n              - type: object\n                properties:\n                  id:\n                    type: integer\n                    example: 3515\n                  node_id:\n                    type: string\n                    example: MDQ6R2F0ZTM1MTU=\n                  type:\n                    type: string\n                    example: wait_timer\n                  wait_timer:\n                    $ref: '#/components/schemas/wait-timer'\n                required:\n                  - id\n                  - node_id\n                  - type\n              - type: object\n                properties:\n                  id:\n                    type: integer\n                    example: 3755\n                  node_id:\n                    type: string\n                    example: MDQ6R2F0ZTM3NTU=\n                  type:\n                    type: string\n                    example: required_reviewers\n                  reviewers:\n                    type: array\n                    description: The people or teams that may approve jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.\n                    items:\n                      type: object\n                      properties:\n                        type:\n                          $ref: '#/components/schemas/deployment-reviewer-type'\n                        reviewer:\n                          anyOf:\n                            - $ref: '#/components/schemas/simple-user'\n                            - $ref: '#/components/schemas/team'\n                required:\n                  - id\n                  - node_id\n                  - type\n              - type: object\n                properties:\n                  id:\n                    type: integer\n                    example: 3515\n                  node_id:\n                    type: string\n                    example: MDQ6R2F0ZTM1MTU=\n                  type:\n                    type: string\n                    example: branch_policy\n                required:\n                  - id\n                  - node_id\n                  - type\n        deployment_branch_policy:\n          $ref: '#/components/schemas/deployment_branch_policy'\n      required:\n        - id\n        - node_id\n        - name\n        - url\n        - html_url\n        - created_at\n        - updated_at\n    wait-timer:\n      type: integer\n      example: 30\n      description: The amount of time to delay a job after the job is initially triggered. The time (in minutes) must be an integer between 0 and 43,200 (30 days).\n    deployment-reviewer-type:\n      type: string\n      description: 'The type of reviewer. Must be one of: `User` or `Team`'\n      enum:\n        - User\n        - Team\n      example: User\n    deployment_branch_policy:\n      type: object\n      description: The type of deployment branch policy for this environment. To allow all branches to deploy, set to `null`.\n      properties:\n        protected_branches:\n          type: boolean\n          description: Whether only branches with branch protection rules can deploy to this environment. If `protected_branches` is `true`, `custom_branch_policies` must be `false`; if `protected_branches` is `false`, `custom_branch_policies` must be `true`.\n        custom_branch_policies:\n          type: boolean\n          description: Whether only branches that match the specified name patterns can deploy to this environment.  If `custom_branch_policies` is `true`, `protected_branches` must be `false`; if `custom_branch_policies` is `false`, `protected_branches` must be `true`.\n      nullable: true\n      required:\n        - protected_branches\n        - custom_branch_policies\n    hook:\n      title: Webhook\n      description: Webhooks for repositories.\n      type: object\n      properties:\n        type:\n          type: string\n        id:\n          description: Unique identifier of the webhook.\n          example: 42\n          type: integer\n        name:\n          description: The name of a valid service, use 'web' for a webhook.\n          example: web\n          type: string\n        active:\n          description: Determines whether the hook is actually triggered on pushes.\n          type: boolean\n          example: true\n        events:\n          description: 'Determines what events the hook is triggered for. Default: [''push''].'\n          type: array\n          items:\n            type: string\n          example:\n            - push\n            - pull_request\n        config:\n          type: object\n          properties:\n            email:\n              type: string\n              example: '\"foo@bar.com\"'\n            password:\n              type: string\n              example: '\"foo\"'\n            room:\n              type: string\n              example: '\"roomer\"'\n            subdomain:\n              type: string\n              example: '\"foo\"'\n            url:\n              $ref: '#/components/schemas/webhook-config-url'\n            insecure_ssl:\n              $ref: '#/components/schemas/webhook-config-insecure-ssl'\n            content_type:\n              $ref: '#/components/schemas/webhook-config-content-type'\n            digest:\n              type: string\n              example: '\"sha256\"'\n            secret:\n              $ref: '#/components/schemas/webhook-config-secret'\n            token:\n              type: string\n              example: '\"abc\"'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2011-09-06T20:39:23Z'\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-09-06T17:26:27Z'\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/hooks/1\n        test_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/hooks/1/test\n        ping_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/hooks/1/pings\n        deliveries_url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World/hooks/1/deliveries\n        last_response:\n          $ref: '#/components/schemas/hook-response'\n      required:\n        - id\n        - url\n        - type\n        - name\n        - active\n        - events\n        - config\n        - ping_url\n        - created_at\n        - updated_at\n        - last_response\n        - test_url\n    webhook-config-url:\n      type: string\n      description: The URL to which the payloads will be delivered.\n      example: https://example.com/webhook\n      format: uri\n    webhook-config-insecure-ssl:\n      oneOf:\n        - type: string\n          description: Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**\n          example: '\"0\"'\n        - type: number\n    webhook-config-content-type:\n      type: string\n      description: The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.\n      example: '\"json\"'\n    webhook-config-secret:\n      type: string\n      description: If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).\n      example: '\"********\"'\n    hook-response:\n      title: Hook Response\n      type: object\n      properties:\n        code:\n          type: integer\n          nullable: true\n        status:\n          type: string\n          nullable: true\n        message:\n          type: string\n          nullable: true\n      required:\n        - code\n        - status\n        - message\n    webhook-config:\n      title: Webhook Configuration\n      description: Configuration object of the webhook\n      type: object\n      properties:\n        url:\n          $ref: '#/components/schemas/webhook-config-url'\n        content_type:\n          $ref: '#/components/schemas/webhook-config-content-type'\n        secret:\n          $ref: '#/components/schemas/webhook-config-secret'\n        insecure_ssl:\n          $ref: '#/components/schemas/webhook-config-insecure-ssl'\n    hook-delivery-item:\n      title: Simple webhook delivery\n      description: Delivery made by a webhook, without request and response information.\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the webhook delivery.\n          type: integer\n          example: 42\n        guid:\n          description: Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).\n          type: string\n          example: 58474f00-b361-11eb-836d-0e4f3503ccbe\n        delivered_at:\n          description: Time when the webhook delivery occurred.\n          type: string\n          format: date-time\n          example: '2021-05-12T20:33:44Z'\n        redelivery:\n          description: Whether the webhook delivery is a redelivery.\n          type: boolean\n          example: false\n        duration:\n          description: Time spent delivering.\n          type: number\n          example: 0.03\n        status:\n          description: Describes the response returned after attempting the delivery.\n          type: string\n          example: failed to connect\n        status_code:\n          description: Status code received when delivery was made.\n          type: integer\n          example: 502\n        event:\n          description: The event that triggered the delivery.\n          type: string\n          example: issues\n        action:\n          description: The type of activity for the event that triggered the delivery.\n          type: string\n          example: opened\n          nullable: true\n        installation_id:\n          description: The id of the GitHub App installation associated with this event.\n          type: integer\n          example: 123\n          nullable: true\n        repository_id:\n          description: The id of the repository associated with this event.\n          type: integer\n          example: 123\n          nullable: true\n      required:\n        - id\n        - guid\n        - delivered_at\n        - redelivery\n        - duration\n        - status\n        - status_code\n        - event\n        - action\n        - installation_id\n        - repository_id\n    hook-delivery:\n      title: Webhook delivery\n      description: Delivery made by a webhook.\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the delivery.\n          type: integer\n          example: 42\n        guid:\n          description: Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).\n          type: string\n          example: 58474f00-b361-11eb-836d-0e4f3503ccbe\n        delivered_at:\n          description: Time when the delivery was delivered.\n          type: string\n          format: date-time\n          example: '2021-05-12T20:33:44Z'\n        redelivery:\n          description: Whether the delivery is a redelivery.\n          type: boolean\n          example: false\n        duration:\n          description: Time spent delivering.\n          type: number\n          example: 0.03\n        status:\n          description: Description of the status of the attempted delivery\n          type: string\n          example: failed to connect\n        status_code:\n          description: Status code received when delivery was made.\n          type: integer\n          example: 502\n        event:\n          description: The event that triggered the delivery.\n          type: string\n          example: issues\n        action:\n          description: The type of activity for the event that triggered the delivery.\n          type: string\n          example: opened\n          nullable: true\n        installation_id:\n          description: The id of the GitHub App installation associated with this event.\n          type: integer\n          example: 123\n          nullable: true\n        repository_id:\n          description: The id of the repository associated with this event.\n          type: integer\n          example: 123\n          nullable: true\n        url:\n          description: The URL target of the delivery.\n          type: string\n          example: https://www.example.com\n        request:\n          type: object\n          properties:\n            headers:\n              description: The request headers sent with the webhook delivery.\n              type: object\n              nullable: true\n              additionalProperties: true\n            payload:\n              description: The webhook payload.\n              type: object\n              nullable: true\n              additionalProperties: true\n          required:\n            - headers\n            - payload\n        response:\n          type: object\n          properties:\n            headers:\n              description: The response headers received when the delivery was made.\n              type: object\n              nullable: true\n              additionalProperties: true\n            payload:\n              description: The response payload received.\n              type: string\n              nullable: true\n              additionalProperties: true\n          required:\n            - headers\n            - payload\n      required:\n        - id\n        - guid\n        - delivered_at\n        - redelivery\n        - duration\n        - status\n        - status_code\n        - event\n        - action\n        - installation_id\n        - repository_id\n        - request\n        - response\n    deploy-key:\n      title: Deploy Key\n      description: An SSH key granting access to a single repository.\n      type: object\n      properties:\n        id:\n          type: integer\n        key:\n          type: string\n        url:\n          type: string\n        title:\n          type: string\n        verified:\n          type: boolean\n        created_at:\n          type: string\n        read_only:\n          type: boolean\n      required:\n        - id\n        - key\n        - url\n        - title\n        - verified\n        - created_at\n        - read_only\n    language:\n      title: Language\n      description: Language\n      type: object\n      additionalProperties:\n        type: integer\n    merged-upstream:\n      title: Merged upstream\n      description: Results of a successful merge upstream request\n      type: object\n      properties:\n        message:\n          type: string\n        merge_type:\n          type: string\n          enum:\n            - merge\n            - fast-forward\n            - none\n        base_branch:\n          type: string\n    page:\n      title: GitHub Pages\n      description: The configuration for GitHub Pages for a repository.\n      type: object\n      properties:\n        url:\n          type: string\n          description: The API address for accessing this Page resource.\n          format: uri\n          example: https://api.github.com/repos/github/hello-world/pages\n        status:\n          type: string\n          description: The status of the most recent build of the Page.\n          example: built\n          enum:\n            - built\n            - building\n            - errored\n          nullable: true\n        cname:\n          description: The Pages site's custom domain\n          example: example.com\n          type: string\n          nullable: true\n        protected_domain_state:\n          type: string\n          description: The state if the domain is verified\n          example: pending\n          nullable: true\n          enum:\n            - pending\n            - verified\n            - unverified\n        pending_domain_unverified_at:\n          type: string\n          description: The timestamp when a pending domain becomes unverified.\n          nullable: true\n          format: date-time\n        custom_404:\n          type: boolean\n          description: Whether the Page has a custom 404 page.\n          example: false\n          default: false\n        html_url:\n          type: string\n          description: The web address the Page can be accessed from.\n          format: uri\n          example: https://example.com\n        source:\n          $ref: '#/components/schemas/pages-source-hash'\n        public:\n          type: boolean\n          description: Whether the GitHub Pages site is publicly visible. If set to `true`, the site is accessible to anyone on the internet. If set to `false`, the site will only be accessible to users who have at least `read` access to the repository that published the site.\n          example: true\n        https_certificate:\n          $ref: '#/components/schemas/pages-https-certificate'\n        https_enforced:\n          type: boolean\n          description: Whether https is enabled on the domain\n          example: true\n      required:\n        - url\n        - status\n        - cname\n        - custom_404\n        - public\n    pages-source-hash:\n      title: Pages Source Hash\n      type: object\n      properties:\n        branch:\n          type: string\n        path:\n          type: string\n      required:\n        - branch\n        - path\n    pages-https-certificate:\n      title: Pages Https Certificate\n      type: object\n      properties:\n        state:\n          type: string\n          enum:\n            - new\n            - authorization_created\n            - authorization_pending\n            - authorized\n            - authorization_revoked\n            - issued\n            - uploaded\n            - approved\n            - errored\n            - bad_authz\n            - destroy_pending\n            - dns_changed\n          example: approved\n        description:\n          type: string\n          example: Certificate is approved\n        domains:\n          type: array\n          items:\n            type: string\n          description: Array of the domain set and its alternate name (if it is configured)\n          example:\n            - example.com\n            - www.example.com\n        expires_at:\n          type: string\n          format: date\n      required:\n        - state\n        - description\n        - domains\n    page-build:\n      title: Page Build\n      description: Page Build\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n        status:\n          type: string\n        error:\n          type: object\n          properties:\n            message:\n              type: string\n              nullable: true\n          required:\n            - message\n        pusher:\n          $ref: '#/components/schemas/nullable-simple-user'\n        commit:\n          type: string\n        duration:\n          type: integer\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n      required:\n        - url\n        - status\n        - error\n        - pusher\n        - commit\n        - duration\n        - created_at\n        - updated_at\n    page-build-status:\n      title: Page Build Status\n      description: Page Build Status\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/github/hello-world/pages/builds/latest\n        status:\n          type: string\n          example: queued\n      required:\n        - url\n        - status\n    pages-health-check:\n      title: Pages Health Check Status\n      description: Pages Health Check Status\n      type: object\n      properties:\n        domain:\n          type: object\n          properties:\n            host:\n              type: string\n            uri:\n              type: string\n            nameservers:\n              type: string\n            dns_resolves:\n              type: boolean\n            is_proxied:\n              type: boolean\n              nullable: true\n            is_cloudflare_ip:\n              type: boolean\n              nullable: true\n            is_fastly_ip:\n              type: boolean\n              nullable: true\n            is_old_ip_address:\n              type: boolean\n              nullable: true\n            is_a_record:\n              type: boolean\n              nullable: true\n            has_cname_record:\n              type: boolean\n              nullable: true\n            has_mx_records_present:\n              type: boolean\n              nullable: true\n            is_valid_domain:\n              type: boolean\n            is_apex_domain:\n              type: boolean\n            should_be_a_record:\n              type: boolean\n              nullable: true\n            is_cname_to_github_user_domain:\n              type: boolean\n              nullable: true\n            is_cname_to_pages_dot_github_dot_com:\n              type: boolean\n              nullable: true\n            is_cname_to_fastly:\n              type: boolean\n              nullable: true\n            is_pointed_to_github_pages_ip:\n              type: boolean\n              nullable: true\n            is_non_github_pages_ip_present:\n              type: boolean\n              nullable: true\n            is_pages_domain:\n              type: boolean\n            is_served_by_pages:\n              type: boolean\n              nullable: true\n            is_valid:\n              type: boolean\n            reason:\n              type: string\n              nullable: true\n            responds_to_https:\n              type: boolean\n            enforces_https:\n              type: boolean\n            https_error:\n              type: string\n              nullable: true\n            is_https_eligible:\n              type: boolean\n              nullable: true\n            caa_error:\n              type: string\n              nullable: true\n        alt_domain:\n          type: object\n          nullable: true\n          properties:\n            host:\n              type: string\n            uri:\n              type: string\n            nameservers:\n              type: string\n            dns_resolves:\n              type: boolean\n            is_proxied:\n              type: boolean\n              nullable: true\n            is_cloudflare_ip:\n              type: boolean\n              nullable: true\n            is_fastly_ip:\n              type: boolean\n              nullable: true\n            is_old_ip_address:\n              type: boolean\n              nullable: true\n            is_a_record:\n              type: boolean\n              nullable: true\n            has_cname_record:\n              type: boolean\n              nullable: true\n            has_mx_records_present:\n              type: boolean\n              nullable: true\n            is_valid_domain:\n              type: boolean\n            is_apex_domain:\n              type: boolean\n            should_be_a_record:\n              type: boolean\n              nullable: true\n            is_cname_to_github_user_domain:\n              type: boolean\n              nullable: true\n            is_cname_to_pages_dot_github_dot_com:\n              type: boolean\n              nullable: true\n            is_cname_to_fastly:\n              type: boolean\n              nullable: true\n            is_pointed_to_github_pages_ip:\n              type: boolean\n              nullable: true\n            is_non_github_pages_ip_present:\n              type: boolean\n              nullable: true\n            is_pages_domain:\n              type: boolean\n            is_served_by_pages:\n              type: boolean\n              nullable: true\n            is_valid:\n              type: boolean\n            reason:\n              type: string\n              nullable: true\n            responds_to_https:\n              type: boolean\n            enforces_https:\n              type: boolean\n            https_error:\n              type: string\n              nullable: true\n            is_https_eligible:\n              type: boolean\n              nullable: true\n            caa_error:\n              type: string\n              nullable: true\n    empty-object:\n      title: Empty Object\n      description: An object without any properties.\n      type: object\n      properties: {}\n      additionalProperties: false\n    release:\n      title: Release\n      description: A release.\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n        html_url:\n          type: string\n          format: uri\n        assets_url:\n          type: string\n          format: uri\n        upload_url:\n          type: string\n        tarball_url:\n          type: string\n          format: uri\n          nullable: true\n        zipball_url:\n          type: string\n          format: uri\n          nullable: true\n        id:\n          type: integer\n        node_id:\n          type: string\n        tag_name:\n          description: The name of the tag.\n          example: v1.0.0\n          type: string\n        target_commitish:\n          description: Specifies the commitish value that determines where the Git tag is created from.\n          example: master\n          type: string\n        name:\n          type: string\n          nullable: true\n        body:\n          type: string\n          nullable: true\n        draft:\n          description: true to create a draft (unpublished) release, false to create a published one.\n          example: false\n          type: boolean\n        prerelease:\n          description: Whether to identify the release as a prerelease or a full release.\n          example: false\n          type: boolean\n        created_at:\n          type: string\n          format: date-time\n        published_at:\n          type: string\n          format: date-time\n          nullable: true\n        author:\n          $ref: '#/components/schemas/simple-user'\n        assets:\n          type: array\n          items:\n            $ref: '#/components/schemas/release-asset'\n        body_html:\n          type: string\n        body_text:\n          type: string\n        mentions_count:\n          type: integer\n        discussion_url:\n          description: The URL of the release discussion.\n          type: string\n          format: uri\n        reactions:\n          $ref: '#/components/schemas/reaction-rollup'\n      required:\n        - assets_url\n        - upload_url\n        - tarball_url\n        - zipball_url\n        - created_at\n        - published_at\n        - draft\n        - id\n        - node_id\n        - author\n        - html_url\n        - name\n        - prerelease\n        - tag_name\n        - target_commitish\n        - assets\n        - url\n    release-asset:\n      title: Release Asset\n      description: Data related to a release.\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n        browser_download_url:\n          type: string\n          format: uri\n        id:\n          type: integer\n        node_id:\n          type: string\n        name:\n          description: The file name of the asset.\n          type: string\n          example: Team Environment\n        label:\n          type: string\n          nullable: true\n        state:\n          description: State of the release asset.\n          type: string\n          enum:\n            - uploaded\n            - open\n        content_type:\n          type: string\n        size:\n          type: integer\n        download_count:\n          type: integer\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n        uploader:\n          $ref: '#/components/schemas/nullable-simple-user'\n      required:\n        - id\n        - name\n        - content_type\n        - size\n        - state\n        - url\n        - node_id\n        - download_count\n        - label\n        - uploader\n        - browser_download_url\n        - created_at\n        - updated_at\n    release-notes-content:\n      title: Generated Release Notes Content\n      description: Generated name and body describing a release\n      type: object\n      properties:\n        name:\n          description: The generated name of the release\n          type: string\n          example: Release v1.0.0 is now available!\n        body:\n          description: The generated body describing the contents of the release supporting markdown formatting\n          type: string\n      required:\n        - name\n        - body\n    code-frequency-stat:\n      title: Code Frequency Stat\n      description: Code Frequency Stat\n      type: array\n      items:\n        type: integer\n    commit-activity:\n      title: Commit Activity\n      description: Commit Activity\n      type: object\n      properties:\n        days:\n          type: array\n          example:\n            - 0\n            - 3\n            - 26\n            - 20\n            - 39\n            - 1\n            - 0\n          items:\n            type: integer\n        total:\n          type: integer\n          example: 89\n        week:\n          type: integer\n          example: 1336280400\n      required:\n        - days\n        - total\n        - week\n    contributor-activity:\n      title: Contributor Activity\n      description: Contributor Activity\n      type: object\n      properties:\n        author:\n          $ref: '#/components/schemas/nullable-simple-user'\n        total:\n          type: integer\n          example: 135\n        weeks:\n          type: array\n          example:\n            - w: '1367712000'\n              a: 6898\n              d: 77\n              c: 10\n          items:\n            type: object\n            properties:\n              w:\n                type: integer\n              a:\n                type: integer\n              d:\n                type: integer\n              c:\n                type: integer\n      required:\n        - author\n        - total\n        - weeks\n    participation-stats:\n      title: Participation Stats\n      type: object\n      properties:\n        all:\n          type: array\n          items:\n            type: integer\n        owner:\n          type: array\n          items:\n            type: integer\n      required:\n        - all\n        - owner\n    tag:\n      title: Tag\n      description: Tag\n      type: object\n      properties:\n        name:\n          type: string\n          example: v0.1\n        commit:\n          type: object\n          properties:\n            sha:\n              type: string\n            url:\n              type: string\n              format: uri\n          required:\n            - sha\n            - url\n        zipball_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World/zipball/v0.1\n        tarball_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World/tarball/v0.1\n        node_id:\n          type: string\n      required:\n        - name\n        - node_id\n        - commit\n        - zipball_url\n        - tarball_url\n    topic:\n      title: Topic\n      description: A topic aggregates entities that are related to a subject.\n      type: object\n      properties:\n        names:\n          type: array\n          items:\n            type: string\n      required:\n        - names\n    clone-traffic:\n      title: Clone Traffic\n      description: Clone Traffic\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 173\n        uniques:\n          type: integer\n          example: 128\n        clones:\n          type: array\n          items:\n            $ref: '#/components/schemas/traffic'\n      required:\n        - uniques\n        - count\n        - clones\n    traffic:\n      title: Traffic\n      type: object\n      properties:\n        timestamp:\n          type: string\n          format: date-time\n        uniques:\n          type: integer\n        count:\n          type: integer\n      required:\n        - timestamp\n        - uniques\n        - count\n    content-traffic:\n      title: Content Traffic\n      description: Content Traffic\n      type: object\n      properties:\n        path:\n          type: string\n          example: /github/hubot\n        title:\n          type: string\n          example: 'github/hubot: A customizable life embetterment robot.'\n        count:\n          type: integer\n          example: 3542\n        uniques:\n          type: integer\n          example: 2225\n      required:\n        - path\n        - title\n        - uniques\n        - count\n    referrer-traffic:\n      title: Referrer Traffic\n      description: Referrer Traffic\n      type: object\n      properties:\n        referrer:\n          type: string\n          example: Google\n        count:\n          type: integer\n          example: 4\n        uniques:\n          type: integer\n          example: 3\n      required:\n        - referrer\n        - uniques\n        - count\n    view-traffic:\n      title: View Traffic\n      description: View Traffic\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 14850\n        uniques:\n          type: integer\n          example: 3782\n        views:\n          type: array\n          items:\n            $ref: '#/components/schemas/traffic'\n      required:\n        - uniques\n        - count\n        - views\n  parameters:\n    owner:\n      name: owner\n      in: path\n      required: true\n      schema:\n        type: string\n    repo:\n      name: repo\n      in: path\n      required: true\n      schema:\n        type: string\n    page:\n      name: page\n      description: Page number of the results to fetch.\n      in: query\n      schema:\n        type: integer\n        default: 1\n    autolink-id:\n      name: autolink_id\n      description: autolink_id parameter\n      in: path\n      required: true\n      schema:\n        type: integer\n    per-page:\n      name: per_page\n      description: Results per page (max 100)\n      in: query\n      schema:\n        type: integer\n        default: 30\n    branch:\n      name: branch\n      description: The name of the branch.\n      in: path\n      required: true\n      schema:\n        type: string\n      x-multi-segment: true\n    username:\n      name: username\n      in: path\n      required: true\n      schema:\n        type: string\n    comment-id:\n      name: comment_id\n      description: comment_id parameter\n      in: path\n      required: true\n      schema:\n        type: integer\n    since:\n      name: since\n      description: 'Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'\n      in: query\n      required: false\n      schema:\n        type: string\n        format: date-time\n    commit-sha:\n      name: commit_sha\n      description: commit_sha parameter\n      in: path\n      required: true\n      schema:\n        type: string\n      x-multi-segment: true\n    deployment-id:\n      name: deployment_id\n      description: deployment_id parameter\n      in: path\n      required: true\n      schema:\n        type: integer\n    environment-name:\n      name: environment_name\n      in: path\n      required: true\n      description: The name of the environment\n      schema:\n        type: string\n    hook-id:\n      name: hook_id\n      in: path\n      required: true\n      schema:\n        type: integer\n    cursor:\n      name: cursor\n      description: 'Used for pagination: the starting delivery from which the page of deliveries is fetched. Refer to the `link` header for the next and previous page cursors.'\n      in: query\n      required: false\n      schema:\n        type: string\n    delivery-id:\n      name: delivery_id\n      in: path\n      required: true\n      schema:\n        type: integer\n    invitation-id:\n      name: invitation_id\n      description: invitation_id parameter\n      in: path\n      required: true\n      schema:\n        type: integer\n    key-id:\n      name: key_id\n      description: key_id parameter\n      in: path\n      required: true\n      schema:\n        type: integer\n    asset-id:\n      name: asset_id\n      description: asset_id parameter\n      in: path\n      required: true\n      schema:\n        type: integer\n    release-id:\n      name: release_id\n      description: release_id parameter\n      in: path\n      required: true\n      schema:\n        type: integer\n    per:\n      name: per\n      description: 'Must be one of: `day`, `week`.'\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - ''\n          - day\n          - week\n        default: day\n    since-repo:\n      name: since\n      description: A repository ID. Only return repositories with an ID greater than this ID.\n      in: query\n      required: false\n      schema:\n        type: integer\n    before:\n      name: before\n      description: 'Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'\n      in: query\n      required: false\n      schema:\n        type: string\n        format: date-time\n  responses:\n    moved_permanently:\n      description: Moved permanently\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    forbidden:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    not_found:\n      description: Resource not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    temporary_redirect:\n      description: Temporary Redirect\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    validation_failed:\n      description: Validation failed\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/validation-error'\n    preview_header_missing:\n      description: Preview header missing\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - message\n              - documentation_url\n            properties:\n              message:\n                type: string\n              documentation_url:\n                type: string\n    validation_failed_simple:\n      description: Validation failed\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/validation-error-simple'\n    bad_request:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/scim-error'\n    conflict:\n      description: Conflict\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    internal_error:\n      description: Internal Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    found:\n      description: Found\n    service_unavailable:\n      description: Service unavailable\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              code:\n                type: string\n              message:\n                type: string\n              documentation_url:\n                type: string\n    accepted:\n      description: Accepted\n      content:\n        application/json:\n          schema:\n            type: object\n    no_content:\n      description: A header with no content is returned.\n    not_modified:\n      description: Not modified\n    requires_authentication:\n      description: Requires authentication\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n  securitySchemes: {}\n  callbacks: {}\n  examples:\n    full-repository-default-response:\n      summary: Default response\n      value:\n        id: 1296269\n        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n        name: Hello-World\n        full_name: octocat/Hello-World\n        owner:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        private: false\n        html_url: https://github.com/octocat/Hello-World\n        description: This your first repo!\n        fork: false\n        url: https://api.github.com/repos/octocat/Hello-World\n        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n        events_url: https://api.github.com/repos/octocat/Hello-World/events\n        forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n        git_url: git:github.com/octocat/Hello-World.git\n        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n        languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n        merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n        ssh_url: git@github.com:octocat/Hello-World.git\n        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n        tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n        teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n        clone_url: https://github.com/octocat/Hello-World.git\n        mirror_url: git:git.example.com/octocat/Hello-World\n        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks\n        svn_url: https://svn.github.com/octocat/Hello-World\n        homepage: https://github.com\n        language: null\n        forks_count: 9\n        forks: 9\n        stargazers_count: 80\n        watchers_count: 80\n        watchers: 80\n        size: 108\n        default_branch: master\n        open_issues_count: 0\n        open_issues: 0\n        is_template: false\n        topics:\n          - octocat\n          - atom\n          - electron\n          - api\n        has_issues: true\n        has_projects: true\n        has_wiki: true\n        has_pages: false\n        has_downloads: true\n        archived: false\n        disabled: false\n        visibility: public\n        pushed_at: '2011-01-26T19:06:43Z'\n        created_at: '2011-01-26T19:01:12Z'\n        updated_at: '2011-01-26T19:14:43Z'\n        permissions:\n          pull: true\n          push: false\n          admin: false\n        allow_rebase_merge: true\n        template_repository:\n          id: 1296269\n          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n          name: Hello-World-Template\n          full_name: octocat/Hello-World-Template\n          owner:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          private: false\n          html_url: https://github.com/octocat/Hello-World-Template\n          description: This your first repo!\n          fork: false\n          url: https://api.github.com/repos/octocat/Hello-World-Template\n          archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}\n          assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}\n          blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}\n          branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}\n          collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}\n          comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}\n          commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}\n          compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}\n          contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}\n          contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors\n          deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments\n          downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads\n          events_url: https://api.github.com/repos/octocat/Hello-World-Template/events\n          forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks\n          git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}\n          git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}\n          git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}\n          git_url: git:github.com/octocat/Hello-World-Template.git\n          issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}\n          issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}\n          issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}\n          keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}\n          labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}\n          languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages\n          merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges\n          milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}\n          notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}\n          pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}\n          releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}\n          ssh_url: git@github.com:octocat/Hello-World-Template.git\n          stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers\n          statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}\n          subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers\n          subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription\n          tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags\n          teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams\n          trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}\n          clone_url: https://github.com/octocat/Hello-World-Template.git\n          mirror_url: git:git.example.com/octocat/Hello-World-Template\n          hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks\n          svn_url: https://svn.github.com/octocat/Hello-World-Template\n          homepage: https://github.com\n          language: null\n          forks: 9\n          forks_count: 9\n          stargazers_count: 80\n          watchers_count: 80\n          watchers: 80\n          size: 108\n          default_branch: master\n          open_issues: 0\n          open_issues_count: 0\n          is_template: true\n          license:\n            key: mit\n            name: MIT License\n            url: https://api.github.com/licenses/mit\n            spdx_id: MIT\n            node_id: MDc6TGljZW5zZW1pdA==\n            html_url: https://api.github.com/licenses/mit\n          topics:\n            - octocat\n            - atom\n            - electron\n            - api\n          has_issues: true\n          has_projects: true\n          has_wiki: true\n          has_pages: false\n          has_downloads: true\n          archived: false\n          disabled: false\n          visibility: public\n          pushed_at: '2011-01-26T19:06:43Z'\n          created_at: '2011-01-26T19:01:12Z'\n          updated_at: '2011-01-26T19:14:43Z'\n          permissions:\n            admin: false\n            push: false\n            pull: true\n          allow_rebase_merge: true\n          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O\n          allow_squash_merge: true\n          allow_auto_merge: false\n          delete_branch_on_merge: true\n          allow_merge_commit: true\n          subscribers_count: 42\n          network_count: 0\n        temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O\n        allow_squash_merge: true\n        allow_auto_merge: false\n        delete_branch_on_merge: true\n        allow_merge_commit: true\n        subscribers_count: 42\n        network_count: 0\n        license:\n          key: mit\n          name: MIT License\n          spdx_id: MIT\n          url: https://api.github.com/licenses/mit\n          node_id: MDc6TGljZW5zZW1pdA==\n        organization:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: Organization\n          site_admin: false\n        parent:\n          id: 1296269\n          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n          name: Hello-World\n          full_name: octocat/Hello-World\n          owner:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          private: false\n          html_url: https://github.com/octocat/Hello-World\n          description: This your first repo!\n          fork: false\n          url: https://api.github.com/repos/octocat/Hello-World\n          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n          events_url: https://api.github.com/repos/octocat/Hello-World/events\n          forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n          git_url: git:github.com/octocat/Hello-World.git\n          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n          languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n          merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n          ssh_url: git@github.com:octocat/Hello-World.git\n          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n          tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n          teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n          clone_url: https://github.com/octocat/Hello-World.git\n          mirror_url: git:git.example.com/octocat/Hello-World\n          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks\n          svn_url: https://svn.github.com/octocat/Hello-World\n          homepage: https://github.com\n          language: null\n          forks_count: 9\n          stargazers_count: 80\n          watchers_count: 80\n          size: 108\n          default_branch: master\n          open_issues_count: 0\n          is_template: true\n          topics:\n            - octocat\n            - atom\n            - electron\n            - api\n          has_issues: true\n          has_projects: true\n          has_wiki: true\n          has_pages: false\n          has_downloads: true\n          archived: false\n          disabled: false\n          visibility: public\n          pushed_at: '2011-01-26T19:06:43Z'\n          created_at: '2011-01-26T19:01:12Z'\n          updated_at: '2011-01-26T19:14:43Z'\n          permissions:\n            admin: false\n            push: false\n            pull: true\n          allow_rebase_merge: true\n          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O\n          allow_squash_merge: true\n          allow_auto_merge: false\n          delete_branch_on_merge: true\n          allow_merge_commit: true\n          subscribers_count: 42\n          network_count: 0\n          license:\n            key: mit\n            name: MIT License\n            url: https://api.github.com/licenses/mit\n            spdx_id: MIT\n            node_id: MDc6TGljZW5zZW1pdA==\n            html_url: https://api.github.com/licenses/mit\n          forks: 1\n          open_issues: 1\n          watchers: 1\n        source:\n          id: 1296269\n          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n          name: Hello-World\n          full_name: octocat/Hello-World\n          owner:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          private: false\n          html_url: https://github.com/octocat/Hello-World\n          description: This your first repo!\n          fork: false\n          url: https://api.github.com/repos/octocat/Hello-World\n          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n          events_url: https://api.github.com/repos/octocat/Hello-World/events\n          forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n          git_url: git:github.com/octocat/Hello-World.git\n          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n          languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n          merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n          ssh_url: git@github.com:octocat/Hello-World.git\n          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n          tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n          teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n          clone_url: https://github.com/octocat/Hello-World.git\n          mirror_url: git:git.example.com/octocat/Hello-World\n          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks\n          svn_url: https://svn.github.com/octocat/Hello-World\n          homepage: https://github.com\n          language: null\n          forks_count: 9\n          stargazers_count: 80\n          watchers_count: 80\n          size: 108\n          default_branch: master\n          open_issues_count: 0\n          is_template: true\n          topics:\n            - octocat\n            - atom\n            - electron\n            - api\n          has_issues: true\n          has_projects: true\n          has_wiki: true\n          has_pages: false\n          has_downloads: true\n          archived: false\n          disabled: false\n          visibility: public\n          pushed_at: '2011-01-26T19:06:43Z'\n          created_at: '2011-01-26T19:01:12Z'\n          updated_at: '2011-01-26T19:14:43Z'\n          permissions:\n            admin: false\n            push: false\n            pull: true\n          allow_rebase_merge: true\n          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O\n          allow_squash_merge: true\n          allow_auto_merge: false\n          delete_branch_on_merge: true\n          allow_merge_commit: true\n          subscribers_count: 42\n          network_count: 0\n          license:\n            key: mit\n            name: MIT License\n            url: https://api.github.com/licenses/mit\n            spdx_id: MIT\n            node_id: MDc6TGljZW5zZW1pdA==\n            html_url: https://api.github.com/licenses/mit\n          forks: 1\n          open_issues: 1\n          watchers: 1\n    full-repository:\n      value:\n        id: 1296269\n        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n        name: Hello-World\n        full_name: octocat/Hello-World\n        owner:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        private: false\n        html_url: https://github.com/octocat/Hello-World\n        description: This your first repo!\n        fork: false\n        url: https://api.github.com/repos/octocat/Hello-World\n        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n        events_url: https://api.github.com/repos/octocat/Hello-World/events\n        forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n        git_url: git:github.com/octocat/Hello-World.git\n        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n        languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n        merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n        ssh_url: git@github.com:octocat/Hello-World.git\n        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n        tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n        teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n        clone_url: https://github.com/octocat/Hello-World.git\n        mirror_url: git:git.example.com/octocat/Hello-World\n        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks\n        svn_url: https://svn.github.com/octocat/Hello-World\n        homepage: https://github.com\n        license:\n          key: mit\n          name: MIT License\n          url: https://api.github.com/licenses/mit\n          spdx_id: MIT\n          node_id: MDc6TGljZW5zZW1pdA==\n          html_url: https://github.com/licenses/mit\n        language: null\n        forks_count: 9\n        forks: 9\n        stargazers_count: 80\n        watchers_count: 80\n        watchers: 80\n        size: 108\n        default_branch: master\n        open_issues_count: 0\n        open_issues: 0\n        is_template: false\n        topics:\n          - octocat\n          - atom\n          - electron\n          - api\n        has_issues: true\n        has_projects: true\n        has_wiki: true\n        has_pages: false\n        has_downloads: true\n        archived: false\n        disabled: false\n        visibility: public\n        pushed_at: '2011-01-26T19:06:43Z'\n        created_at: '2011-01-26T19:01:12Z'\n        updated_at: '2011-01-26T19:14:43Z'\n        permissions:\n          pull: true\n          push: false\n          admin: false\n        allow_rebase_merge: true\n        template_repository:\n          id: 1296269\n          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n          name: Hello-World-Template\n          full_name: octocat/Hello-World-Template\n          owner:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          private: false\n          html_url: https://github.com/octocat/Hello-World-Template\n          description: This your first repo!\n          fork: false\n          url: https://api.github.com/repos/octocat/Hello-World-Template\n          archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}\n          assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}\n          blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}\n          branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}\n          collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}\n          comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}\n          commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}\n          compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}\n          contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}\n          contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors\n          deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments\n          downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads\n          events_url: https://api.github.com/repos/octocat/Hello-World-Template/events\n          forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks\n          git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}\n          git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}\n          git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}\n          git_url: git:github.com/octocat/Hello-World-Template.git\n          issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}\n          issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}\n          issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}\n          keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}\n          labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}\n          languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages\n          merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges\n          milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}\n          notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}\n          pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}\n          releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}\n          ssh_url: git@github.com:octocat/Hello-World-Template.git\n          stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers\n          statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}\n          subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers\n          subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription\n          tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags\n          teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams\n          trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}\n          clone_url: https://github.com/octocat/Hello-World-Template.git\n          mirror_url: git:git.example.com/octocat/Hello-World-Template\n          hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks\n          svn_url: https://svn.github.com/octocat/Hello-World-Template\n          homepage: https://github.com\n          language: null\n          forks: 9\n          forks_count: 9\n          stargazers_count: 80\n          watchers_count: 80\n          watchers: 80\n          size: 108\n          default_branch: master\n          open_issues: 0\n          open_issues_count: 0\n          is_template: true\n          license:\n            key: mit\n            name: MIT License\n            url: https://api.github.com/licenses/mit\n            spdx_id: MIT\n            node_id: MDc6TGljZW5zZW1pdA==\n            html_url: https://api.github.com/licenses/mit\n          topics:\n            - octocat\n            - atom\n            - electron\n            - api\n          has_issues: true\n          has_projects: true\n          has_wiki: true\n          has_pages: false\n          has_downloads: true\n          archived: false\n          disabled: false\n          visibility: public\n          pushed_at: '2011-01-26T19:06:43Z'\n          created_at: '2011-01-26T19:01:12Z'\n          updated_at: '2011-01-26T19:14:43Z'\n          permissions:\n            admin: false\n            push: false\n            pull: true\n          allow_rebase_merge: true\n          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O\n          allow_squash_merge: true\n          allow_auto_merge: false\n          delete_branch_on_merge: true\n          allow_merge_commit: true\n          subscribers_count: 42\n          network_count: 0\n        temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O\n        allow_squash_merge: true\n        allow_auto_merge: false\n        delete_branch_on_merge: true\n        allow_merge_commit: true\n        allow_forking: true\n        subscribers_count: 42\n        network_count: 0\n        organization:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: Organization\n          site_admin: false\n        parent:\n          id: 1296269\n          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n          name: Hello-World\n          full_name: octocat/Hello-World\n          owner:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          private: false\n          html_url: https://github.com/octocat/Hello-World\n          description: This your first repo!\n          fork: false\n          url: https://api.github.com/repos/octocat/Hello-World\n          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n          events_url: https://api.github.com/repos/octocat/Hello-World/events\n          forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n          git_url: git:github.com/octocat/Hello-World.git\n          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n          languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n          merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n          ssh_url: git@github.com:octocat/Hello-World.git\n          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n          tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n          teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n          clone_url: https://github.com/octocat/Hello-World.git\n          mirror_url: git:git.example.com/octocat/Hello-World\n          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks\n          svn_url: https://svn.github.com/octocat/Hello-World\n          homepage: https://github.com\n          language: null\n          forks_count: 9\n          stargazers_count: 80\n          watchers_count: 80\n          size: 108\n          default_branch: master\n          open_issues_count: 0\n          is_template: true\n          topics:\n            - octocat\n            - atom\n            - electron\n            - api\n          has_issues: true\n          has_projects: true\n          has_wiki: true\n          has_pages: false\n          has_downloads: true\n          archived: false\n          disabled: false\n          visibility: public\n          pushed_at: '2011-01-26T19:06:43Z'\n          created_at: '2011-01-26T19:01:12Z'\n          updated_at: '2011-01-26T19:14:43Z'\n          permissions:\n            admin: false\n            push: false\n            pull: true\n          allow_rebase_merge: true\n          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O\n          allow_squash_merge: true\n          allow_auto_merge: false\n          delete_branch_on_merge: true\n          allow_merge_commit: true\n          subscribers_count: 42\n          network_count: 0\n          license:\n            key: mit\n            name: MIT License\n            url: https://api.github.com/licenses/mit\n            spdx_id: MIT\n            node_id: MDc6TGljZW5zZW1pdA==\n            html_url: https://api.github.com/licenses/mit\n          forks: 1\n          open_issues: 1\n          watchers: 1\n        source:\n          id: 1296269\n          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n          name: Hello-World\n          full_name: octocat/Hello-World\n          owner:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          private: false\n          html_url: https://github.com/octocat/Hello-World\n          description: This your first repo!\n          fork: false\n          url: https://api.github.com/repos/octocat/Hello-World\n          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n          events_url: https://api.github.com/repos/octocat/Hello-World/events\n          forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n          git_url: git:github.com/octocat/Hello-World.git\n          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n          languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n          merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n          ssh_url: git@github.com:octocat/Hello-World.git\n          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n          tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n          teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n          clone_url: https://github.com/octocat/Hello-World.git\n          mirror_url: git:git.example.com/octocat/Hello-World\n          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks\n          svn_url: https://svn.github.com/octocat/Hello-World\n          homepage: https://github.com\n          language: null\n          forks_count: 9\n          stargazers_count: 80\n          watchers_count: 80\n          size: 108\n          default_branch: master\n          open_issues_count: 0\n          is_template: true\n          topics:\n            - octocat\n            - atom\n            - electron\n            - api\n          has_issues: true\n          has_projects: true\n          has_wiki: true\n          has_pages: false\n          has_downloads: true\n          archived: false\n          disabled: false\n          visibility: public\n          pushed_at: '2011-01-26T19:06:43Z'\n          created_at: '2011-01-26T19:01:12Z'\n          updated_at: '2011-01-26T19:14:43Z'\n          permissions:\n            admin: false\n            push: false\n            pull: true\n          allow_rebase_merge: true\n          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O\n          allow_squash_merge: true\n          allow_auto_merge: false\n          delete_branch_on_merge: true\n          allow_merge_commit: true\n          subscribers_count: 42\n          network_count: 0\n          license:\n            key: mit\n            name: MIT License\n            url: https://api.github.com/licenses/mit\n            spdx_id: MIT\n            node_id: MDc6TGljZW5zZW1pdA==\n            html_url: https://api.github.com/licenses/mit\n          forks: 1\n          open_issues: 1\n          watchers: 1\n    autolink-items:\n      value:\n        - id: 1\n          key_prefix: TICKET-\n          url_template: https://example.com/TICKET?query=\u003cnum\u003e\n    autolink:\n      value:\n        id: 1\n        key_prefix: TICKET-\n        url_template: https://example.com/TICKET?query=\u003cnum\u003e\n    short-branch-with-protection-items:\n      value:\n        - name: master\n          commit:\n            sha: c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\n            url: https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\n          protected: true\n          protection:\n            required_status_checks:\n              enforcement_level: non_admins\n              contexts:\n                - ci-test\n                - linter\n          protection_url: https://api.github.com/repos/octocat/hello-world/branches/master/protection\n    branch-protection:\n      value:\n        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection\n        required_status_checks:\n          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks\n          contexts:\n            - continuous-integration/travis-ci\n          contexts_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts\n          enforcement_level: non_admins\n        enforce_admins:\n          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins\n          enabled: true\n        required_pull_request_reviews:\n          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews\n          dismissal_restrictions:\n            url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions\n            users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users\n            teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams\n            users:\n              - login: octocat\n                id: 1\n                node_id: MDQ6VXNlcjE=\n                avatar_url: https://github.com/images/error/octocat_happy.gif\n                gravatar_id: ''\n                url: https://api.github.com/users/octocat\n                html_url: https://github.com/octocat\n                followers_url: https://api.github.com/users/octocat/followers\n                following_url: https://api.github.com/users/octocat/following{/other_user}\n                gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n                subscriptions_url: https://api.github.com/users/octocat/subscriptions\n                organizations_url: https://api.github.com/users/octocat/orgs\n                repos_url: https://api.github.com/users/octocat/repos\n                events_url: https://api.github.com/users/octocat/events{/privacy}\n                received_events_url: https://api.github.com/users/octocat/received_events\n                type: User\n                site_admin: false\n            teams:\n              - id: 1\n                node_id: MDQ6VGVhbTE=\n                url: https://api.github.com/teams/1\n                html_url: https://github.com/orgs/github/teams/justice-league\n                name: Justice League\n                slug: justice-league\n                description: A great team.\n                privacy: closed\n                permission: admin\n                members_url: https://api.github.com/teams/1/members{/member}\n                repositories_url: https://api.github.com/teams/1/repos\n                parent: null\n          dismiss_stale_reviews: true\n          require_code_owner_reviews: true\n          required_approving_review_count: 2\n        restrictions:\n          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions\n          users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users\n          teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams\n          apps_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams\n          users:\n            - login: octocat\n              id: 1\n              node_id: MDQ6VXNlcjE=\n              avatar_url: https://github.com/images/error/octocat_happy.gif\n              gravatar_id: ''\n              url: https://api.github.com/users/octocat\n              html_url: https://github.com/octocat\n              followers_url: https://api.github.com/users/octocat/followers\n              following_url: https://api.github.com/users/octocat/following{/other_user}\n              gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/octocat/subscriptions\n              organizations_url: https://api.github.com/users/octocat/orgs\n              repos_url: https://api.github.com/users/octocat/repos\n              events_url: https://api.github.com/users/octocat/events{/privacy}\n              received_events_url: https://api.github.com/users/octocat/received_events\n              type: User\n              site_admin: false\n          teams:\n            - id: 1\n              node_id: MDQ6VGVhbTE=\n              url: https://api.github.com/teams/1\n              html_url: https://github.com/orgs/github/teams/justice-league\n              name: Justice League\n              slug: justice-league\n              description: A great team.\n              privacy: closed\n              permission: admin\n              members_url: https://api.github.com/teams/1/members{/member}\n              repositories_url: https://api.github.com/teams/1/repos\n              parent: null\n          apps:\n            - id: 1\n              slug: octoapp\n              node_id: MDExOkludGVncmF0aW9uMQ==\n              owner:\n                login: github\n                id: 1\n                node_id: MDEyOk9yZ2FuaXphdGlvbjE=\n                url: https://api.github.com/orgs/github\n                repos_url: https://api.github.com/orgs/github/repos\n                events_url: https://api.github.com/orgs/github/events\n                hooks_url: https://api.github.com/orgs/github/hooks\n                issues_url: https://api.github.com/orgs/github/issues\n                members_url: https://api.github.com/orgs/github/members{/member}\n                public_members_url: https://api.github.com/orgs/github/public_members{/member}\n                avatar_url: https://github.com/images/error/octocat_happy.gif\n                description: A great organization\n              name: Octocat App\n              description: ''\n              external_url: https://example.com\n              html_url: https://github.com/apps/octoapp\n              created_at: '2017-07-08T16:18:44-04:00'\n              updated_at: '2017-07-08T16:18:44-04:00'\n              permissions:\n                metadata: read\n                contents: read\n                issues: write\n                single_file: write\n              events:\n                - push\n                - pull_request\n        required_linear_history:\n          enabled: true\n        allow_force_pushes:\n          enabled: true\n        allow_deletions:\n          enabled: true\n        required_conversation_resolution:\n          enabled: true\n    protected-branch-admin-enforced-2:\n      value:\n        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins\n        enabled: true\n    protected-branch-pull-request-review:\n      value:\n        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews\n        dismissal_restrictions:\n          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions\n          users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users\n          teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams\n          users:\n            - login: octocat\n              id: 1\n              node_id: MDQ6VXNlcjE=\n              avatar_url: https://github.com/images/error/octocat_happy.gif\n              gravatar_id: ''\n              url: https://api.github.com/users/octocat\n              html_url: https://github.com/octocat\n              followers_url: https://api.github.com/users/octocat/followers\n              following_url: https://api.github.com/users/octocat/following{/other_user}\n              gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/octocat/subscriptions\n              organizations_url: https://api.github.com/users/octocat/orgs\n              repos_url: https://api.github.com/users/octocat/repos\n              events_url: https://api.github.com/users/octocat/events{/privacy}\n              received_events_url: https://api.github.com/users/octocat/received_events\n              type: User\n              site_admin: false\n          teams:\n            - id: 1\n              node_id: MDQ6VGVhbTE=\n              url: https://api.github.com/teams/1\n              html_url: https://github.com/orgs/github/teams/justice-league\n              name: Justice League\n              slug: justice-league\n              description: A great team.\n              privacy: closed\n              permission: admin\n              members_url: https://api.github.com/teams/1/members{/member}\n              repositories_url: https://api.github.com/teams/1/repos\n              parent: null\n        dismiss_stale_reviews: true\n        require_code_owner_reviews: true\n        required_approving_review_count: 2\n    protected-branch-admin-enforced:\n      value:\n        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures\n        enabled: true\n    status-check-policy:\n      value:\n        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks\n        strict: true\n        contexts:\n          - continuous-integration/travis-ci\n        contexts_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts\n    branch-restriction-policy:\n      value:\n        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions\n        users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users\n        teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams\n        apps_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams\n        users:\n          - login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n        teams:\n          - id: 1\n            node_id: MDQ6VGVhbTE=\n            url: https://api.github.com/teams/1\n            html_url: https://github.com/orgs/github/teams/justice-league\n            name: Justice League\n            slug: justice-league\n            description: A great team.\n            privacy: closed\n            permission: admin\n            members_url: https://api.github.com/teams/1/members{/member}\n            repositories_url: https://api.github.com/teams/1/repos\n            parent: null\n        apps:\n          - id: 1\n            slug: octoapp\n            node_id: MDExOkludGVncmF0aW9uMQ==\n            owner:\n              login: github\n              id: 1\n              node_id: MDEyOk9yZ2FuaXphdGlvbjE=\n              url: https://api.github.com/orgs/github\n              repos_url: https://api.github.com/orgs/github/repos\n              events_url: https://api.github.com/orgs/github/events\n              hooks_url: https://api.github.com/orgs/github/hooks\n              issues_url: https://api.github.com/orgs/github/issues\n              members_url: https://api.github.com/orgs/github/members{/member}\n              public_members_url: https://api.github.com/orgs/github/public_members{/member}\n              avatar_url: https://github.com/images/error/octocat_happy.gif\n              description: A great organization\n            name: Octocat App\n            description: ''\n            external_url: https://example.com\n            html_url: https://github.com/apps/octoapp\n            created_at: '2017-07-08T16:18:44-04:00'\n            updated_at: '2017-07-08T16:18:44-04:00'\n            permissions:\n              metadata: read\n              contents: read\n              issues: write\n              single_file: write\n            events:\n              - push\n              - pull_request\n    integration-items:\n      value:\n        - id: 1\n          slug: octoapp\n          node_id: MDExOkludGVncmF0aW9uMQ==\n          owner:\n            login: github\n            id: 1\n            node_id: MDEyOk9yZ2FuaXphdGlvbjE=\n            url: https://api.github.com/orgs/github\n            repos_url: https://api.github.com/orgs/github/repos\n            events_url: https://api.github.com/orgs/github/events\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: true\n          name: Octocat App\n          description: ''\n          external_url: https://example.com\n          html_url: https://github.com/apps/octoapp\n          created_at: '2017-07-08T16:18:44-04:00'\n          updated_at: '2017-07-08T16:18:44-04:00'\n          permissions:\n            metadata: read\n            contents: read\n            issues: write\n            single_file: write\n          events:\n            - push\n            - pull_request\n    team-items:\n      value:\n        - id: 1\n          node_id: MDQ6VGVhbTE=\n          url: https://api.github.com/teams/1\n          html_url: https://github.com/orgs/github/teams/justice-league\n          name: Justice League\n          slug: justice-league\n          description: A great team.\n          privacy: closed\n          permission: admin\n          members_url: https://api.github.com/teams/1/members{/member}\n          repositories_url: https://api.github.com/teams/1/repos\n          parent: null\n    simple-user-items:\n      value:\n        - login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n    branch-with-protection:\n      value:\n        name: master\n        commit:\n          sha: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\n          node_id: MDY6Q29tbWl0N2ZkMWE2MGIwMWY5MWIzMTRmNTk5NTVhNGU0ZDRlODBkOGVkZjExZA==\n          commit:\n            author:\n              name: The Octocat\n              date: '2012-03-06T15:06:50-08:00'\n              email: octocat@nowhere.com\n            url: https://api.github.com/repos/octocat/Hello-World/git/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\n            message: |-\n              Merge pull request #6 from Spaceghost/patch-1\n\n              New line at end of file.\n            tree:\n              sha: b4eecafa9be2f2006ce1b709d6857b07069b4608\n              url: https://api.github.com/repos/octocat/Hello-World/git/trees/b4eecafa9be2f2006ce1b709d6857b07069b4608\n            committer:\n              name: The Octocat\n              date: '2012-03-06T15:06:50-08:00'\n              email: octocat@nowhere.com\n            verification:\n              verified: false\n              reason: unsigned\n              signature: null\n              payload: null\n            comment_count: 0\n          author:\n            gravatar_id: ''\n            avatar_url: https://secure.gravatar.com/avatar/7ad39074b0584bc555d0417ae3e7d974?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png\n            url: https://api.github.com/users/octocat\n            id: 583231\n            login: octocat\n            node_id: MDQ6VXNlcjE=\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: true\n          parents:\n            - sha: 553c2077f0edc3d5dc5d17262f6aa498e69d6f8e\n              url: https://api.github.com/repos/octocat/Hello-World/commits/553c2077f0edc3d5dc5d17262f6aa498e69d6f8e\n            - sha: 762941318ee16e59dabbacb1b4049eec22f0d303\n              url: https://api.github.com/repos/octocat/Hello-World/commits/762941318ee16e59dabbacb1b4049eec22f0d303\n          url: https://api.github.com/repos/octocat/Hello-World/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\n          committer:\n            gravatar_id: ''\n            avatar_url: https://secure.gravatar.com/avatar/7ad39074b0584bc555d0417ae3e7d974?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png\n            url: https://api.github.com/users/octocat\n            id: 583231\n            login: octocat\n            node_id: MDQ6VXNlcjE=\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: true\n          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\n          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\n        _links:\n          html: https://github.com/octocat/Hello-World/tree/master\n          self: https://api.github.com/repos/octocat/Hello-World/branches/master\n        protected: true\n        protection:\n          required_status_checks:\n            enforcement_level: non_admins\n            contexts:\n              - ci-test\n              - linter\n        protection_url: https://api.github.com/repos/octocat/hello-world/branches/master/protection\n    codeowners-errors:\n      value:\n        errors:\n          - line: 3\n            column: 1\n            kind: Invalid pattern\n            source: '***/*.rb @monalisa'\n            suggestion: Did you mean `**/*.rb`?\n            message: |-\n              Invalid pattern on line 3: Did you mean `**/*.rb`?\n\n                ***/*.rb @monalisa\n                ^\n            path: .github/CODEOWNERS\n          - line: 7\n            column: 7\n            kind: Invalid owner\n            source: '*.txt docs@'\n            suggestion: null\n            message: |-\n              Invalid owner on line 7:\n\n                *.txt docs@\n                      ^\n            path: .github/CODEOWNERS\n    collaborator-items:\n      value:\n        - login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n          permissions:\n            pull: true\n            triage: true\n            push: true\n            maintain: false\n            admin: false\n          role_name: write\n    repository-invitation-response-when-a-new-invitation-is-created:\n      value:\n        id: 1\n        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n        repository:\n          id: 1296269\n          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n          name: Hello-World\n          full_name: octocat/Hello-World\n          owner:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          private: false\n          html_url: https://github.com/octocat/Hello-World\n          description: This your first repo!\n          fork: false\n          url: https://api.github.com/repos/octocat/Hello-World\n          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n          events_url: https://api.github.com/repos/octocat/Hello-World/events\n          forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n          git_url: git:github.com/octocat/Hello-World.git\n          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n          languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n          merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n          ssh_url: git@github.com:octocat/Hello-World.git\n          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n          tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n          teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks\n        invitee:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        inviter:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        permissions: write\n        created_at: '2016-06-13T14:52:50-05:00'\n        url: https://api.github.com/user/repository_invitations/1296269\n        html_url: https://github.com/octocat/Hello-World/invitations\n    repository-collaborator-permission-response-if-user-has-admin-permissions:\n      value:\n        permission: admin\n        role_name: admin\n        user:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n    commit-comment-items:\n      value:\n        - html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1\n          url: https://api.github.com/repos/octocat/Hello-World/comments/1\n          id: 1\n          node_id: MDEzOkNvbW1pdENvbW1lbnQx\n          body: Great stuff\n          path: file1.txt\n          position: 4\n          line: 14\n          commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n          user:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          created_at: '2011-04-14T16:00:49Z'\n          updated_at: '2011-04-14T16:00:49Z'\n          author_association: COLLABORATOR\n    commit-comment:\n      value:\n        html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1\n        url: https://api.github.com/repos/octocat/Hello-World/comments/1\n        id: 1\n        node_id: MDEzOkNvbW1pdENvbW1lbnQx\n        body: Great stuff\n        path: file1.txt\n        position: 4\n        line: 14\n        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n        author_association: COLLABORATOR\n        user:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        created_at: '2011-04-14T16:00:49Z'\n        updated_at: '2011-04-14T16:00:49Z'\n    commit-comment-2:\n      value:\n        html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1\n        url: https://api.github.com/repos/octocat/Hello-World/comments/1\n        id: 1\n        node_id: MDEzOkNvbW1pdENvbW1lbnQx\n        body: Nice change\n        path: file1.txt\n        position: 4\n        line: 14\n        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n        author_association: COLLABORATOR\n        user:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        created_at: '2011-04-14T16:00:49Z'\n        updated_at: '2011-04-14T16:00:49Z'\n    commit-items:\n      value:\n        - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\n          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n          node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\n          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\n          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\n          commit:\n            url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\n            author:\n              name: Monalisa Octocat\n              email: support@github.com\n              date: '2011-04-14T16:00:49Z'\n            committer:\n              name: Monalisa Octocat\n              email: support@github.com\n              date: '2011-04-14T16:00:49Z'\n            message: Fix all the bugs\n            tree:\n              url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e\n              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n            comment_count: 0\n            verification:\n              verified: false\n              reason: unsigned\n              signature: null\n              payload: null\n          author:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          committer:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          parents:\n            - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\n              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n    branch-short-items:\n      value:\n        - name: branch_5\n          commit:\n            sha: c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\n            url: https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\n          protected: false\n    pull-request-simple-items:\n      value:\n        - url: https://api.github.com/repos/octocat/Hello-World/pulls/1347\n          id: 1\n          node_id: MDExOlB1bGxSZXF1ZXN0MQ==\n          html_url: https://github.com/octocat/Hello-World/pull/1347\n          diff_url: https://github.com/octocat/Hello-World/pull/1347.diff\n          patch_url: https://github.com/octocat/Hello-World/pull/1347.patch\n          issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347\n          commits_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\n          review_comments_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\n          review_comment_url: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\n          comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\n          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\n          number: 1347\n          state: open\n          locked: true\n          title: Amazing new feature\n          user:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          body: Please pull these awesome changes in!\n          labels:\n            - id: 208045946\n              node_id: MDU6TGFiZWwyMDgwNDU5NDY=\n              url: https://api.github.com/repos/octocat/Hello-World/labels/bug\n              name: bug\n              description: Something isn't working\n              color: f29513\n              default: true\n          milestone:\n            url: https://api.github.com/repos/octocat/Hello-World/milestones/1\n            html_url: https://github.com/octocat/Hello-World/milestones/v1.0\n            labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\n            id: 1002604\n            node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==\n            number: 1\n            state: open\n            title: v1.0\n            description: Tracking milestone for version 1.0\n            creator:\n              login: octocat\n              id: 1\n              node_id: MDQ6VXNlcjE=\n              avatar_url: https://github.com/images/error/octocat_happy.gif\n              gravatar_id: ''\n              url: https://api.github.com/users/octocat\n              html_url: https://github.com/octocat\n              followers_url: https://api.github.com/users/octocat/followers\n              following_url: https://api.github.com/users/octocat/following{/other_user}\n              gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/octocat/subscriptions\n              organizations_url: https://api.github.com/users/octocat/orgs\n              repos_url: https://api.github.com/users/octocat/repos\n              events_url: https://api.github.com/users/octocat/events{/privacy}\n              received_events_url: https://api.github.com/users/octocat/received_events\n              type: User\n              site_admin: false\n            open_issues: 4\n            closed_issues: 8\n            created_at: '2011-04-10T20:09:31Z'\n            updated_at: '2014-03-03T18:58:10Z'\n            closed_at: '2013-02-12T13:22:01Z'\n            due_on: '2012-10-09T23:39:01Z'\n          active_lock_reason: too heated\n          created_at: '2011-01-26T19:01:12Z'\n          updated_at: '2011-01-26T19:01:12Z'\n          closed_at: '2011-01-26T19:01:12Z'\n          merged_at: '2011-01-26T19:01:12Z'\n          merge_commit_sha: e5bd3914e2e596debea16f433f57875b5b90bcd6\n          assignee:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          assignees:\n            - login: octocat\n              id: 1\n              node_id: MDQ6VXNlcjE=\n              avatar_url: https://github.com/images/error/octocat_happy.gif\n              gravatar_id: ''\n              url: https://api.github.com/users/octocat\n              html_url: https://github.com/octocat\n              followers_url: https://api.github.com/users/octocat/followers\n              following_url: https://api.github.com/users/octocat/following{/other_user}\n              gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/octocat/subscriptions\n              organizations_url: https://api.github.com/users/octocat/orgs\n              repos_url: https://api.github.com/users/octocat/repos\n              events_url: https://api.github.com/users/octocat/events{/privacy}\n              received_events_url: https://api.github.com/users/octocat/received_events\n              type: User\n              site_admin: false\n            - login: hubot\n              id: 1\n              node_id: MDQ6VXNlcjE=\n              avatar_url: https://github.com/images/error/hubot_happy.gif\n              gravatar_id: ''\n              url: https://api.github.com/users/hubot\n              html_url: https://github.com/hubot\n              followers_url: https://api.github.com/users/hubot/followers\n              following_url: https://api.github.com/users/hubot/following{/other_user}\n              gists_url: https://api.github.com/users/hubot/gists{/gist_id}\n              starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/hubot/subscriptions\n              organizations_url: https://api.github.com/users/hubot/orgs\n              repos_url: https://api.github.com/users/hubot/repos\n              events_url: https://api.github.com/users/hubot/events{/privacy}\n              received_events_url: https://api.github.com/users/hubot/received_events\n              type: User\n              site_admin: true\n          requested_reviewers:\n            - login: other_user\n              id: 1\n              node_id: MDQ6VXNlcjE=\n              avatar_url: https://github.com/images/error/other_user_happy.gif\n              gravatar_id: ''\n              url: https://api.github.com/users/other_user\n              html_url: https://github.com/other_user\n              followers_url: https://api.github.com/users/other_user/followers\n              following_url: https://api.github.com/users/other_user/following{/other_user}\n              gists_url: https://api.github.com/users/other_user/gists{/gist_id}\n              starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/other_user/subscriptions\n              organizations_url: https://api.github.com/users/other_user/orgs\n              repos_url: https://api.github.com/users/other_user/repos\n              events_url: https://api.github.com/users/other_user/events{/privacy}\n              received_events_url: https://api.github.com/users/other_user/received_events\n              type: User\n              site_admin: false\n          requested_teams:\n            - id: 1\n              node_id: MDQ6VGVhbTE=\n              url: https://api.github.com/teams/1\n              html_url: https://github.com/orgs/github/teams/justice-league\n              name: Justice League\n              slug: justice-league\n              description: A great team.\n              privacy: closed\n              permission: admin\n              members_url: https://api.github.com/teams/1/members{/member}\n              repositories_url: https://api.github.com/teams/1/repos\n              parent: null\n          head:\n            label: octocat:new-topic\n            ref: new-topic\n            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n            user:\n              login: octocat\n              id: 1\n              node_id: MDQ6VXNlcjE=\n              avatar_url: https://github.com/images/error/octocat_happy.gif\n              gravatar_id: ''\n              url: https://api.github.com/users/octocat\n              html_url: https://github.com/octocat\n              followers_url: https://api.github.com/users/octocat/followers\n              following_url: https://api.github.com/users/octocat/following{/other_user}\n              gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/octocat/subscriptions\n              organizations_url: https://api.github.com/users/octocat/orgs\n              repos_url: https://api.github.com/users/octocat/repos\n              events_url: https://api.github.com/users/octocat/events{/privacy}\n              received_events_url: https://api.github.com/users/octocat/received_events\n              type: User\n              site_admin: false\n            repo:\n              id: 1296269\n              node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n              name: Hello-World\n              full_name: octocat/Hello-World\n              owner:\n                login: octocat\n                id: 1\n                node_id: MDQ6VXNlcjE=\n                avatar_url: https://github.com/images/error/octocat_happy.gif\n                gravatar_id: ''\n                url: https://api.github.com/users/octocat\n                html_url: https://github.com/octocat\n                followers_url: https://api.github.com/users/octocat/followers\n                following_url: https://api.github.com/users/octocat/following{/other_user}\n                gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n                subscriptions_url: https://api.github.com/users/octocat/subscriptions\n                organizations_url: https://api.github.com/users/octocat/orgs\n                repos_url: https://api.github.com/users/octocat/repos\n                events_url: https://api.github.com/users/octocat/events{/privacy}\n                received_events_url: https://api.github.com/users/octocat/received_events\n                type: User\n                site_admin: false\n              private: false\n              html_url: https://github.com/octocat/Hello-World\n              description: This your first repo!\n              fork: false\n              url: https://api.github.com/repos/octocat/Hello-World\n              archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n              assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n              blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n              branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n              collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n              comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n              commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n              compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n              contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n              contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n              deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n              downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n              events_url: https://api.github.com/repos/octocat/Hello-World/events\n              forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n              git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n              git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n              git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n              git_url: git:github.com/octocat/Hello-World.git\n              issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n              issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n              issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n              keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n              labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n              languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n              merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n              milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n              notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n              pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n              releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n              ssh_url: git@github.com:octocat/Hello-World.git\n              stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n              statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n              subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n              subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n              tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n              teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n              trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n              clone_url: https://github.com/octocat/Hello-World.git\n              mirror_url: git:git.example.com/octocat/Hello-World\n              hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks\n              svn_url: https://svn.github.com/octocat/Hello-World\n              homepage: https://github.com\n              language: null\n              forks_count: 9\n              stargazers_count: 80\n              watchers_count: 80\n              size: 108\n              default_branch: master\n              open_issues_count: 0\n              is_template: true\n              topics:\n                - octocat\n                - atom\n                - electron\n                - api\n              has_issues: true\n              has_projects: true\n              has_wiki: true\n              has_pages: false\n              has_downloads: true\n              archived: false\n              disabled: false\n              visibility: public\n              pushed_at: '2011-01-26T19:06:43Z'\n              created_at: '2011-01-26T19:01:12Z'\n              updated_at: '2011-01-26T19:14:43Z'\n              permissions:\n                admin: false\n                push: false\n                pull: true\n              allow_rebase_merge: true\n              template_repository: null\n              temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O\n              allow_squash_merge: true\n              allow_auto_merge: false\n              delete_branch_on_merge: true\n              allow_merge_commit: true\n              subscribers_count: 42\n              network_count: 0\n              license:\n                key: mit\n                name: MIT License\n                url: https://api.github.com/licenses/mit\n                spdx_id: MIT\n                node_id: MDc6TGljZW5zZW1pdA==\n                html_url: https://github.com/licenses/mit\n              forks: 1\n              open_issues: 1\n              watchers: 1\n          base:\n            label: octocat:master\n            ref: master\n            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n            user:\n              login: octocat\n              id: 1\n              node_id: MDQ6VXNlcjE=\n              avatar_url: https://github.com/images/error/octocat_happy.gif\n              gravatar_id: ''\n              url: https://api.github.com/users/octocat\n              html_url: https://github.com/octocat\n              followers_url: https://api.github.com/users/octocat/followers\n              following_url: https://api.github.com/users/octocat/following{/other_user}\n              gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/octocat/subscriptions\n              organizations_url: https://api.github.com/users/octocat/orgs\n              repos_url: https://api.github.com/users/octocat/repos\n              events_url: https://api.github.com/users/octocat/events{/privacy}\n              received_events_url: https://api.github.com/users/octocat/received_events\n              type: User\n              site_admin: false\n            repo:\n              id: 1296269\n              node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n              name: Hello-World\n              full_name: octocat/Hello-World\n              owner:\n                login: octocat\n                id: 1\n                node_id: MDQ6VXNlcjE=\n                avatar_url: https://github.com/images/error/octocat_happy.gif\n                gravatar_id: ''\n                url: https://api.github.com/users/octocat\n                html_url: https://github.com/octocat\n                followers_url: https://api.github.com/users/octocat/followers\n                following_url: https://api.github.com/users/octocat/following{/other_user}\n                gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n                subscriptions_url: https://api.github.com/users/octocat/subscriptions\n                organizations_url: https://api.github.com/users/octocat/orgs\n                repos_url: https://api.github.com/users/octocat/repos\n                events_url: https://api.github.com/users/octocat/events{/privacy}\n                received_events_url: https://api.github.com/users/octocat/received_events\n                type: User\n                site_admin: false\n              private: false\n              html_url: https://github.com/octocat/Hello-World\n              description: This your first repo!\n              fork: false\n              url: https://api.github.com/repos/octocat/Hello-World\n              archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n              assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n              blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n              branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n              collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n              comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n              commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n              compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n              contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n              contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n              deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n              downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n              events_url: https://api.github.com/repos/octocat/Hello-World/events\n              forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n              git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n              git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n              git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n              git_url: git:github.com/octocat/Hello-World.git\n              issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n              issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n              issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n              keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n              labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n              languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n              merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n              milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n              notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n              pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n              releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n              ssh_url: git@github.com:octocat/Hello-World.git\n              stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n              statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n              subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n              subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n              tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n              teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n              trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n              clone_url: https://github.com/octocat/Hello-World.git\n              mirror_url: git:git.example.com/octocat/Hello-World\n              hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks\n              svn_url: https://svn.github.com/octocat/Hello-World\n              homepage: https://github.com\n              language: null\n              forks_count: 9\n              stargazers_count: 80\n              watchers_count: 80\n              size: 108\n              default_branch: master\n              open_issues_count: 0\n              is_template: true\n              topics:\n                - octocat\n                - atom\n                - electron\n                - api\n              has_issues: true\n              has_projects: true\n              has_wiki: true\n              has_pages: false\n              has_downloads: true\n              archived: false\n              disabled: false\n              visibility: public\n              pushed_at: '2011-01-26T19:06:43Z'\n              created_at: '2011-01-26T19:01:12Z'\n              updated_at: '2011-01-26T19:14:43Z'\n              permissions:\n                admin: false\n                push: false\n                pull: true\n              allow_rebase_merge: true\n              template_repository: null\n              temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O\n              allow_squash_merge: true\n              allow_auto_merge: false\n              delete_branch_on_merge: true\n              allow_merge_commit: true\n              subscribers_count: 42\n              network_count: 0\n              license:\n                key: mit\n                name: MIT License\n                url: https://api.github.com/licenses/mit\n                spdx_id: MIT\n                node_id: MDc6TGljZW5zZW1pdA==\n                html_url: https://github.com/licenses/mit\n              forks: 1\n              open_issues: 1\n              watchers: 1\n          _links:\n            self:\n              href: https://api.github.com/repos/octocat/Hello-World/pulls/1347\n            html:\n              href: https://github.com/octocat/Hello-World/pull/1347\n            issue:\n              href: https://api.github.com/repos/octocat/Hello-World/issues/1347\n            comments:\n              href: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\n            review_comments:\n              href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\n            review_comment:\n              href: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\n            commits:\n              href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\n            statuses:\n              href: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\n          author_association: OWNER\n          auto_merge: null\n          draft: false\n    commit:\n      value:\n        url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\n        sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n        node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\n        html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\n        comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\n        commit:\n          url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\n          author:\n            name: Monalisa Octocat\n            email: mona@github.com\n            date: '2011-04-14T16:00:49Z'\n          committer:\n            name: Monalisa Octocat\n            email: mona@github.com\n            date: '2011-04-14T16:00:49Z'\n          message: Fix all the bugs\n          tree:\n            url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e\n            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n          comment_count: 0\n          verification:\n            verified: false\n            reason: unsigned\n            signature: null\n            payload: null\n        author:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        committer:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        parents:\n          - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\n            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n        stats:\n          additions: 104\n          deletions: 4\n          total: 108\n        files:\n          - filename: file1.txt\n            additions: 10\n            deletions: 2\n            changes: 12\n            status: modified\n            raw_url: https://github.com/octocat/Hello-World/raw/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt\n            blob_url: https://github.com/octocat/Hello-World/blob/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt\n            patch: |-\n              @@ -29,7 +29,7 @@\n              .....\n    combined-commit-status:\n      value:\n        state: success\n        statuses:\n          - url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\n            avatar_url: https://github.com/images/error/hubot_happy.gif\n            id: 1\n            node_id: MDY6U3RhdHVzMQ==\n            state: success\n            description: Build has completed successfully\n            target_url: https://ci.example.com/1000/output\n            context: continuous-integration/jenkins\n            created_at: '2012-07-20T01:19:13Z'\n            updated_at: '2012-07-20T01:19:13Z'\n          - url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\n            avatar_url: https://github.com/images/error/other_user_happy.gif\n            id: 2\n            node_id: MDY6U3RhdHVzMg==\n            state: success\n            description: Testing has completed successfully\n            target_url: https://ci.example.com/2000/output\n            context: security/brakeman\n            created_at: '2012-08-20T01:19:13Z'\n            updated_at: '2012-08-20T01:19:13Z'\n        sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n        total_count: 2\n        repository:\n          id: 1296269\n          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n          name: Hello-World\n          full_name: octocat/Hello-World\n          owner:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          private: false\n          html_url: https://github.com/octocat/Hello-World\n          description: This your first repo!\n          fork: false\n          url: https://api.github.com/repos/octocat/Hello-World\n          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n          events_url: https://api.github.com/repos/octocat/Hello-World/events\n          forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n          git_url: git:github.com/octocat/Hello-World.git\n          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n          languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n          merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n          ssh_url: git@github.com:octocat/Hello-World.git\n          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n          tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n          teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks\n        commit_url: https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e\n        url: https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e/status\n    status-items:\n      value:\n        - url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\n          avatar_url: https://github.com/images/error/hubot_happy.gif\n          id: 1\n          node_id: MDY6U3RhdHVzMQ==\n          state: success\n          description: Build has completed successfully\n          target_url: https://ci.example.com/1000/output\n          context: continuous-integration/jenkins\n          created_at: '2012-07-20T01:19:13Z'\n          updated_at: '2012-07-20T01:19:13Z'\n          creator:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n    community-profile:\n      value:\n        health_percentage: 100\n        description: My first repository on GitHub!\n        documentation: null\n        files:\n          code_of_conduct:\n            name: Contributor Covenant\n            key: contributor_covenant\n            url: https://api.github.com/codes_of_conduct/contributor_covenant\n            html_url: https://github.com/octocat/Hello-World/blob/master/CODE_OF_CONDUCT.md\n          code_of_conduct_file:\n            url: https://api.github.com/repos/octocat/Hello-World/contents/CODE_OF_CONDUCT.md\n            html_url: https://github.com/octocat/Hello-World/blob/master/CODE_OF_CONDUCT.md\n          contributing:\n            url: https://api.github.com/repos/octocat/Hello-World/contents/CONTRIBUTING\n            html_url: https://github.com/octocat/Hello-World/blob/master/CONTRIBUTING\n          issue_template:\n            url: https://api.github.com/repos/octocat/Hello-World/contents/ISSUE_TEMPLATE\n            html_url: https://github.com/octocat/Hello-World/blob/master/ISSUE_TEMPLATE\n          pull_request_template:\n            url: https://api.github.com/repos/octocat/Hello-World/contents/PULL_REQUEST_TEMPLATE\n            html_url: https://github.com/octocat/Hello-World/blob/master/PULL_REQUEST_TEMPLATE\n          license:\n            name: MIT License\n            key: mit\n            spdx_id: MIT\n            url: https://api.github.com/licenses/mit\n            html_url: https://github.com/octocat/Hello-World/blob/master/LICENSE\n            node_id: MDc6TGljZW5zZW1pdA==\n          readme:\n            url: https://api.github.com/repos/octocat/Hello-World/contents/README.md\n            html_url: https://github.com/octocat/Hello-World/blob/master/README.md\n        updated_at: '2017-02-28T19:09:29Z'\n        content_reports_enabled: true\n    commit-comparison:\n      value:\n        url: https://api.github.com/repos/octocat/Hello-World/compare/master...topic\n        html_url: https://github.com/octocat/Hello-World/compare/master...topic\n        permalink_url: https://github.com/octocat/Hello-World/compare/octocat:bbcd538c8e72b8c175046e27cc8f907076331401...octocat:0328041d1152db8ae77652d1618a02e57f745f17\n        diff_url: https://github.com/octocat/Hello-World/compare/master...topic.diff\n        patch_url: https://github.com/octocat/Hello-World/compare/master...topic.patch\n        base_commit:\n          url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\n          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n          node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\n          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\n          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\n          commit:\n            url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\n            author:\n              name: Monalisa Octocat\n              email: mona@github.com\n              date: '2011-04-14T16:00:49Z'\n            committer:\n              name: Monalisa Octocat\n              email: mona@github.com\n              date: '2011-04-14T16:00:49Z'\n            message: Fix all the bugs\n            tree:\n              url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e\n              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n            comment_count: 0\n            verification:\n              verified: false\n              reason: unsigned\n              signature: null\n              payload: null\n          author:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          committer:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          parents:\n            - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\n              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n        merge_base_commit:\n          url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\n          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n          node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\n          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\n          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\n          commit:\n            url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\n            author:\n              name: Monalisa Octocat\n              email: mona@github.com\n              date: '2011-04-14T16:00:49Z'\n            committer:\n              name: Monalisa Octocat\n              email: mona@github.com\n              date: '2011-04-14T16:00:49Z'\n            message: Fix all the bugs\n            tree:\n              url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e\n              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n            comment_count: 0\n            verification:\n              verified: false\n              reason: unsigned\n              signature: null\n              payload: null\n          author:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          committer:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          parents:\n            - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\n              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n        status: behind\n        ahead_by: 1\n        behind_by: 2\n        total_commits: 1\n        commits:\n          - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\n            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n            node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\n            html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\n            comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\n            commit:\n              url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\n              author:\n                name: Monalisa Octocat\n                email: mona@github.com\n                date: '2011-04-14T16:00:49Z'\n              committer:\n                name: Monalisa Octocat\n                email: mona@github.com\n                date: '2011-04-14T16:00:49Z'\n              message: Fix all the bugs\n              tree:\n                url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e\n                sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n              comment_count: 0\n              verification:\n                verified: false\n                reason: unsigned\n                signature: null\n                payload: null\n            author:\n              login: octocat\n              id: 1\n              node_id: MDQ6VXNlcjE=\n              avatar_url: https://github.com/images/error/octocat_happy.gif\n              gravatar_id: ''\n              url: https://api.github.com/users/octocat\n              html_url: https://github.com/octocat\n              followers_url: https://api.github.com/users/octocat/followers\n              following_url: https://api.github.com/users/octocat/following{/other_user}\n              gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/octocat/subscriptions\n              organizations_url: https://api.github.com/users/octocat/orgs\n              repos_url: https://api.github.com/users/octocat/repos\n              events_url: https://api.github.com/users/octocat/events{/privacy}\n              received_events_url: https://api.github.com/users/octocat/received_events\n              type: User\n              site_admin: false\n            committer:\n              login: octocat\n              id: 1\n              node_id: MDQ6VXNlcjE=\n              avatar_url: https://github.com/images/error/octocat_happy.gif\n              gravatar_id: ''\n              url: https://api.github.com/users/octocat\n              html_url: https://github.com/octocat\n              followers_url: https://api.github.com/users/octocat/followers\n              following_url: https://api.github.com/users/octocat/following{/other_user}\n              gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/octocat/subscriptions\n              organizations_url: https://api.github.com/users/octocat/orgs\n              repos_url: https://api.github.com/users/octocat/repos\n              events_url: https://api.github.com/users/octocat/events{/privacy}\n              received_events_url: https://api.github.com/users/octocat/received_events\n              type: User\n              site_admin: false\n            parents:\n              - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\n                sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e\n        files:\n          - sha: bbcd538c8e72b8c175046e27cc8f907076331401\n            filename: file1.txt\n            status: added\n            additions: 103\n            deletions: 21\n            changes: 124\n            blob_url: https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt\n            raw_url: https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt\n            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e\n            patch: '@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test'\n    content-file-response-if-content-is-a-file:\n      summary: Response if content is a file\n      value:\n        type: file\n        encoding: base64\n        size: 5362\n        name: README.md\n        path: README.md\n        content: encoded content ...\n        sha: 3d21ec53a331a6f037a91c368710b99387d012c1\n        url: https://api.github.com/repos/octokit/octokit.rb/contents/README.md\n        git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1\n        html_url: https://github.com/octokit/octokit.rb/blob/master/README.md\n        download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/README.md\n        _links:\n          git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1\n          self: https://api.github.com/repos/octokit/octokit.rb/contents/README.md\n          html: https://github.com/octokit/octokit.rb/blob/master/README.md\n    content-file-response-if-content-is-a-directory:\n      summary: Response if content is a directory\n      value:\n        - type: file\n          size: 625\n          name: octokit.rb\n          path: lib/octokit.rb\n          sha: fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b\n          url: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit.rb\n          git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b\n          html_url: https://github.com/octokit/octokit.rb/blob/master/lib/octokit.rb\n          download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/lib/octokit.rb\n          _links:\n            self: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit.rb\n            git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b\n            html: https://github.com/octokit/octokit.rb/blob/master/lib/octokit.rb\n        - type: dir\n          size: 0\n          name: octokit\n          path: lib/octokit\n          sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\n          url: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit\n          git_url: https://api.github.com/repos/octokit/octokit.rb/git/trees/a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\n          html_url: https://github.com/octokit/octokit.rb/tree/master/lib/octokit\n          download_url: null\n          _links:\n            self: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit\n            git: https://api.github.com/repos/octokit/octokit.rb/git/trees/a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\n            html: https://github.com/octokit/octokit.rb/tree/master/lib/octokit\n    content-file-response-if-content-is-a-symlink:\n      summary: Response if content is a symlink\n      value:\n        type: symlink\n        target: /path/to/symlink/target\n        size: 23\n        name: some-symlink\n        path: bin/some-symlink\n        sha: 452a98979c88e093d682cab404a3ec82babebb48\n        url: https://api.github.com/repos/octokit/octokit.rb/contents/bin/some-symlink\n        git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/452a98979c88e093d682cab404a3ec82babebb48\n        html_url: https://github.com/octokit/octokit.rb/blob/master/bin/some-symlink\n        download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/bin/some-symlink\n        _links:\n          git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/452a98979c88e093d682cab404a3ec82babebb48\n          self: https://api.github.com/repos/octokit/octokit.rb/contents/bin/some-symlink\n          html: https://github.com/octokit/octokit.rb/blob/master/bin/some-symlink\n    content-file-response-if-content-is-a-submodule:\n      summary: Response if content is a submodule\n      value:\n        type: submodule\n        submodule_git_url: git://github.com/jquery/qunit.git\n        size: 0\n        name: qunit\n        path: test/qunit\n        sha: 6ca3721222109997540bd6d9ccd396902e0ad2f9\n        url: https://api.github.com/repos/jquery/jquery/contents/test/qunit?ref=master\n        git_url: https://api.github.com/repos/jquery/qunit/git/trees/6ca3721222109997540bd6d9ccd396902e0ad2f9\n        html_url: https://github.com/jquery/qunit/tree/6ca3721222109997540bd6d9ccd396902e0ad2f9\n        download_url: null\n        _links:\n          git: https://api.github.com/repos/jquery/qunit/git/trees/6ca3721222109997540bd6d9ccd396902e0ad2f9\n          self: https://api.github.com/repos/jquery/jquery/contents/test/qunit?ref=master\n          html: https://github.com/jquery/qunit/tree/6ca3721222109997540bd6d9ccd396902e0ad2f9\n    file-commit-example-for-updating-a-file:\n      value:\n        content:\n          name: hello.txt\n          path: notes/hello.txt\n          sha: a56507ed892d05a37c6d6128c260937ea4d287bd\n          size: 9\n          url: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\n          html_url: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\n          git_url: https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd\n          download_url: https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt\n          type: file\n          _links:\n            self: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\n            git: https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd\n            html: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\n        commit:\n          sha: 18a43cd8e1e3a79c786e3d808a73d23b6d212b16\n          node_id: MDY6Q29tbWl0MThhNDNjZDhlMWUzYTc5Yzc4NmUzZDgwOGE3M2QyM2I2ZDIxMmIxNg==\n          url: https://api.github.com/repos/octocat/Hello-World/git/commits/18a43cd8e1e3a79c786e3d808a73d23b6d212b16\n          html_url: https://github.com/octocat/Hello-World/git/commit/18a43cd8e1e3a79c786e3d808a73d23b6d212b16\n          author:\n            date: '2014-11-07T22:01:45Z'\n            name: Monalisa Octocat\n            email: octocat@github.com\n          committer:\n            date: '2014-11-07T22:01:45Z'\n            name: Monalisa Octocat\n            email: octocat@github.com\n          message: my commit message\n          tree:\n            url: https://api.github.com/repos/octocat/Hello-World/git/trees/9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f\n            sha: 9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f\n          parents:\n            - url: https://api.github.com/repos/octocat/Hello-World/git/commits/da5a433788da5c255edad7979b328b67d79f53f6\n              html_url: https://github.com/octocat/Hello-World/git/commit/da5a433788da5c255edad7979b328b67d79f53f6\n              sha: da5a433788da5c255edad7979b328b67d79f53f6\n          verification:\n            verified: false\n            reason: unsigned\n            signature: null\n            payload: null\n    file-commit-example-for-creating-a-file:\n      value:\n        content:\n          name: hello.txt\n          path: notes/hello.txt\n          sha: 95b966ae1c166bd92f8ae7d1c313e738c731dfc3\n          size: 9\n          url: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\n          html_url: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\n          git_url: https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3\n          download_url: https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt\n          type: file\n          _links:\n            self: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\n            git: https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3\n            html: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\n        commit:\n          sha: 7638417db6d59f3c431d3e1f261cc637155684cd\n          node_id: MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==\n          url: https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd\n          html_url: https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd\n          author:\n            date: '2014-11-07T22:01:45Z'\n            name: Monalisa Octocat\n            email: octocat@github.com\n          committer:\n            date: '2014-11-07T22:01:45Z'\n            name: Monalisa Octocat\n            email: octocat@github.com\n          message: my commit message\n          tree:\n            url: https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb\n            sha: 691272480426f78a0138979dd3ce63b77f706feb\n          parents:\n            - url: https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5\n              html_url: https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5\n              sha: 1acc419d4d6a9ce985db7be48c6349a0475975b5\n          verification:\n            verified: false\n            reason: unsigned\n            signature: null\n            payload: null\n    file-commit:\n      value:\n        content: null\n        commit:\n          sha: 7638417db6d59f3c431d3e1f261cc637155684cd\n          node_id: MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==\n          url: https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd\n          html_url: https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd\n          author:\n            date: '2014-11-07T22:01:45Z'\n            name: Monalisa Octocat\n            email: octocat@github.com\n          committer:\n            date: '2014-11-07T22:01:45Z'\n            name: Monalisa Octocat\n            email: octocat@github.com\n          message: my commit message\n          tree:\n            url: https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb\n            sha: 691272480426f78a0138979dd3ce63b77f706feb\n          parents:\n            - url: https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5\n              html_url: https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5\n              sha: 1acc419d4d6a9ce985db7be48c6349a0475975b5\n          verification:\n            verified: false\n            reason: unsigned\n            signature: null\n            payload: null\n    contributor-items-response-if-repository-contains-content:\n      value:\n        - login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n          contributions: 32\n    deployment-items:\n      value:\n        - url: https://api.github.com/repos/octocat/example/deployments/1\n          id: 1\n          node_id: MDEwOkRlcGxveW1lbnQx\n          sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\n          ref: topic-branch\n          task: deploy\n          payload: {}\n          original_environment: staging\n          environment: production\n          description: Deploy request from hubot\n          creator:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          created_at: '2012-07-20T01:19:13Z'\n          updated_at: '2012-07-20T01:19:13Z'\n          statuses_url: https://api.github.com/repos/octocat/example/deployments/1/statuses\n          repository_url: https://api.github.com/repos/octocat/example\n          transient_environment: false\n          production_environment: true\n    deployment-simple-example:\n      summary: Simple example\n      value:\n        url: https://api.github.com/repos/octocat/example/deployments/1\n        id: 1\n        node_id: MDEwOkRlcGxveW1lbnQx\n        sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\n        ref: topic-branch\n        task: deploy\n        payload: {}\n        original_environment: staging\n        environment: production\n        description: Deploy request from hubot\n        creator:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        created_at: '2012-07-20T01:19:13Z'\n        updated_at: '2012-07-20T01:19:13Z'\n        statuses_url: https://api.github.com/repos/octocat/example/deployments/1/statuses\n        repository_url: https://api.github.com/repos/octocat/example\n        transient_environment: false\n        production_environment: true\n    deployment:\n      value:\n        url: https://api.github.com/repos/octocat/example/deployments/1\n        id: 1\n        node_id: MDEwOkRlcGxveW1lbnQx\n        sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\n        ref: topic-branch\n        task: deploy\n        payload: {}\n        original_environment: staging\n        environment: production\n        description: Deploy request from hubot\n        creator:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        created_at: '2012-07-20T01:19:13Z'\n        updated_at: '2012-07-20T01:19:13Z'\n        statuses_url: https://api.github.com/repos/octocat/example/deployments/1/statuses\n        repository_url: https://api.github.com/repos/octocat/example\n        transient_environment: false\n        production_environment: true\n    deployment-status-items:\n      value:\n        - url: https://api.github.com/repos/octocat/example/deployments/42/statuses/1\n          id: 1\n          node_id: MDE2OkRlcGxveW1lbnRTdGF0dXMx\n          state: success\n          creator:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          description: Deployment finished successfully.\n          environment: production\n          target_url: https://example.com/deployment/42/output\n          created_at: '2012-07-20T01:19:13Z'\n          updated_at: '2012-07-20T01:19:13Z'\n          deployment_url: https://api.github.com/repos/octocat/example/deployments/42\n          repository_url: https://api.github.com/repos/octocat/example\n          environment_url: https://test-branch.lab.acme.com\n          log_url: https://example.com/deployment/42/output\n    deployment-status:\n      value:\n        url: https://api.github.com/repos/octocat/example/deployments/42/statuses/1\n        id: 1\n        node_id: MDE2OkRlcGxveW1lbnRTdGF0dXMx\n        state: success\n        creator:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        description: Deployment finished successfully.\n        environment: production\n        target_url: https://example.com/deployment/42/output\n        created_at: '2012-07-20T01:19:13Z'\n        updated_at: '2012-07-20T01:19:13Z'\n        deployment_url: https://api.github.com/repos/octocat/example/deployments/42\n        repository_url: https://api.github.com/repos/octocat/example\n        environment_url: https://test-branch.lab.acme.com\n        log_url: https://example.com/deployment/42/output\n    environments:\n      value:\n        total_count: 1\n        environments:\n          - id: 161088068\n            node_id: MDExOkVudmlyb25tZW50MTYxMDg4MDY4\n            name: staging\n            url: https://api.github.com/repos/github/hello-world/environments/staging\n            html_url: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging\n            created_at: '2020-11-23T22:00:40Z'\n            updated_at: '2020-11-23T22:00:40Z'\n            protection_rules:\n              - id: 3736\n                node_id: MDQ6R2F0ZTM3MzY=\n                type: wait_timer\n                wait_timer: 30\n              - id: 3755\n                node_id: MDQ6R2F0ZTM3NTU=\n                type: required_reviewers\n                reviewers:\n                  - type: User\n                    reviewer:\n                      login: octocat\n                      id: 1\n                      node_id: MDQ6VXNlcjE=\n                      avatar_url: https://github.com/images/error/octocat_happy.gif\n                      gravatar_id: ''\n                      url: https://api.github.com/users/octocat\n                      html_url: https://github.com/octocat\n                      followers_url: https://api.github.com/users/octocat/followers\n                      following_url: https://api.github.com/users/octocat/following{/other_user}\n                      gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n                      starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n                      subscriptions_url: https://api.github.com/users/octocat/subscriptions\n                      organizations_url: https://api.github.com/users/octocat/orgs\n                      repos_url: https://api.github.com/users/octocat/repos\n                      events_url: https://api.github.com/users/octocat/events{/privacy}\n                      received_events_url: https://api.github.com/users/octocat/received_events\n                      type: User\n                      site_admin: false\n                  - type: Team\n                    reviewer:\n                      id: 1\n                      node_id: MDQ6VGVhbTE=\n                      url: https://api.github.com/teams/1\n                      html_url: https://github.com/orgs/github/teams/justice-league\n                      name: Justice League\n                      slug: justice-league\n                      description: A great team.\n                      privacy: closed\n                      permission: admin\n                      members_url: https://api.github.com/teams/1/members{/member}\n                      repositories_url: https://api.github.com/teams/1/repos\n                      parent: null\n              - id: 3756\n                node_id: MDQ6R2F0ZTM3NTY=\n                type: branch_policy\n            deployment_branch_policy:\n              protected_branches: false\n              custom_branch_policies: true\n    environment:\n      value:\n        id: 161088068\n        node_id: MDExOkVudmlyb25tZW50MTYxMDg4MDY4\n        name: staging\n        url: https://api.github.com/repos/github/hello-world/environments/staging\n        html_url: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging\n        created_at: '2020-11-23T22:00:40Z'\n        updated_at: '2020-11-23T22:00:40Z'\n        protection_rules:\n          - id: 3736\n            node_id: MDQ6R2F0ZTM3MzY=\n            type: wait_timer\n            wait_timer: 30\n          - id: 3755\n            node_id: MDQ6R2F0ZTM3NTU=\n            type: required_reviewers\n            reviewers:\n              - type: User\n                reviewer:\n                  login: octocat\n                  id: 1\n                  node_id: MDQ6VXNlcjE=\n                  avatar_url: https://github.com/images/error/octocat_happy.gif\n                  gravatar_id: ''\n                  url: https://api.github.com/users/octocat\n                  html_url: https://github.com/octocat\n                  followers_url: https://api.github.com/users/octocat/followers\n                  following_url: https://api.github.com/users/octocat/following{/other_user}\n                  gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n                  starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n                  subscriptions_url: https://api.github.com/users/octocat/subscriptions\n                  organizations_url: https://api.github.com/users/octocat/orgs\n                  repos_url: https://api.github.com/users/octocat/repos\n                  events_url: https://api.github.com/users/octocat/events{/privacy}\n                  received_events_url: https://api.github.com/users/octocat/received_events\n                  type: User\n                  site_admin: false\n              - type: Team\n                reviewer:\n                  id: 1\n                  node_id: MDQ6VGVhbTE=\n                  url: https://api.github.com/teams/1\n                  html_url: https://github.com/orgs/github/teams/justice-league\n                  name: Justice League\n                  slug: justice-league\n                  description: A great team.\n                  privacy: closed\n                  permission: admin\n                  members_url: https://api.github.com/teams/1/members{/member}\n                  repositories_url: https://api.github.com/teams/1/repos\n                  parent: null\n          - id: 3756\n            node_id: MDQ6R2F0ZTM3NTY=\n            type: branch_policy\n        deployment_branch_policy:\n          protected_branches: false\n          custom_branch_policies: true\n    minimal-repository-items-2:\n      value:\n        - id: 1296269\n          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n          name: Hello-World\n          full_name: octocat/Hello-World\n          owner:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          private: false\n          html_url: https://github.com/octocat/Hello-World\n          description: This your first repo!\n          fork: true\n          url: https://api.github.com/repos/octocat/Hello-World\n          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n          events_url: https://api.github.com/repos/octocat/Hello-World/events\n          forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n          git_url: git:github.com/octocat/Hello-World.git\n          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n          languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n          merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n          ssh_url: git@github.com:octocat/Hello-World.git\n          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n          tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n          teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n          clone_url: https://github.com/octocat/Hello-World.git\n          mirror_url: git:git.example.com/octocat/Hello-World\n          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks\n          svn_url: https://svn.github.com/octocat/Hello-World\n          homepage: https://github.com\n          language: null\n          forks_count: 9\n          stargazers_count: 80\n          watchers_count: 80\n          size: 108\n          default_branch: master\n          open_issues_count: 0\n          is_template: true\n          topics:\n            - octocat\n            - atom\n            - electron\n            - api\n          has_issues: true\n          has_projects: true\n          has_wiki: true\n          has_pages: false\n          has_downloads: true\n          archived: false\n          disabled: false\n          visibility: public\n          pushed_at: '2011-01-26T19:06:43Z'\n          created_at: '2011-01-26T19:01:12Z'\n          updated_at: '2011-01-26T19:14:43Z'\n          permissions:\n            admin: false\n            push: false\n            pull: true\n          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O\n          delete_branch_on_merge: true\n          subscribers_count: 42\n          network_count: 0\n          license:\n            key: mit\n            name: MIT License\n            spdx_id: MIT\n            url: https://api.github.com/licenses/mit\n            node_id: MDc6TGljZW5zZW1pdA==\n    hook-items:\n      value:\n        - type: Repository\n          id: 12345678\n          name: web\n          active: true\n          events:\n            - push\n            - pull_request\n          config:\n            content_type: json\n            insecure_ssl: '0'\n            url: https://example.com/webhook\n          updated_at: '2019-06-03T00:57:16Z'\n          created_at: '2019-06-03T00:57:16Z'\n          url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678\n          test_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test\n          ping_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings\n          deliveries_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/deliveries\n          last_response:\n            code: null\n            status: unused\n            message: null\n    hook:\n      value:\n        type: Repository\n        id: 12345678\n        name: web\n        active: true\n        events:\n          - push\n          - pull_request\n        config:\n          content_type: json\n          insecure_ssl: '0'\n          url: https://example.com/webhook\n        updated_at: '2019-06-03T00:57:16Z'\n        created_at: '2019-06-03T00:57:16Z'\n        url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678\n        test_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test\n        ping_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings\n        deliveries_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/deliveries\n        last_response:\n          code: null\n          status: unused\n          message: null\n    webhook-config:\n      value:\n        content_type: json\n        insecure_ssl: '0'\n        secret: '********'\n        url: https://example.com/webhook\n    hook-delivery-items:\n      value:\n        - id: 12345678\n          guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516\n          delivered_at: '2019-06-03T00:57:16Z'\n          redelivery: false\n          duration: 0.27\n          status: OK\n          status_code: 200\n          event: issues\n          action: opened\n          installation_id: 123\n          repository_id: 456\n        - id: 123456789\n          guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516\n          delivered_at: '2019-06-04T00:57:16Z'\n          redelivery: true\n          duration: 0.28\n          status: OK\n          status_code: 200\n          event: issues\n          action: opened\n          installation_id: 123\n          repository_id: 456\n    hook-delivery:\n      value:\n        id: 12345678\n        guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516\n        delivered_at: '2019-06-03T00:57:16Z'\n        redelivery: false\n        duration: 0.27\n        status: OK\n        status_code: 200\n        event: issues\n        action: opened\n        installation_id: 123\n        repository_id: 456\n        url: https://www.example.com\n        request:\n          headers:\n            X-GitHub-Delivery: 0b989ba4-242f-11e5-81e1-c7b6966d2516\n            X-Hub-Signature-256: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e\n            Accept: '*/*'\n            X-GitHub-Hook-ID: '42'\n            User-Agent: GitHub-Hookshot/b8c71d8\n            X-GitHub-Event: issues\n            X-GitHub-Hook-Installation-Target-ID: '123'\n            X-GitHub-Hook-Installation-Target-Type: repository\n            content-type: application/json\n            X-Hub-Signature: sha1=a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\n          payload:\n            action: opened\n            issue:\n              body: foo\n            repository:\n              id: 123\n        response:\n          headers:\n            Content-Type: text/html;charset=utf-8\n          payload: ok\n    repository-invitation-items:\n      value:\n        - id: 1\n          repository:\n            id: 1296269\n            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n            name: Hello-World\n            full_name: octocat/Hello-World\n            owner:\n              login: octocat\n              id: 1\n              node_id: MDQ6VXNlcjE=\n              avatar_url: https://github.com/images/error/octocat_happy.gif\n              gravatar_id: ''\n              url: https://api.github.com/users/octocat\n              html_url: https://github.com/octocat\n              followers_url: https://api.github.com/users/octocat/followers\n              following_url: https://api.github.com/users/octocat/following{/other_user}\n              gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/octocat/subscriptions\n              organizations_url: https://api.github.com/users/octocat/orgs\n              repos_url: https://api.github.com/users/octocat/repos\n              events_url: https://api.github.com/users/octocat/events{/privacy}\n              received_events_url: https://api.github.com/users/octocat/received_events\n              type: User\n              site_admin: false\n            private: false\n            html_url: https://github.com/octocat/Hello-World\n            description: This your first repo!\n            fork: false\n            url: https://api.github.com/repos/octocat/Hello-World\n            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n            events_url: https://api.github.com/repos/octocat/Hello-World/events\n            forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n            git_url: git:github.com/octocat/Hello-World.git\n            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n            languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n            merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n            ssh_url: git@github.com:octocat/Hello-World.git\n            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n            tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n            teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n            hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks\n          invitee:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          inviter:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          permissions: write\n          created_at: '2016-06-13T14:52:50-05:00'\n          url: https://api.github.com/user/repository_invitations/1296269\n          html_url: https://github.com/octocat/Hello-World/invitations\n          node_id: MDQ6VXNlcjE=\n    repository-invitation:\n      value:\n        id: 1\n        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n        repository:\n          id: 1296269\n          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n          name: Hello-World\n          full_name: octocat/Hello-World\n          owner:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          private: false\n          html_url: https://github.com/octocat/Hello-World\n          description: This your first repo!\n          fork: false\n          url: https://api.github.com/repos/octocat/Hello-World\n          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n          events_url: https://api.github.com/repos/octocat/Hello-World/events\n          forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n          git_url: git:github.com/octocat/Hello-World.git\n          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n          languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n          merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n          ssh_url: git@github.com:octocat/Hello-World.git\n          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n          tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n          teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks\n        invitee:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        inviter:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        permissions: write\n        created_at: '2016-06-13T14:52:50-05:00'\n        expired: false\n        url: https://api.github.com/user/repository_invitations/1296269\n        html_url: https://github.com/octocat/Hello-World/invitations\n    deploy-key-items:\n      value:\n        - id: 1\n          key: ssh-rsa AAA...\n          url: https://api.github.com/repos/octocat/Hello-World/keys/1\n          title: octocat@octomac\n          verified: true\n          created_at: '2014-12-10T15:53:42Z'\n          read_only: true\n    deploy-key:\n      value:\n        id: 1\n        key: ssh-rsa AAA...\n        url: https://api.github.com/repos/octocat/Hello-World/keys/1\n        title: octocat@octomac\n        verified: true\n        created_at: '2014-12-10T15:53:42Z'\n        read_only: true\n    language:\n      value:\n        C: 78769\n        Python: 7769\n    merged-upstream:\n      value:\n        message: Successfully fetched and fast-forwarded from upstream defunkt:main\n        merge_type: fast-forward\n        base_branch: defunkt:main\n    page:\n      value:\n        url: https://api.github.com/repos/github/developer.github.com/pages\n        status: built\n        cname: developer.github.com\n        custom_404: false\n        html_url: https://developer.github.com\n        source:\n          branch: master\n          path: /\n        public: true\n        https_certificate:\n          state: approved\n          description: Certificate is approved\n          domains:\n            - developer.github.com\n          expires_at: '2021-05-22'\n        https_enforced: true\n    page-build-items:\n      value:\n        - url: https://api.github.com/repos/github/developer.github.com/pages/builds/5472601\n          status: built\n          error:\n            message: null\n          pusher:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          commit: 351391cdcb88ffae71ec3028c91f375a8036a26b\n          duration: 2104\n          created_at: '2014-02-10T19:00:49Z'\n          updated_at: '2014-02-10T19:00:51Z'\n    page-build-status:\n      value:\n        url: https://api.github.com/repos/github/developer.github.com/pages/builds/latest\n        status: queued\n    page-build:\n      value:\n        url: https://api.github.com/repos/github/developer.github.com/pages/builds/5472601\n        status: built\n        error:\n          message: null\n        pusher:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        commit: 351391cdcb88ffae71ec3028c91f375a8036a26b\n        duration: 2104\n        created_at: '2014-02-10T19:00:49Z'\n        updated_at: '2014-02-10T19:00:51Z'\n    pages-health-check:\n      value:\n        domain:\n          host: example.com\n          uri: http://example.com/\n          nameservers: default\n          dns_resolves: true\n          is_proxied: false\n          is_cloudflare_ip: false\n          is_fastly_ip: false\n          is_old_ip_address: false\n          is_a_record: true\n          has_cname_record: false\n          has_mx_records_present: false\n          is_valid_domain: true\n          is_apex_domain: true\n          should_be_a_record: true\n          is_cname_to_github_user_domain: false\n          is_cname_to_pages_dot_github_dot_com: false\n          is_cname_to_fastly: false\n          is_pointed_to_github_pages_ip: true\n          is_non_github_pages_ip_present: false\n          is_pages_domain: false\n          is_served_by_pages: true\n          is_valid: true\n          reason: null\n          responds_to_https: true\n          enforces_https: true\n          https_error: null\n          is_https_eligible: true\n          caa_error: null\n        alt_domain:\n          host: www.example.com\n          uri: http://www.example.com/\n          nameservers: default\n          dns_resolves: true\n          is_proxied: false\n          is_cloudflare_ip: false\n          is_fastly_ip: false\n          is_old_ip_address: false\n          is_a_record: true\n          has_cname_record: false\n          has_mx_records_present: false\n          is_valid_domain: true\n          is_apex_domain: true\n          should_be_a_record: true\n          is_cname_to_github_user_domain: false\n          is_cname_to_pages_dot_github_dot_com: false\n          is_cname_to_fastly: false\n          is_pointed_to_github_pages_ip: true\n          is_non_github_pages_ip_present: false\n          is_pages_domain: false\n          is_served_by_pages: true\n          is_valid: true\n          reason: null\n          responds_to_https: true\n          enforces_https: true\n          https_error: null\n          is_https_eligible: true\n          caa_error: null\n    content-file:\n      value:\n        type: file\n        encoding: base64\n        size: 5362\n        name: README.md\n        path: README.md\n        content: encoded content ...\n        sha: 3d21ec53a331a6f037a91c368710b99387d012c1\n        url: https://api.github.com/repos/octokit/octokit.rb/contents/README.md\n        git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1\n        html_url: https://github.com/octokit/octokit.rb/blob/master/README.md\n        download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/README.md\n        _links:\n          git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1\n          self: https://api.github.com/repos/octokit/octokit.rb/contents/README.md\n          html: https://github.com/octokit/octokit.rb/blob/master/README.md\n    release-items:\n      value:\n        - url: https://api.github.com/repos/octocat/Hello-World/releases/1\n          html_url: https://github.com/octocat/Hello-World/releases/v1.0.0\n          assets_url: https://api.github.com/repos/octocat/Hello-World/releases/1/assets\n          upload_url: https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}\n          tarball_url: https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0\n          zipball_url: https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0\n          id: 1\n          node_id: MDc6UmVsZWFzZTE=\n          tag_name: v1.0.0\n          target_commitish: master\n          name: v1.0.0\n          body: Description of the release\n          draft: false\n          prerelease: false\n          created_at: '2013-02-27T19:35:32Z'\n          published_at: '2013-02-27T19:35:32Z'\n          author:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          assets:\n            - url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1\n              browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\n              id: 1\n              node_id: MDEyOlJlbGVhc2VBc3NldDE=\n              name: example.zip\n              label: short description\n              state: uploaded\n              content_type: application/zip\n              size: 1024\n              download_count: 42\n              created_at: '2013-02-27T19:35:32Z'\n              updated_at: '2013-02-27T19:35:32Z'\n              uploader:\n                login: octocat\n                id: 1\n                node_id: MDQ6VXNlcjE=\n                avatar_url: https://github.com/images/error/octocat_happy.gif\n                gravatar_id: ''\n                url: https://api.github.com/users/octocat\n                html_url: https://github.com/octocat\n                followers_url: https://api.github.com/users/octocat/followers\n                following_url: https://api.github.com/users/octocat/following{/other_user}\n                gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n                subscriptions_url: https://api.github.com/users/octocat/subscriptions\n                organizations_url: https://api.github.com/users/octocat/orgs\n                repos_url: https://api.github.com/users/octocat/repos\n                events_url: https://api.github.com/users/octocat/events{/privacy}\n                received_events_url: https://api.github.com/users/octocat/received_events\n                type: User\n                site_admin: false\n    release:\n      value:\n        url: https://api.github.com/repos/octocat/Hello-World/releases/1\n        html_url: https://github.com/octocat/Hello-World/releases/v1.0.0\n        assets_url: https://api.github.com/repos/octocat/Hello-World/releases/1/assets\n        upload_url: https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}\n        tarball_url: https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0\n        zipball_url: https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0\n        discussion_url: https://github.com/octocat/Hello-World/discussions/90\n        id: 1\n        node_id: MDc6UmVsZWFzZTE=\n        tag_name: v1.0.0\n        target_commitish: master\n        name: v1.0.0\n        body: Description of the release\n        draft: false\n        prerelease: false\n        created_at: '2013-02-27T19:35:32Z'\n        published_at: '2013-02-27T19:35:32Z'\n        author:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        assets:\n          - url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1\n            browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\n            id: 1\n            node_id: MDEyOlJlbGVhc2VBc3NldDE=\n            name: example.zip\n            label: short description\n            state: uploaded\n            content_type: application/zip\n            size: 1024\n            download_count: 42\n            created_at: '2013-02-27T19:35:32Z'\n            updated_at: '2013-02-27T19:35:32Z'\n            uploader:\n              login: octocat\n              id: 1\n              node_id: MDQ6VXNlcjE=\n              avatar_url: https://github.com/images/error/octocat_happy.gif\n              gravatar_id: ''\n              url: https://api.github.com/users/octocat\n              html_url: https://github.com/octocat\n              followers_url: https://api.github.com/users/octocat/followers\n              following_url: https://api.github.com/users/octocat/following{/other_user}\n              gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n              subscriptions_url: https://api.github.com/users/octocat/subscriptions\n              organizations_url: https://api.github.com/users/octocat/orgs\n              repos_url: https://api.github.com/users/octocat/repos\n              events_url: https://api.github.com/users/octocat/events{/privacy}\n              received_events_url: https://api.github.com/users/octocat/received_events\n              type: User\n              site_admin: false\n    release-asset:\n      value:\n        url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1\n        browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\n        id: 1\n        node_id: MDEyOlJlbGVhc2VBc3NldDE=\n        name: example.zip\n        label: short description\n        state: uploaded\n        content_type: application/zip\n        size: 1024\n        download_count: 42\n        created_at: '2013-02-27T19:35:32Z'\n        updated_at: '2013-02-27T19:35:32Z'\n        uploader:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n    release-notes-content:\n      value:\n        name: Release v1.0.0 is now available!\n        body: '##Changes in Release v1.0.0 ... ##Contributors @monalisa'\n    release-asset-items:\n      value:\n        - url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1\n          browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\n          id: 1\n          node_id: MDEyOlJlbGVhc2VBc3NldDE=\n          name: example.zip\n          label: short description\n          state: uploaded\n          content_type: application/zip\n          size: 1024\n          download_count: 42\n          created_at: '2013-02-27T19:35:32Z'\n          updated_at: '2013-02-27T19:35:32Z'\n          uploader:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n    release-asset-response-for-successful-upload:\n      value:\n        url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1\n        browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\n        id: 1\n        node_id: MDEyOlJlbGVhc2VBc3NldDE=\n        name: example.zip\n        label: short description\n        state: uploaded\n        content_type: application/zip\n        size: 1024\n        download_count: 42\n        created_at: '2013-02-27T19:35:32Z'\n        updated_at: '2013-02-27T19:35:32Z'\n        uploader:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n    code-frequency-stat-items:\n      value:\n        - - 1302998400\n          - 1124\n          - -435\n    commit-activity-items:\n      value:\n        - days:\n            - 0\n            - 3\n            - 26\n            - 20\n            - 39\n            - 1\n            - 0\n          total: 89\n          week: 1336280400\n    contributor-activity-items:\n      value:\n        - author:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          total: 135\n          weeks:\n            - w: 1367712000\n              a: 6898\n              d: 77\n              c: 10\n    participation-stats:\n      value:\n        all:\n          - 11\n          - 21\n          - 15\n          - 2\n          - 8\n          - 1\n          - 8\n          - 23\n          - 17\n          - 21\n          - 11\n          - 10\n          - 33\n          - 91\n          - 38\n          - 34\n          - 22\n          - 23\n          - 32\n          - 3\n          - 43\n          - 87\n          - 71\n          - 18\n          - 13\n          - 5\n          - 13\n          - 16\n          - 66\n          - 27\n          - 12\n          - 45\n          - 110\n          - 117\n          - 13\n          - 8\n          - 18\n          - 9\n          - 19\n          - 26\n          - 39\n          - 12\n          - 20\n          - 31\n          - 46\n          - 91\n          - 45\n          - 10\n          - 24\n          - 9\n          - 29\n          - 7\n        owner:\n          - 3\n          - 2\n          - 3\n          - 0\n          - 2\n          - 0\n          - 5\n          - 14\n          - 7\n          - 9\n          - 1\n          - 5\n          - 0\n          - 48\n          - 19\n          - 2\n          - 0\n          - 1\n          - 10\n          - 2\n          - 23\n          - 40\n          - 35\n          - 8\n          - 8\n          - 2\n          - 10\n          - 6\n          - 30\n          - 0\n          - 2\n          - 9\n          - 53\n          - 104\n          - 3\n          - 3\n          - 10\n          - 4\n          - 7\n          - 11\n          - 21\n          - 4\n          - 4\n          - 22\n          - 26\n          - 63\n          - 11\n          - 2\n          - 14\n          - 1\n          - 10\n          - 3\n    code-frequency-stat-items-2:\n      value:\n        - - 0\n          - 0\n          - 5\n        - - 0\n          - 1\n          - 43\n        - - 0\n          - 2\n          - 21\n    status:\n      value:\n        url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\n        avatar_url: https://github.com/images/error/hubot_happy.gif\n        id: 1\n        node_id: MDY6U3RhdHVzMQ==\n        state: success\n        description: Build has completed successfully\n        target_url: https://ci.example.com/1000/output\n        context: continuous-integration/jenkins\n        created_at: '2012-07-20T01:19:13Z'\n        updated_at: '2012-07-20T01:19:13Z'\n        creator:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n    tag-items:\n      value:\n        - name: v0.1\n          commit:\n            sha: c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\n            url: https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\n          zipball_url: https://github.com/octocat/Hello-World/zipball/v0.1\n          tarball_url: https://github.com/octocat/Hello-World/tarball/v0.1\n          node_id: MDQ6VXNlcjE=\n    topic:\n      value:\n        names:\n          - octocat\n          - atom\n          - electron\n          - api\n    clone-traffic:\n      value:\n        count: 173\n        uniques: 128\n        clones:\n          - timestamp: '2016-10-10T00:00:00Z'\n            count: 2\n            uniques: 1\n          - timestamp: '2016-10-11T00:00:00Z'\n            count: 17\n            uniques: 16\n          - timestamp: '2016-10-12T00:00:00Z'\n            count: 21\n            uniques: 15\n          - timestamp: '2016-10-13T00:00:00Z'\n            count: 8\n            uniques: 7\n          - timestamp: '2016-10-14T00:00:00Z'\n            count: 5\n            uniques: 5\n          - timestamp: '2016-10-15T00:00:00Z'\n            count: 2\n            uniques: 2\n          - timestamp: '2016-10-16T00:00:00Z'\n            count: 8\n            uniques: 7\n          - timestamp: '2016-10-17T00:00:00Z'\n            count: 26\n            uniques: 15\n          - timestamp: '2016-10-18T00:00:00Z'\n            count: 19\n            uniques: 17\n          - timestamp: '2016-10-19T00:00:00Z'\n            count: 19\n            uniques: 14\n          - timestamp: '2016-10-20T00:00:00Z'\n            count: 19\n            uniques: 15\n          - timestamp: '2016-10-21T00:00:00Z'\n            count: 9\n            uniques: 7\n          - timestamp: '2016-10-22T00:00:00Z'\n            count: 5\n            uniques: 5\n          - timestamp: '2016-10-23T00:00:00Z'\n            count: 6\n            uniques: 5\n          - timestamp: '2016-10-24T00:00:00Z'\n            count: 7\n            uniques: 5\n    content-traffic-items:\n      value:\n        - path: /github/hubot\n          title: 'github/hubot: A customizable life embetterment robot.'\n          count: 3542\n          uniques: 2225\n        - path: /github/hubot/blob/master/docs/scripting.md\n          title: hubot/scripting.md at master · github/hubot · GitHub\n          count: 1707\n          uniques: 804\n        - path: /github/hubot/tree/master/docs\n          title: hubot/docs at master · github/hubot · GitHub\n          count: 685\n          uniques: 435\n        - path: /github/hubot/tree/master/src\n          title: hubot/src at master · github/hubot · GitHub\n          count: 577\n          uniques: 347\n        - path: /github/hubot/blob/master/docs/index.md\n          title: hubot/index.md at master · github/hubot · GitHub\n          count: 379\n          uniques: 259\n        - path: /github/hubot/blob/master/docs/adapters.md\n          title: hubot/adapters.md at master · github/hubot · GitHub\n          count: 354\n          uniques: 201\n        - path: /github/hubot/tree/master/examples\n          title: hubot/examples at master · github/hubot · GitHub\n          count: 340\n          uniques: 260\n        - path: /github/hubot/blob/master/docs/deploying/heroku.md\n          title: hubot/heroku.md at master · github/hubot · GitHub\n          count: 324\n          uniques: 217\n        - path: /github/hubot/blob/master/src/robot.coffee\n          title: hubot/robot.coffee at master · github/hubot · GitHub\n          count: 293\n          uniques: 191\n        - path: /github/hubot/blob/master/LICENSE.md\n          title: hubot/LICENSE.md at master · github/hubot · GitHub\n          count: 281\n          uniques: 222\n    referrer-traffic-items:\n      value:\n        - referrer: Google\n          count: 4\n          uniques: 3\n        - referrer: stackoverflow.com\n          count: 2\n          uniques: 2\n        - referrer: eggsonbread.com\n          count: 1\n          uniques: 1\n        - referrer: yandex.ru\n          count: 1\n          uniques: 1\n    view-traffic:\n      value:\n        count: 14850\n        uniques: 3782\n        views:\n          - timestamp: '2016-10-10T00:00:00Z'\n            count: 440\n            uniques: 143\n          - timestamp: '2016-10-11T00:00:00Z'\n            count: 1308\n            uniques: 414\n          - timestamp: '2016-10-12T00:00:00Z'\n            count: 1486\n            uniques: 452\n          - timestamp: '2016-10-13T00:00:00Z'\n            count: 1170\n            uniques: 401\n          - timestamp: '2016-10-14T00:00:00Z'\n            count: 868\n            uniques: 266\n          - timestamp: '2016-10-15T00:00:00Z'\n            count: 495\n            uniques: 157\n          - timestamp: '2016-10-16T00:00:00Z'\n            count: 524\n            uniques: 175\n          - timestamp: '2016-10-17T00:00:00Z'\n            count: 1263\n            uniques: 412\n          - timestamp: '2016-10-18T00:00:00Z'\n            count: 1402\n            uniques: 417\n          - timestamp: '2016-10-19T00:00:00Z'\n            count: 1394\n            uniques: 424\n          - timestamp: '2016-10-20T00:00:00Z'\n            count: 1492\n            uniques: 448\n          - timestamp: '2016-10-21T00:00:00Z'\n            count: 1153\n            uniques: 332\n          - timestamp: '2016-10-22T00:00:00Z'\n            count: 566\n            uniques: 168\n          - timestamp: '2016-10-23T00:00:00Z'\n            count: 675\n            uniques: 184\n          - timestamp: '2016-10-24T00:00:00Z'\n            count: 614\n            uniques: 237\n    minimal-repository:\n      value:\n        id: 1296269\n        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n        name: Hello-World\n        full_name: octocat/Hello-World\n        owner:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        private: false\n        html_url: https://github.com/octocat/Hello-World\n        description: This your first repo!\n        fork: false\n        url: https://api.github.com/repos/octocat/Hello-World\n        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n        events_url: https://api.github.com/repos/octocat/Hello-World/events\n        forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n        git_url: git:github.com/octocat/Hello-World.git\n        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n        languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n        merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n        ssh_url: git@github.com:octocat/Hello-World.git\n        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n        tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n        teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n        clone_url: https://github.com/octocat/Hello-World.git\n        mirror_url: git:git.example.com/octocat/Hello-World\n        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks\n        svn_url: https://svn.github.com/octocat/Hello-World\n        homepage: https://github.com\n        language: null\n        forks_count: 9\n        stargazers_count: 80\n        watchers_count: 80\n        size: 108\n        default_branch: master\n        open_issues_count: 0\n        is_template: false\n        topics:\n          - octocat\n          - atom\n          - electron\n          - api\n        has_issues: true\n        has_projects: true\n        has_wiki: true\n        has_pages: false\n        has_downloads: true\n        archived: false\n        disabled: false\n        visibility: public\n        pushed_at: '2011-01-26T19:06:43Z'\n        created_at: '2011-01-26T19:01:12Z'\n        updated_at: '2011-01-26T19:14:43Z'\n        permissions:\n          admin: false\n          push: false\n          pull: true\n        template_repository:\n          id: 1296269\n          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n          name: Hello-World-Template\n          full_name: octocat/Hello-World-Template\n          owner:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          private: false\n          html_url: https://github.com/octocat/Hello-World-Template\n          description: This your first repo!\n          fork: false\n          url: https://api.github.com/repos/octocat/Hello-World-Template\n          archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}\n          assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}\n          blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}\n          branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}\n          collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}\n          comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}\n          commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}\n          compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}\n          contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}\n          contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors\n          deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments\n          downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads\n          events_url: https://api.github.com/repos/octocat/Hello-World-Template/events\n          forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks\n          git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}\n          git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}\n          git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}\n          git_url: git:github.com/octocat/Hello-World-Template.git\n          issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}\n          issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}\n          issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}\n          keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}\n          labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}\n          languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages\n          merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges\n          milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}\n          notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}\n          pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}\n          releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}\n          ssh_url: git@github.com:octocat/Hello-World-Template.git\n          stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers\n          statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}\n          subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers\n          subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription\n          tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags\n          teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams\n          trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}\n          clone_url: https://github.com/octocat/Hello-World-Template.git\n          mirror_url: git:git.example.com/octocat/Hello-World-Template\n          hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks\n          svn_url: https://svn.github.com/octocat/Hello-World-Template\n          homepage: https://github.com\n          language: null\n          forks: 9\n          forks_count: 9\n          stargazers_count: 80\n          watchers_count: 80\n          watchers: 80\n          size: 108\n          default_branch: master\n          open_issues: 0\n          open_issues_count: 0\n          is_template: true\n          license:\n            key: mit\n            name: MIT License\n            url: https://api.github.com/licenses/mit\n            spdx_id: MIT\n            node_id: MDc6TGljZW5zZW1pdA==\n            html_url: https://api.github.com/licenses/mit\n          topics:\n            - octocat\n            - atom\n            - electron\n            - api\n          has_issues: true\n          has_projects: true\n          has_wiki: true\n          has_pages: false\n          has_downloads: true\n          archived: false\n          disabled: false\n          visibility: public\n          pushed_at: '2011-01-26T19:06:43Z'\n          created_at: '2011-01-26T19:01:12Z'\n          updated_at: '2011-01-26T19:14:43Z'\n          permissions:\n            admin: false\n            push: false\n            pull: true\n          allow_rebase_merge: true\n          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O\n          allow_squash_merge: true\n          allow_auto_merge: false\n          delete_branch_on_merge: true\n          allow_merge_commit: true\n          allow_forking: true\n          subscribers_count: 42\n          network_count: 0\n    repository-3:\n      value:\n        id: 1296269\n        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n        name: Hello-World\n        full_name: octocat/Hello-World\n        owner:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        private: false\n        html_url: https://github.com/octocat/Hello-World\n        description: This your first repo!\n        fork: false\n        url: https://api.github.com/repos/octocat/Hello-World\n        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n        events_url: https://api.github.com/repos/octocat/Hello-World/events\n        forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n        git_url: git:github.com/octocat/Hello-World.git\n        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n        languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n        merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n        ssh_url: git@github.com:octocat/Hello-World.git\n        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n        tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n        teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n        clone_url: https://github.com/octocat/Hello-World.git\n        mirror_url: git:git.example.com/octocat/Hello-World\n        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks\n        svn_url: https://svn.github.com/octocat/Hello-World\n        homepage: https://github.com\n        language: null\n        forks_count: 9\n        forks: 9\n        stargazers_count: 80\n        watchers_count: 80\n        watchers: 80\n        size: 108\n        default_branch: master\n        open_issues_count: 0\n        open_issues: 0\n        is_template: false\n        topics:\n          - octocat\n          - atom\n          - electron\n          - api\n        has_issues: true\n        has_projects: true\n        has_wiki: true\n        has_pages: false\n        has_downloads: true\n        archived: false\n        disabled: false\n        visibility: public\n        pushed_at: '2011-01-26T19:06:43Z'\n        created_at: '2011-01-26T19:01:12Z'\n        updated_at: '2011-01-26T19:14:43Z'\n        permissions:\n          admin: false\n          push: false\n          pull: true\n        allow_rebase_merge: true\n        allow_auto_merge: false\n        license:\n          key: mit\n          name: MIT License\n          url: https://api.github.com/licenses/mit\n          spdx_id: MIT\n          node_id: MDc6TGljZW5zZW1pdA==\n          html_url: https://github.com/licenses/mit\n    public-repository-items:\n      value:\n        - id: 1296269\n          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n          name: Hello-World\n          full_name: octocat/Hello-World\n          owner:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          private: false\n          html_url: https://github.com/octocat/Hello-World\n          description: This your first repo!\n          fork: false\n          url: https://api.github.com/repos/octocat/Hello-World\n          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n          events_url: https://api.github.com/repos/octocat/Hello-World/events\n          forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n          git_url: git:github.com/octocat/Hello-World.git\n          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n          languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n          merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n          ssh_url: git@github.com:octocat/Hello-World.git\n          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n          tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n          teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks\n    repository-items-default-response:\n      summary: Default response\n      value:\n        - id: 1296269\n          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n          name: Hello-World\n          full_name: octocat/Hello-World\n          owner:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          private: false\n          html_url: https://github.com/octocat/Hello-World\n          description: This your first repo!\n          fork: false\n          url: https://api.github.com/repos/octocat/Hello-World\n          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n          events_url: https://api.github.com/repos/octocat/Hello-World/events\n          forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n          git_url: git:github.com/octocat/Hello-World.git\n          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n          languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n          merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n          ssh_url: git@github.com:octocat/Hello-World.git\n          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n          tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n          teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n          clone_url: https://github.com/octocat/Hello-World.git\n          mirror_url: git:git.example.com/octocat/Hello-World\n          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks\n          svn_url: https://svn.github.com/octocat/Hello-World\n          homepage: https://github.com\n          language: null\n          forks_count: 9\n          stargazers_count: 80\n          watchers_count: 80\n          size: 108\n          default_branch: master\n          open_issues_count: 0\n          is_template: true\n          topics:\n            - octocat\n            - atom\n            - electron\n            - api\n          has_issues: true\n          has_projects: true\n          has_wiki: true\n          has_pages: false\n          has_downloads: true\n          archived: false\n          disabled: false\n          visibility: public\n          pushed_at: '2011-01-26T19:06:43Z'\n          created_at: '2011-01-26T19:01:12Z'\n          updated_at: '2011-01-26T19:14:43Z'\n          permissions:\n            admin: false\n            push: false\n            pull: true\n          allow_rebase_merge: true\n          template_repository: null\n          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O\n          allow_squash_merge: true\n          allow_auto_merge: false\n          delete_branch_on_merge: true\n          allow_merge_commit: true\n          subscribers_count: 42\n          network_count: 0\n          license:\n            key: mit\n            name: MIT License\n            url: https://api.github.com/licenses/mit\n            spdx_id: MIT\n            node_id: MDc6TGljZW5zZW1pdA==\n            html_url: https://github.com/licenses/mit\n          forks: 1\n          open_issues: 1\n          watchers: 1\n    repository:\n      value:\n        id: 1296269\n        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n        name: Hello-World\n        full_name: octocat/Hello-World\n        owner:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        private: false\n        html_url: https://github.com/octocat/Hello-World\n        description: This your first repo!\n        fork: false\n        url: https://api.github.com/repos/octocat/Hello-World\n        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n        events_url: https://api.github.com/repos/octocat/Hello-World/events\n        forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n        git_url: git:github.com/octocat/Hello-World.git\n        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n        languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n        merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n        ssh_url: git@github.com:octocat/Hello-World.git\n        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n        tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n        teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n        clone_url: https://github.com/octocat/Hello-World.git\n        mirror_url: git:git.example.com/octocat/Hello-World\n        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks\n        svn_url: https://svn.github.com/octocat/Hello-World\n        homepage: https://github.com\n        organization: null\n        language: null\n        forks: 9\n        forks_count: 9\n        stargazers_count: 80\n        watchers_count: 80\n        watchers: 80\n        size: 108\n        default_branch: master\n        open_issues: 0\n        open_issues_count: 0\n        is_template: true\n        license:\n          key: mit\n          name: MIT License\n          url: https://api.github.com/licenses/mit\n          spdx_id: MIT\n          node_id: MDc6TGljZW5zZW1pdA==\n          html_url: https://api.github.com/licenses/mit\n        topics:\n          - octocat\n          - atom\n          - electron\n          - api\n        has_issues: true\n        has_projects: true\n        has_wiki: true\n        has_pages: false\n        has_downloads: true\n        archived: false\n        disabled: false\n        visibility: public\n        pushed_at: '2011-01-26T19:06:43Z'\n        created_at: '2011-01-26T19:01:12Z'\n        updated_at: '2011-01-26T19:14:43Z'\n        permissions:\n          admin: false\n          push: false\n          pull: true\n        allow_rebase_merge: true\n        template_repository: null\n        temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O\n        allow_squash_merge: true\n        allow_auto_merge: false\n        delete_branch_on_merge: true\n        allow_merge_commit: true\n        subscribers_count: 42\n        network_count: 0\n    minimal-repository-items:\n      value:\n        - id: 1296269\n          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n          name: Hello-World\n          full_name: octocat/Hello-World\n          owner:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          private: false\n          html_url: https://github.com/octocat/Hello-World\n          description: This your first repo!\n          fork: false\n          url: https://api.github.com/repos/octocat/Hello-World\n          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n          events_url: https://api.github.com/repos/octocat/Hello-World/events\n          forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n          git_url: git:github.com/octocat/Hello-World.git\n          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n          languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n          merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n          ssh_url: git@github.com:octocat/Hello-World.git\n          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n          tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n          teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n          clone_url: https://github.com/octocat/Hello-World.git\n          mirror_url: git:git.example.com/octocat/Hello-World\n          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks\n          svn_url: https://svn.github.com/octocat/Hello-World\n          homepage: https://github.com\n          language: null\n          forks_count: 9\n          stargazers_count: 80\n          watchers_count: 80\n          size: 108\n          default_branch: master\n          open_issues_count: 0\n          is_template: false\n          topics:\n            - octocat\n            - atom\n            - electron\n            - api\n          has_issues: true\n          has_projects: true\n          has_wiki: true\n          has_pages: false\n          has_downloads: true\n          archived: false\n          disabled: false\n          visibility: public\n          pushed_at: '2011-01-26T19:06:43Z'\n          created_at: '2011-01-26T19:01:12Z'\n          updated_at: '2011-01-26T19:14:43Z'\n          permissions:\n            admin: false\n            push: false\n            pull: true\n          template_repository: null\n  requestBodies: {}\n  headers:\n    link:\n      example: \u003chttps://api.github.com/resource?page=2\u003e; rel=\"next\", \u003chttps://api.github.com/resource?page=5\u003e; rel=\"last\"\n      schema:\n        type: string\n  links: {}\n  x-stackQL-resources:\n    repos:\n      id: github.repos.repos\n      name: repos\n      title: repos\n      methods:\n        get:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        enable_automated_security_fixes:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1automated-security-fixes/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        disable_automated_security_fixes:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1automated-security-fixes/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        codeowners_errors:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1codeowners~1errors/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list_contributors:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1contributors/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        create_dispatch_event:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1dispatches/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        list_languages:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1languages/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list_tags:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1tags/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list_teams:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1teams/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_all_topics:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1topics/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        replace_all_topics:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1topics/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        transfer:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1transfer/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n        check_vulnerability_alerts:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1vulnerability-alerts/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        enable_vulnerability_alerts:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1vulnerability-alerts/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        disable_vulnerability_alerts:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1vulnerability-alerts/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        create_using_template:\n          operation:\n            $ref: '#/paths/~1repos~1{template_owner}~1{template_repo}~1generate/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        list_public:\n          operation:\n            $ref: '#/paths/~1repositories/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1repos/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1repos/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        list_for_user:\n          operation:\n            $ref: '#/paths/~1users~1{username}~1repos/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/repos/methods/get'\n          - $ref: '#/components/x-stackQL-resources/repos/methods/list_for_user'\n          - $ref: '#/components/x-stackQL-resources/repos/methods/list_for_authenticated_user'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/repos/methods/create_dispatch_event'\n          - $ref: '#/components/x-stackQL-resources/repos/methods/create_using_template'\n          - $ref: '#/components/x-stackQL-resources/repos/methods/create_for_authenticated_user'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/repos/methods/delete'\n    autolinks:\n      id: github.repos.autolinks\n      name: autolinks\n      title: autolinks\n      methods:\n        list_autolinks:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1autolinks/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_autolink:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1autolinks/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        get_autolink:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1autolinks~1{autolink_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_autolink:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1autolinks~1{autolink_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/autolinks/methods/get_autolink'\n          - $ref: '#/components/x-stackQL-resources/autolinks/methods/list_autolinks'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/autolinks/methods/create_autolink'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/autolinks/methods/delete_autolink'\n    branches:\n      id: github.repos.branches\n      name: branches\n      title: branches\n      methods:\n        list_branches:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_branch:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_branch_protection:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_branch_protection:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_branch_protection:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        get_admin_branch_protection:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1enforce_admins/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        set_admin_branch_protection:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1enforce_admins/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_admin_branch_protection:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1enforce_admins/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        get_pull_request_review_protection:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_pull_request_reviews/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_pull_request_review_protection:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_pull_request_reviews/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_pull_request_review_protection:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_pull_request_reviews/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        get_commit_signature_protection:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_signatures/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_commit_signature_protection:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_signatures/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_commit_signature_protection:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_signatures/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        get_status_checks_protection:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_status_checks/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_status_check_protection:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_status_checks/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        remove_status_check_protection:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_status_checks/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        get_all_status_check_contexts:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_status_checks~1contexts/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        add_status_check_contexts:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_status_checks~1contexts/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        set_status_check_contexts:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_status_checks~1contexts/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        remove_status_check_contexts:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1required_status_checks~1contexts/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_access_restrictions:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_access_restrictions:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        get_apps_with_access_to_protected_branch:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1apps/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        add_app_access_restrictions:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1apps/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        set_app_access_restrictions:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1apps/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        remove_app_access_restrictions:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1apps/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_teams_with_access_to_protected_branch:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1teams/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        add_team_access_restrictions:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1teams/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        set_team_access_restrictions:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1teams/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        remove_team_access_restrictions:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1teams/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_users_with_access_to_protected_branch:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1users/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        add_user_access_restrictions:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1users/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        set_user_access_restrictions:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1users/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        remove_user_access_restrictions:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1protection~1restrictions~1users/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        rename_branch:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1branches~1{branch}~1rename/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        merge_upstream:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1merge-upstream/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/branches/methods/get_branch'\n          - $ref: '#/components/x-stackQL-resources/branches/methods/list_branches'\n        insert: []\n        update: []\n        delete: []\n    collaborators:\n      id: github.repos.collaborators\n      name: collaborators\n      title: collaborators\n      methods:\n        list_collaborators:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1collaborators/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        check_collaborator:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1collaborators~1{username}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        add_collaborator:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1collaborators~1{username}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        remove_collaborator:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1collaborators~1{username}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        get_collaborator_permission_level:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1collaborators~1{username}~1permission/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/collaborators/methods/get_collaborator_permission_level'\n          - $ref: '#/components/x-stackQL-resources/collaborators/methods/list_collaborators'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/collaborators/methods/add_collaborator'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/collaborators/methods/remove_collaborator'\n    comments:\n      id: github.repos.comments\n      name: comments\n      title: comments\n      methods:\n        list_commit_comments_for_repo:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1comments/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_commit_comment:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1comments~1{comment_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_commit_comment:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1comments~1{comment_id}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_commit_comment:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1comments~1{comment_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        list_comments_for_commit:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1commits~1{commit_sha}~1comments/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_commit_comment:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1commits~1{commit_sha}~1comments/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/comments/methods/get_commit_comment'\n          - $ref: '#/components/x-stackQL-resources/comments/methods/list_comments_for_commit'\n          - $ref: '#/components/x-stackQL-resources/comments/methods/list_commit_comments_for_repo'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/comments/methods/create_commit_comment'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/comments/methods/delete_commit_comment'\n    commits:\n      id: github.repos.commits\n      name: commits\n      title: commits\n      methods:\n        list_commits:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1commits/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list_branches_for_head_commit:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1commits~1{commit_sha}~1branches-where-head/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list_pull_requests_associated_with_commit:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1commits~1{commit_sha}~1pulls/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_commit:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1commits~1{ref}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        compare_commits:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1compare~1{basehead}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/commits/methods/get_commit'\n          - $ref: '#/components/x-stackQL-resources/commits/methods/list_pull_requests_associated_with_commit'\n          - $ref: '#/components/x-stackQL-resources/commits/methods/list_commits'\n        insert: []\n        update: []\n        delete: []\n    statuses:\n      id: github.repos.statuses\n      name: statuses\n      title: statuses\n      methods:\n        get_combined_status_for_ref:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1commits~1{ref}~1status/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list_commit_statuses_for_ref:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1commits~1{ref}~1statuses/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_commit_status:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1statuses~1{sha}/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/statuses/methods/list_commit_statuses_for_ref'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/statuses/methods/create_commit_status'\n        update: []\n        delete: []\n    community:\n      id: github.repos.community\n      name: community\n      title: community\n      methods:\n        get_community_profile_metrics:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1community~1profile/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/community/methods/get_community_profile_metrics'\n        insert: []\n        update: []\n        delete: []\n    contents:\n      id: github.repos.contents\n      name: contents\n      title: contents\n      methods:\n        get_content:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1contents~1{path}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_or_update_file_contents:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1contents~1{path}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        delete_file:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1contents~1{path}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_readme:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1readme/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_readme_in_directory:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1readme~1{dir}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        download_tarball_archive:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1tarball~1{ref}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        download_zipball_archive:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1zipball~1{ref}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/contents/methods/get_content'\n          - $ref: '#/components/x-stackQL-resources/contents/methods/get_readme_in_directory'\n          - $ref: '#/components/x-stackQL-resources/contents/methods/get_readme'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/contents/methods/create_or_update_file_contents'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/contents/methods/delete_file'\n    deployments:\n      id: github.repos.deployments\n      name: deployments\n      title: deployments\n      methods:\n        list_deployments:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1deployments/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_deployment:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1deployments/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n        get_deployment:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1deployments~1{deployment_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_deployment:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1deployments~1{deployment_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        list_deployment_statuses:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1deployments~1{deployment_id}~1statuses/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_deployment_status:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1deployments~1{deployment_id}~1statuses/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        get_deployment_status:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1deployments~1{deployment_id}~1statuses~1{status_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/deployments/methods/get_deployment_status'\n          - $ref: '#/components/x-stackQL-resources/deployments/methods/get_deployment'\n          - $ref: '#/components/x-stackQL-resources/deployments/methods/list_deployments'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/deployments/methods/create_deployment_status'\n          - $ref: '#/components/x-stackQL-resources/deployments/methods/create_deployment'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/deployments/methods/delete_deployment'\n    environments:\n      id: github.repos.environments\n      name: environments\n      title: environments\n      methods:\n        get_all_environments:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1environments/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_environment:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1environments~1{environment_name}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_or_update_environment:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1environments~1{environment_name}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_an_environment:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1environments~1{environment_name}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/environments/methods/get_environment'\n          - $ref: '#/components/x-stackQL-resources/environments/methods/get_all_environments'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/environments/methods/create_or_update_environment'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/environments/methods/delete_an_environment'\n    forks:\n      id: github.repos.forks\n      name: forks\n      title: forks\n      methods:\n        list_forks:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1forks/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_fork:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1forks/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/forks/methods/list_forks'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/forks/methods/create_fork'\n        update: []\n        delete: []\n    webhooks:\n      id: github.repos.webhooks\n      name: webhooks\n      title: webhooks\n      methods:\n        list_webhooks:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_webhook:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        get_webhook:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks~1{hook_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_webhook:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks~1{hook_id}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_webhook:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks~1{hook_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        get_webhook_config_for_repo:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks~1{hook_id}~1config/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_webhook_config_for_repo:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks~1{hook_id}~1config/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list_webhook_deliveries:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks~1{hook_id}~1deliveries/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_webhook_delivery:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks~1{hook_id}~1deliveries~1{delivery_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        redeliver_webhook_delivery:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks~1{hook_id}~1deliveries~1{delivery_id}~1attempts/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n        ping_webhook:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks~1{hook_id}~1pings/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        test_push_webhook:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1hooks~1{hook_id}~1tests/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/webhooks/methods/get_webhook_delivery'\n          - $ref: '#/components/x-stackQL-resources/webhooks/methods/get_webhook'\n          - $ref: '#/components/x-stackQL-resources/webhooks/methods/list_webhooks'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/webhooks/methods/create_webhook'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/webhooks/methods/delete_webhook'\n    invitations:\n      id: github.repos.invitations\n      name: invitations\n      title: invitations\n      methods:\n        list_invitations:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1invitations/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_invitation:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1invitations~1{invitation_id}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_invitation:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1invitations~1{invitation_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        list_invitations_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1repository_invitations/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        accept_invitation_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1repository_invitations~1{invitation_id}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        decline_invitation_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1repository_invitations~1{invitation_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/invitations/methods/list_invitations'\n          - $ref: '#/components/x-stackQL-resources/invitations/methods/list_invitations_for_authenticated_user'\n        insert: []\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/invitations/methods/delete_invitation'\n    keys:\n      id: github.repos.keys\n      name: keys\n      title: keys\n      methods:\n        list_deploy_keys:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1keys/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_deploy_key:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1keys/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        get_deploy_key:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1keys~1{key_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_deploy_key:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1keys~1{key_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/keys/methods/get_deploy_key'\n          - $ref: '#/components/x-stackQL-resources/keys/methods/list_deploy_keys'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/keys/methods/create_deploy_key'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/keys/methods/delete_deploy_key'\n    lfs:\n      id: github.repos.lfs\n      name: lfs\n      title: lfs\n      methods:\n        enable_lfs_for_repo:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1lfs/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n        disable_lfs_for_repo:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1lfs/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select: []\n        insert: []\n        update: []\n        delete: []\n    merging:\n      id: github.repos.merging\n      name: merging\n      title: merging\n      methods:\n        merge:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1merges/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select: []\n        insert: []\n        update: []\n        delete: []\n    pages:\n      id: github.repos.pages\n      name: pages\n      title: pages\n      methods:\n        get_pages:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1pages/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_pages_site:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1pages/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        update_information_about_pages_site:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1pages/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        delete_pages_site:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1pages/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        list_pages_builds:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1pages~1builds/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        request_pages_build:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1pages~1builds/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        get_latest_pages_build:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1pages~1builds~1latest/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_pages_build:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1pages~1builds~1{build_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_pages_health_check:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1pages~1health/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/pages/methods/get_pages_build'\n          - $ref: '#/components/x-stackQL-resources/pages/methods/get_pages'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/pages/methods/create_pages_site'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/pages/methods/delete_pages_site'\n    releases:\n      id: github.repos.releases\n      name: releases\n      title: releases\n      methods:\n        list_releases:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_release:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        get_release_asset:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases~1assets~1{asset_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_release_asset:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases~1assets~1{asset_id}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_release_asset:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases~1assets~1{asset_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        generate_release_notes:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases~1generate-notes/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_latest_release:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases~1latest/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_release_by_tag:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases~1tags~1{tag}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_release:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases~1{release_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_release:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases~1{release_id}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_release:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases~1{release_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        list_release_assets:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases~1{release_id}~1assets/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        upload_release_asset:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases~1{release_id}~1assets/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/releases/methods/get_release'\n          - $ref: '#/components/x-stackQL-resources/releases/methods/get_release_asset'\n          - $ref: '#/components/x-stackQL-resources/releases/methods/get_release_by_tag'\n          - $ref: '#/components/x-stackQL-resources/releases/methods/list_releases'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/releases/methods/create_release'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/releases/methods/delete_release_asset'\n          - $ref: '#/components/x-stackQL-resources/releases/methods/delete_release'\n    statistics:\n      id: github.repos.statistics\n      name: statistics\n      title: statistics\n      methods:\n        get_code_frequency_stats:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1stats~1code_frequency/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        get_commit_activity_stats:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1stats~1commit_activity/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        get_contributors_stats:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1stats~1contributors/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        get_participation_stats:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1stats~1participation/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_punch_card_stats:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1stats~1punch_card/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/statistics/methods/get_code_frequency_stats'\n        insert: []\n        update: []\n        delete: []\n    traffic:\n      id: github.repos.traffic\n      name: traffic\n      title: traffic\n      methods:\n        get_clones:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1traffic~1clones/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_top_paths:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1traffic~1popular~1paths/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_top_referrers:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1traffic~1popular~1referrers/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_views:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1traffic~1views/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/traffic/methods/get_views'\n        insert: []\n        update: []\n        delete: []\nopenapi: 3.0.3\nservers:\n  - url: https://api.github.com\ntags:\n  - name: actions\n    description: Endpoints to manage GitHub Actions using the REST API.\n  - name: activity\n    description: Activity APIs provide access to notifications, subscriptions, and timelines.\n  - name: apps\n    description: Information for integrations and installations.\n  - name: billing\n    description: Monitor charges and usage from Actions and Packages.\n  - name: checks\n    description: Rich interactions with checks run by your integrations.\n  - name: code-scanning\n    description: Retrieve code scanning alerts from a repository.\n  - name: codes-of-conduct\n    description: Insight into codes of conduct for your communities.\n  - name: codespaces\n    description: Endpoints to manage Codespaces using the REST API.\n  - name: emojis\n    description: List emojis available to use on GitHub.\n  - name: enterprise-admin\n    description: Administer a GitHub enterprise.\n  - name: dependabot\n    description: Endpoints to manage Dependabot.\n  - name: gists\n    description: View, modify your gists.\n  - name: git\n    description: Raw Git functionality.\n  - name: gitignore\n    description: View gitignore templates\n  - name: interactions\n    description: Owner or admin management of users interactions.\n  - name: issues\n    description: Interact with GitHub Issues.\n  - name: licenses\n    description: View various OSS licenses.\n  - name: markdown\n    description: Render GitHub flavored markdown\n  - name: meta\n    description: Endpoints that give information about the API.\n  - name: migrations\n    description: Move projects to or from GitHub.\n  - name: oauth-authorizations\n    description: Manage access of OAuth applications\n  - name: orgs\n    description: Interact with GitHub Orgs.\n  - name: packages\n    description: Manage packages for authenticated users and organizations.\n  - name: projects\n    description: Interact with GitHub Projects.\n  - name: pulls\n    description: Interact with GitHub Pull Requests.\n  - name: rate-limit\n    description: Check your current rate limit status\n  - name: reactions\n    description: Interact with reactions to various GitHub entities.\n  - name: repos\n    description: Interact with GitHub Repos.\n  - name: scim\n    description: Provisioning of GitHub organization membership for SCIM-enabled providers.\n  - name: search\n    description: Look for stuff on GitHub.\n  - name: secret-scanning\n    description: Retrieve secret scanning alerts from a repository.\n  - name: server-statistics\n    description: GHES statistics\n  - name: teams\n    description: Interact with GitHub Teams.\n  - name: users\n    description: Interact with and view information about users and also current user.\nexternalDocs:\n  description: GitHub v3 REST API\n  url: https://docs.github.com/rest/\ninfo:\n  version: 1.1.4\n  title: GitHub v3 REST API - repos\n  description: Interact with GitHub Repos.\n  license:\n    name: MIT\n    url: https://spdx.org/licenses/MIT\n  termsOfService: https://docs.github.com/articles/github-terms-of-service\n  contact:\n    name: Support\n    url: https://support.github.com/contact?tags=dotcom-rest-api\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/github/v0.1.0/services/repos.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/github/v0.1.0/services/repos.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/repos/{owner}/{repo}/environments\": get: responses: 200: contents: application/json: generate schema: field environments: item: field protection_rules: item: anyOf: collect variants: oneOf[1]: field reviewers: item: field reviewer: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf",
		"discriminator inference",
		"sum types with same names",
		"unsupported content types"
	]
}