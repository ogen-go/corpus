{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/yashodgayashan/environment_platform"
		},
		"file": {
			"name": "openapi_v1.yaml",
			"size": 0,
			"path": "resources/openapi_v1.yaml",
			"byteSize": 26441,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Environment Platform\n  description: This is the RESTful API Specification for the Environment Platform developed for the Environment Ministry of Sri Lanka\n\npaths:\n  /users/{user-id}/requests:\n    get:\n      description: Returns all the requests related to the user\n      parameters:\n        - name: user-id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response(Success)\n          content:\n            application/json:\n              schema:\n                anyOf:\n                  - $ref: \"#/components/schemas/TreeRemovalBasicData\"\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n    post:\n      description: Creates a new request\n      parameters:\n        - name: user-id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TreeRemovalForm\"\n      responses:\n        \"201\":\n          description: Created request(Created)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"406\":\n          description: Failure in form data verification(Not Accepteble)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error_type:\n                    type: string\n  /users/{user-id}/requests/{request-id}:\n    get:\n      description: Returns information of a specific request\n      parameters:\n        - name: user-id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: request-id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response(Success)\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TreeRemovalObject\"\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"404\":\n          description: Request not found(Not Found)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n  /users/{user-id}/drafts:\n    get:\n      description: Returns all the drafts made by the user\n      parameters:\n        - name: user-id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response(Success)\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TreeRemovalDraftBasicdata\"\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n    post:\n      description: Creates a new request as a draft\n      parameters:\n        - name: user-id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TreeRemovalForm\"\n      responses:\n        \"201\":\n          description: Created request(Created)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"406\":\n          description: Failure in form data verification(Not Accepteble)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error_type:\n                    type: string\n  /users/{user-id}/draft/{draft-id}:\n    get:\n      description: Return information of a specific draft\n      parameters:\n        - name: user-id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: draft-id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response(Success)\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TreeRemovalForm\"\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"404\":\n          description: Request draft not found(Not Found)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n    put:\n      description: Update information in an existing draft\n      parameters:\n        - name: user-id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: draft-id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TreeRemovalForm\"\n      responses:\n        \"200\":\n          description: Successful response(Success)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"404\":\n          description: Request draft not found(Not Found)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n    delete:\n      description: Delete a request draft\n      parameters:\n        - name: user-id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: draft-id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response(Success)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"404\":\n          description: Request draft not found(Not Found)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n  /users/{user-id}/conversations:\n    get:\n      description: Get all the conversations linked to the requests of a specific user\n      parameters:\n        - name: user-id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response(Success)\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Conversations\"\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n  /users/{user-id}/conversations/{conversation-id}:\n    get:\n      description: Get the conversation linked to a specific request of a specific user\n      parameters:\n        - name: user-id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: conversation-id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response(Success)\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SpecificConversation\"\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"404\":\n          description: Conversation not found(Not Found)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n    post:\n      description: Creates a new message on a specific conversation\n      parameters:\n        - name: user-id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: conversation-id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Message\"\n      responses:\n        \"201\":\n          description: Created new message(Created)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"404\":\n          description: Conversation not found(Not Found)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n  /validate:\n    post:\n      description: Validates the map and its coordinates\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Location\"\n      responses:\n        \"200\":\n          description: Validated the map object\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"406\":\n          description: Failure in validating the map(Not accepteble)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n  /ministries/{ministry-id}/requests:\n    get:\n      description: Get all the requests related to the ministries\n      parameters:\n        - name: ministry-id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response(Success)\n          content:\n            application/json:\n              schema:\n                anyOf:\n                  - $ref: \"#/components/schemas/TreeRemovalBasicData\"\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n  /ministries/{ministry-id}/requests/{request-id}:\n    get:\n      description: Get a specific request\n      parameters:\n        - name: ministry-id\n          description: description\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: request-id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response(Success)\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TreeRemovalObject\"\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"404\":\n          description: Request not found(Not Found)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n    patch:\n      description: Update the existing information of the request or assign a ministry\n      parameters:\n        - name: ministry-id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: request-id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              anyOf:\n                - $ref: \"#/components/schemas/AssignMinistry\"\n                - $ref: \"#/components/schemas/StatusChange\"\n      responses:\n        \"200\":\n          description: Successful response(Success)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"404\":\n          description: Request not found(Not Found)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n  /ministries/{ministry-id}/conversations:\n    get:\n      description: Get all the conversations regarding the requests\n      parameters:\n        - name: ministry-id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response(Success)\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Conversations\"\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n  /ministries/{ministry-id}/conversations/{conversation-id}:\n    get:\n      description: Get the conversation linked to the specific request\n      parameters:\n        - name: ministry-id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: conversation-id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful response(Success)\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SpecificConversation\"\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"404\":\n          description: Conversation not found(Not Found)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n    post:\n      description: Create a new message on the conversation\n      parameters:\n        - name: ministry-id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: conversation-id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Message\"\n      responses:\n        \"201\":\n          description: Created message(Created)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"401\":\n          description: Authorization failure(Unauthorized)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n        \"404\":\n          description: Conversation not found(Not Found)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  reason:\n                    type: string\n\ncomponents:\n  schemas:\n    TreeRemovalBasicData:\n      type: array\n      items:\n        type: object\n        properties:\n          title:\n            type: string\n            description: The title of the request\n          removalDate:\n            type: string\n            description: Date of the removal\n          status:\n            type: string\n            description: The status of the request\n    TreeRemovalForm:\n      type: object\n      properties:\n        title:\n          type: string\n          description: The title of the request\n        removalDate:\n          type: string\n          description: Removal date of the trees\n        reason:\n          type: string\n        type:\n          type: string\n        requestedBy:\n          type: string\n          description: The person who is requesting\n        permitRequired:\n          type: boolean\n        landOwner:\n          type: string\n          description: Name of the landowner\n        treeRemovalAutrhority:\n          type: string\n        city:\n          type: string\n        district:\n          type: string\n        nameOfTheLand:\n          type: string\n        planNumber:\n          type: string\n        location:\n          $ref: \"#/components/schemas/Location\"\n        treeInformation:\n          type: array\n          description: This includes all the inforemation about the trees which are to be cut\n          items:\n            type: object\n            properties:\n              species:\n                type: string\n              treeNumber:\n                type: string\n              heightType:\n                type: string\n                enum: [\"Merchantable\", \"Top\"]\n              height:\n                type: number\n                description: This should be in meters\n              girth:\n                type: number\n                description: The girth at the breast height and this should be in centimeters\n              logDetails:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    minGirth:\n                      type: number\n                      description: Minimum girth of the log\n                    maxGirth:\n                      type: number\n                      description: Maximum girth of the log\n                    height:\n                      type: number\n                      description: Length of the log\n    TreeRemovalObject:\n      type: object\n      properties:\n        title:\n          type: string\n          description: The title of the title\n        removalDate:\n          type: string\n          description: Removal date of the trees\n        reason:\n          type: string\n        type:\n          type: string\n        requestedBy:\n          type: string\n          description: Name of Requester\n        permitRequired:\n          type: boolean\n        landOwner:\n          type: string\n          description: Name of the landowner\n        treeRemovalAutrhority:\n          type: string\n        city:\n          type: string\n        district:\n          type: string\n        nameOfTheLand:\n          type: string\n        planNumber:\n          type: string\n        location:\n          type: array\n          description: This includes all the points in the polygon\n          items:\n            type: object\n            properties:\n              latitude:\n                type: number\n              longitude:\n                type: number\n        treeInformation:\n          type: array\n          description: This includes all the inforemation about the trees which are to be cut\n          items:\n            type: object\n            properties:\n              species:\n                type: string\n              treeNumber:\n                type: string\n              heightType:\n                type: string\n                enum: [\"Merchantable\", \"Top\"]\n              height:\n                type: number\n                description: Height (in m)\n              girth:\n                type: number\n                description: The girth at the breast height and this should be in centimeters\n              logDetails:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    minGirth:\n                      type: number\n                      description: Minimum girth of the log\n                    maxGirth:\n                      type: number\n                      description: Maximum girth of the log\n                    height:\n                      type: number\n                      description: Length of the log\n        progress:\n          type: array\n          items:\n            type: object\n            properties:\n              authority:\n                type: string\n                description: This is the respective authority\n              status:\n                type: string\n                description: Current status of the request processed by a particular authority\n    TreeRemovalDraftBasicdata:\n      type: array\n      items:\n        type: object\n        properties:\n          title:\n            type: string\n            description: The title of the request\n          removalDate:\n            type: string\n            description: Date of removal\n    Conversations:\n      type: array\n      items:\n        type: object\n        properties:\n          title:\n            type: string\n            description: This is the request title which is being discussed\n          last_message:\n            type: object\n            description: The last message recieved or sent\n            properties:\n              user:\n                type: string\n                description: The person who sent the message\n              time:\n                type: string\n                description: The message sent time\n              hasRead:\n                type: boolean\n                description: If it is recieved whether read or not\n              message:\n                type: string\n          completed:\n            type: boolean\n            description: Whether the conversation is end or not\n    SpecificConversation:\n      type: object\n      properties:\n        title:\n          type: string\n          description: The title of the request\n        messages:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Message\"\n        completed:\n          type: boolean\n          description: Whether the conversation has ended or not\n    Message:\n      type: object\n      properties:\n        user:\n          type: string\n          description: The person who sent the message\n        time:\n          type: string\n          description: The message sent time\n        hasRead:\n          type: boolean\n          description: If the message has been read or not\n        message:\n          type: string\n    Location:\n      type: array\n      description: This includes all the points in the polygon\n      items:\n        type: object\n        properties:\n          latitude:\n            type: number\n          longitude:\n            type: number\n    AssignMinistry:\n      type: object\n      properties:\n        ministryName:\n          type: string\n        assignedBy:\n          type: string\n          description: The person who assigned the ministry\n    StatusChange:\n      type: object\n      properties:\n        ministry:\n          type: string\n          description: Name of the ministry\n        status:\n          type: string\n          description: The current progress of the request\n",
			"canonicalURL": "/github.com/yashodgayashan/environment_platform@b4c06ae18e77deaba357b08958ac34181f1d5532/-/blob/resources/openapi_v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/yashodgayashan/environment_platform/blob/b4c06ae18e77deaba357b08958ac34181f1d5532/resources/openapi_v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/ministries/{ministry-id}/requests/{request-id}\": patch: requestBody: contents: application/json: generate schema: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}