{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Azure/autorest.modeler"
		},
		"file": {
			"name": "swagger-no-content.json",
			"size": 0,
			"path": "test/Resource/Swagger/swagger-no-content.json",
			"byteSize": 17466,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"servers\": [\n    {\n      \"url\": \"https://autorestresourcesproxysite.azurewebsites.net:443/BlobConnector\"\n    }\n  ],\n  \"info\": {\n    \"version\": \"1.0\",\n    \"title\": \"Blob Connector\"\n  },\n  \"paths\": {\n    \"/Container/Poll\": {\n      \"get\": {\n        \"tags\": [\n          \"BlobConnector\"\n        ],\n        \"summary\": \"Poll for blobs present in given Container. Directory-level Polling and filtering of Blobs is also supported. \\r\\n            Deletes Blobs from the Container once they are picked up\",\n        \"operationId\": \"BlobConnector_TriggerOnBlobContainer\",\n        \"parameters\": [\n          {\n            \"name\": \"triggerState\",\n            \"in\": \"query\",\n            \"description\": \"Specify Trigger State\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"directoryName\",\n            \"in\": \"query\",\n            \"description\": \"Virtual directory within Container from which we need to poll\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"includeRegex\",\n            \"in\": \"query\",\n            \"description\": \"Include File Mask\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"excludeRegex\",\n            \"in\": \"query\",\n            \"description\": \"Exclude File Mask\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Operation is successful.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageDescription\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageDescription\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageDescription\"\n                }\n              },\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageDescription\"\n                }\n              }\n            }\n          },\n          \"202\": {\n            \"description\": \"Operation is accepted\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageDescription\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageDescription\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageDescription\"\n                }\n              },\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageDescription\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"404\": {\n            \"description\": \"Container or Blob not found\"\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\"\n          }\n        },\n        \"deprecated\": false\n      }\n    },\n    \"/Blob/Upload\": {\n      \"post\": {\n        \"tags\": [\n          \"BlobConnector\"\n        ],\n        \"summary\": \"Upload/Update a Blob to the Container\",\n        \"operationId\": \"BlobConnector_UploadBlob\",\n        \"parameters\": [\n          {\n            \"name\": \"blobName\",\n            \"in\": \"query\",\n            \"description\": \"Name of the Uploaded Blob. Required\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"directoryName\",\n            \"in\": \"query\",\n            \"description\": \"Virtual directory within the container to which Blob should be uploaded. Optional\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"forceOverwrite\",\n            \"in\": \"query\",\n            \"description\": \"If a Blob with the same name already exists, should it be overwritten? Default value : true\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Operation is successful.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BlobDetailsItem\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BlobDetailsItem\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BlobDetailsItem\"\n                }\n              },\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BlobDetailsItem\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"404\": {\n            \"description\": \"Container not found\"\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\"\n          }\n        },\n        \"deprecated\": false,\n        \"requestBody\": {\n          \"x-ms-client-name\": \"blobContentAndDetails\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MessageDescription\"\n              }\n            },\n            \"text/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MessageDescription\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MessageDescription\"\n              }\n            },\n            \"text/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MessageDescription\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MessageDescription\"\n              }\n            }\n          },\n          \"description\": \"JSON Object containing the Base-64 encoded Blob Content and a name-value pair containing Blob Properties\",\n          \"required\": true\n        },\n        \"x-ms-requestBody-index\": 0\n      }\n    },\n    \"/Container\": {\n      \"get\": {\n        \"tags\": [\n          \"BlobConnector\"\n        ],\n        \"summary\": \"List all the blobs within the Container\",\n        \"operationId\": \"BlobConnector_ListBlobsInContainer\",\n        \"parameters\": [\n          {\n            \"name\": \"blobDirectoryName\",\n            \"in\": \"query\",\n            \"description\": \"Name of specific directory within container for which listing must be performed. Optional.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"maxResults\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of blobs in the List Returned\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Operation is successful.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BlobDetailsItem\"\n                  }\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BlobDetailsItem\"\n                  }\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BlobDetailsItem\"\n                  }\n                }\n              },\n              \"text/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BlobDetailsItem\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"404\": {\n            \"description\": \"Container not found\"\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\"\n          }\n        },\n        \"deprecated\": false\n      }\n    },\n    \"/Blob\": {\n      \"get\": {\n        \"tags\": [\n          \"BlobConnector\"\n        ],\n        \"summary\": \"Get a specific Blob from the container\",\n        \"operationId\": \"BlobConnector_GetBlob\",\n        \"parameters\": [\n          {\n            \"name\": \"blobName\",\n            \"in\": \"query\",\n            \"description\": \"Name of the blob to retrieve\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"directoryName\",\n            \"in\": \"query\",\n            \"description\": \"Virtual directory within the container from which Blob should be retrieved. Optional\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Operation is successful.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageDescription\"\n                }\n              },\n              \"text/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageDescription\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageDescription\"\n                }\n              },\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageDescription\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"404\": {\n            \"description\": \"Container not found\"\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\"\n          }\n        },\n        \"deprecated\": false\n      },\n      \"delete\": {\n        \"tags\": [\n          \"BlobConnector\"\n        ],\n        \"summary\": \"Delete specific Blob from a Container\",\n        \"operationId\": \"BlobConnector_DeleteBlob\",\n        \"parameters\": [\n          {\n            \"name\": \"blobName\",\n            \"in\": \"query\",\n            \"description\": \"Name of the specific blob to delete\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"directoryName\",\n            \"in\": \"query\",\n            \"description\": \"Virtual directory within the container from which Blob should be deleted. Optional\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Operation is successful.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Void\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"404\": {\n            \"description\": \"Container not found\"\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\"\n          }\n        },\n        \"deprecated\": false\n      }\n    },\n    \"/Blob/Snapshot\": {\n      \"post\": {\n        \"tags\": [\n          \"BlobConnector\"\n        ],\n        \"summary\": \"Create a read-only snapshot of a Specific Blob\",\n        \"operationId\": \"BlobConnector_SnapshotBlob\",\n        \"parameters\": [\n          {\n            \"name\": \"blobName\",\n            \"in\": \"query\",\n            \"description\": \"Name of the specific blob for which snapshot must be created\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Operation is successful.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MessageDescription\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"404\": {\n            \"description\": \"Container not found\"\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\"\n          }\n        },\n        \"deprecated\": false\n      }\n    },\n    \"/Blob/Copy\": {\n      \"post\": {\n        \"tags\": [\n          \"BlobConnector\"\n        ],\n        \"summary\": \"Copy a specific Blob to another container within the same storage account\",\n        \"operationId\": \"BlobConnector_CopyBlobWithinSameAccount\",\n        \"parameters\": [\n          {\n            \"name\": \"sourceBlobName\",\n            \"in\": \"query\",\n            \"description\": \"Name of the blob which will be copied\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"destinationContainerName\",\n            \"in\": \"query\",\n            \"description\": \"Name of the destination container\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"destinationBlobName\",\n            \"in\": \"query\",\n            \"description\": \"Name of the destination blob. Optional, if not set it will be the same as source blob\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Operation is successful.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Void\"\n                }\n              }\n            }\n          },\n          \"202\": {\n            \"description\": \"Accepted.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Void\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"404\": {\n            \"description\": \"Container not found\"\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\"\n          }\n        },\n        \"deprecated\": false\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"MessageDescription\": {\n        \"required\": [\n          \"Content\",\n          \"Properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"Content\": {\n            \"$ref\": \"#/components/schemas/Content\"\n          },\n          \"Properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/Object\"\n            }\n          }\n        }\n      },\n      \"Content\": {\n        \"required\": [\n          \"ContentData\",\n          \"ContentType\",\n          \"ContentTransferEncoding\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"ContentData\": {\n            \"type\": \"string\"\n          },\n          \"ContentType\": {\n            \"type\": \"string\"\n          },\n          \"ContentTransferEncoding\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Object\": {\n        \"type\": \"object\",\n        \"properties\": {}\n      },\n      \"BlobDetailsItem\": {\n        \"required\": [\n          \"BlobName\",\n          \"BlobPath\",\n          \"LastModified\",\n          \"BlobType\",\n          \"ContentType\",\n          \"AbsoluteUri\",\n          \"BlobSize\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"BlobName\": {\n            \"description\": \"Blob Name\",\n            \"type\": \"string\"\n          },\n          \"BlobPath\": {\n            \"description\": \"Blob Path\",\n            \"type\": \"string\"\n          },\n          \"LastModified\": {\n            \"description\": \"Last Modified\",\n            \"type\": \"string\"\n          },\n          \"BlobType\": {\n            \"description\": \"Blob Type\",\n            \"type\": \"string\"\n          },\n          \"ContentType\": {\n            \"description\": \"Content Type\",\n            \"type\": \"string\"\n          },\n          \"AbsoluteUri\": {\n            \"description\": \"Absolute Uri\",\n            \"type\": \"string\"\n          },\n          \"BlobSize\": {\n            \"format\": \"int64\",\n            \"description\": \"Blob Size\",\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"Void\": {\n        \"type\": \"object\",\n        \"properties\": {}\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/Azure/autorest.modeler@cd313a2b54e9ab0c8f629c056259daaa0da69b36/-/blob/test/Resource/Swagger/swagger-no-content.json",
			"externalURLs": [
				{
					"url": "https://github.com/Azure/autorest.modeler/blob/cd313a2b54e9ab0c8f629c056259daaa0da69b36/test/Resource/Swagger/swagger-no-content.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/Blob/Upload\": post: requestBody: contents: application/x-www-form-urlencoded: form parameter \"Properties\": object with additionalProperties not implemented",
	"NotImplemented": [
		"object with additionalProperties",
		"unsupported content types"
	]
}