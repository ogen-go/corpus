{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/microsoft/openpaimarketplace"
		},
		"file": {
			"name": "marketplace_api.yaml",
			"size": 0,
			"path": "rest_server/marketplace_api.yaml",
			"byteSize": 8946,
			"content": "openapi: 3.0.0\ninfo:\n  version: \"2.0.0\"\n  title: \"Marketplace API\"\ntags:\n  - name: Item\n  - name: User\npaths:\n  /items:\n    post:\n      tags:\n        - Item\n      summary: Add a new marketplace item\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/MarketplaceItem\"\n      responses:\n        201:\n          description: Return item id if created successfully\n          content:\n            text/plain:\n              schema:\n                type: string\n        405:\n          $ref: \"#/components/responses/InvalidInput\"\n    get:\n      tags:\n        - Item\n      summary: List marketplace items\n      parameters:\n        - in: query\n          name: name\n          schema:\n            type: string\n        - in: query\n          name: author\n          schema:\n            type: string\n        - in: query\n          name: type\n          schema:\n            type: string\n        - in: query\n          name: keyword\n          schema:\n            type: string\n        - in: query\n          name: source\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/MarketplaceItem\"\n\n  /items/{itemId}:\n    parameters:\n      - name: itemId\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Item\n      summary: Get specific marketplace item info\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MarketplaceItem\"\n        404:\n          $ref: \"#/components/responses/404NotFound\"\n    put:\n      tags:\n        - Item\n      summary: Update a marketplace item\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/MarketplaceItem\"\n      responses:\n        200:\n          description: OK\n        404:\n          $ref: \"#/components/responses/404NotFound\"\n        405:\n          $ref: \"#/components/responses/InvalidInput\"\n    delete:\n      tags:\n        - Item\n      summary: delete a marketplace item\n      responses:\n        200:\n          description: OK\n        404:\n          $ref: \"#/components/responses/404NotFound\"\n  /storages/blobs:\n    get:\n      tags:\n        - Storage\n      parameters:\n        - name: type\n          in: query\n          schema:\n            type: string\n            enum: [blob]\n        - name: storageAccount\n          in: query\n          schema:\n            type: string\n        - name: containerName\n          in: query\n          schema:\n            type: string\n        - name: user\n          in: query\n          schema:\n            type: string\n      responses:\n        200:\n          description: Get blob storage matches query\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Storage\"\n    post:\n      tags:\n        - Storage\n      summary: Add a new blob storage\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              $ref: \"#/components/schemas/Storage\"\n      responses:\n        201:\n          description: Return storage id if created successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    format: uuid\n        400:\n          description: Database vlidation error\n          content:\n            text/plain:\n              schema:\n                type: string\n  /storages/blobs/{blobId}:\n    parameters:\n      - name: blobId\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Storage\n      summary: Get the blob storage of the specified id, 404 if not found\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Storage\"\n        404:\n          description: Not Found\n          content:\n            text/plain:\n              schema:\n                type: string\n    put:\n      tags:\n        - Storage\n      summary: Update the blob storage of the specified id.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Storage\"\n      responses:\n        200:\n          description: Updated successfully\n          content:\n            text/plain:\n              schema:\n                type: string\n        404:\n          description: Blob not found\n          content:\n            text/plain:\n              schema:\n                type: string\n    delete:\n      tags:\n        - Storage\n      summary: Delete the blob storage of the specified id.\n      responses:\n        200:\n          description: Deleted successfully\n          content:\n            text/plain:\n              schema:\n                type: string\n        404:\n          description: Blob not found\n          content:\n            text/plain:\n              schema:\n                type: string\n\ncomponents:\n  schemas:\n    MarketplaceItem:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        author:\n          type: string\n        type:\n          type: string\n        source:\n          type: string\n          enum: [marketplace, pai]\n        isPublic:\n          type: boolean\n        isPrivate:\n          type: boolean\n        groupList:\n          type: array\n          items:\n            type: string\n        dataType:\n          type: string\n        dataUrl:\n          type: string\n        categories:\n          type: array\n          items:\n            type: string\n        tags:\n          type: array\n          items:\n            type: string\n        summary:\n          type: string\n        description:\n          type: string\n        status:\n          type: string\n          enum: [pending, approved, rejected]\n        protocol:\n          type: string\n          description: \"https://github.com/microsoft/openpai-protocol/blob/master/schemas/v2/schema.yaml\"\n        useNumber:\n          type: number\n        starNumber:\n          type: number\n        createdAt:\n          type: string\n          format: \"date-time\"\n        updatedAt:\n          type: string\n          format: \"date-time\"\n      required:\n        - id\n        - name\n        - author\n        - type\n        - isPublic\n        - isPrivate\n        - groupList\n    Storage:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        type:\n          type: string\n          enum: [blob]\n        storageAccount:\n          type: string\n        containerName:\n          type: string\n        connectionStrings:\n          type: array\n          items:\n            type: string\n        tokens:\n          type: array\n          items:\n            type: string\n        users:\n          type: array\n          items:\n            type: string\n        createdAt:\n          type: string\n          format: \"date-time\"\n        updatedAt:\n          type: string\n          format: \"date-time\"\n      required:\n        - type\n        - storageAccount\n        - containerName\n        - connectionStrings\n    Data:\n      type: object\n      properties:\n        type:\n          type: string\n          description: public or platform\n        content:\n          oneOf:\n            - $ref: \"#/components/schemas/PlatformStorage\"\n            - $ref: \"#/components/schemas/PublicStorage\"\n    PlatformStorage:\n      type: object\n      properties:\n        storageName:\n          type: string\n        type:\n          type: string\n          description: pai storage type, nfs or azure blob\n        group:\n          type: string\n    PublicStorage:\n        type: object\n        properties:\n          url:\n            type: string\n          processScript:\n            type: string\n    Docker:\n      type: object\n      description: TODO\n      properties:\n        todo:\n          type: string\n    Model:\n      type: object\n      description: TODO\n      properties:\n        todo:\n          type: string\n    Job:\n      type: object\n      properties:\n        config:\n          type: string\n    User:\n      type: object\n      properties:\n        name:\n          type: string\n        groups:\n          type: array\n          items:\n            type: string\n\n  responses:\n    404NotFound:\n      description: The specified resource was not found.\n    InvalidInput:\n      description: Invalid input\n",
			"canonicalURL": "/github.com/microsoft/openpaimarketplace@d907dc2183935f0f570255c1887a0496b66406bc/-/blob/rest_server/marketplace_api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/microsoft/openpaimarketplace/blob/d907dc2183935f0f570255c1887a0496b66406bc/rest_server/marketplace_api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/items\": post: responses: 201: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"unsupported content types"
	]
}