{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/evernym/verity"
		},
		"file": {
			"name": "rest-openapi.yaml",
			"size": 0,
			"path": "doc/rest-openapi.yaml",
			"byteSize": 35251,
			"content": "openapi: 3.0.0\n# Added by API Auto Mocking Plugin\nservers:\n  # Added by API Auto Mocking Plugin\n  - description: SwaggerHub API Auto Mocking\n    url: https://virtserver.swaggerhub.com/Toktar/VerityAPI/1.0.0\ninfo:\n  version: \"1.0.0\"\n  title: verity-api\n  description: The REST API for Verity server\npaths:\n  '/api/{domainDID}/write-schema/0.6/{threadId}':\n    post:\n      tags:\n        - WriteSchema\n      operationId: writeSchema\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: domainDID\n          in: path\n          required: true\n          schema:\n            type: string\n            example: VntEDhbvXepaPyU3uxq2eP\n        - name: threadId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WriteSchemaRequest'\n      responses:\n        '202':\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: Accepted\n      callbacks:\n        respose to client:\n          '{$clientEndpointFromConnectionData}':\n            post:\n              requestBody:\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/WriteSchemaResponse'\n              responses:\n                '200':\n                  description: OK\n  '/api/{domainDID}/write-cred-def/0.6/{threadId}':\n    post:\n      tags:\n        - WriteCredDef\n      operationId: writeCredDef\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: domainDID\n          in: path\n          required: true\n          schema:\n            type: string\n            example: VntEDhbvXepaPyU3uxq2eP\n        - name: threadId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WriteCredDefRequest'\n      responses:\n        '202':\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: Accepted\n      callbacks:\n        respose to client:\n          '{$clientEndpointFromConnectionData}':\n            post:\n              requestBody:\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/WriteCredDefResponse'\n              responses:\n                '202':\n                  description: OK\n  '/api/{domainDID}/update-configs/0.6/{threadId}':\n    get:\n      tags:\n        - UpdateConfigs\n      description: returns user's configs\n      operationId: getStatusUpdateConfigs\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: domainDID\n          in: path\n          required: true\n          schema:\n            type: string\n            example: VntEDhbvXepaPyU3uxq2eP\n        - name: threadId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n      responses:\n        '200':\n          description: User configs\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateConfigsResponse'\n    post:\n      tags:\n        - UpdateConfigs\n      operationId: updateConfigs\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: domainDID\n          in: path\n          required: true\n          schema:\n            type: string\n            example: VntEDhbvXepaPyU3uxq2eP\n        - name: threadId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateConfigsRequest'\n      responses:\n        '202':\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: Accepted\n      callbacks:\n        respose to client:\n          '{$clientEndpointFromConnectionData}':\n            post:\n              requestBody:\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/UpdateConfigsResponse'\n              responses:\n                '202':\n                  description: OK\n\n  '/api/{domainDID}/connecting/0.6/{threadId}':\n    get:\n      tags:\n        - Connecting\n      description: returns connecting data\n      operationId: getConnectingData\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: domainDID\n          in: path\n          required: true\n          schema:\n            type: string\n            example: VntEDhbvXepaPyU3uxq2eP\n        - name: threadId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectingStatusResponse'\n    post:\n      tags:\n        - Connecting\n      operationId: connecting\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: domainDID\n          in: path\n          required: true\n          schema:\n            type: string\n            example: VntEDhbvXepaPyU3uxq2eP\n        - name: threadId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectingRequest'\n      responses:\n        '202':\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: Accepted\n      callbacks:\n        respose to client:\n          '{$clientEndpointFromConnectionData}':\n            post:\n              requestBody:\n                content:\n                  application/json:\n                    schema:\n                      oneOf:\n                        - $ref: '#/components/schemas/ConnectingReqResponse'\n                        - $ref: '#/components/schemas/ConnectingRequestAccepted'\n              responses:\n                '200':\n                  description: OK\n\n  '/api/{domainDID}/issue-credential/0.6/{threadId}':\n    get:\n      tags:\n        - IssueCredential\n      description: get credantial status\n      operationId: getStatus\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: domainDID\n          in: path\n          required: true\n          schema:\n            type: string\n            example: VntEDhbvXepaPyU3uxq2eP\n        - name: threadId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n        - in: query\n          name: '~for_relationship'\n          required: true\n          description: pairwise did\n          schema:\n            type: string\n            example: 3kDecNDa33qAsFv5Th7juC\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IssueCredentialStatusReport'\n\n    post:\n      tags:\n        - IssueCredential\n      operationId: issueCredential\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: domainDID\n          in: path\n          required: true\n          schema:\n            type: string\n            example: VntEDhbvXepaPyU3uxq2eP\n        - name: threadId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/SendOffer'\n                - $ref: '#/components/schemas/IssueCredential'\n      responses:\n        '202':\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: Accepted\n      callbacks:\n        respose to client:\n          '{$clientEndpointFromConnectionData}':\n            post:\n              requestBody:\n                content:\n                  application/json:\n                    schema:\n                      oneOf:\n                        - $ref: '#/components/schemas/AskAccept'\n              responses:\n                '200':\n                  description: OK\n  '/api/{domainDID}/present-proof/0.6/{threadId}':\n    get:\n      tags:\n        - PresentProof\n      description: Get present proof status\n      operationId: getPresentProofStatus\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: domainDID\n          in: path\n          required: true\n          schema:\n            type: string\n            example: VntEDhbvXepaPyU3uxq2eP\n        - name: threadId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PresentProofStatusReport'\n    post:\n      tags:\n        - PresentProof\n      description: Present proof protocol\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: domainDID\n          in: path\n          required: true\n          schema:\n            type: string\n            example: VntEDhbvXepaPyU3uxq2eP\n        - name: threadId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PresentProofRequest'\n      responses:\n        '202':\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: Accepted\n      callbacks:\n        respose to client:\n          '{$clientEndpointFromConnectionData}':\n            post:\n              requestBody:\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/AskAccept'\n              responses:\n                '200':\n                  description: OK\n  '/api/{domainDID}/committedanswer/1.0/{threadId}':\n    get:\n      tags:\n        - CommittedAnswer\n      description: Get question status\n      operationId: committedAnswer\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: domainDID\n          in: path\n          required: true\n          schema:\n            type: string\n            example: VntEDhbvXepaPyU3uxq2eP\n        - name: threadId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n        - in: query\n          name: '~for_relationship'\n          required: true\n          description: pairwise did\n          schema:\n            type: string\n            example: 3kDecNDa33qAsFv5Th7juC\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QuestionStatusReportResult'\n    post:\n      tags:\n        - CommittedAnswer\n      description: Ask question\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: domainDID\n          in: path\n          required: true\n          schema:\n            type: string\n            example: VntEDhbvXepaPyU3uxq2eP\n        - name: threadId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AskQuestion'\n      responses:\n        '202':\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: Accepted\n      callbacks:\n        respose to client:\n          '{$clientEndpointFromConnectionData}':\n            post:\n              requestBody:\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/AnswerGiven'\n              responses:\n                '200':\n                  description: OK\n  '/api/{domainDID}/issuer-setup/0.6/{threadId}':\n    post:\n      tags:\n        - IssuerSetup\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: domainDID\n          in: path\n          required: true\n          schema:\n            type: string\n            example: VntEDhbvXepaPyU3uxq2eP\n        - name: threadId\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/CreateIssuer'\n                - $ref: '#/components/schemas/CurrentPublicIdentifier'\n      responses:\n        '202':\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: Accepted\n      callbacks:\n        respose to client:\n          '{$clientEndpointFromConnectionData}':\n            post:\n              requestBody:\n                content:\n                  application/json:\n                    schema:\n                      oneOf:\n                        - $ref: '#/components/schemas/CreateIssuerCreated'\n                        - $ref: '#/components/schemas/PublicIdentifier'\n              responses:\n                '200':\n                  description: OK\n  '/api/{domainDID}/configs/0.6/':\n    post:\n      tags:\n        - UpdateEndpoint\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - name: domainDID\n          in: path\n          required: true\n          schema:\n            type: string\n            example: VntEDhbvXepaPyU3uxq2eP\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateEndpoint'\n      responses:\n        '202':\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: Accepted\n      callbacks:\n        respose to client:\n          '{$clientEndpointFromConnectionData}':\n            post:\n              requestBody:\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/UpdateEndpointResult'\n              responses:\n                '200':\n                  description: OK\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:        # arbitrary name for the security scheme\n      type: apiKey\n      in: header       # can be \"header\", \"query\" or \"cookie\"\n      name: X-API-KEY\n  schemas:\n    UpdateConfigsRequest:\n      type: object\n      required:\n        - '@type'\n        - configs\n      properties:\n        '@type':\n          type: string\n          example: 'did:sov:123456789abcdefghi1234;spec/update-configs/0.6/update'\n        '@id':\n          type: string\n          description: random id\n          format: uuid\n          example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n        configs:\n          type: array\n          items:\n            $ref: '#/components/schemas/ConfigDetail'\n    UpdateConfigsResponse:\n      type: object\n      required:\n        - '@type'\n        - configs\n      properties:\n        '@type':\n          type: string\n          example: 'did:sov:123456789abcdefghi1234;spec/update-configs/0.6/status-report'\n        '~thread':\n          $ref: '#/components/schemas/Thread'\n        configs:\n          type: array\n          items:\n            $ref: '#/components/schemas/ConfigDetail'\n    ConfigDetail:\n      type: object\n      properties:\n        name:\n          type: string\n          example: 'logoUrl'\n        value:\n          type: string\n          example: 'http://example.com/logo.ico'\n\n    WriteSchemaRequest:\n      type: object\n      properties:\n        '@type':\n          type: string\n          example: 'did:sov:123456789abcdefghi1234;spec/write-schema/0.6/write'\n        '@id':\n          type: string\n          description: random id\n          format: uuid\n          example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n        name:\n          type: string\n          description: name of schema\n          example: license\n        version:\n          type: string\n          description: version of schema\n          example: 0.1\n        attrNames:\n          type: array\n          items:\n            type: string\n          description: attributes of schema\n          example: [license_num, name]\n    WriteSchemaResponse:\n      type: object\n      properties:\n        '@type':\n          type: string\n          example: 'did:sov:123456789abcdefghi1234;spec/write-schema/0.6/status-report'\n        '~thread':\n          $ref: '#/components/schemas/Thread'\n        schemaId:\n          type: string\n          example: 39YBdt6BLWLJAUPA8NvwDX:2:license:0.1\n    WriteCredDefRequest:\n      type: object\n      properties:\n        '@type':\n          type: string\n          example: 'did:sov:123456789abcdefghi1234;spec/write-cred-def/0.6/write'\n        '@id':\n          type: string\n          format: uuid\n          description: random id\n          example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n        name:\n          type: string\n          description: name of cred def\n          example: cred_name1\n        tag:\n          type: string\n          example: tag\n        schemaId:\n          type: string\n          description: schema id of schema to be used\n          example: 39YBdt6BLWLJAUPA8NvwDX:2:license:0.1\n        revocationDetails:\n          $ref: '#/components/schemas/RevocationDetails'\n    RevocationDetails:\n      type: object\n      properties:\n        support_revocation:\n          type: boolean\n          example: false\n        tails_file:\n          type: string\n          description: required if `support_revocation` is true\n        max_creds:\n          type: integer\n          description: required if `support_revocation` is true\n    WriteCredDefResponse:\n      type: object\n      properties:\n        '@type':\n          type: string\n          example: 'did:sov:123456789abcdefghi1234;spec/write-cred-def/0.6/status-report'\n        '~thread':\n          $ref: '#/components/schemas/Thread'\n        credDefId:\n          type: string\n          example: 39YBdt6BLWLJAUPA8NvwDX:3:CL:55:tag\n\n    ConnectingRequest:\n      type: object\n      properties:\n        '@type':\n          type: string\n          example: 'did:sov:123456789abcdefghi1234;spec/connecting/0.6/CREATE_CONNECTION'\n        '@id':\n          type: string\n          format: uuid\n          description: random id\n          example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n        sourceId:\n          type: string\n          format: uuid\n          description: can be random uuid\n          example: 7d045e6d-dd32-428b-95c3-29313f5fd61c\n        includePublicDID:\n          type: boolean\n          description: should invite include public DID\n          example: false\n\n    ConnectingReqResponse:\n      type: object\n      properties:\n        '@type':\n          type: string\n          example: 'did:sov:123456789abcdefghi1234;spec/connecting/0.6/CONN_REQUEST_RESP'\n        '~thread':\n          $ref: '#/components/schemas/Thread'\n        urlToInviteDetail:\n          type: string\n          example: 'localhost:9003/agency/invite/3kDecNDa33qAsFv5Th7juC?uid=cee13682-acb4-4690-a985-97d1958423a9'\n        urlToInviteDetailEncoded:\n          type: string\n          example: 'localhost%3A9003%2Fagency%2Finvite%2F3kDecNDa33qAsFv5Th7juC%3Fuid%3Dcee13682-acb4-4690-a985-97d1958423a9'\n        sourceId:\n          type: string\n          format: uid\n          example: 9b0e7996-3882-474f-916a-68b7da5a15ab\n        inviteDetail:\n          $ref: '#/components/schemas/InviteDetail'\n\n    ConnectingRequestAccepted:\n      type: object\n      properties:\n        '@type':\n          type: string\n          example: 'did:sov:123456789abcdefghi1234;spec/connecting/0.6/CONN_REQ_ACCEPTED'\n        '~thread':\n          $ref: '#/components/schemas/Thread'\n        '@msg':\n          $ref: '#/components/schemas/ConnectingRequestAcceptedMsg'\n\n    ConnectingRequestAcceptedMsg:\n      type: object\n      properties:\n        senderDetail:\n          $ref: '#/components/schemas/SenderDetail'\n\n    InviteDetail:\n      type: object\n      properties:\n        statusMsg:\n          type: string\n          example: message created\n        connReqId:\n          type: string\n          format: uid\n          example: cee13682-acb4-4690-a985-97d1958423a9\n        targetName:\n          type: string\n          example: there\n        version:\n          type: string\n          example: 2.0\n        statusCode:\n          type: string\n          example: MS-101\n        senderDetail:\n          $ref: '#/components/schemas/SenderDetail'\n        senderAgencyDetail:\n          $ref: '#/components/schemas/SenderAgencyDetail'\n\n    SenderDetail:\n      type: object\n      properties:\n        name:\n          type: string\n          example: name1\n        verKey:\n          type: string\n          example: 2VnCSfAPT29kQsHgXjAhcMYJomUGHvQ6Ws5Hkwt3D3QZ\n        DID:\n          type: string\n          example: 3kDecNDa33qAsFv5Th7juC\n        logoUrl:\n          type: string\n          example: /logo_url.ico\n\n    SenderAgencyDetail:\n      type: object\n      properties:\n        endpoint:\n          type: string\n          example: localhost:9003/agency/msg\n        verKey:\n          type: string\n          example: ETLgZKeQEKxBW7gXA6FBn7nBwYhXFoogZLCCn5EeRSQV\n        DID:\n          type: string\n          example: Rgj7LVEonrMzcRC1rhkx76\n\n\n    PresentProofStatusReport:\n      type: object\n      description: You must provide the same threadId as received in ask-accept msg.\n      properties:\n        '@type':\n          type: string\n          example: 'did:sov:123456789abcdefghi1234;spec/present-proof/0.6/status-report'\n        '@id':\n          type: string\n          format: uuid\n          description: random id\n          example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n\n    SendOffer:\n      type: object\n      properties:\n        '@type':\n          type: string\n          example: 'did:sov:123456789abcdefghi1234;spec/issue-credential/0.6/send-offer'\n        '@id':\n          type: string\n          format: uuid\n          description: random id\n          example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n        '~for_relationship':\n          type: string\n          description: pairwise did\n          example: YBXSwfA9GFgkb9xDeDvMUf\n        name:\n          type: string\n          description: name of credential\n          example: credName\n        credDefId:\n          type: string\n          description: id of credential definition used\n          example: KwgzAuJxWTZMJwfN7pbX6P:3:CL:104:tag\n        credentialValues:\n          type: object\n          description: JSON, key-value pairs of credential values\n          additionalProperties:\n            type: string\n            example:\n              license_num: '123'\n              name: Bob\n        price:\n          type: string\n          description: price of credential\n          example: 0\n\n    IssueCredential:\n      type: object\n      description: You must provide the same threadId as received in ask-accept msg.\n      properties:\n        '@type':\n          type: string\n          example: 'did:sov:123456789abcdefghi1234;spec/issue-credential/0.6/issue-credential'\n        '@id':\n          type: string\n          format: uuid\n          description: random id\n          example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n        '~for_relationship':\n          type: string\n          description: pairwise did\n          example: YBXSwfA9GFgkb9xDeDvMUf\n    AskAccept:\n      type: object\n      description: You must provide the same threadId as received in ask-accept msg.\n      properties:\n        '@type':\n          type: string\n          example: 'did:sov:123456789abcdefghi1234;spec/issue-credential/0.6/ask-accept'\n        '@id':\n          type: string\n          format: uuid\n          description: random id\n          example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n        credOffer:\n          $ref: '#/components/schemas/CredOffer'\n    CredOffer:\n      type: object\n      properties:\n        libindy_cred_req:\n          $ref: '#/components/schemas/LibindyCredReq'\n        libindy_cred_req_meta:\n          $ref: '#/components/schemas/LibindyCredReqMeta'\n        cred_def_id:\n          type: string\n          example: TUWeK6bhVKqQ3TASQuRB3A:3:CL:29:tag\n        tid:\n          type: string\n        to_did:\n          type: string\n          example: Wjpy5ta9Cyu6J4nGeydJZz\n        from_did:\n          type: string\n          example: BC8TifwEz1rSSfYyHkeJfR\n        version:\n          type: string\n          example: 0.1\n        mid:\n          type: string\n        msg_ref_id:\n          type: string\n    LibindyCredReq:\n      type: object\n    LibindyCredReqMeta:\n      type: object\n    IssueCredentialStatusReport:\n      type: object\n      properties:\n        'result':\n          $ref: '#/components/schemas/IssueCredentialStatusReportResult'\n        'status':\n          type: string\n          example: OK\n    IssueCredentialStatusReportResult:\n      type: object\n      properties:\n        '@type':\n          type: string\n          example: 'did:sov:123456789abcdefghi1234;spec/issue-credential/0.6/status-report'\n        '~thread':\n          $ref: '#/components/schemas/Thread'\n        status:\n          type: string\n          example: 'Initialized'\n\n    PresentProofRequest:\n      type: object\n      properties:\n        '@type':\n          type: string\n          example: 'did:sov:123456789abcdefghi1234;spec/present-proof/0.6/request'\n        '@id':\n          type: string\n          format: uuid\n          description: random id\n          example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n        name:\n          type: string\n          description: name of proof\n          example: proof-request-1\n        proofAttrs:\n          type: array\n          description: array of proof attributes\n          items:\n            $ref: '#/components/schemas/ProofAttr'\n        proofPredicates:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProofPredicate'\n        revocationInterval:\n          type: array\n          items:\n            $ref: '#/components/schemas/RevocationInterval'\n    ProofAttr:\n      type: object\n      properties:\n        name:\n          type: string\n          example: license_num\n        restrictions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Restriction'\n        non_revoked:\n          $ref: '#/components/schemas/RevocationInterval'\n    Restriction:\n      type: object\n      properties:\n        issuer_did:\n          type: string\n          example: KwgzAuJxWTZMJwfN7pbX6P\n    RevocationInterval:\n      type: object\n      properties:\n        from:\n          type: string\n          format: date-time\n          description: timestamp\n          example: 1587674566\n        to:\n          type: string\n          format: date-time\n          description: timestamp\n          example: 1587674566\n    ProofPredicate:\n      type: object\n      properties:\n        name:\n          type: string\n          description: name of predicate\n        p_type:\n          type: string\n          description: type of predicate\n        p_value:\n          type: integer\n          description: value of predicate\n        restrictions:\n          type: object\n    ProofResult:\n      type: object\n      properties:\n        '@type':\n          type: string\n          example: 'did:sov:123456789abcdefghi1234;spec/present-proof/0.6/proof-result'\n        '@id':\n          type: string\n          format: uuid\n          description: random id\n          example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n        requestedProof:\n          $ref: '#/components/schemas/RequestedProof'\n        status:\n          type: string\n          example: ProofValidated\n    RequestedProof:\n      type: object\n      properties:\n        selfAttestedAttrs:\n          type: object\n        revealedAttrs:\n          type: object\n        predicates:\n          type: object\n        unrevealedAttrs:\n          type: object\n        identifiers:\n          type: object\n          additionalProperties:\n            type: string\n            example:\n              schemaId: TUWeK6bhVKqQ3TASQuRB3A:2:license:0.1\n              credDefId: TUWeK6bhVKqQ3TASQuRB3A:3:CL:29:tag\n    CurrentPublicIdentifier:\n      type: object\n      properties:\n        '@type':\n          type: string\n          example: 'did:sov:123456789abcdefghi1234;spec/issuer-setup/0.6/current-public-identifier'\n        '@id':\n          type: string\n          format: uuid\n          description: random id\n          example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n    PublicIdentifier:\n      type: object\n      properties:\n        '@type':\n          type: string\n          example: 'did:sov:123456789abcdefghi1234;spec/issuer-setup/0.6/public-identifier'\n        '~thread':\n          $ref: '#/components/schemas/Thread'\n        verKey:\n          type: string\n          example: FRuXtyFNy7fZotLpa6ud7T18xafYu2wwUYQa4YNoi2Yu\n        did:\n          type: string\n          example: TUWeK6bhVKqQ3TASQuRB3A\n    CreateIssuer:\n      type: object\n      properties:\n        '@type':\n          type: string\n          example: 'did:sov:123456789abcdefghi1234;spec/issuer-setup/0.6/create'\n        '@id':\n          type: string\n          format: uuid\n          description: random id\n          example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n    CreateIssuerCreated:\n      type: object\n      properties:\n        '@type':\n          type: string\n          example: 'did:sov:123456789abcdefghi1234;spec/issuer-setup/0.6/public-identifier-created'\n        '~thread':\n          $ref: '#/components/schemas/Thread'\n        identifier:\n          $ref: '#/components/schemas/Identifier'\n    Identifier:\n      type: object\n      properties:\n        verKey:\n          type: string\n          example: FRuXtyFNy7fZotLpa6ud7T18xafYu2wwUYQa4YNoi2Yu\n        did:\n          type: string\n          example: TUWeK6bhVKqQ3TASQuRB3A\n\n    AskQuestion:\n      type: object\n      properties:\n        '@type':\n          type: string\n          example: 'did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/committedanswer/1.0/ask-question'\n        '@id':\n          type: string\n          format: uuid\n          description: random id\n          example: 0729a580-2240-11e6-9eb5-0002a5d5c51b\n        '~for_relationship':\n          type: string\n          description: pairwise did\n          example: YBXSwfA9GFgkb9xDeDvMUf\n        text:\n          type: string\n          description: text of question\n          example: To be or to not be?\n        detail:\n          type: string\n          description: question description\n          example: The second classic philosophical questions\n        valid_responses:\n          type: array\n          description: valid responses\n          items:\n            type: string\n          example: ['be','not be']\n        signature_required:\n          type: boolean\n          description: is signed response required\n          example: true\n    AnswerGiven:\n      type: object\n      properties:\n        '@type':\n          type: string\n          example: 'did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/committedanswer/1.0/answer-given'\n        '~thread':\n          $ref: '#/components/schemas/Thread'\n        valid_signature:\n          type: boolean\n          example: true\n        valid_answer:\n          type: boolean\n          example: true\n        not_expired:\n          type: boolean\n          example: true\n        answer:\n          type: string\n          example: be\n    QuestionStatusReport:\n      type: object\n      properties:\n        result:\n          $ref: '#/components/schemas/QuestionStatusReportResult'\n        status:\n          type: string\n          example: OK\n    QuestionStatusReportResult:\n      type: object\n      properties:\n        '@type':\n          type: string\n          example: 'did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/committedanswer/1.0/status-report'\n        '~thread':\n          $ref: '#/components/schemas/Thread'\n        status:\n          type: string\n          example: AnswerReceived\n        answer:\n          $ref: '#/components/schemas/AnswerData'\n    AnswerData:\n      type: object\n      properties:\n        valid_signature:\n          type: boolean\n          example: true\n        valid_answer:\n          type: boolean\n          example: true\n        not_expired:\n          type: boolean\n          example: true\n        answer:\n          type: string\n          example: be\n    ConnectingStatusResponse:\n      type: object\n      properties:\n        result:\n          $ref: '#/components/schemas/ConnectingStatus'\n        status:\n          type: string\n          example: OK\n    ConnectingStatus:\n      type: object\n      properties:\n        '@type':\n          type: string\n          example: did:sov:123456789abcdefghi1234;spec/connecting/0.6/status-report\n        '~thread':\n          $ref: '#/components/schemas/Thread'\n        status:\n          type: string\n          example: ConnectionAccepted\n    UpdateEndpoint:\n      type: object\n      properties:\n        '@type':\n          type: string\n          example: did:sov:123456789abcdefghi1234;spec/configs/0.6/UPDATE_COM_METHOD\n        'comMethod':\n          $ref: '#/components/schemas/UpdateEndpointMethod'\n    UpdateEndpointMethod:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Webhook id\n          example: webhook\n        value:\n          type: string\n          example: http://localhost:6001\n        type:\n          type: integer\n          description: Webhook type\n          example: 2\n    UpdateEndpointResult:\n      type: object\n      properties:\n        '@type':\n          type: string\n          example: did:sov:123456789abcdefghi1234;spec/configs/0.6/COM_METHOD_UPDATED\n        id:\n          type: string\n          description: Webhook id\n          example: webhook\n    Thread:\n      type: object\n      properties:\n        thid:\n          type: string\n          example: ccfc6db3-44a2-499f-b7b8-29cb74140111",
			"canonicalURL": "/github.com/evernym/verity@c99c10bd1f75674d1460c60b5b610cf22a518bd8/-/blob/doc/rest-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/evernym/verity/blob/c99c10bd1f75674d1460c60b5b610cf22a518bd8/doc/rest-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/{domainDID}/configs/0.6/\": post: responses: 202: contents: unsupported content types: [text/plain]",
	"NotImplemented": [
		"discriminator inference",
		"unsupported content types"
	]
}