{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/pdfblocks.com/1.5.0/openapi.yaml",
			"byteSize": 20489,
			"content": "openapi: 3.0.0\nservers:\n  - description: Global endpoint (default).\n    url: https://api.pdfblocks.com\n  - description: European-only endpoint.\n    url: https://eu.api.pdfblocks.com\ninfo:\n  contact:\n    email: support@pdfblocks.com\n    name: PDF Blocks Support\n    url: https://www.pdfblocks.com/support\n  description: \"PDF Blocks is a secure, reliable, and fast API to work with PDF documents. Actions include: Merge PDF documents, add or remove passwords, add watermarks, remove, extract, reverse, and rotate pages, and more.\"\n  termsOfService: https://www.pdfblocks.com/terms\n  title: PDF Blocks API\n  version: 1.5.0\n  x-apisguru-categories:\n    - text\n  x-logo:\n    url: https://www.pdfblocks.com/assets/images/pdfblocks-logo.svg\n  x-origin:\n    - format: openapi\n      url: https://www.pdfblocks.com/assets/specs/pdfblocks.openapi.yaml\n      version: \"3.0\"\n  x-providerName: pdfblocks.com\nexternalDocs:\n  description: Documentation and examples\n  url: https://www.pdfblocks.com/docs/api/v1\nsecurity:\n  - apiKey: []\npaths:\n  /v1/add_password:\n    post:\n      description: Protect a PDF document with a password. Encrypt the PDF document to prevent unauthorized access.\n      externalDocs:\n        description: Documentation and examples\n        url: https://www.pdfblocks.com/docs/api/v1/add-password\n      operationId: addPasswordV1\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                encryption_algorithm:\n                  default: AES-128\n                  description: The algorithm used to encrypt the PDF document.\n                  enum:\n                    - AES-128\n                    - AES-256\n                  example: AES-128\n                  type: string\n                file:\n                  description: The input PDF document\n                  format: binary\n                  type: string\n                password:\n                  description: The password required to open the file.\n                  example: pa$$word\n                  maxLength: 32\n                  minLength: 4\n                  pattern: ^[\\x20-\\x7e]{4,32}$\n                  type: string\n              required:\n                - file\n                - password\n              type: object\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/success\"\n        4XX:\n          $ref: \"#/components/responses/error\"\n      summary: Add a password to a PDF\n  /v1/add_restrictions:\n    post:\n      description: Add restrictions to prevent copying, printing, and modifying a PDF document.\n      externalDocs:\n        description: Documentation and examples\n        url: https://www.pdfblocks.com/docs/api/v1/add-restrictions\n      operationId: addRestrictionsV1\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                allow_accessibility:\n                  default: true\n                  description: If false, accessibility programs can't read the text or images of the document.\n                  type: boolean\n                allow_assemble_document:\n                  default: true\n                  description: If false, the user can't assemble or manipulate the document.\n                  type: boolean\n                allow_change_content:\n                  default: true\n                  description: If false, the user can't change the content of the document.\n                  type: boolean\n                allow_comment_and_fill_form:\n                  default: true\n                  description: If false, the user can't add, edit or modify annotations or fill form fields.\n                  type: boolean\n                allow_copy_content:\n                  default: true\n                  description: If false, the user can't copy text and images to the clipboard.\n                  type: boolean\n                allow_fill_form:\n                  default: true\n                  description: If false, the user can't fill forms fields.\n                  type: boolean\n                allow_print:\n                  default: true\n                  description: If false, the user can't print the document.\n                  type: boolean\n                allow_print_high_resolution:\n                  default: true\n                  description: If false, the user can't print the document in high resolution.\n                  type: boolean\n                encryption_algorithm:\n                  default: AES-128\n                  description: The algorithm used to encrypt the PDF document.\n                  enum:\n                    - AES-128\n                    - AES-256\n                  example: AES-128\n                  type: string\n                file:\n                  description: The input PDF document\n                  format: binary\n                  type: string\n                owner_password:\n                  description: The password required to open and change permissions of the PDF document.\n                  example: pa$$word\n                  maxLength: 32\n                  minLength: 4\n                  pattern: ^[\\x20-\\x7e]{4,32}$\n                  type: string\n                user_password:\n                  description: The password required to open the PDF document. If the `user_password` is not set, the user will be able to open the document without a password.\n                  example: pa$$word\n                  maxLength: 32\n                  minLength: 4\n                  pattern: ^[\\x20-\\x7e]{4,32}$\n                  type: string\n              required:\n                - file\n                - owner_password\n              type: object\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/success\"\n        4XX:\n          $ref: \"#/components/responses/error\"\n      summary: Add restrictions to a PDF\n  /v1/add_watermark/image:\n    post:\n      description: Add an image watermark to each page of a PDF document.\n      externalDocs:\n        description: Documentation and examples\n        url: https://www.pdfblocks.com/docs/api/v1/add-watermark-image\n      operationId: addImageWatermarkV1\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: The input PDF document\n                  format: binary\n                  type: string\n                image:\n                  description: The image to add as a watermark. The format of the image can be either PNG or JPEG.\n                  format: binary\n                  type: string\n                margin:\n                  default: 1\n                  description: The distance in inches from the border of the page to the image watermark.\n                  example: 1\n                  format: float\n                  minimum: 0\n                  type: number\n                transparency:\n                  default: 50\n                  description: The transparency level for the image watermark from 0 (opaque) to 100 (transparent).\n                  example: 50\n                  format: int32\n                  maximum: 100\n                  minimum: 0\n                  type: integer\n              required:\n                - file\n                - image\n              type: object\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/success\"\n        4XX:\n          $ref: \"#/components/responses/error\"\n      summary: Add an image watermark to a PDF\n  /v1/add_watermark/text:\n    post:\n      description: Add a text watermark to each page of a PDF document. Choose from several watermark templates.\n      externalDocs:\n        description: Documentation and examples\n        url: https://www.pdfblocks.com/docs/api/v1/add-watermark-text\n      operationId: addTextWatermarkV1\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                color:\n                  default: Gray\n                  description: The color of the text watermark.\n                  enum:\n                    - Red\n                    - Blue\n                    - Gray\n                    - Black\n                  example: Gray\n                  type: string\n                file:\n                  description: The input PDF document\n                  format: binary\n                  type: string\n                line_1:\n                  description: The first line of text of the watermark.\n                  example: Jane Doe\n                  maxLength: 32\n                  type: string\n                line_2:\n                  description: The second line of text of the watermark.\n                  example: ACME, Inc\n                  maxLength: 32\n                  type: string\n                line_3:\n                  description: The third line of text of the watermark.\n                  example: Confidential\n                  maxLength: 32\n                  type: string\n                margin:\n                  default: 1\n                  description: The distance in inches from the border of the page to the text watermark.\n                  example: 1\n                  format: float\n                  minimum: 0\n                  type: number\n                template:\n                  default: 1001\n                  description: The [id of the text watermark template](https://www.pdfblocks.com/docs/api/v1/text-watermark-templates.pdf).\n                  example: 1001\n                  format: int32\n                  maximum: 66537\n                  minimum: 1001\n                  type: integer\n                transparency:\n                  default: 75\n                  description: The transparency level for the text watermark from 0 (opaque) to 100 (transparent).\n                  example: 75\n                  format: int32\n                  maximum: 100\n                  minimum: 0\n                  type: integer\n              required:\n                - file\n                - line_1\n              type: object\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/success\"\n        4XX:\n          $ref: \"#/components/responses/error\"\n      summary: Add a text watermark to a PDF\n  /v1/extract_pages:\n    post:\n      description: Extract one or more pages from a PDF document.\n      externalDocs:\n        description: Documentation and examples\n        url: https://www.pdfblocks.com/docs/api/v1/extract-pages\n      operationId: extractPagesV1\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: The input PDF document\n                  format: binary\n                  type: string\n                first_page:\n                  description: The first page of the range to extract. If empty, it defaults to the first page of the PDF document.\n                  format: int32\n                  minimum: 1\n                  type: integer\n                last_page:\n                  description: The last page of the range to extract. If empty, it defaults to the last page of the PDF document.\n                  format: int32\n                  minimum: 1\n                  type: integer\n              required:\n                - file\n              type: object\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/success\"\n        4XX:\n          $ref: \"#/components/responses/error\"\n      summary: Extract pages from a PDF\n  /v1/merge_documents:\n    post:\n      description: Combine multiple PDF documents into a single PDF document.\n      externalDocs:\n        description: Documentation and examples\n        url: https://www.pdfblocks.com/docs/api/v1/merge-documents\n      operationId: mergeDocumentsV1\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: The array of PDF documents. PDF documents will be merged in the same order they are inserted into this array.\n                  items:\n                    description: An input PDF document.\n                    format: binary\n                    type: string\n                  type: array\n              type: object\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/success\"\n        4XX:\n          $ref: \"#/components/responses/error\"\n      summary: Merge PDF documents\n  /v1/remove_pages:\n    post:\n      description: Remove one or more pages from a PDF document.\n      externalDocs:\n        description: Documentation and examples\n        url: https://www.pdfblocks.com/docs/api/v1/remove-pages\n      operationId: removePagesV1\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: The input PDF document\n                  format: binary\n                  type: string\n                first_page:\n                  description: The first page of the range to remove from the PDF document. If empty, it defaults to the first page of the document.\n                  format: int32\n                  minimum: 1\n                  type: integer\n                last_page:\n                  description: The last page of the range to remove from the PDF document. If empty, it defaults to the last page of the document.\n                  format: int32\n                  minimum: 1\n                  type: integer\n              required:\n                - file\n              type: object\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/success\"\n        4XX:\n          $ref: \"#/components/responses/error\"\n      summary: Remove pages from a PDF\n  /v1/remove_password:\n    post:\n      description: Remove the password from an encrypted PDF document. The PDF document will no longer require a password to open.\n      externalDocs:\n        description: Documentation and examples\n        url: https://www.pdfblocks.com/docs/api/v1/remove-password\n      operationId: removePasswordV1\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: The input PDF document\n                  format: binary\n                  type: string\n                password:\n                  description: The password required to open the file.\n                  example: pa$$word\n                  maxLength: 256\n                  type: string\n              required:\n                - file\n                - password\n              type: object\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/success\"\n        4XX:\n          $ref: \"#/components/responses/error\"\n      summary: Remove the password from a PDF\n  /v1/remove_restrictions:\n    post:\n      description: Remove all the restrictions from a PDF document.\n      externalDocs:\n        description: Documentation and examples\n        url: https://www.pdfblocks.com/docs/api/v1/remove-restrictions\n      operationId: removeRestrictionsV1\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: The input PDF document\n                  format: binary\n                  type: string\n              required:\n                - file\n              type: object\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/success\"\n        4XX:\n          $ref: \"#/components/responses/error\"\n      summary: Remove the restrictions from a PDF\n  /v1/remove_signatures:\n    post:\n      description: Remove the cryptographic signatures and timestamps from a PDF document.\n      externalDocs:\n        description: Documentation and examples\n        url: https://www.pdfblocks.com/docs/api/v1/remove-signatures\n      operationId: removeSignaturesV1\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: The input PDF document\n                  format: binary\n                  type: string\n              required:\n                - file\n              type: object\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/success\"\n        4XX:\n          $ref: \"#/components/responses/error\"\n      summary: Remove the signatures from a PDF\n  /v1/reverse_pages:\n    post:\n      description: Reverse the order of the pages of a PDF document.\n      externalDocs:\n        description: Documentation and examples\n        url: https://www.pdfblocks.com/docs/api/v1/reverse-pages\n      operationId: reversePagesV1\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: The input PDF document\n                  format: binary\n                  type: string\n              required:\n                - file\n              type: object\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/success\"\n        4XX:\n          $ref: \"#/components/responses/error\"\n      summary: Reverse the pages of a PDF\n  /v1/rotate_pages:\n    post:\n      description: Rotate one or more pages in a PDF document.\n      externalDocs:\n        description: Documentation and examples\n        url: https://www.pdfblocks.com/docs/api/v1/rotate-pages\n      operationId: rotatePagesV1\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                angle:\n                  description: The angle of rotation of the pages. Positive angles rotate the pages clockwise. Negative angles rotate the pages counter-clockwise.\n                  enum:\n                    - 0\n                    - 90\n                    - 180\n                    - 270\n                    - -90\n                    - -180\n                    - -270\n                  example: 90\n                  format: int32\n                  type: integer\n                file:\n                  description: The input PDF document\n                  format: binary\n                  type: string\n                first_page:\n                  description: The first page of the range to rotate in the PDF document. If empty, it defaults to the first page of the document.\n                  format: int32\n                  minimum: 1\n                  type: integer\n                last_page:\n                  description: The last page of the range to rotate in the PDF document. If empty, it defaults to the last page of the document.\n                  format: int32\n                  minimum: 1\n                  type: integer\n              required:\n                - file\n                - angle\n              type: object\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/success\"\n        4XX:\n          $ref: \"#/components/responses/error\"\n      summary: Rotate pages in a PDF\ncomponents:\n  responses:\n    error:\n      content:\n        application/problem+json:\n          example:\n            errors:\n              file:\n                - Could not parse the PDF document. The file may be invalid or corrupt.\n            status: 400\n            title: One or more validation errors occurred.\n            type: https://www.pdfblocks.com/docs/api/v1/error/400\n          schema:\n            properties:\n              errors:\n                type: object\n              status:\n                type: integer\n              title:\n                type: string\n              type:\n                format: url\n                type: string\n            type: object\n      description: Error\n    success:\n      content:\n        application/pdf:\n          schema:\n            description: The output PDF document\n            format: binary\n            type: string\n      description: The document was processed succesfully.\n  securitySchemes:\n    apiKey:\n      description: Find your API key in [your dashboard](https://dashboard.pdfblocks.com/users/sign_in), or [get a free API key](https://www.pdfblocks.com/try-free).\n      in: header\n      name: X-Api-Key\n      type: apiKey\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/pdfblocks.com/1.5.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/pdfblocks.com/1.5.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/v1/add_watermark/text\": post: responses: HTTP code pattern not implemented",
	"NotImplemented": [
		"HTTP code pattern"
	]
}