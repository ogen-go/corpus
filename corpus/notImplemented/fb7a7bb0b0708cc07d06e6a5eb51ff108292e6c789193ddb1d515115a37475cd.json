{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/ballerina-lang"
		},
		"file": {
			"name": "sample.yaml",
			"size": 0,
			"path": "tests/ballerina-tools-integration-test/src/test/resources/openapi/sample.yaml",
			"byteSize": 1124,
			"content": "#   Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved\n#\n#   Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n\nopenapi: 3.0.1\ninfo:\n  title: hello\n  version: 1.0.0\nservers:\n- url: say\npaths:\n  /sayHelloBBB:\n    get:\n      operationId: say-Hello\n      responses:\n        200:\n          description: Successful\n          content:\n            application/json:\n              example: Ok\n  /sayHelloAA:\n    get:\n      operationId: say Hello AA\n      responses:\n        200:\n          description: Successful\n          content:\n            application/json:\n              example: Ok\ncomponents: {}\n",
			"canonicalURL": "/github.com/ballerina-platform/ballerina-lang@d326b737940fd13f87a8902ccbbe6cb6defb0e51/-/blob/tests/ballerina-tools-integration-test/src/test/resources/openapi/sample.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/ballerina-lang/blob/d326b737940fd13f87a8902ccbbe6cb6defb0e51/tests/ballerina-tools-integration-test/src/test/resources/openapi/sample.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/sayHelloAA\": get: responses: 200: contents: application/json: generate schema: empty schema not implemented",
	"NotImplemented": [
		"empty schema"
	]
}