{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/iotaledger/tips"
		},
		"file": {
			"name": "rest-api.yaml",
			"size": 0,
			"path": "tips/TIP-0013/rest-api.yaml",
			"byteSize": 98871,
			"content": "openapi: 3.0.3\ninfo:\n  title: IOTA REST API\n  description: This document specifies the REST API for IOTA node software.\n  contact:\n    email: contact@iota.org\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n  version: 1.0.0\nexternalDocs:\n  description: Find out more about IOTA\n  url: 'https://iota.org'\nservers:\n  - url: 'http://127.0.0.1:14265'\ntags:\n  - name: node\n    description: Everything about the node itself.\n  - name: tangle\n    description: Everything about the tangle itself.\n  - name: messages\n    description: Everything about messages.\n  - name: UTXO\n    description: Everything about UTXOs.\n  - name: milestones\n    description: Everything about milestones.\n  - name: peers\n    description: Everything about the peers of the node.\npaths:\n  /health:\n    get:\n      tags:\n        - node\n      summary: Returns the health of the node.\n      description: \u003e-\n        Returns the health of the node. A node considers itself healthy if its solid\n        milestone is at most two delta away from the latest known milestone, has at\n        least one ongoing gossip stream and the latest known milestone is newer\n        than 5 minutes. This information might be useful for load-balancing\n        or uptime monitoring.\n      responses:\n        '200':\n          description: \"Successful operation: indicates that the node is healthy.\"\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n        '503':\n          description: \"Unsuccessful operation: indicates that the node isn´t healthy.\"\n  /api/v1/info:\n    get:\n      tags:\n        - node\n      summary: Returns general information about the node.\n      description: Returns general information about the node.\n      responses:\n        '200':\n          description: \"Successful operation.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InfoResponse'\n              examples:\n                default:\n                  $ref: '#/components/examples/get-info-response-example'\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalErrorResponse'\n  /api/v1/tips:\n    get:\n      tags:\n        - tangle\n      summary: Returns tips that are ideal for attaching a message.\n      description: \u003e-\n        Returns tips that are ideal for attaching a message. The tips can be considered as `non-lazy` and are therefore ideal for attaching a message.\n      responses:\n        '200':\n          description: \"Successful operation.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TipsResponse'\n              examples:\n                default:\n                  $ref: '#/components/examples/get-tips-response-example'\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalErrorResponse'\n        '503':\n          description: \"Unsuccessful operation: indicates that there are no tips available or the node isn´t synced.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableResponse'\n  /api/v1/messages:\n    post:\n      tags:\n        - messages\n      summary: Submit a message.\n      description: \u003e-\n        Submit a message. The node takes care of missing* fields and tries to\n        build the message. On success, the message will be stored in the Tangle.\n        This endpoint will return the identifier of the built message. *The\n        node will try to auto-fill the following fields in case they are\n        missing: `networkId`, `parentMessageIds`, `nonce`.\n        If `payload` is missing, the message will be built without a payload.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubmitMessageRequest'\n            examples:\n              Full message with Indexation Payload:\n                $ref: \u003e-\n                  #/components/examples/post-indexation-message-request-example-full\n              Minimal Message with Indexation Payload:\n                $ref: \u003e-\n                  #/components/examples/post-indexation-message-request-example-minimal\n              Full message with Transaction Payload:\n                $ref: \u003e-\n                  #/components/examples/post-transaction-message-request-example-full\n              Minimal Message with Transaction Payload:\n                $ref: \u003e-\n                  #/components/examples/post-transaction-message-request-example-minimal\n          application/octet-stream:\n            schema:\n              type: string\n              format: binary\n              description: message in raw binary format\n        required: true\n      responses:\n        '201':\n          description: \"Successful operation.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmitMessageResponse'\n              examples:\n                default:\n                  $ref: '#/components/examples/post-messages-response-example'\n        '400':\n          description: \"Unsuccessful operation: indicates that the provided data is invalid.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestResponse'\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalErrorResponse'\n        '503':\n          description: \"Unsuccessful operation: indicates that the node can´t auto-fill the parents or perform Proof-of-Work.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableResponse'\n    get:\n      tags:\n        - messages\n      summary: Search for messages matching a given indexation key.\n      description: Search for messages matching a given indexation key.\n      parameters:\n        - in: query\n          name: index\n          schema:\n            type: string\n          example: 68656c6c6f20776f726c64\n          required: true\n          description: Hex-encoded indexation key that should be searched for.\n      responses:\n        '200':\n          description: \"Successful operation.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MessagesFindResponse'\n              examples:\n                default:\n                  $ref: '#/components/examples/get-messages-by-index-response-example'\n        '400':\n          description: \"Unsuccessful operation: indicates that the provided data is invalid.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestResponse'\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalErrorResponse'\n  '/api/v1/messages/{messageId}':\n    get:\n      tags:\n        - messages\n      summary: Returns message data as JSON by its identifier.\n      description: \u003e-\n        Find a message by its identifer. This endpoint returns the given message\n        as JSON.\n      parameters:\n        - in: path\n          name: messageId\n          schema:\n            type: string\n          example: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d\n          required: true\n          description: Identifier of the message.\n      responses:\n        '200':\n          description: \"Successful operation.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MessageResponse'\n              examples:\n                Empty Payload:\n                  $ref: \u003e-\n                    #/components/examples/get-message-by-id-empty-response-example\n                Transaction Payload:\n                  $ref: \u003e-\n                    #/components/examples/get-message-by-id-transaction-response-example\n                Milestone Payload:\n                  $ref: \u003e-\n                    #/components/examples/get-message-by-id-milestone-response-example\n                Indexation Payload:\n                  $ref: \u003e-\n                    #/components/examples/get-message-by-id-indexation-response-example\n        '400':\n          description: \"Unsuccessful operation: indicates that the provided data is invalid.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestResponse'\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '404':\n          description: \"Unsuccessful operation: indicates that the requested data was not found.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundResponse'\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalErrorResponse'\n  '/api/v1/messages/{messageId}/metadata':\n    get:\n      tags:\n        - messages\n      summary: Find the metadata of a given message.\n      description: \u003e-\n        Find the metadata of a given message.\n      parameters:\n        - in: path\n          name: messageId\n          schema:\n            type: string\n          example: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d\n          required: true\n          description: Identifier of the message.\n      responses:\n        '200':\n          description: \"Successful operation.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MessageMetadataResponse'\n              examples:\n                New Message:\n                  $ref: '#/components/examples/get-message-by-id-response-example-new'\n                Solid:\n                  $ref: \u003e-\n                    #/components/examples/get-message-by-id-response-example-solid\n                Included:\n                  $ref: \u003e-\n                    #/components/examples/get-message-by-id-response-example-included\n                Conflicting:\n                  $ref: \u003e-\n                    #/components/examples/get-message-by-id-response-example-conflicting\n        '400':\n          description: \"Unsuccessful operation: indicates that the provided data is invalid.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestResponse'\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '404':\n          description: \"Unsuccessful operation: indicates that the requested data was not found.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundResponse'\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalErrorResponse'\n        '503':\n          description: \"Unsuccessful operation: indicates that the node is not synced.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableResponse'\n  '/api/v1/messages/{messageId}/raw':\n    get:\n      tags:\n        - messages\n      summary: Returns message raw bytes by its identifier.\n      description: \u003e-\n        Find a message by its identifer. This endpoint returns the given message\n        raw data.\n      parameters:\n        - in: path\n          name: messageId\n          schema:\n            type: string\n          example: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d\n          required: true\n          description: Identifier of the message.\n      responses:\n        '200':\n          description: \"Successful operation.\"\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n              example: \u003e-\n                0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000eb000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000020000016920b176f613ec7be59e68fc68f597eb3393af80f74c7c3db78198147d5f1f92640000000000000000018afe1f314622cc1ef52f16d619d1baccff81816b7e4e35fe268dc247b730acd65d5d2dd3f7df09000000000001000001f7868ab6bb55800b77b8b74191ad8285a9bf428ace579d541fda47661803ff44e0af5c34ad4edf475a01fb46e089a7afcab158b4a0133f32e889083e1c77eef65548933e0c6d2c3b0ac006cd77e77d778bf37b8d38d219fb62a9a2f718d4c9095100000000000000\n        '400':\n          description: \"Unsuccessful operation: indicates that the provided data is invalid.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestResponse'\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '404':\n          description: \"Unsuccessful operation: indicates that the requested data was not found.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundResponse'\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalErrorResponse'\n  '/api/v1/messages/{messageId}/children':\n    get:\n      tags:\n        - messages\n      summary: Returns the children of a message.\n      description: Returns the children of a message.\n      parameters:\n        - in: path\n          name: messageId\n          schema:\n            type: string\n          example: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d\n          required: true\n          description: Identifier of the message.\n      responses:\n        '200':\n          description: \"Successful operation.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MessageChildrenResponse'\n              examples:\n                Children were found:\n                  $ref: \u003e-\n                    #/components/examples/get-messages-by-id-response-example-children\n                No children were found:\n                  $ref: \u003e-\n                    #/components/examples/get-messages-by-id-response-example-nochildren\n        '400':\n          description: \"Unsuccessful operation: indicates that the provided data is invalid.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestResponse'\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalErrorResponse'\n  '/api/v1/outputs/{outputId}':\n    get:\n      tags:\n        - UTXO\n      summary: Find an output by its identifier.\n      description: Find an output by its identifier.\n      parameters:\n        - in: path\n          name: outputId\n          schema:\n            type: string\n          required: true\n          description: \u003e-\n            Identifier of the output encoded in hex. An output is identified by\n            the concatenation of `transaction_id+output_index`.\n      responses:\n        '200':\n          description: \"Successful operation.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OutputResponse'\n              examples:\n                default:\n                  $ref: '#/components/examples/get-outputs-by-id-response-example'\n        '400':\n          description: \"Unsuccessful operation: indicates that the provided data is invalid.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestResponse'\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '404':\n          description: \"Unsuccessful operation: indicates that the requested data was not found.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundResponse'\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalErrorResponse'\n  '/api/v1/addresses/{address}':\n    get:\n      tags:\n        - UTXO\n      summary: Get the balance of a bech32-encoded address.\n      description: \u003e-\n        Get the balance of a bech32-encoded address.\n      parameters:\n        - in: path\n          name: address\n          schema:\n            type: string\n          example: iota1qrhacyfwlcnzkvzteumekfkrrwks98mpdm37cj4xx3drvmjvnep6xqgyzyx\n          required: true\n          description: bech32 encoded address\n      responses:\n        '200':\n          description: \"Successful operation.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BalanceAddressResponse'\n              examples:\n                default:\n                  $ref: \u003e-\n                    #/components/examples/get-address-balance-response-example\n        '400':\n          description: \"Unsuccessful operation: indicates that the provided data is invalid.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestResponse'\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalErrorResponse'\n        '503':\n          description: \"Unsuccessful operation: indicates that the node is not synced.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableResponse'\n\n  '/api/v1/addresses/ed25519/{address}':\n    get:\n      tags:\n        - UTXO\n      summary: Get the balance of a hex-encoded Ed25519 address.\n      description: \u003e-\n        Get the balance of a hex-encoded Ed25519 address.\n      parameters:\n        - in: path\n          name: address\n          schema:\n            type: string\n          example: efdc112efe262b304bcf379b26c31bad029f616ee3ec4aa6345a366e4c9e43a3\n          required: true\n          description: hex-encoded Ed25519 address\n      responses:\n        '200':\n          description: \"Successful operation.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BalanceAddressResponse'\n              examples:\n                default:\n                  $ref: \u003e-\n                    #/components/examples/get-address-balance-response-example\n        '400':\n          description: \"Unsuccessful operation: indicates that the provided data is invalid.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestResponse'\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalErrorResponse'\n        '503':\n          description: \"Unsuccessful operation: indicates that the node is not synced.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableResponse'\n\n  '/api/v1/addresses/{address}/outputs':\n    get:\n      tags:\n        - UTXO\n      summary: Get all outputs that use a given bech32-encoded address.\n      description: \u003e-\n        Get all outputs that use a given bech32-encoded address. If count equals\n        maxResults, then there might be more outputs available but those were\n        skipped for performance reasons. User should sweep the address to reduce\n        the amount of outputs.\n      parameters:\n        - in: path\n          name: address\n          schema:\n            type: string\n          example: iota1qrhacyfwlcnzkvzteumekfkrrwks98mpdm37cj4xx3drvmjvnep6xqgyzyx\n          required: true\n          description: bech32-encoded address that is referenced by the outputs.\n        - in: query\n          name: include-spent\n          schema:\n            type: boolean\n          example: true\n          required: false\n          description: \u003e-\n            Set to true to also include the known spent outputs for the given\n            address.\n        - in: query\n          name: type\n          schema:\n            type: integer\n          example: 0\n          description: \u003e-\n            Allows to filter the results by output type. Set to value `0` to filter outputs of type `SigLockedSingleOutput`. Set to value `1` to filter outputs of type `SigLockedDustAllowanceOutput`.\n      responses:\n        '200':\n          description: \"Successful operation.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OutputsAddressResponse'\n              examples:\n                default:\n                  $ref: '#/components/examples/get-address-outputs-response-example'\n        '400':\n          description: \"Unsuccessful operation: indicates that the provided data is invalid.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestResponse'\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalErrorResponse'\n        '503':\n          description: \"Unsuccessful operation: indicates that the node is not synced.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableResponse'\n\n  '/api/v1/addresses/ed25519/{address}/outputs':\n    get:\n      tags:\n        - UTXO\n      summary: Get all outputs that use a given hex-encoded Ed25519 address.\n      description: \u003e-\n        Get all outputs that use a given hex-encoded Ed25519 address. If count\n        equals maxResults, then there might be more outputs available but those\n        were skipped for performance reasons. User should sweep the address to\n        reduce the amount of outputs.\n      parameters:\n        - in: path\n          name: address\n          schema:\n            type: string\n          example: efdc112efe262b304bcf379b26c31bad029f616ee3ec4aa6345a366e4c9e43a3\n          required: true\n          description: hex-encoded Ed25519 address that is referenced by the outputs.\n        - in: query\n          name: include-spent\n          schema:\n            type: boolean\n          example: true\n          required: false\n          description: \u003e-\n            Set to true to also include the known spent outputs for the given\n            address.\n        - in: query\n          name: type\n          schema:\n            type: integer\n          example: 0\n          description: \u003e-\n            Allows to filter the results by output type. Set to value `0` to filter outputs of type `SigLockedSingleOutput`. Set to value `1` to filter outputs of type `SigLockedDustAllowanceOutput`.\n      responses:\n        '200':\n          description: \"Successful operation.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OutputsAddressResponse'\n              examples:\n                default:\n                  $ref: '#/components/examples/get-address-outputs-response-example'\n        '400':\n          description: \"Unsuccessful operation: indicates that the provided data is invalid.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestResponse'\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalErrorResponse'\n        '503':\n          description: \"Unsuccessful operation: indicates that the node is not synced.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableResponse'\n\n  '/api/v1/receipts':\n    get:\n      tags:\n        - UTXO\n      summary: Returns all stored receipts.\n      description: \u003e-\n        Returns all stored receipts.\n      responses:\n        '200':\n          description: \"Successful operation.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReceiptsResponse'\n              examples:\n                default:\n                  $ref: '#/components/examples/get-receipts-response-example'\n        '400':\n          description: \"Unsuccessful operation: indicates that the provided data is invalid.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestResponse'\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalErrorResponse'\n        '503':\n          description: \"Unsuccessful operation: indicates that the node is not synced.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableResponse'\n\n  '/api/v1/receipts/{migratedAt}':\n    get:\n      tags:\n        - UTXO\n      summary: Returns all stored receipts for a given migration index.\n      description: \u003e-\n        Returns all stored receipts for a given migration index.\n      parameters:\n        - in: path\n          name: migratedAt\n          schema:\n            type: number\n          example: 1000\n          required: true\n          description: Migration index to look up.\n      responses:\n        '200':\n          description: \"Successful operation.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReceiptsResponse'\n              examples:\n                default:\n                  $ref: '#/components/examples/get-receipts-response-example'\n        '400':\n          description: \"Unsuccessful operation: indicates that the provided data is invalid.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestResponse'\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalErrorResponse'\n        '503':\n          description: \"Unsuccessful operation: indicates that the node is not synced.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableResponse'\n\n\n  '/api/v1/treasury':\n    get:\n      tags:\n        - UTXO\n      summary: Returns information about the treasury.\n      description: \u003e-\n        Returns information about the treasury.\n      responses:\n        '200':\n          description: \"Successful operation.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TreasuryResponse'\n              examples:\n                default:\n                  $ref: '#/components/examples/get-treasury-response-example'\n        '400':\n          description: \"Unsuccessful operation: indicates that the provided data is invalid.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestResponse'\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalErrorResponse'\n        '503':\n          description: \"Unsuccessful operation: indicates that the node is not synced.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUnavailableResponse'\n\n  '/api/v1/transactions/{transactionId}/included-message':\n    get:\n      tags:\n        - UTXO\n      summary: Returns the included message of a transaction.\n      description: Returns the included message of a transaction.\n      parameters:\n        - in: path\n          name: transactionId\n          schema:\n            type: string\n          example: af7579fb57746219561072c2cc0e4d0fbb8d493d075bd21bf25ae81a450c11ef\n          required: true\n          description: Identifier of the transaction to look up.\n      responses:\n        '200':\n          description: \"Successful operation.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MessageResponse'\n              examples:\n                default:\n                  $ref: '#/components/examples/get-included-message-of-transaction-example'\n        '400':\n          description: \"Unsuccessful operation: indicates that the provided data is invalid.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestResponse'\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '404':\n          description: \"Unsuccessful operation: indicates that the requested data was not found.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundResponse'\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalErrorResponse'\n\n  '/api/v1/milestones/{index}':\n    get:\n      tags:\n        - milestones\n      summary: Look up a milestone by a given milestone index.\n      description: Look up a milestone by a given milestone index.\n      parameters:\n        - in: path\n          name: index\n          schema:\n            type: number\n          example: 154862\n          required: true\n          description: Index of the milestone to look up.\n      responses:\n        '200':\n          description: \"Successful operation.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MilestoneResponse'\n              examples:\n                default:\n                  $ref: \u003e-\n                    #/components/examples/get-milestone-by-index-response-example\n        '400':\n          description: \"Unsuccessful operation: indicates that the provided data is invalid.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestResponse'\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '404':\n          description: \"Unsuccessful operation: indicates that the requested data was not found.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundResponse'\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalErrorResponse'\n\n  '/api/v1/milestones/{index}/utxo-changes':\n    get:\n      tags:\n        - milestones\n      summary: Get all UTXO changes of a given milestone.\n      description: Get all UTXO changes of a given milestone.\n      parameters:\n        - in: path\n          name: index\n          schema:\n            type: number\n          example: 154862\n          required: true\n          description: Index of the milestone to look up.\n      responses:\n        '200':\n          description: \"Successful operation.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UTXOChangesResponse'\n              examples:\n                default:\n                  $ref: \u003e-\n                    #/components/examples/get-utxo-changes-response-example\n        '400':\n          description: \"Unsuccessful operation: indicates that the provided data is invalid.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestResponse'\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '404':\n          description: \"Unsuccessful operation: indicates that the requested data was not found.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundResponse'\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalErrorResponse'\n\n\n  /api/v1/peers:\n    get:\n      tags:\n        - peers\n      summary: Get information about the peers of the node.\n      description: Get information about the peers of the node.\n      responses:\n        '200':\n          description: \"Successful operation.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PeersResponse'\n              examples:\n                default:\n                  $ref: '#/components/examples/get-peers-response-example'\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalErrorResponse'\n    post:\n      tags:\n        - peers\n      summary: Add a given peer to the node.\n      description: Add a given peer to the node.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddPeerRequest'\n            examples:\n              default:\n                $ref: '#/components/examples/post-peer-request-example'\n        required: true\n      responses:\n        '200':\n          description: \"Successful operation.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddPeerResponse'\n              examples:\n                default:\n                  $ref: '#/components/examples/post-peer-response-example'\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '404':\n          description: \"Unsuccessful operation: indicates that the requested data was not found.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundResponse'\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalErrorResponse'\n  '/api/v1/peers/{peerId}':\n    get:\n      tags:\n        - peers\n      summary: Get information about a given peer.\n      description: Get information about a given peer.\n      parameters:\n        - in: path\n          name: peerId\n          schema:\n            type: string\n          example: 12D3KooWMajsSUxSUFb3CRgmJvygYCGd27uMDdppVYNGud7xuKG5\n          required: true\n          description: Identifier of the message.\n      responses:\n        '200':\n          description: \"Successful operation.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PeerResponse'\n              examples:\n                default:\n                  $ref: '#/components/examples/get-peer-response-example'\n        '400':\n          description: \"Unsuccessful operation: indicates that the provided data is invalid.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestResponse'\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '404':\n          description: \"Unsuccessful operation: indicates that the requested data was not found.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundResponse'\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalErrorResponse'\n    delete:\n      tags:\n        - peers\n      summary: Remove/disconnect a given peer.\n      description: Remove/disconnect a given peer.\n      parameters:\n        - in: path\n          name: peerId\n          schema:\n            type: string\n          example: 12D3KooWMajsSUxSUFb3CRgmJvygYCGd27uMDdppVYNGud7xuKG5\n          required: true\n          description: Identifier of the peer.\n      responses:\n        '204':\n          description: \"Successful operation.\"\n        '400':\n          description: \"Unsuccessful operation: indicates that the provided data is invalid.\"\n        '403':\n          description: \"Unsuccessful operation: indicates that the endpoint is not available for public use.\"\n        '404':\n          description: \"Unsuccessful operation: indicates that the requested data was not found.\"\n        '500':\n          description: \"Unsuccessful operation: indicates that an unexpected, internal server error happened which prevented the node from fulfilling the request.\"\n\ncomponents:\n  examples:\n    get-info-response-example:\n      value:\n        data:\n          name: HORNET\n          version: 0.6.0-alpha\n          isHealthy: true\n          networkId: testnet7\n          bech32HRP: atoi\n          minPoWScore: 4000\n          messagesPerSecond: 17\n          referencedMessagesPerSecond: 16.8\n          referencedRate: 98.82352941176471\n          latestMilestoneTimestamp: 1617802102\n          latestMilestoneIndex: 480\n          confirmedMilestoneIndex: 480\n          pruningIndex: 0\n          features:\n            - PoW\n\n    get-tips-response-example:\n      value:\n        data:\n          tipMessageIds:\n            - f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d\n            - 78d546b46aec4557872139a48f66bc567687e8413578a14323548732358914a2\n    post-messages-response-example:\n      value:\n        data:\n          messageId: a4dd36465af63d495d35a05f592d42a51511c153e1bae8fad00453c8cbb48727\n    get-messages-by-index-response-example:\n      value:\n        data:\n          index: 68656c6c6f20776f726c64\n          maxResults: 1000\n          count: 2\n          messageIds:\n            - f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d\n            - 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006\n    get-message-by-id-response-example-new:\n      value:\n        data:\n          messageId: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d\n          parentMessageIds:\n            - 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006\n            - d97e89e49ed263b763afeda192515fe154ec826ceb92ef08926cd68ec02c9510\n          isSolid: false\n          shouldPromote: true\n          shouldReattach: false\n    get-message-by-id-response-example-solid:\n      value:\n        data:\n          messageId: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d\n          parentMessageIds:\n            - 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006\n            - d97e89e49ed263b763afeda192515fe154ec826ceb92ef08926cd68ec02c9510\n          isSolid: true\n          shouldPromote: false\n          shouldReattach: false\n    get-message-by-id-response-example-included:\n      value:\n        data:\n          messageId: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d\n          parentMessageIds:\n            - 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006\n            - d97e89e49ed263b763afeda192515fe154ec826ceb92ef08926cd68ec02c9510\n          isSolid: true\n          referencedByMilestoneIndex: 15465\n          ledgerInclusionState: included\n    get-message-by-id-response-example-conflicting:\n      value:\n        data:\n          messageId: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d\n          parentMessageIds:\n            - 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006\n            - d97e89e49ed263b763afeda192515fe154ec826ceb92ef08926cd68ec02c9510\n          isSolid: true\n          referencedByMilestoneIndex: 15465\n          ledgerInclusionState: conflicting\n          conflictReason: 1\n    post-indexation-message-request-example-full:\n      value:\n        networkId: '9466822412763346725'\n        parentMessageIds:\n          - 222e88a63e5aca8ef48d3b8749e2fab51d1bc7c34c5604a2933ca2f180b342c9\n          - a22137ebe61435c6d0f3e16ad148376778d7bfb36e27329f02c221ec109525a6\n          - a6db9d0b3ecb274d90c21e9dde04012b2d13ad8aa0b90e82e7d3b626be67119d\n          - fd31d9c926b5d97ae016535d66baee511dfa3b713b61d8eba2ae5c9929e38ca7\n        payload:\n          type: 2\n          index: 68656c6c6f20776f726c64\n          data: 5370616d6d696e6720646174612e0a436f756e743a203037323935320a54696d657374616d703a20323032312d30322d31315431303a32333a34392b30313a30300a54697073656c656374696f6e3a203934c2b573\n        nonce: '2102864'\n    post-indexation-message-request-example-minimal:\n      value:\n        payload:\n          type: 2\n          index: 68656c6c6f20776f726c64\n          data: 5370616d6d696e6720646174612e0a436f756e743a203037323935320a54696d657374616d703a20323032312d30322d31315431303a32333a34392b30313a30300a54697073656c656374696f6e3a203934c2b573\n\n    post-transaction-message-request-example-minimal:\n      value:\n        payload:\n          type: 0\n          essence:\n            type: 0\n            inputs:\n              - type: 0\n                transactionId: 0c78e998f5177834ecb3bae1596d5056af76e487386eecb19727465b4be86a79\n                transactionOutputIndex: 0\n              - type: 0\n                transactionId: 309b169bfa60c8cf80afd730741862d200405d5df7cabfe9b564361dce1f7036\n                transactionOutputIndex: 0\n              - type: 0\n                transactionId: c138ecdc882010245e9574fbc1f1f43cc7c182fa890e46e018365dd49de0f16e\n                transactionOutputIndex: 0\n            outputs:\n              - type: 0\n                address:\n                  type: 0\n                  address: d49931814e6bfbb8e221f1b2936e206e5a6b6abeb9c070f8603814c525c9abe3\n                amount: 50000000\n            payload:\n          unlockBlocks:\n            - type: 0\n              signature:\n                type: 0\n                publicKey: 40d0c00fd629a5f528e4bcab4333926a90d06613a3f36a325defcdaf4c9e4092\n                signature: ed4a63a3e1b22c85f9813b00a21c8576ed72c1f5bc939d01fcea7dcd678c2d0d8d80a2499965d8ce5574c9e92aa0d42b72b969bab3a2a35fe7dbc64659a0d703\n            - type: 1\n              reference: 0\n            - type: 1\n              reference: 0\n        nonce: '1020884'\n    post-transaction-message-request-example-full:\n      value:\n        networkId: '9466822412763346725'\n        parentMessageIds:\n          - 6c5bc96948813faaf6d5a5f0c6bc453bf2e5343664884aea2873041bdc47c4ca\n          - 97e2c4fce0f6e1023c19ed634e37a44744e21a743a79e8f1fc16d31dc8f47481\n          - c107c5f3d6189954c9b1b8e2fa556db4bcf7ad2da717d328ecf6d9a841a5f37d\n          - ea19397d2670f904c4d8c8616ef7a0724321512f1c09f8eb2aeb0cc4299e2441\n        payload:\n          type: 0\n          essence:\n            type: 0\n            inputs:\n              - type: 0\n                transactionId: 0c78e998f5177834ecb3bae1596d5056af76e487386eecb19727465b4be86a79\n                transactionOutputIndex: 0\n              - type: 0\n                transactionId: 309b169bfa60c8cf80afd730741862d200405d5df7cabfe9b564361dce1f7036\n                transactionOutputIndex: 0\n              - type: 0\n                transactionId: c138ecdc882010245e9574fbc1f1f43cc7c182fa890e46e018365dd49de0f16e\n                transactionOutputIndex: 0\n            outputs:\n              - type: 0\n                address:\n                  type: 0\n                  address: d49931814e6bfbb8e221f1b2936e206e5a6b6abeb9c070f8603814c525c9abe3\n                amount: 50000000\n            payload:\n          unlockBlocks:\n            - type: 0\n              signature:\n                type: 0\n                publicKey: 40d0c00fd629a5f528e4bcab4333926a90d06613a3f36a325defcdaf4c9e4092\n                signature: ed4a63a3e1b22c85f9813b00a21c8576ed72c1f5bc939d01fcea7dcd678c2d0d8d80a2499965d8ce5574c9e92aa0d42b72b969bab3a2a35fe7dbc64659a0d703\n            - type: 1\n              reference: 0\n            - type: 1\n              reference: 0\n        nonce: '1020884'\n    get-message-by-id-empty-response-example:\n      value:\n        data:\n          networkId: '6530425480034647824'\n          parentMessageIds:\n            - c0b728d4c292860b57747c7bfbd989ccc40be8c76229022644c05e1352bf1ea3\n            - e8db39681478cf9826bd2f31d045f16f5e1f478c5abc3030419da7911df9e288\n          payload: null\n          nonce: '1481'\n    get-message-by-id-transaction-response-example:\n      value:\n        data:\n          networkId: '9466822412763346725'\n          parentMessageIds:\n            - 6c5bc96948813faaf6d5a5f0c6bc453bf2e5343664884aea2873041bdc47c4ca\n            - 97e2c4fce0f6e1023c19ed634e37a44744e21a743a79e8f1fc16d31dc8f47481\n            - c107c5f3d6189954c9b1b8e2fa556db4bcf7ad2da717d328ecf6d9a841a5f37d\n            - ea19397d2670f904c4d8c8616ef7a0724321512f1c09f8eb2aeb0cc4299e2441\n          payload:\n            type: 0\n            essence:\n              type: 0\n              inputs:\n                - type: 0\n                  transactionId: 0c78e998f5177834ecb3bae1596d5056af76e487386eecb19727465b4be86a79\n                  transactionOutputIndex: 0\n                - type: 0\n                  transactionId: 309b169bfa60c8cf80afd730741862d200405d5df7cabfe9b564361dce1f7036\n                  transactionOutputIndex: 0\n                - type: 0\n                  transactionId: c138ecdc882010245e9574fbc1f1f43cc7c182fa890e46e018365dd49de0f16e\n                  transactionOutputIndex: 0\n              outputs:\n                - type: 0\n                  address:\n                    type: 0\n                    address: d49931814e6bfbb8e221f1b2936e206e5a6b6abeb9c070f8603814c525c9abe3\n                  amount: 50000000\n              payload:\n            unlockBlocks:\n              - type: 0\n                signature:\n                  type: 0\n                  publicKey: 40d0c00fd629a5f528e4bcab4333926a90d06613a3f36a325defcdaf4c9e4092\n                  signature: ed4a63a3e1b22c85f9813b00a21c8576ed72c1f5bc939d01fcea7dcd678c2d0d8d80a2499965d8ce5574c9e92aa0d42b72b969bab3a2a35fe7dbc64659a0d703\n              - type: 1\n                reference: 0\n              - type: 1\n                reference: 0\n          nonce: '1020884'\n\n    get-message-by-id-milestone-response-example:\n      value:\n        data:\n          networkId: '14379272398717627559'\n          parentMessageIds:\n            - 23d388b13f64c2e24788d61891079c74daf6d036b768d75ad38e473c9d4da83b\n            - 242974b25cab6f8378fe718ea729fa65492f03df4ce74b631899589242fa12b7\n            - 2a331c562b48e261c11f073c7465551ffcc80c35ab6d09f4fd1cc81782e5fdc1\n            - 438a14a651b8872896b4e57c92041e8962ca7d78cc38c774534020feefeff31a\n            - 73c90398fb548a4410b49264e182e58a91baeecaa949cbfc1d01a9066cbd9935\n            - b9adfdc1effd3242b5c1d7b6df43d4b53e58943e820ced89c7dd39b8b52fcef0\n          payload:\n            type: 1\n            index: 16241\n            timestamp: 1617959712\n            parentMessageIds:\n              - 23d388b13f64c2e24788d61891079c74daf6d036b768d75ad38e473c9d4da83b\n              - 242974b25cab6f8378fe718ea729fa65492f03df4ce74b631899589242fa12b7\n              - 2a331c562b48e261c11f073c7465551ffcc80c35ab6d09f4fd1cc81782e5fdc1\n              - 438a14a651b8872896b4e57c92041e8962ca7d78cc38c774534020feefeff31a\n              - 73c90398fb548a4410b49264e182e58a91baeecaa949cbfc1d01a9066cbd9935\n              - b9adfdc1effd3242b5c1d7b6df43d4b53e58943e820ced89c7dd39b8b52fcef0\n            inclusionMerkleProof: 0e5751c026e543b2e8ab2eb06099daa1d1e5df47778f7787faab45cdf12fe3a8\n            nextPoWScore: 0\n            nextPoWScoreMilestoneIndex: 0\n            publicKeys:\n              - 7205c145525cee64f1c9363696811d239919d830ad964b4e29359e6475848f5a\n              - e468e82df33d10dea3bd0eadcd7867946a674d207c39f5af4cc44365d268a7e6\n            receipt:\n            signatures:\n              - a642e96f71094f8523790131481e0fbfdc8265caa8e4b08793628b286065c317a5595d56edb5e918b24d4ee749768a2b5ae6010e751bf31f0d8145a390b82c00\n              - 4bdfa2684bed01ce3a9a630b0688e868c290b8524c679daa79cb9d9f0f2aa5c57cf00a0fc694d1fed3696053ffa9bba6154ccb1564532cd49f807ba77de9a70c\n          nonce: '1229782938247321090'\n\n    get-message-by-id-indexation-response-example:\n      value:\n        data:\n          networkId: '9466822412763346725'\n          parentMessageIds:\n            - 222e88a63e5aca8ef48d3b8749e2fab51d1bc7c34c5604a2933ca2f180b342c9\n            - a22137ebe61435c6d0f3e16ad148376778d7bfb36e27329f02c221ec109525a6\n            - a6db9d0b3ecb274d90c21e9dde04012b2d13ad8aa0b90e82e7d3b626be67119d\n            - fd31d9c926b5d97ae016535d66baee511dfa3b713b61d8eba2ae5c9929e38ca7\n          payload:\n            type: 2\n            index: 68656c6c6f20776f726c64\n            data: 5370616d6d696e6720646174612e0a436f756e743a203037323935320a54696d657374616d703a20323032312d30322d31315431303a32333a34392b30313a30300a54697073656c656374696f6e3a203934c2b573\n          nonce: '2102864'\n    get-messages-by-id-response-example-children:\n      value:\n        data:\n          messageId: ed3c3f1a319ff4e909cf2771d79fece0ac9bd9fd2ee49ea6c0885c9cb3b1248c\n          maxResults: 1000\n          count: 2\n          childrenMessageIds:\n            - 1c6943b0487c92fd057d4d22ad844cc37ee27fe6fbe88e5ff0d20b2233f75b9d\n            - 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006\n    get-messages-by-id-response-example-nochildren:\n      value:\n        data:\n          messageId: 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006\n          maxResults: 1000\n          count: 0\n          childrenMessageIds: []\n    get-outputs-by-id-response-example:\n      value:\n        data:\n          messageId: 9cd745ef6800c8e8c80b09174ee4b250b3c43dfa62d7c6a4e61f848febf731a0\n          transactionId: 1ee46e19f4219ee65afc10227d0ca22753f76ef32d1e922e5cbe3fbc9b5a5298\n          outputIndex: 1\n          isSpent: false\n          output:\n            type: 0\n            address:\n              type: 0\n              address: 8eaf87ac1f52eb05f2c7c0c15502df990a228838dc37bd18de9503d69afd257d\n            amount: 1000\n          ledgerIndex: 946704\n    get-address-balance-response-example:\n      value:\n        data:\n          addressType: 0\n          address: efdc112efe262b304bcf379b26c31bad029f616ee3ec4aa6345a366e4c9e43a3\n          balance: 1338263\n          dustAllowed: true\n          ledgerIndex: 946704\n    get-address-outputs-response-example:\n      value:\n        data:\n          addressType: 0\n          address: efdc112efe262b304bcf379b26c31bad029f616ee3ec4aa6345a366e4c9e43a3\n          maxResults: 1000\n          count: 4\n          outputIds:\n            - \u003e-\n              1ee46e19f4219ee65afc10227d0ca22753f76ef32d1e922e5cbe3fbc9b5a52980100\n            - \u003e-\n              3d36ec4afb2d634b9313f84606b98b69675a3ef6f44dcdecb18c30945b57221e0100\n            - \u003e-\n              ee3447d088e3e2c53c5b3e56a38fdc859ca2c4b4161cf256c0462ce4d34731820100\n            - \u003e-\n              f8bdbfb0f57ade7fbb95d31b11e2dbda9b2a35e9dc0cd3e11cb324e8a6bedc260100\n          ledgerIndex: 946704\n\n    get-receipts-response-example:\n      value:\n        data:\n          receipts:\n            - migratedAt: 1000\n              final: false\n              funds:\n                - tailTransactionHash: e0ce1933a900d02e0a43e2ba4e922d1a706a36a117ce1eb9ad0a74d39ee722c41b00cd227232efd76f5997e91bf8000000\n                  address:\n                    type: 0\n                    address: 5eec99d6ee4ba21aa536c3364bbf2b587cb98a7f2565b75d948b10083e2143f8\n                  deposit: 1702000000\n              transaction:\n                input:\n                  type: 1\n                  milestoneId: 733ed2810f2333e9d6cd702c7d5c8264cd9f1ae454b61e75cf702c451f68611d\n                output:\n                  type: 2\n                  amount: 1702000000\n\n    get-treasury-response-example:\n      value:\n        data:\n          milestoneId: 733ed2810f2333e9d6cd702c7d5c8264cd9f1ae454b61e75cf702c451f68611d\n          amount: 133713371337\n\n    get-included-message-of-transaction-example:\n      value:\n        data:\n          networkId: '7712883261355838377'\n          parentMessageIds:\n            - 174e3151f6ce2cfb7f00829ac4a96a35caa2078cc20eba99359867cd21aad0d6\n            - 5807bb4ad068e6cdadd103218e4e24ed55b62c985d4f64e97808d9f09180f89c\n            - 7a09324557e9200f39bf493fc8fd6ac43e9ca750c6f6d884cc72386ddcb7d695\n            - de9e9d780ba7ebeebc38da16cb53b2a8991d38eee94bcdc3f3ef99aa8c345652\n          payload:\n            type: 0\n            essence:\n              type: 0\n              inputs:\n                - type: 0\n                  transactionId: af7579fb57746219561072c2cc0e4d0fbb8d493d075bd21bf25ae81a450c11ef\n                  transactionOutputIndex: 0\n              outputs:\n                - type: 0\n                  address:\n                    type: 0\n                    address: a18996d96163405e3c0eb13fa3459a07f68a89e8cf7cc239c89e7192344daa5b\n                  amount: 1000000\n              payload:\n                type: 2\n                index: 454f59\n                data: ''\n            unlockBlocks:\n              - type: 0\n                signature:\n                  type: 0\n                  publicKey: ee26ac07834c603c22130fced361ca58552b0dbfc63e4b73ba24b3b59d9f4050\n                  signature: '0492a353f96883c472e2686a640e77eda30be8fcc417aa9fc1c15eae854661e0253287be6ea68f649f19ca590de0a6c57fb88635ef0e013310e0be2b83609503'\n          nonce: '17293822569102719312'\n\n    get-milestone-by-index-response-example:\n      value:\n        data:\n          index: 15465\n          messageId: 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006\n          timestamp: 1602227215\n\n    get-utxo-changes-response-example:\n      value:\n        data:\n          index: 15465\n          createdOutputs:\n            - \u003e-\n              1ee46e19f4219ee65afc10227d0ca22753f76ef32d1e922e5cbe3fbc9b5a52980100\n            - \u003e-\n              ee3447d088e3e2c53c5b3e56a38fdc859ca2c4b4161cf256c0462ce4d34731820100\n            - \u003e-\n              f8bdbfb0f57ade7fbb95d31b11e2dbda9b2a35e9dc0cd3e11cb324e8a6bedc260100\n          consumedOutputs:\n            - \u003e-\n              3d36ec4afb2d634b9313f84606b98b69675a3ef6f44dcdecb18c30945b57221e0100\n\n    get-peers-response-example:\n      value:\n        data:\n          - id: 12D3KooWMajsSUxSUFb3CRgmJvygYCGd27uMDdppVYNGud7xuKG5\n            multiAddresses:\n              - \"/dns/abc.com/tcp/15602\"\n            alias: abc\n            relation: known\n            connected: true\n            gossip:\n              heartbeat:\n                solidMilestoneIndex: 61527\n                prunedMilestoneIndex: 61200\n                latestMilestoneIndex: 61527\n                connectedNeighbors: 5\n                syncedNeighbors: 7\n              metrics:\n                newMessages: 3799\n                knownMessages: 554\n                receivedMessages: 4370\n                receivedMessageRequests: 0\n                receivedMilestoneRequests: 1\n                receivedHeartbeats: 1\n                sentMessages: 6\n                sentMessageRequests: 4325\n                sentMilestoneRequests: 31\n                sentHeartbeats: 9\n                droppedPackets: 0\n          - id: 12D3KooWNYDcJqxnWqCLSgeQKqNStwFUqHSJXPdSYTJnfxQESzie\n            multiAddresses:\n              - \"/dns/xyz.com/tcp/15600\"\n            alias: xyz\n            relation: known\n            connected: true\n            gossip:\n              heartbeat:\n                solidMilestoneIndex: 61527\n                prunedMilestoneIndex: 56508\n                latestMilestoneIndex: 61527\n                connectedNeighbors: 5\n                syncedNeighbors: 6\n              metrics:\n                newMessages: 510\n                knownMessages: 79\n                receivedMessages: 589\n                receivedMessageRequests: 0\n                receivedMilestoneRequests: 1\n                receivedHeartbeats: 1\n                sentMessages: 42\n                sentMessageRequests: 576\n                sentMilestoneRequests: 1\n                sentHeartbeats: 9\n                droppedPackets: 0\n\n    get-peer-response-example:\n      value:\n        data:\n          id: 12D3KooWMajsSUxSUFb3CRgmJvygYCGd27uMDdppVYNGud7xuKG5\n          multiAddresses:\n            - \"/dns/abc.com/tcp/15602\"\n          alias: abc\n          relation: known\n          connected: true\n          gossip:\n            heartbeat:\n              solidMilestoneIndex: 61527\n              prunedMilestoneIndex: 61200\n              latestMilestoneIndex: 61527\n              connectedNeighbors: 5\n              syncedNeighbors: 7\n            metrics:\n              newMessages: 3799\n              knownMessages: 554\n              receivedMessages: 4370\n              receivedMessageRequests: 0\n              receivedMilestoneRequests: 1\n              receivedHeartbeats: 1\n              sentMessages: 6\n              sentMessageRequests: 4325\n              sentMilestoneRequests: 31\n              sentHeartbeats: 9\n              droppedPackets: 0\n\n    post-peer-request-example:\n      value:\n        multiAddress: \u003e-\n          /dns/abc.com/tcp/15602/p2p/12D3KooWMajsSUxSUFb3CRgmJvygYCGd27uMDdppVYNGud7xuKG5\n        alias: abc.com\n    post-peer-response-example:\n      value:\n        data:\n          id: 12D3KooWMajsSUxSUFb3CRgmJvygYCGd27uMDdppVYNGud7xuKG5\n          multiAddresses:\n            - \"/dns/abc.com/tcp/15602\"\n          alias: abc\n          relation: known\n          connected: true\n          gossip:\n            heartbeat:\n              solidMilestoneIndex: 61527\n              prunedMilestoneIndex: 61200\n              latestMilestoneIndex: 61527\n              connectedNeighbors: 5\n              syncedNeighbors: 7\n            metrics:\n              newMessages: 3799\n              knownMessages: 554\n              receivedMessages: 4370\n              receivedMessageRequests: 0\n              receivedMilestoneRequests: 1\n              receivedHeartbeats: 1\n              sentMessages: 6\n              sentMessageRequests: 4325\n              sentMilestoneRequests: 31\n              sentHeartbeats: 9\n              droppedPackets: 0\n\n  schemas:\n\n    Message:\n      description: A message is the object nodes gossip around in the network. It always references two other messages that are known as parents. It is stored as a vertex on the tangle data structure that the nodes maintain. A message can have a maximum size of 32Kb.\n      properties:\n        networkId:\n          type: string\n          description: Network identifier. This field signifies for which network the message is meant for. It also tells which protocol rules apply to the message. It is computed out of the first 8 bytes of the `BLAKE2b-256` hash of the concatenation of the network type and protocol version string.\n        parentMessageIds:\n          type: array\n          description: The identifiers of the messages this message references.\n          items:\n            type: string\n        payload:\n          oneOf:\n            - $ref: '#/components/schemas/TransactionPayload'\n            - $ref: '#/components/schemas/MilestonePayload'\n            - $ref: '#/components/schemas/IndexationPayload'\n            - $ref: '#/components/schemas/ReceiptPayload'\n        nonce:\n          type: string\n          description: The nonce which lets this message fulfill the Proof-of-Work requirement.\n      required:\n        - networkId\n        - parentMessageIds\n        - payload\n        - nonce\n\n    TransactionPayload:\n      description: The Transaction Payload to be embedded into a message.\n      properties:\n        type:\n          type: integer\n          description: Set to value 0 to denote a Transaction Payload.\n        essence:\n          type: object\n          oneOf:\n            - $ref: '#/components/schemas/TransactionEssence'\n        unlockBlocks:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/SignatureUnlockBlock'\n              - $ref: '#/components/schemas/ReferenceUnlockBlock'\n      required:\n        - type\n        - essence\n        - unlockBlocks\n\n    TransactionEssence:\n      description: Describes the essence data making up a transaction by defining its inputs and outputs and an optional payload.\n      properties:\n        type:\n          type: integer\n          description: Set to value 0 to denote a Transaction Essence.\n        inputs:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/UTXOInput'\n        outputs:\n          type: array\n          items:\n            anyOf:\n              - $ref: '#/components/schemas/SigLockedSingleOutput'\n              - $ref: '#/components/schemas/SigLockedDustAllowanceOutput'\n        payload:\n          oneOf:\n            - $ref: '#/components/schemas/IndexationPayload'\n          nullable: true\n      required:\n        - type\n        - inputs\n        - outputs\n        - payload\n\n    UTXOInput:\n      description: Describes an input which references an unspent transaction output to consume.\n      properties:\n        type:\n          type: integer\n          description: Set to value 0 to denote an UTXO Input.\n        transactionId:\n          type: string\n          description: The BLAKE2b-256 hash of the transaction from which the UTXO comes from.\n        transactionOutputIndex:\n          type: integer\n          description: The index of the output on the referenced transaction to consume.\n      required:\n        - type\n        - transactionId\n        - transactionOutputIndex\n\n    SigLockedSingleOutput:\n      description: Describes a deposit to a single address which is unlocked via a signature.\n      properties:\n        type:\n          type: integer\n          description: Set to value 0 to denote a SigLockedSingleOutput.\n        address:\n          anyOf:\n            - $ref: '#/components/schemas/Ed25519Address'\n        amount:\n          type: integer\n          description: The amount of tokens to deposit with this SigLockedSingleOutput output.\n      required:\n        - type\n        - address\n        - amount\n\n    SigLockedDustAllowanceOutput:\n      description: \"Output type for deposits that enables an address to receive dust outputs. It can be consumed as an input like a regular SigLockedSingleOutput\"\n      properties:\n        type:\n          type: integer\n          description: Set to value 1 to denote a SigLockedDustAllowanceOutput.\n        address:\n          anyOf:\n            - $ref: '#/components/schemas/Ed25519Address'\n        amount:\n          type: integer\n          description: The amount of tokens to deposit with this SigLockedDustAllowanceOutput output.\n      required:\n        - type\n        - address\n        - amount\n\n    Ed25519Address:\n      description: The Ed25519 address.\n      properties:\n        type:\n          type: integer\n          description: Set to value 0 to denote an Ed25519 Address.\n        address:\n          type: string\n          description: The hex-encoded BLAKE2b-256 hash of the Ed25519 public key.\n      required:\n        - type\n        - address\n\n    SignatureUnlockBlock:\n      description: Defines an unlock block containing signature(s) unlocking input(s).\n      properties:\n        type:\n          type: integer\n          description: Denotes a Signature Unlock Block.\n        signature:\n          type: object\n          oneOf:\n            - $ref: '#/components/schemas/Ed25519Signature'\n      required:\n        - type\n        - signature\n\n    Ed25519Signature:\n      description: The Ed25519 signature.\n      properties:\n        type:\n          type: integer\n          description: Set to value 0 to denote an Ed25519 Signature.\n        publicKey:\n          type: string\n          description: The public key of the Ed25519 keypair which is used to verify the signature.\n        signature:\n          type: string\n          description: The signature signing the serialized Transaction Essence.\n      required:\n        - type\n        - publicKey\n        - signature\n\n    ReferenceUnlockBlock:\n      description: References a previous unlock block in order to substitute the duplication of the same unlock block data for inputs which unlock through the same data.\n      properties:\n        type:\n          type: integer\n          description: Set to value 1 to denote a Reference Unlock Block.\n        reference:\n          type: integer\n          description: Represents the index of a previous unlock block.\n      required:\n        - type\n        - reference\n\n    MilestonePayload:\n      description: The Milestone Payload to be embedded into a message.\n      properties:\n        type:\n          type: integer\n          description: Set to value 1 to denote a Milestone Payload.\n        index:\n          type: integer\n          description: The index of the milestone.\n        timestamp:\n          type: integer\n          description: The Unix timestamp at which the milestone was issued. The unix timestamp is specified in seconds.\n        parents:\n          description: The identifiers of the messages this milestone  references.\n          type: array\n          items:\n            type: string\n        inclusionMerkleProof:\n          type: string\n          description: 256-bit hash based on the message IDs of all the not-ignored state-mutating transactions referenced by the milestone.\n        nextPoWScore:\n          type: number\n        nextPoWScoreMilestoneIndex:\n          type: number\n        publicKeys:\n          type: array\n          items:\n            type: string\n          description: An array of public keys to validate the signatures. The keys must be in lexicographical order.\n        signatures:\n          type: array\n          items:\n            type: string\n          description: An array of signatures signing the serialized Milestone Essence. The signatures must be in the same order as the specified public keys.\n      required:\n        - type\n        - index\n        - timestamp\n        - parents\n        - inclusionMerkleProof\n        - nextPoWScore\n        - nextPoWScoreMilestoneIndex\n        - publicKeys\n        - signatures\n\n    IndexationPayload:\n      description: The Indexation Payload to be embedded into a message.\n      properties:\n        type:\n          type: integer\n          description: Set to value 2 to denote a Indexation Payload.\n        index:\n          type: string\n          description: The indexation key to find/look up this message. It has a size between 1 and 64 bytes and must be encoded as a hex-string.\n        data:\n          type: string\n          description: The optional data to attach. This may have a length of 0.\n      required:\n        - type\n        - index\n        - data\n\n    TreasuryTransactionPayload:\n      properties:\n        type:\n          type: integer\n          description: Set to value 4 to denote a Treasury Payload.\n        input:\n          allOf:\n            - $ref: '#/components/schemas/TreasuryInput'\n        output:\n          allOf:\n            - $ref: '#/components/schemas/TreasuryOutput'\n      required:\n        - type\n        - input\n        - output\n\n    TreasuryInput:\n      properties:\n        type:\n          type: integer\n          description: Set to value 1 to denote a TreasuryInput.\n        milestoneId:\n          type: string\n      required:\n        - type\n        - milestoneId\n\n    TreasuryOutput:\n      properties:\n        type:\n          type: integer\n          description: Set to value 2 to denote a TreasuryOutput.\n        amount:\n          type: integer\n      required:\n        - type\n        - amount\n\n\n    Peer:\n      description: The peer of a node.\n      properties:\n        id:\n          type: string\n          description: The identifier of the peer.\n        multiAddresses:\n          type: array\n          items:\n            type: string\n          description: The addresses of the peer.\n        alias:\n          type: string\n          description: The alias of the peer.\n        relation:\n          type: string\n          enum:\n            - known\n            - unknown\n            - autopeered\n        connected:\n          type: boolean\n          description: Tells whether the peer is connected or not.\n        gossip:\n          allOf:\n            - $ref: '#/components/schemas/Gossip'\n      required:\n        - id\n        - multiAddresses\n        - relation\n        - connected\n        - gossip\n\n    Gossip:\n      description: Information about the gossip stream with the peer.\n      properties:\n        heartbeat:\n          description: Information about the most recent heartbeat of the peer. The heartbeat is `null` if none has been received yet.\n          allOf:\n            - $ref: '#/components/schemas/Heartbeat'\n          nullable: true\n        metrics:\n          description: Metrics about the gossip stream with the peer.\n          allOf:\n            - $ref: '#/components/schemas/Metrics'\n\n    Heartbeat:\n      properties:\n        solidMilestoneIndex:\n          type: integer\n          description: The most recent milestone that has been solidified by the node.\n        prunedMilestoneIndex:\n          type: integer\n          description: Tells from which starting point the node holds data.\n        latestMilestoneIndex:\n          type: integer\n          description: The most recent milestone known to the node.\n        connectedNeighbors:\n          type: integer\n          description: Tells how many connected peers the node has.\n        syncedNeighbors:\n          type: integer\n          description: Tells how many synced peers the node has.\n\n    Metrics:\n      properties:\n        newMessages:\n          type: integer\n          description: The number of received messages that were new for the node.\n        knownMessages:\n          type: integer\n          description: The number of received messages that already were known to the node.\n        receivedMessages:\n          type: integer\n          description: The number of received messages from the peer.\n        receivedMessageRequests:\n          type: integer\n          description: The number of received message requests from the peer.\n        receivedMilestoneRequests:\n          type: integer\n          description: The number of received milestone requests from the peer.\n        receivedHeartbeats:\n          type: integer\n          description: The number of received heartbeats from the peer.\n        sentMessages:\n          type: integer\n          description: The number of sent messages to the peer.\n        sentMessageRequests:\n          type: integer\n          description: The number of sent message requests to the peer.\n        sentMilestoneRequests:\n          type: integer\n          description: The number of sent milestone requests to the peer.\n        sentHeartbeats:\n          type: integer\n          description: The number of sent heartbeats to the peer.\n        droppedPackets:\n          type: integer\n          description: The number of dropped packets.\n      required:\n        - newMessages\n        - knownMessages\n        - receivedMessages\n        - receivedMessageRequests\n        - receivedMilestoneRequests\n        - receivedHeartbeats\n        - sentMessages\n        - sentMessageRequests\n        - sentMilestoneRequests\n        - sentHeartbeats\n        - droppedPackets\n\n    ReceiptTuple:\n      description: Contains a receipt and the index of the milestone which contained the receipt.\n      properties:\n        receipt:\n          $ref: '#/components/schemas/ReceiptPayload'\n        milestoneIndex:\n          type: integer\n      required:\n        - receipt\n        - milestoneIndex\n\n    ReceiptPayload:\n      description: Contains a receipt and the index of the milestone which contained the receipt.\n      properties:\n        migratedAt:\n          type: integer\n        final:\n          type: boolean\n        funds:\n          type: array\n          items:\n            $ref: '#/components/schemas/MigratedFundsEntry'\n        transaction:\n          $ref: '#/components/schemas/TreasuryTransactionPayload'\n      required:\n        - migratedAt\n        - final\n        - funds\n        - transaction\n\n    MigratedFundsEntry:\n      properties:\n        tailTransactionHash:\n          type: string\n        address:\n          oneOf:\n            - $ref: '#/components/schemas/Ed25519Address'\n        deposit:\n          type: integer\n      required:\n        - tailTransactionHash\n        - address\n        - deposit\n\n    ErrorResponse:\n      description: The error format.\n      properties:\n        error:\n          type: object\n          properties:\n            code:\n              type: string\n              description: The application error code.\n            message:\n              type: string\n              description: The error reason.\n          required:\n            - code\n            - message\n      required:\n        - error\n\n    ForbiddenResponse:\n      description: Indicates that this endpoint is not available for public use.\n      allOf:\n        - $ref: '#/components/schemas/ErrorResponse'\n      example:\n        error:\n          code: 403\n          message: not available for public use\n\n    ServiceUnavailableResponse:\n      description: Indicates that the service is unavailable.\n      allOf:\n        - $ref: '#/components/schemas/ErrorResponse'\n      example:\n        error:\n          code: 503\n          message: service unavailable\n\n    BadRequestResponse:\n      description: Indicates that the request was bad.\n      allOf:\n        - $ref: '#/components/schemas/ErrorResponse'\n      example:\n        error:\n          code: 400\n          message: invalid data provided\n\n    NotFoundResponse:\n      description: Indicates that the data was not found.\n      allOf:\n        - $ref: '#/components/schemas/ErrorResponse'\n      example:\n        error:\n          code: 404\n          message: could not find data\n\n    InternalErrorResponse:\n      description: Indicates that the server encountered an unexpected condition, which prevented it from fulfilling the request by the client.\n      allOf:\n        - $ref: '#/components/schemas/ErrorResponse'\n      example:\n        error:\n          code: 500\n          message: internal server error\n\n    InfoResponse:\n      description: Returns general information about the node.\n      properties:\n        data:\n          type: object\n          properties:\n            name:\n              type: string\n              description: The name of the node.\n            version:\n              type: string\n              description: The semantic version of the node.\n            isHealthy:\n              type: boolean\n              description: Tells whether the node is healthy or not.\n            networkId:\n              type: string\n              description: Tells on which network the nodes operates on.\n            bech32HRP:\n              type: string\n              description: Tells whether the node supports mainnet or testnet addresses. Value `iota` indicates that the node supports mainnet addresses. Value `atoi` indicates that the node supports testnet addresses.\n            minPoWScore:\n              description: The Proof-of-Work difficulty for a message to be sent over the network to mitigate spam.\n              type: number\n              format: float\n            messagesPerSecond:\n              description: The current rate of new messages per second.\n              type: number\n              format: float\n            referencedMessagesPerSecond:\n              description: The current rate of referenced messages per second.\n              type: number\n              format: float\n            referencedRate:\n              description: The ratio of referenced messages in relation to new messages of the last confirmed milestone.\n              type: number\n              format: float\n            latestMilestoneTimestamp:\n              type: integer\n              description: The timestamp of the latest seen milestone.\n            latestMilestoneIndex:\n              type: integer\n              description: The most recent milestone known to the node.\n            confirmedMilestoneIndex:\n              type: integer\n              description: The most recent milestone that has been confirmed by the node.\n            pruningIndex:\n              type: integer\n              description: Tells from which starting point the node holds data.\n            features:\n              description: The features that are supported by the node. For example, a node could support the Proof-of-Work (PoW) feature, which would allow the PoW to be performed by the node itself.\n              type: array\n              items:\n                type: string\n          required:\n            - name\n            - version\n            - isHealthy\n            - networkId\n            - bech32HRP\n            - minPoWScore\n            - messagesPerSecond\n            - referencedMessagesPerSecond\n            - referencedRate\n            - latestMilestoneTimestamp\n            - latestMilestoneIndex\n            - confirmedMilestoneIndex\n            - pruningIndex\n            - features\n      required:\n        - data\n\n    TipsResponse:\n      description: Returns tips that are ideal for attaching a message.\n      properties:\n        data:\n          type: object\n          properties:\n            tipMessageIds:\n              type: array\n              items:\n                type: string\n              description: The message identifiers that can be used to a attach a message to.\n          required:\n            - tipMessageIds\n      required:\n        - data\n\n    SubmitMessageRequest:\n      description: Submits a message to the node.\n      properties:\n        networkId:\n          type: string\n          description: Network identifier. This field signifies for which network the message is meant for. It also tells which protocol rules apply to the message. It is computed out of the first 8 bytes of the `BLAKE2b-256` hash of the concatenation of the network type and protocol version string.\n        parentMessageIds:\n          type: array\n          description: The identifiers of the messages this message references.\n          items:\n            type: string\n        payload:\n          oneOf:\n            - $ref: '#/components/schemas/TransactionPayload'\n            - $ref: '#/components/schemas/MilestonePayload'\n            - $ref: '#/components/schemas/IndexationPayload'\n            - $ref: '#/components/schemas/TreasuryTransactionPayload'\n            - $ref: '#/components/schemas/ReceiptPayload'\n        nonce:\n          type: string\n          description: The nonce which lets this message fulfill the Proof-of-Work requirement.\n\n    SubmitMessageResponse:\n      description: Returns the message identifier of the submitted message.\n      properties:\n        data:\n          type: object\n          properties:\n            messageId:\n              type: string\n              description: The message identifier of the submitted message.\n          required:\n            - messageId\n      required:\n        - data\n\n    MessagesFindResponse:\n      description: Searches for messages matching a given indexation key.\n      properties:\n        data:\n          type: object\n          properties:\n            index:\n              type: string\n              description: The provided hex-encoded indexation key that was used to search for.\n            maxResults:\n              type: integer\n              description: The number of results it can return at most.\n            count:\n              type: integer\n              description: The actual number of found results.\n            messageIds:\n              type: array\n              items:\n                type: string\n              description: The identifiers of the found messages that match the given indexation key.\n          required:\n            - index\n            - maxResults\n            - count\n            - messageIds\n      required:\n        - data\n\n    MessageMetadataResponse:\n      description: Returns the metadata of a given message.\n      properties:\n        data:\n          type: object\n          properties:\n            messageId:\n              type: string\n              description: The identifier of the message.\n            parentMessageIds:\n              type: array\n              description: The identifiers of the messages this message references.\n              items:\n                type: string\n            isSolid:\n              type: boolean\n              description: Tells if the message could get solidified by the node or not.\n            referencedByMilestoneIndex:\n              type: integer\n              nullable: true\n              description: Tells which milestone references this message. If `null` the message was not referenced by a milestone yet.\n            milestoneIndex:\n              type: integer\n              description: If set, this message can be considered as a valid milestone message. This field therefore describes the milestone index of the involved milestone. A message can be considered as a valid milestone message if the milestone payload is valid and if the referenced parents in the milestone payload do match the referenced parents in the message itself. Note it's possible to have different milestone messages that all represent the same milestone.\n            ledgerInclusionState:\n              type: string\n              enum:\n                - included\n                - conflicting\n                - noTransaction\n              description: If `included`, the message contains a transaction that has been included in the ledger. If `conflicitng`, the message contains a transaction that has not been included in the ledger because it conflicts with another transaction. If the message does not contain a transaction, `ledgerInclusionState` is set to `noTransaction`.\n            conflictReason:\n              type: integer\n              description: \"Defines the reason why a message is marked as conflicting. Value `1` denotes that the referenced UTXO was already spent. Value `2`denotes that the referenced UTXO was already spent while confirming this milestone. Value `3` denotes that the referenced UTXO cannot be found. Value `4` denotes that the sum of the inputs and output values does not match. Value `5` denotes that the unlock block signature is invalid. Value `6` denotes that the input or output type used is unsupported. Value `7` denotes that the used address type is unsupported. Value `8` denotes that the dust allowance for the address is invalid. Value `9` denotes that the semantic validation failed.\"\n            shouldPromote:\n              type: boolean\n              description: Tells if the message should be promoted to get more likely picked up by the Coordinator.\n            shouldReattach:\n              type: boolean\n              description: Tells if the message should be reattached.\n          required:\n            - messageId\n            - parentMessageIds\n            - isSolid\n      required:\n        - data\n\n    MessageResponse:\n      description: Returns a given message.\n      properties:\n        data:\n          type: object\n          properties:\n            allOf:\n              $ref: '#/components/schemas/Message'\n      required:\n        - data\n\n    MessageChildrenResponse:\n      description: Returns the children of a given message.\n      properties:\n        data:\n          type: object\n          properties:\n            messageId:\n              type: string\n              description: The message identifier of the given message that was used to look up its children.\n            maxResults:\n              type: integer\n              description: The number of results it can return at most.\n            count:\n              type: integer\n              description: The actual number of found results.\n            childrenMessageIds:\n              type: array\n              items:\n                type: string\n              description: The message identifiers of the found children.\n          required:\n            - messageId\n            - maxResults\n            - count\n            - childrenMessageIds\n      required:\n        - data\n\n    OutputResponse:\n      description: Returns an output.\n      properties:\n        data:\n          type: object\n          properties:\n            messageId:\n              type: string\n              description: The message identifier that references the output.\n            transactionId:\n              type: string\n              description: The identifier of the transaction.\n            outputIndex:\n              type: integer\n              description: The index of the output.\n            isSpent:\n              type: boolean\n              description: Tells if the output is spent or not.\n            output:\n              anyOf:\n                - $ref: '#/components/schemas/SigLockedSingleOutput'\n                - $ref: '#/components/schemas/SigLockedDustAllowanceOutput'\n            ledgerIndex:\n              type: integer\n              description: The current ledger index for which the request was made.\n          required:\n            - messageId\n            - transactionId\n            - outputIndex\n            - isSpent\n            - output\n            - ledgerIndex\n      required:\n        - data\n\n    BalanceAddressResponse:\n      description: Returns the balance of an address.\n      properties:\n        data:\n          type: object\n          properties:\n            addressType:\n              type: integer\n              description: The type of the address. Value `0` denotes a Ed25519 address.\n            address:\n              type: string\n              description: The hex-encoded Ed25519 address.\n            balance:\n              type: integer\n              description: The computed balance for the address.\n            dustAllowed:\n              type: boolean\n              description: Tells whether the address can receive dust or not.\n            ledgerIndex:\n              type: integer\n              description: The current ledger index for which the request was made.\n          required:\n            - addressType\n            - address\n            - balance\n            - dustAllowed\n            - ledgerIndex\n      required:\n        - data\n\n\n    OutputsAddressResponse:\n      properties:\n        data:\n          type: object\n          properties:\n            addressType:\n              type: integer\n              description: The type of the address. Value `0` denotes a Ed25519 address.\n            address:\n              type: string\n              description: The hex-encoded Ed25519 address.\n            maxResults:\n              type: integer\n              description: The number of results it can return at most.\n            count:\n              type: integer\n              description: The actual number of found results.\n            outputIds:\n              type: array\n              items:\n                type: string\n              description: The identifiers of the outputs that use a certain address.\n            ledgerIndex:\n              type: integer\n              description: The current ledger index for which the request was made.\n          required:\n            - addressType\n            - address\n            - maxResults\n            - count\n            - outputIds\n            - ledgerIndex\n      required:\n        - data\n\n    ReceiptsResponse:\n      properties:\n        data:\n          type: object\n          properties:\n            receipts:\n              type: array\n              items:\n                $ref: '#/components/schemas/ReceiptTuple'\n          required:\n            - receipts\n      required:\n        - data\n\n    TreasuryResponse:\n      properties:\n        data:\n          type: object\n          properties:\n            milestoneId:\n              type: string\n            amount:\n              type: integer\n          required:\n            - milestoneId\n            - amount\n      required:\n        - data\n\n    MilestoneResponse:\n      description: Returns information about a milestone.\n      properties:\n        data:\n          type: object\n          properties:\n            index:\n              type: integer\n              description: The index number of the milestone.\n            messageId:\n              type: string\n              description: The identifier of a message which describes this milestone. Note that different messages could describe the same milestone.\n            timestamp:\n              type: integer\n              description: The timestamp of when the  milestone was issued.\n          required:\n            - index\n            - messageId\n            - timestamp\n      required:\n        - data\n\n    UTXOChangesResponse:\n      description: Returns all UTXO changes of the given milestone.\n      properties:\n        data:\n          type: object\n          properties:\n            index:\n              type: integer\n              description: The index number of the milestone.\n            createdOutputs:\n              description: The created outputs of the given milestone.\n              type: array\n              items:\n                type: string\n            consumedOutputs:\n              description: The consumed outputs of the given milestone.\n              type: array\n              items:\n                type: string\n          required:\n            - index\n            - createdOutputs\n            - consumedOutputs\n      required:\n        - data\n\n    PeersResponse:\n      description: Returns all peers of the node.\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Peer'\n      required:\n        - data\n\n    PeerResponse:\n      description: Returns a given peer of the node.\n      properties:\n        data:\n          allOf:\n            - $ref: '#/components/schemas/Peer'\n      required:\n        - data\n\n    AddPeerRequest:\n      description: Adds a given peer to the node.\n      properties:\n        multiAddress:\n          type: string\n        alias:\n          type: string\n      required:\n        - multiAddress\n\n    AddPeerResponse:\n      description: Returns information about an added peer.\n      properties:\n        data:\n          allOf:\n            - $ref: '#/components/schemas/Peer'\n      required:\n        - data\n",
			"canonicalURL": "/github.com/iotaledger/tips@907114a2c769640403830d0bd524fd03a64d42cb/-/blob/tips/TIP-0013/rest-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/iotaledger/tips/blob/907114a2c769640403830d0bd524fd03a64d42cb/tips/TIP-0013/rest-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "notImplemented: path \"/api/v1/messages/{messageId}\": get: responses: 200: contents: application/json: generate schema: field data: field allOf: field payload: oneOf: collect variants: oneOf[0]: field essence: oneOf: collect variants: oneOf[0]: field outputs: item: anyOf: complex anyOf not implemented",
	"NotImplemented": [
		"complex anyOf"
	]
}